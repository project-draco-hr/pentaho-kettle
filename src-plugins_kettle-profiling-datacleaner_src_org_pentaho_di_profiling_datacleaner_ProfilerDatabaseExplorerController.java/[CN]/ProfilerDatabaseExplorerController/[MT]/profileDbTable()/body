{
  getDbController();
  this.dbExplorerController.close();
  final DatabaseMeta dbMeta=this.dbExplorerController.getDatabaseMeta();
  final String tableName=this.dbExplorerController.getSelectedTable();
  final String schemaName=this.dbExplorerController.getSelectedSchema();
  System.out.println("Database: " + dbMeta.getName());
  System.out.println("Table: " + dbMeta.getQuotedSchemaTableCombination(schemaName,tableName));
  System.out.println("Database: " + dbMeta.getName());
  BootstrapOptions bootstrapOptions=new BootstrapOptions(){
    public Datastore getSingleDatastore(    DatastoreCatalog catalog){
      try {
        return new JdbcDatastore(dbMeta.getName(),dbMeta.getURL(),dbMeta.getDriverClass(),dbMeta.getUsername(),dbMeta.getPassword());
      }
 catch (      KettleDatabaseException e) {
        throw new RuntimeException(e);
      }
    }
    @Override public boolean isSingleDatastoreMode(){
      return true;
    }
    @Override public boolean isCommandLineMode(){
      return false;
    }
    @Override public ExitActionListener getExitActionListener(){
      return null;
    }
    @Override public CliArguments getCommandLineArguments(){
      return null;
    }
  }
;
  Bootstrap bootstrap=new Bootstrap(bootstrapOptions);
  bootstrap.run();
}
