{
  try {
    dynamicCommandField=rep.getStepAttributeBoolean(id_step,"dynamicCommandField");
    command=rep.getStepAttributeString(id_step,"command");
    commandfieldname=rep.getStepAttributeString(id_step,"commandfieldname");
    serverName=rep.getStepAttributeString(id_step,"servername");
    port=rep.getStepAttributeString(id_step,"port");
    userName=rep.getStepAttributeString(id_step,"userName");
    password=Encr.decryptPasswordOptionallyEncrypted(rep.getStepAttributeString(id_step,"password"));
    usePrivateKey=rep.getStepAttributeBoolean(id_step,"usePrivateKey");
    keyFileName=rep.getStepAttributeString(id_step,"keyFileName");
    passPhrase=Encr.decryptPasswordOptionallyEncrypted(rep.getStepAttributeString(id_step,"passPhrase"));
    stdOutFieldName=rep.getStepAttributeString(id_step,"stdOutFieldName");
    stdErrFieldName=rep.getStepAttributeString(id_step,"stdErrFieldName");
    timeOut=rep.getStepAttributeString(id_step,"timeOut");
    proxyHost=rep.getStepAttributeString(id_step,"proxyHost");
    proxyPort=rep.getStepAttributeString(id_step,"proxyPort");
    proxyUsername=rep.getStepAttributeString(id_step,"proxyUsername");
    proxyPassword=Encr.decryptPasswordOptionallyEncrypted(rep.getStepAttributeString(id_step,"proxyPassword"));
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SSHMeta.Exception.UnexpectedErrorReadingStepInfo"),e);
  }
}
