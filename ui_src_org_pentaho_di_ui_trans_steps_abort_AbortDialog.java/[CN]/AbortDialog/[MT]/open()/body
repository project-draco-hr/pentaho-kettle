{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"AbortDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"AbortDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlRowThreshold=new Label(shell,SWT.RIGHT);
  wlRowThreshold.setText(BaseMessages.getString(PKG,"AbortDialog.RowThreshold.Label"));
  props.setLook(wlRowThreshold);
  fdlRowThreshold=new FormData();
  fdlRowThreshold.left=new FormAttachment(0,0);
  fdlRowThreshold.right=new FormAttachment(middle,-margin);
  fdlRowThreshold.top=new FormAttachment(wStepname,margin);
  wlRowThreshold.setLayoutData(fdlRowThreshold);
  wRowThreshold=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wRowThreshold.setText("");
  props.setLook(wRowThreshold);
  wRowThreshold.addModifyListener(lsMod);
  wRowThreshold.setToolTipText(BaseMessages.getString(PKG,"AbortDialog.RowThreshold.Tooltip"));
  wRowThreshold.addModifyListener(lsMod);
  fdRowThreshold=new FormData();
  fdRowThreshold.left=new FormAttachment(middle,0);
  fdRowThreshold.top=new FormAttachment(wStepname,margin);
  fdRowThreshold.right=new FormAttachment(100,0);
  wRowThreshold.setLayoutData(fdRowThreshold);
  wlMessage=new Label(shell,SWT.RIGHT);
  wlMessage.setText(BaseMessages.getString(PKG,"AbortDialog.AbortMessage.Label"));
  props.setLook(wlMessage);
  fdlMessage=new FormData();
  fdlMessage.left=new FormAttachment(0,0);
  fdlMessage.right=new FormAttachment(middle,-margin);
  fdlMessage.top=new FormAttachment(wRowThreshold,margin);
  wlMessage.setLayoutData(fdlMessage);
  wMessage=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wMessage.setText("");
  props.setLook(wMessage);
  wMessage.addModifyListener(lsMod);
  wMessage.setToolTipText(BaseMessages.getString(PKG,"AbortDialog.AbortMessage.Tooltip"));
  wMessage.addModifyListener(lsMod);
  fdMessage=new FormData();
  fdMessage.left=new FormAttachment(middle,0);
  fdMessage.top=new FormAttachment(wRowThreshold,margin);
  fdMessage.right=new FormAttachment(100,0);
  wMessage.setLayoutData(fdMessage);
  wlAlwaysLogRows=new Label(shell,SWT.RIGHT);
  wlAlwaysLogRows.setText(BaseMessages.getString(PKG,"AbortDialog.AlwaysLogRows.Label"));
  props.setLook(wlAlwaysLogRows);
  fdlAlwaysLogRows=new FormData();
  fdlAlwaysLogRows.left=new FormAttachment(0,0);
  fdlAlwaysLogRows.top=new FormAttachment(wMessage,margin);
  fdlAlwaysLogRows.right=new FormAttachment(middle,-margin);
  wlAlwaysLogRows.setLayoutData(fdlAlwaysLogRows);
  wAlwaysLogRows=new Button(shell,SWT.CHECK);
  props.setLook(wAlwaysLogRows);
  wAlwaysLogRows.setToolTipText(BaseMessages.getString(PKG,"AbortDialog.AlwaysLogRows.Tooltip"));
  fdAlwaysLogRows=new FormData();
  fdAlwaysLogRows.left=new FormAttachment(middle,0);
  fdAlwaysLogRows.top=new FormAttachment(wMessage,margin);
  fdAlwaysLogRows.right=new FormAttachment(100,0);
  wAlwaysLogRows.setLayoutData(fdAlwaysLogRows);
  wAlwaysLogRows.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wAlwaysLogRows);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wRowThreshold.addSelectionListener(lsDef);
  wMessage.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
