{
  JobHopMeta hfrom=jobMeta.findJobHopTo(je);
  JobHopMeta hto=jobMeta.findJobHopFrom(je);
  if (hfrom != null && hto != null) {
    if (jobMeta.findJobHop(hfrom.from_entry,hto.to_entry) == null) {
      JobHopMeta hnew=new JobHopMeta(hfrom.from_entry,hto.to_entry);
      jobMeta.addJobHop(hnew);
      spoon.addUndoNew(jobMeta,new JobHopMeta[]{(JobHopMeta)hnew.clone()},new int[]{jobMeta.indexOfJobHop(hnew)});
    }
  }
  if (hfrom != null) {
    int fromidx=jobMeta.indexOfJobHop(hfrom);
    if (fromidx >= 0) {
      jobMeta.removeJobHop(fromidx);
      spoon.addUndoDelete(jobMeta,new JobHopMeta[]{hfrom},new int[]{fromidx});
    }
  }
  if (hto != null) {
    int toidx=jobMeta.indexOfJobHop(hto);
    if (toidx >= 0) {
      jobMeta.removeJobHop(toidx);
      spoon.addUndoDelete(jobMeta,new JobHopMeta[]{hto},new int[]{toidx});
    }
  }
  spoon.refreshTree();
  redraw();
}
