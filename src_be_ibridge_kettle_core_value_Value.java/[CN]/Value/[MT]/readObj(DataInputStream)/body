{
  int theType=dis.readInt();
  newValue(theType);
  int nameLength=dis.readInt();
  StringBuffer nameBuffer=new StringBuffer();
  for (int i=0; i < nameLength; i++)   nameBuffer.append(dis.readChar());
  setName(new String(nameBuffer));
  setLength(dis.readInt(),dis.readInt());
  setNull(dis.readBoolean());
  if (!isNull()) {
switch (getType()) {
case VALUE_TYPE_STRING:
case VALUE_TYPE_BIGNUMBER:
      int dataLength=dis.readInt();
    if (dataLength > 0) {
      StringBuffer val_string=new StringBuffer();
      for (int i=0; i < dataLength; i++)       val_string.append(dis.readChar());
      setValue(val_string.toString());
    }
  if (theType == VALUE_TYPE_BIGNUMBER) {
    try {
      convertString(theType);
    }
 catch (    KettleValueException e) {
      throw new IOException("Unable to convert String to BigNumber while reading from data input stream [" + getString() + "]");
    }
  }
break;
case VALUE_TYPE_DATE:
if (dis.readBoolean()) {
setValue(new Date(dis.readLong()));
}
break;
case VALUE_TYPE_NUMBER:
setValue(dis.readDouble());
break;
case VALUE_TYPE_INTEGER:
setValue(dis.readLong());
break;
case VALUE_TYPE_BOOLEAN:
setValue(dis.readBoolean());
break;
}
}
}
