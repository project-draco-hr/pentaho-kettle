{
  int hash=0;
  if (isNull()) {
switch (getType()) {
case VALUE_TYPE_BOOLEAN:
      hash^=1;
    break;
case VALUE_TYPE_DATE:
  hash^=2;
break;
case VALUE_TYPE_NUMBER:
hash^=4;
break;
case VALUE_TYPE_STRING:
hash^=8;
break;
case VALUE_TYPE_INTEGER:
hash^=16;
break;
case VALUE_TYPE_BIGNUMBER:
hash^=32;
break;
case VALUE_TYPE_NONE:
break;
default :
break;
}
}
 else {
switch (getType()) {
case VALUE_TYPE_BOOLEAN:
hash^=Boolean.valueOf(getBoolean()).hashCode();
break;
case VALUE_TYPE_DATE:
if (getDate() != null) hash^=getDate().hashCode();
break;
case VALUE_TYPE_INTEGER:
case VALUE_TYPE_NUMBER:
hash^=(new Double(getNumber())).hashCode();
break;
case VALUE_TYPE_STRING:
if (getString() != null) hash^=getString().hashCode();
break;
case VALUE_TYPE_BIGNUMBER:
if (getBigNumber() != null) hash^=getBigNumber().hashCode();
break;
case VALUE_TYPE_NONE:
break;
default :
break;
}
}
return hash;
}
