{
  boolean n1=isNull() || (isString() && (getString() == null || getString().length() == 0)) || (isDate() && getDate() == null)|| (isBigNumber() && getBigNumber() == null);
  boolean n2=v.isNull() || (v.isString() && (v.getString() == null || v.getString().length() == 0)) || (v.isDate() && v.getDate() == null)|| (v.isBigNumber() && v.getBigNumber() == null);
  if (n1 && !n2)   return -1;
  if (!n1 && n2)   return 1;
  if (n1 && n2)   return 0;
switch (getType()) {
case VALUE_TYPE_BOOLEAN:
{
      if (getBoolean() && v.getBoolean() || !getBoolean() && !v.getBoolean())       return 0;
      if (getBoolean() && !v.getBoolean())       return 1;
      return -1;
    }
case VALUE_TYPE_DATE:
{
    return Double.compare(getNumber(),v.getNumber());
  }
case VALUE_TYPE_NUMBER:
{
  return Double.compare(getNumber(),v.getNumber());
}
case VALUE_TYPE_STRING:
{
String one=Const.rtrim(getString());
String two=Const.rtrim(v.getString());
if (caseInsensitive) return one.compareToIgnoreCase(two);
 else return one.compareTo(two);
}
case VALUE_TYPE_INTEGER:
{
return Double.compare(getNumber(),v.getNumber());
}
case VALUE_TYPE_BIGNUMBER:
{
return getBigNumber().compareTo(v.getBigNumber());
}
}
return 0;
}
