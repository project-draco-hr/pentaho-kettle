{
  setValue(metaData);
  setName(metaData.getName());
  try {
    setNull(dis.readBoolean());
    if (!isNull()) {
switch (getType()) {
case VALUE_TYPE_STRING:
        int dataLength=dis.readInt();
      if (dataLength > 0) {
        StringBuffer val_string=new StringBuffer();
        for (int i=0; i < dataLength; i++)         val_string.append(dis.readChar());
        setValue(val_string.toString());
      }
    if (metaData.isBigNumber())     convertString(metaData.getType());
  break;
case VALUE_TYPE_DATE:
if (dis.readBoolean()) {
  setValue(new Date(dis.readLong()));
}
break;
case VALUE_TYPE_NUMBER:
setValue(dis.readDouble());
break;
case VALUE_TYPE_INTEGER:
setValue(dis.readLong());
break;
case VALUE_TYPE_BOOLEAN:
setValue(dis.readBoolean());
break;
}
}
}
 catch (EOFException e) {
throw new KettleEOFException("End of file reached",e);
}
catch (Exception e) {
throw new KettleEOFException("Error reading value data from stream",e);
}
}
