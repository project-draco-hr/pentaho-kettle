{
  meta=(HTTPMeta)smi;
  data=(HTTPData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    data.outputRowMeta=getInputRowMeta().clone();
    data.inputRowMeta=getInputRowMeta();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    if (meta.isUrlInField()) {
      if (Const.isEmpty(meta.getUrlField())) {
        logError(BaseMessages.getString(PKG,"HTTP.Log.NoField"));
        throw new KettleException(BaseMessages.getString(PKG,"HTTP.Log.NoField"));
      }
      if (data.indexOfUrlField < 0) {
        String realUrlfieldName=environmentSubstitute(meta.getUrlField());
        data.indexOfUrlField=getInputRowMeta().indexOfValue(realUrlfieldName);
        if (data.indexOfUrlField < 0) {
          logError(BaseMessages.getString(PKG,"HTTP.Log.ErrorFindingField",realUrlfieldName));
          throw new KettleException(BaseMessages.getString(PKG,"HTTP.Exception.ErrorFindingField",realUrlfieldName));
        }
      }
    }
 else {
      data.realUrl=environmentSubstitute(meta.getUrl());
    }
    int nrHeaders=meta.getHeaderField().length;
    if (nrHeaders > 0)     data.useHeaderParameters=true;
    data.header_parameters_nrs=new int[nrHeaders];
    data.headerParameters=new NameValuePair[nrHeaders];
    for (int i=0; i < nrHeaders; i++) {
      int fieldIndex=data.inputRowMeta.indexOfValue(meta.getHeaderField()[i]);
      if (fieldIndex < 0) {
        logError(BaseMessages.getString(PKG,"HTTP.Exception.ErrorFindingField") + meta.getHeaderField()[i] + "]");
        throw new KettleStepException(BaseMessages.getString(PKG,"HTTP.Exception.ErrorFindingField",meta.getHeaderField()[i]));
      }
      data.header_parameters_nrs[i]=fieldIndex;
      data.headerParameters[i]=new NameValuePair(environmentSubstitute(meta.getHeaderParameter()[i]),data.outputRowMeta.getString(r,data.header_parameters_nrs[i]));
    }
  }
  try {
    Object[] outputRowData=execHttp(getInputRowMeta(),r);
    putRow(data.outputRowMeta,outputRowData);
    if (checkFeedback(getLinesRead())) {
      if (log.isDetailed())       logDetailed(BaseMessages.getString(PKG,"HTTP.LineNumber") + getLinesRead());
    }
  }
 catch (  KettleException e) {
    boolean sendToErrorRow=false;
    String errorMessage=null;
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(BaseMessages.getString(PKG,"HTTP.ErrorInStepRunning") + e.getMessage());
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,null,"HTTP001");
    }
  }
  return true;
}
