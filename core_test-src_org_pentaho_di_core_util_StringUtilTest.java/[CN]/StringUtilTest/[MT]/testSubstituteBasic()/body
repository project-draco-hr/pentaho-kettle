{
  Map<String,String> map=createVariables1("${","}");
  assertEquals("||",StringUtil.substitute("|${EMPTY}|",map,"${","}"));
  assertEquals("|case1|",StringUtil.substitute("|${checkcase}|",map,"${","}"));
  assertEquals("|case2|",StringUtil.substitute("|${CheckCase}|",map,"${","}"));
  assertEquals("|case3|",StringUtil.substitute("|${CHECKCASE}|",map,"${","}"));
  assertEquals("|Arecurse|",StringUtil.substitute("|${recursive1}|",map,"${","}"));
  assertEquals("|recurseB|",StringUtil.substitute("|${recursive3}|",map,"${","}"));
  assertEquals("|ZfinalB|",StringUtil.substitute("|${recursive5}|",map,"${","}"));
  try {
    StringUtil.substitute("|${recursive_all}|",map,"${","}",0);
    fail("recursive check is failing");
  }
 catch (  RuntimeException rex) {
  }
  map=createVariables1("%%","%%");
  assertEquals("||",StringUtil.substitute("|%%EMPTY%%|",map,"%%","%%"));
  assertEquals("|case1|",StringUtil.substitute("|%%checkcase%%|",map,"%%","%%"));
  assertEquals("|case2|",StringUtil.substitute("|%%CheckCase%%|",map,"%%","%%"));
  assertEquals("|case3|",StringUtil.substitute("|%%CHECKCASE%%|",map,"%%","%%"));
  assertEquals("|Arecurse|",StringUtil.substitute("|%%recursive1%%|",map,"%%","%%"));
  assertEquals("|recurseB|",StringUtil.substitute("|%%recursive3%%|",map,"%%","%%"));
  assertEquals("|ZfinalB|",StringUtil.substitute("|%%recursive5%%|",map,"%%","%%"));
  try {
    StringUtil.substitute("|%%recursive_all%%|",map,"%%","%%");
    fail("recursive check is failing");
  }
 catch (  RuntimeException rex) {
  }
  ConcurrentHashMap<String,String> chMap=new ConcurrentHashMap<String,String>(createVariables1("${","}"));
  assertEquals("||",StringUtil.environmentSubstitute("|%%EMPTY%%|",chMap));
  assertEquals("|case1|",StringUtil.environmentSubstitute("|%%checkcase%%|",chMap));
  assertEquals("|case2|",StringUtil.environmentSubstitute("|%%CheckCase%%|",chMap));
  assertEquals("|case3|",StringUtil.environmentSubstitute("|%%CHECKCASE%%|",chMap));
  assertEquals("|Arecurse|",StringUtil.environmentSubstitute("|%%recursive1%%|",chMap));
  assertEquals("|recurseB|",StringUtil.environmentSubstitute("|%%recursive3%%|",chMap));
  assertEquals("|ZfinalB|",StringUtil.environmentSubstitute("|%%recursive5%%|",chMap));
  try {
    StringUtil.environmentSubstitute("|%%recursive_all%%|",chMap);
    fail("recursive check is failing");
  }
 catch (  RuntimeException rex) {
  }
}
