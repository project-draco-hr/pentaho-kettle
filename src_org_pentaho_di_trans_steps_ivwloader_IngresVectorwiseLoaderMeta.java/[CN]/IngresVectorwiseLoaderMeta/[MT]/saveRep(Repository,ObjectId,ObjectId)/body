{
  try {
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    rep.saveStepAttribute(id_transformation,id_step,"table",tablename);
    rep.saveStepAttribute(id_transformation,id_step,"fifo_file_name",fifoFileName);
    rep.saveStepAttribute(id_transformation,id_step,"sql_path",sqlPath);
    rep.saveStepAttribute(id_transformation,id_step,"encoding",encoding);
    rep.saveStepAttribute(id_transformation,id_step,"delimiter",delimiter);
    rep.saveStepAttribute(id_transformation,id_step,"continue_on_error",continueOnError);
    rep.saveStepAttribute(id_transformation,id_step,"error_file_name",errorFileName);
    rep.saveStepAttribute(id_transformation,id_step,"use_standard_conversion",useStandardConversion);
    rep.saveStepAttribute(id_transformation,id_step,"use_dynamic_vnode",useDynamicVNode);
    rep.saveStepAttribute(id_transformation,id_step,"use_SSV_delimiter",useSSV);
    int nrRows=(fieldDatabase.length < fieldStream.length ? fieldStream.length : fieldDatabase.length);
    for (int idx=0; idx < nrRows; idx++) {
      String columnName=(idx < fieldDatabase.length ? fieldDatabase[idx] : "");
      String streamName=(idx < fieldStream.length ? fieldStream[idx] : "");
      rep.saveStepAttribute(id_transformation,id_step,idx,"column_name",columnName);
      rep.saveStepAttribute(id_transformation,id_step,idx,"stream_name",streamName);
    }
    if (databaseMeta != null) {
      rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getObjectId());
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
