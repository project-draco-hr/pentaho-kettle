{
  for (int i=0; i < data.counts.length; i++)   data.counts[i]=0;
  data.distinctObjs=null;
  data.agg=new Object[data.subjectnrs.length];
  data.mean=new double[data.subjectnrs.length];
  data.aggMeta=new RowMeta();
  for (int i=0; i < data.subjectnrs.length; i++) {
    ValueMetaInterface subjMeta=data.inputRowMeta.getValueMeta(data.subjectnrs[i]);
    Object v=null;
    ValueMetaInterface vMeta=null;
switch (meta.getAggregateType()[i]) {
case GroupByMeta.TYPE_GROUP_SUM:
case GroupByMeta.TYPE_GROUP_AVERAGE:
case GroupByMeta.TYPE_GROUP_CUMULATIVE_SUM:
case GroupByMeta.TYPE_GROUP_CUMULATIVE_AVERAGE:
      vMeta=new ValueMeta(meta.getAggregateField()[i],subjMeta.isNumeric() ? subjMeta.getType() : ValueMetaInterface.TYPE_NUMBER);
switch (subjMeta.getType()) {
case ValueMetaInterface.TYPE_BIGNUMBER:
      v=new BigDecimal("0");
    break;
case ValueMetaInterface.TYPE_INTEGER:
  v=new Long(0L);
break;
case ValueMetaInterface.TYPE_NUMBER:
default :
v=new Double(0.0);
break;
}
break;
case GroupByMeta.TYPE_GROUP_STANDARD_DEVIATION:
vMeta=new ValueMeta(meta.getAggregateField()[i],ValueMetaInterface.TYPE_NUMBER);
v=new Double(0.0);
break;
case GroupByMeta.TYPE_GROUP_COUNT_DISTINCT:
case GroupByMeta.TYPE_GROUP_COUNT_ANY:
case GroupByMeta.TYPE_GROUP_COUNT_ALL:
vMeta=new ValueMeta(meta.getAggregateField()[i],ValueMetaInterface.TYPE_INTEGER);
v=new Long(0L);
break;
case GroupByMeta.TYPE_GROUP_FIRST:
case GroupByMeta.TYPE_GROUP_LAST:
case GroupByMeta.TYPE_GROUP_FIRST_INCL_NULL:
case GroupByMeta.TYPE_GROUP_LAST_INCL_NULL:
case GroupByMeta.TYPE_GROUP_MIN:
case GroupByMeta.TYPE_GROUP_MAX:
vMeta=subjMeta.clone();
vMeta.setName(meta.getAggregateField()[i]);
v=r == null ? null : r[data.subjectnrs[i]];
break;
case GroupByMeta.TYPE_GROUP_CONCAT_COMMA:
vMeta=new ValueMeta(meta.getAggregateField()[i],ValueMetaInterface.TYPE_STRING);
v=new StringBuilder();
break;
case GroupByMeta.TYPE_GROUP_CONCAT_STRING:
vMeta=new ValueMeta(meta.getAggregateField()[i],ValueMetaInterface.TYPE_STRING);
v=new StringBuilder();
break;
default :
break;
}
if (meta.getAggregateType()[i] != GroupByMeta.TYPE_GROUP_COUNT_ALL && meta.getAggregateType()[i] != GroupByMeta.TYPE_GROUP_COUNT_DISTINCT && meta.getAggregateType()[i] != GroupByMeta.TYPE_GROUP_COUNT_ANY) {
vMeta.setLength(subjMeta.getLength(),subjMeta.getPrecision());
}
if (v != null) data.agg[i]=v;
data.aggMeta.addValueMeta(vMeta);
}
for (int i=0; i < data.previousSums.length; i++) data.previousSums[i]=null;
for (int i=0; i < data.previousAvgCount.length; i++) {
data.previousAvgCount[i]=0L;
data.previousAvgSum[i]=null;
}
}
