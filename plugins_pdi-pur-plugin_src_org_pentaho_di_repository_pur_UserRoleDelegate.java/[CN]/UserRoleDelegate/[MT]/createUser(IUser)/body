{
  ensureHasPermissions();
  ProxyPentahoUser user=UserRoleHelper.convertToPentahoProxyUser(newUser);
  try {
    ProxyPentahoUser[] existingUsers=userRoleWebService.getUsers();
    if (existsAmong(existingUsers,user)) {
      throw userExistsException();
    }
  }
 catch (  UserRoleException e) {
    throw cannotCreateUserException(newUser,e);
  }
  try {
    userRoleWebService.createUser(user);
    if (newUser instanceof IEEUser) {
      userRoleWebService.setRoles(user,UserRoleHelper.convertToPentahoProxyRoles(((IEEUser)newUser).getRoles()));
    }
    lookupCache.insertUserToLookupSet(newUser);
    fireUserRoleListChange();
  }
 catch (  Exception e) {
    if (e.getCause().toString().contains("org.pentaho.platform.api.engine.security.userroledao.AlreadyExistsException")) {
      throw userExistsException();
    }
    throw cannotCreateUserException(newUser,e);
  }
}
