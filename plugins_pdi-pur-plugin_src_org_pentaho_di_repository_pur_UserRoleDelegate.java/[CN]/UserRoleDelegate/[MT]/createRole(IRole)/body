{
  ensureHasPermissions();
  ProxyPentahoRole role=UserRoleHelper.convertToPentahoProxyRole(newRole);
  try {
    ProxyPentahoRole[] existingRoles=userRoleWebService.getRoles();
    if (existsAmong(existingRoles,role)) {
      throw userExistsException();
    }
  }
 catch (  UserRoleException e) {
    throw cannotCreateRoleException(newRole,e);
  }
  try {
    userRoleWebService.createRole(role);
    userRoleWebService.setUsers(role,UserRoleHelper.convertToPentahoProxyUsers(newRole.getUsers()));
    lookupCache.insertRoleToLookupSet(newRole);
    fireUserRoleListChange();
  }
 catch (  UserRoleException e) {
    throw cannotCreateRoleException(newRole,e);
  }
catch (  Exception e) {
    if (e.getCause().toString().contains("org.pentaho.platform.api.engine.security.userroledao.AlreadyExistsException")) {
      throw roleExistsException();
    }
  }
}
