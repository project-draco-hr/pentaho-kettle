{
  try {
    String hashName=v.getName();
    if (isHeader)     hashName="____header_field____";
    WritableCellFormat cellFormat=(WritableCellFormat)data.formats.get(hashName);
switch (v.getType()) {
case Value.VALUE_TYPE_DATE:
{
        if (!v.isNull() && v.getDate() != null) {
          if (cellFormat == null) {
            if (excelField != null && excelField.getFormat() != null) {
              DateFormat dateFormat=new DateFormat(excelField.getFormat());
              cellFormat=new WritableCellFormat(dateFormat);
            }
 else {
              cellFormat=new WritableCellFormat(DateFormats.FORMAT9);
            }
            data.formats.put(hashName,cellFormat);
          }
          DateTime dateTime=new DateTime(data.positionX,data.positionY,v.getDate(),cellFormat);
          data.sheet.addCell(dateTime);
        }
 else {
          data.sheet.addCell(new EmptyCell(data.positionX,data.positionY));
        }
      }
    break;
case Value.VALUE_TYPE_STRING:
case Value.VALUE_TYPE_BOOLEAN:
case Value.VALUE_TYPE_BINARY:
{
    if (!v.isNull()) {
      if (cellFormat == null) {
        cellFormat=new WritableCellFormat(data.writableFont);
        data.formats.put(hashName,cellFormat);
      }
      Label label=new Label(data.positionX,data.positionY,v.getString(),cellFormat);
      data.sheet.addCell(label);
    }
 else {
      data.sheet.addCell(new EmptyCell(data.positionX,data.positionY));
    }
  }
break;
case Value.VALUE_TYPE_NUMBER:
case Value.VALUE_TYPE_BIGNUMBER:
case Value.VALUE_TYPE_INTEGER:
{
if (cellFormat == null) {
  String format;
  if (excelField != null && excelField.getFormat() != null) {
    format=excelField.getFormat();
  }
 else {
    format="###,###.00";
  }
  NumberFormat numberFormat=new NumberFormat(format);
  cellFormat=new WritableCellFormat(numberFormat);
  data.formats.put(v.getName(),cellFormat);
}
jxl.write.Number number=new jxl.write.Number(data.positionX,data.positionY,v.getNumber(),cellFormat);
data.sheet.addCell(number);
}
break;
default :
break;
}
}
 catch (Exception e) {
logError("Error writing field (" + data.positionX + ","+ data.positionY+ ") : "+ e.toString());
return false;
}
 finally {
data.positionX++;
}
return true;
}
