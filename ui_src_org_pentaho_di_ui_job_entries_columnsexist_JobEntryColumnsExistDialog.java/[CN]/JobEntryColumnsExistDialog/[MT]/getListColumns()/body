{
  if (!Utils.isEmpty(wTablename.getText())) {
    DatabaseMeta databaseMeta=jobMeta.findDatabase(wConnection.getText());
    if (databaseMeta != null) {
      Database database=new Database(loggingObject,databaseMeta);
      database.shareVariablesWith(jobMeta);
      try {
        database.connect();
        String schemaTable=databaseMeta.getQuotedSchemaTableCombination(jobMeta.environmentSubstitute(wSchemaname.getText()),jobMeta.environmentSubstitute(wTablename.getText()));
        RowMetaInterface row=database.getTableFields(schemaTable);
        if (row != null) {
          String[] available=row.getFieldNames();
          wFields.removeAll();
          for (int i=0; i < available.length; i++) {
            wFields.add(available[i]);
          }
          wFields.removeEmptyRows();
          wFields.setRowNums();
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setMessage(BaseMessages.getString(PKG,"JobEntryColumnsExist.GetListColumsNoRow.DialogMessage"));
          mb.setText(BaseMessages.getString(PKG,"System.Dialog.Error.Title"));
          mb.open();
        }
      }
 catch (      Exception e) {
        new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.Error.Title"),BaseMessages.getString(PKG,"JobEntryColumnsExist.ConnectionError2.DialogMessage",wTablename.getText()),e);
      }
 finally {
        database.disconnect();
      }
    }
  }
}
