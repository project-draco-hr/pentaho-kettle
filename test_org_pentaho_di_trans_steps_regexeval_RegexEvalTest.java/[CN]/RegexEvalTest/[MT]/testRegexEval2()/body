{
  TransMeta transMeta=new TransMeta();
  transMeta.setName("regexeval2");
  RegexEvalMeta regexEvalMeta=new RegexEvalMeta();
  regexEvalMeta.setScript("\\d(\\d)\\d");
  regexEvalMeta.setMatcher("field1");
  regexEvalMeta.setResultFieldName("res");
  regexEvalMeta.setAllowCaptureGroupsFlag(true);
  regexEvalMeta.allocate(1);
  regexEvalMeta.getFieldName()[0]="cap";
  regexEvalMeta.getFieldType()[0]=ValueMeta.TYPE_INTEGER;
  StepMeta injectorStep=createInjectorStepForTrans("injector step",transMeta);
  StepMeta dummyStep=createConnectedDummyStepForTrans("dummy step",transMeta,injectorStep);
  StepMeta regexEvalStep=createConnectedStepForTrans("regexeval step",regexEvalMeta,transMeta,dummyStep);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  RowProducer rp=trans.addRowProducer(injectorStep.getName(),0);
  RowStepCollector rc=new RowStepCollector();
  trans.getStepInterface(regexEvalStep.getName(),0).addRowListener(rc);
  trans.startThreads();
  feedSourceRows(rp,createSourceData());
  trans.waitUntilFinished();
  checkRows(createResultData2(),rc.getRowsWritten());
}
