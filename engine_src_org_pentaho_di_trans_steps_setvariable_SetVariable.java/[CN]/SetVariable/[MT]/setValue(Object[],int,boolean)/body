{
  String value=null;
  if (usedefault)   value=environmentSubstitute(meta.getDefaultValue()[i]);
 else {
    int index=data.outputMeta.indexOfValue(meta.getFieldName()[i]);
    if (index < 0) {
      throw new KettleException("Unable to find field [" + meta.getFieldName()[i] + "] in input row");
    }
    ValueMetaInterface valueMeta=data.outputMeta.getValueMeta(index);
    Object valueData=rowData[index];
    if (meta.isUsingFormatting()) {
      value=valueMeta.getString(valueData);
    }
 else {
      value=valueMeta.getCompatibleString(valueData);
    }
  }
  if (value == null)   value="";
  String varname=meta.getVariableName()[i];
  if (Const.isEmpty(varname)) {
    if (Const.isEmpty(value)) {
      throw new KettleException("Variable name nor value was specified on line #" + (i + 1));
    }
 else {
      throw new KettleException("There was no variable name specified for value [" + value + "]");
    }
  }
  Job parentJob=null;
  setVariable(varname,value);
  Trans trans=getTrans();
  trans.setVariable(varname,value);
  while (trans.getParentTrans() != null) {
    trans=trans.getParentTrans();
    trans.setVariable(varname,value);
  }
switch (meta.getVariableType()[i]) {
case SetVariableMeta.VARIABLE_TYPE_JVM:
    System.setProperty(varname,value);
  parentJob=trans.getParentJob();
while (parentJob != null) {
  parentJob.setVariable(varname,value);
  parentJob=parentJob.getParentJob();
}
break;
case SetVariableMeta.VARIABLE_TYPE_ROOT_JOB:
{
parentJob=trans.getParentJob();
while (parentJob != null) {
parentJob.setVariable(varname,value);
parentJob=parentJob.getParentJob();
}
}
break;
case SetVariableMeta.VARIABLE_TYPE_GRAND_PARENT_JOB:
{
parentJob=trans.getParentJob();
if (parentJob != null) {
parentJob.setVariable(varname,value);
}
 else {
throw new KettleStepException("Can't set variable [" + varname + "] on parent job: the parent job is not available");
}
VariableSpace gpJob=trans.getParentJob().getParentJob();
if (gpJob != null) {
gpJob.setVariable(varname,value);
}
 else {
throw new KettleStepException("Can't set variable [" + varname + "] on grand parent job: the grand parent job is not available");
}
}
break;
case SetVariableMeta.VARIABLE_TYPE_PARENT_JOB:
{
parentJob=trans.getParentJob();
if (parentJob != null) {
parentJob.setVariable(varname,value);
}
 else {
throw new KettleStepException("Can't set variable [" + varname + "] on parent job: the parent job is not available");
}
}
break;
default :
break;
}
logBasic(BaseMessages.getString(PKG,"SetVariable.Log.SetVariableToValue",meta.getVariableName()[i],value));
}
