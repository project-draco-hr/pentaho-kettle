{
  if (filename == null) {
    remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,Messages.getString("JobEntryDeleteFile.CheckResult.No_Filename_Is_Defined"),this));
  }
 else {
    remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_OK,Messages.getString("JobEntryDeleteFile.CheckResult.Filename_Is_Defined"),this));
    String realFileName=environmentSubstitute(getFilename());
    FileObject fileObject=null;
    try {
      fileObject=KettleVFS.getFileObject(realFileName);
      if (fileObject != null) {
        if (!fileObject.exists() && isFailIfFileNotExists()) {
          remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,Messages.getString("JobEntryDeleteFile.CheckResult.File_Does_Not_Exist",realFileName),this));
        }
 else         if (!fileObject.exists()) {
          remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_OK,Messages.getString("JobEntryDeleteFile.CheckResult.File_Does_Not_Exist",realFileName),this));
        }
 else {
          remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_OK,Messages.getString("JobEntryDeleteFile.CheckResult.File_Exists",realFileName),this));
        }
        try {
          fileObject.close();
        }
 catch (        IOException ignored) {
        }
      }
 else {
        remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,Messages.getString("JobEntryDeleteFile.CheckResult.Could_Not_Convert_File",filename),this));
      }
    }
 catch (    IOException ex) {
      remarks.add(new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,Messages.getString("JobEntryDeleteFile.ERROR_0008_CheckResult.File_IOException",realFileName,ex.getMessage()),this));
    }
  }
}
