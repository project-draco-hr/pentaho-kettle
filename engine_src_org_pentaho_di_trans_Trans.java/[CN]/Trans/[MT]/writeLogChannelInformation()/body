{
  Database db=null;
  ChannelLogTable channelLogTable=transMeta.getChannelLogTable();
  Trans t=getParentTrans();
  if (t != null) {
    if (channelLogTable.equals(t.getTransMeta().getChannelLogTable()))     return;
  }
  Job j=getParentJob();
  if (j != null) {
    if (channelLogTable.equals(j.getJobMeta().getChannelLogTable()))     return;
  }
  try {
    db=new Database(this,channelLogTable.getDatabaseMeta());
    db.shareVariablesWith(this);
    db.connect();
    db.setCommit(logCommitSize);
    List<LoggingHierarchy> loggingHierarchyList=getLoggingHierarchy();
    for (    LoggingHierarchy loggingHierarchy : loggingHierarchyList) {
      db.writeLogRecord(channelLogTable,LogStatus.START,loggingHierarchy,null);
    }
    db.cleanupLogRecords(channelLogTable);
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"Trans.Exception.UnableToWriteLogChannelInformationToLogTable"),e);
  }
 finally {
    if (!db.isAutoCommit())     db.commit(true);
    db.disconnect();
  }
}
