{
  for (int i=0; i < in.getInputFields().length; i++) {
    TextFileInputField field=in.getInputFields()[i];
    TableItem item;
    if (insertAtTop) {
      item=new TableItem(wFields.table,SWT.NONE,i);
    }
 else {
      if (i >= wFields.table.getItemCount()) {
        item=wFields.table.getItem(i);
      }
 else {
        item=new TableItem(wFields.table,SWT.NONE);
      }
    }
    item.setText(1,Const.NVL(field.getName(),""));
    String type=field.getTypeDesc();
    String format=field.getFormat();
    String position="" + field.getPosition();
    String length="" + field.getLength();
    String prec="" + field.getPrecision();
    String curr=field.getCurrencySymbol();
    String group=field.getGroupSymbol();
    String decim=field.getDecimalSymbol();
    String def=field.getNullString();
    String ifNull=field.getIfNullValue();
    String trim=field.getTrimTypeDesc();
    String rep=field.isRepeated() ? BaseMessages.getString(PKG,"System.Combo.Yes") : BaseMessages.getString(PKG,"System.Combo.No");
    if (type != null) {
      item.setText(2,type);
    }
    if (format != null) {
      item.setText(3,format);
    }
    if (position != null && !"-1".equals(position)) {
      item.setText(4,position);
    }
    if (length != null && !"-1".equals(length)) {
      item.setText(5,length);
    }
    if (prec != null && !"-1".equals(prec)) {
      item.setText(6,prec);
    }
    if (curr != null) {
      item.setText(7,curr);
    }
    if (decim != null) {
      item.setText(8,decim);
    }
    if (group != null) {
      item.setText(9,group);
    }
    if (def != null) {
      item.setText(10,def);
    }
    if (ifNull != null) {
      item.setText(11,ifNull);
    }
    if (trim != null) {
      item.setText(12,trim);
    }
    if (rep != null) {
      item.setText(13,rep);
    }
  }
}
