{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"XMLOutputDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wFileTab=new CTabItem(wTabFolder,SWT.NONE);
  wFileTab.setText(BaseMessages.getString(PKG,"XMLOutputDialog.FileTab.Tab"));
  Composite wFileComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFileComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wFileComp.setLayout(fileLayout);
  wlFilename=new Label(wFileComp,SWT.RIGHT);
  wlFilename.setText(BaseMessages.getString(PKG,"XMLOutputDialog.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(0,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(BaseMessages.getString(PKG,"XMLOutputDialog.Browse.Button"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(0,0);
  wbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(0,margin);
  fdFilename.right=new FormAttachment(wbFilename,-margin);
  wFilename.setLayoutData(fdFilename);
  wlDoNotOpenNewFileInit=new Label(wFileComp,SWT.RIGHT);
  wlDoNotOpenNewFileInit.setText(BaseMessages.getString(PKG,"XMLOutputDialog.DoNotOpenNewFileInit.Label"));
  props.setLook(wlDoNotOpenNewFileInit);
  fdlDoNotOpenNewFileInit=new FormData();
  fdlDoNotOpenNewFileInit.left=new FormAttachment(0,0);
  fdlDoNotOpenNewFileInit.top=new FormAttachment(wFilename,margin);
  fdlDoNotOpenNewFileInit.right=new FormAttachment(middle,-margin);
  wlDoNotOpenNewFileInit.setLayoutData(fdlDoNotOpenNewFileInit);
  wDoNotOpenNewFileInit=new Button(wFileComp,SWT.CHECK);
  wDoNotOpenNewFileInit.setToolTipText(BaseMessages.getString(PKG,"XMLOutputDialog.DoNotOpenNewFileInit.Tooltip"));
  props.setLook(wDoNotOpenNewFileInit);
  fdDoNotOpenNewFileInit=new FormData();
  fdDoNotOpenNewFileInit.left=new FormAttachment(middle,0);
  fdDoNotOpenNewFileInit.top=new FormAttachment(wFilename,margin);
  fdDoNotOpenNewFileInit.right=new FormAttachment(100,0);
  wDoNotOpenNewFileInit.setLayoutData(fdDoNotOpenNewFileInit);
  wDoNotOpenNewFileInit.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlExtension=new Label(wFileComp,SWT.RIGHT);
  wlExtension.setText(BaseMessages.getString(PKG,"XMLOutputDialog.Extension.Label"));
  props.setLook(wlExtension);
  fdlExtension=new FormData();
  fdlExtension.left=new FormAttachment(0,0);
  fdlExtension.top=new FormAttachment(wDoNotOpenNewFileInit,margin);
  fdlExtension.right=new FormAttachment(middle,-margin);
  wlExtension.setLayoutData(fdlExtension);
  wExtension=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wExtension.setText("");
  props.setLook(wExtension);
  wExtension.addModifyListener(lsMod);
  fdExtension=new FormData();
  fdExtension.left=new FormAttachment(middle,0);
  fdExtension.top=new FormAttachment(wDoNotOpenNewFileInit,margin);
  fdExtension.right=new FormAttachment(100,0);
  wExtension.setLayoutData(fdExtension);
  wlAddStepnr=new Label(wFileComp,SWT.RIGHT);
  wlAddStepnr.setText(BaseMessages.getString(PKG,"XMLOutputDialog.AddStepNr.Label"));
  props.setLook(wlAddStepnr);
  fdlAddStepnr=new FormData();
  fdlAddStepnr.left=new FormAttachment(0,0);
  fdlAddStepnr.top=new FormAttachment(wExtension,margin);
  fdlAddStepnr.right=new FormAttachment(middle,-margin);
  wlAddStepnr.setLayoutData(fdlAddStepnr);
  wAddStepnr=new Button(wFileComp,SWT.CHECK);
  props.setLook(wAddStepnr);
  fdAddStepnr=new FormData();
  fdAddStepnr.left=new FormAttachment(middle,0);
  fdAddStepnr.top=new FormAttachment(wExtension,margin);
  fdAddStepnr.right=new FormAttachment(100,0);
  wAddStepnr.setLayoutData(fdAddStepnr);
  wAddStepnr.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddDate=new Label(wFileComp,SWT.RIGHT);
  wlAddDate.setText(BaseMessages.getString(PKG,"XMLOutputDialog.AddDate.Label"));
  props.setLook(wlAddDate);
  fdlAddDate=new FormData();
  fdlAddDate.left=new FormAttachment(0,0);
  fdlAddDate.top=new FormAttachment(wAddStepnr,margin);
  fdlAddDate.right=new FormAttachment(middle,-margin);
  wlAddDate.setLayoutData(fdlAddDate);
  wAddDate=new Button(wFileComp,SWT.CHECK);
  props.setLook(wAddDate);
  fdAddDate=new FormData();
  fdAddDate.left=new FormAttachment(middle,0);
  fdAddDate.top=new FormAttachment(wAddStepnr,margin);
  fdAddDate.right=new FormAttachment(100,0);
  wAddDate.setLayoutData(fdAddDate);
  wAddDate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddTime=new Label(wFileComp,SWT.RIGHT);
  wlAddTime.setText(BaseMessages.getString(PKG,"XMLOutputDialog.AddTime.Label"));
  props.setLook(wlAddTime);
  fdlAddTime=new FormData();
  fdlAddTime.left=new FormAttachment(0,0);
  fdlAddTime.top=new FormAttachment(wAddDate,margin);
  fdlAddTime.right=new FormAttachment(middle,-margin);
  wlAddTime.setLayoutData(fdlAddTime);
  wAddTime=new Button(wFileComp,SWT.CHECK);
  props.setLook(wAddTime);
  fdAddTime=new FormData();
  fdAddTime.left=new FormAttachment(middle,0);
  fdAddTime.top=new FormAttachment(wAddDate,margin);
  fdAddTime.right=new FormAttachment(100,0);
  wAddTime.setLayoutData(fdAddTime);
  wAddTime.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlSpecifyFormat=new Label(wFileComp,SWT.RIGHT);
  wlSpecifyFormat.setText(BaseMessages.getString(PKG,"XMLOutputDialog.SpecifyFormat.Label"));
  props.setLook(wlSpecifyFormat);
  fdlSpecifyFormat=new FormData();
  fdlSpecifyFormat.left=new FormAttachment(0,0);
  fdlSpecifyFormat.top=new FormAttachment(wAddTime,margin);
  fdlSpecifyFormat.right=new FormAttachment(middle,-margin);
  wlSpecifyFormat.setLayoutData(fdlSpecifyFormat);
  wSpecifyFormat=new Button(wFileComp,SWT.CHECK);
  props.setLook(wSpecifyFormat);
  wSpecifyFormat.setToolTipText(BaseMessages.getString(PKG,"XMLOutputDialog.SpecifyFormat.Tooltip"));
  fdSpecifyFormat=new FormData();
  fdSpecifyFormat.left=new FormAttachment(middle,0);
  fdSpecifyFormat.top=new FormAttachment(wAddTime,margin);
  fdSpecifyFormat.right=new FormAttachment(100,0);
  wSpecifyFormat.setLayoutData(fdSpecifyFormat);
  wSpecifyFormat.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setDateTimeFormat();
    }
  }
);
  String dats[]=Const.getDateFormats();
  wlDateTimeFormat=new Label(wFileComp,SWT.RIGHT);
  wlDateTimeFormat.setText(BaseMessages.getString(PKG,"XMLOutputDialog.DateTimeFormat.Label"));
  props.setLook(wlDateTimeFormat);
  fdlDateTimeFormat=new FormData();
  fdlDateTimeFormat.left=new FormAttachment(0,0);
  fdlDateTimeFormat.top=new FormAttachment(wSpecifyFormat,margin);
  fdlDateTimeFormat.right=new FormAttachment(middle,-margin);
  wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);
  wDateTimeFormat=new CCombo(wFileComp,SWT.BORDER | SWT.READ_ONLY);
  wDateTimeFormat.setEditable(true);
  props.setLook(wDateTimeFormat);
  wDateTimeFormat.addModifyListener(lsMod);
  fdDateTimeFormat=new FormData();
  fdDateTimeFormat.left=new FormAttachment(middle,0);
  fdDateTimeFormat.top=new FormAttachment(wSpecifyFormat,margin);
  fdDateTimeFormat.right=new FormAttachment(100,0);
  wDateTimeFormat.setLayoutData(fdDateTimeFormat);
  for (int x=0; x < dats.length; x++)   wDateTimeFormat.add(dats[x]);
  wbShowFiles=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbShowFiles);
  wbShowFiles.setText(BaseMessages.getString(PKG,"XMLOutputDialog.ShowFiles.Button"));
  fdbShowFiles=new FormData();
  fdbShowFiles.left=new FormAttachment(middle,0);
  fdbShowFiles.top=new FormAttachment(wDateTimeFormat,margin * 2);
  wbShowFiles.setLayoutData(fdbShowFiles);
  wbShowFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      XMLOutputMeta tfoi=new XMLOutputMeta();
      getInfo(tfoi);
      String files[]=tfoi.getFiles(transMeta);
      if (files != null && files.length > 0) {
        EnterSelectionDialog esd=new EnterSelectionDialog(shell,files,BaseMessages.getString(PKG,"XMLOutputDialog.OutputFiles.DialogTitle"),BaseMessages.getString(PKG,"XMLOutputDialog.OutputFiles.DialogMessage"));
        esd.setViewOnly();
        esd.open();
      }
 else {
        MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
        mb.setMessage(BaseMessages.getString(PKG,"XMLOutputDialog.NoFilesFound.DialogMessage"));
        mb.setText(BaseMessages.getString(PKG,"System.Dialog.Error.Title"));
        mb.open();
      }
    }
  }
);
  wlAddToResult=new Label(wFileComp,SWT.RIGHT);
  wlAddToResult.setText(BaseMessages.getString(PKG,"XMLOutputDialog.AddFileToResult.Label"));
  props.setLook(wlAddToResult);
  fdlAddToResult=new FormData();
  fdlAddToResult.left=new FormAttachment(0,0);
  fdlAddToResult.top=new FormAttachment(wbShowFiles,2 * margin);
  fdlAddToResult.right=new FormAttachment(middle,-margin);
  wlAddToResult.setLayoutData(fdlAddToResult);
  wAddToResult=new Button(wFileComp,SWT.CHECK);
  wAddToResult.setToolTipText(BaseMessages.getString(PKG,"XMLOutputDialog.AddFileToResult.Tooltip"));
  props.setLook(wAddToResult);
  fdAddToResult=new FormData();
  fdAddToResult.left=new FormAttachment(middle,0);
  fdAddToResult.top=new FormAttachment(wbShowFiles,2 * margin);
  fdAddToResult.right=new FormAttachment(100,0);
  wAddToResult.setLayoutData(fdAddToResult);
  SelectionAdapter lsSelR=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wAddToResult.addSelectionListener(lsSelR);
  fdFileComp=new FormData();
  fdFileComp.left=new FormAttachment(0,0);
  fdFileComp.top=new FormAttachment(0,0);
  fdFileComp.right=new FormAttachment(100,0);
  fdFileComp.bottom=new FormAttachment(100,0);
  wFileComp.setLayoutData(fdFileComp);
  wFileComp.layout();
  wFileTab.setControl(wFileComp);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(BaseMessages.getString(PKG,"XMLOutputDialog.ContentTab.TabTitle"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  Composite wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wlZipped=new Label(wContentComp,SWT.RIGHT);
  wlZipped.setText(BaseMessages.getString(PKG,"XMLOutputDialog.Zipped.Label"));
  props.setLook(wlZipped);
  fdlZipped=new FormData();
  fdlZipped.left=new FormAttachment(0,0);
  fdlZipped.top=new FormAttachment(0,0);
  fdlZipped.right=new FormAttachment(middle,-margin);
  wlZipped.setLayoutData(fdlZipped);
  wZipped=new Button(wContentComp,SWT.CHECK);
  props.setLook(wZipped);
  fdZipped=new FormData();
  fdZipped.left=new FormAttachment(middle,0);
  fdZipped.top=new FormAttachment(0,0);
  fdZipped.right=new FormAttachment(100,0);
  wZipped.setLayoutData(fdZipped);
  wZipped.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlEncoding=new Label(wContentComp,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"XMLOutputDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(wZipped,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(wZipped,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlNameSpace=new Label(wContentComp,SWT.RIGHT);
  wlNameSpace.setText(BaseMessages.getString(PKG,"XMLOutputDialog.NameSpace.Label"));
  props.setLook(wlNameSpace);
  fdlNameSpace=new FormData();
  fdlNameSpace.left=new FormAttachment(0,0);
  fdlNameSpace.top=new FormAttachment(wEncoding,margin);
  fdlNameSpace.right=new FormAttachment(middle,-margin);
  wlNameSpace.setLayoutData(fdlNameSpace);
  wNameSpace=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wNameSpace);
  wNameSpace.addModifyListener(lsMod);
  fdNameSpace=new FormData();
  fdNameSpace.left=new FormAttachment(middle,0);
  fdNameSpace.top=new FormAttachment(wEncoding,margin);
  fdNameSpace.right=new FormAttachment(100,0);
  wNameSpace.setLayoutData(fdNameSpace);
  wlMainElement=new Label(wContentComp,SWT.RIGHT);
  wlMainElement.setText(BaseMessages.getString(PKG,"XMLOutputDialog.MainElement.Label"));
  props.setLook(wlMainElement);
  fdlMainElement=new FormData();
  fdlMainElement.left=new FormAttachment(0,0);
  fdlMainElement.top=new FormAttachment(wNameSpace,margin);
  fdlMainElement.right=new FormAttachment(middle,-margin);
  wlMainElement.setLayoutData(fdlMainElement);
  wMainElement=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wMainElement.setEditable(true);
  props.setLook(wMainElement);
  wMainElement.addModifyListener(lsMod);
  fdMainElement=new FormData();
  fdMainElement.left=new FormAttachment(middle,0);
  fdMainElement.top=new FormAttachment(wNameSpace,margin);
  fdMainElement.right=new FormAttachment(100,0);
  wMainElement.setLayoutData(fdMainElement);
  wlRepeatElement=new Label(wContentComp,SWT.RIGHT);
  wlRepeatElement.setText(BaseMessages.getString(PKG,"XMLOutputDialog.RepeatElement.Label"));
  props.setLook(wlRepeatElement);
  fdlRepeatElement=new FormData();
  fdlRepeatElement.left=new FormAttachment(0,0);
  fdlRepeatElement.top=new FormAttachment(wMainElement,margin);
  fdlRepeatElement.right=new FormAttachment(middle,-margin);
  wlRepeatElement.setLayoutData(fdlRepeatElement);
  wRepeatElement=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wRepeatElement.setEditable(true);
  props.setLook(wRepeatElement);
  wRepeatElement.addModifyListener(lsMod);
  fdRepeatElement=new FormData();
  fdRepeatElement.left=new FormAttachment(middle,0);
  fdRepeatElement.top=new FormAttachment(wMainElement,margin);
  fdRepeatElement.right=new FormAttachment(100,0);
  wRepeatElement.setLayoutData(fdRepeatElement);
  wlSplitEvery=new Label(wContentComp,SWT.RIGHT);
  wlSplitEvery.setText(BaseMessages.getString(PKG,"XMLOutputDialog.SplitEvery.Label"));
  props.setLook(wlSplitEvery);
  fdlSplitEvery=new FormData();
  fdlSplitEvery.left=new FormAttachment(0,0);
  fdlSplitEvery.top=new FormAttachment(wRepeatElement,margin);
  fdlSplitEvery.right=new FormAttachment(middle,-margin);
  wlSplitEvery.setLayoutData(fdlSplitEvery);
  wSplitEvery=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSplitEvery);
  wSplitEvery.addModifyListener(lsMod);
  fdSplitEvery=new FormData();
  fdSplitEvery.left=new FormAttachment(middle,0);
  fdSplitEvery.top=new FormAttachment(wRepeatElement,margin);
  fdSplitEvery.right=new FormAttachment(100,0);
  wSplitEvery.setLayoutData(fdSplitEvery);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"XMLOutputDialog.FieldsTab.TabTitle"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  Composite wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wGet=new Button(wFieldsComp,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"XMLOutputDialog.Get.Button"));
  wGet.setToolTipText(BaseMessages.getString(PKG,"XMLOutputDialog.Get.Tooltip"));
  wMinWidth=new Button(wFieldsComp,SWT.PUSH);
  wMinWidth.setText(BaseMessages.getString(PKG,"XMLOutputDialog.MinWidth.Label"));
  wMinWidth.setToolTipText(BaseMessages.getString(PKG,"XMLOutputDialog.MinWidth.Tooltip"));
  setButtonPositions(new Button[]{wGet,wMinWidth},margin,null);
  final int FieldsRows=input.getOutputFields().length;
  String nums[]=Const.getNumberFormats();
  int totsize=dats.length + nums.length;
  String formats[]=new String[totsize];
  for (int x=0; x < dats.length; x++)   formats[x]=dats[x];
  for (int x=0; x < nums.length; x++)   formats[dats.length + x]=nums[x];
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Fieldname.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.ElementName.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Type.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes()),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Format.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,formats),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Length.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Precision.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Currency.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Decimal.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Group.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"XMLOutputDialog.Null.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wFields=new TableView(transMeta,wFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wGet,-margin);
  wFields.setLayoutData(fdFields);
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsMinWidth=new Listener(){
    public void handleEvent(    Event e){
      setMinimalWidth();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wMinWidth.addListener(SWT.Selection,lsMinWidth);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wFilename.addSelectionListener(lsDef);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(transMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.txt","*.csv","*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(transMeta.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"System.FileType.TextFiles"),BaseMessages.getString(PKG,"System.FileType.CSVFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
      if (dialog.open() != null) {
        wFilename.setText(dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName());
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  setDateTimeFormat();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
