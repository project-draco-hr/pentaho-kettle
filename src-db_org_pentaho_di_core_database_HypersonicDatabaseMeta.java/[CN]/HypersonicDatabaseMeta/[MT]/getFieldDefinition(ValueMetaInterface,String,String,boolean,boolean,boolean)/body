{
  StringBuffer retval=new StringBuffer(128);
  String fieldname=v.getName();
  int length=v.getLength();
  int precision=v.getPrecision();
  if (add_fieldname)   retval.append(fieldname).append(' ');
  int type=v.getType();
switch (type) {
case ValueMetaInterface.TYPE_DATE:
    retval.append("TIMESTAMP");
  break;
case ValueMetaInterface.TYPE_BOOLEAN:
if (supportsBooleanDataType()) {
  retval.append("BOOLEAN");
}
 else {
  retval.append("CHAR(1)");
}
break;
case ValueMetaInterface.TYPE_NUMBER:
case ValueMetaInterface.TYPE_INTEGER:
case ValueMetaInterface.TYPE_BIGNUMBER:
if (fieldname.equalsIgnoreCase(tk) || fieldname.equalsIgnoreCase(pk)) {
retval.append("BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 0, INCREMENT BY 1) PRIMARY KEY");
}
 else {
if (length > 0) {
if (precision > 0 || length > 18) {
  retval.append("NUMERIC(").append(length).append(", ").append(precision).append(')');
}
 else {
  if (length > 9) {
    retval.append("BIGINT");
  }
 else {
    if (length < 5) {
      retval.append("SMALLINT");
    }
 else {
      retval.append("INTEGER");
    }
  }
}
}
 else {
retval.append("DOUBLE PRECISION");
}
}
break;
case ValueMetaInterface.TYPE_STRING:
if (length >= DatabaseMeta.CLOB_LENGTH) {
retval.append("TEXT");
}
 else {
retval.append("VARCHAR");
if (length > 0) {
retval.append('(').append(length);
}
 else {
retval.append('(');
}
retval.append(')');
}
break;
default :
retval.append(" UNKNOWN");
break;
}
if (add_cr) retval.append(Const.CR);
return retval.toString();
}
