{
  try {
    spoon.getLog().logBasic(spoon.toString(),BaseMessages.getString(PKG,"Spoon.Log.EditJobEntry",je.getName()));
    JobEntryCopy before=(JobEntryCopy)je.clone_deep();
    JobEntryInterface jei=je.getEntry();
    if (jei.isSpecial()) {
      JobEntrySpecial special=(JobEntrySpecial)jei;
      if (special.isDummy()) {
        return;
      }
    }
    JobEntryDialogInterface d=getJobEntryDialog(jei,jobMeta);
    if (d != null) {
      if (d.open() != null) {
        jobMeta.renameJobEntryIfNameCollides(je);
        JobEntryCopy after=(JobEntryCopy)je.clone();
        spoon.addUndoChange(jobMeta,new JobEntryCopy[]{before},new JobEntryCopy[]{after},new int[]{jobMeta.indexOfJobEntry(je)});
        spoon.refreshGraph();
        spoon.refreshTree();
      }
    }
 else {
      MessageBox mb=new MessageBox(spoon.getShell(),SWT.OK | SWT.ICON_INFORMATION);
      mb.setMessage(BaseMessages.getString(PKG,"Spoon.Dialog.JobEntryCanNotBeChanged.Message"));
      mb.setText(BaseMessages.getString(PKG,"Spoon.Dialog.JobEntryCanNotBeChanged.Title"));
      mb.open();
    }
  }
 catch (  Exception e) {
    if (!spoon.getShell().isDisposed())     new ErrorDialog(spoon.getShell(),BaseMessages.getString(PKG,"Spoon.ErrorDialog.ErrorEditingJobEntry.Title"),BaseMessages.getString(PKG,"Spoon.ErrorDialog.ErrorEditingJobEntry.Message"),e);
  }
}
