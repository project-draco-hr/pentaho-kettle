{
  if (jobMeta == null) {
    return;
  }
  JobExecutionConfiguration executionConfiguration=spoon.getJobExecutionConfiguration();
  Object data[]=spoon.variables.getData();
  String fields[]=spoon.variables.getRowMeta().getFieldNames();
  Map<String,String> variableMap=new HashMap<String,String>();
  for (int idx=0; idx < fields.length; idx++) {
    variableMap.put(fields[idx],data[idx].toString());
  }
  executionConfiguration.setVariables(variableMap);
  executionConfiguration.getUsedVariables(jobMeta);
  executionConfiguration.setReplayDate(replayDate);
  executionConfiguration.setRepository(spoon.rep);
  executionConfiguration.setSafeModeEnabled(safe);
  executionConfiguration.setStartCopyName(startCopyName);
  executionConfiguration.setStartCopyNr(startCopyNr);
  executionConfiguration.setLogLevel(DefaultLogLevel.getLogLevel());
  JobExecutionConfigurationDialog dialog=new JobExecutionConfigurationDialog(spoon.getShell(),executionConfiguration,jobMeta);
  if (dialog.open()) {
    JobGraph jobGraph=spoon.getActiveJobGraph();
    for (    String varName : executionConfiguration.getVariables().keySet()) {
      String varValue=executionConfiguration.getVariables().get(varName);
      jobMeta.setVariable(varName,varValue);
    }
    for (    String paramName : executionConfiguration.getParams().keySet()) {
      String paramValue=executionConfiguration.getParams().get(paramName);
      jobMeta.setParameterValue(paramName,paramValue);
    }
    if (executionConfiguration.isExecutingLocally()) {
      jobGraph.startJob(executionConfiguration);
    }
 else     if (executionConfiguration.isExecutingRemotely()) {
      jobMeta.activateParameters();
      if (executionConfiguration.getRemoteServer() != null) {
        Job.sendToSlaveServer(jobMeta,executionConfiguration,spoon.rep);
        spoon.delegates.slaves.addSpoonSlave(executionConfiguration.getRemoteServer());
      }
 else {
        MessageBox mb=new MessageBox(spoon.getShell(),SWT.OK | SWT.ICON_ERROR);
        mb.setMessage(BaseMessages.getString(PKG,"Spoon.Dialog.NoRemoteServerSpecified.Message"));
        mb.setText(BaseMessages.getString(PKG,"Spoon.Dialog.NoRemoteServerSpecified.Title"));
        mb.open();
      }
    }
  }
}
