{
  PluginRegistry registry=PluginRegistry.getInstance();
  String dialogClassName=jobEntryInterface.getDialogClassName();
  try {
    Class<?> dialogClass;
    Class<?>[] paramClasses=new Class[]{spoon.getShell().getClass(),JobEntryInterface.class,Repository.class,JobMeta.class};
    Object[] paramArgs=new Object[]{spoon.getShell(),jobEntryInterface,spoon.getRepository(),jobMeta};
    Constructor<?> dialogConstructor;
    PluginInterface plugin=registry.getPlugin(JobEntryPluginType.class,jobEntryInterface);
    dialogClass=PluginRegistry.getInstance().getClass(plugin,dialogClassName);
    dialogConstructor=dialogClass.getConstructor(paramClasses);
    JobEntryDialogInterface entryDialogInterface=(JobEntryDialogInterface)dialogConstructor.newInstance(paramArgs);
    entryDialogInterface.setMetaStore(spoon.getMetaStore());
    return entryDialogInterface;
  }
 catch (  Throwable t) {
    t.printStackTrace();
    spoon.getLog().logError(spoon.toString(),"Could not create dialog for " + dialogClassName,t);
    return null;
  }
}
