{
  for (int i=jobMeta.nrJobHops() - 1; i >= 0; i--) {
    JobHopMeta hi=jobMeta.getJobHop(i);
    if (hi.getFromEntry().equals(jobEntry) || hi.getToEntry().equals(jobEntry)) {
      int idx=jobMeta.indexOfJobHop(hi);
      spoon.addUndoDelete(jobMeta,new JobHopMeta[]{(JobHopMeta)hi.clone()},new int[]{idx});
      jobMeta.removeJobHop(idx);
      spoon.refreshTree();
    }
  }
  int pos=jobMeta.indexOfJobEntry(jobEntry);
  jobMeta.removeJobEntry(pos);
  spoon.addUndoDelete(jobMeta,new JobEntryCopy[]{jobEntry},new int[]{pos});
  spoon.refreshTree();
  spoon.refreshGraph();
}
