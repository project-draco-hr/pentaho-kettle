{
  if (rep != null && rep.hasService(RepositorySecurityProvider.class)) {
    service=(RepositorySecurityProvider)rep.getService(RepositorySecurityProvider.class);
  }
 else {
    throw new ControllerInitializationException(BaseMessages.getString(PKG,"PermissionsController.ERROR_0001_UNABLE_TO_INITIAL_REPOSITORY_SERVICE",RepositorySecurityManager.class));
  }
  messageBox=(XulMessageBox)document.createElement("messagebox");
  viewAclsModel=new UIRepositoryObjectAcls();
  manageAclsModel=new UIRepositoryObjectAclModel(viewAclsModel);
  bf=new DefaultBindingFactory();
  bf.setDocument(this.getXulDomContainer().getDocumentRoot());
  mainController=(MainController)this.getXulDomContainer().getEventHandler("mainController");
  confirmBox=(XulConfirmBox)document.createElement("confirmbox");
  confirmBox.setTitle(BaseMessages.getString(PKG,"PermissionsController.RemoveAclWarning"));
  confirmBox.setMessage(BaseMessages.getString(PKG,"PermissionsController.RemoveAclWarningText"));
  confirmBox.setAcceptLabel(BaseMessages.getString(PKG,"Dialog.Ok"));
  confirmBox.setCancelLabel(BaseMessages.getString(PKG,"Dialog.Cancel"));
  confirmBox.addDialogCallback(new XulDialogCallback<Object>(){
    public void onClose(    XulComponent sender,    Status returnCode,    Object retVal){
      if (returnCode == Status.ACCEPT) {
        viewAclsModel.removeSelectedAcls();
      }
    }
    public void onError(    XulComponent sender,    Throwable t){
    }
  }
);
}
