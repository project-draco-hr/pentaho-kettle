{
  try {
    if (viewAclsModel.isModelDirty()) {
      if (!hasManageAclAccess()) {
        viewAclsModel.clear();
        clearSelectedObjAcl();
        viewAclsModel.setModelDirty(false);
        return TYPE.OK;
      }
      XulConfirmBox confirmBox=null;
      try {
        confirmBox=(XulConfirmBox)document.createElement("confirmbox");
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
      confirmBox.setTitle(BaseMessages.getString(PKG,"PermissionsController.ContextChangeWarning"));
      confirmBox.setMessage(BaseMessages.getString(PKG,"PermissionsController.ContextChangeWarningText"));
      confirmBox.setAcceptLabel(BaseMessages.getString(PKG,"Dialog.Yes"));
      confirmBox.setCancelLabel(BaseMessages.getString(PKG,"Dialog.No"));
      confirmBox.addDialogCallback(new XulDialogCallback<Object>(){
        public void onClose(        XulComponent sender,        Status returnCode,        Object retVal){
          if (returnCode == Status.ACCEPT) {
            returnType=TYPE.OK;
            viewAclsModel.clear();
            clearSelectedObjAcl();
            viewAclsModel.setModelDirty(false);
          }
 else {
            returnType=TYPE.CANCEL;
          }
        }
        public void onError(        XulComponent sender,        Throwable t){
          returnType=TYPE.NO_OP;
        }
      }
);
      confirmBox.open();
    }
 else {
      returnType=TYPE.NO_OP;
    }
    return returnType;
  }
 catch (  Exception e) {
    if (KettleRepositoryLostException.lookupStackStrace(e) != null) {
      return TYPE.NO_OP;
    }
 else {
      throw new RuntimeException(e);
    }
  }
}
