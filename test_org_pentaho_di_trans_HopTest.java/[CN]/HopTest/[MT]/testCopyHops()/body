{
  KettleEnvironment.init();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("hop test default");
  PluginRegistry registry=PluginRegistry.getInstance();
  String injectorStepname="injector step";
  InjectorMeta im=new InjectorMeta();
  String injectorPid=registry.getPluginId(StepPluginType.class,im);
  StepMeta injectorStep=new StepMeta(injectorPid,injectorStepname,im);
  transMeta.addStep(injectorStep);
  String dummyStepname="dummy step";
  DummyTransMeta dm=new DummyTransMeta();
  String dummyPid=registry.getPluginId(StepPluginType.class,dm);
  StepMeta dummyStep=new StepMeta(dummyPid,dummyStepname,dm);
  transMeta.addStep(dummyStep);
  TransHopMeta hi=new TransHopMeta(injectorStep,dummyStep);
  transMeta.addTransHop(hi);
  dummyStep.setDistributes(false);
  String dummyStepname1="dummy step 1";
  DummyTransMeta dm1=new DummyTransMeta();
  String dummyPid1=registry.getPluginId(StepPluginType.class,dm1);
  StepMeta dummyStep1=new StepMeta(dummyPid1,dummyStepname1,dm1);
  transMeta.addStep(dummyStep1);
  TransHopMeta hop1=new TransHopMeta(dummyStep,dummyStep1);
  transMeta.addTransHop(hop1);
  String dummyStepname2="dummy step 2";
  DummyTransMeta dm2=new DummyTransMeta();
  String dummyPid2=registry.getPluginId(StepPluginType.class,dm2);
  StepMeta dummyStep2=new StepMeta(dummyPid2,dummyStepname2,dm2);
  transMeta.addStep(dummyStep2);
  TransHopMeta hop2=new TransHopMeta(dummyStep,dummyStep2);
  transMeta.addTransHop(hop2);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  StepInterface si1=trans.getStepInterface(dummyStepname1,0);
  RowStepCollector rc1=new RowStepCollector();
  si1.addRowListener(rc1);
  StepInterface si2=trans.getStepInterface(dummyStepname2,0);
  RowStepCollector rc2=new RowStepCollector();
  si2.addRowListener(rc2);
  RowProducer rp=trans.addRowProducer(injectorStepname,0);
  trans.startThreads();
  List<RowMetaAndData> inputList=createData();
  for (  RowMetaAndData rm : inputList) {
    rp.putRow(rm.getRowMeta(),rm.getData());
  }
  rp.finished();
  trans.waitUntilFinished();
  List<RowMetaAndData> resultRows=rc1.getRowsWritten();
  checkRows(resultRows,inputList);
}
