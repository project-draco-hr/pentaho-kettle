{
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("LogSettingsDialog.Dialog.LoggingParameters.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlFilter=new Label(shell,SWT.RIGHT);
  wlFilter.setText(Messages.getString("LogSettingsDialog.Label.FilterSelection"));
  props.setLook(wlFilter);
  fdlFilter=new FormData();
  fdlFilter.left=new FormAttachment(0,0);
  fdlFilter.right=new FormAttachment(middle,-margin);
  fdlFilter.top=new FormAttachment(0,margin);
  wlFilter.setLayoutData(fdlFilter);
  wFilter=new Text(shell,SWT.SINGLE | SWT.BORDER);
  wFilter.setText("");
  props.setLook(wFilter);
  fdFilter=new FormData();
  fdFilter.left=new FormAttachment(middle,0);
  fdFilter.top=new FormAttachment(0,margin);
  fdFilter.right=new FormAttachment(100,0);
  wFilter.setLayoutData(fdFilter);
  wlLoglevel=new Label(shell,SWT.RIGHT);
  wlLoglevel.setText(Messages.getString("LogSettingsDialog.Label.LogLevel"));
  props.setLook(wlLoglevel);
  fdlLoglevel=new FormData();
  fdlLoglevel.left=new FormAttachment(0,0);
  fdlLoglevel.right=new FormAttachment(middle,-margin);
  fdlLoglevel.top=new FormAttachment(wFilter,margin);
  wlLoglevel.setLayoutData(fdlLoglevel);
  wLoglevel=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  for (int i=0; i < LogWriter.logLevelDescription.length; i++)   wLoglevel.add(LogWriter.logLevelDescription[i]);
  wLoglevel.select(log.getLogLevel() + 1);
  props.setLook(wLoglevel);
  fdLoglevel=new FormData();
  fdLoglevel.left=new FormAttachment(middle,0);
  fdLoglevel.top=new FormAttachment(wFilter,margin);
  fdLoglevel.right=new FormAttachment(100,0);
  wLoglevel.setLayoutData(fdLoglevel);
  wlTime=new Label(shell,SWT.RIGHT);
  wlTime.setText(Messages.getString("LogSettingsDialog.Label.EnableTime"));
  props.setLook(wlTime);
  fdlTime=new FormData();
  fdlTime.left=new FormAttachment(0,0);
  fdlTime.right=new FormAttachment(middle,-margin);
  fdlTime.top=new FormAttachment(wLoglevel,margin);
  wlTime.setLayoutData(fdlTime);
  wTime=new Button(shell,SWT.CHECK);
  props.setLook(wTime);
  fdTime=new FormData();
  fdTime.left=new FormAttachment(middle,0);
  fdTime.top=new FormAttachment(wLoglevel,margin);
  wTime.setLayoutData(fdTime);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTime);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  SelectionAdapter lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wFilter.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  BaseStepDialog.setSize(shell);
  getData();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return log;
}
