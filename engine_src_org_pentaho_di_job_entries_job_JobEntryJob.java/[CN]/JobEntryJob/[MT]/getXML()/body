{
  StringBuffer retval=new StringBuffer(200);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("specification_method",specificationMethod == null ? null : specificationMethod.getCode()));
  retval.append("      ").append(XMLHandler.addTagValue("job_object_id",jobObjectId == null ? null : jobObjectId.toString()));
  if (rep != null && jobObjectId != null) {
    try {
      RepositoryObject objectInformation=rep.getObjectInformation(jobObjectId,RepositoryObjectType.JOB);
      if (objectInformation != null) {
        jobname=objectInformation.getName();
        directory=objectInformation.getRepositoryDirectory().getPath();
      }
    }
 catch (    KettleException e) {
    }
  }
  retval.append("      ").append(XMLHandler.addTagValue("filename",filename));
  retval.append("      ").append(XMLHandler.addTagValue("jobname",jobname));
  if (directory != null) {
    retval.append("      ").append(XMLHandler.addTagValue("directory",directory));
  }
 else   if (directoryPath != null) {
    retval.append("      ").append(XMLHandler.addTagValue("directory",directoryPath));
  }
  retval.append("      ").append(XMLHandler.addTagValue("arg_from_previous",argFromPrevious));
  retval.append("      ").append(XMLHandler.addTagValue("params_from_previous",paramsFromPrevious));
  retval.append("      ").append(XMLHandler.addTagValue("exec_per_row",execPerRow));
  retval.append("      ").append(XMLHandler.addTagValue("set_logfile",setLogfile));
  retval.append("      ").append(XMLHandler.addTagValue("logfile",logfile));
  retval.append("      ").append(XMLHandler.addTagValue("logext",logext));
  retval.append("      ").append(XMLHandler.addTagValue("add_date",addDate));
  retval.append("      ").append(XMLHandler.addTagValue("add_time",addTime));
  retval.append("      ").append(XMLHandler.addTagValue("loglevel",logFileLevel != null ? logFileLevel.getCode() : DEFAULT_LOG_LEVEL.getCode()));
  retval.append("      ").append(XMLHandler.addTagValue("slave_server_name",remoteSlaveServerName));
  retval.append("      ").append(XMLHandler.addTagValue("wait_until_finished",waitingToFinish));
  retval.append("      ").append(XMLHandler.addTagValue("follow_abort_remote",followingAbortRemotely));
  retval.append("      ").append(XMLHandler.addTagValue("create_parent_folder",createParentFolder));
  retval.append("      ").append(XMLHandler.addTagValue("pass_export",passingExport));
  if (arguments != null) {
    for (int i=0; i < arguments.length; i++) {
      retval.append("      ").append(XMLHandler.addTagValue("argument" + i,arguments[i]));
    }
  }
  if (parameters != null) {
    retval.append("      ").append(XMLHandler.openTag("parameters"));
    retval.append("        ").append(XMLHandler.addTagValue("pass_all_parameters",passingAllParameters));
    for (int i=0; i < parameters.length; i++) {
      retval.append("            ").append(XMLHandler.openTag("parameter"));
      retval.append("            ").append(XMLHandler.addTagValue("name",parameters[i]));
      retval.append("            ").append(XMLHandler.addTagValue("stream_name",parameterFieldNames[i]));
      retval.append("            ").append(XMLHandler.addTagValue("value",parameterValues[i]));
      retval.append("            ").append(XMLHandler.closeTag("parameter"));
    }
    retval.append("      ").append(XMLHandler.closeTag("parameters"));
  }
  retval.append("      ").append(XMLHandler.addTagValue("set_append_logfile",setAppendLogfile));
  return retval.toString();
}
