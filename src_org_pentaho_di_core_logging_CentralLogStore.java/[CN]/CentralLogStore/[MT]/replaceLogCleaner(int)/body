{
  if (logCleanerTimer != null) {
    logCleanerTimer.cancel();
  }
  logCleanerTimer=new Timer(true);
  final AtomicBoolean busy=new AtomicBoolean(false);
  TimerTask timerTask=new TimerTask(){
    public void run(){
      if (!busy.get()) {
        busy.set(true);
        if (maxLogTimeoutMinutes > 0) {
          long minTimeBoundary=new Date().getTime() - maxLogTimeoutMinutes * 60 * 1000;
synchronized (appender) {
            Iterator<BufferLine> i=appender.getBufferIterator();
            while (i.hasNext()) {
              BufferLine bufferLine=i.next();
              if (bufferLine.getEvent().timeStamp < minTimeBoundary) {
                i.remove();
              }
 else {
                break;
              }
            }
          }
        }
        busy.set(false);
      }
    }
  }
;
  logCleanerTimer.schedule(timerTask,10000,10000);
}
