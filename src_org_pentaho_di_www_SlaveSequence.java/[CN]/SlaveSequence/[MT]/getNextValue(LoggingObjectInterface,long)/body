{
  Database db=null;
  try {
    db=new Database(log,databaseMeta);
    db.connect();
    String schemaTable=databaseMeta.getQuotedSchemaTableCombination(schemaName,tableName);
    String seqField=databaseMeta.quoteField(sequenceNameField);
    String valField=databaseMeta.quoteField(valueField);
    boolean update=false;
    String sql="SELECT " + valField + " FROM "+ schemaTable+ " WHERE "+ seqField+ " = ?";
    RowMetaAndData param=new RowMetaAndData();
    param.addValue(seqField,ValueMetaInterface.TYPE_STRING,name);
    RowMetaAndData row=db.getOneRow(sql,param.getRowMeta(),param.getData());
    long value;
    if (row != null && row.getData() != null) {
      update=true;
      Long longValue=row.getInteger(0);
      if (longValue == null) {
        value=startValue;
      }
 else {
        value=longValue.longValue();
      }
    }
 else {
      value=startValue;
    }
    long maximum=value + incrementValue;
    if (update) {
      sql="UPDATE " + schemaTable + " SET "+ valField+ "= ? WHERE "+ seqField+ "= ? ";
      param=new RowMetaAndData();
      param.addValue(valField,ValueMetaInterface.TYPE_INTEGER,Long.valueOf(maximum));
      param.addValue(seqField,ValueMetaInterface.TYPE_STRING,name);
    }
 else {
      sql="INSERT INTO " + schemaTable + "("+ seqField+ ", "+ valField+ ") VALUES( ? , ? )";
      param=new RowMetaAndData();
      param.addValue(seqField,ValueMetaInterface.TYPE_STRING,name);
      param.addValue(valField,ValueMetaInterface.TYPE_INTEGER,Long.valueOf(maximum));
    }
    db.execStatement(sql,param.getRowMeta(),param.getData());
    return value;
  }
 catch (  Exception e) {
    throw new KettleException("Unable to get next value for slave sequence '" + name + "' on database '"+ databaseMeta.getName()+ "'",e);
  }
 finally {
    db.disconnect();
  }
}
