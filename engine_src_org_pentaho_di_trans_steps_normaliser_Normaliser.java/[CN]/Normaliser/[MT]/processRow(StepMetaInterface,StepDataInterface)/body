{
  meta=(NormaliserMeta)smi;
  data=(NormaliserData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.inputRowMeta=getInputRowMeta();
    data.outputRowMeta=data.inputRowMeta.clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    data.type_occ=new ArrayList<String>();
    data.maxlen=0;
    for (int i=0; i < meta.getNormaliserFields().length; i++) {
      if (!data.type_occ.contains(meta.getNormaliserFields()[i].getValue())) {
        data.type_occ.add(meta.getNormaliserFields()[i].getValue());
      }
      if (meta.getNormaliserFields()[i].getValue().length() > data.maxlen) {
        data.maxlen=meta.getNormaliserFields()[i].getValue().length();
      }
    }
    data.copy_fieldnrs=new ArrayList<Integer>();
    for (int i=0; i < data.inputRowMeta.size(); i++) {
      ValueMetaInterface v=data.inputRowMeta.getValueMeta(i);
      if (Const.indexOfString(v.getName(),meta.getFieldNames()) < 0) {
        data.copy_fieldnrs.add(Integer.valueOf(i));
      }
    }
    data.fieldnrs=new int[meta.getNormaliserFields().length];
    for (int i=0; i < meta.getNormaliserFields().length; i++) {
      data.fieldnrs[i]=data.inputRowMeta.indexOfValue(meta.getNormaliserFields()[i].getName());
      if (data.fieldnrs[i] < 0) {
        logError(BaseMessages.getString(PKG,"Normaliser.Log.CouldNotFindFieldInRow",meta.getNormaliserFields()[i].getName()));
        setErrors(1);
        stopAll();
        return false;
      }
    }
  }
  for (int e=0; e < data.type_occ.size(); e++) {
    String typevalue=data.type_occ.get(e);
    Object[] outputRowData=RowDataUtil.allocateRowData(data.outputRowMeta.size());
    int outputIndex=0;
    for (int i=0; i < data.copy_fieldnrs.size(); i++) {
      int nr=data.copy_fieldnrs.get(i);
      outputRowData[outputIndex++]=r[nr];
    }
    outputRowData[outputIndex++]=typevalue;
    for (int i=0; i < data.fieldnrs.length; i++) {
      Object value=r[data.fieldnrs[i]];
      String fieldValue=meta.getNormaliserFields()[i].getValue();
      if (fieldValue.equalsIgnoreCase(typevalue)) {
        outputRowData[outputIndex++]=value;
      }
    }
    putRow(data.outputRowMeta,outputRowData);
  }
  if (checkFeedback(getLinesRead())) {
    if (log.isBasic()) {
      logBasic(BaseMessages.getString(PKG,"Normaliser.Log.LineNumber") + getLinesRead());
    }
  }
  return true;
}
