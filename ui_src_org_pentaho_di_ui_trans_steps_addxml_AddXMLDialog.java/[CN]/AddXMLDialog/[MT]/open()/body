{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"AddXMLDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(BaseMessages.getString(PKG,"AddXMLDialog.ContentTab.TabTitle"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  Composite wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wlEncoding=new Label(wContentComp,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"AddXMLDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(null,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(null,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlOutputValue=new Label(wContentComp,SWT.RIGHT);
  wlOutputValue.setText(BaseMessages.getString(PKG,"AddXMLDialog.OutputValue.Label"));
  props.setLook(wlOutputValue);
  fdlOutputValue=new FormData();
  fdlOutputValue.left=new FormAttachment(0,0);
  fdlOutputValue.top=new FormAttachment(wEncoding,margin);
  fdlOutputValue.right=new FormAttachment(middle,-margin);
  wlOutputValue.setLayoutData(fdlOutputValue);
  wOutputValue=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wOutputValue.setEditable(true);
  props.setLook(wOutputValue);
  wOutputValue.addModifyListener(lsMod);
  fdOutputValue=new FormData();
  fdOutputValue.left=new FormAttachment(middle,0);
  fdOutputValue.top=new FormAttachment(wEncoding,margin);
  fdOutputValue.right=new FormAttachment(100,0);
  wOutputValue.setLayoutData(fdOutputValue);
  wlRepeatElement=new Label(wContentComp,SWT.RIGHT);
  wlRepeatElement.setText(BaseMessages.getString(PKG,"AddXMLDialog.RepeatElement.Label"));
  props.setLook(wlRepeatElement);
  fdlRepeatElement=new FormData();
  fdlRepeatElement.left=new FormAttachment(0,0);
  fdlRepeatElement.top=new FormAttachment(wOutputValue,margin);
  fdlRepeatElement.right=new FormAttachment(middle,-margin);
  wlRepeatElement.setLayoutData(fdlRepeatElement);
  wRepeatElement=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wRepeatElement.setEditable(true);
  props.setLook(wRepeatElement);
  wRepeatElement.addModifyListener(lsMod);
  fdRepeatElement=new FormData();
  fdRepeatElement.left=new FormAttachment(middle,0);
  fdRepeatElement.top=new FormAttachment(wOutputValue,margin);
  fdRepeatElement.right=new FormAttachment(100,0);
  wRepeatElement.setLayoutData(fdRepeatElement);
  wlOmitXMLHeader=new Label(wContentComp,SWT.RIGHT);
  wlOmitXMLHeader.setText(BaseMessages.getString(PKG,"AddXMLDialog.OmitXMLHeader.Label"));
  props.setLook(wlOmitXMLHeader);
  fdlOmitXMLHeader=new FormData();
  fdlOmitXMLHeader.left=new FormAttachment(0,0);
  fdlOmitXMLHeader.top=new FormAttachment(wRepeatElement,margin);
  fdlOmitXMLHeader.right=new FormAttachment(middle,-margin);
  wlOmitXMLHeader.setLayoutData(fdlOmitXMLHeader);
  wOmitXMLHeader=new Button(wContentComp,SWT.CHECK);
  props.setLook(wOmitXMLHeader);
  fdOmitXMLHeader=new FormData();
  fdOmitXMLHeader.left=new FormAttachment(middle,0);
  fdOmitXMLHeader.top=new FormAttachment(wRepeatElement,margin);
  fdOmitXMLHeader.right=new FormAttachment(100,0);
  wOmitXMLHeader.setLayoutData(fdOmitXMLHeader);
  wOmitXMLHeader.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlOmitNullValues=new Label(wContentComp,SWT.RIGHT);
  wlOmitNullValues.setText(BaseMessages.getString(PKG,"AddXMLDialog.OmitNullValues.Label"));
  props.setLook(wlOmitNullValues);
  fdlOmitNullValues=new FormData();
  fdlOmitNullValues.left=new FormAttachment(0,0);
  fdlOmitNullValues.top=new FormAttachment(wOmitXMLHeader,margin);
  fdlOmitNullValues.right=new FormAttachment(middle,-margin);
  wlOmitNullValues.setLayoutData(fdlOmitNullValues);
  wOmitNullValues=new Button(wContentComp,SWT.CHECK);
  props.setLook(wOmitNullValues);
  fdOmitNullValues=new FormData();
  fdOmitNullValues.left=new FormAttachment(middle,0);
  fdOmitNullValues.top=new FormAttachment(wOmitXMLHeader,margin);
  fdOmitNullValues.right=new FormAttachment(100,0);
  wOmitNullValues.setLayoutData(fdOmitNullValues);
  wOmitNullValues.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"AddXMLDialog.FieldsTab.TabTitle"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  Composite wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wGet=new Button(wFieldsComp,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"AddXMLDialog.Get.Button"));
  wGet.setToolTipText(BaseMessages.getString(PKG,"AddXMLDialog.Get.Tooltip"));
  wMinWidth=new Button(wFieldsComp,SWT.PUSH);
  wMinWidth.setText(BaseMessages.getString(PKG,"AddXMLDialog.MinWidth.Label"));
  wMinWidth.setToolTipText(BaseMessages.getString(PKG,"AddXMLDialog.MinWidth.Tooltip"));
  setButtonPositions(new Button[]{wGet,wMinWidth},margin,null);
  final int FieldsRows=input.getOutputFields().length;
  String[] dats=Const.getDateFormats();
  String[] nums=Const.getNumberFormats();
  int totsize=dats.length + nums.length;
  String[] formats=new String[totsize];
  for (int x=0; x < dats.length; x++) {
    formats[x]=dats[x];
  }
  for (int x=0; x < nums.length; x++) {
    formats[dats.length + x]=nums[x];
  }
  colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Fieldname.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.ElementName.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Type.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes()),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Format.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,formats),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Length.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Precision.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Currency.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Decimal.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Group.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Null.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.Attribute.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{BaseMessages.getString(PKG,"System.Combo.Yes"),BaseMessages.getString(PKG,"System.Combo.No")},true),new ColumnInfo(BaseMessages.getString(PKG,"AddXMLDialog.AttributeParentName.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wFields=new TableView(transMeta,wFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wGet,-margin);
  wFields.setLayoutData(fdFields);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsMinWidth=new Listener(){
    public void handleEvent(    Event e){
      setMinimalWidth();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wMinWidth.addListener(SWT.Selection,lsMinWidth);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
