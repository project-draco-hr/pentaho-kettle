{
  super(parent,style);
  this.formula=formula;
  this.inputFields=inputFields;
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=5;
  formLayout.marginHeight=5;
  shell.setLayout(formLayout);
  Composite buttonsComposite=new Composite(shell,SWT.NONE);
  FillLayout bcLayout=new FillLayout();
  bcLayout.spacing=5;
  buttonsComposite.setLayout(bcLayout);
  ok=new Button(buttonsComposite,SWT.PUSH);
  ok.setText("  OK  ");
  cancel=new Button(buttonsComposite,SWT.PUSH);
  cancel.setText(" Cancel ");
  ok.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ok();
    }
  }
);
  cancel.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      cancel();
    }
  }
);
  sashForm=new SashForm(shell,SWT.HORIZONTAL);
  sashForm.setLayout(new FillLayout());
  FormData fdSashForm=new FormData();
  fdSashForm.left=new FormAttachment(0,0);
  fdSashForm.right=new FormAttachment(100,0);
  fdSashForm.top=new FormAttachment(0,10);
  fdSashForm.bottom=new FormAttachment(buttonsComposite,-10);
  sashForm.setLayoutData(fdSashForm);
  FormData fdBC=new FormData();
  fdBC.left=new FormAttachment(sashForm,0,SWT.CENTER);
  fdBC.bottom=new FormAttachment(100,0);
  buttonsComposite.setLayoutData(fdBC);
  readFunctions();
  evaluator=new FormulaEvaluator(functions,inputFields);
  tree=new Tree(sashForm,SWT.SINGLE);
  for (int i=0; i < categories.length; i++) {
    String category=categories[i];
    String i18nCategory=category;
    if (category.startsWith("%")) {
      i18nCategory=BaseMessages.getString(FunctionLib.class,category.substring(1));
    }
    TreeItem item=new TreeItem(tree,SWT.NONE);
    item.setText(i18nCategory);
    String[] fnames=functionLib.getFunctionsForACategory(category);
    for (    String fname : fnames) {
      TreeItem fitem=new TreeItem(item,SWT.NONE);
      fitem.setText(fname);
    }
  }
  tree.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (tree.getSelectionCount() == 1) {
        TreeItem item=tree.getSelection()[0];
        if (item.getParentItem() != null) {
          String functionName=item.getText();
          FunctionDescription functionDescription=functionLib.getFunctionDescription(functionName);
          if (functionDescription != null) {
            String report=functionDescription.getHtmlReport();
            message.setText(report);
          }
        }
      }
    }
  }
);
  rightSash=new SashForm(sashForm,SWT.VERTICAL);
  expressionEditor=new StyledText(rightSash,SWT.NONE);
  expressionEditor.setText(this.formula);
  expressionEditor.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent event){
      setStyles();
    }
  }
);
  expressionEditor.addKeyListener(this);
  message=new Browser(rightSash,SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL| SWT.H_SCROLL);
  FormData fdMessage=new FormData();
  fdMessage.left=new FormAttachment(0,0);
  fdMessage.right=new FormAttachment(100,0);
  fdMessage.top=new FormAttachment(0,0);
  fdMessage.bottom=new FormAttachment(0,100);
  message.setLayoutData(fdMessage);
  rightSash.setWeights(new int[]{10,80});
  sashForm.setWeights(new int[]{15,85});
  red=new Color(shell.getDisplay(),255,0,0);
  green=new Color(shell.getDisplay(),0,220,0);
  blue=new Color(shell.getDisplay(),0,0,255);
  white=new Color(shell.getDisplay(),255,255,255);
  gray=new Color(shell.getDisplay(),150,150,150);
  black=new Color(shell.getDisplay(),0,0,0);
  setStyles();
  shell.addDisposeListener(new DisposeListener(){
    public void widgetDisposed(    DisposeEvent arg0){
      red.dispose();
      green.dispose();
      blue.dispose();
      white.dispose();
      gray.dispose();
      black.dispose();
    }
  }
);
}
