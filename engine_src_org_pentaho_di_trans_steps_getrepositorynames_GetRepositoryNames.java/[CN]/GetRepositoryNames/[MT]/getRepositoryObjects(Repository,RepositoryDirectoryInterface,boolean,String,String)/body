{
  List<RepositoryElementMetaInterface> list=new ArrayList<RepositoryElementMetaInterface>();
  List<RepositoryElementMetaInterface> objects=new ArrayList<RepositoryElementMetaInterface>();
  if (meta.getObjectTypeSelection().areTransformationsSelected()) {
    objects.addAll(repository.getTransformationObjects(directory.getObjectId(),false));
  }
  if (meta.getObjectTypeSelection().areJobsSelected()) {
    objects.addAll(repository.getJobObjects(directory.getObjectId(),false));
  }
  for (  RepositoryElementMetaInterface object : objects) {
    boolean add=false;
    if (Utils.isEmpty(nameMask) || object.getName().matches(nameMask)) {
      add=true;
    }
    if (!Utils.isEmpty(excludeNameMask) && object.getName().matches(excludeNameMask)) {
      add=false;
    }
    if (add) {
      list.add(object);
    }
  }
  if (subdirs) {
    for (    RepositoryDirectoryInterface child : directory.getChildren()) {
      list.addAll(getRepositoryObjects(repository,child,subdirs,nameMask,excludeNameMask));
    }
  }
  return list;
}
