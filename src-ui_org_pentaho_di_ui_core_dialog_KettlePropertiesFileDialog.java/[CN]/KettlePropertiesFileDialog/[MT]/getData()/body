{
  try {
    String filename=getKettlePropertiesFilename();
    File file=new File(filename);
    Properties properties=new Properties();
    properties.load(new FileInputStream(file));
    KettleVariablesList variablesList=KettleVariablesList.getInstance();
    for (    String key : variablesList.getDescriptionMap().keySet()) {
      if (Const.isEmpty((String)properties.get(key))) {
        String defaultValue=variablesList.getDefaultValueMap().get(key);
        properties.put(key,Const.NVL(defaultValue,""));
      }
    }
    List<String> keys=new ArrayList<String>();
    Enumeration<Object> keysEnum=properties.keys();
    while (keysEnum.hasMoreElements()) {
      keys.add((String)keysEnum.nextElement());
    }
    Collections.sort(keys);
    for (int i=0; i < keys.size(); i++) {
      String key=keys.get(i);
      String value=properties.getProperty(key,"");
      String description=Const.NVL(variablesList.getDescriptionMap().get(key),"");
      TableItem item=new TableItem(wFields.table,SWT.NONE);
      item.setBackground(3,GUIResource.getInstance().getColorLightGray());
      int pos=1;
      item.setText(pos++,key);
      item.setText(pos++,value);
      item.setText(pos++,description);
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 catch (  Exception e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"KettlePropertiesFileDialog.Exception.ErrorLoadingData.Title"),BaseMessages.getString(PKG,"KettlePropertiesFileDialog.Exception.ErrorLoadingData.Message"),e);
  }
}
