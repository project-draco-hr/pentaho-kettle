{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"accept_filenames",acceptingFilenames);
    rep.saveStepAttribute(id_transformation,id_step,"passing_through_fields",passingThruFields);
    rep.saveStepAttribute(id_transformation,id_step,"accept_field",acceptingField);
    rep.saveStepAttribute(id_transformation,id_step,"accept_stepname",(acceptingStep != null ? acceptingStep.getName() : ""));
    rep.saveStepAttribute(id_transformation,id_step,"separator",separator);
    rep.saveStepAttribute(id_transformation,id_step,"enclosure",enclosure);
    rep.saveStepAttribute(id_transformation,id_step,"enclosure_breaks",breakInEnclosureAllowed);
    rep.saveStepAttribute(id_transformation,id_step,"escapechar",escapeCharacter);
    rep.saveStepAttribute(id_transformation,id_step,"header",header);
    rep.saveStepAttribute(id_transformation,id_step,"nr_headerlines",nrHeaderLines);
    rep.saveStepAttribute(id_transformation,id_step,"footer",footer);
    rep.saveStepAttribute(id_transformation,id_step,"nr_footerlines",nrFooterLines);
    rep.saveStepAttribute(id_transformation,id_step,"line_wrapped",lineWrapped);
    rep.saveStepAttribute(id_transformation,id_step,"nr_wraps",nrWraps);
    rep.saveStepAttribute(id_transformation,id_step,"layout_paged",layoutPaged);
    rep.saveStepAttribute(id_transformation,id_step,"nr_lines_per_page",nrLinesPerPage);
    rep.saveStepAttribute(id_transformation,id_step,"nr_lines_doc_header",nrLinesDocHeader);
    rep.saveStepAttribute(id_transformation,id_step,"noempty",noEmptyLines);
    rep.saveStepAttribute(id_transformation,id_step,"include",includeFilename);
    rep.saveStepAttribute(id_transformation,id_step,"include_field",filenameField);
    rep.saveStepAttribute(id_transformation,id_step,"rownum",includeRowNumber);
    rep.saveStepAttribute(id_transformation,id_step,"rownumByFile",rowNumberByFile);
    rep.saveStepAttribute(id_transformation,id_step,"rownum_field",rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,"format",fileFormat);
    rep.saveStepAttribute(id_transformation,id_step,"encoding",encoding);
    rep.saveStepAttribute(id_transformation,id_step,"add_to_result_filenames",isaddresult);
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    for (int i=0; i < fileName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"file_name",fileName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_mask",fileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"exlude_file_mask",excludeFileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_required",fileRequired[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"include_subfolders",includeSubFolders[i]);
    }
    rep.saveStepAttribute(id_transformation,id_step,"file_type",fileType);
    rep.saveStepAttribute(id_transformation,id_step,"compression",fileCompression);
    for (int i=0; i < filter.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_position",filter[i].getFilterPosition());
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_string",filter[i].getFilterString());
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_is_last_line",filter[i].isFilterLastLine());
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_is_positive",filter[i].isFilterPositive());
    }
    for (int i=0; i < inputFields.length; i++) {
      TextFileInputField field=inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",field.getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_nullif",field.getNullString());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_ifnull",field.getIfNullValue());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_position",field.getPosition());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",field.getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_repeat",field.isRepeated());
    }
    rep.saveStepAttribute(id_transformation,id_step,"error_ignored",errorIgnored);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_skipped",errorLineSkipped);
    rep.saveStepAttribute(id_transformation,id_step,"error_count_field",errorCountField);
    rep.saveStepAttribute(id_transformation,id_step,"error_fields_field",errorFieldsField);
    rep.saveStepAttribute(id_transformation,id_step,"error_text_field",errorTextField);
    rep.saveStepAttribute(id_transformation,id_step,"bad_line_files_dest_dir",warningFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"bad_line_files_ext",warningFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_files_dest_dir",errorFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_files_ext",errorFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"line_number_files_dest_dir",lineNumberFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"line_number_files_ext",lineNumberFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"date_format_lenient",dateFormatLenient);
    rep.saveStepAttribute(id_transformation,id_step,"date_format_locale",dateFormatLocale.toString());
    rep.saveStepAttribute(id_transformation,id_step,"shortFileFieldName",shortFileFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"pathFieldName",pathFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"hiddenFieldName",hiddenFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"lastModificationTimeFieldName",lastModificationTimeFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"uriNameFieldName",uriNameFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"rootUriNameFieldName",rootUriNameFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"extensionFieldName",extensionFieldName);
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
