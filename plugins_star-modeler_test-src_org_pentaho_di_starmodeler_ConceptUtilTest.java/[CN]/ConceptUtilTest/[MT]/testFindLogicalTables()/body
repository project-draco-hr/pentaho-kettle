{
  final LogicalModel logicalModel=mock(LogicalModel.class);
  final TableType dimension=TableType.DIMENSION;
  final LogicalTable logicalTable1=mock(LogicalTable.class);
  when(logicalTable1.getProperty(eq(DefaultPropertyID.TABLE_TYPE.getId()))).thenReturn(dimension);
  final LogicalTable logicalTable2=mock(LogicalTable.class);
  when(logicalTable2.getProperty(eq(DefaultPropertyID.TABLE_TYPE.getId()))).thenReturn(TableType.FACT);
  final LogicalTable logicalTable3=mock(LogicalTable.class);
  when(logicalTable3.getProperty(eq(DefaultPropertyID.TABLE_TYPE.getId()))).thenReturn(dimension);
  when(logicalModel.getLogicalTables()).thenReturn(new LinkedList<LogicalTable>(){
{
      add(logicalTable1);
      add(logicalTable2);
      add(logicalTable3);
    }
  }
);
  final List<LogicalTable> logicalTables=ConceptUtil.findLogicalTables(logicalModel,dimension);
  assertEquals(2,logicalTables.size());
  assertEquals(logicalTable1,logicalTables.get(0));
  assertEquals(logicalTable3,logicalTables.get(1));
}
