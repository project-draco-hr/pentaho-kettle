{
  this();
  int nrEntries=XMLHandler.countNodes(node,"entry");
  for (int i=0; i < nrEntries; i++) {
    Node entryNode=XMLHandler.getSubNodeByNr(node,"entry",i);
    String slaveServerName=XMLHandler.getTagValue(entryNode,"slavename");
    String stepName=XMLHandler.getTagValue(entryNode,"stepname");
    int stepCopyNr=Const.toInt(XMLHandler.getTagValue(entryNode,"stepcopy"),-1);
    int partitionNr=Const.toInt(XMLHandler.getTagValue(entryNode,"partition"),-1);
    addPartition(slaveServerName,stepName,stepCopyNr,partitionNr);
  }
  Node originalPartitionSchemasNode=XMLHandler.getSubNode(node,"original-partition-schemas");
  if (originalPartitionSchemasNode != null) {
    originalPartitionSchemas=new ArrayList<PartitionSchema>();
    int nrSchemas=XMLHandler.countNodes(originalPartitionSchemasNode,PartitionSchema.XML_TAG);
    for (int i=0; i < nrSchemas; i++) {
      Node schemaNode=XMLHandler.getSubNodeByNr(originalPartitionSchemasNode,PartitionSchema.XML_TAG,i);
      PartitionSchema originalPartitionSchema=new PartitionSchema(schemaNode);
      originalPartitionSchemas.add(originalPartitionSchema);
    }
  }
}
