{
  int flags=SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_TRANSPARENT;
  if (notePadMeta.isSelected())   gc.setLineWidth(2);
 else   gc.setLineWidth(1);
  org.eclipse.swt.graphics.Point ext;
  if (Const.isEmpty(notePadMeta.getNote())) {
    ext=new org.eclipse.swt.graphics.Point(10,10);
  }
 else {
    ext=gc.textExtent(notePadMeta.getNote(),flags);
  }
  Point p=new Point(ext.x,ext.y);
  Point loc=notePadMeta.getLocation();
  Point note=real2screen(loc.x,loc.y,offset);
  int margin=Const.NOTE_MARGIN;
  p.x+=2 * margin;
  p.y+=2 * margin;
  int width=notePadMeta.width;
  int height=notePadMeta.height;
  if (p.x > width)   width=p.x;
  if (p.y > height)   height=p.y;
  int noteshape[]=new int[]{note.x,note.y,note.x + width + 2 * margin,note.y,note.x + width + 2 * margin,note.y + height,note.x + width,note.y + height + 2 * margin,note.x + width,note.y + height,note.x + width + 2 * margin,note.y + height,note.x + width,note.y + height + 2 * margin,note.x,note.y + height + 2 * margin};
  gc.setForeground(darkGray);
  gc.setBackground(yellow);
  gc.fillPolygon(noteshape);
  gc.drawPolygon(noteshape);
  gc.setForeground(black);
  if (!Const.isEmpty(notePadMeta.getNote())) {
    gc.drawText(notePadMeta.getNote(),note.x + margin,note.y + margin,flags);
  }
  notePadMeta.width=width;
  notePadMeta.height=height;
  if (notePadMeta.isSelected())   gc.setLineWidth(1);
 else   gc.setLineWidth(2);
  if (!shadow) {
    areaOwners.add(new AreaOwner(note.x,note.y,width,height,transMeta,notePadMeta));
  }
}
