{
  CheckResult cr;
  if (prev == null || prev.size() == 0)   cr=new CheckResult(CheckResult.TYPE_RESULT_WARNING,BaseMessages.getString(PKG,"SetValueFieldMeta.CheckResult.NoReceivingFieldsError"),stepinfo);
 else   cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"SetValueFieldMeta.CheckResult.StepReceivingFieldsOK",prev.size() + ""),stepinfo);
  remarks.add(cr);
  if (input.length > 0)   cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"SetValueFieldMeta.CheckResult.StepRecevingInfoFromOtherSteps"),stepinfo);
 else   cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"SetValueFieldMeta.CheckResult.NoInputReceivedError"),stepinfo);
  remarks.add(cr);
  if (fieldName == null && fieldName.length == 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"SetValueFieldMeta.CheckResult.FieldsSelectionEmpty"),stepinfo);
    remarks.add(cr);
  }
 else {
    for (int i=0; i < fieldName.length; i++) {
      if (Const.isEmpty(replaceByFieldValue[i])) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"SetValueFieldMeta.CheckResult.ReplaceByValueMissing",fieldName[i],"" + i),stepinfo);
        remarks.add(cr);
      }
    }
  }
}
