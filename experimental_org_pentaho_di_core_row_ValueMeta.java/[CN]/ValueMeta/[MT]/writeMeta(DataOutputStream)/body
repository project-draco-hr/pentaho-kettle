{
  try {
    int type=getType();
    outputStream.writeInt(type);
    outputStream.writeInt(storageType);
    if (storageType == STORAGE_TYPE_INDEXED) {
      if (index == null) {
        outputStream.writeInt(-1);
      }
 else {
        outputStream.writeInt(index.length);
        for (int i=0; i < index.length; i++) {
switch (type) {
case TYPE_STRING:
            writeString(outputStream,(String)index[i]);
          break;
case TYPE_NUMBER:
        writeNumber(outputStream,(Double)index[i]);
      break;
case TYPE_INTEGER:
    writeInteger(outputStream,(Long)index[i]);
  break;
case TYPE_DATE:
writeDate(outputStream,(Date)index[i]);
break;
case TYPE_BIGNUMBER:
writeBigNumber(outputStream,(BigDecimal)index[i]);
break;
case TYPE_BOOLEAN:
writeBoolean(outputStream,(Boolean)index[i]);
break;
case TYPE_BINARY:
writeBinary(outputStream,(byte[])index[i]);
break;
default :
throw new KettleFileException("Unable to serialize indexe storage type for data type " + getType());
}
}
}
}
writeString(outputStream,name);
outputStream.writeInt(getLength());
outputStream.writeInt(getPrecision());
writeString(outputStream,origin);
writeString(outputStream,comments);
writeString(outputStream,conversionMask);
writeString(outputStream,decimalSymbol);
writeString(outputStream,groupingSymbol);
writeString(outputStream,currencySymbol);
outputStream.writeBoolean(caseInsensitive);
outputStream.writeBoolean(sortedDescending);
outputStream.writeBoolean(outputPaddingEnabled);
outputStream.writeBoolean(dateFormatLenient);
writeString(outputStream,dateFormatLocale != null ? dateFormatLocale.toString() : null);
}
 catch (IOException e) {
throw new KettleFileException("Unable to write value metadata to output stream",e);
}
}
