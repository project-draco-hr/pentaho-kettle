{
  try {
    directory=XMLHandler.getTagValue(stepnode,"directory");
    prefix=XMLHandler.getTagValue(stepnode,"prefix");
    sortSize=XMLHandler.getTagValue(stepnode,"sort_size");
    if (Const.isEmpty(sortSize))     sortSize=Integer.toString(Const.SORT_SIZE);
    compressFiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"compress"));
    compressFilesVariable=XMLHandler.getTagValue(stepnode,"compress_variable");
    onlyPassingUniqueRows="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"unique_rows"));
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      fieldName[i]=XMLHandler.getTagValue(fnode,"name");
      String asc=XMLHandler.getTagValue(fnode,"ascending");
      if (asc.equalsIgnoreCase("Y"))       ascending[i]=true;
 else       ascending[i]=false;
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
