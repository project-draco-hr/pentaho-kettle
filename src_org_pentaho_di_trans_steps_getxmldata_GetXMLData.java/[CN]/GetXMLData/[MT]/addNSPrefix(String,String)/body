{
  if (data.NSPath.size() > 0) {
    String fullPath=loopPath;
    if (!path.equals(fullPath)) {
      for (      String tmp : path.split("/")) {
        if (tmp.equals("..")) {
          fullPath=fullPath.substring(0,fullPath.lastIndexOf("/"));
        }
 else {
          fullPath+="/" + tmp;
        }
      }
    }
    int[] indexs=new int[fullPath.split("/").length - 1];
    java.util.Arrays.fill(indexs,-1);
    int length=0;
    for (int i=0; i < data.NSPath.size(); i++) {
      if (data.NSPath.get(i).length() > length && fullPath.startsWith(data.NSPath.get(i))) {
        java.util.Arrays.fill(indexs,data.NSPath.get(i).split("/").length - 2,indexs.length,i);
        length=data.NSPath.get(i).length();
      }
    }
    StringBuilder newPath=new StringBuilder();
    String[] pathStrs=path.split("/");
    for (int i=0; i < pathStrs.length; i++) {
      String tmp=pathStrs[i];
      if (newPath.length() > 0) {
        newPath.append("/");
      }
      if (tmp.length() > 0 && tmp.indexOf(":") == -1 && tmp.indexOf(".") == -1 && tmp.indexOf("@") == -1) {
        int index=indexs[i + indexs.length - pathStrs.length];
        if (index >= 0) {
          newPath.append("pre").append(index).append(":").append(tmp);
        }
 else {
          newPath.append(tmp);
        }
      }
 else {
        newPath.append(tmp);
      }
    }
    return newPath.toString();
  }
  return path;
}
