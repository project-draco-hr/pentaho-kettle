{
  try {
    if (data.filenr >= data.files.nrOfFiles()) {
      if (log.isDetailed())       logDetailed(BaseMessages.getString(PKG,"GetXMLData.Log.FinishedProcessing"));
      return false;
    }
    data.file=(FileObject)data.files.getFile(data.filenr);
    data.filenr++;
    if (meta.isIgnoreEmptyFile() && data.file.getContent().getSize() == 0) {
      logBasic(BaseMessages.getString(PKG,"GetXMLData.Error.FileSizeZero","" + data.file.getName()));
      openNextFile();
    }
 else {
      if (log.isDetailed())       logDetailed(BaseMessages.getString(PKG,"GetXMLData.Log.OpeningFile",data.file.toString()));
      if (!setDocument(null,data.file,false,false)) {
        if (data.stopPruning)         return false;
        throw new KettleException(BaseMessages.getString(PKG,"GetXMLData.Log.UnableCreateDocument"));
      }
      if (data.prunePath == null) {
        if (!applyXPath()) {
          throw new KettleException(BaseMessages.getString(PKG,"GetXMLData.Log.UnableApplyXPath"));
        }
      }
      addFileToResultFilesname(data.file);
      if (log.isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"GetXMLData.Log.FileOpened",data.file.toString()));
        logDetailed(BaseMessages.getString(PKG,"GetXMLData.Log.LoopFileOccurences","" + data.nodesize,data.file.getName().getBaseName()));
      }
    }
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"GetXMLData.Log.UnableToOpenFile","" + data.filenr,data.file.toString(),e.toString()));
    stopAll();
    setErrors(1);
    return false;
  }
  return true;
}
