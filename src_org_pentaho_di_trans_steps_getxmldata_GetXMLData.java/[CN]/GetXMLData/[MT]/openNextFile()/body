{
  try {
    if (data.filenr >= data.files.nrOfFiles()) {
      if (log.isDetailed())       logDetailed(Messages.getString("GetXMLData.Log.FinishedProcessing"));
      return false;
    }
    data.last_file=(data.filenr == data.files.nrOfFiles() - 1);
    data.file=(FileObject)data.files.getFile(data.filenr);
    long fileSize=data.file.getContent().getSize();
    data.filenr++;
    if (meta.isIgnoreEmptyFile() && fileSize == 0) {
      log.logError(toString(),Messages.getString("GetXMLData.Error.FileSizeZero","" + data.file.getName()));
      openNextFile();
    }
 else {
      if (log.isDetailed())       log.logDetailed(toString(),Messages.getString("GetXMLData.Log.OpeningFile",data.file.toString()));
      if (!setDocument(null,data.file,false,false)) {
        throw new KettleException(Messages.getString("GetXMLData.Log.UnableCreateDocument"));
      }
      if (!applyXPath()) {
        throw new KettleException(Messages.getString("GetXMLData.Log.UnableApplyXPath"));
      }
      addFileToResultFilesname(data.file);
      if (log.isDetailed()) {
        logDetailed(Messages.getString("GetXMLData.Log.FileOpened",data.file.toString()));
        log.logDetailed(toString(),Messages.getString("GetXMLData.Log.LoopFileOccurences","" + data.nodesize,data.file.getName().getBaseName()));
      }
    }
  }
 catch (  Exception e) {
    logError(Messages.getString("GetXMLData.Log.UnableToOpenFile","" + data.filenr,data.file.toString(),e.toString()));
    stopAll();
    setErrors(1);
    return false;
  }
  return true;
}
