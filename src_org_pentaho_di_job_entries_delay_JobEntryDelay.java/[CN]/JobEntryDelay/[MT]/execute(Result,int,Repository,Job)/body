{
  LogWriter log=LogWriter.getInstance();
  Result result=previousResult;
  result.setResult(false);
  int Multiple;
  String Waitscale;
  if (scaleTime == 0) {
    Multiple=1000;
    Waitscale=Messages.getString("JobEntryDelay.SScaleTime.Label");
  }
 else   if (scaleTime == 1) {
    Multiple=60000;
    Waitscale=Messages.getString("JobEntryDelay.MnScaleTime.Label");
  }
 else {
    Multiple=3600000;
    Waitscale=Messages.getString("JobEntryDelay.HrScaleTime.Label");
  }
  try {
    long timeStart=System.currentTimeMillis() / Multiple;
    long iMaximumTimeout=Const.toInt(getrealMaximumTimeout(),Const.toInt(DEFAULT_MAXIMUM_TIMEOUT,0));
    if (log.isDetailed()) {
      log.logDetailed(toString(),Messages.getString("JobEntryDelay.LetsWaitFor.Label",String.valueOf(iMaximumTimeout),String.valueOf(Waitscale)));
    }
    boolean continueLoop=true;
    if (iMaximumTimeout < 0) {
      iMaximumTimeout=Const.toInt(DEFAULT_MAXIMUM_TIMEOUT,0);
      log.logBasic(toString(),Messages.getString("JobEntryDelay.MaximumTimeReset.Label",String.valueOf(iMaximumTimeout),String.valueOf(Waitscale)));
    }
    while (continueLoop && !parentJob.isStopped()) {
      long now=System.currentTimeMillis() / Multiple;
      if ((iMaximumTimeout > 0) && (now >= (timeStart + iMaximumTimeout))) {
        if (log.isDetailed()) {
          log.logDetailed(toString(),Messages.getString("JobEntryDelay.WaitTimeIsElapsed.Label"));
        }
        continueLoop=false;
        result.setResult(true);
      }
 else {
        try {
          Thread.sleep(100);
        }
 catch (        Exception e) {
        }
      }
    }
  }
 catch (  Exception e) {
    result.setResult(false);
    log.logError(toString(),"Error  : " + e.getMessage());
  }
  return result;
}
