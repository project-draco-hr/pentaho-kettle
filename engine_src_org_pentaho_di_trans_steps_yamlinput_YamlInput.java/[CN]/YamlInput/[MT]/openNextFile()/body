{
  try {
    if (data.filenr >= data.files.nrOfFiles()) {
      if (log.isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"YamlInput.Log.FinishedProcessing"));
      }
      return false;
    }
    data.file=data.files.getFile(data.filenr);
    data.filenr++;
    if (meta.isIgnoreEmptyFile() && data.file.getContent().getSize() == 0) {
      if (isBasic()) {
        logBasic(BaseMessages.getString(PKG,"YamlInput.Error.FileSizeZero",data.file.getName()));
      }
      openNextFile();
    }
 else {
      if (isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"YamlInput.Log.OpeningFile",data.file.toString()));
      }
      data.yaml=new YamlReader();
      data.yaml.loadFile(data.file);
      addFileToResultFilesname(data.file);
      if (isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"YamlInput.Log.FileOpened",data.file.toString()));
      }
    }
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"YamlInput.Log.UnableToOpenFile","" + data.filenr,data.file.toString(),e.toString()));
    stopAll();
    setErrors(1);
    logError(Const.getStackTracker(e));
    return false;
  }
  return true;
}
