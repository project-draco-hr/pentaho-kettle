{
  if (first && !meta.isInFields()) {
    first=false;
    data.files=meta.getFiles(this);
    if (!meta.isdoNotFailIfNoFile() && data.files.nrOfFiles() == 0) {
      throw new KettleException(BaseMessages.getString(PKG,"YamlInput.Log.NoFiles"));
    }
    handleMissingFiles();
    data.outputRowMeta=new RowMeta();
    data.totalPreviousFields=0;
    data.totalOutFields=data.totalPreviousFields + data.nrInputFields;
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    data.totalOutStreamFields=data.outputRowMeta.size();
  }
  Object[] r=getOneRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (log.isRowLevel()) {
    logRowlevel(BaseMessages.getString(PKG,"YamlInput.Log.ReadRow",data.outputRowMeta.getString(r)));
  }
  incrementLinesOutput();
  data.rownr++;
  putRow(data.outputRowMeta,r);
  if (meta.getRowLimit() > 0 && data.rownr > meta.getRowLimit()) {
    setOutputDone();
    return false;
  }
  return true;
}
