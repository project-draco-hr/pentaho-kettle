{
  when(selectedTrashFileItemsMock.toArray()).thenReturn(new TrashBrowseController.UIDeletedObject[]{uiDirectoryObjectMock});
  when(selectedTrashFileItemsMock.size()).thenReturn(1);
  doReturn(uiDirectoryObjectMock).when(selectedTrashFileItemsMock).get(0);
  doReturn("/home/admin").when(uiDirectoryObjectMock).getOriginalParentPath();
  doReturn(objectIdMock).when(uiDirectoryObjectMock).getId();
  doReturn(null).when(uiDirectoryObjectMock).getType();
  doReturn(Arrays.asList(uiDirectoryObjectMock)).when(trashServiceMock).getTrash();
  doReturn(null).when(repositoryMock).findDirectory("/home/admin");
  doReturn(transMetaMock).when(repositoryMock).loadTransformation(objectIdMock,null);
  doReturn("directory").when(uiDirectoryObjectMock).getName();
  doReturn(null).when(repositoryMock).findDirectory("/home/admin/directory");
  trBrController.undelete();
  verify(messageBoxMock).setTitle("Error");
  verify(messageBoxMock).setAcceptLabel("OK");
  verify(messageBoxMock).setMessage(eq("Unable to restore directory /home/admin/directory cause : Directory not found"));
  verify(messageBoxMock,times(1)).open();
  verify(deckMock,times(1)).setSelectedIndex(1);
}
