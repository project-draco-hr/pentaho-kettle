{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"AppendDialog.Shell.Label"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"AppendDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  String[] previousSteps=transMeta.getPrevStepNames(stepname);
  wlHeadHop=new Label(shell,SWT.RIGHT);
  wlHeadHop.setText(BaseMessages.getString(PKG,"AppendDialog.HeadHop.Label"));
  props.setLook(wlHeadHop);
  fdlHeadHop=new FormData();
  fdlHeadHop.left=new FormAttachment(0,0);
  fdlHeadHop.right=new FormAttachment(middle,-margin);
  fdlHeadHop.top=new FormAttachment(wStepname,margin);
  wlHeadHop.setLayoutData(fdlHeadHop);
  wHeadHop=new CCombo(shell,SWT.BORDER);
  props.setLook(wHeadHop);
  if (previousSteps != null) {
    wHeadHop.setItems(previousSteps);
  }
  wHeadHop.addModifyListener(lsMod);
  fdHeadHop=new FormData();
  fdHeadHop.left=new FormAttachment(middle,0);
  fdHeadHop.top=new FormAttachment(wStepname,margin);
  fdHeadHop.right=new FormAttachment(100,0);
  wHeadHop.setLayoutData(fdHeadHop);
  wlTailHop=new Label(shell,SWT.RIGHT);
  wlTailHop.setText(BaseMessages.getString(PKG,"AppendDialog.TailHop.Label"));
  props.setLook(wlTailHop);
  fdlTailHop=new FormData();
  fdlTailHop.left=new FormAttachment(0,0);
  fdlTailHop.right=new FormAttachment(middle,-margin);
  fdlTailHop.top=new FormAttachment(wHeadHop,margin);
  wlTailHop.setLayoutData(fdlTailHop);
  wTailHop=new CCombo(shell,SWT.BORDER);
  props.setLook(wTailHop);
  if (previousSteps != null) {
    wTailHop.setItems(previousSteps);
  }
  wTailHop.addModifyListener(lsMod);
  fdTailHop=new FormData();
  fdTailHop.top=new FormAttachment(wHeadHop,margin);
  fdTailHop.left=new FormAttachment(middle,0);
  fdTailHop.right=new FormAttachment(100,0);
  wTailHop.setLayoutData(fdTailHop);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTailHop);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
