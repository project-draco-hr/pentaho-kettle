{
  try {
    long dbids[]=rep.getDatabaseIDs();
    for (int i=0; i < dbids.length; i++) {
      DatabaseMeta databaseMeta=rep.loadDatabaseMeta(dbids[i]);
      databaseMeta.shareVariablesWith(this);
      DatabaseMeta check=findDatabase(databaseMeta.getName());
      if (check == null || overWriteShared) {
        if (databaseMeta.getName() != null) {
          addOrReplaceDatabase(databaseMeta);
          if (!overWriteShared)           databaseMeta.setChanged(false);
        }
      }
    }
    setChanged(false);
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobMeta.Log.UnableToReadDatabaseIDSFromRepository"),dbe);
  }
catch (  KettleException ke) {
    throw new KettleException(BaseMessages.getString(PKG,"JobMeta.Log.UnableToReadDatabasesFromRepository"),ke);
  }
}
