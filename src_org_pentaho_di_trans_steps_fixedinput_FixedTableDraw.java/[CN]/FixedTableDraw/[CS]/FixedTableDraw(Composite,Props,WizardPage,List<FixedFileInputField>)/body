{
  super(parent,SWT.NO_BACKGROUND | SWT.H_SCROLL | SWT.V_SCROLL);
  this.wPage=wPage;
  this.fields=fields;
  prevfieldname="";
  potential_click=-1;
  cache_image=null;
  prev_fromx=-1;
  prev_tox=-1;
  prev_fromy=-1;
  prev_toy=-1;
  display=parent.getDisplay();
  bg=GUIResource.getInstance().getColorBackground();
  fontheight=props.getGridFont().getHeight();
  black=GUIResource.getInstance().getColorBlack();
  red=GUIResource.getInstance().getColorRed();
  blue=GUIResource.getInstance().getColorBlue();
  lgray=GUIResource.getInstance().getColorLightGray();
  hori=getHorizontalBar();
  vert=getVerticalBar();
  dummy_image=new Image(display,1,1);
  dummy_gc=new GC(dummy_image);
  String teststring="ABCDEF";
  fontwidth=Math.round(dummy_gc.textExtent(teststring).x / teststring.length());
  setBackground(bg);
  addPaintListener(new PaintListener(){
    public void paintControl(    PaintEvent e){
      FixedTableDraw.this.paintControl(e);
    }
  }
);
  addDisposeListener(new DisposeListener(){
    public void widgetDisposed(    DisposeEvent arg0){
      dummy_gc.dispose();
      dummy_image.dispose();
      if (cache_image != null)       cache_image.dispose();
    }
  }
);
  hori.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      redraw();
    }
  }
);
  vert.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      redraw();
    }
  }
);
  hori.setThumb(100);
  vert.setThumb(100);
  addMouseListener(new MouseAdapter(){
    public void mouseDown(    MouseEvent e){
      Point offset=getOffset();
      int posx=(int)Math.round((double)(e.x - LEFT - MARGIN- offset.x) / ((double)fontwidth));
      if (posx > 0) {
        potential_click=posx;
        redraw();
      }
    }
    public void mouseUp(    MouseEvent e){
      if (potential_click > 0) {
        setMarker(potential_click);
        potential_click=-1;
        redraw();
      }
    }
  }
);
  addMouseMoveListener(new MouseMoveListener(){
    public void mouseMove(    MouseEvent e){
      int posx=(int)Math.round((double)(e.x - LEFT - MARGIN- offset.x) / ((double)fontwidth));
      if (potential_click >= 0) {
        if (posx > 0) {
          potential_click=posx;
          redraw();
        }
      }
      FixedFileInputField field=getFieldOnPosition(posx);
      if (field != null && !field.getName().equalsIgnoreCase(prevfieldname)) {
        setToolTipText(field.getName() + " is a " + ValueMeta.getTypeDesc(field.getType())+ ".  The width is "+ field.getWidth());
        prevfieldname=field.getName();
      }
    }
  }
);
}
