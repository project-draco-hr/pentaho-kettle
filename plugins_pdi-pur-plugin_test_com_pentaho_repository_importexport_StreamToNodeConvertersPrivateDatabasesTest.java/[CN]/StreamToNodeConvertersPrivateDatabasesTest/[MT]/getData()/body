{
  RepositoryFile repositoryFile=new RepositoryFile.Builder("test file").build();
  IUnifiedRepository pur=mock(IUnifiedRepository.class);
  when(pur.getFileById(FILE_ID)).thenReturn(repositoryFile);
  TransMeta transMeta=new TransMeta();
  JobMeta jobMeta=new JobMeta();
  Repository repository=mock(Repository.class);
  when(repository.loadTransformation(any(StringObjectId.class),anyString())).thenReturn(transMeta);
  when(repository.loadJob(any(StringObjectId.class),anyString())).thenReturn(jobMeta);
  StreamToTransNodeConverter transNodeConverter=new StreamToTransNodeConverter(pur);
  transNodeConverter=spy(transNodeConverter);
  doReturn(repository).when(transNodeConverter).connectToRepository();
  StreamToJobNodeConverter jobNodeConverter=new StreamToJobNodeConverter(pur);
  jobNodeConverter=spy(jobNodeConverter);
  doReturn(repository).when(jobNodeConverter).connectToRepository();
  Object[] trans={transNodeConverter,TransMeta.XML_TAG,transMeta};
  Object[] job={jobNodeConverter,JobMeta.XML_TAG,jobMeta};
  return asList(trans,job);
}
