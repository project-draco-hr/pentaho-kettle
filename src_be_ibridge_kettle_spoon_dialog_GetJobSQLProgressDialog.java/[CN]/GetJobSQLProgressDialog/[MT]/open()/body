{
  IRunnableWithProgress op=new IRunnableWithProgress(){
    public void run(    IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
      LocalVariables.getInstance().createKettleVariables(Thread.currentThread(),shell.getDisplay().getSyncThread(),true);
      try {
        stats=jobMeta.getSQLStatements(repository,monitor);
      }
 catch (      KettleException e) {
        throw new InvocationTargetException(e,Messages.getString("GetJobSQLProgressDialog.RuntimeError.UnableToGenerateSQL.Exception",e.getMessage()));
      }
    }
  }
;
  try {
    ProgressMonitorDialog pmd=new ProgressMonitorDialog(shell);
    pmd.run(false,false,op);
  }
 catch (  InvocationTargetException e) {
    new ErrorDialog(shell,props,Messages.getString("GetJobSQLProgressDialog.Dialog.UnableToGenerateSQL.Title"),Messages.getString("GetJobSQLProgressDialog.Dialog.UnableToGenerateSQL.Message"),e);
    stats=null;
  }
catch (  InterruptedException e) {
    new ErrorDialog(shell,props,Messages.getString("GetJobSQLProgressDialog.Dialog.UnableToGenerateSQL.Title"),Messages.getString("GetJobSQLProgressDialog.Dialog.UnableToGenerateSQL.Message"),e);
    stats=null;
  }
  return stats;
}
