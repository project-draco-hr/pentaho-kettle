{
  if (authenticationConsumerFactory.getConsumedType().isInstance(authenticationProvider)) {
    return new DefaultAuthenticationPerformer(authenticationProvider,authenticationConsumerFactory);
  }
 else   if (AuthenticationConsumerInvocationHandler.isCompatible(authenticationConsumerFactory.getConsumedType(),authenticationProvider)) {
    return new ClassloaderBridgingAuthenticationPerformer<ReturnType,CreateArgType,ConsumedType>(authenticationProvider,authenticationConsumerFactory);
  }
  return null;
}
