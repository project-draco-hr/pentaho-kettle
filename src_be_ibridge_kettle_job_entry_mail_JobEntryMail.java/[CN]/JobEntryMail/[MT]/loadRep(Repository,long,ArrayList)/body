{
  try {
    super.loadRep(rep,id_jobentry,databases);
    server=rep.getJobEntryAttributeString(id_jobentry,"server");
    destination=rep.getJobEntryAttributeString(id_jobentry,"destination");
    replyAddress=rep.getJobEntryAttributeString(id_jobentry,"replyto");
    subject=rep.getJobEntryAttributeString(id_jobentry,"subject");
    includeDate=rep.getJobEntryAttributeBoolean(id_jobentry,"include_date");
    contactPerson=rep.getJobEntryAttributeString(id_jobentry,"contact_person");
    contactPhone=rep.getJobEntryAttributeString(id_jobentry,"contact_phone");
    comment=rep.getJobEntryAttributeString(id_jobentry,"comment");
    includingFiles=rep.getJobEntryAttributeBoolean(id_jobentry,"include_files");
    usingAuthentication=rep.getJobEntryAttributeBoolean(id_jobentry,"use_auth");
    authenticationUser=rep.getJobEntryAttributeString(id_jobentry,"auth_user");
    authenticationPassword=rep.getJobEntryAttributeString(id_jobentry,"auth_password");
    int nrTypes=rep.countNrJobEntryAttributes(id_jobentry,"file_type");
    allocate(nrTypes);
    for (int i=0; i < nrTypes; i++) {
      String typeCode=rep.getJobEntryAttributeString(id_jobentry,i,"file_type");
      fileType[i]=ResultFile.getType(typeCode);
    }
    zipFiles=rep.getJobEntryAttributeBoolean(id_jobentry,"zip_files");
    zipFilename=rep.getJobEntryAttributeString(id_jobentry,"zip_name");
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException("Unable to load job entry of type mail from the repository with id_jobentry=" + id_jobentry,dbe);
  }
}
