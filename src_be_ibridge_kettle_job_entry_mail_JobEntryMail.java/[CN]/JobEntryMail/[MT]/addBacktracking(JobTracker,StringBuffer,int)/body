{
  int nr=jobTracker.nrJobTrackers();
  messageText.append(Const.rightPad(" ",level * 2));
  messageText.append(Const.NVL(jobTracker.getJobName(),"-"));
  JobEntryResult jer=jobTracker.getJobEntryResult();
  if (jer != null) {
    messageText.append(" : ");
    if (jer.getJobEntry() != null && jer.getJobEntry().getName() != null) {
      messageText.append(" : ");
      messageText.append(jer.getJobEntry().getName());
    }
    if (jer.getResult() != null) {
      messageText.append(" : ");
      messageText.append("[" + jer.getResult().toString() + "]");
    }
    if (jer.getReason() != null) {
      messageText.append(" : ");
      messageText.append(jer.getReason());
    }
    if (jer.getComment() != null) {
      messageText.append(" : ");
      messageText.append(jer.getComment());
    }
    if (jer.getLogDate() != null) {
      messageText.append(" (");
      messageText.append(new Value("time",jer.getLogDate()).getString());
      messageText.append(")");
    }
  }
  messageText.append(Const.CR);
  for (int i=0; i < nr; i++) {
    JobTracker jt=jobTracker.getJobTracker(i);
    addBacktracking(jt,messageText,level + 1);
  }
}
