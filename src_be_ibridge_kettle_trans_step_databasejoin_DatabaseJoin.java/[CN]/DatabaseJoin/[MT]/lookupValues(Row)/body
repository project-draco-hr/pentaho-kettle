{
  debug="Start of lookupValues()";
  if (first) {
    first=false;
    debug="first row: set lookup statement";
    logDetailed("Checking row: " + row.toString());
    data.keynrs=new int[meta.getParameterField().length];
    debug="first row: get key fieldnrs";
    for (int i=0; i < meta.getParameterField().length; i++) {
      data.keynrs[i]=row.searchValueIndex(meta.getParameterField()[i]);
      if (data.keynrs[i] < 0) {
        throw new KettleStepException("Field [" + meta.getParameterField()[i] + "] is required and couldn't be found!");
      }
    }
  }
  debug="get parameters";
  Row param=new Row();
  for (int i=0; i < data.keynrs.length; i++) {
    param.addValue(row.getValue(data.keynrs[i]));
  }
  debug="open query & resultset";
  ResultSet rs=data.db.openQuery(data.pstmt,param);
  debug="get row";
  Row add=data.db.getRow(rs);
  linesInput++;
  int counter=0;
  while (add != null && (meta.getRowLimit() == 0 || counter < meta.getRowLimit())) {
    counter++;
    Row newrow=new Row(row);
    newrow.addRow(add);
    putRow(newrow);
    logRowlevel("Put out row: " + add);
    if (meta.getRowLimit() == 0 || counter < meta.getRowLimit()) {
      add=data.db.getRow(rs);
      linesInput++;
    }
  }
  if (counter == 0 && meta.isOuterJoin()) {
    if (data.notfound == null) {
      data.notfound=new Row(data.db.getReturnRow());
      for (int i=0; i < data.notfound.size(); i++)       data.notfound.getValue(i).setNull();
    }
    Row newrow=new Row(row);
    newrow.addRow(data.notfound);
    putRow(newrow);
  }
  debug="close query";
  data.db.closeQuery(rs);
  debug="end of lookupValues()";
}
