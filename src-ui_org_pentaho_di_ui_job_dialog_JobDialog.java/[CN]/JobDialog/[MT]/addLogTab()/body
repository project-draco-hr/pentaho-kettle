{
  wLogTab=new CTabItem(wTabFolder,SWT.NONE);
  wLogTab.setText(Messages.getString("JobDialog.LogTab.Label"));
  FormLayout LogLayout=new FormLayout();
  LogLayout.marginWidth=Const.MARGIN;
  LogLayout.marginHeight=Const.MARGIN;
  Composite wLogComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wLogComp);
  wLogComp.setLayout(LogLayout);
  wlLogconnection=new Label(wLogComp,SWT.RIGHT);
  wlLogconnection.setText(Messages.getString("JobDialog.LogConnection.Label"));
  props.setLook(wlLogconnection);
  fdlLogconnection=new FormData();
  fdlLogconnection.top=new FormAttachment(wDirectory,margin * 4);
  fdlLogconnection.left=new FormAttachment(0,0);
  fdlLogconnection.right=new FormAttachment(middle,0);
  wlLogconnection.setLayoutData(fdlLogconnection);
  wbLogconnection=new Button(wLogComp,SWT.PUSH);
  wbLogconnection.setText(BaseMessages.getString("System.Button.Edit"));
  fdbLogconnection=new FormData();
  fdbLogconnection.top=new FormAttachment(wDirectory,margin * 4);
  fdbLogconnection.right=new FormAttachment(100,0);
  wbLogconnection.setLayoutData(fdbLogconnection);
  wbLogconnection.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DatabaseMeta databaseMeta=jobMeta.findDatabase(wLogconnection.getText());
      if (databaseMeta == null)       databaseMeta=new DatabaseMeta();
      DatabaseDialog cid=new DatabaseDialog(shell,databaseMeta);
      cid.setModalDialog(true);
      if (cid.open() != null) {
        wLogconnection.setText(databaseMeta.getName());
      }
    }
  }
);
  wLogconnection=new CCombo(wLogComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogconnection);
  wLogconnection.setToolTipText(Messages.getString("JobDialog.LogConnection.Tooltip"));
  wLogconnection.addModifyListener(lsMod);
  fdLogconnection=new FormData();
  fdLogconnection.top=new FormAttachment(wDirectory,margin * 4);
  fdLogconnection.left=new FormAttachment(middle,0);
  fdLogconnection.right=new FormAttachment(wbLogconnection,-margin);
  wLogconnection.setLayoutData(fdLogconnection);
  for (int i=0; i < jobMeta.nrDatabases(); i++) {
    DatabaseMeta meta=jobMeta.getDatabase(i);
    wLogconnection.add(meta.getName());
  }
  wLogconnection.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      setFlags();
    }
  }
);
  wlLogtable=new Label(wLogComp,SWT.RIGHT);
  wlLogtable.setText(Messages.getString("JobDialog.LogTable.Label"));
  props.setLook(wlLogtable);
  fdlLogtable=new FormData();
  fdlLogtable.left=new FormAttachment(0,0);
  fdlLogtable.right=new FormAttachment(middle,0);
  fdlLogtable.top=new FormAttachment(wLogconnection,margin);
  wlLogtable.setLayoutData(fdlLogtable);
  wLogtable=new Text(wLogComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogtable);
  wLogtable.setToolTipText(Messages.getString("JobDialog.LogTable.Tooltip"));
  wLogtable.addModifyListener(lsMod);
  fdLogtable=new FormData();
  fdLogtable.left=new FormAttachment(middle,0);
  fdLogtable.top=new FormAttachment(wLogconnection,margin);
  fdLogtable.right=new FormAttachment(100,0);
  wLogtable.setLayoutData(fdLogtable);
  wlBatch=new Label(wLogComp,SWT.RIGHT);
  wlBatch.setText(Messages.getString("JobDialog.UseBatchID.Label"));
  props.setLook(wlBatch);
  fdlBatch=new FormData();
  fdlBatch.left=new FormAttachment(0,0);
  fdlBatch.top=new FormAttachment(wLogtable,margin * 3);
  fdlBatch.right=new FormAttachment(middle,-margin);
  wlBatch.setLayoutData(fdlBatch);
  wBatch=new Button(wLogComp,SWT.CHECK);
  props.setLook(wBatch);
  wBatch.setToolTipText(Messages.getString("JobDialog.UseBatchID.Tooltip"));
  fdBatch=new FormData();
  fdBatch.left=new FormAttachment(middle,0);
  fdBatch.top=new FormAttachment(wLogtable,margin * 3);
  fdBatch.right=new FormAttachment(100,0);
  wBatch.setLayoutData(fdBatch);
  wlBatchTrans=new Label(wLogComp,SWT.RIGHT);
  wlBatchTrans.setText(Messages.getString("JobDialog.PassBatchID.Label"));
  props.setLook(wlBatchTrans);
  fdlBatchTrans=new FormData();
  fdlBatchTrans.left=new FormAttachment(0,0);
  fdlBatchTrans.top=new FormAttachment(wBatch,margin);
  fdlBatchTrans.right=new FormAttachment(middle,-margin);
  wlBatchTrans.setLayoutData(fdlBatchTrans);
  wBatchTrans=new Button(wLogComp,SWT.CHECK);
  props.setLook(wBatchTrans);
  wBatchTrans.setToolTipText(Messages.getString("JobDialog.PassBatchID.Tooltip"));
  fdBatchTrans=new FormData();
  fdBatchTrans.left=new FormAttachment(middle,0);
  fdBatchTrans.top=new FormAttachment(wBatch,margin);
  fdBatchTrans.right=new FormAttachment(100,0);
  wBatchTrans.setLayoutData(fdBatchTrans);
  wlLogfield=new Label(wLogComp,SWT.RIGHT);
  wlLogfield.setText(Messages.getString("JobDialog.UseLogField.Label"));
  props.setLook(wlLogfield);
  fdlLogfield=new FormData();
  fdlLogfield.left=new FormAttachment(0,0);
  fdlLogfield.top=new FormAttachment(wBatchTrans,margin);
  fdlLogfield.right=new FormAttachment(middle,-margin);
  wlLogfield.setLayoutData(fdlLogfield);
  wLogfield=new Button(wLogComp,SWT.CHECK);
  props.setLook(wLogfield);
  wLogfield.setToolTipText(Messages.getString("JobDialog.UseLogField.Tooltip"));
  fdLogfield=new FormData();
  fdLogfield.left=new FormAttachment(middle,0);
  fdLogfield.top=new FormAttachment(wBatchTrans,margin);
  fdLogfield.right=new FormAttachment(100,0);
  wLogfield.setLayoutData(fdLogfield);
  wLogfield.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setFlags();
    }
  }
);
  wlLogSizeLimit=new Label(wLogComp,SWT.RIGHT);
  wlLogSizeLimit.setText(Messages.getString("JobDialog.LogSizeLimit.Label"));
  wlLogSizeLimit.setToolTipText(Messages.getString("JobDialog.LogSizeLimit.Tooltip"));
  props.setLook(wlLogSizeLimit);
  FormData fdlLogSizeLimit=new FormData();
  fdlLogSizeLimit.left=new FormAttachment(0,0);
  fdlLogSizeLimit.right=new FormAttachment(middle,-margin);
  fdlLogSizeLimit.top=new FormAttachment(wLogfield,margin);
  wlLogSizeLimit.setLayoutData(fdlLogSizeLimit);
  wLogSizeLimit=new TextVar(jobMeta,wLogComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wLogSizeLimit.setToolTipText(Messages.getString("JobDialog.LogSizeLimit.Tooltip"));
  props.setLook(wLogSizeLimit);
  wLogSizeLimit.addModifyListener(lsMod);
  FormData fdLogSizeLimit=new FormData();
  fdLogSizeLimit.left=new FormAttachment(middle,0);
  fdLogSizeLimit.top=new FormAttachment(wLogfield,margin);
  fdLogSizeLimit.right=new FormAttachment(100,0);
  wLogSizeLimit.setLayoutData(fdLogSizeLimit);
  Label wlSharedObjectsFile=new Label(wLogComp,SWT.RIGHT);
  wlSharedObjectsFile.setText(Messages.getString("JobDialog.SharedObjectsFile.Label"));
  props.setLook(wlSharedObjectsFile);
  FormData fdlSharedObjectsFile=new FormData();
  fdlSharedObjectsFile.left=new FormAttachment(0,0);
  fdlSharedObjectsFile.right=new FormAttachment(middle,-margin);
  fdlSharedObjectsFile.top=new FormAttachment(wLogfield,3 * margin);
  wlSharedObjectsFile.setLayoutData(fdlSharedObjectsFile);
  wSharedObjectsFile=new TextVar(jobMeta,wLogComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wlSharedObjectsFile.setToolTipText(Messages.getString("JobDialog.SharedObjectsFile.Tooltip"));
  wSharedObjectsFile.setToolTipText(Messages.getString("JobDialog.SharedObjectsFile.Tooltip"));
  props.setLook(wSharedObjectsFile);
  FormData fdSharedObjectsFile=new FormData();
  fdSharedObjectsFile.left=new FormAttachment(middle,0);
  fdSharedObjectsFile.top=new FormAttachment(wLogfield,3 * margin);
  fdSharedObjectsFile.right=new FormAttachment(100,0);
  wSharedObjectsFile.setLayoutData(fdSharedObjectsFile);
  wSharedObjectsFile.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      sharedObjectsFileChanged=true;
    }
  }
);
  FormData fdLogComp=new FormData();
  fdLogComp.left=new FormAttachment(0,0);
  fdLogComp.top=new FormAttachment(0,0);
  fdLogComp.right=new FormAttachment(100,0);
  fdLogComp.bottom=new FormAttachment(100,0);
  wLogComp.setLayoutData(fdLogComp);
  wLogComp.layout();
  wLogTab.setControl(wLogComp);
}
