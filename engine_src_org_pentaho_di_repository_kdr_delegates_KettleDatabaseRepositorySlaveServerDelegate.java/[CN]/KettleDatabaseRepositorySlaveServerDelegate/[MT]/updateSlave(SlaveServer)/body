{
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_NAME),slaveServer.getName());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_HOST_NAME),slaveServer.getHostname());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_PORT),slaveServer.getPort());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_WEB_APP_NAME),slaveServer.getWebAppName());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_USERNAME),slaveServer.getUsername());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_PASSWORD),Encr.encryptPasswordIfNotUsingVariables(slaveServer.getPassword()));
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_PROXY_HOST_NAME),slaveServer.getProxyHostname());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_PROXY_PORT),slaveServer.getProxyPort());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_SLAVE_NON_PROXY_HOSTS),slaveServer.getNonProxyHosts());
  table.addValue(new ValueMetaBoolean(KettleDatabaseRepository.FIELD_SLAVE_MASTER),Boolean.valueOf(slaveServer.isMaster()));
  repository.connectionDelegate.updateTableRow(KettleDatabaseRepository.TABLE_R_SLAVE,KettleDatabaseRepository.FIELD_SLAVE_ID_SLAVE,table,slaveServer.getObjectId());
}
