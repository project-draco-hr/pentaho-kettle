{
  HTTPPOSTData data=new HTTPPOSTData();
  int[] index={0,1};
  RowMeta meta=new RowMeta();
  meta.addValueMeta(new ValueMetaString("fieldName"));
  meta.addValueMeta(new ValueMetaInteger("codeFieldName"));
  Object[] expectedRow=new Object[]{"",204L};
  HTTPPOST HTTPPOST=new HTTPPOSTHandler(stepMockHelper.stepMeta,data,0,stepMockHelper.transMeta,stepMockHelper.trans,false);
  RowMetaInterface inputRowMeta=mock(RowMetaInterface.class);
  HTTPPOST.setInputRowMeta(inputRowMeta);
  when(inputRowMeta.clone()).thenReturn(inputRowMeta);
  when(stepMockHelper.processRowsStepMetaInterface.getUrl()).thenReturn(HTTP_LOCALHOST_9998);
  when(stepMockHelper.processRowsStepMetaInterface.getQueryField()).thenReturn(new String[]{});
  when(stepMockHelper.processRowsStepMetaInterface.getArgumentField()).thenReturn(new String[]{});
  when(stepMockHelper.processRowsStepMetaInterface.getResultCodeFieldName()).thenReturn("ResultCodeFieldName");
  when(stepMockHelper.processRowsStepMetaInterface.getFieldName()).thenReturn("ResultFieldName");
  HTTPPOST.init(stepMockHelper.processRowsStepMetaInterface,data);
  assertTrue(HTTPPOST.processRow(stepMockHelper.processRowsStepMetaInterface,data));
  Object[] out=((HTTPPOSTHandler)HTTPPOST).getOutputRow();
  assertTrue(meta.equals(out,expectedRow,index));
}
