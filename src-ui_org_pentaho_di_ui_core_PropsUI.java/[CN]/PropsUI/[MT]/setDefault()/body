{
  FontData fd;
  RGB col;
  lastUsedFiles=new ArrayList<LastUsedFile>();
  openTabFiles=new ArrayList<LastUsedFile>();
  screens=new Hashtable<String,WindowProperty>();
  properties.setProperty(STRING_LOG_LEVEL,getLogLevel());
  properties.setProperty(STRING_LOG_FILTER,getLogFilter());
  if (display != null) {
    fd=getFixedFont();
    properties.setProperty(STRING_FONT_FIXED_NAME,fd.getName());
    properties.setProperty(STRING_FONT_FIXED_SIZE,"" + fd.getHeight());
    properties.setProperty(STRING_FONT_FIXED_STYLE,"" + fd.getStyle());
    fd=getDefaultFont();
    properties.setProperty(STRING_FONT_DEFAULT_NAME,fd.getName());
    properties.setProperty(STRING_FONT_DEFAULT_SIZE,"" + fd.getHeight());
    properties.setProperty(STRING_FONT_DEFAULT_STYLE,"" + fd.getStyle());
    fd=getDefaultFont();
    properties.setProperty(STRING_FONT_GRAPH_NAME,fd.getName());
    properties.setProperty(STRING_FONT_GRAPH_SIZE,"" + fd.getHeight());
    properties.setProperty(STRING_FONT_GRAPH_STYLE,"" + fd.getStyle());
    fd=getDefaultFont();
    properties.setProperty(STRING_FONT_GRID_NAME,fd.getName());
    properties.setProperty(STRING_FONT_GRID_SIZE,"" + fd.getHeight());
    properties.setProperty(STRING_FONT_GRID_STYLE,"" + fd.getStyle());
    fd=getDefaultFont();
    properties.setProperty(STRING_FONT_NOTE_NAME,fd.getName());
    properties.setProperty(STRING_FONT_NOTE_SIZE,"" + fd.getHeight());
    properties.setProperty(STRING_FONT_NOTE_STYLE,"" + fd.getStyle());
    col=getBackgroundRGB();
    properties.setProperty(STRING_BACKGROUND_COLOR_R,"" + col.red);
    properties.setProperty(STRING_BACKGROUND_COLOR_G,"" + col.green);
    properties.setProperty(STRING_BACKGROUND_COLOR_B,"" + col.blue);
    col=getGraphColorRGB();
    properties.setProperty(STRING_GRAPH_COLOR_R,"" + col.red);
    properties.setProperty(STRING_GRAPH_COLOR_G,"" + col.green);
    properties.setProperty(STRING_GRAPH_COLOR_B,"" + col.blue);
    properties.setProperty(STRING_ICON_SIZE,"" + getIconSize());
    properties.setProperty(STRING_LINE_WIDTH,"" + getLineWidth());
    properties.setProperty(STRING_SHADOW_SIZE,"" + getShadowSize());
    properties.setProperty(STRING_MAX_UNDO,"" + getMaxUndo());
    setSashWeights(getSashWeights());
    String prop=BasePropertyHandler.getProperty("Default_UI_Properties_Resource","org.pentaho.di.ui.core.default");
    try {
      ResourceBundle bundle=ResourceBundle.getBundle(prop);
      if (bundle != null) {
        Enumeration<String> enumer=bundle.getKeys();
        String theKey;
        while (enumer.hasMoreElements()) {
          theKey=enumer.nextElement();
          properties.setProperty(theKey,bundle.getString(theKey));
        }
      }
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
  }
}
