{
  try {
    return Subject.doAs(loginContext.getSubject(),new PrivilegedExceptionAction<Object>(){
      @Override public Object run() throws Exception {
        Object result=method.invoke(delegate,args);
        if (result != null) {
          for (          Class<?> iface : result.getClass().getInterfaces()) {
            if (interfacesToDelegate.contains(iface)) {
              result=forObject(result,loginContext,interfacesToDelegate);
              break;
            }
          }
        }
        return result;
      }
    }
);
  }
 catch (  PrivilegedActionException e) {
    if (e.getCause() instanceof InvocationTargetException) {
      throw ((InvocationTargetException)e.getCause()).getCause();
    }
    throw e;
  }
}
