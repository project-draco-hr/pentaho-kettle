{
  meta=(LucidDBStreamingLoaderMeta)smi;
  data=(LucidDBStreamingLoaderData)sdi;
  if (super.init(smi,sdi)) {
    try {
      if (log.isDebug())       logDebug("Connecting to LucidDB...");
      if (meta.getDatabaseMeta() == null) {
        logError(BaseMessages.getString(PKG,"Delete.Init.LuciDBStreamingLoader.Init.ConnectionMissing",getStepname()));
        return false;
      }
      data.db=new Database(this,meta.getDatabaseMeta());
      data.db.shareVariablesWith(this);
      if (getTransMeta().isUsingUniqueConnections()) {
synchronized (getTrans()) {
          data.db.connect(getTrans().getThreadName(),getPartitionID());
        }
      }
 else {
        data.db.connect(getPartitionID());
      }
      data.db.setAutoCommit(true);
    }
 catch (    NumberFormatException e) {
      e.printStackTrace();
      logError(e.getMessage());
      return false;
    }
catch (    KettleDatabaseException e) {
      e.printStackTrace();
      logError(e.getMessage());
      return false;
    }
    return true;
  }
  return false;
}
