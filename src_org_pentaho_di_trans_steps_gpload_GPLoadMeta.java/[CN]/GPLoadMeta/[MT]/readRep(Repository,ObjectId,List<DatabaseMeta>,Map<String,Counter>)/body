{
  try {
    databaseMeta=rep.loadDatabaseMetaFromStepAttribute(id_step,"id_connection",databases);
    maxErrors=rep.getStepAttributeString(id_step,"errors");
    schemaName=rep.getStepAttributeString(id_step,"schema");
    tableName=rep.getStepAttributeString(id_step,"table");
    errorTableName=rep.getStepAttributeString(id_step,"error_table");
    loadMethod=rep.getStepAttributeString(id_step,"load_method");
    loadAction=rep.getStepAttributeString(id_step,"load_action");
    gploadPath=rep.getStepAttributeString(id_step,"gpload_path");
    controlFile=rep.getStepAttributeString(id_step,"control_file");
    dataFile=rep.getStepAttributeString(id_step,"data_file");
    delimiter=rep.getStepAttributeString(id_step,"delimiter");
    logFile=rep.getStepAttributeString(id_step,"log_file");
    eraseFiles=rep.getStepAttributeBoolean(id_step,"erase_files");
    encoding=rep.getStepAttributeString(id_step,"encoding");
    localhostPort=rep.getStepAttributeString(id_step,"localhost_port");
    encloseNumbers=(rep.getStepAttributeString(id_step,"enclose_numbers").equalsIgnoreCase("Y") ? true : false);
    updateCondition=rep.getStepAttributeString(id_step,"update_condition");
    int numberOfLocalHosts=rep.countNrStepAttributes(id_step,"local_host");
    allocateLocalHosts(numberOfLocalHosts);
    for (int i=0; i < numberOfLocalHosts; i++) {
      localHosts[i]=rep.getStepAttributeString(id_step,i,"local_host");
    }
    int nrvalues=rep.countNrStepAttributes(id_step,"stream_name");
    allocate(nrvalues);
    for (int i=0; i < nrvalues; i++) {
      fieldTable[i]=rep.getStepAttributeString(id_step,i,"stream_name");
      fieldStream[i]=rep.getStepAttributeString(id_step,i,"field_name");
      dateMask[i]=rep.getStepAttributeString(id_step,i,"date_mask");
      matchColumn[i]=rep.getStepAttributeBoolean(id_step,i,"match_column");
      updateColumn[i]=rep.getStepAttributeBoolean(id_step,i,"update_column");
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"GPLoadMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository"),e);
  }
}
