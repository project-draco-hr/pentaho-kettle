{
  debug="buildResult";
  Row result=new Row();
  debug="buildResult 1";
  for (int i=0; i < data.groupnrs.length; i++) {
    Value gr=r.getValue(data.groupnrs[i]);
    result.addValue(gr);
  }
  debug="buildResult 2";
  for (int i=0; i < data.subjectnrs.length; i++) {
    Value ag=data.agg.getValue(i);
switch (meta.getAggregateType()[i]) {
case GroupByMeta.TYPE_GROUP_SUM:
      break;
case GroupByMeta.TYPE_GROUP_AVERAGE:
    ag.divide(new Value("c",data.counts[i]));
  break;
case GroupByMeta.TYPE_GROUP_COUNT_ALL:
ag.setValue(data.counts[i]);
break;
case GroupByMeta.TYPE_GROUP_MIN:
break;
case GroupByMeta.TYPE_GROUP_MAX:
break;
default :
break;
}
result.addValue(ag);
}
debug="buildResult 3";
if (meta.getPassFlagField() != null && meta.getPassFlagField().length() > 0) {
Value flag=new Value(meta.getPassFlagField(),Value.VALUE_TYPE_BOOLEAN);
flag.setValue(true);
result.addValue(flag);
}
debug="buildResult end";
return result;
}
