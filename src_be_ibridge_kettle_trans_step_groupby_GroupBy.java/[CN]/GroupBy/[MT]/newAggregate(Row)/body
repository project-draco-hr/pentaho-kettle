{
  for (int i=0; i < data.counts.length; i++)   data.counts[i]=0;
  data.agg=new Row();
  for (int i=0; i < data.subjectnrs.length; i++) {
    Value subj=r.getValue(data.subjectnrs[i]);
    Value v=null;
switch (meta.getAggregateType()[i]) {
case GroupByMeta.TYPE_GROUP_SUM:
case GroupByMeta.TYPE_GROUP_AVERAGE:
case GroupByMeta.TYPE_GROUP_COUNT_ALL:
      v=new Value(meta.getAggregateField()[i],subj.isNumeric() ? subj.getType() : Value.VALUE_TYPE_NUMBER);
switch (subj.getType()) {
case Value.VALUE_TYPE_BIGNUMBER:
      v.setValue(new BigDecimal(0));
    break;
case Value.VALUE_TYPE_INTEGER:
  v.setValue(0L);
break;
case Value.VALUE_TYPE_NUMBER:
default :
v.setValue(0.0);
break;
}
break;
case GroupByMeta.TYPE_GROUP_MIN:
case GroupByMeta.TYPE_GROUP_MAX:
v=new Value(meta.getAggregateField()[i],subj.getType());
v.setValue(subj);
break;
case GroupByMeta.TYPE_GROUP_CONCAT_COMMA:
v=new Value(meta.getAggregateField()[i],Value.VALUE_TYPE_STRING);
v.setValue("");
break;
default :
break;
}
if (meta.getAggregateType()[i] != GroupByMeta.TYPE_GROUP_COUNT_ALL) {
v.setLength(subj.getLength(),subj.getPrecision());
}
if (v != null) data.agg.addValue(v);
}
}
