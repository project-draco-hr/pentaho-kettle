{
  try {
    databaseMeta=DatabaseMeta.findDatabase(databases,XMLHandler.getTagValue(stepnode,"connection"));
    this.cube=XMLHandler.getTagValue(stepnode,"cube");
    measureType=XMLHandler.getTagValue(stepnode,"measuretype");
    clearCube=XMLHandler.getTagValue(stepnode,"clearcube").equals("Y") ? true : false;
    try {
      enableDimensionCache=XMLHandler.getTagValue(stepnode,"enableDimensionCache").equals("Y") ? true : false;
      preloadDimensionCache=XMLHandler.getTagValue(stepnode,"preloadDimensionCache").equals("Y") ? true : false;
      commitSize=Integer.parseInt(XMLHandler.getTagValue(stepnode,"commitSize"));
    }
 catch (    Exception e) {
      enableDimensionCache=false;
      preloadDimensionCache=false;
      commitSize=1000;
    }
    this.fields=new ArrayList<DimensionField>();
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrFields=XMLHandler.countNodes(fields,"field");
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      String dimensionName=XMLHandler.getTagValue(fnode,"dimensionname");
      String fieldName=XMLHandler.getTagValue(fnode,"fieldname");
      String fieldType=XMLHandler.getTagValue(fnode,"fieldtype");
      this.fields.add(new DimensionField(dimensionName,fieldName,fieldType));
    }
    Node measures=XMLHandler.getSubNode(stepnode,"measures");
    int nrMeasures=XMLHandler.countNodes(measures,"measure");
    for (int i=0; i < nrMeasures; ) {
      Node fnode=XMLHandler.getSubNodeByNr(measures,"measure",i);
      String measureName=XMLHandler.getTagValue(fnode,"measurename");
      String fieldName=XMLHandler.getTagValue(fnode,"measurefieldname");
      String fieldType=XMLHandler.getTagValue(fnode,"measurefieldtype");
      this.measureField=new DimensionField(measureName,fieldName,fieldType);
      break;
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
