{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"include",includeFilename);
    rep.saveStepAttribute(id_transformation,id_step,"include_field",filenameField);
    rep.saveStepAttribute(id_transformation,id_step,"addresultfile",addResultFile);
    rep.saveStepAttribute(id_transformation,id_step,"namespaceaware",nameSpaceAware);
    rep.saveStepAttribute(id_transformation,id_step,"ignorecomments",ignorecomments);
    rep.saveStepAttribute(id_transformation,id_step,"readurl",readurl);
    rep.saveStepAttribute(id_transformation,id_step,"validating",validating);
    rep.saveStepAttribute(id_transformation,id_step,"usetoken",usetoken);
    rep.saveStepAttribute(id_transformation,id_step,"IsIgnoreEmptyFile",IsIgnoreEmptyFile);
    rep.saveStepAttribute(id_transformation,id_step,"doNotFailIfNoFile",doNotFailIfNoFile);
    rep.saveStepAttribute(id_transformation,id_step,"rownum",includeRowNumber);
    rep.saveStepAttribute(id_transformation,id_step,"rownum_field",rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    rep.saveStepAttribute(id_transformation,id_step,"loopxpath",loopxpath);
    rep.saveStepAttribute(id_transformation,id_step,"encoding",encoding);
    for (int i=0; i < fileName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"file_name",fileName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_mask",fileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_required",fileRequired[i]);
    }
    for (int i=0; i < inputFields.length; i++) {
      GetXMLDataField field=inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_xpath",field.getXPath());
      rep.saveStepAttribute(id_transformation,id_step,i,"element_type",field.getElementTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",field.getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",field.getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_repeat",field.isRepeated());
    }
    rep.saveStepAttribute(id_transformation,id_step,"IsInFields",inFields);
    rep.saveStepAttribute(id_transformation,id_step,"IsAFile",IsAFile);
    rep.saveStepAttribute(id_transformation,id_step,"XmlField",xmlField);
    rep.saveStepAttribute(id_transformation,id_step,"prunePath",prunePath);
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("GetXMLDataMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
