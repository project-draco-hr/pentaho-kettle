{
  try {
    String soFile=StringUtil.environmentSubstitute(sharedObjectsFile);
    SharedObjects sharedObjects=new SharedObjects(soFile,databases,counters);
    for (int i=0; i < nrDatabases(); i++) {
      SharedObjectInterface sharedObject=getDatabase(i);
      if (sharedObject.isShared()) {
        sharedObjects.storeObject(sharedObject);
      }
    }
    for (int i=0; i < nrSteps(); i++) {
      SharedObjectInterface sharedObject=getStep(i);
      if (sharedObject.isShared()) {
        sharedObjects.storeObject(sharedObject);
      }
    }
    for (int i=0; i < partitionSchemas.size(); i++) {
      SharedObjectInterface sharedObject=(SharedObjectInterface)partitionSchemas.get(i);
      if (sharedObject.isShared()) {
        sharedObjects.storeObject(sharedObject);
      }
    }
    for (int i=0; i < clusterSchemas.size(); i++) {
      SharedObjectInterface sharedObject=(SharedObjectInterface)clusterSchemas.get(i);
      if (sharedObject.isShared()) {
        sharedObjects.storeObject(sharedObject);
      }
    }
    sharedObjects.saveToFile();
  }
 catch (  IOException e) {
  }
}
