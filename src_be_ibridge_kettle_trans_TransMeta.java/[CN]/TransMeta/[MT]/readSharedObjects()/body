{
  String soFile=StringUtil.environmentSubstitute(sharedObjectsFile);
  SharedObjects sharedObjects=new SharedObjects(soFile,databases,counters,slaveServers);
  Map objectsMap=sharedObjects.getObjectsMap();
  Collection objects=objectsMap.values();
  for (Iterator iter=objects.iterator(); iter.hasNext(); ) {
    Object object=iter.next();
    if (object instanceof DatabaseMeta) {
      DatabaseMeta databaseMeta=(DatabaseMeta)object;
      addOrReplaceDatabase(databaseMeta);
    }
 else     if (object instanceof StepMeta) {
      StepMeta stepMeta=(StepMeta)object;
      addOrReplaceStep(stepMeta);
    }
 else     if (object instanceof PartitionSchema) {
      PartitionSchema partitionSchema=(PartitionSchema)object;
      addOrReplacePartitionSchema(partitionSchema);
    }
 else     if (object instanceof ClusterSchema) {
      ClusterSchema clusterSchema=(ClusterSchema)object;
      addOrReplaceClusterSchema(clusterSchema);
    }
  }
}
