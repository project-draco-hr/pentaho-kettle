{
  String xml="";
  xml+="<transformation>" + Const.CR;
  xml+="  <info>" + Const.CR;
  xml+="    " + XMLHandler.addTagValue("name",name);
  xml+="    " + XMLHandler.addTagValue("directory",directory != null ? directory.getPath() : Const.FILE_SEPARATOR);
  xml+="    <log>" + Const.CR;
  xml+="      " + XMLHandler.addTagValue("read",readStep == null ? "" : readStep.getName());
  xml+="      " + XMLHandler.addTagValue("write",writeStep == null ? "" : writeStep.getName());
  xml+="      " + XMLHandler.addTagValue("input",inputStep == null ? "" : inputStep.getName());
  xml+="      " + XMLHandler.addTagValue("output",outputStep == null ? "" : outputStep.getName());
  xml+="      " + XMLHandler.addTagValue("update",updateStep == null ? "" : updateStep.getName());
  xml+="      " + XMLHandler.addTagValue("connection",logConnection == null ? "" : logConnection.getName());
  xml+="      " + XMLHandler.addTagValue("table",logTable);
  xml+="      " + XMLHandler.addTagValue("use_batchid",useBatchId);
  xml+="      " + XMLHandler.addTagValue("use_logfield",logfieldUsed);
  xml+="      </log>" + Const.CR;
  xml+="    <maxdate>" + Const.CR;
  xml+="      " + XMLHandler.addTagValue("connection",maxDateConnection == null ? "" : maxDateConnection.getName());
  xml+="      " + XMLHandler.addTagValue("table",maxDateTable);
  xml+="      " + XMLHandler.addTagValue("field",maxDateField);
  xml+="      " + XMLHandler.addTagValue("offset",maxDateOffset);
  xml+="      " + XMLHandler.addTagValue("maxdiff",maxDateDifference);
  xml+="      </maxdate>" + Const.CR;
  xml+="    " + XMLHandler.addTagValue("size_rowset",sizeRowset);
  xml+="    <dependencies>" + Const.CR;
  for (int i=0; i < nrDependencies(); i++) {
    TransDependency td=getDependency(i);
    xml+=td.getXML();
  }
  xml+="      </dependencies>" + Const.CR;
  xml+="    </info>" + Const.CR;
  xml+="  <notepads>" + Const.CR;
  if (notes != null)   for (int i=0; i < nrNotes(); i++) {
    NotePadMeta ni=getNote(i);
    xml+=ni.getXML();
  }
  xml+="    </notepads>" + Const.CR;
  for (int i=0; i < nrDatabases(); i++) {
    DatabaseMeta dbMeta=getDatabase(i);
    xml+=dbMeta.getXML();
  }
  xml+="  <order>" + Const.CR;
  for (int i=0; i < nrTransHops(); i++) {
    TransHopMeta transHopMeta=getTransHop(i);
    xml+=transHopMeta.getXML();
  }
  xml+="  </order>" + Const.CR + Const.CR;
  for (int i=0; i < nrSteps(); i++) {
    StepMeta stepMeta=getStep(i);
    xml+=stepMeta.getXML();
  }
  xml+="</transformation>" + Const.CR;
  return xml;
}
