{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobEntryMSAccessBulkLoad.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobEntryMSAccessBulkLoad.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(Messages.getString("JobEntryMSAccessBulkLoad.Tab.General.Label"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wSourceGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wSourceGroup);
  wSourceGroup.setText(Messages.getString("JobEntryMSAccessBulkLoad.SourceGroup.Group.Label"));
  FormLayout SourceGroupgroupLayout=new FormLayout();
  SourceGroupgroupLayout.marginWidth=10;
  SourceGroupgroupLayout.marginHeight=10;
  wSourceGroup.setLayout(SourceGroupgroupLayout);
  wlPrevious=new Label(wSourceGroup,SWT.RIGHT);
  wlPrevious.setText(Messages.getString("JobEntryMSAccessBulkLoad.Previous.Label"));
  props.setLook(wlPrevious);
  fdlPrevious=new FormData();
  fdlPrevious.left=new FormAttachment(0,0);
  fdlPrevious.top=new FormAttachment(wName,margin);
  fdlPrevious.right=new FormAttachment(middle,-margin);
  wlPrevious.setLayoutData(fdlPrevious);
  wPrevious=new Button(wSourceGroup,SWT.CHECK);
  props.setLook(wPrevious);
  wPrevious.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.Previous.Tooltip"));
  fdPrevious=new FormData();
  fdPrevious.left=new FormAttachment(middle,0);
  fdPrevious.top=new FormAttachment(wName,margin);
  fdPrevious.right=new FormAttachment(100,0);
  wPrevious.setLayoutData(fdPrevious);
  wPrevious.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      RefreshArgFromPrevious();
    }
  }
);
  WSourceFileFoldername=new Label(wSourceGroup,SWT.RIGHT);
  WSourceFileFoldername.setText(Messages.getString("JobEntryMSAccessBulkLoad.FileFoldername.Label"));
  props.setLook(WSourceFileFoldername);
  fdlSourceFileFoldername=new FormData();
  fdlSourceFileFoldername.left=new FormAttachment(0,0);
  fdlSourceFileFoldername.top=new FormAttachment(wPrevious,margin);
  fdlSourceFileFoldername.right=new FormAttachment(middle,-margin);
  WSourceFileFoldername.setLayoutData(fdlSourceFileFoldername);
  wbSourceFolder=new Button(wSourceGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSourceFolder);
  wbSourceFolder.setText(Messages.getString("JobEntryMSAccessBulkLoad.BrowseFolders.Label"));
  fdbSourceFolder=new FormData();
  fdbSourceFolder.right=new FormAttachment(100,0);
  fdbSourceFolder.top=new FormAttachment(wPrevious,margin);
  wbSourceFolder.setLayoutData(fdbSourceFolder);
  wbSourceFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wSourceFileFoldername.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wSourceFileFoldername.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wSourceFileFoldername.setText(dir);
      }
    }
  }
);
  wbFileFoldername=new Button(wSourceGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFileFoldername);
  wbFileFoldername.setText(Messages.getString("JobEntryMSAccessBulkLoad.BrowseFiles.Label"));
  fdbSourceFileFoldername=new FormData();
  fdbSourceFileFoldername.right=new FormAttachment(wbSourceFolder,-margin);
  fdbSourceFileFoldername.top=new FormAttachment(wPrevious,margin);
  wbFileFoldername.setLayoutData(fdbSourceFileFoldername);
  wSourceFileFoldername=new TextVar(jobMeta,wSourceGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSourceFileFoldername);
  wSourceFileFoldername.addModifyListener(lsMod);
  fdSourceFileFoldername=new FormData();
  fdSourceFileFoldername.left=new FormAttachment(middle,0);
  fdSourceFileFoldername.top=new FormAttachment(wPrevious,margin);
  fdSourceFileFoldername.right=new FormAttachment(wbFileFoldername,-margin);
  wSourceFileFoldername.setLayoutData(fdSourceFileFoldername);
  wSourceFileFoldername.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wSourceFileFoldername.setToolTipText(jobMeta.environmentSubstitute(wSourceFileFoldername.getText()));
    }
  }
);
  wbFileFoldername.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*"});
      if (wSourceFileFoldername.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wSourceFileFoldername.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wSourceFileFoldername.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlincludeSubFolders=new Label(wSourceGroup,SWT.RIGHT);
  wlincludeSubFolders.setText(Messages.getString("JobEntryMSAccessBulkLoad.includeSubFolders.Label"));
  props.setLook(wlincludeSubFolders);
  fdlincludeSubFolders=new FormData();
  fdlincludeSubFolders.left=new FormAttachment(0,0);
  fdlincludeSubFolders.top=new FormAttachment(wSourceFileFoldername,margin);
  fdlincludeSubFolders.right=new FormAttachment(middle,-margin);
  wlincludeSubFolders.setLayoutData(fdlincludeSubFolders);
  wincludeSubFolders=new Button(wSourceGroup,SWT.CHECK);
  props.setLook(wincludeSubFolders);
  wincludeSubFolders.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.includeSubFolders.Tooltip"));
  fdincludeSubFolders=new FormData();
  fdincludeSubFolders.left=new FormAttachment(middle,0);
  fdincludeSubFolders.top=new FormAttachment(wSourceFileFoldername,margin);
  fdincludeSubFolders.right=new FormAttachment(100,0);
  wincludeSubFolders.setLayoutData(fdincludeSubFolders);
  wincludeSubFolders.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlWildcard=new Label(wSourceGroup,SWT.RIGHT);
  wlWildcard.setText(Messages.getString("JobEntryMSAccessBulkLoad.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wincludeSubFolders,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,wSourceGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wWildcard);
  wWildcard.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.Wildcard.Tooltip"));
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wincludeSubFolders,margin);
  fdWildcard.right=new FormAttachment(wbFileFoldername,-margin);
  wWildcard.setLayoutData(fdWildcard);
  wWildcard.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wWildcard.setToolTipText(jobMeta.environmentSubstitute(wWildcard.getText()));
    }
  }
);
  wlDelimiter=new Label(wSourceGroup,SWT.RIGHT);
  wlDelimiter.setText(Messages.getString("JobEntryMSAccessBulkLoad.Delimiter.Label"));
  props.setLook(wlDelimiter);
  fdlDelimiter=new FormData();
  fdlDelimiter.left=new FormAttachment(0,0);
  fdlDelimiter.top=new FormAttachment(wWildcard,margin);
  fdlDelimiter.right=new FormAttachment(middle,-margin);
  wlDelimiter.setLayoutData(fdlDelimiter);
  wDelimiter=new TextVar(jobMeta,wSourceGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDelimiter);
  wDelimiter.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.Delimiter.Tooltip"));
  wDelimiter.addModifyListener(lsMod);
  fdDelimiter=new FormData();
  fdDelimiter.left=new FormAttachment(middle,0);
  fdDelimiter.top=new FormAttachment(wWildcard,margin);
  fdDelimiter.right=new FormAttachment(wbFileFoldername,-margin);
  wDelimiter.setLayoutData(fdDelimiter);
  wDelimiter.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wDelimiter.setToolTipText(jobMeta.environmentSubstitute(wDelimiter.getText()));
    }
  }
);
  fdSourceGroup=new FormData();
  fdSourceGroup.left=new FormAttachment(0,margin);
  fdSourceGroup.top=new FormAttachment(wName,margin);
  fdSourceGroup.right=new FormAttachment(100,-margin);
  wSourceGroup.setLayoutData(fdSourceGroup);
  wTargetGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wTargetGroup);
  wTargetGroup.setText(Messages.getString("JobEntryMSAccessBulkLoad.TargetGroup.Group.Label"));
  FormLayout TargetGroupgroupLayout=new FormLayout();
  TargetGroupgroupLayout.marginWidth=10;
  TargetGroupgroupLayout.marginHeight=10;
  wTargetGroup.setLayout(TargetGroupgroupLayout);
  wlTargetDbname=new Label(wTargetGroup,SWT.RIGHT);
  wlTargetDbname.setText(Messages.getString("JobEntryMSAccessBulkLoad.TargetDbname.Label"));
  props.setLook(wlTargetDbname);
  fdlTargetDbname=new FormData();
  fdlTargetDbname.left=new FormAttachment(0,0);
  fdlTargetDbname.top=new FormAttachment(wSourceGroup,margin);
  fdlTargetDbname.right=new FormAttachment(middle,-margin);
  wlTargetDbname.setLayoutData(fdlTargetDbname);
  wbTargetDbname=new Button(wTargetGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTargetDbname);
  wbTargetDbname.setText(Messages.getString("System.Button.Browse"));
  fdbTargetDbname=new FormData();
  fdbTargetDbname.right=new FormAttachment(100,0);
  fdbTargetDbname.top=new FormAttachment(wSourceGroup,margin);
  wbTargetDbname.setLayoutData(fdbTargetDbname);
  wTargetDbname=new TextVar(jobMeta,wTargetGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTargetDbname);
  wTargetDbname.addModifyListener(lsMod);
  fdTargetDbname=new FormData();
  fdTargetDbname.left=new FormAttachment(middle,0);
  fdTargetDbname.top=new FormAttachment(wSourceGroup,margin);
  fdTargetDbname.right=new FormAttachment(wbTargetDbname,-margin);
  wTargetDbname.setLayoutData(fdTargetDbname);
  wTargetDbname.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wTargetDbname.setToolTipText(jobMeta.environmentSubstitute(wTargetDbname.getText()));
    }
  }
);
  wbTargetDbname.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*"});
      if (wTargetDbname.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wTargetDbname.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wTargetDbname.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlTablename=new Label(wTargetGroup,SWT.RIGHT);
  wlTablename.setText(Messages.getString("JobEntryMSAccessBulkLoad.Tablename.Label"));
  props.setLook(wlTablename);
  fdlTablename=new FormData();
  fdlTablename.left=new FormAttachment(0,0);
  fdlTablename.top=new FormAttachment(wTargetDbname,margin);
  fdlTablename.right=new FormAttachment(middle,-margin);
  wlTablename.setLayoutData(fdlTablename);
  wTablename=new TextVar(jobMeta,wTargetGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTablename);
  wTablename.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.Tablename.Tooltip"));
  wTablename.addModifyListener(lsMod);
  fdTablename=new FormData();
  fdTablename.left=new FormAttachment(middle,0);
  fdTablename.top=new FormAttachment(wTargetDbname,margin);
  fdTablename.right=new FormAttachment(wbTargetDbname,-margin);
  wTablename.setLayoutData(fdTablename);
  wTablename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wTablename.setToolTipText(jobMeta.environmentSubstitute(wTablename.getText()));
    }
  }
);
  fdTargetGroup=new FormData();
  fdTargetGroup.left=new FormAttachment(0,margin);
  fdTargetGroup.top=new FormAttachment(wSourceGroup,margin);
  fdTargetGroup.right=new FormAttachment(100,-margin);
  wTargetGroup.setLayoutData(fdTargetGroup);
  wbaEntry=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaEntry);
  wbaEntry.setText(Messages.getString("JobEntryMSAccessBulkLoad.FilenameAdd.Button"));
  wbaEntry.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.FilenameAdd.Button.Tooltip"));
  fdbaEntry=new FormData();
  fdbaEntry.left=new FormAttachment(0,0);
  fdbaEntry.right=new FormAttachment(100,-margin);
  fdbaEntry.top=new FormAttachment(wTargetGroup,margin);
  wbaEntry.setLayoutData(fdbaEntry);
  wbDelete=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbDelete);
  wbDelete.setText(Messages.getString("JobEntryMSAccessBulkLoad.FilenameDelete.Button"));
  wbDelete.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.FilenameDelete.Tooltip"));
  fdbdDelete=new FormData();
  fdbdDelete.right=new FormAttachment(100,0);
  fdbdDelete.top=new FormAttachment(wbaEntry,10 * margin);
  wbDelete.setLayoutData(fdbdDelete);
  wbEdit=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbEdit);
  wbEdit.setText(Messages.getString("JobEntryMSAccessBulkLoad.FilenameEdit.Button"));
  fdbeSourceFileFolder=new FormData();
  fdbeSourceFileFolder.right=new FormAttachment(100,0);
  fdbeSourceFileFolder.left=new FormAttachment(wbDelete,0,SWT.LEFT);
  fdbeSourceFileFolder.top=new FormAttachment(wbDelete,margin);
  wbEdit.setLayoutData(fdbeSourceFileFolder);
  wlFields=new Label(wGeneralComp,SWT.NONE);
  wlFields.setText(Messages.getString("JobEntryMSAccessBulkLoad.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wbaEntry,margin);
  wlFields.setLayoutData(fdlFields);
  int rows=jobEntry.source_filefolder == null ? 1 : (jobEntry.source_filefolder.length == 0 ? 0 : jobEntry.source_filefolder.length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("JobEntryMSAccessBulkLoad.Fields.SourceFileFolder.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("JobEntryMSAccessBulkLoad.Fields.Wildcard.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("JobEntryMSAccessBulkLoad.Fields.FieldsDelimiter.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("JobEntryMSAccessBulkLoad.Fields.TargetDb.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("JobEntryMSAccessBulkLoad.Fields.TargetTable.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(Messages.getString("JobEntryMSAccessBulkLoad.Fields.SourceFileFolder.Tooltip"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(Messages.getString("JobEntryMSAccessBulkLoad.Fields.Wildcard.Tooltip"));
  colinf[2].setUsingVariables(true);
  colinf[2].setToolTip(Messages.getString("JobCopyFiles.Fields.FieldsDelimiter.Tooltip"));
  colinf[3].setUsingVariables(true);
  colinf[3].setToolTip(Messages.getString("JobCopyFiles.Fields.TargetDb.Tooltip"));
  colinf[4].setUsingVariables(true);
  colinf[4].setToolTip(Messages.getString("JobCopyFiles.Fields.TargetTable.Tooltip"));
  wFields=new TableView(jobMeta,wGeneralComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wbDelete,-margin);
  fdFields.bottom=new FormAttachment(100,-margin);
  wFields.setLayoutData(fdFields);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  wAdvancedTab=new CTabItem(wTabFolder,SWT.NONE);
  wAdvancedTab.setText(Messages.getString("JobEntryMSAccessBulkLoad.Tab.Advanced.Label"));
  wAdvancedComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wAdvancedComp);
  FormLayout advancedLayout=new FormLayout();
  advancedLayout.marginWidth=3;
  advancedLayout.marginHeight=3;
  wAdvancedComp.setLayout(generalLayout);
  wSuccessOn=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wSuccessOn);
  wSuccessOn.setText(Messages.getString("JobEntryMSAccessBulkLoad.SuccessOn.Group.Label"));
  FormLayout successongroupLayout=new FormLayout();
  successongroupLayout.marginWidth=10;
  successongroupLayout.marginHeight=10;
  wSuccessOn.setLayout(successongroupLayout);
  wlSuccessCondition=new Label(wSuccessOn,SWT.RIGHT);
  wlSuccessCondition.setText(Messages.getString("JobEntryMSAccessBulkLoad.SuccessCondition.Label"));
  props.setLook(wlSuccessCondition);
  fdlSuccessCondition=new FormData();
  fdlSuccessCondition.left=new FormAttachment(0,0);
  fdlSuccessCondition.right=new FormAttachment(middle,0);
  fdlSuccessCondition.top=new FormAttachment(0,margin);
  wlSuccessCondition.setLayoutData(fdlSuccessCondition);
  wSuccessCondition=new CCombo(wSuccessOn,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wSuccessCondition.add(Messages.getString("JobEntryMSAccessBulkLoad.SuccessWhenAllWorksFine.Label"));
  wSuccessCondition.add(Messages.getString("JobEntryMSAccessBulkLoad.SuccessWhenAtLeat.Label"));
  wSuccessCondition.add(Messages.getString("JobEntryMSAccessBulkLoad.SuccessWhenErrorsLessThan.Label"));
  wSuccessCondition.select(0);
  props.setLook(wSuccessCondition);
  fdSuccessCondition=new FormData();
  fdSuccessCondition.left=new FormAttachment(middle,0);
  fdSuccessCondition.top=new FormAttachment(0,margin);
  fdSuccessCondition.right=new FormAttachment(100,0);
  wSuccessCondition.setLayoutData(fdSuccessCondition);
  wSuccessCondition.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeSuccessCondition();
    }
  }
);
  wlNrErrorsLessThan=new Label(wSuccessOn,SWT.RIGHT);
  wlNrErrorsLessThan.setText(Messages.getString("JobEntryMSAccessBulkLoad.NrErrorsLessThan.Label"));
  props.setLook(wlNrErrorsLessThan);
  fdlNrErrorsLessThan=new FormData();
  fdlNrErrorsLessThan.left=new FormAttachment(0,0);
  fdlNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdlNrErrorsLessThan.right=new FormAttachment(middle,-margin);
  wlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);
  wNrErrorsLessThan=new TextVar(jobMeta,wSuccessOn,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobEntryMSAccessBulkLoad.NrErrorsLessThan.Tooltip"));
  props.setLook(wNrErrorsLessThan);
  wNrErrorsLessThan.addModifyListener(lsMod);
  fdNrErrorsLessThan=new FormData();
  fdNrErrorsLessThan.left=new FormAttachment(middle,0);
  fdNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdNrErrorsLessThan.right=new FormAttachment(100,-margin);
  wNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);
  fdSuccessOn=new FormData();
  fdSuccessOn.left=new FormAttachment(0,margin);
  fdSuccessOn.top=new FormAttachment(0,margin);
  fdSuccessOn.right=new FormAttachment(100,-margin);
  wSuccessOn.setLayoutData(fdSuccessOn);
  wFileResult=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wFileResult);
  wFileResult.setText(Messages.getString("JobEntryMSAccessBulkLoad.FileResult.Group.Label"));
  FormLayout fileresultgroupLayout=new FormLayout();
  fileresultgroupLayout.marginWidth=10;
  fileresultgroupLayout.marginHeight=10;
  wFileResult.setLayout(fileresultgroupLayout);
  wlAddFileToResult=new Label(wFileResult,SWT.RIGHT);
  wlAddFileToResult.setText(Messages.getString("JobEntryMSAccessBulkLoad.AddFileToResult.Label"));
  props.setLook(wlAddFileToResult);
  fdlAddFileToResult=new FormData();
  fdlAddFileToResult.left=new FormAttachment(0,0);
  fdlAddFileToResult.top=new FormAttachment(wSuccessOn,margin);
  fdlAddFileToResult.right=new FormAttachment(middle,-margin);
  wlAddFileToResult.setLayoutData(fdlAddFileToResult);
  wAddFileToResult=new Button(wFileResult,SWT.CHECK);
  props.setLook(wAddFileToResult);
  wAddFileToResult.setToolTipText(Messages.getString("JobEntryMSAccessBulkLoad.AddFileToResult.Tooltip"));
  fdAddFileToResult=new FormData();
  fdAddFileToResult.left=new FormAttachment(middle,0);
  fdAddFileToResult.top=new FormAttachment(wSuccessOn,margin);
  fdAddFileToResult.right=new FormAttachment(100,0);
  wAddFileToResult.setLayoutData(fdAddFileToResult);
  wAddFileToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdFileResult=new FormData();
  fdFileResult.left=new FormAttachment(0,margin);
  fdFileResult.top=new FormAttachment(wSuccessOn,margin);
  fdFileResult.right=new FormAttachment(100,-margin);
  wFileResult.setLayoutData(fdFileResult);
  fdAdvancedComp=new FormData();
  fdAdvancedComp.left=new FormAttachment(0,0);
  fdAdvancedComp.top=new FormAttachment(0,0);
  fdAdvancedComp.right=new FormAttachment(100,0);
  fdAdvancedComp.bottom=new FormAttachment(100,0);
  wAdvancedComp.setLayoutData(fdGeneralComp);
  wAdvancedComp.layout();
  wAdvancedTab.setControl(wAdvancedComp);
  props.setLook(wAdvancedComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wName,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFields.add(new String[]{wSourceFileFoldername.getText(),wWildcard.getText(),wDelimiter.getText(),wTargetDbname.getText(),wTablename.getText()});
      wSourceFileFoldername.setText("");
      wWildcard.setText("");
      wDelimiter.setText("");
      wTargetDbname.setText("");
      wTablename.setText("");
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
;
  wbaEntry.addSelectionListener(selA);
  wSourceFileFoldername.addSelectionListener(selA);
  wbDelete.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx[]=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wbEdit.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFields.getSelectionIndex();
      if (idx >= 0) {
        String string[]=wFields.getItem(idx);
        wSourceFileFoldername.setText(string[0]);
        wWildcard.setText(string[1]);
        wDelimiter.setText(string[2]);
        wTargetDbname.setText(string[3]);
        wTablename.setText(string[4]);
        wFields.remove(idx);
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wSourceFileFoldername.addSelectionListener(lsDef);
  wTargetDbname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  activeSuccessCondition();
  RefreshArgFromPrevious();
  wTabFolder.setSelection(0);
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
