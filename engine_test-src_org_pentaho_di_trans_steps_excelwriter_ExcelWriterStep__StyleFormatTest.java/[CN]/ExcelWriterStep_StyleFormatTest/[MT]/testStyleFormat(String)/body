{
  setupStepMock(fileType);
  createStepMeta(fileType);
  createStepData(fileType);
  step.init(stepMeta,stepData);
  List<Object[]> rows=createRowData();
  for (int i=0; i < rows.size(); i++) {
    step.writeNextLine(rows.get(i));
  }
  Row xlsRow=stepData.sheet.getRow(0);
  Cell baseCell=xlsRow.getCell(6);
  CellStyle baseCellStyle=baseCell.getCellStyle();
  DataFormat format=stepData.wb.createDataFormat();
  xlsRow=stepData.sheet.getRow(2);
  for (int i=0; i < stepData.inputRowMeta.size(); i++) {
    Cell cell=xlsRow.getCell(i);
    CellStyle cellStyle=cell.getCellStyle();
    if (i > 0) {
      assertEquals(cellStyle.getBorderRight(),baseCellStyle.getBorderRight());
      assertEquals(cellStyle.getFillPattern(),baseCellStyle.getFillPattern());
    }
 else {
      assertFalse(cellStyle.getBorderRight() == baseCellStyle.getBorderRight());
      assertFalse(cellStyle.getFillPattern() == baseCellStyle.getFillPattern());
    }
    if (i != 1) {
      assertEquals(format.getFormat(cellStyle.getDataFormat()),"0.00000");
    }
 else {
      assertEquals(format.getFormat(cellStyle.getDataFormat()),"##0,000.0");
    }
  }
}
