{
  List<GridMetaEntry> gridMetaEntries=new ArrayList<GridMetaEntry>();
  List<List<String>> dataLines=new ArrayList<List<String>>();
  for (  StepInjectionMetaEntry lookFields : all) {
    Entry fieldsEntry=Entry.findEntry(lookFields.getKey());
    if (fieldsEntry != null) {
      if (fieldsEntry == Entry.FIELDS) {
        for (        StepInjectionMetaEntry lookField : lookFields.getDetails()) {
          Entry fieldEntry=Entry.findEntry(lookField.getKey());
          if (fieldEntry != null) {
            if (fieldEntry == Entry.FIELD) {
              GridMetaEntry gridMetaEntry=new GridMetaEntry();
              List<StepInjectionMetaEntry> entries=lookField.getDetails();
              for (              StepInjectionMetaEntry entry : entries) {
                Entry metaEntry=Entry.findEntry(entry.getKey());
                if (metaEntry != null) {
                  String value=(String)entry.getValue();
switch (metaEntry) {
case NAME:
                    gridMetaEntry.fieldName=value;
                  break;
case TYPE:
                gridMetaEntry.fieldType=value;
              break;
case LENGTH:
            gridMetaEntry.fieldLength=Const.toInt(value,-1);
          break;
case PRECISION:
        gridMetaEntry.fieldPrecision=Const.toInt(value,-1);
      break;
case CURRENCY:
    gridMetaEntry.currency=value;
  break;
case GROUP:
gridMetaEntry.group=value;
break;
case DECIMAL:
gridMetaEntry.decimal=value;
break;
case FORMAT:
gridMetaEntry.fieldFormat=value;
break;
case EMPTY_STRING:
gridMetaEntry.setEmptyString="Y".equalsIgnoreCase(value) || "TRUE".equalsIgnoreCase(value);
break;
default :
break;
}
}
}
gridMetaEntries.add(gridMetaEntry);
}
}
}
}
}
}
List<String> line=new ArrayList<String>();
for (StepInjectionMetaEntry lookFields : all) {
Entry fieldsEntry=Entry.findEntry(lookFields.getKey());
if (fieldsEntry != null) {
if (fieldsEntry == Entry.DATA_LINES) {
for (StepInjectionMetaEntry lookField : lookFields.getDetails()) {
Entry fieldEntry=Entry.findEntry(lookField.getKey());
if (fieldEntry != null) {
if (fieldEntry == Entry.DATA_LINE) {
List<StepInjectionMetaEntry> entries=lookField.getDetails();
for (StepInjectionMetaEntry entry : entries) {
Entry metaEntry=Entry.findEntry(entry.getKey());
if (metaEntry != null) {
String value=(String)entry.getValue();
switch (metaEntry) {
case DATA_VALUE:
line.add(value);
if (line.size() >= gridMetaEntries.size()) {
dataLines.add(line);
line=new ArrayList<String>();
}
break;
default :
break;
}
}
}
}
}
}
}
}
}
if (gridMetaEntries.size() > 0) {
meta.allocate(gridMetaEntries.size());
for (int i=0; i < gridMetaEntries.size(); i++) {
GridMetaEntry entry=gridMetaEntries.get(i);
meta.getFieldName()[i]=entry.fieldName;
meta.getFieldType()[i]=entry.fieldType;
meta.getFieldFormat()[i]=entry.fieldFormat;
meta.getFieldLength()[i]=entry.fieldLength;
meta.getFieldPrecision()[i]=entry.fieldPrecision;
meta.getCurrency()[i]=entry.currency;
meta.getGroup()[i]=entry.group;
meta.getDecimal()[i]=entry.decimal;
meta.isSetEmptyString()[i]=entry.setEmptyString;
}
}
if (dataLines.size() > 0) {
meta.setDataLines(dataLines);
}
}
