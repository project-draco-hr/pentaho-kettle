{
  CheckResult cr;
  if (input.length > 0) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"This step is not expecting nor reading any input",stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"Not receiving any input from other steps.",stepMeta);
    remarks.add(cr);
  }
  String[] files=getFilePaths(transMeta);
  if (files == null || files.length == 0) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"No files can be found to read.",stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"This step is reading " + files.length + " files.",stepMeta);
    remarks.add(cr);
  }
  if (getInputPosition().length == 0) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"No location elements given. Please specify the location of the repeating node in the XML document.",stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"At least one location element specified.",stepMeta);
    remarks.add(cr);
  }
  if (getInputFields().length == 0) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"No field elements given. Please specify the fields you wish to extract from the XML document.",stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"At least one field element specified.",stepMeta);
    remarks.add(cr);
  }
}
