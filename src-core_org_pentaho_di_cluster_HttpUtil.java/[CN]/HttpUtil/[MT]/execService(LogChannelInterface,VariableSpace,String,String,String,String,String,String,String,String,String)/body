{
  HttpClient client=SlaveConnectionManager.getInstance().createHttpClient();
  addCredentials(client,space,hostname,port,webAppName,username,password);
  addProxy(client,space,hostname,proxyHostname,proxyPort,nonProxyHosts);
  HttpMethod method=new GetMethod(constructUrl(space,hostname,port,webAppName,serviceAndArguments));
  InputStream inputStream=null;
  BufferedInputStream bufferedInputStream=null;
  try {
    int result=client.executeMethod(method);
    log.logDebug(BaseMessages.getString(PKG,"SlaveServer.DEBUG_ResponseStatus",Integer.toString(result)));
    inputStream=method.getResponseBodyAsStream();
    bufferedInputStream=new BufferedInputStream(inputStream,1000);
    StringBuffer bodyBuffer=new StringBuffer();
    int c;
    while ((c=bufferedInputStream.read()) != -1)     bodyBuffer.append((char)c);
    String body=bodyBuffer.toString();
    log.logDetailed(BaseMessages.getString(PKG,"SlaveServer.DETAILED_FinishedReading",Integer.toString(body.getBytes().length)));
    log.logDebug(BaseMessages.getString(PKG,"SlaveServer.DEBUG_ResponseBody",body));
    return body;
  }
  finally {
    if (bufferedInputStream != null) {
      bufferedInputStream.close();
    }
    if (inputStream != null) {
      inputStream.close();
    }
    method.releaseConnection();
    log.logDetailed(BaseMessages.getString(PKG,"SlaveServer.DETAILED_ExecutedService",serviceAndArguments,hostname));
  }
}
