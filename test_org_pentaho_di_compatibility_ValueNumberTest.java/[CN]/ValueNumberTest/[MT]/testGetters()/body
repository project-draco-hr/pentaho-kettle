{
  ValueNumber vs1=new ValueNumber(-4.0D);
  ValueNumber vs2=new ValueNumber(0.0D);
  ValueNumber vs3=new ValueNumber(3.0D);
  ValueNumber vs4=new ValueNumber(3.5D);
  assertEquals(true,vs1.getBoolean());
  assertEquals(false,vs2.getBoolean());
  assertEquals(true,vs3.getBoolean());
  assertEquals("-4.0",vs1.getString());
  assertEquals("0.0",vs2.getString());
  assertEquals("3.0",vs3.getString());
  assertEquals(-4.0D,vs1.getNumber(),0.001D);
  assertEquals(0.0D,vs2.getNumber(),0.001D);
  assertEquals(3.0D,vs3.getNumber(),0.001D);
  assertEquals(-4L,vs1.getInteger());
  assertEquals(0L,vs2.getInteger());
  assertEquals(3L,vs3.getInteger());
  assertEquals(4L,vs4.getInteger());
  assertEquals(new BigDecimal(-4L),vs1.getBigNumber());
  assertEquals(new BigDecimal(0L),vs2.getBigNumber());
  assertEquals(new BigDecimal(3L),vs3.getBigNumber());
  assertEquals(BigDecimal.valueOf(3.5D),vs4.getBigNumber());
  assertEquals(-4L,vs1.getDate().getTime());
  assertEquals(0L,vs2.getDate().getTime());
  assertEquals(3L,vs3.getDate().getTime());
  assertEquals(3L,vs4.getDate().getTime());
  assertEquals(new Double(-4.0D),vs1.getSerializable());
  assertEquals(new Double(0.0D),vs2.getSerializable());
  assertEquals(new Double(3.0D),vs3.getSerializable());
}
