{
  ResolverUtil<StepPluginMeta> resolver=new ResolverUtil<StepPluginMeta>();
  String allPackages=packages;
  String extraPackages=System.getProperty(Const.KETTLE_PLUGIN_PACKAGES);
  if (!Const.isEmpty(extraPackages)) {
    allPackages+="," + extraPackages;
  }
  resolver.find(new ResolverUtil.AnnotatedWith(Step.class),allPackages != null ? allPackages.split(",") : new String[]{});
  Collection<StepPluginMeta> steps=new LinkedHashSet<StepPluginMeta>(resolver.size());
  for (  Class<?> clazz : resolver.getClasses()) {
    Step step=clazz.getAnnotation(Step.class);
    String[] stepName=step.name();
    if (stepName.length == 1 && stepName[0].equals(""))     stepName=new String[]{clazz.getName()};
    String packageName=step.i18nPackageName();
    if (Const.isEmpty(packageName))     packageName=org.pentaho.di.trans.step.Messages.class.getPackage().getName();
    String altPackageName=clazz.getPackage().getName();
    String description=BaseMessages.getString(packageName,step.description());
    if (description.startsWith("!") && description.endsWith("!"))     description=Messages.getString(step.description());
    if (description.startsWith("!") && description.endsWith("!"))     description=BaseMessages.getString(altPackageName,step.description());
    String tooltip=BaseMessages.getString(packageName,step.tooltip());
    if (tooltip.startsWith("!") && tooltip.endsWith("!"))     tooltip=Messages.getString(step.tooltip());
    if (tooltip.startsWith("!") && tooltip.endsWith("!"))     tooltip=BaseMessages.getString(altPackageName,step.tooltip());
    String category;
    if (step.category() != StepCategory.CATEGORY_USER_DEFINED) {
      category=StepCategory.STANDARD_CATEGORIES[step.category()].getName();
    }
 else {
      category=BaseMessages.getString(packageName,step.categoryDescription());
      if (category.startsWith("!") && category.endsWith("!"))       category=Messages.getString(step.categoryDescription());
      if (category.startsWith("!") && category.endsWith("!"))       category=BaseMessages.getString(altPackageName,step.categoryDescription());
    }
    steps.add(new StepPluginMeta(clazz,stepName,description,tooltip,step.image(),category));
  }
  return (Collection<T>)steps;
}
