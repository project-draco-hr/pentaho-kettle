{
  ResolverUtil<StepPluginMeta> resolver=new ResolverUtil<StepPluginMeta>();
  resolver.find(new ResolverUtil.AnnotatedWith(Step.class),packages != null ? packages.split(",") : new String[]{});
  Collection<StepPluginMeta> steps=new LinkedHashSet<StepPluginMeta>(resolver.size());
  for (  Class<?> clazz : resolver.getClasses()) {
    Step step=clazz.getAnnotation(Step.class);
    String[] stepName=step.name();
    if (stepName.length == 1 && stepName[0].equals(""))     stepName=new String[]{clazz.getName()};
    String packageName=step.i18nPackageName();
    if (Const.isEmpty(packageName))     packageName=org.pentaho.di.trans.step.Messages.class.getPackage().getName();
    String description=BaseMessages.getString(step.i18nPackageName(),step.description());
    if (description.startsWith("!") && description.endsWith("!"))     description=Messages.getString(step.description());
    String tooltip=BaseMessages.getString(step.i18nPackageName(),step.tooltip());
    if (tooltip.startsWith("!") && tooltip.endsWith("!"))     tooltip=Messages.getString(step.tooltip());
    steps.add(new StepPluginMeta(clazz,stepName,description,tooltip,step.image(),step.category().getName()));
  }
  return (Collection<T>)steps;
}
