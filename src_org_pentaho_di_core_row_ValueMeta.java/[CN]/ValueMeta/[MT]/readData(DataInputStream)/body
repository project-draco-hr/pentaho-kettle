{
  try {
    if (inputStream.readBoolean())     return null;
switch (storageType) {
case STORAGE_TYPE_NORMAL:
switch (getType()) {
case TYPE_STRING:
        return readString(inputStream);
case TYPE_NUMBER:
      return readNumber(inputStream);
case TYPE_INTEGER:
    return readInteger(inputStream);
case TYPE_DATE:
  return readDate(inputStream);
case TYPE_BIGNUMBER:
return readBigNumber(inputStream);
case TYPE_BOOLEAN:
return readBoolean(inputStream);
case TYPE_BINARY:
return readBinary(inputStream);
default :
throw new KettleFileException("Unable to de-serialize data of type " + getType());
}
case STORAGE_TYPE_BINARY_STRING:
return readBinaryString(inputStream);
case STORAGE_TYPE_INDEXED:
return readSmallInteger(inputStream);
default :
throw new KettleFileException("Unknown storage type " + getStorageType());
}
}
 catch (EOFException e) {
throw new KettleEOFException(e);
}
catch (SocketTimeoutException e) {
throw e;
}
catch (IOException e) {
throw new KettleFileException("Unable to read value data from input stream",e);
}
}
