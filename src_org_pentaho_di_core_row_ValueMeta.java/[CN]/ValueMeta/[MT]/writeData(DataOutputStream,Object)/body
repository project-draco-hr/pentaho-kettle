{
  try {
    outputStream.writeBoolean(object == null);
    if (object != null) {
switch (storageType) {
case STORAGE_TYPE_NORMAL:
switch (getType()) {
case TYPE_STRING:
          writeString(outputStream,(String)object);
        break;
case TYPE_NUMBER:
      writeNumber(outputStream,(Double)object);
    break;
case TYPE_INTEGER:
  writeInteger(outputStream,(Long)object);
break;
case TYPE_DATE:
writeDate(outputStream,(Date)object);
break;
case TYPE_BIGNUMBER:
writeBigNumber(outputStream,(BigDecimal)object);
break;
case TYPE_BOOLEAN:
writeBoolean(outputStream,(Boolean)object);
break;
case TYPE_BINARY:
writeBinary(outputStream,(byte[])object);
break;
default :
throw new KettleFileException(toString() + " : Unable to serialize data type " + getType());
}
break;
case STORAGE_TYPE_BINARY_STRING:
writeBinaryString(outputStream,(byte[])object);
break;
case STORAGE_TYPE_INDEXED:
writeInteger(outputStream,(Integer)object);
break;
default :
throw new KettleFileException(toString() + " : Unknown storage type " + getStorageType());
}
}
}
 catch (ClassCastException e) {
throw new RuntimeException(toString() + " : There was a data type error: the data type of " + object.getClass().getName()+ " object ["+ object+ "] does not correspond to value meta ["+ toStringMeta()+ "]");
}
catch (IOException e) {
throw new KettleFileException(toString() + " : Unable to write value data to output stream",e);
}
}
