{
  try {
    int nrfields=rep.countNrStepAttributes(id_step,getRepCode("FIELD_NAME"));
    int nrremove=rep.countNrStepAttributes(id_step,getRepCode("REMOVE_NAME"));
    int nrmeta=rep.countNrStepAttributes(id_step,getRepCode("META_NAME"));
    allocate(nrfields,nrremove,nrmeta);
    for (int i=0; i < nrfields; i++) {
      selectFields[i].setName(rep.getStepAttributeString(id_step,i,getRepCode("FIELD_NAME")));
      selectFields[i].setRename(rep.getStepAttributeString(id_step,i,getRepCode("FIELD_RENAME")));
      selectFields[i].setLength((int)rep.getStepAttributeInteger(id_step,i,getRepCode("FIELD_LENGTH")));
      selectFields[i].setPrecision((int)rep.getStepAttributeInteger(id_step,i,getRepCode("FIELD_PRECISION")));
    }
    selectingAndSortingUnspecifiedFields=rep.getStepAttributeBoolean(id_step,getRepCode("SELECT_UNSPECIFIED"));
    for (int i=0; i < nrremove; i++) {
      deleteName[i]=rep.getStepAttributeString(id_step,i,getRepCode("REMOVE_NAME"));
    }
    for (int i=0; i < nrmeta; i++) {
      meta[i]=new SelectMetadataChange(this);
      meta[i].setName(rep.getStepAttributeString(id_step,i,getRepCode("META_NAME")));
      meta[i].setRename(rep.getStepAttributeString(id_step,i,getRepCode("META_RENAME")));
      meta[i].setType((int)rep.getStepAttributeInteger(id_step,i,getRepCode("META_TYPE")));
      meta[i].setLength((int)rep.getStepAttributeInteger(id_step,i,getRepCode("META_LENGTH")));
      meta[i].setPrecision((int)rep.getStepAttributeInteger(id_step,i,getRepCode("META_PRECISION")));
      meta[i].setStorageType(ValueMeta.getStorageType(rep.getStepAttributeString(id_step,i,getRepCode("META_STORAGE_TYPE"))));
      meta[i].setConversionMask(rep.getStepAttributeString(id_step,i,getRepCode("META_CONVERSION_MASK")));
      meta[i].setDateFormatLenient(Boolean.parseBoolean(rep.getStepAttributeString(id_step,i,getRepCode("META_DATE_FORMAT_LENIENT"))));
      meta[i].setDateFormatLocale(rep.getStepAttributeString(id_step,i,getRepCode("META_DATE_FORMAT_LOCALE")));
      meta[i].setDateFormatTimeZone(rep.getStepAttributeString(id_step,i,getRepCode("META_DATE_FORMAT_TIMEZONE")));
      meta[i].setLenientStringToNumber(Boolean.parseBoolean(rep.getStepAttributeString(id_step,i,getRepCode("META_LENIENT_STRING_TO_NUMBER"))));
      meta[i].setDecimalSymbol(rep.getStepAttributeString(id_step,i,getRepCode("META_DECIMAL")));
      meta[i].setGroupingSymbol(rep.getStepAttributeString(id_step,i,getRepCode("META_GROUPING")));
      meta[i].setCurrencySymbol(rep.getStepAttributeString(id_step,i,getRepCode("META_CURRENCY")));
      meta[i].setEncoding(rep.getStepAttributeString(id_step,i,getRepCode("META_ENCODING")));
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SelectValuesMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository"),e);
  }
}
