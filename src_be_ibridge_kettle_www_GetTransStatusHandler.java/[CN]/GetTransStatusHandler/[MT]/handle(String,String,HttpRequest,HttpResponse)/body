{
  if (!isStarted())   return;
  if (log.isDebug())   log.logDebug(toString(),"Transformation status requested");
  response.setContentType("text/html");
  OutputStream os=response.getOutputStream();
  PrintStream out=new PrintStream(os);
  out.println("<HTML>");
  out.println("<HEAD><TITLE>Kettle transformation status</TITLE></HEAD>");
  out.println("<BODY>");
  out.println("<H1>Transformation status</H1>");
  String transName=request.getParameter("name");
  try {
    out.println("<table border=\"1\">");
    out.print("<tr> <th>Transformation name</th> <th>Status</th> </tr>");
    Trans trans=transformationMap.getTransformation(transName);
    String status=trans.getStatus();
    out.print("<tr>");
    out.print("<td>" + transName + "</td>");
    out.print("<td>" + status + "</td>");
    out.print("</tr>");
    out.print("</table>");
    out.print("<p>");
    if ((trans.isFinished() && trans.isRunning()) || (!trans.isRunning() && !trans.isPreparing() && !trans.isInitializing())) {
      out.print("<a href=\"/kettle/startTrans?name=" + transName + "\">Start this transformation</a>");
      out.print("<p>");
    }
 else     if (trans.isRunning()) {
      out.print("<a href=\"/kettle/stopTrans?name=" + transName + "\">Stop this transformation</a>");
      out.print("<p>");
    }
    out.println("<table border=\"1\">");
    out.print("<tr> <th>Step name</th> <th>Copy Nr</th> <th>Read</th> <th>Written</th> <th>Input</th> <th>Output</th> <th>Updated</th> " + "<th>Errors</th> <th>Active</th> <th>Time</th> <th>Speed</th> <th>pr/in/out</th> <th>Sleeps</th> </tr>");
    for (int i=0; i < trans.nrSteps(); i++) {
      BaseStep baseStep=trans.getRunThread(i);
      if ((baseStep.isAlive()) || baseStep.getStatus() != StepDataInterface.STATUS_EMPTY) {
        long in_proc=baseStep.linesInput + baseStep.linesRead;
        long out_proc=baseStep.linesOutput + baseStep.linesWritten + baseStep.linesUpdated;
        float lapsed=((float)baseStep.getRuntime()) / 1000;
        double in_speed=0;
        double out_speed=0;
        if (lapsed != 0) {
          in_speed=Math.floor(10 * (in_proc / lapsed)) / 10;
          out_speed=Math.floor(10 * (out_proc / lapsed)) / 10;
        }
        String stepname=baseStep.getStepname();
        int copy=baseStep.getCopy();
        long linesRead=baseStep.getLinesRead();
        long linesWritten=baseStep.getLinesWritten();
        long linesInput=baseStep.getLinesInput();
        long linesOutput=baseStep.getLinesOutput();
        long linesUpdated=baseStep.getLinesUpdated();
        long errors=baseStep.getErrors();
        String statusDescription=baseStep.getStatusDescription();
        double seconds=Math.floor((lapsed * 10) + 0.5) / 10;
        String speed=lapsed == 0 ? "-" : "" + (in_speed > out_speed ? in_speed : out_speed);
        String priority=baseStep.isAlive() ? "" + baseStep.getPriority() + "/"+ baseStep.rowsetInputSize()+ "/"+ baseStep.rowsetOutputSize() : "-";
        String sleeps="" + baseStep.getNrGetSleeps() + "/"+ baseStep.getNrPutSleeps();
        out.print("<tr> <th>" + stepname + "</th> <th>"+ copy+ "</th> <th>"+ linesRead+ "</th> <th>"+ linesWritten+ "</th> <th>"+ linesInput+ "</th> <th>"+ linesOutput+ "</th> <th>"+ linesUpdated+ "</th> "+ "<th>"+ errors+ "</th> <th>"+ statusDescription+ "</th> <th>"+ seconds+ "</th> <th>"+ speed+ "</th> <th>"+ priority+ "</th> <th>"+ sleeps+ "</th> </tr>");
      }
    }
    out.println("</table>");
    out.println("<p>");
    out.print("<a href=\"/kettle/transStatus?name=" + transName + "\">Refresh</a>");
  }
 catch (  Exception ex) {
    out.println("<p>");
    out.println("<pre>");
    ex.printStackTrace(out);
    out.println("</pre>");
  }
  out.println("<p>");
  out.println("</BODY>");
  out.println("</HTML>");
  out.flush();
  request.setHandled(true);
}
