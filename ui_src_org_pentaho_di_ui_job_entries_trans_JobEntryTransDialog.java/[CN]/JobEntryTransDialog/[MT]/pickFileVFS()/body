{
  FileDialog dialog=new FileDialog(shell,SWT.OPEN);
  dialog.setFilterExtensions(Const.STRING_TRANS_FILTER_EXT);
  dialog.setFilterNames(Const.getTransformationFilterNames());
  String prevName=jobMeta.environmentSubstitute(wFilename.getText());
  String parentFolder=null;
  try {
    parentFolder=KettleVFS.getFilename(KettleVFS.getFileObject(jobMeta.environmentSubstitute(jobMeta.getFilename())).getParent());
  }
 catch (  Exception e) {
  }
  if (!Utils.isEmpty(prevName)) {
    try {
      if (KettleVFS.fileExists(prevName)) {
        dialog.setFilterPath(KettleVFS.getFilename(KettleVFS.getFileObject(prevName).getParent()));
      }
 else {
        if (!prevName.endsWith(".ktr")) {
          prevName="${" + Const.INTERNAL_VARIABLE_JOB_FILENAME_DIRECTORY + "}/"+ Const.trim(wFilename.getText())+ ".ktr";
        }
        if (KettleVFS.fileExists(prevName)) {
          specificationMethod=ObjectLocationSpecificationMethod.FILENAME;
          setRadioButtons();
          wFilename.setText(prevName);
          return;
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.YES | SWT.NO | SWT.ICON_QUESTION);
          mb.setMessage(BaseMessages.getString(PKG,"JobTrans.Dialog.CreateTransformationQuestion.Message"));
          mb.setText(BaseMessages.getString(PKG,"JobTrans.Dialog.CreateTransformationQuestion.Title"));
          int answer=mb.open();
          if (answer == SWT.YES) {
            Spoon spoon=Spoon.getInstance();
            spoon.newTransFile();
            TransMeta transMeta=spoon.getActiveTransformation();
            transMeta.initializeVariablesFrom(jobEntry);
            transMeta.setFilename(jobMeta.environmentSubstitute(prevName));
            wFilename.setText(prevName);
            specificationMethod=ObjectLocationSpecificationMethod.FILENAME;
            setRadioButtons();
            spoon.saveFile();
            return;
          }
        }
      }
    }
 catch (    Exception e) {
      dialog.setFilterPath(parentFolder);
    }
  }
 else   if (!Utils.isEmpty(parentFolder)) {
    dialog.setFilterPath(parentFolder);
  }
  String fname=dialog.open();
  if (fname != null) {
    File file=new File(fname);
    String name=file.getName();
    String parentFolderSelection=file.getParentFile().toString();
    if (!Utils.isEmpty(parentFolder) && parentFolder.equals(parentFolderSelection)) {
      wFilename.setText("${" + Const.INTERNAL_VARIABLE_JOB_FILENAME_DIRECTORY + "}/"+ name);
    }
 else {
      wFilename.setText(fname);
    }
  }
}
