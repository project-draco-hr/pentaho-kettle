{
  try {
    this.bf.setBindingType(Binding.Type.ONE_WAY);
    bf.createBinding(this,"possibleTypes","method_list","elements").fireSourceChanged();
    bf.createBinding(model.getModelObjects(),"children","remove_button","disabled",itemCountBinding).fireSourceChanged();
    bf.createBinding(model.getModelObjects(),"children","name","disabled",itemCountBinding).fireSourceChanged();
    bf.createBinding(model.getModelObjects(),"children","method_list","disabled",itemCountBinding).fireSourceChanged();
    bf.createBinding("auth_list","selectedItem","name","!disabled",BindingConvertor.object2Boolean()).fireSourceChanged();
    bf.createBinding("auth_list","selectedItem","method_list","!disabled",BindingConvertor.object2Boolean()).fireSourceChanged();
    bf.createBinding("auth_list","selectedItem","remove_button","!disabled",BindingConvertor.object2Boolean()).fireSourceChanged();
    bf.setBindingType(Binding.Type.BI_DIRECTIONAL);
    bf.createBinding("auth_list","selectedItem",this.model,"selectedItem");
    Binding listBinding=this.bf.createBinding(this.model.getModelObjects(),"children","auth_list","elements");
    listBinding.fireSourceChanged();
    bf.createBinding(this.model,"selectedItem","name","value",selectedItemsNameBinding).fireSourceChanged();
    bf.createBinding(this,"newOverlay","method_list","selectedItem").fireSourceChanged();
    bf.createBinding(this.model,"selectedItem","method_list","selectedItem",selectedItemsItemBinding).fireSourceChanged();
    bf.createBinding(this.model,"selectedItem",this,"newOverlay",selectedItemsItemBinding);
  }
 catch (  XulException e) {
    e.printStackTrace(System.out);
  }
catch (  InvocationTargetException e) {
    e.printStackTrace(System.out);
  }
}
