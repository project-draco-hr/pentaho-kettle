{
  getMainSpoonContainer();
  Repository repository=Spoon.getInstance().getRepository();
  if (repository != null && repository.hasService(IRoleSupportSecurityManager.class)) {
    UIObjectRegistry.getInstance().registerUIRepositoryUserClass(UIEERepositoryUser.class);
  }
 else {
    UIObjectRegistry.getInstance().registerUIRepositoryUserClass(UIObjectRegistry.DEFAULT_UIREPOSITORYUSER_CLASS);
  }
  if (repository != null && repository.hasService(IAclService.class)) {
    UIObjectRegistry.getInstance().registerUIRepositoryDirectoryClass(UIEERepositoryDirectory.class);
    UIObjectRegistry.getInstance().registerUIDatabaseConnectionClass(UIEEDatabaseConnection.class);
  }
 else {
    UIObjectRegistry.getInstance().registerUIRepositoryDirectoryClass(UIObjectRegistry.DEFAULT_UIDIR_CLASS);
  }
  if (repository != null && repository.hasService(IAbsSecurityProvider.class)) {
    UIEEObjectRegistery.getInstance().registerUIRepositoryRoleClass(UIAbsRepositoryRole.class);
    IAbsSecurityProvider securityProvider=(IAbsSecurityProvider)repository.getService(IAbsSecurityProvider.class);
    enablePermission(securityProvider);
  }
  if (repository.hasService(ILockService.class)) {
    UIObjectRegistry.getInstance().registerUIJobClass(UIEEJob.class);
    UIObjectRegistry.getInstance().registerUITransformationClass(UIEETransformation.class);
    SpoonDelegateRegistry.getInstance().registerSpoonJobDelegateClass(SpoonEEJobDelegate.class);
    SpoonDelegateRegistry.getInstance().registerSpoonTransDelegateClass(SpoonEETransformationDelegate.class);
  }
 else {
    UIObjectRegistry.getInstance().registerUIJobClass(UIObjectRegistry.DEFAULT_UIJOB_CLASS);
    UIObjectRegistry.getInstance().registerUITransformationClass(UIObjectRegistry.DEFAULT_UITRANS_CLASS);
    SpoonDelegateRegistry.getInstance().registerSpoonJobDelegateClass(SpoonDelegateRegistry.DEFAULT_SPOONJOBDELEGATE_CLASS);
    SpoonDelegateRegistry.getInstance().registerSpoonTransDelegateClass(SpoonDelegateRegistry.DEFAULT_SPOONTRANSDELEGATE_CLASS);
  }
}
