{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,meta);
  changed=meta.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("WebServiceDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  tabItemWebService=new CTabItem(wTabFolder,SWT.NONE);
  tabItemWebService.setText(Messages.getString("WebServiceDialog.MainTab.TabTitle"));
  Composite compositeTabWebService=new Composite(wTabFolder,SWT.NONE);
  props.setLook(compositeTabWebService);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  compositeTabWebService.setLayout(fileLayout);
  wlURL=new Label(compositeTabWebService,SWT.RIGHT);
  wlURL.setText(Messages.getString("WebServiceDialog.URL.Label"));
  props.setLook(wlURL);
  FormData fdlURL=new FormData();
  fdlURL.left=new FormAttachment(0,0);
  fdlURL.top=new FormAttachment(0,margin);
  fdlURL.right=new FormAttachment(middle,-margin);
  wlURL.setLayoutData(fdlURL);
  wbURL=new Button(compositeTabWebService,SWT.PUSH | SWT.CENTER);
  props.setLook(wbURL);
  wbURL.setText(Messages.getString("WebServiceDialog.URL.Load"));
  FormData fdbURL=new FormData();
  fdbURL.right=new FormAttachment(100,0);
  fdbURL.top=new FormAttachment(0,0);
  wbURL.setLayoutData(fdbURL);
  wbURL.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      if (wURL.getText() != null && !"".equals(wURL.getText())) {
        try {
          initTreeTabWebService(wURL.getText());
        }
 catch (        KettleStepException e1) {
          e1.printStackTrace();
        }
      }
    }
  }
);
  wURL=new TextVar(transMeta,compositeTabWebService,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wURL.addModifyListener(lsMod);
  props.setLook(wURL);
  FormData fdURL=new FormData();
  fdURL.left=new FormAttachment(middle,0);
  fdURL.top=new FormAttachment(0,margin);
  fdURL.right=new FormAttachment(wbURL,-margin);
  wURL.setLayoutData(fdURL);
  wlOperation=new Label(compositeTabWebService,SWT.RIGHT);
  wlOperation.setText(Messages.getString("WebServiceDialog.Operation.Label"));
  props.setLook(wlOperation);
  FormData fdlOperation=new FormData();
  fdlOperation.left=new FormAttachment(0,0);
  fdlOperation.top=new FormAttachment(wURL,margin);
  fdlOperation.right=new FormAttachment(middle,-margin);
  wlOperation.setLayoutData(fdlOperation);
  wOperation=new CCombo(compositeTabWebService,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wOperation.addModifyListener(lsMod);
  wOperation.setToolTipText(Messages.getString("WebServiceDialog.Operation.Tooltip"));
  props.setLook(wOperation);
  FormData fdOperation=new FormData();
  fdOperation.top=new FormAttachment(wURL,margin);
  fdOperation.left=new FormAttachment(middle,0);
  fdOperation.right=new FormAttachment(100,0);
  wOperation.setLayoutData(fdOperation);
  wOperation.addSelectionListener(new SelectionListener(){
    public void widgetSelected(    SelectionEvent arg0){
      try {
        selectWSDLOperation(wOperation.getText());
      }
 catch (      KettleStepException e) {
        e.printStackTrace();
      }
    }
    public void widgetDefaultSelected(    SelectionEvent arg0){
    }
  }
);
  wlStep=new Label(compositeTabWebService,SWT.RIGHT);
  wlStep.setText(Messages.getString("WebServiceDialog.Step.Label"));
  props.setLook(wlStep);
  FormData fdlStep=new FormData();
  fdlStep.left=new FormAttachment(0,0);
  fdlStep.top=new FormAttachment(wOperation,margin);
  fdlStep.right=new FormAttachment(middle,-margin);
  wlStep.setLayoutData(fdlStep);
  wStep=new Text(compositeTabWebService,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStep.addModifyListener(lsMod);
  wStep.setToolTipText(Messages.getString("WebServiceDialog.Step.Tooltip"));
  props.setLook(wStep);
  FormData fdStep=new FormData();
  fdStep.top=new FormAttachment(wOperation,margin);
  fdStep.left=new FormAttachment(middle,0);
  fdStep.right=new FormAttachment(100,0);
  wStep.setLayoutData(fdStep);
  Group gHttpAuth=new Group(compositeTabWebService,SWT.SHADOW_ETCHED_IN);
  gHttpAuth.setText(Messages.getString("WebServicesDialog.HttpAuthGroup.Label"));
  FormLayout httpAuthLayout=new FormLayout();
  httpAuthLayout.marginWidth=3;
  httpAuthLayout.marginHeight=3;
  gHttpAuth.setLayout(httpAuthLayout);
  props.setLook(gHttpAuth);
  wlHttpLogin=new Label(gHttpAuth,SWT.RIGHT);
  wlHttpLogin.setText(Messages.getString("WebServiceDialog.HttpLogin.Label"));
  props.setLook(wlHttpLogin);
  FormData fdlHttpLogin=new FormData();
  fdlHttpLogin.top=new FormAttachment(0,margin);
  fdlHttpLogin.left=new FormAttachment(0,0);
  fdlHttpLogin.right=new FormAttachment(middle,-margin);
  wlHttpLogin.setLayoutData(fdlHttpLogin);
  wHttpLogin=new TextVar(transMeta,gHttpAuth,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wHttpLogin.addModifyListener(lsMod);
  wHttpLogin.setToolTipText(Messages.getString("WebServiceDialog.HttpLogin.Tooltip"));
  props.setLook(wHttpLogin);
  FormData fdHttpLogin=new FormData();
  fdHttpLogin.top=new FormAttachment(0,margin);
  fdHttpLogin.left=new FormAttachment(middle,0);
  fdHttpLogin.right=new FormAttachment(100,0);
  wHttpLogin.setLayoutData(fdHttpLogin);
  wlHttpPassword=new Label(gHttpAuth,SWT.RIGHT);
  wlHttpPassword.setText(Messages.getString("WebServiceDialog.HttpPassword.Label"));
  props.setLook(wlHttpPassword);
  FormData fdlHttpPassword=new FormData();
  fdlHttpPassword.top=new FormAttachment(wHttpLogin,margin);
  fdlHttpPassword.left=new FormAttachment(0,0);
  fdlHttpPassword.right=new FormAttachment(middle,-margin);
  wlHttpPassword.setLayoutData(fdlHttpPassword);
  wHttpPassword=new TextVar(transMeta,gHttpAuth,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wHttpPassword.addModifyListener(lsMod);
  wHttpPassword.setToolTipText(Messages.getString("WebServiceDialog.HttpPassword.Tooltip"));
  wHttpPassword.setEchoChar('*');
  props.setLook(wHttpPassword);
  FormData fdHttpPassword=new FormData();
  fdHttpPassword.top=new FormAttachment(wHttpLogin,margin);
  fdHttpPassword.left=new FormAttachment(middle,0);
  fdHttpPassword.right=new FormAttachment(100,0);
  wHttpPassword.setLayoutData(fdHttpPassword);
  FormData fdHttpAuth=new FormData();
  fdHttpAuth.left=new FormAttachment(0,0);
  fdHttpAuth.right=new FormAttachment(100,0);
  fdHttpAuth.top=new FormAttachment(wStep,margin);
  gHttpAuth.setLayoutData(fdHttpAuth);
  Group gProxy=new Group(compositeTabWebService,SWT.SHADOW_ETCHED_IN);
  gProxy.setText(Messages.getString("WebServicesDialog.ProxyGroup.Label"));
  FormLayout proxyLayout=new FormLayout();
  proxyLayout.marginWidth=3;
  proxyLayout.marginHeight=3;
  gProxy.setLayout(proxyLayout);
  props.setLook(gProxy);
  wlProxyHost=new Label(gProxy,SWT.RIGHT);
  wlProxyHost.setText(Messages.getString("WebServiceDialog.ProxyHost.Label"));
  props.setLook(wlProxyHost);
  FormData fdlProxyHost=new FormData();
  fdlProxyHost.top=new FormAttachment(0,margin);
  fdlProxyHost.left=new FormAttachment(0,0);
  fdlProxyHost.right=new FormAttachment(middle,-margin);
  wlProxyHost.setLayoutData(fdlProxyHost);
  wProxyHost=new TextVar(transMeta,gProxy,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wProxyHost.addModifyListener(lsMod);
  wProxyHost.setToolTipText(Messages.getString("WebServiceDialog.ProxyHost.Tooltip"));
  props.setLook(wProxyHost);
  FormData fdProxyHost=new FormData();
  fdProxyHost.top=new FormAttachment(0,margin);
  fdProxyHost.left=new FormAttachment(middle,0);
  fdProxyHost.right=new FormAttachment(100,0);
  wProxyHost.setLayoutData(fdProxyHost);
  wlProxyPort=new Label(gProxy,SWT.RIGHT);
  wlProxyPort.setText(Messages.getString("WebServiceDialog.ProxyPort.Label"));
  props.setLook(wlProxyPort);
  FormData fdlProxyPort=new FormData();
  fdlProxyPort.top=new FormAttachment(wProxyHost,margin);
  fdlProxyPort.left=new FormAttachment(0,0);
  fdlProxyPort.right=new FormAttachment(middle,-margin);
  wlProxyPort.setLayoutData(fdlProxyPort);
  wProxyPort=new TextVar(transMeta,gProxy,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wProxyPort.addModifyListener(lsMod);
  wProxyPort.setToolTipText(Messages.getString("WebServiceDialog.ProxyPort.Tooltip"));
  props.setLook(wProxyPort);
  FormData fdProxyPort=new FormData();
  fdProxyPort.top=new FormAttachment(wProxyHost,margin);
  fdProxyPort.left=new FormAttachment(middle,0);
  fdProxyPort.right=new FormAttachment(100,0);
  wProxyPort.setLayoutData(fdProxyPort);
  FormData fdProxy=new FormData();
  fdProxy.left=new FormAttachment(0,0);
  fdProxy.right=new FormAttachment(100,0);
  fdProxy.top=new FormAttachment(gHttpAuth,margin);
  gProxy.setLayoutData(fdProxy);
  FormData fdFileComp=new FormData();
  fdFileComp.left=new FormAttachment(0,0);
  fdFileComp.top=new FormAttachment(0,0);
  fdFileComp.right=new FormAttachment(100,0);
  fdFileComp.bottom=new FormAttachment(100,0);
  compositeTabWebService.setLayoutData(fdFileComp);
  compositeTabWebService.layout();
  tabItemWebService.setControl(compositeTabWebService);
  wHttpPassword.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      DatabaseDialog.checkPasswordVisible(wHttpPassword.getTextWidget());
    }
  }
);
  wURL.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      load();
    }
  }
);
  SelectionAdapter selAdapter=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wHttpPassword.addSelectionListener(selAdapter);
  wHttpLogin.addSelectionListener(selAdapter);
  wStep.addSelectionListener(selAdapter);
  wProxyHost.addSelectionListener(selAdapter);
  wProxyPort.addSelectionListener(selAdapter);
  wStepname.addSelectionListener(selAdapter);
  wTabFolder.setSelection(tabItemWebService);
  FormData fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  load();
  setComboValues();
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
