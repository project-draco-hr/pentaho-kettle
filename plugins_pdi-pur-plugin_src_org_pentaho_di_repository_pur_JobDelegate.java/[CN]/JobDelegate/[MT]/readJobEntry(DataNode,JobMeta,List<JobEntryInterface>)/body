{
  try {
    String name=getString(copyNode,PROP_NAME);
    for (    JobEntryInterface entry : jobentries) {
      if (entry.getName().equalsIgnoreCase(name)) {
        return entry;
      }
    }
    String typeId=getString(copyNode,PROP_JOBENTRY_TYPE);
    PluginRegistry registry=PluginRegistry.getInstance();
    PluginInterface jobPlugin=registry.findPluginWithId(JobEntryPluginType.class,typeId);
    JobEntryInterface entry=(JobEntryInterface)registry.loadClass(jobPlugin);
    entry.setName(name);
    entry.setDescription(getString(copyNode,PROP_DESCRIPTION));
    entry.setObjectId(new StringObjectId(copyNode.getId().toString()));
    RepositoryProxy proxy=new RepositoryProxy(copyNode.getNode(NODE_CUSTOM));
    compatibleJobEntryLoadRep(entry,proxy,null,jobMeta.getDatabases(),jobMeta.getSlaveServers());
    entry.setMetaStore(jobMeta.getMetaStore());
    entry.loadRep(proxy,jobMeta.getMetaStore(),null,jobMeta.getDatabases(),jobMeta.getSlaveServers());
    jobentries.add(entry);
    return entry;
  }
 catch (  Exception e) {
    throw new KettleException("Unable to read job entry interface information from repository",e);
  }
}
