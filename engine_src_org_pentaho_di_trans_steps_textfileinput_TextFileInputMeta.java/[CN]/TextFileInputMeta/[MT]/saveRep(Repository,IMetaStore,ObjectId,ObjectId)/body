{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"accept_filenames",inputFiles.acceptingFilenames);
    rep.saveStepAttribute(id_transformation,id_step,"passing_through_fields",inputFiles.passingThruFields);
    rep.saveStepAttribute(id_transformation,id_step,"accept_field",inputFiles.acceptingField);
    rep.saveStepAttribute(id_transformation,id_step,"accept_stepname",(acceptingStep != null ? acceptingStep.getName() : ""));
    rep.saveStepAttribute(id_transformation,id_step,"separator",content.separator);
    rep.saveStepAttribute(id_transformation,id_step,"enclosure",content.enclosure);
    rep.saveStepAttribute(id_transformation,id_step,"enclosure_breaks",content.breakInEnclosureAllowed);
    rep.saveStepAttribute(id_transformation,id_step,"escapechar",content.escapeCharacter);
    rep.saveStepAttribute(id_transformation,id_step,"header",content.header);
    rep.saveStepAttribute(id_transformation,id_step,"nr_headerlines",content.nrHeaderLines);
    rep.saveStepAttribute(id_transformation,id_step,"footer",content.footer);
    rep.saveStepAttribute(id_transformation,id_step,"nr_footerlines",content.nrFooterLines);
    rep.saveStepAttribute(id_transformation,id_step,"line_wrapped",content.lineWrapped);
    rep.saveStepAttribute(id_transformation,id_step,"nr_wraps",content.nrWraps);
    rep.saveStepAttribute(id_transformation,id_step,"layout_paged",content.layoutPaged);
    rep.saveStepAttribute(id_transformation,id_step,"nr_lines_per_page",content.nrLinesPerPage);
    rep.saveStepAttribute(id_transformation,id_step,"nr_lines_doc_header",content.nrLinesDocHeader);
    rep.saveStepAttribute(id_transformation,id_step,"noempty",content.noEmptyLines);
    rep.saveStepAttribute(id_transformation,id_step,"include",content.includeFilename);
    rep.saveStepAttribute(id_transformation,id_step,"include_field",content.filenameField);
    rep.saveStepAttribute(id_transformation,id_step,"rownum",content.includeRowNumber);
    rep.saveStepAttribute(id_transformation,id_step,"rownumByFile",content.rowNumberByFile);
    rep.saveStepAttribute(id_transformation,id_step,"rownum_field",content.rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,"format",content.fileFormat);
    rep.saveStepAttribute(id_transformation,id_step,"encoding",content.encoding);
    rep.saveStepAttribute(id_transformation,id_step,"add_to_result_filenames",inputFiles.isaddresult);
    rep.saveStepAttribute(id_transformation,id_step,"limit",content.rowLimit);
    for (int i=0; i < inputFiles.fileName.length; i++) {
      saveSourceRep(rep,id_transformation,id_step,i,inputFiles.fileName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_mask",inputFiles.fileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"exclude_file_mask",inputFiles.excludeFileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_required",inputFiles.fileRequired[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"include_subfolders",inputFiles.includeSubFolders[i]);
    }
    rep.saveStepAttribute(id_transformation,id_step,"file_type",content.fileType);
    rep.saveStepAttribute(id_transformation,id_step,"compression",(content.fileCompression == null) ? "None" : content.fileCompression);
    for (int i=0; i < filter.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_position",filter[i].getFilterPosition());
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_string",filter[i].getFilterString());
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_is_last_line",filter[i].isFilterLastLine());
      rep.saveStepAttribute(id_transformation,id_step,i,"filter_is_positive",filter[i].isFilterPositive());
    }
    for (int i=0; i < inputFiles.inputFields.length; i++) {
      TextFileInputField field=inputFiles.inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",field.getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_nullif",field.getNullString());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_ifnull",field.getIfNullValue());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_position",field.getPosition());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",field.getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_repeat",field.isRepeated());
    }
    rep.saveStepAttribute(id_transformation,id_step,"error_ignored",errorHandling.errorIgnored);
    rep.saveStepAttribute(id_transformation,id_step,"skip_bad_files",errorHandling.skipBadFiles);
    rep.saveStepAttribute(id_transformation,id_step,"file_error_field",errorHandling.fileErrorField);
    rep.saveStepAttribute(id_transformation,id_step,"file_error_message_field",errorHandling.fileErrorMessageField);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_skipped",errorLineSkipped);
    rep.saveStepAttribute(id_transformation,id_step,"error_count_field",errorCountField);
    rep.saveStepAttribute(id_transformation,id_step,"error_fields_field",errorFieldsField);
    rep.saveStepAttribute(id_transformation,id_step,"error_text_field",errorTextField);
    rep.saveStepAttribute(id_transformation,id_step,"bad_line_files_dest_dir",errorHandling.warningFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"bad_line_files_ext",errorHandling.warningFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_files_dest_dir",errorHandling.errorFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_files_ext",errorHandling.errorFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"line_number_files_dest_dir",errorHandling.lineNumberFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"line_number_files_ext",errorHandling.lineNumberFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"date_format_lenient",content.dateFormatLenient);
    rep.saveStepAttribute(id_transformation,id_step,"date_format_locale",content.dateFormatLocale.toString());
    rep.saveStepAttribute(id_transformation,id_step,"shortFileFieldName",additionalOutputFields.shortFilenameField);
    rep.saveStepAttribute(id_transformation,id_step,"pathFieldName",additionalOutputFields.pathField);
    rep.saveStepAttribute(id_transformation,id_step,"hiddenFieldName",additionalOutputFields.hiddenField);
    rep.saveStepAttribute(id_transformation,id_step,"lastModificationTimeFieldName",additionalOutputFields.lastModificationField);
    rep.saveStepAttribute(id_transformation,id_step,"uriNameFieldName",additionalOutputFields.uriField);
    rep.saveStepAttribute(id_transformation,id_step,"rootUriNameFieldName",additionalOutputFields.rootUriField);
    rep.saveStepAttribute(id_transformation,id_step,"extensionFieldName",additionalOutputFields.extensionField);
    rep.saveStepAttribute(id_transformation,id_step,"sizeFieldName",additionalOutputFields.sizeField);
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
