{
  this.props=PropsUI.getInstance();
  this.input=new RepositoriesMeta();
  this.repository=null;
  this.model=model;
  this.document=document;
  this.messages=messages;
  this.shell=shell;
  log=new LogChannel("RepositoriesHelper");
  try {
    try {
      this.input.readData();
    }
 catch (    KettleException e) {
      log.logDetailed(BaseMessages.getString(PKG,"RepositoryLogin.ErrorReadingRepositoryDefinitions",e.getLocalizedMessage()));
      new ErrorDialog(shell,messages.getString("Dialog.Error"),BaseMessages.getString(PKG,"RepositoryLogin.ErrorReadingRepositoryDefinitions",e.getLocalizedMessage()),e);
    }
    List<RepositoryMeta> repositoryList=new ArrayList<RepositoryMeta>();
    for (int i=0; i < this.input.nrRepositories(); i++) {
      repositoryList.add(this.input.getRepository(i));
    }
    model.setAvailableRepositories(repositoryList);
  }
 catch (  Exception e) {
    log.logDetailed(BaseMessages.getString(PKG,"RepositoryLogin.ErrorReadingRepositoryDefinitions"));
    new ErrorDialog(shell,messages.getString("Dialog.Error"),BaseMessages.getString(PKG,"RepositoryLogin.ErrorReadingRepositoryDefinitions"),e);
  }
}
