{
  try {
    PluginInterface plugin=null;
    RepositoryMeta ri=input.searchRepository(model.getSelectedRepository().getName());
    if (ri != null) {
      plugin=PluginRegistry.getInstance().getPlugin(RepositoryPluginType.class,ri.getId());
      if (plugin == null) {
        throw new KettleException("Unable to find repository plugin for id [" + ri.getId() + "]");
      }
    }
    RepositoryDialogInterface dd=getRepositoryDialog(plugin,ri,input,this.shell);
    if (dd.open() != null) {
      fillRepositories();
      int idx=input.indexOfRepository(ri);
      model.setSelectedRepository(input.getRepository(idx));
      writeData();
    }
  }
 catch (  Exception e) {
    log.logDetailed("Error edit repository : " + e.getLocalizedMessage());
    messageBox.setTitle(messages.getString("Dialog.Error"));
    messageBox.setAcceptLabel(messages.getString("Dialog.Ok"));
    messageBox.setMessage(BaseMessages.getString(PKG,"RepositoryLogin.ErrorEditingRepository",e.getLocalizedMessage()));
    messageBox.open();
  }
}
