{
  if (model != null && model.getSelectedRepository() != null) {
    RepositoryMeta repositoryMeta=input.getRepository(model.getRepositoryIndex(model.getSelectedRepository()));
    repository=PluginRegistry.getInstance().loadClass(RepositoryPluginType.class,repositoryMeta.getId(),Repository.class);
    repository.init(repositoryMeta);
    repository.connect(model.getUsername(),model.getPassword());
    props.setLastRepository(repositoryMeta.getName());
    props.setLastRepositoryLogin(model.getUsername());
  }
 else {
    log.logDetailed(BaseMessages.getString(PKG,"RepositoryLogin.ErrorLoginToRepository"));
    throw new KettleException(BaseMessages.getString(PKG,"RepositoryLogin.ErrorLoginToRepository"));
  }
}
