{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      changedInDialog=true;
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("ExecSQLDialog.Shell.Label"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("ExecSQLDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSQL=new Label(shell,SWT.LEFT);
  wlSQL.setText(Messages.getString("ExecSQLDialog.SQL.Label"));
  props.setLook(wlSQL);
  fdlSQL=new FormData();
  fdlSQL.left=new FormAttachment(0,0);
  fdlSQL.top=new FormAttachment(wConnection,margin * 2);
  wlSQL.setLayoutData(fdlSQL);
  wSQL=new StyledTextComp(shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wSQL,Props.WIDGET_STYLE_FIXED);
  wSQL.addModifyListener(lsMod);
  fdSQL=new FormData();
  fdSQL.left=new FormAttachment(0,0);
  fdSQL.top=new FormAttachment(wlSQL,margin);
  fdSQL.right=new FormAttachment(100,0);
  fdSQL.bottom=new FormAttachment(100,-250);
  wSQL.setLayoutData(fdSQL);
  wSQL.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setPosition();
    }
  }
);
  wSQL.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      setPosition();
    }
    public void keyReleased(    KeyEvent e){
      setPosition();
    }
  }
);
  wSQL.addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      setPosition();
    }
    public void focusLost(    FocusEvent e){
      setPosition();
    }
  }
);
  wSQL.addMouseListener(new MouseAdapter(){
    public void mouseDoubleClick(    MouseEvent e){
      setPosition();
    }
    public void mouseDown(    MouseEvent e){
      setPosition();
    }
    public void mouseUp(    MouseEvent e){
      setPosition();
    }
  }
);
  wlPosition=new Label(shell,SWT.NONE);
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(0,0);
  fdlPosition.right=new FormAttachment(100,0);
  fdlPosition.top=new FormAttachment(wSQL,margin);
  wlPosition.setLayoutData(fdlPosition);
  wlEachRow=new Label(shell,SWT.RIGHT);
  wlEachRow.setText(Messages.getString("ExecSQLDialog.EachRow.Label"));
  wlEachRow.pack();
  wlVariables=new Label(shell,SWT.RIGHT);
  wlVariables.setText(Messages.getString("ExecSQLDialog.ReplaceVariables"));
  wlVariables.pack();
  Rectangle rEachRow=wlEachRow.getBounds();
  Rectangle rVariables=wlVariables.getBounds();
  int width=Math.max(rEachRow.width,rVariables.width) + margin;
  props.setLook(wlEachRow);
  fdlEachRow=new FormData();
  fdlEachRow.left=new FormAttachment(0,margin);
  fdlEachRow.right=new FormAttachment(0,width);
  fdlEachRow.top=new FormAttachment(wlPosition,margin);
  wlEachRow.setLayoutData(fdlEachRow);
  wEachRow=new Button(shell,SWT.CHECK);
  props.setLook(wEachRow);
  fdEachRow=new FormData();
  fdEachRow.left=new FormAttachment(wlEachRow,margin);
  fdEachRow.top=new FormAttachment(wlPosition,margin);
  fdEachRow.right=new FormAttachment(middle,0);
  wEachRow.setLayoutData(fdEachRow);
  props.setLook(wlVariables);
  fdlVariables=new FormData();
  fdlVariables.left=new FormAttachment(0,margin);
  fdlVariables.right=new FormAttachment(0,width);
  fdlVariables.top=new FormAttachment(wEachRow,margin);
  wlVariables.setLayoutData(fdlVariables);
  wVariables=new Button(shell,SWT.CHECK);
  props.setLook(wVariables);
  fdVariables=new FormData();
  fdVariables.left=new FormAttachment(wlVariables,margin);
  fdVariables.top=new FormAttachment(wEachRow,margin);
  fdVariables.right=new FormAttachment(middle,0);
  wVariables.setLayoutData(fdVariables);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(Messages.getString("ExecSQLDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,0);
  fdlFields.top=new FormAttachment(wlVariables,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsRows=input.getArguments().length;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("ExecSQLDialog.ColumnInfo.ArgumentFieldname"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(middle,0);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wlInsertField=new Label(shell,SWT.RIGHT);
  wlInsertField.setText(Messages.getString("ExecSQLDialog.InsertField.Label"));
  props.setLook(wlInsertField);
  fdlInsertField=new FormData();
  fdlInsertField.left=new FormAttachment(wFields,margin);
  fdlInsertField.right=new FormAttachment(middle * 2,-margin);
  fdlInsertField.top=new FormAttachment(wVariables,margin);
  wlInsertField.setLayoutData(fdlInsertField);
  wInsertField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInsertField);
  wInsertField.addModifyListener(lsMod);
  fdInsertField=new FormData();
  fdInsertField.left=new FormAttachment(middle * 2,0);
  fdInsertField.top=new FormAttachment(wVariables,margin);
  fdInsertField.right=new FormAttachment(100,0);
  wInsertField.setLayoutData(fdInsertField);
  wlUpdateField=new Label(shell,SWT.RIGHT);
  wlUpdateField.setText(Messages.getString("ExecSQLDialog.UpdateField.Label"));
  props.setLook(wlUpdateField);
  fdlUpdateField=new FormData();
  fdlUpdateField.left=new FormAttachment(wFields,margin);
  fdlUpdateField.right=new FormAttachment(middle * 2,-margin);
  fdlUpdateField.top=new FormAttachment(wInsertField,margin);
  wlUpdateField.setLayoutData(fdlUpdateField);
  wUpdateField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUpdateField);
  wUpdateField.addModifyListener(lsMod);
  fdUpdateField=new FormData();
  fdUpdateField.left=new FormAttachment(middle * 2,0);
  fdUpdateField.top=new FormAttachment(wInsertField,margin);
  fdUpdateField.right=new FormAttachment(100,0);
  wUpdateField.setLayoutData(fdUpdateField);
  wlDeleteField=new Label(shell,SWT.RIGHT);
  wlDeleteField.setText(Messages.getString("ExecSQLDialog.DeleteField.Label"));
  props.setLook(wlDeleteField);
  fdlDeleteField=new FormData();
  fdlDeleteField.left=new FormAttachment(wFields,margin);
  fdlDeleteField.right=new FormAttachment(middle * 2,-margin);
  fdlDeleteField.top=new FormAttachment(wUpdateField,margin);
  wlDeleteField.setLayoutData(fdlDeleteField);
  wDeleteField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDeleteField);
  wDeleteField.addModifyListener(lsMod);
  fdDeleteField=new FormData();
  fdDeleteField.left=new FormAttachment(middle * 2,0);
  fdDeleteField.top=new FormAttachment(wUpdateField,margin);
  fdDeleteField.right=new FormAttachment(100,0);
  wDeleteField.setLayoutData(fdDeleteField);
  wlReadField=new Label(shell,SWT.RIGHT);
  wlReadField.setText(Messages.getString("ExecSQLDialog.ReadField.Label"));
  props.setLook(wlReadField);
  fdlReadField=new FormData();
  fdlReadField.left=new FormAttachment(wFields,0);
  fdlReadField.right=new FormAttachment(middle * 2,-margin);
  fdlReadField.top=new FormAttachment(wDeleteField,margin);
  wlReadField.setLayoutData(fdlReadField);
  wReadField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wReadField);
  wReadField.addModifyListener(lsMod);
  fdReadField=new FormData();
  fdReadField.left=new FormAttachment(middle * 2,0);
  fdReadField.top=new FormAttachment(wDeleteField,margin);
  fdReadField.right=new FormAttachment(100,0);
  wReadField.setLayoutData(fdReadField);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(Messages.getString("ExecSQLDialog.GetFields.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wGet},margin,null);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wGet.addListener(SWT.Selection,lsGet);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wEachRow.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      checkCancel(e);
    }
  }
);
  getData();
  changedInDialog=false;
  input.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
