{
  JobMeta jobMetaMock=mock(JobMeta.class);
  doCallRealMethod().when(jobMetaMock).lookupRepositoryReferences(any(Repository.class));
  doCallRealMethod().when(jobMetaMock).addJobEntry(anyInt(),any(JobEntryCopy.class));
  doCallRealMethod().when(jobMetaMock).clear();
  jobMetaMock.clear();
  JobEntryTrans jobEntryMock=mock(JobEntryTrans.class);
  when(jobEntryMock.hasRepositoryReferences()).thenReturn(true);
  JobEntryTrans brokenJobEntryMock=mock(JobEntryTrans.class);
  when(brokenJobEntryMock.hasRepositoryReferences()).thenReturn(true);
  doThrow(new RuntimeException()).when(brokenJobEntryMock).lookupRepositoryReferences(any(Repository.class));
  JobEntryCopy jobEntryCopy1=mock(JobEntryCopy.class);
  when(jobEntryCopy1.getEntry()).thenReturn(jobEntryMock);
  jobMetaMock.addJobEntry(0,jobEntryCopy1);
  JobEntryCopy jobEntryCopy2=mock(JobEntryCopy.class);
  when(jobEntryCopy2.getEntry()).thenReturn(brokenJobEntryMock);
  jobMetaMock.addJobEntry(1,jobEntryCopy2);
  JobEntryCopy jobEntryCopy3=mock(JobEntryCopy.class);
  when(jobEntryCopy3.getEntry()).thenReturn(jobEntryMock);
  jobMetaMock.addJobEntry(2,jobEntryCopy3);
  jobMetaMock.lookupRepositoryReferences(any(Repository.class));
}
