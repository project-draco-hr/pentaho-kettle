{
  LogWriter log=LogWriter.getInstance();
  Result result=previousResult;
  result.setResult(false);
  int missingfiles=0;
  if (arguments != null) {
    for (int i=0; i < arguments.length && !parentJob.isStopped(); i++) {
      FileObject file=null;
      try {
        String realFilefoldername=environmentSubstitute(arguments[i]);
        file=KettleVFS.getFileObject(realFilefoldername);
        if (file.exists() && file.isReadable()) {
          if (log.isDetailed())           log.logDetailed(toString(),Messages.getString("JobEntryFilesExist.File_Exists",realFilefoldername));
        }
 else {
          missingfiles++;
          result.setNrErrors(missingfiles);
          if (log.isDetailed())           log.logDetailed(toString(),Messages.getString("JobEntryFilesExist.File_Does_Not_Exist",realFilefoldername));
        }
      }
 catch (      IOException e) {
        missingfiles++;
        result.setNrErrors(missingfiles);
        log.logError(toString(),Messages.getString("JobEntryFilesExist.ERROR_0004_IO_Exception",e.toString()));
      }
 finally {
        if (file != null) {
          try {
            file.close();
          }
 catch (          IOException ex) {
          }
          ;
        }
      }
    }
  }
  if (missingfiles == 0)   result.setResult(true);
  return result;
}
