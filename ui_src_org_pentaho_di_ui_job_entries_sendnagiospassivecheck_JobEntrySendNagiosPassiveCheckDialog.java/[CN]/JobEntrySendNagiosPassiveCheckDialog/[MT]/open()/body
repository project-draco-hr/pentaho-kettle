{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wName=new LabelText(shell,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Name.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Name.Tooltip"));
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.top=new FormAttachment(0,0);
  fdName.left=new FormAttachment(0,0);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,PropsUI.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.ServerSettings.General"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wServerSettings=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wServerSettings);
  wServerSettings.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.ServerSettings.Group.Label"));
  FormLayout ServerSettingsgroupLayout=new FormLayout();
  ServerSettingsgroupLayout.marginWidth=10;
  ServerSettingsgroupLayout.marginHeight=10;
  wServerSettings.setLayout(ServerSettingsgroupLayout);
  wServerName=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Server.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Server.Tooltip"));
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(0,0);
  fdServerName.top=new FormAttachment(wName,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wPort=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Port.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Port.Tooltip"));
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.left=new FormAttachment(0,0);
  fdPort.top=new FormAttachment(wServerName,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  wPassword=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Password.Label"),BaseMessages.getString("JobSendNagiosPassiveCheck.Password.Tooltip"),true);
  props.setLook(wPassword);
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(0,0);
  fdPassword.top=new FormAttachment(wPort,margin);
  fdPassword.right=new FormAttachment(100,0);
  wPassword.setLayoutData(fdPassword);
  wConnectionTimeOut=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.ConnectionTimeOut.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.ConnectionTimeOut.Tooltip"));
  props.setLook(wConnectionTimeOut);
  wConnectionTimeOut.addModifyListener(lsMod);
  fdwConnectionTimeOut=new FormData();
  fdwConnectionTimeOut.left=new FormAttachment(0,0);
  fdwConnectionTimeOut.top=new FormAttachment(wPassword,margin);
  fdwConnectionTimeOut.right=new FormAttachment(100,0);
  wConnectionTimeOut.setLayoutData(fdwConnectionTimeOut);
  wResponseTimeOut=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.ResponseTimeOut.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.ResponseTimeOut.Tooltip"));
  props.setLook(wResponseTimeOut);
  wResponseTimeOut.addModifyListener(lsMod);
  fdResponseTimeOut=new FormData();
  fdResponseTimeOut.left=new FormAttachment(0,0);
  fdResponseTimeOut.top=new FormAttachment(wConnectionTimeOut,margin);
  fdResponseTimeOut.right=new FormAttachment(100,0);
  wResponseTimeOut.setLayoutData(fdResponseTimeOut);
  wTest=new Button(wServerSettings,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.TestConnection.Label"));
  props.setLook(wTest);
  fdTest=new FormData();
  wTest.setToolTipText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.TestConnection.Tooltip"));
  fdTest.top=new FormAttachment(wResponseTimeOut,margin);
  fdTest.right=new FormAttachment(100,0);
  wTest.setLayoutData(fdTest);
  fdServerSettings=new FormData();
  fdServerSettings.left=new FormAttachment(0,margin);
  fdServerSettings.top=new FormAttachment(wName,margin);
  fdServerSettings.right=new FormAttachment(100,-margin);
  wServerSettings.setLayoutData(fdServerSettings);
  wSenderSettings=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wSenderSettings);
  wSenderSettings.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.SenderSettings.Group.Label"));
  FormLayout SenderSettingsgroupLayout=new FormLayout();
  SenderSettingsgroupLayout.marginWidth=10;
  SenderSettingsgroupLayout.marginHeight=10;
  wSenderSettings.setLayout(SenderSettingsgroupLayout);
  wSenderServerName=new LabelTextVar(jobMeta,wSenderSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.SenderServerName.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.SenderServerName.Tooltip"));
  props.setLook(wSenderServerName);
  wSenderServerName.addModifyListener(lsMod);
  fdSenderServerName=new FormData();
  fdSenderServerName.left=new FormAttachment(0,0);
  fdSenderServerName.top=new FormAttachment(wServerSettings,margin);
  fdSenderServerName.right=new FormAttachment(100,0);
  wSenderServerName.setLayoutData(fdSenderServerName);
  wSenderServiceName=new LabelTextVar(jobMeta,wSenderSettings,BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.SenderServiceName.Label"),BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.SenderServiceName.Tooltip"));
  props.setLook(wSenderServiceName);
  wSenderServiceName.addModifyListener(lsMod);
  fdSenderServiceName=new FormData();
  fdSenderServiceName.left=new FormAttachment(0,0);
  fdSenderServiceName.top=new FormAttachment(wSenderServerName,margin);
  fdSenderServiceName.right=new FormAttachment(100,0);
  wSenderServiceName.setLayoutData(fdSenderServiceName);
  wlEncryptionMode=new Label(wSenderSettings,SWT.RIGHT);
  wlEncryptionMode.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.EncryptionMode.Label"));
  props.setLook(wlEncryptionMode);
  fdlEncryptionMode=new FormData();
  fdlEncryptionMode.left=new FormAttachment(0,margin);
  fdlEncryptionMode.right=new FormAttachment(middle,-margin);
  fdlEncryptionMode.top=new FormAttachment(wSenderServiceName,margin);
  wlEncryptionMode.setLayoutData(fdlEncryptionMode);
  wEncryptionMode=new CCombo(wSenderSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wEncryptionMode.setItems(JobEntrySendNagiosPassiveCheck.encryption_mode_Desc);
  props.setLook(wEncryptionMode);
  fdEncryptionMode=new FormData();
  fdEncryptionMode.left=new FormAttachment(middle,margin);
  fdEncryptionMode.top=new FormAttachment(wSenderServiceName,margin);
  fdEncryptionMode.right=new FormAttachment(100,0);
  wEncryptionMode.setLayoutData(fdEncryptionMode);
  wEncryptionMode.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlLevelMode=new Label(wSenderSettings,SWT.RIGHT);
  wlLevelMode.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.LevelMode.Label"));
  props.setLook(wlLevelMode);
  fdlLevelMode=new FormData();
  fdlLevelMode.left=new FormAttachment(0,margin);
  fdlLevelMode.right=new FormAttachment(middle,-margin);
  fdlLevelMode.top=new FormAttachment(wEncryptionMode,margin);
  wlLevelMode.setLayoutData(fdlLevelMode);
  wLevelMode=new CCombo(wSenderSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wLevelMode.setItems(JobEntrySendNagiosPassiveCheck.level_type_Desc);
  props.setLook(wLevelMode);
  fdLevelMode=new FormData();
  fdLevelMode.left=new FormAttachment(middle,margin);
  fdLevelMode.top=new FormAttachment(wEncryptionMode,margin);
  fdLevelMode.right=new FormAttachment(100,0);
  wLevelMode.setLayoutData(fdLevelMode);
  wLevelMode.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  fdSenderSettings=new FormData();
  fdSenderSettings.left=new FormAttachment(0,margin);
  fdSenderSettings.top=new FormAttachment(wServerSettings,margin);
  fdSenderSettings.right=new FormAttachment(100,-margin);
  wSenderSettings.setLayoutData(fdSenderSettings);
  wMessageGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wMessageGroup);
  wMessageGroup.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.MessageGroup.Group.Label"));
  FormLayout MessageGroupgroupLayout=new FormLayout();
  MessageGroupgroupLayout.marginWidth=10;
  MessageGroupgroupLayout.marginHeight=10;
  wMessageGroup.setLayout(MessageGroupgroupLayout);
  wlMessage=new Label(wMessageGroup,SWT.RIGHT);
  wlMessage.setText(BaseMessages.getString(PKG,"JobSendNagiosPassiveCheck.Message.Label"));
  props.setLook(wlMessage);
  fdlMessage=new FormData();
  fdlMessage.left=new FormAttachment(0,0);
  fdlMessage.top=new FormAttachment(wSenderSettings,margin);
  fdlMessage.right=new FormAttachment(middle,-margin);
  wlMessage.setLayoutData(fdlMessage);
  wMessage=new StyledTextComp(jobMeta,wMessageGroup,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wMessage);
  wMessage.addModifyListener(lsMod);
  fdMessage=new FormData();
  fdMessage.left=new FormAttachment(middle,0);
  fdMessage.top=new FormAttachment(wSenderSettings,margin);
  fdMessage.right=new FormAttachment(100,-2 * margin);
  fdMessage.bottom=new FormAttachment(100,-margin);
  wMessage.setLayoutData(fdMessage);
  fdMessageGroup=new FormData();
  fdMessageGroup.left=new FormAttachment(0,margin);
  fdMessageGroup.top=new FormAttachment(wSenderSettings,margin);
  fdMessageGroup.right=new FormAttachment(100,-margin);
  fdMessageGroup.bottom=new FormAttachment(100,-margin);
  wMessageGroup.setLayoutData(fdMessageGroup);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wName,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wTest.addListener(SWT.Selection,lsTest);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wServerName.addSelectionListener(lsDef);
  wResponseTimeOut.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  wTabFolder.setSelection(0);
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobSendNagiosPassiveCheckDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
