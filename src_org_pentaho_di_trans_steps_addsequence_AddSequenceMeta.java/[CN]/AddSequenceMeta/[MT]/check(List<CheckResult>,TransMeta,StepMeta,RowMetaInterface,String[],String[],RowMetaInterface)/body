{
  CheckResult cr;
  if (useDatabase) {
    Database db=new Database(database);
    db.shareVariablesWith(transMeta);
    try {
      db.connect();
      if (db.checkSequenceExists(schemaName,sequenceName)) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("AddSequenceMeta.CheckResult.SequenceExists.Title"),stepMeta);
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("AddSequenceMeta.CheckResult.SequenceCouldNotBeFound.Title",sequenceName),stepMeta);
      }
    }
 catch (    KettleException e) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("AddSequenceMeta.CheckResult.UnableToConnectDB.Title") + Const.CR + e.getMessage(),stepMeta);
    }
 finally {
      db.disconnect();
    }
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("AddSequenceMeta.CheckResult.StepIsReceving.Title"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("AddSequenceMeta.CheckResult.NoInputReceived.Title"),stepMeta);
    remarks.add(cr);
  }
}
