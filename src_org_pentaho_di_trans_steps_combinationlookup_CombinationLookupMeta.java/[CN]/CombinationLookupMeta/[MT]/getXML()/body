{
  StringBuffer retval=new StringBuffer(512);
  retval.append("      ").append(XMLHandler.addTagValue("schema",schemaName));
  retval.append("      ").append(XMLHandler.addTagValue("table",tablename));
  retval.append("      ").append(XMLHandler.addTagValue("connection",databaseMeta == null ? "" : databaseMeta.getName()));
  retval.append("      ").append(XMLHandler.addTagValue("commit",commitSize));
  retval.append("      ").append(XMLHandler.addTagValue("cache_size",cacheSize));
  retval.append("      ").append(XMLHandler.addTagValue("replace",replaceFields));
  retval.append("      ").append(XMLHandler.addTagValue("crc",useHash));
  retval.append("      ").append(XMLHandler.addTagValue("crcfield",hashField));
  retval.append("      <fields>").append(Const.CR);
  for (int i=0; i < keyField.length; i++) {
    retval.append("        <key>").append(Const.CR);
    retval.append("          ").append(XMLHandler.addTagValue("name",keyField[i]));
    retval.append("          ").append(XMLHandler.addTagValue("lookup",keyLookup[i]));
    retval.append("        </key>").append(Const.CR);
  }
  retval.append("        <return>").append(Const.CR);
  retval.append("          ").append(XMLHandler.addTagValue("name",technicalKeyField));
  retval.append("          ").append(XMLHandler.addTagValue("creation_method",techKeyCreation));
  retval.append("          ").append(XMLHandler.addTagValue("use_autoinc",useAutoinc));
  retval.append("        </return>").append(Const.CR);
  retval.append("      </fields>").append(Const.CR);
  retval.append("      ").append(XMLHandler.addTagValue("sequence",sequenceFrom));
  retval.append("      ").append(XMLHandler.addTagValue("last_update_field",lastUpdateField));
  return retval.toString();
}
