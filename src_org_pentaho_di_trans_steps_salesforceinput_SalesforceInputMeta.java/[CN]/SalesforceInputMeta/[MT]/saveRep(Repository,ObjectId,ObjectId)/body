{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"targeturl",targeturl);
    rep.saveStepAttribute(id_transformation,id_step,"username",username);
    rep.saveStepAttribute(id_transformation,id_step,"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveStepAttribute(id_transformation,id_step,"module",module);
    rep.saveStepAttribute(id_transformation,id_step,"condition",condition);
    rep.saveStepAttribute(id_transformation,id_step,"query",query);
    rep.saveStepAttribute(id_transformation,id_step,"specifyQuery",specifyQuery);
    rep.saveStepAttribute(id_transformation,id_step,"include_targeturl",includeTargetURL);
    rep.saveStepAttribute(id_transformation,id_step,"targeturl_field",targetURLField);
    rep.saveStepAttribute(id_transformation,id_step,"include_module",includeModule);
    rep.saveStepAttribute(id_transformation,id_step,"module_field",moduleField);
    rep.saveStepAttribute(id_transformation,id_step,"include_rownum",includeRowNumber);
    rep.saveStepAttribute(id_transformation,id_step,"include_deletion_date",includeDeletionDate);
    rep.saveStepAttribute(id_transformation,id_step,"include_sql",includeSQL);
    rep.saveStepAttribute(id_transformation,id_step,"sql_field",sqlField);
    rep.saveStepAttribute(id_transformation,id_step,"include_Timestamp",includeTimestamp);
    rep.saveStepAttribute(id_transformation,id_step,"timestamp_field",timestampField);
    rep.saveStepAttribute(id_transformation,id_step,"rownum_field",rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,"deletion_date_field",deletionDateField);
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    rep.saveStepAttribute(id_transformation,id_step,"timeout",timeout);
    rep.saveStepAttribute(id_transformation,id_step,"read_from",readFrom);
    rep.saveStepAttribute(id_transformation,id_step,"read_to",readTo);
    rep.saveStepAttribute(id_transformation,id_step,"records_filter",SalesforceConnectionUtils.getRecordsFilterCode(recordsFilter));
    rep.saveStepAttribute(id_transformation,id_step,"useCompression",useCompression);
    rep.saveStepAttribute(id_transformation,id_step,"queryAll",queryAll);
    for (int i=0; i < inputFields.length; i++) {
      SalesforceInputField field=inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_attribut",field.getField());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_idlookup",field.isIdLookup());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",field.getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",field.getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_repeat",field.isRepeated());
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceInputMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
