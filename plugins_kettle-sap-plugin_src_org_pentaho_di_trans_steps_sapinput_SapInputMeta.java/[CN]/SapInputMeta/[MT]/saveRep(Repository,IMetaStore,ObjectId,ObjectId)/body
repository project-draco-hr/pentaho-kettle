{
  try {
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    if (function != null && !Const.isEmpty(function.getName())) {
      rep.saveStepAttribute(id_transformation,id_step,"function_name",function.getName());
      rep.saveStepAttribute(id_transformation,id_step,"function_description",function.getDescription());
      rep.saveStepAttribute(id_transformation,id_step,"function_group",function.getGroup());
      rep.saveStepAttribute(id_transformation,id_step,"function_application",function.getApplication());
      rep.saveStepAttribute(id_transformation,id_step,"function_host",function.getHost());
    }
    for (int i=0; i < parameters.size(); i++) {
      SapParameter parameter=parameters.get(i);
      rep.saveStepAttribute(id_transformation,id_step,i,"parameter_field_name",parameter.getFieldName());
      rep.saveStepAttribute(id_transformation,id_step,i,"parameter_sap_type",parameter.getSapType() == null ? null : parameter.getSapType().getCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"parameter_table_name",parameter.getTableName());
      rep.saveStepAttribute(id_transformation,id_step,i,"parameter_name",parameter.getParameterName());
      rep.saveStepAttribute(id_transformation,id_step,i,"parameter_target_type",ValueMeta.getTypeDesc(parameter.getTargetType()));
    }
    for (int i=0; i < outputFields.size(); i++) {
      SapOutputField field=outputFields.get(i);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_sap_field_name",field.getSapFieldName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_sap_type",field.getSapType() == null ? null : field.getSapType().getCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_table_name",field.getTableName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_target_type",ValueMeta.getTypeDesc(field.getTargetType()));
      rep.saveStepAttribute(id_transformation,id_step,i,"field_new_name",field.getNewName());
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
