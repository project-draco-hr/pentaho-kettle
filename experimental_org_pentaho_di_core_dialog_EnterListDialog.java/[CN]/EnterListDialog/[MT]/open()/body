{
  Shell parent=getParent();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  shell.setText(Messages.getString("EnterListDialog.Title"));
  shell.setLayout(new FormLayout());
  int margin=Const.MARGIN;
  Composite top=new Composite(shell,SWT.NONE);
  FormLayout topLayout=new FormLayout();
  topLayout.marginHeight=margin;
  topLayout.marginWidth=margin;
  top.setLayout(topLayout);
  FormData fdTop=new FormData();
  fdTop.left=new FormAttachment(0,0);
  fdTop.top=new FormAttachment(0,0);
  fdTop.right=new FormAttachment(100,0);
  fdTop.bottom=new FormAttachment(100,-50);
  top.setLayoutData(fdTop);
  props.setLook(top);
  Composite bottom=new Composite(shell,SWT.NONE);
  bottom.setLayout(new FormLayout());
  FormData fdBottom=new FormData();
  fdBottom.left=new FormAttachment(0,0);
  fdBottom.top=new FormAttachment(top,0);
  fdBottom.right=new FormAttachment(100,0);
  fdBottom.bottom=new FormAttachment(100,0);
  bottom.setLayoutData(fdBottom);
  props.setLook(bottom);
  SashForm sashform=new SashForm(top,SWT.HORIZONTAL);
  sashform.setLayout(new FormLayout());
  FormData fdSashform=new FormData();
  fdSashform.left=new FormAttachment(0,0);
  fdSashform.top=new FormAttachment(0,0);
  fdSashform.right=new FormAttachment(100,0);
  fdSashform.bottom=new FormAttachment(100,0);
  sashform.setLayoutData(fdSashform);
  Composite leftsplit=new Composite(sashform,SWT.NONE);
  leftsplit.setLayout(new FormLayout());
  FormData fdLeftsplit=new FormData();
  fdLeftsplit.left=new FormAttachment(0,0);
  fdLeftsplit.top=new FormAttachment(0,0);
  fdLeftsplit.right=new FormAttachment(100,0);
  fdLeftsplit.bottom=new FormAttachment(100,0);
  leftsplit.setLayoutData(fdLeftsplit);
  props.setLook(leftsplit);
  wlListSource=new Label(leftsplit,SWT.NONE);
  wlListSource.setText(Messages.getString("EnterListDialog.AvailableItems.Label"));
  props.setLook(wlListSource);
  FormData fdlListSource=new FormData();
  fdlListSource.left=new FormAttachment(0,0);
  fdlListSource.top=new FormAttachment(0,0);
  wlListSource.setLayoutData(fdlListSource);
  wListSource=new List(leftsplit,SWT.BORDER | SWT.MULTI | SWT.V_SCROLL| SWT.H_SCROLL);
  props.setLook(wListSource);
  FormData fdListSource=new FormData();
  fdListSource.left=new FormAttachment(0,0);
  fdListSource.top=new FormAttachment(wlListSource,0);
  fdListSource.right=new FormAttachment(100,0);
  fdListSource.bottom=new FormAttachment(100,0);
  wListSource.setLayoutData(fdListSource);
  Composite compmiddle=new Composite(sashform,SWT.NONE);
  compmiddle.setLayout(new FormLayout());
  FormData fdCompMiddle=new FormData();
  fdCompMiddle.left=new FormAttachment(0,0);
  fdCompMiddle.top=new FormAttachment(0,0);
  fdCompMiddle.right=new FormAttachment(100,0);
  fdCompMiddle.bottom=new FormAttachment(100,0);
  compmiddle.setLayoutData(fdCompMiddle);
  props.setLook(compmiddle);
  Composite gButtonGroup=new Composite(compmiddle,SWT.NONE);
  GridLayout gridLayout=new GridLayout(1,false);
  gButtonGroup.setLayout(gridLayout);
  wAddOne=new Button(gButtonGroup,SWT.PUSH);
  wAddOne.setText(" > ");
  wAddOne.setToolTipText(Messages.getString("EnterListDialog.AddOne.Tooltip"));
  wAddAll=new Button(gButtonGroup,SWT.PUSH);
  wAddAll.setText(" >> ");
  wAddAll.setToolTipText(Messages.getString("EnterListDialog.AddAll.Tooltip"));
  wRemoveOne=new Button(gButtonGroup,SWT.PUSH);
  wRemoveOne.setText(" < ");
  wRemoveOne.setToolTipText(Messages.getString("EnterListDialog.RemoveOne.Tooltip"));
  wRemoveAll=new Button(gButtonGroup,SWT.PUSH);
  wRemoveAll.setText(" << ");
  wRemoveAll.setToolTipText(Messages.getString("EnterListDialog.RemoveAll.Tooltip"));
  GridData gdAddOne=new GridData(GridData.FILL_BOTH);
  wAddOne.setLayoutData(gdAddOne);
  GridData gdAddAll=new GridData(GridData.FILL_BOTH);
  wAddAll.setLayoutData(gdAddAll);
  GridData gdRemoveAll=new GridData(GridData.FILL_BOTH);
  wRemoveAll.setLayoutData(gdRemoveAll);
  GridData gdRemoveOne=new GridData(GridData.FILL_BOTH);
  wRemoveOne.setLayoutData(gdRemoveOne);
  FormData fdButtonGroup=new FormData();
  wAddAll.pack();
  fdButtonGroup.left=new FormAttachment(50,-(wAddAll.getSize().x / 2) - 5);
  fdButtonGroup.top=new FormAttachment(30,0);
  gButtonGroup.setBackground(shell.getBackground());
  gButtonGroup.setLayoutData(fdButtonGroup);
  Composite rightsplit=new Composite(sashform,SWT.NONE);
  rightsplit.setLayout(new FormLayout());
  FormData fdRightsplit=new FormData();
  fdRightsplit.left=new FormAttachment(0,0);
  fdRightsplit.top=new FormAttachment(0,0);
  fdRightsplit.right=new FormAttachment(100,0);
  fdRightsplit.bottom=new FormAttachment(100,0);
  rightsplit.setLayoutData(fdRightsplit);
  props.setLook(rightsplit);
  wlListDest=new Label(rightsplit,SWT.NONE);
  wlListDest.setText(Messages.getString("EnterListDialog.Selection.Label"));
  props.setLook(wlListDest);
  FormData fdlListDest=new FormData();
  fdlListDest.left=new FormAttachment(0,0);
  fdlListDest.top=new FormAttachment(0,0);
  wlListDest.setLayoutData(fdlListDest);
  wListDest=new List(rightsplit,SWT.BORDER | SWT.MULTI | SWT.V_SCROLL| SWT.H_SCROLL);
  props.setLook(wListDest);
  FormData fdListDest=new FormData();
  fdListDest.left=new FormAttachment(0,0);
  fdListDest.top=new FormAttachment(wlListDest,0);
  fdListDest.right=new FormAttachment(100,0);
  fdListDest.bottom=new FormAttachment(100,0);
  wListDest.setLayoutData(fdListDest);
  sashform.setWeights(new int[]{40,16,40});
  wOK=new Button(bottom,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(bottom,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  FormData fdOK=new FormData();
  FormData fdCancel=new FormData();
  fdOK.left=new FormAttachment(35,0);
  fdOK.bottom=new FormAttachment(100,0);
  wOK.setLayoutData(fdOK);
  fdCancel.left=new FormAttachment(wOK,10);
  fdCancel.bottom=new FormAttachment(100,0);
  wCancel.setLayoutData(fdCancel);
  wCancel.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      log.logDebug(this.getClass().getName(),"CANCEL SelectFieldsDialog");
      dispose();
    }
  }
);
  wOK.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      handleOK();
    }
  }
);
  Transfer[] ttypes=new Transfer[]{TextTransfer.getInstance()};
  DragSource ddSource=new DragSource(wListSource,DND.DROP_MOVE | DND.DROP_COPY);
  ddSource.setTransfer(ttypes);
  ddSource.addDragListener(new DragSourceListener(){
    public void dragStart(    DragSourceEvent event){
    }
    public void dragSetData(    DragSourceEvent event){
      String ti[]=wListSource.getSelection();
      String data=new String();
      for (int i=0; i < ti.length; i++)       data+=ti[i] + Const.CR;
      event.data=data;
    }
    public void dragFinished(    DragSourceEvent event){
    }
  }
);
  DropTarget ddTarget=new DropTarget(wListDest,DND.DROP_MOVE | DND.DROP_COPY);
  ddTarget.setTransfer(ttypes);
  ddTarget.addDropListener(new DropTargetListener(){
    public void dragEnter(    DropTargetEvent event){
    }
    public void dragLeave(    DropTargetEvent event){
    }
    public void dragOperationChanged(    DropTargetEvent event){
    }
    public void dragOver(    DropTargetEvent event){
    }
    public void drop(    DropTargetEvent event){
      if (event.data == null) {
        event.detail=DND.DROP_NONE;
        return;
      }
      StringTokenizer strtok=new StringTokenizer((String)event.data,Const.CR);
      while (strtok.hasMoreTokens()) {
        String source=strtok.nextToken();
        addToDestination(source);
      }
    }
    public void dropAccept(    DropTargetEvent event){
    }
  }
);
  wListSource.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.character == SWT.CR) {
        addToSelection(wListSource.getSelection());
      }
    }
  }
);
  wListDest.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.character == SWT.CR) {
        delFromSelection(wListDest.getSelection());
      }
    }
  }
);
  wListSource.addSelectionListener(new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      addToSelection(wListSource.getSelection());
    }
  }
);
  wListDest.addSelectionListener(new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      delFromSelection(wListDest.getSelection());
    }
  }
);
  wAddOne.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      addToSelection(wListSource.getSelection());
    }
  }
);
  wRemoveOne.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      delFromSelection(wListDest.getSelection());
    }
  }
);
  wAddAll.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      addToSelection(wListSource.getItems());
    }
  }
);
  wRemoveAll.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      delFromSelection(wListDest.getItems());
    }
  }
);
  opened=true;
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  Display display=parent.getDisplay();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return retval;
}
