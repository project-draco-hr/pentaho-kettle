{
  assertEquals("FOO TIMESTAMP",nativeMeta.getFieldDefinition(new ValueMetaDate("FOO"),"","",false,true,false));
  assertEquals("TIMESTAMP",nativeMeta.getFieldDefinition(new ValueMetaTimestamp("FOO"),"","",false,false,false));
  assertEquals("CHARACTER(1)",nativeMeta.getFieldDefinition(new ValueMetaBoolean("FOO"),"","",false,false,false));
  assertEquals("BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NOCACHE)",nativeMeta.getFieldDefinition(new ValueMetaBigNumber("FOO",8,0),"FOO","",true,false,false));
  assertEquals("BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NOCACHE)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",12,0),"FOO","",true,false,false));
  assertEquals("INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1, NOCACHE)",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",12,0),"FOO","",true,false,false));
  assertEquals("FLOAT",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",0,0),"","",false,false,false));
  assertEquals("DECIMAL(12)",nativeMeta.getFieldDefinition(new ValueMetaBigNumber("FOO",12,0),"","",false,false,false));
  assertEquals("DECIMAL(12, 4)",nativeMeta.getFieldDefinition(new ValueMetaBigNumber("FOO",12,4),"","",false,false,false));
  assertEquals("INTEGER",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",10,0),"","",false,false,false));
  int realMaxBeforeCLOB=Math.max(nativeMeta.getMaxVARCHARLength(),DatabaseMeta.CLOB_LENGTH);
  int realMinBeforeCLOB=Math.min(nativeMeta.getMaxVARCHARLength(),DatabaseMeta.CLOB_LENGTH);
  assertEquals("CLOB",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",realMaxBeforeCLOB + 1,0),"","",false,false,false));
  assertEquals("CLOB",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",realMaxBeforeCLOB,0),"","",false,false,false));
  assertEquals(String.format("VARCHAR(%d)",realMinBeforeCLOB - 1),nativeMeta.getFieldDefinition(new ValueMetaString("FOO",realMinBeforeCLOB - 1,0),"","",false,false,false));
  assertEquals("VARCHAR()",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",0,0),"","",false,false,false));
  assertEquals(String.format("BLOB(%d)",realMaxBeforeCLOB + 1),nativeMeta.getFieldDefinition(new ValueMetaBinary("FOO",realMaxBeforeCLOB + 1,0),"","",false,false,false));
  assertEquals("BLOB",nativeMeta.getFieldDefinition(new ValueMetaBinary("FOO",0,0),"","",false,false,false));
  assertEquals("CHAR(150) FOR BIT DATA",nativeMeta.getFieldDefinition(new ValueMetaBinary("FOO",150,0),"","",false,false,false));
  assertEquals(" UNKNOWN",nativeMeta.getFieldDefinition(new ValueMetaInternetAddress("FOO"),"","",false,false,false));
  assertEquals(" UNKNOWN" + System.getProperty("line.separator"),nativeMeta.getFieldDefinition(new ValueMetaInternetAddress("FOO"),"","",false,false,true));
}
