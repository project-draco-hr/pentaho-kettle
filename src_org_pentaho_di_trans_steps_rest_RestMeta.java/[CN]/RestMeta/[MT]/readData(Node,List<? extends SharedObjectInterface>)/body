{
  try {
    applicationType=XMLHandler.getTagValue(stepnode,"applicationType");
    method=XMLHandler.getTagValue(stepnode,"method");
    url=XMLHandler.getTagValue(stepnode,"url");
    urlInField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"urlInField"));
    methodFieldName=XMLHandler.getTagValue(stepnode,"methodFieldName");
    dynamicMethod="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"dynamicMethod"));
    urlField=XMLHandler.getTagValue(stepnode,"urlField");
    bodyField=XMLHandler.getTagValue(stepnode,"bodyField");
    httpLogin=XMLHandler.getTagValue(stepnode,"httpLogin");
    httpPassword=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode,"httpPassword"));
    proxyHost=XMLHandler.getTagValue(stepnode,"proxyHost");
    proxyPort=XMLHandler.getTagValue(stepnode,"proxyPort");
    preemptive="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"preemptive"));
    trustStoreFile=XMLHandler.getTagValue(stepnode,"trustStoreFile");
    trustStorePassword=XMLHandler.getTagValue(stepnode,"trustStorePassword");
    Node headernode=XMLHandler.getSubNode(stepnode,"headers");
    int nrheaders=XMLHandler.countNodes(headernode,"header");
    Node paramnode=XMLHandler.getSubNode(stepnode,"parameters");
    int nrparameters=XMLHandler.countNodes(paramnode,"parameter");
    allocate(nrheaders,nrparameters);
    for (int i=0; i < nrheaders; i++) {
      Node anode=XMLHandler.getSubNodeByNr(headernode,"header",i);
      headerField[i]=XMLHandler.getTagValue(anode,"field");
      headerName[i]=XMLHandler.getTagValue(anode,"name");
    }
    for (int i=0; i < nrparameters; i++) {
      Node anode=XMLHandler.getSubNodeByNr(paramnode,"parameter",i);
      parameterField[i]=XMLHandler.getTagValue(anode,"field");
      parameterName[i]=XMLHandler.getTagValue(anode,"name");
    }
    fieldName=XMLHandler.getTagValue(stepnode,"result","name");
    resultCodeFieldName=XMLHandler.getTagValue(stepnode,"result","code");
    responseTimeFieldName=XMLHandler.getTagValue(stepnode,"result","response_time");
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"RestMeta.Exception.UnableToReadStepInfo"),e);
  }
}
