{
  try {
    lineNumberInFile=0;
    debug="openNextFile : close last file";
    if (!closeLastFile())     return false;
    data.isLastFile=(data.filenr == data.files.length - 1);
    data.filename=data.files[data.filenr];
    debug="openNextFile : open file";
    logBasic("Opening file: " + data.filename);
    data.fr=new FileInputStream(new File(data.filename));
    data.dataErrorLineHandler.handleFile(data.filename);
    if (meta.isZipped()) {
      data.zi=new ZipInputStream(data.fr);
      data.zi.getNextEntry();
      if (meta.getEncoding() != null && meta.getEnclosure().length() > 0) {
        data.isr=new InputStreamReader(new BufferedInputStream(data.zi),meta.getEncoding());
      }
 else {
        data.isr=new InputStreamReader(new BufferedInputStream(data.zi));
      }
    }
 else {
      if (meta.getEncoding() != null && meta.getEnclosure().length() > 0) {
        data.isr=new InputStreamReader(new BufferedInputStream(data.fr),meta.getEncoding());
      }
 else {
        data.isr=new InputStreamReader(new BufferedInputStream(data.fr));
      }
    }
    debug="openNextFile : set all kinds of parameters";
    data.filenr++;
    data.doneReading=false;
    int bufferSize=1;
    bufferSize+=meta.hasHeader() ? meta.getNrHeaderLines() : 0;
    bufferSize+=meta.isLayoutPaged() ? meta.getNrLinesPerPage() : 0;
    bufferSize+=meta.hasFooter() ? meta.getNrFooterLines() : 0;
    if (meta.isLayoutPaged()) {
      for (int i=0; i < meta.getNrLinesDocHeader(); i++) {
        getLine(log,data.isr,meta.getFileFormat());
      }
    }
    String line;
    for (int i=0; i < bufferSize && !data.doneReading; i++) {
      line=getLine(log,data.isr,meta.getFileFormat());
      if (line != null) {
        linesInput++;
        lineNumberInFile++;
        data.lineBuffer.add(new TextFileLine(line,lineNumberInFile));
      }
 else {
        data.doneReading=true;
      }
    }
    data.headerLinesRead=0;
    data.footerLinesRead=0;
    data.pageLinesRead=0;
    data.doneWithHeader=!meta.hasHeader();
  }
 catch (  Exception e) {
    logError("Couldn't open file #" + data.filenr + " : "+ data.filename+ " ("+ debug+ ") --> "+ e.toString());
    stopAll();
    setErrors(1);
    return false;
  }
  return true;
}
