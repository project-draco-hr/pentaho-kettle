{
  boolean returncode=false;
  FileObject file_name=null;
  boolean rethrow=false;
  try {
    if (!info.getFile().toString().equals(root_folder)) {
      if ((info.getFile().getType() == FileType.FILE)) {
        if (info.getFile().getParent().equals(info.getBaseFolder())) {
          if ((isSpecifyWildcard() && GetFileWildcard(info.getFile().getName().getBaseName())) || !isSpecifyWildcard()) {
            if (log.isDetailed()) {
              log.logDetailed("We found file : " + info.getFile().toString());
            }
            filescount++;
          }
        }
 else {
          if (isIncludeSubFolders()) {
            if ((isSpecifyWildcard() && GetFileWildcard(info.getFile().getName().getBaseName())) || !isSpecifyWildcard()) {
              if (log.isDetailed()) {
                log.logDetailed("We found file : " + info.getFile().toString());
              }
              filescount++;
            }
          }
        }
      }
 else {
        folderscount++;
      }
    }
    if (filescount > 0) {
      rethrow=true;
      throw new ExpectedException();
    }
    return true;
  }
 catch (  Exception e) {
    if (!rethrow) {
      log.logError(BaseMessages.getString(PKG,"JobFolderIsEmpty.Error"),BaseMessages.getString(PKG,"JobFolderIsEmpty.Error.Exception",info.getFile().toString(),e.getMessage()));
      returncode=false;
    }
 else {
      throw (ExpectedException)e;
    }
  }
 finally {
    if (file_name != null) {
      try {
        file_name.close();
        file_name=null;
      }
 catch (      IOException ex) {
      }
    }
  }
  return returncode;
}
