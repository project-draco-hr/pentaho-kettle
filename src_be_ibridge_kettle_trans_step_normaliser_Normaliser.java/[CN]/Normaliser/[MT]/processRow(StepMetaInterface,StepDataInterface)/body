{
  meta=(NormaliserMeta)smi;
  data=(NormaliserData)sdi;
  Row r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.type_occ=new ArrayList();
    data.maxlen=0;
    for (int i=0; i < meta.getFieldValue().length; i++) {
      boolean found=false;
      for (int j=0; j < data.type_occ.size(); j++) {
        if (((String)data.type_occ.get(j)).equalsIgnoreCase(meta.getFieldValue()[i]))         found=true;
      }
      if (!found)       data.type_occ.add(meta.getFieldValue()[i]);
      if (meta.getFieldValue()[i].length() > data.maxlen)       data.maxlen=meta.getFieldValue()[i].length();
    }
    data.copy_fieldnrs=new ArrayList();
    for (int i=0; i < r.size(); i++) {
      Value v=r.getValue(i);
      boolean found=false;
      for (int j=0; j < meta.getFieldName().length && !found; j++) {
        if (v.getName().equalsIgnoreCase(meta.getFieldName()[j])) {
          found=true;
        }
      }
      if (!found) {
        data.copy_fieldnrs.add(new Integer(i));
      }
    }
    data.fieldnrs=new int[meta.getFieldName().length];
    for (int i=0; i < meta.getFieldName().length; i++) {
      data.fieldnrs[i]=r.searchValueIndex(meta.getFieldName()[i]);
      if (data.fieldnrs[i] < 0) {
        logError(Messages.getString("Normaliser.Log.CouldNotFindFieldInRow",meta.getFieldName()[i]));
        setErrors(1);
        stopAll();
        return false;
      }
    }
  }
  for (int e=0; e < data.type_occ.size(); e++) {
    String typevalue=(String)data.type_occ.get(e);
    Row newrow=new Row();
    for (int i=0; i < data.copy_fieldnrs.size(); i++) {
      int nr=((Integer)data.copy_fieldnrs.get(i)).intValue();
      Value v=r.getValue(nr);
      newrow.addValue(new Value(v));
    }
    Value typefield_value=new Value(meta.getTypeField(),typevalue);
    typefield_value.setLength(data.maxlen);
    newrow.addValue(typefield_value);
    for (int i=0; i < data.fieldnrs.length; i++) {
      Value v=r.getValue(data.fieldnrs[i]);
      if (meta.getFieldValue()[i].equalsIgnoreCase(typevalue)) {
        v.setName(meta.getFieldNorm()[i]);
        newrow.addValue(v);
      }
    }
    putRow(newrow);
  }
  if ((linesRead > 0) && (linesRead % Const.ROWS_UPDATE) == 0)   logBasic(Messages.getString("Normaliser.Log.LineNumber") + linesRead);
  return true;
}
