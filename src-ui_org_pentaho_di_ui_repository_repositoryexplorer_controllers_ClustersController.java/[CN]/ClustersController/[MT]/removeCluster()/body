{
  String clusterSchemaName="";
  try {
    Collection<UICluster> clusters=clustersTable.getSelectedItems();
    if (clusters != null && !clusters.isEmpty()) {
      ClusterSchema clusterSchema=((UICluster)clusters.toArray()[0]).getClusterSchema();
      clusterSchemaName=clusterSchema.getName();
      ObjectId clusterId=repository.getClusterID(clusterSchema.getName());
      if (clusterId == null) {
        MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
        mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.DoesNotExists.Message"));
        mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.Title"));
        mb.open();
      }
 else {
        repository.deleteClusterSchema(clusterId);
        refreshClusters();
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
      mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.NoItemSelected.Message"));
      mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.UnexpectedError.Message") + clusterSchemaName + "]",e);
  }
}
