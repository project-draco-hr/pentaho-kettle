{
  List<JarFileAnnotationPlugin> jarFilePlugins=findAnnotatedClassFiles(pluginType.getName());
  for (  JarFileAnnotationPlugin jarFilePlugin : jarFilePlugins) {
    URLClassLoader urlClassLoader=new URLClassLoader(new URL[]{jarFilePlugin.getJarFile()},getClass().getClassLoader());
    try {
      Class<?> clazz=urlClassLoader.loadClass(jarFilePlugin.getClassName());
      java.lang.annotation.Annotation partitioner=clazz.getAnnotation(pluginType);
      List<String> libraries=new ArrayList<String>();
      File f=new File(jarFilePlugin.getJarFile().getFile());
      File parent=f.getParentFile();
      for (      File fil : parent.listFiles()) {
        try {
          libraries.add(fil.toURI().toURL().getFile());
        }
 catch (        MalformedURLException e) {
          e.printStackTrace();
        }
      }
      File libDir=new File(parent.toString() + File.separator + "lib");
      ;
      if (libDir.exists()) {
        for (        File fil : libDir.listFiles()) {
          if (fil.getName().indexOf(".jar") > 0) {
            try {
              libraries.add(fil.toURI().toURL().getFile());
            }
 catch (            MalformedURLException e) {
              e.printStackTrace();
            }
          }
        }
      }
      handlePluginAnnotation(clazz,partitioner,libraries,false,jarFilePlugin.getPluginFolder());
    }
 catch (    ClassNotFoundException e) {
    }
  }
}
