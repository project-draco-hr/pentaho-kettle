{
  String[] ids=new String[]{extractID(annotation)};
  if (ids.length == 1 && Const.isEmpty(ids[0])) {
    throw new KettlePluginException("No ID specified for plugin with class: " + clazz.getName());
  }
  String name=extractName(annotation);
  String description=extractDesc(annotation);
  String category=extractCategory(annotation);
  Map<Class<?>,String> classMap=new HashMap<Class<?>,String>();
  PluginMainClassType mainType=getClass().getAnnotation(PluginMainClassType.class);
  classMap.put(mainType.value(),clazz.getName());
  PluginClassTypeMapping extraTypes=clazz.getAnnotation(PluginClassTypeMapping.class);
  if (extraTypes != null) {
    for (int i=0; i < extraTypes.classTypes().length; i++) {
      classMap.put(extraTypes.classTypes()[i],extraTypes.implementationClass()[i].getName());
    }
  }
  PluginInterface plugin=new Plugin(ids,this.getClass(),mainType.value(),category,name,description,null,false,nativeRepositoryType,classMap,libraries,null,pluginFolder);
  registry.registerPlugin(this.getClass(),plugin);
}
