{
  Row r=new Row();
  Value value;
  for (int i=0; i < meta.getFieldName().length; i++) {
    int valtype=Value.getType(meta.getFieldType()[i]);
    if (meta.getFieldName()[i] != null) {
      value=new Value(meta.getFieldName()[i],valtype);
      String def_value=meta.getValue()[i];
      if (value.isNumber()) {
        try {
          if (meta.getFieldFormat()[i] != null || meta.getDecimal()[i] != null || meta.getGroup()[i] != null || meta.getCurrency()[i] != null) {
            if (meta.getFieldFormat()[i] != null && meta.getFieldFormat()[i].length() >= 1)             data.df.applyPattern(meta.getFieldFormat()[i]);
            if (meta.getDecimal()[i] != null && meta.getDecimal()[i].length() >= 1)             data.dfs.setDecimalSeparator(meta.getDecimal()[i].charAt(0));
            if (meta.getGroup()[i] != null && meta.getGroup()[i].length() >= 1)             data.dfs.setGroupingSeparator(meta.getGroup()[i].charAt(0));
            if (meta.getCurrency()[i] != null && meta.getCurrency()[i].length() >= 1)             data.dfs.setCurrencySymbol(meta.getCurrency()[i]);
            data.df.setDecimalFormatSymbols(data.dfs);
          }
          value.setValue(data.nf.parse(def_value).doubleValue());
        }
 catch (        Exception e) {
          logError("Couldn't parse number field [" + value.getName() + "] with value ["+ def_value+ "] -->"+ e.toString());
          setErrors(1);
          stopAll();
          return null;
        }
      }
 else       if (value.isString()) {
        value.setValue(def_value);
      }
 else       if (value.isDate()) {
        try {
          if (meta.getFieldFormat()[i] != null) {
            data.daf.applyPattern(meta.getFieldFormat()[i]);
            data.daf.setDateFormatSymbols(data.dafs);
          }
          value.setValue(data.daf.parse(def_value));
        }
 catch (        Exception e) {
          logError("Couldn't parse date field [" + value.getName() + "] with value ["+ def_value+ "] -->"+ e.toString());
          setErrors(1);
          stopAll();
          return null;
        }
      }
      r.addValue(value);
    }
  }
  return r;
}
