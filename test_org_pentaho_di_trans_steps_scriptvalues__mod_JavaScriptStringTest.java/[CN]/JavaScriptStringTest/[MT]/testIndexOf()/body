{
  EnvUtil.environmentInit();
  String javaScriptStepname="javascript step";
  ScriptValuesMetaMod svm=new ScriptValuesMetaMod();
  ScriptValuesScript[] js=new ScriptValuesScript[]{new ScriptValuesScript(ScriptValuesScript.TRANSFORM_SCRIPT,"script","var index1 = indexOf(string.getString(), search.getString());\n" + "var index2 = indexOf(string.getString(), search.getString(), offset1.getInteger());\n" + "var index3 = indexOf(string.getString(), search.getString(), offset2.getInteger());\n")};
  svm.setJSScripts(js);
  svm.setName(new String[]{"index1","index2","index3"});
  svm.setRename(new String[]{"","",""});
  svm.setType(new int[]{ValueMetaInterface.TYPE_INTEGER,ValueMetaInterface.TYPE_INTEGER,ValueMetaInterface.TYPE_INTEGER});
  svm.setLength(new int[]{-1,-1,-1});
  svm.setPrecision(new int[]{-1,-1,-1});
  svm.setReplace(new boolean[]{false,false,false});
  svm.setCompatible(true);
  TransMeta transMeta=TransTestFactory.generateTestTransformation(new Variables(),svm,javaScriptStepname);
  List<RowMetaAndData> result=TransTestFactory.executeTestTransformation(transMeta,TransTestFactory.INJECTOR_STEPNAME,javaScriptStepname,TransTestFactory.DUMMY_STEPNAME,createData4());
  checkRows(result,createResultData4());
}
