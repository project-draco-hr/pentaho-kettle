{
  try {
    DatabaseMeta databaseMeta=meta.getDatabaseMeta();
    String sql="SELECT " + databaseMeta.quoteField(meta.getKeyField());
    for (int i=0; i < meta.getKeyLookup().length; i++) {
      sql+=", " + meta.getKeyLookup()[i];
    }
    for (int i=0; i < meta.getFieldLookup().length; i++) {
      sql+=", " + meta.getFieldLookup()[i];
    }
    sql+=", " + databaseMeta.quoteField(meta.getDateFrom());
    sql+=", " + databaseMeta.quoteField(meta.getDateTo());
    sql+=" FROM " + data.schemaTable;
    logDetailed("Pre-loading cache by reading from database with: " + Const.CR + sql+ Const.CR);
    List<Object[]> rows=data.db.getRows(sql,-1);
    RowMetaInterface rowMeta=data.db.getReturnRowMeta();
    data.preloadKeyIndexes=new int[meta.getKeyLookup().length];
    for (int i=0; i < data.preloadKeyIndexes.length; i++) {
      data.preloadKeyIndexes[i]=rowMeta.indexOfValue(meta.getKeyLookup()[i]);
    }
    data.preloadFromDateIndex=rowMeta.indexOfValue(meta.getDateFrom());
    data.preloadToDateIndex=rowMeta.indexOfValue(meta.getDateTo());
    data.preloadCache=new DimensionCache(rowMeta,data.preloadKeyIndexes,data.preloadFromDateIndex,data.preloadToDateIndex);
    data.preloadCache.setRowCache(rows);
    logDetailed("Sorting the cache rows...");
    data.preloadCache.sortRows();
    logDetailed("Sorting of cached rows finished.");
    data.preloadIndexes=new ArrayList<Integer>();
    for (int i=0; i < meta.getKeyStream().length; i++) {
      int index=getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);
      if (index < 0) {
        throw new KettleStepException(BaseMessages.getString(PKG,"DimensionLookup.Exception.KeyFieldNotFound",meta.getFieldStream()[i]));
      }
      data.preloadIndexes.add(index);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Error encountered during cache pre-load",e);
  }
}
