{
  if (isJettyMode() && !request.getContextPath().startsWith(CONTEXT_PATH)) {
    return;
  }
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"PrepareExecutionTransServlet.TransPrepareExecutionRequested"));
  }
  String transName=request.getParameter("name");
  String id=request.getParameter("id");
  boolean useXML="Y".equalsIgnoreCase(request.getParameter("xml"));
  response.setStatus(HttpServletResponse.SC_OK);
  PrintWriter out=response.getWriter();
  if (useXML) {
    response.setContentType("text/xml");
    out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));
  }
 else {
    response.setCharacterEncoding("UTF-8");
    response.setContentType("text/html;charset=UTF-8");
    out.println("<HTML>");
    out.println("<HEAD>");
    out.println("<TITLE>" + BaseMessages.getString(PKG,"PrepareExecutionTransServlet.TransPrepareExecution") + "</TITLE>");
    out.println("<META http-equiv=\"Refresh\" content=\"2;url=" + convertContextPath(GetTransStatusServlet.CONTEXT_PATH) + "?name="+ URLEncoder.encode(transName,"UTF-8")+ "\">");
    out.println("<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">");
    out.println("</HEAD>");
    out.println("<BODY>");
  }
  Encoder encoder=ESAPI.encoder();
  try {
    Trans trans;
    CarteObjectEntry entry;
    if (Utils.isEmpty(id)) {
      entry=getTransformationMap().getFirstCarteObjectEntry(transName);
      if (entry == null) {
        trans=null;
      }
 else {
        id=entry.getId();
        trans=getTransformationMap().getTransformation(entry);
      }
    }
 else {
      entry=new CarteObjectEntry(transName,id);
      trans=getTransformationMap().getTransformation(entry);
    }
    TransConfiguration transConfiguration=getTransformationMap().getConfiguration(entry);
    if (trans != null && transConfiguration != null) {
      TransExecutionConfiguration executionConfiguration=transConfiguration.getTransExecutionConfiguration();
      trans.setArguments(executionConfiguration.getArgumentStrings());
      trans.setReplayDate(executionConfiguration.getReplayDate());
      trans.setSafeModeEnabled(executionConfiguration.isSafeModeEnabled());
      trans.setGatheringMetrics(executionConfiguration.isGatheringMetrics());
      trans.injectVariables(executionConfiguration.getVariables());
      trans.setPreviousResult(executionConfiguration.getPreviousResult());
      try {
        trans.prepareExecution(null);
        if (useXML) {
          out.println(WebResult.OK.getXML());
        }
 else {
          out.println("<H1>" + encoder.encodeForHTML(BaseMessages.getString(PKG,"PrepareExecutionTransServlet.TransPrepared",transName)) + "</H1>");
          out.println("<a href=\"" + convertContextPath(GetTransStatusServlet.CONTEXT_PATH) + "?name="+ URLEncoder.encode(transName,"UTF-8")+ "&id="+ URLEncoder.encode(id,"UTF-8")+ "\">"+ BaseMessages.getString(PKG,"TransStatusServlet.BackToTransStatusPage")+ "</a><p>");
        }
      }
 catch (      Exception e) {
        String logText=KettleLogStore.getAppender().getBuffer(trans.getLogChannel().getLogChannelId(),true).toString();
        if (useXML) {
          out.println(new WebResult(WebResult.STRING_ERROR,BaseMessages.getString(PKG,"PrepareExecutionTransServlet.Error.TransInitFailed",Const.CR + logText + Const.CR+ Const.getStackTracker(e))));
        }
 else {
          out.println("<H1>" + encoder.encodeForHTML(BaseMessages.getString(PKG,"PrepareExecutionTransServlet.Log.TransNotInit",transName)) + "</H1>");
          out.println("<pre>");
          out.println(encoder.encodeForHTML(logText));
          out.println(encoder.encodeForHTML(Const.getStackTracker(e)));
          out.println("</pre>");
          out.println("<a href=\"" + convertContextPath(GetTransStatusServlet.CONTEXT_PATH) + "?name="+ URLEncoder.encode(transName,"UTF-8")+ "&id="+ id+ "\">"+ BaseMessages.getString(PKG,"TransStatusServlet.BackToTransStatusPage")+ "</a><p>");
        }
      }
    }
 else {
      if (useXML) {
        out.println(new WebResult(WebResult.STRING_ERROR,BaseMessages.getString(PKG,"TransStatusServlet.Log.CoundNotFindSpecTrans",transName)));
      }
 else {
        out.println("<H1>" + encoder.encodeForHTML(BaseMessages.getString(PKG,"TransStatusServlet.Log.CoundNotFindTrans",transName)) + "</H1>");
        out.println("<a href=\"" + convertContextPath(GetStatusServlet.CONTEXT_PATH) + "\">"+ BaseMessages.getString(PKG,"TransStatusServlet.BackToStatusPage")+ "</a><p>");
      }
    }
  }
 catch (  Exception ex) {
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_ERROR,BaseMessages.getString(PKG,"PrepareExecutionTransServlet.Error.UnexpectedError",Const.CR + Const.getStackTracker(ex))));
    }
 else {
      out.println("<p>");
      out.println("<pre>");
      out.println(encoder.encodeForHTML(Const.getStackTracker(ex)));
      out.println("</pre>");
    }
  }
  if (!useXML) {
    out.println("<p>");
    out.println("</BODY>");
    out.println("</HTML>");
  }
}
