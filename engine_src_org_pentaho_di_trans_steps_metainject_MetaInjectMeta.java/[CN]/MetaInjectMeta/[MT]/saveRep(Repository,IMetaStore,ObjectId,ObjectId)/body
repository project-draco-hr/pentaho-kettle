{
  try {
    rep.saveStepAttribute(id_transformation,id_step,SPECIFICATION_METHOD,specificationMethod == null ? null : specificationMethod.getCode());
    rep.saveStepAttribute(id_transformation,id_step,TRANS_OBJECT_ID,transObjectId == null ? null : transObjectId.toString());
    rep.saveStepAttribute(id_transformation,id_step,FILENAME,fileName);
    rep.saveStepAttribute(id_transformation,id_step,TRANS_NAME,transName);
    rep.saveStepAttribute(id_transformation,id_step,DIRECTORY_PATH,directoryPath);
    rep.saveStepAttribute(id_transformation,id_step,SOURCE_STEP,sourceStepName);
    for (    MetaInjectOutputField field : sourceOutputFields) {
      rep.saveStepAttribute(id_transformation,id_step,SOURCE_OUTPUT_FIELD_NAME,field.getName());
      rep.saveStepAttribute(id_transformation,id_step,SOURCE_OUTPUT_FIELD_TYPE,field.getTypeDescription());
      rep.saveStepAttribute(id_transformation,id_step,SOURCE_OUTPUT_FIELD_LENGTH,field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,SOURCE_OUTPUT_FIELD_PRECISION,field.getPrecision());
    }
    rep.saveStepAttribute(id_transformation,id_step,TARGET_FILE,targetFile);
    rep.saveStepAttribute(id_transformation,id_step,NO_EXECUTION,noExecution);
    List<TargetStepAttribute> keySet=new ArrayList<TargetStepAttribute>(targetSourceMapping.keySet());
    for (int i=0; i < keySet.size(); i++) {
      TargetStepAttribute target=keySet.get(i);
      SourceStepField source=targetSourceMapping.get(target);
      rep.saveStepAttribute(id_transformation,id_step,i,MAPPING_TARGET_STEP_NAME,target.getStepname());
      rep.saveStepAttribute(id_transformation,id_step,i,MAPPING_TARGET_ATTRIBUTE_KEY,target.getAttributeKey());
      rep.saveStepAttribute(id_transformation,id_step,i,MAPPING_TARGET_DETAIL,target.isDetail());
      rep.saveStepAttribute(id_transformation,id_step,i,MAPPING_SOURCE_STEP,source.getStepname());
      rep.saveStepAttribute(id_transformation,id_step,i,MAPPING_SOURCE_FIELD,source.getField());
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
