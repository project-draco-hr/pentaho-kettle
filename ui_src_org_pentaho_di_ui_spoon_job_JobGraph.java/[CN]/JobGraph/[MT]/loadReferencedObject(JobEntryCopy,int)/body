{
  try {
    Object referencedMeta=jobEntryCopy.getEntry().loadReferencedObject(index,spoon.rep,spoon.metaStore,jobMeta);
    if (referencedMeta == null) {
      referencedMeta=compatibleJobEntryLoadReferencedObject(jobEntryCopy.getEntry(),index,spoon.rep,jobMeta);
    }
    if (referencedMeta != null && (referencedMeta instanceof TransMeta)) {
      TransMeta launchTransMeta=(TransMeta)referencedMeta;
      TabMapEntry tabEntry=spoon.delegates.tabs.findTabForTransformation(launchTransMeta);
      if (tabEntry != null) {
        spoon.tabfolder.setSelected(tabEntry.getTabItem());
        return;
      }
      copyInternalJobVariables(jobMeta,launchTransMeta);
      spoon.setParametersAsVariablesInUI(launchTransMeta,launchTransMeta);
      launchTransMeta.clearChanged();
      spoon.addTransGraph(launchTransMeta);
      TransGraph transGraph=spoon.getActiveTransGraph();
      attachActiveTrans(transGraph,launchTransMeta,jobEntryCopy);
      spoon.refreshTree();
      spoon.applyVariables();
    }
    if (referencedMeta != null && (referencedMeta instanceof JobMeta)) {
      JobMeta launchJobMeta=(JobMeta)referencedMeta;
      String tabName=spoon.delegates.tabs.makeTabName(launchJobMeta,true);
      TabMapEntry tabEntry=spoon.delegates.tabs.findTabMapEntry(tabName,ObjectType.JOB_GRAPH);
      if (tabEntry != null) {
        spoon.tabfolder.setSelected(tabEntry.getTabItem());
        return;
      }
      spoon.setParametersAsVariablesInUI(launchJobMeta,launchJobMeta);
      launchJobMeta.clearChanged();
      spoon.addJobGraph(launchJobMeta);
      JobGraph jobGraph=spoon.getActiveJobGraph();
      attachActiveJob(jobGraph,launchJobMeta,jobEntryCopy);
      spoon.refreshTree();
      spoon.applyVariables();
    }
  }
 catch (  Exception e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"JobGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformation.Title"),BaseMessages.getString(PKG,"JobGraph.Dialog.ErrorLaunchingSpoonCanNotLoadTransformation.Message"),e);
  }
}
