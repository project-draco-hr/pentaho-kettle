{
  GCInterface gc=new SWTGC(device,new Point(x,y),iconsize);
  int gridSize=PropsUI.getInstance().isShowCanvasGridEnabled() ? PropsUI.getInstance().getCanvasGridSize() : 1;
  JobPainter jobPainter=new JobPainter(gc,jobMeta,new Point(x,y),new SwtScrollBar(hori),new SwtScrollBar(vert),hop_candidate,drop_candidate,selectionRegion,areaOwners,mouseOverEntries,PropsUI.getInstance().getIconSize(),PropsUI.getInstance().getLineWidth(),gridSize,PropsUI.getInstance().getShadowSize(),PropsUI.getInstance().isAntiAliasingEnabled(),PropsUI.getInstance().getNoteFont().getName(),PropsUI.getInstance().getNoteFont().getHeight());
  jobPainter.setMagnification(magnificationFactor);
  jobPainter.setEntryLogMap(entryLogMap);
  jobPainter.setStartHopEntry(startHopEntry);
  jobPainter.setEndHopLocation(endHopLocation);
  jobPainter.setEndHopEntry(endHopEntry);
  jobPainter.setNoInputEntry(noInputEntry);
  if (job != null) {
    jobPainter.setJobEntryResults(job.getJobEntryResults());
  }
 else {
    jobPainter.setJobEntryResults(new ArrayList<JobEntryResult>());
  }
  List<JobEntryCopy> activeJobEntries=new ArrayList<JobEntryCopy>();
  if (job != null) {
    if (job.getActiveJobEntryJobs().size() > 0) {
      activeJobEntries.addAll(job.getActiveJobEntryJobs().keySet());
    }
    if (job.getActiveJobEntryTransformations().size() > 0) {
      activeJobEntries.addAll(job.getActiveJobEntryTransformations().keySet());
    }
  }
  jobPainter.setActiveJobEntries(activeJobEntries);
  jobPainter.drawJob();
  return (Image)gc.getImage();
}
