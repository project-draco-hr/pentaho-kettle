{
  JobMeta jobMeta=spoon.getActiveJob();
  if (jobMeta == null) {
    return;
  }
  if (lastChained != null && jobMeta.findJobEntry(lastChained.getName(),lastChained.getNr(),false) == null) {
    lastChained=null;
  }
  List<JobEntryCopy> sel=jobMeta.getSelectedEntries();
  if (sel.size() == 1) {
    lastChained=sel.get(0);
  }
  Point p=null;
  if (lastChained == null) {
    p=jobMeta.getMaximum();
    p.x-=100;
  }
 else {
    p=new Point(lastChained.getLocation().x,lastChained.getLocation().y);
  }
  p.x+=200;
  JobEntryCopy newEntry=spoon.newJobEntry(jobMeta,typeDesc,false);
  if (newEntry == null) {
    return;
  }
  newEntry.setLocation(p.x,p.y);
  newEntry.setDrawn();
  if (lastChained != null) {
    spoon.newJobHop(jobMeta,lastChained,newEntry);
  }
  lastChained=newEntry;
  spoon.refreshGraph();
  spoon.refreshTree();
  if (shift) {
    editEntry(newEntry);
  }
  jobMeta.unselectAll();
  newEntry.setSelected(true);
}
