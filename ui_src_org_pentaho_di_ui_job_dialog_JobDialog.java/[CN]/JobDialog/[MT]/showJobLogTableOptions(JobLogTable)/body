{
  addDBSchemaTableLogOptions(jobLogTable);
  Label wlLogInterval=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogInterval.setText(BaseMessages.getString(PKG,"JobDialog.LogInterval.Label"));
  props.setLook(wlLogInterval);
  FormData fdlLogInterval=new FormData();
  fdlLogInterval.left=new FormAttachment(0,0);
  fdlLogInterval.right=new FormAttachment(middle,-margin);
  fdlLogInterval.top=new FormAttachment(wLogTable,margin);
  wlLogInterval.setLayoutData(fdlLogInterval);
  wLogInterval=new TextVar(jobMeta,wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogInterval);
  wLogInterval.addModifyListener(lsMod);
  FormData fdLogInterval=new FormData();
  fdLogInterval.left=new FormAttachment(middle,0);
  fdLogInterval.top=new FormAttachment(wLogTable,margin);
  fdLogInterval.right=new FormAttachment(100,0);
  wLogInterval.setLayoutData(fdLogInterval);
  wLogInterval.setText(Const.NVL(jobLogTable.getLogInterval(),""));
  Label wlLogTimeout=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogTimeout.setText(BaseMessages.getString(PKG,"JobDialog.LogTimeout.Label"));
  wlLogTimeout.setToolTipText(BaseMessages.getString(PKG,"JobDialog.LogTimeout.Tooltip"));
  props.setLook(wlLogTimeout);
  FormData fdlLogTimeout=new FormData();
  fdlLogTimeout.left=new FormAttachment(0,0);
  fdlLogTimeout.right=new FormAttachment(middle,-margin);
  fdlLogTimeout.top=new FormAttachment(wLogInterval,margin);
  wlLogTimeout.setLayoutData(fdlLogTimeout);
  wLogTimeout=new TextVar(jobMeta,wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wLogTimeout.setToolTipText(BaseMessages.getString(PKG,"JobDialog.LogTimeout.Tooltip"));
  props.setLook(wLogTimeout);
  wLogTimeout.addModifyListener(lsMod);
  FormData fdLogTimeout=new FormData();
  fdLogTimeout.left=new FormAttachment(middle,0);
  fdLogTimeout.top=new FormAttachment(wLogInterval,margin);
  fdLogTimeout.right=new FormAttachment(100,0);
  wLogTimeout.setLayoutData(fdLogTimeout);
  wLogTimeout.setText(Const.NVL(jobLogTable.getTimeoutInDays(),""));
  Label wlLogSizeLimit=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogSizeLimit.setText(BaseMessages.getString(PKG,"JobDialog.LogSizeLimit.Label"));
  wlLogSizeLimit.setToolTipText(BaseMessages.getString(PKG,"JobDialog.LogSizeLimit.Tooltip"));
  props.setLook(wlLogSizeLimit);
  FormData fdlLogSizeLimit=new FormData();
  fdlLogSizeLimit.left=new FormAttachment(0,0);
  fdlLogSizeLimit.right=new FormAttachment(middle,-margin);
  fdlLogSizeLimit.top=new FormAttachment(wLogTimeout,margin);
  wlLogSizeLimit.setLayoutData(fdlLogSizeLimit);
  wLogSizeLimit=new TextVar(jobMeta,wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wLogSizeLimit.setToolTipText(BaseMessages.getString(PKG,"JobDialog.LogSizeLimit.Tooltip"));
  props.setLook(wLogSizeLimit);
  wLogSizeLimit.addModifyListener(lsMod);
  FormData fdLogSizeLimit=new FormData();
  fdLogSizeLimit.left=new FormAttachment(middle,0);
  fdLogSizeLimit.top=new FormAttachment(wLogTimeout,margin);
  fdLogSizeLimit.right=new FormAttachment(100,0);
  wLogSizeLimit.setLayoutData(fdLogSizeLimit);
  wLogSizeLimit.setText(Const.NVL(jobLogTable.getLogSizeLimit(),""));
  Label wlFields=new Label(wLogOptionsComposite,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"JobDialog.TransLogTable.Fields.Label"));
  props.setLook(wlFields);
  FormData fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wLogSizeLimit,margin * 2);
  wlFields.setLayoutData(fdlFields);
  final java.util.List<LogTableField> fields=jobLogTable.getFields();
  final int nrRows=fields.size();
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"JobDialog.TransLogTable.Fields.FieldName"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"JobDialog.TransLogTable.Fields.Description"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  wOptionFields=new TableView(jobMeta,wLogOptionsComposite,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.CHECK,colinf,nrRows,true,lsMod,props);
  wOptionFields.setSortable(false);
  for (int i=0; i < fields.size(); i++) {
    LogTableField field=fields.get(i);
    TableItem item=wOptionFields.table.getItem(i);
    item.setChecked(field.isEnabled());
    item.setText(new String[]{"",Const.NVL(field.getFieldName(),""),Const.NVL(field.getDescription(),"")});
  }
  wOptionFields.table.getColumn(0).setText(BaseMessages.getString(PKG,"JobDialog.TransLogTable.Fields.Enabled"));
  FormData fdOptionFields=new FormData();
  fdOptionFields.left=new FormAttachment(0,0);
  fdOptionFields.top=new FormAttachment(wlFields,margin);
  fdOptionFields.right=new FormAttachment(100,0);
  fdOptionFields.bottom=new FormAttachment(100,0);
  wOptionFields.setLayoutData(fdOptionFields);
  wOptionFields.optWidth(true);
  wOptionFields.layout();
}
