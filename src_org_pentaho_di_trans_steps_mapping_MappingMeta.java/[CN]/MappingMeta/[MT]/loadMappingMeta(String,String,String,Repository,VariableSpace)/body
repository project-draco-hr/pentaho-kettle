{
  TransMeta mappingTransMeta=null;
  String realFilename=space.environmentSubstitute(fileName);
  String realTransname=space.environmentSubstitute(transName);
  if (!Const.isEmpty(realFilename)) {
    try {
      mappingTransMeta=new TransMeta(realFilename,false);
      LogWriter.getInstance().logDetailed("Loading Mapping from repository","Mapping transformation was loaded from XML file [" + realFilename + "]");
    }
 catch (    Exception e) {
      throw new KettleException(BaseMessages.getString(PKG,"MappingMeta.Exception.UnableToLoadMapping"),e);
    }
  }
 else {
    if (!Const.isEmpty(realTransname) && directoryPath != null && rep != null) {
      RepositoryDirectory repdir=rep.loadRepositoryDirectoryTree().findDirectory(directoryPath);
      if (repdir != null) {
        try {
          mappingTransMeta=rep.loadTransformation(realTransname,repdir,null,true);
          LogWriter.getInstance().logDetailed("Loading Mapping from repository","Mapping transformation [" + realTransname + "] was loaded from the repository");
        }
 catch (        Exception e) {
          LogWriter.getInstance().logError("Loading Mapping from repository","Unable to load transformation [" + realTransname + "] : "+ e.toString());
          LogWriter.getInstance().logError("Loading Mapping from repository",Const.getStackTracker(e));
        }
      }
 else {
        throw new KettleException(BaseMessages.getString(PKG,"MappingMeta.Exception.UnableToLoadTransformation",realTransname) + directoryPath);
      }
    }
  }
  return mappingTransMeta;
}
