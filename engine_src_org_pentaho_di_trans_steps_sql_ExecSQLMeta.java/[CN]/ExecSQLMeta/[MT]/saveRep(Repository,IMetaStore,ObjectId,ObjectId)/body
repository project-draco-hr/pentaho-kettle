{
  try {
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    rep.saveStepAttribute(id_transformation,id_step,"sql",sql);
    rep.saveStepAttribute(id_transformation,id_step,"execute_each_row",executedEachInputRow);
    rep.saveStepAttribute(id_transformation,id_step,"single_statement",singleStatement);
    rep.saveStepAttribute(id_transformation,id_step,"replace_variables",replaceVariables);
    rep.saveStepAttribute(id_transformation,id_step,"quoteString",quoteString);
    rep.saveStepAttribute(id_transformation,id_step,"set_params",setParams);
    rep.saveStepAttribute(id_transformation,id_step,"insert_field",insertField);
    rep.saveStepAttribute(id_transformation,id_step,"update_field",updateField);
    rep.saveStepAttribute(id_transformation,id_step,"delete_field",deleteField);
    rep.saveStepAttribute(id_transformation,id_step,"read_field",readField);
    if (databaseMeta != null) {
      rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getObjectId());
    }
    for (int i=0; i < arguments.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"arg_name",arguments[i]);
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"ExecSQLMeta.Exception.UnableToSaveStepInfo") + id_step,e);
  }
}
