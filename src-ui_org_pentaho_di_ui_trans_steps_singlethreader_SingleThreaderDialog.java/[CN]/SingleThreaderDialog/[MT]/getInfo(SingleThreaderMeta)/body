{
  loadTransformation();
  meta.setSpecificationMethod(specificationMethod);
switch (specificationMethod) {
case FILENAME:
    meta.setFileName(wFilename.getText());
  meta.setDirectoryPath(null);
meta.setTransName(null);
meta.setTransObjectId(null);
break;
case REPOSITORY_BY_NAME:
meta.setDirectoryPath(wDirectory.getText());
meta.setTransName(wTransname.getText());
meta.setFileName(null);
meta.setTransObjectId(null);
break;
case REPOSITORY_BY_REFERENCE:
meta.setFileName(null);
meta.setDirectoryPath(null);
meta.setTransName(null);
meta.setTransObjectId(referenceObjectId);
break;
}
meta.setBatchSize(wBatchSize.getText());
meta.setBatchTime(wBatchTime.getText());
meta.setInjectStep(wInjectStep.getText());
meta.setRetrieveStep(wRetrieveStep.getText());
int nritems=wParameters.nrNonEmpty();
int nr=0;
for (int i=0; i < nritems; i++) {
String param=wParameters.getNonEmpty(i).getText(1);
if (param != null && param.length() != 0) {
nr++;
}
}
meta.setParameters(new String[nr]);
meta.setParameterFieldNames(new String[nr]);
meta.setParameterValues(new String[nr]);
nr=0;
for (int i=0; i < nritems; i++) {
String param=wParameters.getNonEmpty(i).getText(1);
String fieldName=wParameters.getNonEmpty(i).getText(2);
String value=wParameters.getNonEmpty(i).getText(3);
meta.getParameters()[nr]=param;
if (!Const.isEmpty(Const.trim(fieldName))) {
meta.getParameterFieldNames()[nr]=fieldName;
}
 else {
meta.getParameterFieldNames()[nr]="";
}
if (!Const.isEmpty(Const.trim(value))) {
meta.getParameterValues()[nr]=value;
}
 else {
meta.getParameterValues()[nr]="";
}
nr++;
}
meta.setPassingAllParameters(wPassParams.getSelection());
meta.setPassingParametersEachBatch(wPassEachBatch.getSelection());
}
