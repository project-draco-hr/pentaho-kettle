{
  meta=(SocketWriterMeta)smi;
  data=(SocketWriterData)sdi;
  try {
    if (first) {
      int bufferSize=Const.toInt(environmentSubstitute(meta.getBufferSize()),1000);
      data.clientSocket=data.serverSocket.accept();
      if (meta.isCompressed()) {
        data.outputStream=new DataOutputStream(new BufferedOutputStream(new GZIPOutputStream(data.clientSocket.getOutputStream()),bufferSize));
      }
 else {
        data.outputStream=new DataOutputStream(new BufferedOutputStream(data.clientSocket.getOutputStream(),bufferSize));
      }
      data.flushInterval=Const.toInt(environmentSubstitute(meta.getFlushInterval()),4000);
    }
  }
 catch (  Exception e) {
    logError("Error accepting from socket : " + e.toString());
    logError("Stack trace: " + Const.CR + Const.getStackTracker(e));
    setErrors(1);
    stopAll();
    setOutputDone();
    if (data.clientSocket != null) {
      try {
        data.clientSocket.shutdownInput();
        data.clientSocket.shutdownOutput();
        data.clientSocket.close();
        logError("Closed connection to SocketWriter");
      }
 catch (      IOException e1) {
        logError("Failed to close connection to SocketWriter");
      }
    }
    return false;
  }
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  try {
    if (first) {
      getInputRowMeta().writeMeta(data.outputStream);
      first=false;
    }
    getInputRowMeta().writeData(data.outputStream,r);
    incrementLinesOutput();
    if (getLinesOutput() > 0 && data.flushInterval > 0 && (getLinesOutput() % data.flushInterval) == 0)     data.outputStream.flush();
  }
 catch (  Exception e) {
    logError("Error writing to socket : " + e.toString());
    logError("Failing row : " + getInputRowMeta().getString(r));
    logError("Stack trace: " + Const.CR + Const.getStackTracker(e));
    setErrors(1);
    stopAll();
    setOutputDone();
    return false;
  }
  if (checkFeedback(getLinesRead()))   logBasic(BaseMessages.getString(PKG,"SocketWriter.Log.LineNumber") + getLinesRead());
  return true;
}
