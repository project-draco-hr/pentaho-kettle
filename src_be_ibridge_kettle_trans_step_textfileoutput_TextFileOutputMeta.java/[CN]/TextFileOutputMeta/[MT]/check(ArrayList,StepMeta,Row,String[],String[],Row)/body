{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is connected to previous one, receiving " + prev.size() + " fields",stepinfo);
    remarks.add(cr);
    String error_message="";
    boolean error_found=false;
    for (int i=0; i < outputFields.length; i++) {
      int idx=prev.searchValueIndex(outputFields[i].getName());
      if (idx < 0) {
        error_message+="\t\t" + outputFields[i].getName() + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message="Fields that were not found in input stream:" + Const.CR + Const.CR+ error_message;
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"All output fields are found in the input stream.",stepinfo);
      remarks.add(cr);
    }
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is receiving info from other steps.",stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No input received from other steps!",stepinfo);
    remarks.add(cr);
  }
  cr=new CheckResult(CheckResult.TYPE_RESULT_COMMENT,"File specifications are not checked.",stepinfo);
  remarks.add(cr);
}
