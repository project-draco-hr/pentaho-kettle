{
  try {
    rep.saveJobEntryAttribute(id_job,getObjectId(),"servername",serverName);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"username",userName);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"password",password);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"serverport",serverPort);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"ftpdirectory",ftpDirectory);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"localdirectory",localDirectory);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"wildcard",wildcard);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"only_new",onlyGettingNewFiles);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"usehttpproxy",usehttpproxy);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"httpproxyhost",httpProxyHost);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"httpproxyport",httpproxyport);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"httpproxyusername",httpproxyusername);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"httpproxypassword",httpProxyPassword);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"publicpublickey",publicpublickey);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"keyfilename",keyFilename);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"keyfilepass",keyFilePass);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"usebasicauthentication",useBasicAuthentication);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"afterftpput",afterFtpPut);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"destinationfolder",destinationfolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"createdestinationfolder",createdestinationfolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"cachehostkey",cachehostkey);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"timeout",timeout);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"createtargetfolder",createtargetfolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"includeSubFolders",includeSubFolders);
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobSSH2GET.Log.UnableSaveRep","" + id_job,dbe.getMessage()));
  }
}
