{
  try {
    super.loadRep(rep,id_jobentry,databases,slaveServers);
    serverName=rep.getJobEntryAttributeString(id_jobentry,"servername");
    userName=rep.getJobEntryAttributeString(id_jobentry,"username");
    password=rep.getJobEntryAttributeString(id_jobentry,"password");
    serverPort=rep.getJobEntryAttributeString(id_jobentry,"serverport");
    ftpDirectory=rep.getJobEntryAttributeString(id_jobentry,"ftpdirectory");
    localDirectory=rep.getJobEntryAttributeString(id_jobentry,"localdirectory");
    wildcard=rep.getJobEntryAttributeString(id_jobentry,"wildcard");
    onlyGettingNewFiles=rep.getJobEntryAttributeBoolean(id_jobentry,"only_new");
    usehttpproxy=rep.getJobEntryAttributeBoolean(id_jobentry,"usehttpproxy");
    httpproxyhost=rep.getJobEntryAttributeString(id_jobentry,"httpproxyhost");
    httpproxyusername=rep.getJobEntryAttributeString(id_jobentry,"httpproxyusername");
    httpproxypassword=rep.getJobEntryAttributeString(id_jobentry,"httpproxypassword");
    publicpublickey=rep.getJobEntryAttributeBoolean(id_jobentry,"publicpublickey");
    keyfilename=rep.getJobEntryAttributeString(id_jobentry,"keyfilename");
    keyfilepass=rep.getJobEntryAttributeString(id_jobentry,"keyfilepass");
    usebasicauthentication=rep.getJobEntryAttributeBoolean(id_jobentry,"usebasicauthentication");
    afterftpput=rep.getJobEntryAttributeString(id_jobentry,"afterftpput");
    destinationfolder=rep.getJobEntryAttributeString(id_jobentry,"destinationfolder");
    createdestinationfolder=rep.getJobEntryAttributeBoolean(id_jobentry,"createdestinationfolder");
    cachehostkey=rep.getJobEntryAttributeBoolean(id_jobentry,"cachehostkey");
    timeout=(int)rep.getJobEntryAttributeInteger(id_jobentry,"timeout");
    createtargetfolder=rep.getJobEntryAttributeBoolean(id_jobentry,"createtargetfolder");
    includeSubFolders=rep.getJobEntryAttributeBoolean(id_jobentry,"includeSubFolders");
  }
 catch (  KettleException dbe) {
    throw new KettleException(Messages.getString("JobSSH2GET.Log.UnableLoadRep","" + id_jobentry,dbe.getMessage()));
  }
}
