{
  TransExecutorMeta transExecutorMeta=spy(new TransExecutorMeta());
  transExecutorMeta.setFileName("/path/to/Transformation2.ktr");
  transExecutorMeta.setSpecificationMethod(ObjectLocationSpecificationMethod.FILENAME);
  StepMeta transExecutorStep=mock(StepMeta.class);
  when(transExecutorStep.getStepID()).thenReturn("TransExecutor");
  when(transExecutorStep.getStepMetaInterface()).thenReturn(transExecutorMeta);
  TransMeta parent=mock(TransMeta.class);
  when(parent.getSteps()).thenReturn(Arrays.asList(transExecutorStep));
  TransMeta result=transFileListener.processLinkedTrans(parent);
  boolean found=false;
  for (  StepMeta stepMeta : result.getSteps()) {
    if (stepMeta.getStepID().equalsIgnoreCase("TransExecutor")) {
      found=true;
      TransExecutorMeta resultExecMeta=(TransExecutorMeta)stepMeta.getStepMetaInterface();
      assertEquals(ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME,resultExecMeta.getSpecificationMethod());
      assertEquals(resultExecMeta.getDirectoryPath(),"/path/to");
      assertEquals(resultExecMeta.getTransName(),"Transformation2");
    }
  }
  assertTrue(found);
}
