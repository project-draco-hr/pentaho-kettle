{
  in.setUpdate(wUpdate.getSelection());
  int nrkeys=wKey.nrNonEmpty();
  int nrfields=wUpIns.nrNonEmpty();
  in.allocate(nrkeys,nrfields);
  log.logDebug(toString(),Messages.getString("DimensionLookupDialog.Log.FoundKeys",String.valueOf(nrkeys)));
  for (int i=0; i < nrkeys; i++) {
    TableItem item=wKey.getNonEmpty(i);
    in.getKeyLookup()[i]=item.getText(1);
    in.getKeyStream()[i]=item.getText(2);
  }
  if (log.isDebug())   log.logDebug(toString(),Messages.getString("DimensionLookupDialog.Log.FoundFields",String.valueOf(nrfields)));
  for (int i=0; i < nrfields; i++) {
    TableItem item=wUpIns.getNonEmpty(i);
    in.getFieldLookup()[i]=item.getText(1);
    in.getFieldStream()[i]=item.getText(2);
    in.getFieldUpdate()[i]=DimensionLookupMeta.getUpdateType(in.isUpdate(),item.getText(3));
  }
  in.setSchemaName(wSchema.getText());
  in.setTableName(wTable.getText());
  in.setKeyField(wTk.getText());
  in.setKeyRename(wTkRename.getText());
  if (wAutoinc.getSelection() == true) {
    in.setTechKeyCreation(DimensionLookupMeta.CREATION_METHOD_AUTOINC);
    in.setAutoIncrement(true);
    in.setSequenceName(null);
  }
 else   if (wSeqButton.getSelection() == true) {
    in.setTechKeyCreation(DimensionLookupMeta.CREATION_METHOD_SEQUENCE);
    in.setAutoIncrement(false);
    in.setSequenceName(wSeq.getText());
  }
 else {
    in.setTechKeyCreation(DimensionLookupMeta.CREATION_METHOD_TABLEMAX);
    in.setAutoIncrement(false);
    in.setSequenceName(null);
  }
  in.setAutoIncrement(wAutoinc.getSelection());
  if (in.getKeyRename() != null && in.getKeyRename().equalsIgnoreCase(in.getKeyField()))   in.setKeyRename(null);
  in.setVersionField(wVersion.getText());
  in.setDatabaseMeta(transMeta.findDatabase(wConnection.getText()));
  in.setDateField(wDatefield.getText());
  in.setDateFrom(wFromdate.getText());
  in.setDateTo(wTodate.getText());
  in.setCommitSize(Const.toInt(wCommit.getText(),0));
  if (wUseCache.getSelection()) {
    in.setCacheSize(Const.toInt(wCacheSize.getText(),-1));
  }
 else {
    in.setCacheSize(-1);
  }
  in.setPreloadingCache(wPreloadCache.getSelection());
  if (wPreloadCache.getSelection())   in.setCacheSize(0);
  in.setMinYear(Const.toInt(wMinyear.getText(),Const.MIN_YEAR));
  in.setMaxYear(Const.toInt(wMaxyear.getText(),Const.MAX_YEAR));
  in.setUsingStartDateAlternative(wUseAltStartDate.getSelection());
  in.setStartDateAlternative(DimensionLookupMeta.getStartDateAlternative(wAltStartDate.getText()));
  in.setStartDateFieldName(wAltStartDateField.getText());
}
