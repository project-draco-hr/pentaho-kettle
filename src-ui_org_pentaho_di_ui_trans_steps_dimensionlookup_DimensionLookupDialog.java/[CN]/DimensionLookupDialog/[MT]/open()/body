{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  ModifyListener lsConnectionMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  ModifyListener lsTableMod=new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  SelectionListener lsSelection=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  backupChanged=input.hasChanged();
  backupUpdate=input.isUpdate();
  backupAutoInc=input.isAutoIncrement();
  ci=input.getDatabaseMeta();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlUpdate=new Label(shell,SWT.RIGHT);
  wlUpdate.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Update.Label"));
  props.setLook(wlUpdate);
  FormData fdlUpdate=new FormData();
  fdlUpdate.left=new FormAttachment(0,0);
  fdlUpdate.right=new FormAttachment(middle,-margin);
  fdlUpdate.top=new FormAttachment(wStepname,margin);
  wlUpdate.setLayoutData(fdlUpdate);
  wUpdate=new Button(shell,SWT.CHECK);
  props.setLook(wUpdate);
  FormData fdUpdate=new FormData();
  fdUpdate.left=new FormAttachment(middle,0);
  fdUpdate.top=new FormAttachment(wStepname,margin);
  fdUpdate.right=new FormAttachment(100,0);
  wUpdate.setLayoutData(fdUpdate);
  wUpdate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setUpdate(!input.isUpdate());
      input.setChanged();
      setFlags();
    }
  }
);
  wConnection=addConnectionLine(shell,wUpdate,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsConnectionMod);
  wConnection.addSelectionListener(lsSelection);
  wConnection.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      ci=transMeta.findDatabase(wConnection.getText());
      setFlags();
    }
  }
);
  wlSchema=new Label(shell,SWT.RIGHT);
  wlSchema.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  FormData fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin);
  wlSchema.setLayoutData(fdlSchema);
  wbSchema=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSchema);
  wbSchema.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbSchema=new FormData();
  fdbSchema.top=new FormAttachment(wConnection,margin);
  fdbSchema.right=new FormAttachment(100,0);
  wbSchema.setLayoutData(fdbSchema);
  wSchema=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsTableMod);
  FormData fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin);
  fdSchema.right=new FormAttachment(wbSchema,-margin);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.TargeTable.Label"));
  props.setLook(wlTable);
  FormData fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wbSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Browse.Button"));
  FormData fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wbSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsTableMod);
  FormData fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wbSchema,margin);
  fdTable.right=new FormAttachment(wbTable,0);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Commit.Label"));
  props.setLook(wlCommit);
  FormData fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.right=new FormAttachment(middle,-margin);
  fdlCommit.top=new FormAttachment(wTable,margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  FormData fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlUseCache=new Label(shell,SWT.RIGHT);
  wlUseCache.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.UseCache.Label"));
  props.setLook(wlUseCache);
  FormData fdlUseCache=new FormData();
  fdlUseCache.left=new FormAttachment(0,0);
  fdlUseCache.right=new FormAttachment(middle,-margin);
  fdlUseCache.top=new FormAttachment(wCommit,margin);
  wlUseCache.setLayoutData(fdlUseCache);
  wUseCache=new Button(shell,SWT.CHECK);
  props.setLook(wUseCache);
  wUseCache.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  FormData fdUseCache=new FormData();
  fdUseCache.left=new FormAttachment(middle,0);
  fdUseCache.top=new FormAttachment(wCommit,margin);
  fdUseCache.right=new FormAttachment(100,0);
  wUseCache.setLayoutData(fdUseCache);
  wlPreloadCache=new Label(shell,SWT.RIGHT);
  wlPreloadCache.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.PreloadCache.Label"));
  props.setLook(wlPreloadCache);
  FormData fdlPreloadCache=new FormData();
  fdlPreloadCache.left=new FormAttachment(0,0);
  fdlPreloadCache.right=new FormAttachment(middle,-margin);
  fdlPreloadCache.top=new FormAttachment(wUseCache,margin);
  wlPreloadCache.setLayoutData(fdlPreloadCache);
  wPreloadCache=new Button(shell,SWT.CHECK);
  props.setLook(wPreloadCache);
  wPreloadCache.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  FormData fdPreloadCache=new FormData();
  fdPreloadCache.left=new FormAttachment(middle,0);
  fdPreloadCache.top=new FormAttachment(wUseCache,margin);
  fdPreloadCache.right=new FormAttachment(100,0);
  wPreloadCache.setLayoutData(fdPreloadCache);
  wlCacheSize=new Label(shell,SWT.RIGHT);
  wlCacheSize.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.CacheSize.Label"));
  props.setLook(wlCacheSize);
  FormData fdlCacheSize=new FormData();
  fdlCacheSize.left=new FormAttachment(0,0);
  fdlCacheSize.right=new FormAttachment(middle,-margin);
  fdlCacheSize.top=new FormAttachment(wPreloadCache,margin);
  wlCacheSize.setLayoutData(fdlCacheSize);
  wCacheSize=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCacheSize);
  wCacheSize.addModifyListener(lsMod);
  FormData fdCacheSize=new FormData();
  fdCacheSize.left=new FormAttachment(middle,0);
  fdCacheSize.top=new FormAttachment(wPreloadCache,margin);
  fdCacheSize.right=new FormAttachment(100,0);
  wCacheSize.setLayoutData(fdCacheSize);
  wlTkRename=new Label(shell,SWT.RIGHT);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wKeyTab=new CTabItem(wTabFolder,SWT.NONE);
  wKeyTab.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.KeyTab.CTabItem"));
  FormLayout keyLayout=new FormLayout();
  keyLayout.marginWidth=3;
  keyLayout.marginHeight=3;
  Composite wKeyComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wKeyComp);
  wKeyComp.setLayout(keyLayout);
  wlKey=new Label(wKeyComp,SWT.NONE);
  wlKey.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.KeyFields.Label"));
  props.setLook(wlKey);
  FormData fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(0,margin);
  fdlKey.right=new FormAttachment(100,0);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=2;
  int nrKeyRows=(input.getKeyStream() != null ? input.getKeyStream().length : 1);
  ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo(BaseMessages.getString(PKG,"DimensionLookupDialog.ColumnInfo.DimensionField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[1]=new ColumnInfo(BaseMessages.getString(PKG,"DimensionLookupDialog.ColumnInfo.FieldInStream"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  tableFieldColumns.add(ciKey[0]);
  wKey=new TableView(transMeta,wKeyComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  FormData fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(100,0);
  fdKey.bottom=new FormAttachment(100,0);
  wKey.setLayoutData(fdKey);
  fdKeyComp=new FormData();
  fdKeyComp.left=new FormAttachment(0,0);
  fdKeyComp.top=new FormAttachment(0,0);
  fdKeyComp.right=new FormAttachment(100,0);
  fdKeyComp.bottom=new FormAttachment(100,0);
  wKeyComp.setLayoutData(fdKeyComp);
  wKeyComp.layout();
  wKeyTab.setControl(wKeyComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.FieldsTab.CTabItem.Title"));
  Composite wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFieldsComp);
  FormLayout fieldsCompLayout=new FormLayout();
  fieldsCompLayout.marginWidth=Const.FORM_MARGIN;
  fieldsCompLayout.marginHeight=Const.FORM_MARGIN;
  wFieldsComp.setLayout(fieldsCompLayout);
  wlUpIns=new Label(wFieldsComp,SWT.NONE);
  wlUpIns.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.UpdateOrInsertFields.Label"));
  props.setLook(wlUpIns);
  FormData fdlUpIns=new FormData();
  fdlUpIns.left=new FormAttachment(0,0);
  fdlUpIns.top=new FormAttachment(0,margin);
  wlUpIns.setLayoutData(fdlUpIns);
  int UpInsCols=3;
  int UpInsRows=(input.getFieldStream() != null ? input.getFieldStream().length : 1);
  ciUpIns=new ColumnInfo[UpInsCols];
  ciUpIns[0]=new ColumnInfo(BaseMessages.getString(PKG,"DimensionLookupDialog.ColumnInfo.DimensionField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciUpIns[1]=new ColumnInfo(BaseMessages.getString(PKG,"DimensionLookupDialog.ColumnInfo.StreamField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciUpIns[2]=new ColumnInfo(BaseMessages.getString(PKG,"DimensionLookupDialog.ColumnInfo.TypeOfDimensionUpdate"),ColumnInfo.COLUMN_TYPE_CCOMBO,input.isUpdate() ? DimensionLookupMeta.typeDesc : DimensionLookupMeta.typeDescLookup);
  tableFieldColumns.add(ciUpIns[0]);
  wUpIns=new TableView(transMeta,wFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciUpIns,UpInsRows,lsMod,props);
  FormData fdUpIns=new FormData();
  fdUpIns.left=new FormAttachment(0,0);
  fdUpIns.top=new FormAttachment(wlUpIns,margin);
  fdUpIns.right=new FormAttachment(100,0);
  fdUpIns.bottom=new FormAttachment(100,0);
  wUpIns.setLayoutData(fdUpIns);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wCacheSize,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(wlTkRename,-2 * margin);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.GetFields.Button"));
  wCreate=new Button(shell,SWT.PUSH);
  wCreate.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wGet,wCreate},margin,null);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCreate=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCreate.addListener(SWT.Selection,lsCreate);
  wCancel.addListener(SWT.Selection,lsCancel);
  wlTodate=new Label(shell,SWT.RIGHT);
  wlTodate.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Todate.Label"));
  props.setLook(wlTodate);
  FormData fdlTodate=new FormData();
  fdlTodate.left=new FormAttachment(0,0);
  fdlTodate.right=new FormAttachment(middle,-margin);
  fdlTodate.bottom=new FormAttachment(wOK,-2 * margin);
  wlTodate.setLayoutData(fdlTodate);
  wTodate=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTodate);
  wTodate.addModifyListener(lsMod);
  FormData fdTodate=new FormData();
  fdTodate.left=new FormAttachment(middle,0);
  fdTodate.right=new FormAttachment(middle + (100 - middle) / 3,-margin);
  fdTodate.bottom=new FormAttachment(wOK,-2 * margin);
  wTodate.setLayoutData(fdTodate);
  wTodate.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFieldsFromTable();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlMaxyear=new Label(shell,SWT.RIGHT);
  wlMaxyear.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Maxyear.Label"));
  props.setLook(wlMaxyear);
  FormData fdlMaxyear=new FormData();
  fdlMaxyear.left=new FormAttachment(wTodate,margin);
  fdlMaxyear.right=new FormAttachment(middle + 2 * (100 - middle) / 3,-margin);
  fdlMaxyear.bottom=new FormAttachment(wOK,-2 * margin);
  wlMaxyear.setLayoutData(fdlMaxyear);
  wMaxyear=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMaxyear);
  wMaxyear.addModifyListener(lsMod);
  FormData fdMaxyear=new FormData();
  fdMaxyear.left=new FormAttachment(wlMaxyear,margin);
  fdMaxyear.right=new FormAttachment(100,0);
  fdMaxyear.bottom=new FormAttachment(wOK,-2 * margin);
  wMaxyear.setLayoutData(fdMaxyear);
  wMaxyear.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.Maxyear.ToolTip"));
  wlUseAltStartDate=new Label(shell,SWT.RIGHT);
  wlUseAltStartDate.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.UseAlternativeStartDate.Label"));
  props.setLook(wlUseAltStartDate);
  FormData fdlUseAltStartDate=new FormData();
  fdlUseAltStartDate.left=new FormAttachment(0,0);
  fdlUseAltStartDate.right=new FormAttachment(middle,-margin);
  fdlUseAltStartDate.bottom=new FormAttachment(wTodate,-2 * margin);
  wlUseAltStartDate.setLayoutData(fdlUseAltStartDate);
  wUseAltStartDate=new Button(shell,SWT.CHECK);
  props.setLook(wUseAltStartDate);
  wUseAltStartDate.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.UseAlternativeStartDate.Tooltip",Const.CR));
  FormData fdUseAltStartDate=new FormData();
  fdUseAltStartDate.left=new FormAttachment(middle,0);
  fdUseAltStartDate.bottom=new FormAttachment(wTodate,-2 * margin);
  wUseAltStartDate.setLayoutData(fdUseAltStartDate);
  wUseAltStartDate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setFlags();
    }
  }
);
  wAltStartDate=new CCombo(shell,SWT.BORDER);
  props.setLook(wAltStartDate);
  wAltStartDate.removeAll();
  for (int i=1; i < DimensionLookupMeta.getStartDateAlternativeDescriptions().length; i++) {
    wAltStartDate.add(DimensionLookupMeta.getStartDateAlternativeDescriptions()[i]);
  }
  wAltStartDate.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.AlternativeStartDate.SelectItemDefault"));
  wAltStartDate.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.AlternativeStartDate.Tooltip",Const.CR));
  FormData fdAltStartDate=new FormData();
  fdAltStartDate.left=new FormAttachment(wUseAltStartDate,2 * margin);
  fdAltStartDate.right=new FormAttachment(wUseAltStartDate,200);
  fdAltStartDate.bottom=new FormAttachment(wTodate,-2 * margin);
  wAltStartDate.setLayoutData(fdAltStartDate);
  wAltStartDate.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setFlags();
    }
  }
);
  wAltStartDateField=new CCombo(shell,SWT.SINGLE | SWT.BORDER);
  props.setLook(wAltStartDateField);
  wAltStartDateField.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.AlternativeStartDateField.Tooltip",Const.CR));
  FormData fdAltStartDateField=new FormData();
  fdAltStartDateField.left=new FormAttachment(wAltStartDate,2 * margin);
  fdAltStartDateField.right=new FormAttachment(100,0);
  fdAltStartDateField.bottom=new FormAttachment(wTodate,-2 * margin);
  wAltStartDateField.setLayoutData(fdAltStartDateField);
  wAltStartDateField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFieldsFromTable();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlFromdate=new Label(shell,SWT.RIGHT);
  wlFromdate.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Fromdate.Label"));
  props.setLook(wlFromdate);
  FormData fdlFromdate=new FormData();
  fdlFromdate.left=new FormAttachment(0,0);
  fdlFromdate.right=new FormAttachment(middle,-margin);
  fdlFromdate.bottom=new FormAttachment(wAltStartDate,-margin);
  wlFromdate.setLayoutData(fdlFromdate);
  wFromdate=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFromdate);
  wFromdate.addModifyListener(lsMod);
  FormData fdFromdate=new FormData();
  fdFromdate.left=new FormAttachment(middle,0);
  fdFromdate.right=new FormAttachment(middle + (100 - middle) / 3,-margin);
  fdFromdate.bottom=new FormAttachment(wAltStartDate,-margin);
  wFromdate.setLayoutData(fdFromdate);
  wFromdate.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFieldsFromTable();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlMinyear=new Label(shell,SWT.RIGHT);
  wlMinyear.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Minyear.Label"));
  props.setLook(wlMinyear);
  FormData fdlMinyear=new FormData();
  fdlMinyear.left=new FormAttachment(wFromdate,margin);
  fdlMinyear.right=new FormAttachment(middle + 2 * (100 - middle) / 3,-margin);
  fdlMinyear.bottom=new FormAttachment(wAltStartDate,-margin);
  wlMinyear.setLayoutData(fdlMinyear);
  wMinyear=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMinyear);
  wMinyear.addModifyListener(lsMod);
  FormData fdMinyear=new FormData();
  fdMinyear.left=new FormAttachment(wlMinyear,margin);
  fdMinyear.right=new FormAttachment(100,0);
  fdMinyear.bottom=new FormAttachment(wAltStartDate,-margin);
  wMinyear.setLayoutData(fdMinyear);
  wMinyear.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.Minyear.ToolTip"));
  wlDatefield=new Label(shell,SWT.RIGHT);
  wlDatefield.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Datefield.Label"));
  props.setLook(wlDatefield);
  FormData fdlDatefield=new FormData();
  fdlDatefield.left=new FormAttachment(0,0);
  fdlDatefield.right=new FormAttachment(middle,-margin);
  fdlDatefield.bottom=new FormAttachment(wMinyear,-margin);
  wlDatefield.setLayoutData(fdlDatefield);
  wDatefield=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDatefield);
  wDatefield.addModifyListener(lsMod);
  FormData fdDatefield=new FormData();
  fdDatefield.left=new FormAttachment(middle,0);
  fdDatefield.bottom=new FormAttachment(wMinyear,-margin);
  fdDatefield.right=new FormAttachment(100,0);
  wDatefield.setLayoutData(fdDatefield);
  wDatefield.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlVersion=new Label(shell,SWT.RIGHT);
  wlVersion.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Version.Label"));
  props.setLook(wlVersion);
  FormData fdlVersion=new FormData();
  fdlVersion.left=new FormAttachment(0,0);
  fdlVersion.right=new FormAttachment(middle,-margin);
  fdlVersion.bottom=new FormAttachment(wDatefield,-margin);
  wlVersion.setLayoutData(fdlVersion);
  wVersion=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wVersion);
  wVersion.addModifyListener(lsMod);
  FormData fdVersion=new FormData();
  fdVersion.left=new FormAttachment(middle,0);
  fdVersion.bottom=new FormAttachment(wDatefield,-margin);
  fdVersion.right=new FormAttachment(100,0);
  wVersion.setLayoutData(fdVersion);
  wVersion.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFieldsFromTable();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  gTechGroup=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gTechGroup.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.TechGroup.Label"));
  GridLayout gridLayout=new GridLayout(3,false);
  gTechGroup.setLayout(gridLayout);
  FormData fdTechGroup=new FormData();
  fdTechGroup.left=new FormAttachment(middle,0);
  fdTechGroup.bottom=new FormAttachment(wVersion,-margin);
  fdTechGroup.right=new FormAttachment(100,0);
  gTechGroup.setBackground(shell.getBackground());
  gTechGroup.setLayoutData(fdTechGroup);
  wTableMax=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wTableMax);
  wTableMax.setSelection(false);
  GridData gdTableMax=new GridData();
  wTableMax.setLayoutData(gdTableMax);
  wTableMax.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.TableMaximum.Tooltip",Const.CR));
  wlTableMax=new Label(gTechGroup,SWT.LEFT);
  wlTableMax.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.TableMaximum.Label"));
  props.setLook(wlTableMax);
  GridData gdlTableMax=new GridData(GridData.FILL_BOTH);
  gdlTableMax.horizontalSpan=2;
  gdlTableMax.verticalSpan=1;
  wlTableMax.setLayoutData(gdlTableMax);
  wSeqButton=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wSeqButton);
  wSeqButton.setSelection(false);
  GridData gdSeqButton=new GridData();
  wSeqButton.setLayoutData(gdSeqButton);
  wSeqButton.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.Sequence.Tooltip",Const.CR));
  wlSeqButton=new Label(gTechGroup,SWT.LEFT);
  wlSeqButton.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Sequence.Label"));
  props.setLook(wlSeqButton);
  GridData gdlSeqButton=new GridData();
  wlSeqButton.setLayoutData(gdlSeqButton);
  wSeq=new Text(gTechGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSeq);
  wSeq.addModifyListener(lsMod);
  GridData gdSeq=new GridData(GridData.FILL_HORIZONTAL);
  wSeq.setLayoutData(gdSeq);
  wSeq.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent arg0){
      input.setTechKeyCreation(DimensionLookupMeta.CREATION_METHOD_SEQUENCE);
      wSeqButton.setSelection(true);
      wAutoinc.setSelection(false);
      wTableMax.setSelection(false);
    }
    public void focusLost(    FocusEvent arg0){
    }
  }
);
  wAutoinc=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wAutoinc);
  wAutoinc.setSelection(false);
  GridData gdAutoinc=new GridData();
  wAutoinc.setLayoutData(gdAutoinc);
  wAutoinc.setToolTipText(BaseMessages.getString(PKG,"DimensionLookupDialog.AutoincButton.Tooltip",Const.CR));
  wlAutoinc=new Label(gTechGroup,SWT.LEFT);
  wlAutoinc.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.Autoincrement.Label"));
  props.setLook(wlAutoinc);
  GridData gdlAutoinc=new GridData();
  wlAutoinc.setLayoutData(gdlAutoinc);
  setTableMax();
  setSequence();
  setAutoincUse();
  wlTk=new Label(shell,SWT.RIGHT);
  wlTk.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.TechnicalKeyField.Label"));
  props.setLook(wlTk);
  FormData fdlTk=new FormData();
  fdlTk.left=new FormAttachment(0,0);
  fdlTk.right=new FormAttachment(middle,-margin);
  fdlTk.bottom=new FormAttachment(gTechGroup,-margin);
  wlTk.setLayoutData(fdlTk);
  wTk=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTk);
  wTk.addModifyListener(lsMod);
  FormData fdTk=new FormData();
  fdTk.left=new FormAttachment(middle,0);
  fdTk.bottom=new FormAttachment(gTechGroup,-margin);
  fdTk.right=new FormAttachment(50 + middle / 2,0);
  wTk.setLayoutData(fdTk);
  wTk.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFieldsFromTable();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlTkRename.setText(BaseMessages.getString(PKG,"DimensionLookupDialog.NewName.Label"));
  props.setLook(wlTkRename);
  FormData fdlTkRename=new FormData();
  fdlTkRename.left=new FormAttachment(50 + middle / 2,margin);
  fdlTkRename.bottom=new FormAttachment(gTechGroup,-margin);
  wlTkRename.setLayoutData(fdlTkRename);
  wTkRename=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTkRename);
  wTkRename.addModifyListener(lsMod);
  FormData fdTkRename=new FormData();
  fdTkRename.left=new FormAttachment(wlTkRename,margin);
  fdTkRename.bottom=new FormAttachment(gTechGroup,-margin);
  fdTkRename.right=new FormAttachment(100,0);
  wTkRename.setLayoutData(fdTkRename);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wCommit.addSelectionListener(lsDef);
  wCacheSize.addSelectionListener(lsDef);
  wTk.addSelectionListener(lsDef);
  wTkRename.addSelectionListener(lsDef);
  wSeq.addSelectionListener(lsDef);
  wVersion.addSelectionListener(lsDef);
  wDatefield.addSelectionListener(lsDef);
  wFromdate.addSelectionListener(lsDef);
  wMinyear.addSelectionListener(lsDef);
  wTodate.addSelectionListener(lsDef);
  wMaxyear.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbSchema.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getSchemaNames();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  setTableFieldCombo();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
