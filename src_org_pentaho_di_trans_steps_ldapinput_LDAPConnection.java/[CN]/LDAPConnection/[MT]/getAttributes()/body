{
  byte[] cookie=null;
  while (!getSearchResult().hasMoreElements()) {
    if (isPagingUsed()) {
      try {
        Control[] rc=getInitialContext().getResponseControls();
        if (rc != null) {
          for (int i=0; i < rc.length; i++) {
            if (rc[i] instanceof PagedResultsResponseControl) {
              PagedResultsResponseControl prc=(PagedResultsResponseControl)rc[i];
              cookie=prc.getCookie();
            }
          }
        }
        if (isSortingAttributes()) {
          getInitialContext().setRequestControls(new Control[]{new SortControl(getSortingAttributesKeys(),Control.NONCRITICAL),new PagedResultsControl(GetPagingSize(),cookie,Control.CRITICAL)});
        }
 else {
          getInitialContext().setRequestControls(new Control[]{new PagedResultsControl(GetPagingSize(),cookie,Control.CRITICAL)});
        }
        if ((cookie != null) && (cookie.length != 0)) {
          this.results=getInitialContext().search(getSearchBase(),getFilter(),getSearchControls());
        }
 else {
          return null;
        }
      }
 catch (      Exception e) {
        throw new KettleException(BaseMessages.getString(PKG,"LDAPInput.Exception.ErrorPaging"),e);
      }
      while (!getSearchResult().hasMoreElements()) {
        return null;
      }
    }
 else {
      return null;
    }
  }
  try {
    SearchResult searchResult=(SearchResult)getSearchResult().next();
    return searchResult.getAttributes();
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"LDAPConnection.Exception.GettingAttributes"),e);
  }
}
