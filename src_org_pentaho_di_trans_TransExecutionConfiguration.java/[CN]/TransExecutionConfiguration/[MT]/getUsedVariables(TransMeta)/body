{
  Properties sp=new Properties();
  VariableSpace space=Variables.getADefaultVariableSpace();
  String keys[]=space.listVariables();
  for (int i=0; i < keys.length; i++) {
    sp.put(keys[i],space.getVariable(keys[i]));
  }
  List<String> vars=transMeta.getUsedVariables();
  if (vars != null && vars.size() > 0) {
    RowMetaInterface rowMeta=new RowMeta();
    List<String> data=new ArrayList<String>();
    for (int i=0; i < vars.size(); i++) {
      String varname=(String)vars.get(i);
      if (!varname.startsWith(Const.INTERNAL_VARIABLE_PREFIX)) {
        ValueMetaInterface varval=new ValueMeta(varname,ValueMetaInterface.TYPE_STRING);
        rowMeta.addValueMeta(varval);
        data.add(sp.getProperty(varname,""));
      }
    }
    variables=new RowMetaAndData(rowMeta,data.toArray(new String[data.size()]));
  }
}
