{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JavaFilterDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  Label wlTrueTo=new Label(shell,SWT.RIGHT);
  wlTrueTo.setText(BaseMessages.getString(PKG,"JavaFilterDialog.SendTrueTo.Label"));
  props.setLook(wlTrueTo);
  FormData fdlTrueTo=new FormData();
  fdlTrueTo.left=new FormAttachment(0,0);
  fdlTrueTo.right=new FormAttachment(middle,-margin);
  fdlTrueTo.top=new FormAttachment(wStepname,margin);
  wlTrueTo.setLayoutData(fdlTrueTo);
  wTrueTo=new CCombo(shell,SWT.BORDER);
  props.setLook(wTrueTo);
  StepMeta stepinfo=transMeta.findStep(stepname);
  if (stepinfo != null) {
    List<StepMeta> nextSteps=transMeta.findNextSteps(stepinfo);
    for (int i=0; i < nextSteps.size(); i++) {
      StepMeta stepMeta=nextSteps.get(i);
      wTrueTo.add(stepMeta.getName());
    }
  }
  wTrueTo.addModifyListener(lsMod);
  FormData fdTrueTo=new FormData();
  fdTrueTo.left=new FormAttachment(middle,0);
  fdTrueTo.top=new FormAttachment(wStepname,margin);
  fdTrueTo.right=new FormAttachment(100,0);
  wTrueTo.setLayoutData(fdTrueTo);
  Label wlFalseTo=new Label(shell,SWT.RIGHT);
  wlFalseTo.setText(BaseMessages.getString(PKG,"JavaFilterDialog.SendFalseTo.Label"));
  props.setLook(wlFalseTo);
  FormData fdlFalseTo=new FormData();
  fdlFalseTo.left=new FormAttachment(0,0);
  fdlFalseTo.right=new FormAttachment(middle,-margin);
  fdlFalseTo.top=new FormAttachment(wTrueTo,margin);
  wlFalseTo.setLayoutData(fdlFalseTo);
  wFalseTo=new CCombo(shell,SWT.BORDER);
  props.setLook(wFalseTo);
  stepinfo=transMeta.findStep(stepname);
  if (stepinfo != null) {
    List<StepMeta> nextSteps=transMeta.findNextSteps(stepinfo);
    for (int i=0; i < nextSteps.size(); i++) {
      StepMeta stepMeta=nextSteps.get(i);
      wFalseTo.add(stepMeta.getName());
    }
  }
  wFalseTo.addModifyListener(lsMod);
  FormData fdFalseFrom=new FormData();
  fdFalseFrom.left=new FormAttachment(middle,0);
  fdFalseFrom.top=new FormAttachment(wTrueTo,margin);
  fdFalseFrom.right=new FormAttachment(100,0);
  wFalseTo.setLayoutData(fdFalseFrom);
  Label wlCondition=new Label(shell,SWT.RIGHT);
  wlCondition.setText(BaseMessages.getString(PKG,"JavaFIlterDialog.Condition.Label"));
  props.setLook(wlCondition);
  FormData fdlCondition=new FormData();
  fdlCondition.top=new FormAttachment(wFalseTo,margin);
  fdlCondition.left=new FormAttachment(0,0);
  fdlCondition.right=new FormAttachment(middle,-margin);
  wlCondition.setLayoutData(fdlCondition);
  wCondition=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCondition);
  wCondition.addModifyListener(lsMod);
  FormData fdCondition=new FormData();
  fdCondition.top=new FormAttachment(wFalseTo,margin);
  fdCondition.left=new FormAttachment(middle,0);
  fdCondition.right=new FormAttachment(100,0);
  wCondition.setLayoutData(fdCondition);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,null);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
