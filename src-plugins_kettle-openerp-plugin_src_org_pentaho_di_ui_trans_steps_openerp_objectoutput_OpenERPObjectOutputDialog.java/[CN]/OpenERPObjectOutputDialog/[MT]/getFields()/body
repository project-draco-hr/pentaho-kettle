{
  int choice=0;
  String[] modelFields=getModelFieldNames(true);
  if (modelFields == null)   return;
  if (tableViewFieldMappings.table.getItemCount() > 0) {
    MessageDialog md=new MessageDialog(tableViewFieldMappings.getShell(),BaseMessages.getString(PKGStepInterface,"BaseStepDialog.GetFieldsChoice.Title"),null,BaseMessages.getString(PKGStepInterface,"BaseStepDialog.GetFieldsChoice.Message","" + tableViewFieldMappings.table.getItemCount(),"" + modelFields.length),MessageDialog.WARNING,new String[]{BaseMessages.getString(PKGStepInterface,"BaseStepDialog.AddNew"),BaseMessages.getString(PKGStepInterface,"BaseStepDialog.ClearAndAdd"),BaseMessages.getString(PKGStepInterface,"BaseStepDialog.Cancel")},0);
    MessageDialog.setDefaultImage(GUIResource.getInstance().getImageSpoon());
    int idx=md.open();
    choice=idx & 0xFF;
  }
  if (choice == 2 || choice == 255)   return;
  if (choice == 1)   tableViewFieldMappings.table.removeAll();
  Hashtable<String,Object> currentFields=new Hashtable<String,Object>();
  for (int i=0; i < tableViewFieldMappings.table.getItemCount(); i++)   currentFields.put(tableViewFieldMappings.table.getItem(i).getText(1),true);
  for (  String newField : modelFields)   if (!currentFields.containsKey(newField))   tableViewFieldMappings.add(newField,"");
  tableViewFieldMappings.setRowNums();
  tableViewFieldMappings.optWidth(true);
}
