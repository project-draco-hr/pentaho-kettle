{
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      meta.setChanged();
    }
  }
;
  final Display display=getParent().getDisplay();
  shell=new Shell(getParent(),SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,meta);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormData fd;
  labelStepName=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(0,margin);
  labelStepName.setLayoutData(fd);
  textStepName=new Text(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(0,margin);
  textStepName.setLayoutData(fd);
  addConnectionLine=addConnectionLine(shell,textStepName,Const.MIDDLE_PCT,margin);
  labelModelName=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(addConnectionLine,margin);
  labelModelName.setLayoutData(fd);
  comboModelName=new CCombo(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(addConnectionLine,margin);
  comboModelName.setLayoutData(fd);
  labelCommitBatchSize=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(comboModelName,margin);
  labelCommitBatchSize.setLayoutData(fd);
  textCommitBatchSize=new Text(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(comboModelName,margin);
  textCommitBatchSize.setLayoutData(fd);
  labelKeyFields=new Label(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.top=new FormAttachment(textCommitBatchSize,margin);
  labelKeyFields.setLayoutData(fd);
  keyFieldsViewColinf=new ColumnInfo[]{new ColumnInfo(getLocalizedKeyColumn(0),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(getLocalizedKeyColumn(1),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(getLocalizedKeyColumn(2),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false)};
  tableViewKeyFields=new TableView(null,shell,SWT.MULTI | SWT.BORDER,keyFieldsViewColinf,0,true,lsMod,props);
  tableViewKeyFields.setReadonly(false);
  tableViewKeyFields.setSortable(false);
  fd=new FormData();
  fd.left=new FormAttachment(0,margin);
  fd.top=new FormAttachment(labelKeyFields,3 * margin);
  fd.right=new FormAttachment(100,-150);
  fd.bottom=new FormAttachment(labelKeyFields,200);
  tableViewKeyFields.setLayoutData(fd);
  buttonGetKeyFields=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewKeyFields,margin);
  fd.top=new FormAttachment(labelKeyFields,3 * margin);
  fd.right=new FormAttachment(100,0);
  buttonGetKeyFields.setLayoutData(fd);
  labelFieldMappings=new Label(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.top=new FormAttachment(tableViewKeyFields,margin);
  labelFieldMappings.setLayoutData(fd);
  fieldMappingColumnInfo=new ColumnInfo[]{new ColumnInfo(getLocalizedColumn(0),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(getLocalizedColumn(1),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false)};
  tableViewFieldMappings=new TableView(null,shell,SWT.FILL | SWT.BORDER,fieldMappingColumnInfo,0,true,lsMod,props);
  tableViewFieldMappings.setSize(477,280);
  tableViewFieldMappings.setBounds(5,125,477,280);
  tableViewFieldMappings.setReadonly(false);
  tableViewFieldMappings.setSortable(true);
  fd=new FormData();
  fd.left=new FormAttachment(0,margin);
  fd.top=new FormAttachment(labelFieldMappings,3 * margin);
  fd.right=new FormAttachment(100,-150);
  fd.bottom=new FormAttachment(100,-50);
  tableViewFieldMappings.setLayoutData(fd);
  buttonGetMappingFields=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewFieldMappings,margin);
  fd.top=new FormAttachment(labelFieldMappings,3 * margin);
  fd.right=new FormAttachment(100,0);
  buttonGetMappingFields.setLayoutData(fd);
  buttonDoMappings=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewFieldMappings,margin);
  fd.top=new FormAttachment(buttonGetMappingFields,3 * margin);
  fd.right=new FormAttachment(100,0);
  buttonDoMappings.setLayoutData(fd);
  buttonOk=new Button(shell,SWT.CENTER);
  buttonCancel=new Button(shell,SWT.CENTER);
  buttonOk.setText(BaseMessages.getString("System.Button.OK"));
  buttonCancel.setText(BaseMessages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{buttonOk,buttonCancel},margin,null);
  addConnectionLine.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setModelComboOptions();
    }
  }
);
  comboModelName.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setTalbleFieldsOptions();
    }
  }
);
  comboModelName.addFocusListener(new FocusListener(){
    @Override public void focusLost(    FocusEvent arg0){
      setTalbleFieldsOptions();
    }
    @Override public void focusGained(    FocusEvent arg0){
    }
  }
);
  buttonGetKeyFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getKeyFields();
    }
  }
);
  buttonGetMappingFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getUpdateFields();
    }
  }
);
  buttonDoMappings.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      generateMappings();
    }
  }
);
  buttonCancel.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      cancel();
    }
  }
);
  buttonOk.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ok();
    }
  }
);
  final Runnable runnable=new Runnable(){
    public void run(){
      setModelComboOptions();
      setStreamFieldsOptions();
      setTalbleFieldsOptions();
    }
  }
;
  display.asyncExec(runnable);
  this.fillLocalizationData();
  this.fillStoredData();
  props.setLook(labelStepName);
  props.setLook(textStepName);
  props.setLook(addConnectionLine);
  props.setLook(labelModelName);
  props.setLook(comboModelName);
  props.setLook(labelCommitBatchSize);
  props.setLook(textCommitBatchSize);
  props.setLook(labelKeyFields);
  props.setLook(labelFieldMappings);
  meta.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
