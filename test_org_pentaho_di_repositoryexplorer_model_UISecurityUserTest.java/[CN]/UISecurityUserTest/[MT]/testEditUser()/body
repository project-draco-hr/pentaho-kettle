{
  try {
    UISecurityUser user=new UISecurityUser();
    List<UIRepositoryRole> rroles=new ArrayList<UIRepositoryRole>();
    for (    RoleInfo roleInfo : roles) {
      rroles.add(new UIRepositoryRole(roleInfo));
    }
    user.setUser(new UIRepositoryUser(joeUser),rroles);
    user.setMode(Mode.EDIT);
    user.setPassword("newpassword");
    user.setDescription("new description");
    List<Object> rolesToAssign=new ArrayList<Object>();
    rolesToAssign.add(new UIRepositoryRole(ctoRole));
    rolesToAssign.add(new UIRepositoryRole(isRole));
    List<Object> rolesToUnAssign=new ArrayList<Object>();
    rolesToUnAssign.add(new UIRepositoryRole(adminRole));
    rolesToUnAssign.add(new UIRepositoryRole(authenticatedRole));
    user.assignRoles(rolesToAssign);
    user.unassignRoles(rolesToUnAssign);
    assertEquals(user.getMode(),Mode.EDIT);
    assertEquals(user.getPassword(),"newpassword");
    assertEquals(user.getDescription(),"new description");
    Assert.assertFalse(contains(user.getAssignedRoles(),new UIRepositoryRole(adminRole)));
    Assert.assertFalse(contains(user.getAssignedRoles(),new UIRepositoryRole(authenticatedRole)));
    Assert.assertTrue(contains(user.getAssignedRoles(),new UIRepositoryRole(ctoRole)));
    Assert.assertTrue(contains(user.getAssignedRoles(),new UIRepositoryRole(isRole)));
  }
 catch (  Exception e) {
    Assert.fail();
  }
}
