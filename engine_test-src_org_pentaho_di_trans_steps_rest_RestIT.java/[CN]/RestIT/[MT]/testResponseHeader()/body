{
  RestData data=new RestData();
  int[] index={0,1,2};
  RowMeta meta=new RowMeta();
  meta.addValueMeta(new ValueMetaString("fieldName"));
  meta.addValueMeta(new ValueMetaInteger("codeFieldName"));
  meta.addValueMeta(new ValueMetaString("headerFieldName"));
  Object[] expectedRow=new Object[]{"",204L,"{\"host\":\"localhost\"}"};
  Rest rest=new RestHandler(stepMockHelper.stepMeta,data,0,stepMockHelper.transMeta,stepMockHelper.trans,true);
  RowMetaInterface inputRowMeta=mock(RowMetaInterface.class);
  rest.setInputRowMeta(inputRowMeta);
  when(inputRowMeta.clone()).thenReturn(inputRowMeta);
  when(stepMockHelper.processRowsStepMetaInterface.getUrl()).thenReturn(HTTP_LOCALHOST_9998 + "restTest/restNoContentAnswer");
  when(stepMockHelper.processRowsStepMetaInterface.getMethod()).thenReturn(RestMeta.HTTP_METHOD_GET);
  when(stepMockHelper.processRowsStepMetaInterface.getResponseHeaderFieldName()).thenReturn("ResponseHeaderFieldName");
  rest.init(stepMockHelper.processRowsStepMetaInterface,data);
  data.resultFieldName="ResultFieldName";
  data.resultCodeFieldName="ResultCodeFieldName";
  assertTrue(rest.processRow(stepMockHelper.processRowsStepMetaInterface,data));
  Object[] out=((RestHandler)rest).getOutputRow();
  assertTrue(meta.equals(out,expectedRow,index));
}
