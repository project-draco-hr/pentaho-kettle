{
  try {
    RestData data=new RestData();
    int[] index={0,1};
    RowMeta meta=new RowMeta();
    meta.addValueMeta(new ValueMetaString("fieldName"));
    meta.addValueMeta(new ValueMetaInteger("codeFieldName"));
    Object[] expectedRow=new Object[]{"",204L};
    Rest rest=new RestHandler(stepMockHelper.stepMeta,data,0,stepMockHelper.transMeta,stepMockHelper.trans,false);
    RowMetaInterface inputRowMeta=mock(RowMetaInterface.class);
    rest.setInputRowMeta(inputRowMeta);
    when(inputRowMeta.clone()).thenReturn(inputRowMeta);
    when(stepMockHelper.processRowsStepMetaInterface.getUrl()).thenReturn(HTTP_LOCALHOST_9998 + "restTest/restNoContentAnswer");
    when(stepMockHelper.processRowsStepMetaInterface.getMethod()).thenReturn(RestMeta.HTTP_METHOD_GET);
    rest.init(stepMockHelper.processRowsStepMetaInterface,data);
    data.resultFieldName="ResultFieldName";
    data.resultCodeFieldName="ResultCodeFieldName";
    Assert.assertTrue(rest.processRow(stepMockHelper.processRowsStepMetaInterface,data));
    Object[] out=((RestHandler)rest).getOutputRow();
    Assert.assertTrue(meta.equals(out,expectedRow,index));
  }
 catch (  ArrayIndexOutOfBoundsException ex) {
    org.junit.Assert.assertTrue(System.getProperty("java.version").startsWith("1.8"));
  }
}
