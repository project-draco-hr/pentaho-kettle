{
  while (undo.size() > undo_position + 1 && undo.size() > 0) {
    int last=undo.size() - 1;
    undo.remove(last);
  }
  TransAction ta=new TransAction();
switch (type_of_change) {
case TYPE_UNDO_CHANGE:
    ta.setChanged(from,to,pos);
  break;
case TYPE_UNDO_DELETE:
ta.setDelete(from,pos);
break;
case TYPE_UNDO_NEW:
ta.setNew(from,pos);
break;
case TYPE_UNDO_POSITION:
ta.setPosition(from,pos,prev,curr);
break;
default :
break;
}
ta.setNextAlso(nextAlso);
undo.add(ta);
undo_position++;
if (undo.size() > max_undo) {
undo.remove(0);
undo_position--;
}
}
