{
  String soFile=environmentSubstitute(sharedObjectsFile);
  SharedObjects sharedObjects=new SharedObjects(soFile);
  if (sharedObjects.getObjectsMap().isEmpty()) {
    log.logDetailed(BaseMessages.getString(PKG,"TransMeta.Log.EmptySharedObjectsFile",soFile));
  }
  for (  SharedObjectInterface object : sharedObjects.getObjectsMap().values()) {
    if (object instanceof DatabaseMeta) {
      DatabaseMeta databaseMeta=(DatabaseMeta)object;
      databaseMeta.shareVariablesWith(this);
      addOrReplaceDatabase(databaseMeta);
    }
 else     if (object instanceof SlaveServer) {
      SlaveServer slaveServer=(SlaveServer)object;
      slaveServer.shareVariablesWith(this);
      addOrReplaceSlaveServer(slaveServer);
    }
 else     if (object instanceof StepMeta) {
      StepMeta stepMeta=(StepMeta)object;
      addOrReplaceStep(stepMeta);
    }
 else     if (object instanceof PartitionSchema) {
      PartitionSchema partitionSchema=(PartitionSchema)object;
      addOrReplacePartitionSchema(partitionSchema);
    }
 else     if (object instanceof ClusterSchema) {
      ClusterSchema clusterSchema=(ClusterSchema)object;
      clusterSchema.shareVariablesWith(this);
      addOrReplaceClusterSchema(clusterSchema);
    }
  }
  return sharedObjects;
}
