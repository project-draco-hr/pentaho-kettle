{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("EnterMappingDialog.Title"));
  shell.setImage(GUIResource.getInstance().getImageSpoonGraph());
  int margin=Const.MARGIN;
  int buttonSpace=90;
  wlSource=new Label(shell,SWT.NONE);
  wlSource.setText(Messages.getString("EnterMappingDialog.SourceFields.Label"));
  props.setLook(wlSource);
  fdlSource=new FormData();
  fdlSource.left=new FormAttachment(0,0);
  fdlSource.top=new FormAttachment(0,margin);
  wlSource.setLayoutData(fdlSource);
  wSource=new List(shell,SWT.SINGLE | SWT.RIGHT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  for (int i=0; i < sourceList.length; i++)   wSource.add(sourceList[i]);
  props.setLook(wSource);
  fdSource=new FormData();
  fdSource.left=new FormAttachment(0,0);
  fdSource.right=new FormAttachment(25,0);
  fdSource.top=new FormAttachment(wlSource,margin);
  fdSource.bottom=new FormAttachment(100,-buttonSpace);
  wSource.setLayoutData(fdSource);
  wlSourceAuto=new Label(shell,SWT.NONE);
  wlSourceAuto.setText(Messages.getString("EnterMappingDialog.AutoTargetSelection.Label"));
  props.setLook(wlSourceAuto);
  fdlSourceAuto=new FormData();
  fdlSourceAuto.left=new FormAttachment(0,0);
  fdlSourceAuto.top=new FormAttachment(wSource,margin);
  wlSourceAuto.setLayoutData(fdlSourceAuto);
  wSourceAuto=new Button(shell,SWT.CHECK);
  wSourceAuto.setSelection(true);
  props.setLook(wSourceAuto);
  fdSourceAuto=new FormData();
  fdSourceAuto.left=new FormAttachment(wlSourceAuto,margin * 2);
  fdSourceAuto.right=new FormAttachment(25,0);
  fdSourceAuto.top=new FormAttachment(wSource,margin);
  wSourceAuto.setLayoutData(fdSourceAuto);
  wlSourceHide=new Label(shell,SWT.NONE);
  wlSourceHide.setText(Messages.getString("EnterMappingDialog.HideUsedSources"));
  props.setLook(wlSourceHide);
  fdlSourceHide=new FormData();
  fdlSourceHide.left=new FormAttachment(0,0);
  fdlSourceHide.top=new FormAttachment(wSourceAuto,margin);
  wlSourceHide.setLayoutData(fdlSourceHide);
  wSourceHide=new Button(shell,SWT.CHECK);
  wSourceHide.setSelection(true);
  props.setLook(wSourceHide);
  fdSourceHide=new FormData();
  fdSourceHide.left=new FormAttachment(wlSourceHide,margin * 2);
  fdSourceHide.right=new FormAttachment(25,0);
  fdSourceHide.top=new FormAttachment(wSourceAuto,margin);
  wSourceHide.setLayoutData(fdSourceHide);
  wSourceHide.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      refreshMappings();
    }
  }
);
  wlTarget=new Label(shell,SWT.NONE);
  wlTarget.setText(Messages.getString("EnterMappingDialog.TargetFields.Label"));
  props.setLook(wlTarget);
  fdlTarget=new FormData();
  fdlTarget.left=new FormAttachment(wSource,margin * 2);
  fdlTarget.top=new FormAttachment(0,margin);
  wlTarget.setLayoutData(fdlTarget);
  wTarget=new List(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  for (int i=0; i < targetList.length; i++)   wTarget.add(targetList[i]);
  props.setLook(wTarget);
  fdTarget=new FormData();
  fdTarget.left=new FormAttachment(wSource,margin * 2);
  fdTarget.right=new FormAttachment(50,0);
  fdTarget.top=new FormAttachment(wlTarget,margin);
  fdTarget.bottom=new FormAttachment(100,-buttonSpace);
  wTarget.setLayoutData(fdTarget);
  wlTargetAuto=new Label(shell,SWT.NONE);
  wlTargetAuto.setText(Messages.getString("EnterMappingDialog.AutoSourceSelection.Label"));
  props.setLook(wlTargetAuto);
  fdlTargetAuto=new FormData();
  fdlTargetAuto.left=new FormAttachment(wSource,margin * 2);
  fdlTargetAuto.top=new FormAttachment(wTarget,margin);
  wlTargetAuto.setLayoutData(fdlTargetAuto);
  wTargetAuto=new Button(shell,SWT.CHECK);
  wTargetAuto.setSelection(false);
  props.setLook(wTargetAuto);
  fdTargetAuto=new FormData();
  fdTargetAuto.left=new FormAttachment(wlTargetAuto,margin * 2);
  fdTargetAuto.right=new FormAttachment(50,0);
  fdTargetAuto.top=new FormAttachment(wTarget,margin);
  wTargetAuto.setLayoutData(fdTargetAuto);
  wlTargetHide=new Label(shell,SWT.NONE);
  wlTargetHide.setText(Messages.getString("EnterMappingDialog.HideUsedTargets"));
  props.setLook(wlTargetHide);
  fdlTargetHide=new FormData();
  fdlTargetHide.left=new FormAttachment(wSource,margin * 2);
  fdlTargetHide.top=new FormAttachment(wTargetAuto,margin);
  wlTargetHide.setLayoutData(fdlTargetHide);
  wTargetHide=new Button(shell,SWT.CHECK);
  wTargetHide.setSelection(true);
  props.setLook(wTargetHide);
  fdTargetHide=new FormData();
  fdTargetHide.left=new FormAttachment(wlTargetHide,margin * 2);
  fdTargetHide.right=new FormAttachment(50,0);
  fdTargetHide.top=new FormAttachment(wTargetAuto,margin);
  wTargetHide.setLayoutData(fdTargetHide);
  wTargetHide.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      refreshMappings();
    }
  }
);
  wAdd=new Button(shell,SWT.PUSH);
  fdAdd=new FormData();
  wAdd.setText(Messages.getString("EnterMappingDialog.Button.Add"));
  fdAdd.left=new FormAttachment(wTarget,margin * 2);
  fdAdd.top=new FormAttachment(wTarget,0,SWT.CENTER);
  wAdd.setLayoutData(fdAdd);
  Listener lsAdd=new Listener(){
    public void handleEvent(    Event e){
      add();
    }
  }
;
  wAdd.addListener(SWT.Selection,lsAdd);
  wDelete=new Button(shell,SWT.PUSH);
  fdDelete=new FormData();
  wDelete.setText(Messages.getString("EnterMappingDialog.Button.Delete"));
  fdDelete.left=new FormAttachment(wTarget,margin * 2);
  fdDelete.top=new FormAttachment(wAdd,margin * 2);
  wDelete.setLayoutData(fdDelete);
  Listener lsDelete=new Listener(){
    public void handleEvent(    Event e){
      delete();
    }
  }
;
  wDelete.addListener(SWT.Selection,lsDelete);
  wlResult=new Label(shell,SWT.NONE);
  wlResult.setText(Messages.getString("EnterMappingDialog.ResultMappings.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(wDelete,margin * 2);
  fdlResult.top=new FormAttachment(0,margin);
  wlResult.setLayoutData(fdlResult);
  wResult=new List(shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  for (int i=0; i < targetList.length; i++)   wResult.add(targetList[i]);
  props.setLook(wResult);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(wDelete,margin * 2);
  fdResult.right=new FormAttachment(100,0);
  fdResult.top=new FormAttachment(wlResult,margin);
  fdResult.bottom=new FormAttachment(100,-30);
  wResult.setLayoutData(fdResult);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGuess=new Button(shell,SWT.PUSH);
  wGuess.setText(Messages.getString("EnterMappingDialog.Button.Guess"));
  lsGuess=new Listener(){
    public void handleEvent(    Event e){
      guess();
    }
  }
;
  wGuess.addListener(SWT.Selection,lsGuess);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wGuess,wCancel},margin,null);
  wSource.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      if (wSourceAuto.getSelection())       findTarget();
    }
    public void widgetDefaultSelected(    SelectionEvent e){
      add();
    }
  }
);
  wTarget.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      if (wTargetAuto.getSelection())       findSource();
    }
    public void widgetDefaultSelected(    SelectionEvent e){
      add();
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return mappings;
}
