{
  assertEquals("xmlOutputFile",xmlOutputMeta.getFileName());
  assertFalse(xmlOutputMeta.isDoNotOpenNewFileInit());
  assertFalse(xmlOutputMeta.isServletOutput());
  assertEquals("pentaho.xml",xmlOutputMeta.getExtension());
  assertTrue(xmlOutputMeta.isStepNrInFilename());
  assertTrue(xmlOutputMeta.isDateInFilename());
  assertTrue(xmlOutputMeta.isTimeInFilename());
  assertFalse(xmlOutputMeta.isSpecifyFormat());
  assertTrue(StringUtil.isEmpty(xmlOutputMeta.getDateTimeFormat()));
  assertFalse(xmlOutputMeta.isAddToResultFiles());
  assertFalse(xmlOutputMeta.isZipped());
  assertEquals("UTF-8",xmlOutputMeta.getEncoding());
  assertTrue(StringUtil.isEmpty(xmlOutputMeta.getNameSpace()));
  assertEquals("Rows",xmlOutputMeta.getMainElement());
  assertEquals("Row",xmlOutputMeta.getRepeatElement());
  assertEquals(0,xmlOutputMeta.getSplitEvery());
  assertTrue(xmlOutputMeta.isOmitNullValues());
  XMLField[] outputFields=xmlOutputMeta.getOutputFields();
  assertEquals(2,outputFields.length);
  assertEquals("fieldOne",outputFields[0].getFieldName());
  assertEquals(XMLField.ContentType.Element,outputFields[0].getContentType());
  assertEquals("fieldTwo",outputFields[1].getFieldName());
  assertEquals(XMLField.ContentType.Attribute,outputFields[1].getContentType());
  assertEquals("    <encoding>UTF-8</encoding>" + Const.CR + "    <name_space/>"+ Const.CR+ "    <xml_main_element>Rows</xml_main_element>"+ Const.CR+ "    <xml_repeat_element>Row</xml_repeat_element>"+ Const.CR+ "    <file>"+ Const.CR+ "      <name>xmlOutputFile</name>"+ Const.CR+ "      <extention>pentaho.xml</extention>"+ Const.CR+ "      <servlet_output>N</servlet_output>"+ Const.CR+ "      <do_not_open_newfile_init>N</do_not_open_newfile_init>"+ Const.CR+ "      <split>Y</split>"+ Const.CR+ "      <add_date>Y</add_date>"+ Const.CR+ "      <add_time>Y</add_time>"+ Const.CR+ "      <SpecifyFormat>N</SpecifyFormat>"+ Const.CR+ "      <omit_null_values>Y</omit_null_values>"+ Const.CR+ "      <date_time_format/>"+ Const.CR+ "      <add_to_result_filenames>N</add_to_result_filenames>"+ Const.CR+ "      <zipped>N</zipped>"+ Const.CR+ "      <splitevery>0</splitevery>"+ Const.CR+ "    </file>"+ Const.CR+ "    <fields>"+ Const.CR+ "      <field>"+ Const.CR+ "        <content_type>Element</content_type>"+ Const.CR+ "        <name>fieldOne</name>"+ Const.CR+ "        <element/>"+ Const.CR+ "        <type>Number</type>"+ Const.CR+ "        <format/>"+ Const.CR+ "        <currency/>"+ Const.CR+ "        <decimal/>"+ Const.CR+ "        <group/>"+ Const.CR+ "        <nullif/>"+ Const.CR+ "        <length>-1</length>"+ Const.CR+ "        <precision>-1</precision>"+ Const.CR+ "      </field>"+ Const.CR+ "      <field>"+ Const.CR+ "        <content_type>Attribute</content_type>"+ Const.CR+ "        <name>fieldTwo</name>"+ Const.CR+ "        <element/>"+ Const.CR+ "        <type>String</type>"+ Const.CR+ "        <format/>"+ Const.CR+ "        <currency/>"+ Const.CR+ "        <decimal/>"+ Const.CR+ "        <group/>"+ Const.CR+ "        <nullif/>"+ Const.CR+ "        <length>-1</length>"+ Const.CR+ "        <precision>-1</precision>"+ Const.CR+ "      </field>"+ Const.CR+ "    </fields>"+ Const.CR,xmlOutputMeta.getXML());
}
