{
  this.startDate=startDate;
  this.endDate=endDate;
  this.recordsFilter=recordsFilter;
  if (this.startDate == null || this.endDate == null) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceInput.Error.EmptyStartDateOrEndDate"));
  }
  if (this.startDate.getTime().compareTo(this.endDate.getTime()) >= 0) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceInput.Error.WrongDates"));
  }
  long diffDays=(this.startDate.getTime().getTime() - this.endDate.getTime().getTime()) / (24 * 60 * 60* 1000);
  if (diffDays > 30) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceInput.Error.StartDateTooOlder"));
  }
}
