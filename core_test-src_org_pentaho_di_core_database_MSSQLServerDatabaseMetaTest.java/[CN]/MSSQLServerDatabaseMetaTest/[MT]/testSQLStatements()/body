{
  assertEquals("SELECT TOP 1 * FROM FOO",nativeMeta.getSQLQueryFields("FOO"));
  String lineSep=System.getProperty("line.separator");
  assertEquals("SELECT top 0 * FROM FOO WITH (UPDLOCK, HOLDLOCK);" + lineSep + "SELECT top 0 * FROM BAR WITH (UPDLOCK, HOLDLOCK);"+ lineSep,nativeMeta.getSQLLockTables(new String[]{"FOO","BAR"}));
  assertEquals("ALTER TABLE FOO ADD BAR DATETIME",nativeMeta.getAddColumnStatement("FOO",new ValueMetaDate("BAR"),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR DATETIME",nativeMeta.getAddColumnStatement("FOO",new ValueMetaTimestamp("BAR"),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR CHAR(1)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaBoolean("BAR"),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR BIGINT",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",10,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR BIGINT",nativeMeta.getAddColumnStatement("FOO",new ValueMetaBigNumber("BAR",10,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR BIGINT",nativeMeta.getAddColumnStatement("FOO",new ValueMetaInteger("BAR",10,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR INT",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",0,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR INT",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",5,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR DECIMAL(10,3)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",10,3),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR DECIMAL(10,3)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaBigNumber("BAR",10,3),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR DECIMAL(21,4)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaBigNumber("BAR",21,4),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR TEXT",nativeMeta.getAddColumnStatement("FOO",new ValueMetaString("BAR",nativeMeta.getMaxVARCHARLength() + 2,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR VARCHAR(15)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaString("BAR",15,0),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR ",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",10,-7),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR DECIMAL(22,7)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaBigNumber("BAR",22,7),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR FLOAT(53)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",-10,7),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR DECIMAL(5,7)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",5,7),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR  UNKNOWN",nativeMeta.getAddColumnStatement("FOO",new ValueMetaInternetAddress("BAR"),"",false,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR BIGINT PRIMARY KEY IDENTITY(0,1)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaInteger("BAR"),"BAR",true,"",false));
  assertEquals("ALTER TABLE FOO ADD BAR BIGINT PRIMARY KEY IDENTITY(0,1)",nativeMeta.getAddColumnStatement("FOO",new ValueMetaNumber("BAR",26,8),"BAR",true,"",false));
  assertEquals("ALTER TABLE FOO DROP COLUMN BAR" + lineSep,nativeMeta.getDropColumnStatement("FOO",new ValueMetaString("BAR",15,0),"",false,"",true));
  assertEquals("ALTER TABLE FOO ALTER COLUMN BAR VARCHAR(15)",nativeMeta.getModifyColumnStatement("FOO",new ValueMetaString("BAR",15,0),"",false,"",true));
  assertEquals("ALTER TABLE FOO ALTER COLUMN BAR VARCHAR(100)",nativeMeta.getModifyColumnStatement("FOO",new ValueMetaString("BAR"),"",false,"",true));
  odbcMeta.setSupportsBooleanDataType(true);
  assertEquals("ALTER TABLE FOO ADD BAR BIT",odbcMeta.getAddColumnStatement("FOO",new ValueMetaBoolean("BAR"),"",false,"",false));
  odbcMeta.setSupportsBooleanDataType(false);
  assertEquals("select o.name from sysobjects o, sysusers u where  xtype in ( 'FN', 'P' ) and o.uid = u.uid order by o.name",nativeMeta.getSQLListOfProcedures("FOO"));
  assertEquals("select name from sys.schemas",nativeMeta.getSQLListOfSchemas());
  assertEquals("insert into FOO(FOOVERSION) values (1)",nativeMeta.getSQLInsertAutoIncUnknownDimensionRow("FOO","FOOKEY","FOOVERSION"));
  assertEquals("SELECT NEXT VALUE FOR FOO",nativeMeta.getSQLNextSequenceValue("FOO"));
  assertEquals("SELECT current_value FROM sys.sequences WHERE name = 'FOO'",nativeMeta.getSQLCurrentSequenceValue("FOO"));
  assertEquals("SELECT * FROM sys.sequences WHERE name = 'FOO'",nativeMeta.getSQLSequenceExists("FOO"));
  assertEquals("SELECT name FROM sys.sequences",nativeMeta.getSQLListOfSequences());
}
