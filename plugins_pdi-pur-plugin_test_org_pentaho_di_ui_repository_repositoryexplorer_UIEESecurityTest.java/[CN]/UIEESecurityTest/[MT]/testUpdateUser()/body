{
  try {
    UIEERepositoryUser userToAdd=new UIEERepositoryUser(new EEUserInfo());
    userToAdd.setName("newuser");
    userToAdd.setPassword("newpassword");
    userToAdd.setDescription("new description");
    Set<IUIRole> rolesToAssign=new HashSet<IUIRole>();
    rolesToAssign.add(new UIRepositoryRole(ctoRole));
    rolesToAssign.add(new UIRepositoryRole(isRole));
    rolesToAssign.add(new UIRepositoryRole(adminRole));
    rolesToAssign.add(new UIRepositoryRole(authenticatedRole));
    userToAdd.setRoles(rolesToAssign);
    security.addUser(userToAdd);
    IUIUser selectedUser=security.getSelectedUser();
    selectedUser.setPassword("newpassword123");
    selectedUser.setDescription("new description 123");
    ((IUIEEUser)selectedUser).addRole(new UIRepositoryRole(ctoRole));
    ((IUIEEUser)selectedUser).addRole(new UIRepositoryRole(isRole));
    ((IUIEEUser)selectedUser).removeRole(new UIRepositoryRole(adminRole));
    ((IUIEEUser)selectedUser).removeRole(new UIRepositoryRole(authenticatedRole));
    security.updateUser(selectedUser,rolesToAssign);
    assertEquals(selectedUser.getPassword(),"newpassword123");
    assertEquals(selectedUser.getDescription(),"new description 123");
    assertEquals(security.getSelectedUser(),selectedUser);
    assertEquals(security.getUserList().size(),5);
  }
 catch (  Exception e) {
    Assert.fail();
  }
}
