{
  try {
    IUIRole roleToAdd=new UIRepositoryRole(new EERoleInfo());
    roleToAdd.setName("newrole");
    roleToAdd.setDescription("new description");
    Set<IUIUser> usersToAssign=new HashSet<IUIUser>();
    usersToAssign.add(new UIRepositoryUser(suzyUser));
    usersToAssign.add(new UIRepositoryUser(tiffanyUser));
    usersToAssign.add(new UIRepositoryUser(joeUser));
    roleToAdd.setUsers(usersToAssign);
    security.addRole(roleToAdd);
    security.setSelectedRole(findRole("newrole"));
    IUIRole selectedRole=security.getSelectedRole();
    selectedRole.setDescription("new description 123");
    selectedRole.addUser(new UIRepositoryUser(patUser));
    selectedRole.removeUser(new UIRepositoryUser(suzyUser));
    selectedRole.removeUser(new UIRepositoryUser(tiffanyUser));
    security.updateRole(selectedRole,usersToAssign);
    assertEquals(selectedRole.getDescription(),"new description 123");
    assertEquals(security.getSelectedRole(),selectedRole);
    assertEquals(security.getRoleList().size(),9);
  }
 catch (  Exception e) {
    Assert.fail();
  }
}
