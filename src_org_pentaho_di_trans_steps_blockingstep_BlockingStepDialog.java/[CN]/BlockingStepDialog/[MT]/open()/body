{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(getClass().getPackage().getName(),"BlockingStepDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(getClass().getPackage().getName(),"BlockingStepDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlPassAllRows=new Label(shell,SWT.RIGHT);
  wlPassAllRows.setText(Messages.getString("BlockingStepDialog.PassAllRows.Label"));
  props.setLook(wlPassAllRows);
  FormData fdlUpdate=new FormData();
  fdlUpdate.left=new FormAttachment(0,0);
  fdlUpdate.right=new FormAttachment(middle,-margin);
  fdlUpdate.top=new FormAttachment(wStepname,margin);
  wlPassAllRows.setLayoutData(fdlUpdate);
  wPassAllRows=new Button(shell,SWT.CHECK);
  props.setLook(wPassAllRows);
  FormData fdUpdate=new FormData();
  fdUpdate.left=new FormAttachment(middle,0);
  fdUpdate.top=new FormAttachment(wStepname,margin);
  fdUpdate.right=new FormAttachment(100,0);
  wPassAllRows.setLayoutData(fdUpdate);
  wPassAllRows.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setPassAllRows(!input.isPassAllRows());
      input.setChanged();
      setEnableDialog();
    }
  }
);
  wlSpoolDir=new Label(shell,SWT.RIGHT);
  wlSpoolDir.setText(Messages.getString("BlockingStepDialog.SpoolDir.Label"));
  props.setLook(wlSpoolDir);
  fdlSpoolDir=new FormData();
  fdlSpoolDir.left=new FormAttachment(0,0);
  fdlSpoolDir.right=new FormAttachment(middle,-margin);
  fdlSpoolDir.top=new FormAttachment(wPassAllRows,margin);
  wlSpoolDir.setLayoutData(fdlSpoolDir);
  wbSpoolDir=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSpoolDir);
  wbSpoolDir.setText(Messages.getString("System.Button.Browse"));
  fdbSpoolDir=new FormData();
  fdbSpoolDir.right=new FormAttachment(100,0);
  fdbSpoolDir.top=new FormAttachment(wPassAllRows,margin);
  wbSpoolDir.setLayoutData(fdbSpoolDir);
  wSpoolDir=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSpoolDir);
  wSpoolDir.addModifyListener(lsMod);
  fdSpoolDir=new FormData();
  fdSpoolDir.left=new FormAttachment(middle,0);
  fdSpoolDir.top=new FormAttachment(wPassAllRows,margin);
  fdSpoolDir.right=new FormAttachment(wbSpoolDir,-margin);
  wSpoolDir.setLayoutData(fdSpoolDir);
  wbSpoolDir.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      DirectoryDialog dd=new DirectoryDialog(shell,SWT.NONE);
      dd.setFilterPath(wSpoolDir.getText());
      String dir=dd.open();
      if (dir != null) {
        wSpoolDir.setText(dir);
      }
    }
  }
);
  wSpoolDir.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wSpoolDir.setToolTipText(transMeta.environmentSubstitute(wSpoolDir.getText()));
    }
  }
);
  wlPrefix=new Label(shell,SWT.RIGHT);
  wlPrefix.setText(Messages.getString("BlockingStepDialog.Prefix.Label"));
  props.setLook(wlPrefix);
  fdlPrefix=new FormData();
  fdlPrefix.left=new FormAttachment(0,0);
  fdlPrefix.right=new FormAttachment(middle,-margin);
  fdlPrefix.top=new FormAttachment(wbSpoolDir,margin * 2);
  wlPrefix.setLayoutData(fdlPrefix);
  wPrefix=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPrefix);
  wPrefix.addModifyListener(lsMod);
  fdPrefix=new FormData();
  fdPrefix.left=new FormAttachment(middle,0);
  fdPrefix.top=new FormAttachment(wbSpoolDir,margin * 2);
  fdPrefix.right=new FormAttachment(100,0);
  wPrefix.setLayoutData(fdPrefix);
  wlCacheSize=new Label(shell,SWT.RIGHT);
  wlCacheSize.setText(Messages.getString("BlockingStepDialog.CacheSize.Label"));
  props.setLook(wlCacheSize);
  fdlCacheSize=new FormData();
  fdlCacheSize.left=new FormAttachment(0,0);
  fdlCacheSize.right=new FormAttachment(middle,-margin);
  fdlCacheSize.top=new FormAttachment(wPrefix,margin * 2);
  wlCacheSize.setLayoutData(fdlCacheSize);
  wCacheSize=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCacheSize);
  wCacheSize.addModifyListener(lsMod);
  fdCacheSize=new FormData();
  fdCacheSize.left=new FormAttachment(middle,0);
  fdCacheSize.top=new FormAttachment(wPrefix,margin * 2);
  fdCacheSize.right=new FormAttachment(100,0);
  wCacheSize.setLayoutData(fdCacheSize);
  wlCompress=new Label(shell,SWT.RIGHT);
  wlCompress.setText(Messages.getString("BlockingStepDialog.Compress.Label"));
  props.setLook(wlCompress);
  fdlCompress=new FormData();
  fdlCompress.left=new FormAttachment(0,0);
  fdlCompress.right=new FormAttachment(middle,-margin);
  fdlCompress.top=new FormAttachment(wCacheSize,margin * 2);
  wlCompress.setLayoutData(fdlCompress);
  wCompress=new Button(shell,SWT.CHECK);
  props.setLook(wCompress);
  fdCompress=new FormData();
  fdCompress.left=new FormAttachment(middle,0);
  fdCompress.top=new FormAttachment(wCacheSize,margin * 2);
  fdCompress.right=new FormAttachment(100,0);
  wCompress.setLayoutData(fdCompress);
  wCompress.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(getClass().getPackage().getName(),"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(getClass().getPackage().getName(),"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wCompress);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  setEnableDialog();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
