{
  int hashCode=generateHashCode(key);
  int indexPointer=hashCode & (index.length - 1);
  boolean searchEmptySpot=false;
  LongHashIndexEntry check=index[indexPointer];
  LongHashIndexEntry previousCheck=null;
  while (check != null) {
    searchEmptySpot=true;
    if (check.hashCode == hashCode && check.equalsKey(key)) {
      check.value=value;
      return;
    }
    previousCheck=check;
    check=check.nextEntry;
  }
  while (searchEmptySpot) {
    indexPointer++;
    if (indexPointer >= size) {
      indexPointer=0;
    }
    if (index[indexPointer] == null) {
      searchEmptySpot=false;
    }
  }
  index[indexPointer]=new LongHashIndexEntry(hashCode,key,value,index[indexPointer]);
  if (previousCheck != null) {
    previousCheck.nextEntry=index[indexPointer];
  }
  resize();
}
