{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  List<String> attributes=Arrays.asList("transName","fileName","directoryPath","allowingMultipleInputs","allowingMultipleOutputs","specificationMethod","transObjectId","inputMappings","outputMappings","mappingParameters");
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("specificationMethod",new ObjectLocationSpecificationMethodLoadSaveValidator());
  attrValidatorMap.put("transObjectId",new ObjectIdLoadSaveValidator());
  attrValidatorMap.put("inputMappings",new ListLoadSaveValidator<MappingIODefinition>(new MappingIODefinitionLoadSaveValidator(),5));
  attrValidatorMap.put("outputMappings",new ListLoadSaveValidator<MappingIODefinition>(new MappingIODefinitionLoadSaveValidator(),5));
  attrValidatorMap.put("mappingParameters",new MappingParametersLoadSaveValidator());
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,new HashMap<String,String>(),new HashMap<String,String>(),attrValidatorMap,typeValidatorMap);
}
