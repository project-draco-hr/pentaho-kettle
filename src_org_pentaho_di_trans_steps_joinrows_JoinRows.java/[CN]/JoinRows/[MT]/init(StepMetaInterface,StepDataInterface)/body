{
  meta=(JoinRowsMeta)smi;
  data=(JoinRowsData)sdi;
  if (super.init(smi,sdi)) {
    try {
      data.caching=true;
      data.filenr=1;
      for (int i=0; i < getInputRowSets().size(); i++) {
        RowSet rs=getInputRowSets().get(i);
        if (rs.getOriginStepName().equalsIgnoreCase(meta.getMainStepname())) {
          RowSet zero=getInputRowSets().get(0);
          getInputRowSets().set(0,rs);
          getInputRowSets().set(i,zero);
        }
      }
      data.file=new File[getInputRowSets().size()];
      data.fileInputStream=new FileInputStream[getInputRowSets().size()];
      data.dataInputStream=new DataInputStream[getInputRowSets().size()];
      data.size=new int[getInputRowSets().size()];
      data.fileRowMeta=new RowMetaInterface[getInputRowSets().size()];
      data.joinrow=new Object[getInputRowSets().size()][];
      data.rs=new RowSet[getInputRowSets().size()];
      data.cache=new List[getInputRowSets().size()];
      data.position=new int[getInputRowSets().size()];
      data.fileOutputStream=new FileOutputStream[getInputRowSets().size()];
      data.dataOutputStream=new DataOutputStream[getInputRowSets().size()];
      data.restart=new boolean[getInputRowSets().size()];
      for (int i=1; i < getInputRowSets().size(); i++) {
        String directoryName=environmentSubstitute(meta.getDirectory());
        data.file[i]=File.createTempFile(meta.getPrefix(),".tmp",new File(directoryName));
        data.size[i]=0;
        data.rs[i]=getInputRowSets().get(i);
        data.cache[i]=null;
        data.position[i]=0;
        data.dataInputStream[i]=null;
        data.dataOutputStream[i]=null;
        data.joinrow[i]=null;
        data.restart[i]=false;
      }
      return true;
    }
 catch (    IOException e) {
      logError(BaseMessages.getString(PKG,"JoinRows.Log.ErrorCreatingTemporaryFiles") + e.toString());
    }
  }
  return false;
}
