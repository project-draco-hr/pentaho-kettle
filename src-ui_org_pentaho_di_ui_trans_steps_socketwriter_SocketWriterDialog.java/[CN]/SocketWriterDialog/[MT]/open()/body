{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("SocketWriterDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("SocketWriterDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  Label wlPort=new Label(shell,SWT.RIGHT);
  wlPort.setText(Messages.getString("SocketWriterDialog.Port.Label"));
  props.setLook(wlPort);
  FormData fdlPort=new FormData();
  fdlPort.left=new FormAttachment(0,0);
  fdlPort.right=new FormAttachment(middle,-margin);
  fdlPort.top=new FormAttachment(wStepname,margin);
  wlPort.setLayoutData(fdlPort);
  wPort=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wPort.setText(stepname);
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  FormData fdPort=new FormData();
  fdPort.left=new FormAttachment(middle,0);
  fdPort.top=new FormAttachment(wStepname,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  Label wlBufferSize=new Label(shell,SWT.RIGHT);
  wlBufferSize.setText(Messages.getString("SocketWriterDialog.BufferSize.Label"));
  props.setLook(wlBufferSize);
  FormData fdlBufferSize=new FormData();
  fdlBufferSize.left=new FormAttachment(0,0);
  fdlBufferSize.right=new FormAttachment(middle,-margin);
  fdlBufferSize.top=new FormAttachment(wPort,margin);
  wlBufferSize.setLayoutData(fdlBufferSize);
  wBufferSize=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wBufferSize.setText(stepname);
  props.setLook(wBufferSize);
  wBufferSize.addModifyListener(lsMod);
  FormData fdBufferSize=new FormData();
  fdBufferSize.left=new FormAttachment(middle,0);
  fdBufferSize.top=new FormAttachment(wPort,margin);
  fdBufferSize.right=new FormAttachment(100,0);
  wBufferSize.setLayoutData(fdBufferSize);
  Label wlFlushInterval=new Label(shell,SWT.RIGHT);
  wlFlushInterval.setText(Messages.getString("SocketWriterDialog.FlushInterval.Label"));
  props.setLook(wlFlushInterval);
  FormData fdlFlushInterval=new FormData();
  fdlFlushInterval.left=new FormAttachment(0,0);
  fdlFlushInterval.right=new FormAttachment(middle,-margin);
  fdlFlushInterval.top=new FormAttachment(wBufferSize,margin);
  wlFlushInterval.setLayoutData(fdlFlushInterval);
  wFlushInterval=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wFlushInterval.setText(stepname);
  props.setLook(wFlushInterval);
  wFlushInterval.addModifyListener(lsMod);
  FormData fdFlushInterval=new FormData();
  fdFlushInterval.left=new FormAttachment(middle,0);
  fdFlushInterval.top=new FormAttachment(wBufferSize,margin);
  fdFlushInterval.right=new FormAttachment(100,0);
  wFlushInterval.setLayoutData(fdFlushInterval);
  Label wlCompressed=new Label(shell,SWT.RIGHT);
  props.setLook(wlCompressed);
  wlCompressed.setText(Messages.getString("SocketWriterDialog.Compressed.Label"));
  FormData fdlCompressed=new FormData();
  fdlCompressed.top=new FormAttachment(wFlushInterval,margin);
  fdlCompressed.left=new FormAttachment(0,0);
  fdlCompressed.right=new FormAttachment(middle,0);
  wlCompressed.setLayoutData(fdlCompressed);
  wCompressed=new Button(shell,SWT.CHECK);
  props.setLook(wCompressed);
  FormData fdCompressed=new FormData();
  fdCompressed.top=new FormAttachment(wFlushInterval,margin);
  fdCompressed.left=new FormAttachment(middle,margin);
  fdCompressed.right=new FormAttachment(95,0);
  wCompressed.setLayoutData(fdCompressed);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wCompressed);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wPort.addSelectionListener(lsDef);
  wBufferSize.addSelectionListener(lsDef);
  wFlushInterval.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
