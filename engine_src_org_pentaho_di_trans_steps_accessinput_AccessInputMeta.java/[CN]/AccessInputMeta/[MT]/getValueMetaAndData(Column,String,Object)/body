{
  ValueMetaAndData valueMetaData=new ValueMetaAndData();
  Object o=data;
  DataType type=c.getType();
  ValueMetaInterface sourceValueMeta=new ValueMeta(name == null ? c.getName() : name,ValueMeta.TYPE_STRING);
  sourceValueMeta.setLength(c.getLength(),c.getPrecision());
switch (type) {
case BINARY:
    sourceValueMeta.setType(ValueMeta.TYPE_BINARY);
  break;
case BOOLEAN:
sourceValueMeta.setType(ValueMeta.TYPE_BOOLEAN);
if (o != null) {
o=Boolean.valueOf(o.toString());
}
break;
case DOUBLE:
sourceValueMeta.setType(ValueMeta.TYPE_NUMBER);
break;
case FLOAT:
sourceValueMeta.setType(ValueMeta.TYPE_BIGNUMBER);
if (o != null) {
o=new BigDecimal(Float.toString((Float)o));
}
break;
case INT:
sourceValueMeta.setType(ValueMeta.TYPE_NUMBER);
if (o != null) {
o=Double.parseDouble(o.toString());
}
break;
case BYTE:
sourceValueMeta.setType(ValueMeta.TYPE_NUMBER);
if (o != null) {
o=Double.parseDouble(o.toString());
}
break;
case LONG:
sourceValueMeta.setType(ValueMeta.TYPE_INTEGER);
if (o != null) {
Integer i=(Integer)o;
o=i.longValue();
}
break;
case MEMO:
break;
case MONEY:
sourceValueMeta.setType(ValueMeta.TYPE_BIGNUMBER);
break;
case NUMERIC:
sourceValueMeta.setType(ValueMeta.TYPE_BIGNUMBER);
break;
case SHORT_DATE_TIME:
sourceValueMeta.setType(ValueMeta.TYPE_DATE);
break;
default :
if (o != null) {
o=o.toString();
}
break;
}
valueMetaData.setValueMeta(sourceValueMeta);
if (o != null) valueMetaData.setValueData(o);
return valueMetaData;
}
