{
  meta=(DelayMeta)smi;
  data=(DelayData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    String msgScale;
switch (meta.getScaleTimeCode()) {
case 0:
      msgScale=BaseMessages.getString(PKG,"DelayDialog.MSScaleTime.Label");
    data.Multiple=1;
  break;
case 1:
msgScale=BaseMessages.getString(PKG,"DelayDialog.SScaleTime.Label");
data.Multiple=1000;
break;
case 2:
msgScale=BaseMessages.getString(PKG,"DelayDialog.MnScaleTime.Label");
data.Multiple=60000;
break;
case 3:
msgScale=BaseMessages.getString(PKG,"DelayDialog.HrScaleTime.Label");
data.Multiple=3600000;
break;
default :
msgScale="Unknown Scale";
data.Multiple=1;
}
String timeOut=environmentSubstitute(meta.getTimeOut());
data.timeout=Const.toInt(timeOut,0);
if (log.isDebug()) logDebug(BaseMessages.getString(PKG,"Delay.Log.TimeOut","" + data.timeout,msgScale));
}
if ((data.Multiple < 1000) && (data.timeout > 0)) {
try {
Thread.sleep(data.timeout);
}
 catch (Exception e) {
}
}
 else {
long timeStart=System.currentTimeMillis();
boolean continueLoop=true;
while (continueLoop && !isStopped()) {
long now=System.currentTimeMillis();
if (now >= (timeStart + (data.timeout * data.Multiple))) {
continueLoop=false;
}
 else {
try {
Thread.sleep(1000);
}
 catch (Exception e) {
}
}
}
}
if (log.isDebug()) logDebug(BaseMessages.getString(PKG,"Delay.WaitTimeIsElapsed.Label"));
putRow(getInputRowMeta(),r);
if (checkFeedback(getLinesRead())) {
if (log.isDetailed()) logDetailed(BaseMessages.getString(PKG,"Delay.Log.LineNumber","" + getLinesRead()));
}
return true;
}
