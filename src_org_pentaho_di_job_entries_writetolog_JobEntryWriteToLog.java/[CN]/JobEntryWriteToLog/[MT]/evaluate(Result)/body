{
  LogWriterObject logWriterObject=new LogWriterObject(getRealLogSubject(),this);
  LogChannelInterface logChannel=logWriterObject.getLogChannel();
  try {
    loglevel=loglevel + 1;
    if (loglevel == LogWriter.LOG_LEVEL_ERROR) {
      logChannel.logError(getRealLogMessage() + Const.CR);
    }
 else     if (loglevel == LogWriter.LOG_LEVEL_MINIMAL) {
      logChannel.logMinimal(getRealLogMessage() + Const.CR);
    }
 else     if (loglevel == LogWriter.LOG_LEVEL_BASIC) {
      logChannel.logBasic(getRealLogMessage() + Const.CR);
    }
 else     if (loglevel == LogWriter.LOG_LEVEL_DETAILED) {
      logChannel.logDetailed(getRealLogMessage() + Const.CR);
    }
 else     if (loglevel == LogWriter.LOG_LEVEL_DEBUG) {
      logChannel.logDebug(getRealLogMessage() + Const.CR);
    }
 else     if (loglevel == LogWriter.LOG_LEVEL_ROWLEVEL) {
      logChannel.logRowlevel(getRealLogMessage() + Const.CR);
    }
    return true;
  }
 catch (  Exception e) {
    result.setNrErrors(1);
    log.logError(BaseMessages.getString(PKG,"WriteToLog.Error.Label"),BaseMessages.getString(PKG,"WriteToLog.Error.Description") + " : " + e.toString());
    return false;
  }
}
