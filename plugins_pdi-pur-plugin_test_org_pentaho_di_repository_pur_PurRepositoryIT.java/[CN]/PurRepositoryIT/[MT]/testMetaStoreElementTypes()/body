{
  IMetaStore metaStore=repository.getMetaStore();
  assertNotNull(metaStore);
  String ns=PentahoDefaults.NAMESPACE;
  assertEquals(1,metaStore.getNamespaces().size());
  assertEquals(true,metaStore.namespaceExists(ns));
  IMetaStoreElementType elementType=metaStore.newElementType(ns);
  elementType.setName(PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_NAME);
  elementType.setDescription(PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_DESCRIPTION);
  metaStore.createElementType(ns,elementType);
  IMetaStoreElementType verifyElementType=metaStore.getElementType(ns,elementType.getId());
  assertEquals(PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_NAME,verifyElementType.getName());
  assertEquals(PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_DESCRIPTION,verifyElementType.getDescription());
  verifyElementType=metaStore.getElementTypeByName(ns,PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_NAME);
  assertEquals(PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_NAME,verifyElementType.getName());
  assertEquals(PentahoDefaults.KETTLE_DATA_SERVICE_ELEMENT_TYPE_DESCRIPTION,verifyElementType.getDescription());
  List<String> ids=metaStore.getElementTypeIds(ns);
  assertNotNull(ids);
  assertEquals(1,ids.size());
  assertEquals(elementType.getId(),ids.get(0));
  try {
    metaStore.deleteNamespace(ns);
    fail("The namespace deletion didn't cause an exception because there are still an element type in it");
  }
 catch (  MetaStoreDependenciesExistsException e) {
    assertNotNull(e.getDependencies());
    assertEquals(1,e.getDependencies().size());
    assertEquals(elementType.getId(),e.getDependencies().get(0));
  }
  metaStore.deleteElementType(ns,elementType);
  assertEquals(0,metaStore.getElementTypes(ns).size());
  metaStore.deleteNamespace(ns);
}
