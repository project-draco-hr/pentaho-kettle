{
  SessionFactory jcrSessionFactory=(SessionFactory)applicationContext.getBean("jcrSessionFactory");
  testJcrTemplate=new JcrTemplate(jcrSessionFactory);
  testJcrTemplate.setAllowCreate(true);
  testJcrTemplate.setExposeNativeSession(true);
  repositoryAdminUsername=(String)applicationContext.getBean("repositoryAdminUsername");
  superAdminRoleName=(String)applicationContext.getBean("superAdminAuthorityName");
  sysAdminUserName=(String)applicationContext.getBean("superAdminUserName");
  tenantAuthenticatedRoleName=(String)applicationContext.getBean("singleTenantAuthenticatedAuthorityName");
  singleTenantAdminRoleName=(String)applicationContext.getBean("singleTenantAdminAuthorityName");
  tenantManager=(ITenantManager)applicationContext.getBean("tenantMgrProxy");
  roleBindingDaoTarget=(IRoleAuthorizationPolicyRoleBindingDao)applicationContext.getBean("roleAuthorizationPolicyRoleBindingDaoTarget");
  authorizationPolicy=(IAuthorizationPolicy)applicationContext.getBean("authorizationPolicy");
  repo=(IUnifiedRepository)applicationContext.getBean("unifiedRepository");
  userRoleDao=(IUserRoleDao)applicationContext.getBean("userRoleDao");
  repositoryFileDao=(IRepositoryFileDao)applicationContext.getBean("repositoryFileDao");
  testUserRoleDao=userRoleDao;
  repositoryLifecyleManager=(IBackingRepositoryLifecycleManager)applicationContext.getBean("defaultBackingRepositoryLifecycleManager");
  txnTemplate=(TransactionTemplate)applicationContext.getBean("jcrTransactionTemplate");
  TestPrincipalProvider.userRoleDao=testUserRoleDao;
  TestPrincipalProvider.adminCredentialsStrategy=(CredentialsStrategy)applicationContext.getBean("jcrAdminCredentialsStrategy");
  TestPrincipalProvider.repository=(Repository)applicationContext.getBean("jcrRepository");
}
