{
  EnvUtil.environmentInit();
  StepLoader.getInstance().read();
  LogWriter.getInstance(LogWriter.LOG_LEVEL_ERROR);
  TransMeta transMeta=new TransMeta("experimental_test/org/pentaho/di/run/rowgenerator/GenerateRows.ktr");
  System.out.println("Name of transformation: " + transMeta.getName());
  System.out.println("Transformation description: " + Const.NVL(transMeta.getDescription(),""));
  long startTime=System.currentTimeMillis();
  Trans trans=new Trans(LogWriter.getInstance(),transMeta);
  trans.execute(null);
  trans.waitUntilFinished();
  Result result=trans.getResult();
  assertTrue(result.getNrErrors() == 0);
  long stopTime=System.currentTimeMillis();
  RowGeneratorMeta rowGeneratorMeta=(RowGeneratorMeta)transMeta.findStep("Generate Rows").getStepMetaInterface();
  double seconds=(double)(stopTime - startTime) / 1000;
  long records=Long.parseLong(rowGeneratorMeta.getRowLimit());
  double speed=(double)records / (seconds);
  System.out.println("records : " + records);
  System.out.println("runtime : " + seconds);
  System.out.println("speed   : " + speed);
}
