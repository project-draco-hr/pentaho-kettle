{
  List<LogicalColumn> keyColumns=new ArrayList<LogicalColumn>();
  List<LogicalTable> dimensionTables=ConceptUtil.findLogicalTables(logicalModel,TableType.DIMENSION);
  for (  LogicalTable dimensionTable : dimensionTables) {
    keyColumns.addAll(ConceptUtil.findLogicalColumns(dimensionTable,AttributeType.SMART_TECHNICAL_KEY));
    keyColumns.addAll(ConceptUtil.findLogicalColumns(dimensionTable,AttributeType.TECHNICAL_KEY));
  }
  for (  LogicalColumn keyColumn : keyColumns) {
    LogicalColumn column=new LogicalColumn();
    String dimensionName=ConceptUtil.getName(keyColumn.getLogicalTable(),locale);
    column.setName(new LocalizedString(locale,dimensionName + " TK"));
    column.setDescription(new LocalizedString(locale,ConceptUtil.getDescription(keyColumn,locale)));
    column.setProperty(DefaultIDs.LOGICAL_COLUMN_PHYSICAL_COLUMN_NAME,dimensionName.toLowerCase().replace(' ','_') + "_tk");
    column.setProperty(DefaultIDs.LOGICAL_COLUMN_ATTRIBUTE_TYPE,AttributeType.TECHNICAL_KEY.name());
    column.setDataType(keyColumn.getDataType());
    column.setProperty(DefaultIDs.LOGICAL_COLUMN_DIMENSION_NAME,dimensionName);
    column.setProperty(DefaultIDs.LOGICAL_COLUMN_LENGTH,ConceptUtil.getString(keyColumn,DefaultIDs.LOGICAL_COLUMN_LENGTH));
    column.setProperty(DefaultIDs.LOGICAL_COLUMN_LENGTH,ConceptUtil.getString(keyColumn,DefaultIDs.LOGICAL_COLUMN_LENGTH));
    column.setProperty(DefaultIDs.LOGICAL_COLUMN_CONVERSION_REMARKS,"Key to dimension '" + dimensionName + "'");
    addLogicalColumnToFactAttributesList(column);
  }
  wFactAttributes.removeEmptyRows();
  wFactAttributes.setRowNums();
  wFactAttributes.optWidth(true);
  getRelationshipsFromFact();
}
