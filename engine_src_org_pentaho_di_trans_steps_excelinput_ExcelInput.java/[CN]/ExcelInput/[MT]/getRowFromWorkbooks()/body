{
  Object[] retval=null;
  try {
    if (data.workbook == null) {
      data.file=data.files.getFile(data.filenr);
      data.filename=KettleVFS.getFilename(data.file);
      if (meta.getShortFileNameField() != null && meta.getShortFileNameField().length() > 0) {
        data.shortFilename=data.file.getName().getBaseName();
      }
      if (meta.getPathField() != null && meta.getPathField().length() > 0) {
        data.path=KettleVFS.getFilename(data.file.getParent());
      }
      if (meta.isHiddenField() != null && meta.isHiddenField().length() > 0) {
        data.hidden=data.file.isHidden();
      }
      if (meta.getExtensionField() != null && meta.getExtensionField().length() > 0) {
        data.extension=data.file.getName().getExtension();
      }
      if (meta.getLastModificationDateField() != null && meta.getLastModificationDateField().length() > 0) {
        data.lastModificationDateTime=new Date(data.file.getContent().getLastModifiedTime());
      }
      if (meta.getUriField() != null && meta.getUriField().length() > 0) {
        data.uriName=data.file.getName().getURI();
      }
      if (meta.getRootUriField() != null && meta.getRootUriField().length() > 0) {
        data.rootUriName=data.file.getName().getRootURI();
      }
      if (meta.getSizeField() != null && meta.getSizeField().length() > 0) {
        data.size=new Long(data.file.getContent().getSize());
      }
      if (meta.isAddResultFile()) {
        ResultFile resultFile=new ResultFile(ResultFile.FILE_TYPE_GENERAL,data.file,getTransMeta().getName(),toString());
        resultFile.setComment(BaseMessages.getString(PKG,"ExcelInput.Log.FileReadByStep"));
        addResultFile(resultFile);
      }
      if (log.isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"ExcelInput.Log.OpeningFile","" + data.filenr + " : "+ data.filename));
      }
      data.workbook=WorkbookFactory.getWorkbook(meta.getSpreadSheetType(),data.filename,meta.getEncoding());
      data.errorHandler.handleFile(data.file);
      data.sheetnr=0;
      if (meta.readAllSheets()) {
        data.sheetNames=data.workbook.getSheetNames();
        data.startColumn=new int[data.sheetNames.length];
        data.startRow=new int[data.sheetNames.length];
        for (int i=0; i < data.sheetNames.length; i++) {
          data.startColumn[i]=data.defaultStartColumn;
          data.startRow[i]=data.defaultStartRow;
        }
      }
    }
    boolean nextsheet=false;
    if (log.isDebug()) {
      logDetailed(BaseMessages.getString(PKG,"ExcelInput.Log.GetSheet","" + data.filenr + "."+ data.sheetnr));
    }
    String sheetName=data.sheetNames[data.sheetnr];
    KSheet sheet=data.workbook.getSheet(sheetName);
    if (sheet != null) {
      if (data.rownr < 0) {
        data.rownr=data.startRow[data.sheetnr];
        if (meta.startsWithHeader()) {
          data.rownr++;
        }
      }
      data.colnr=data.startColumn[data.sheetnr];
      try {
        KCell[] line=sheet.getRow(data.rownr);
        int lineNr=++data.rownr;
        if (!data.filePlayList.isProcessingNeeded(data.file,lineNr,sheetName)) {
          retval=null;
        }
 else {
          if (log.isRowLevel()) {
            logRowlevel(BaseMessages.getString(PKG,"ExcelInput.Log.GetLine","" + lineNr,data.filenr + "." + data.sheetnr));
          }
          if (log.isRowLevel()) {
            logRowlevel(BaseMessages.getString(PKG,"ExcelInput.Log.ReadLineWith","" + line.length));
          }
          ExcelInputRow excelInputRow=new ExcelInputRow(sheet.getName(),lineNr,line);
          Object[] r=fillRow(data.colnr,excelInputRow);
          if (log.isRowLevel()) {
            logRowlevel(BaseMessages.getString(PKG,"ExcelInput.Log.ConvertedLinToRow","" + lineNr,data.outputRowMeta.getString(r)));
          }
          boolean isEmpty=isLineEmpty(line);
          if (!isEmpty || !meta.ignoreEmptyRows()) {
            retval=r;
          }
 else {
            if (data.rownr > sheet.getRows()) {
              nextsheet=true;
            }
          }
          if (isEmpty && meta.stopOnEmpty()) {
            nextsheet=true;
          }
        }
      }
 catch (      ArrayIndexOutOfBoundsException e) {
        if (log.isRowLevel()) {
          logRowlevel(BaseMessages.getString(PKG,"ExcelInput.Log.OutOfIndex"));
        }
        nextsheet=true;
      }
    }
 else {
      nextsheet=true;
    }
    if (nextsheet) {
      data.sheetnr++;
      data.rownr=-1;
      data.previousRow=null;
      if (data.sheetnr >= data.sheetNames.length) {
        jumpToNextFile();
      }
    }
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"ExcelInput.Error.ProcessRowFromExcel",data.filename + "",e.toString()),e);
    setErrors(1);
    stopAll();
    return null;
  }
  return retval;
}
