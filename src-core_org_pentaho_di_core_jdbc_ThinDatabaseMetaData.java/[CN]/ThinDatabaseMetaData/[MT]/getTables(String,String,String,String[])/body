{
  if (!Const.isEmpty(types) && Const.indexOfString("TABLE",types) < 0) {
    System.out.println("-------------> Requesting table types: " + Arrays.toString(types));
    System.out.println("-------------> We only serve up table information, it's all we have!");
    return new RowsResultSet(new RowMeta(),new ArrayList<Object[]>());
  }
  if (Const.isEmpty(tableNamePattern)) {
    System.out.println("-------------> Listing all tables!");
  }
 else {
    System.out.println("-------------> Looking for table " + tableNamePattern);
  }
  try {
    List<ThinServiceInformation> services=getServiceInformation();
    RowMetaInterface rowMeta=new RowMeta();
    rowMeta.addValueMeta(new ValueMeta("TABLE_CAT",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("TABLE_SCHEM",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("TABLE_NAME",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("TABLE_TYPE",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("REMARKS",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("TYPE_CAT",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("TYPE_SCHEM",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("TYPE_NAME",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("SELF_REFERENCING_COL_NAME",ValueMetaInterface.TYPE_STRING));
    rowMeta.addValueMeta(new ValueMeta("REF_GENERATION",ValueMetaInterface.TYPE_STRING));
    List<Object[]> rows=new ArrayList<Object[]>();
    for (    ThinServiceInformation service : services) {
      if (Const.isEmpty(tableNamePattern) || service.getName().equalsIgnoreCase(tableNamePattern)) {
        Object[] row=RowDataUtil.allocateRowData(rowMeta.size());
        int index=0;
        row[index++]=null;
        row[index++]=SCHEMA_NAME_KETTLE;
        row[index++]=service.getName();
        row[index++]="TABLE";
        row[index++]=null;
        row[index++]=null;
        row[index++]=null;
        row[index++]=null;
        row[index++]=null;
        row[index++]=null;
        rows.add(row);
      }
    }
    System.out.println("-------------> Found " + rows.size() + " tables for the rows resultset.");
    return new RowsResultSet(rowMeta,rows);
  }
 catch (  Exception e) {
    LogChannel.GENERAL.logError("Error getting services list from server",e);
    throw new SQLException(e);
  }
}
