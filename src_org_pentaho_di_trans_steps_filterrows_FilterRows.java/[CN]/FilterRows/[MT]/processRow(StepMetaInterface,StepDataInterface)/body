{
  meta=(FilterRowsMeta)smi;
  data=(FilterRowsData)sdi;
  boolean keep;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(getInputRowMeta(),getStepname(),null,null,this);
    if (data.chosesTargetSteps) {
      data.trueRowSet=findOutputRowSet(getStepname(),getCopy(),meta.getSendTrueStepname(),0);
      if (data.trueRowSet == null) {
        throw new KettleException(Messages.getString("FilterRows.Log.TargetStepInvalid",meta.getSendTrueStepname()));
      }
      data.falseRowSet=findOutputRowSet(getStepname(),getCopy(),meta.getSendFalseStepname(),0);
      if (data.falseRowSet == null) {
        throw new KettleException(Messages.getString("FilterRows.Log.TargetStepInvalid",meta.getSendFalseStepname()));
      }
    }
  }
  keep=keepRow(getInputRowMeta(),r);
  if (!data.chosesTargetSteps) {
    if (keep) {
      putRow(data.outputRowMeta,r);
    }
  }
 else {
    if (keep) {
      putRowTo(data.outputRowMeta,r,data.trueRowSet);
    }
 else {
      putRowTo(data.outputRowMeta,r,data.falseRowSet);
    }
  }
  if (checkFeedback(linesRead))   logBasic(Messages.getString("FilterRows.Log.LineNumber") + linesRead);
  return true;
}
