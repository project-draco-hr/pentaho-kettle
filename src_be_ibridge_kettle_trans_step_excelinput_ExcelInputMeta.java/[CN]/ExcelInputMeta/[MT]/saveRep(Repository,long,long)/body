{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"header",startsWithHeader);
    rep.saveStepAttribute(id_transformation,id_step,"noempty",ignoreEmptyRows);
    rep.saveStepAttribute(id_transformation,id_step,"stoponempty",stopOnEmpty);
    rep.saveStepAttribute(id_transformation,id_step,"filefield",fileField);
    rep.saveStepAttribute(id_transformation,id_step,"sheetfield",sheetField);
    rep.saveStepAttribute(id_transformation,id_step,"rownumfield",rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    for (int i=0; i < fileName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"file_name",fileName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_mask",fileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_required",fileRequired[i]);
    }
    for (int i=0; i < sheetName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"sheet_name",sheetName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"sheet_startrow",startRow[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"sheet_startcol",startColumn[i]);
    }
    for (int i=0; i < field.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field[i].getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",field[i].getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field[i].getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field[i].getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",field[i].getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_repeat",field[i].isRepeated());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field[i].getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field[i].getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field[i].getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field[i].getGroupSymbol());
    }
    rep.saveStepAttribute(id_transformation,id_step,"strict_types",strictTypes);
    rep.saveStepAttribute(id_transformation,id_step,"error_ignored",errorIgnored);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_skipped",errorLineSkipped);
    rep.saveStepAttribute(id_transformation,id_step,"bad_line_files_dest_dir",warningFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"bad_line_files_ext",warningFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_files_dest_dir",errorFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"error_line_files_ext",errorFilesExtension);
    rep.saveStepAttribute(id_transformation,id_step,"line_number_files_dest_dir",lineNumberFilesDestinationDirectory);
    rep.saveStepAttribute(id_transformation,id_step,"line_number_files_ext",lineNumberFilesExtension);
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
