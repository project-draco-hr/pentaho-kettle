{
  try {
    int nrfields=rep.countNrStepAttributes(id_step,"field_name");
    int nrremove=rep.countNrStepAttributes(id_step,"remove_name");
    int nrmeta=rep.countNrStepAttributes(id_step,"meta_name");
    allocate(nrfields,nrremove,nrmeta);
    for (int i=0; i < nrfields; i++) {
      selectName[i]=rep.getStepAttributeString(id_step,i,"field_name");
      selectRename[i]=rep.getStepAttributeString(id_step,i,"field_rename");
      selectLength[i]=(int)rep.getStepAttributeInteger(id_step,i,"field_length");
      selectPrecision[i]=(int)rep.getStepAttributeInteger(id_step,i,"field_precision");
    }
    selectingAndSortingUnspecifiedFields=rep.getStepAttributeBoolean(id_step,"select_unspecified");
    for (int i=0; i < nrremove; i++) {
      deleteName[i]=rep.getStepAttributeString(id_step,i,"remove_name");
    }
    for (int i=0; i < nrmeta; i++) {
      meta[i]=new SelectMetadataChange();
      meta[i].setName(rep.getStepAttributeString(id_step,i,"meta_name"));
      meta[i].setRename(rep.getStepAttributeString(id_step,i,"meta_rename"));
      meta[i].setType((int)rep.getStepAttributeInteger(id_step,i,"meta_type"));
      meta[i].setLength((int)rep.getStepAttributeInteger(id_step,i,"meta_length"));
      meta[i].setPrecision((int)rep.getStepAttributeInteger(id_step,i,"meta_precision"));
      meta[i].setStorageType(ValueMeta.getStorageType(rep.getStepAttributeString(id_step,i,"meta_storage_type")));
      meta[i].setConversionMask(rep.getStepAttributeString(id_step,i,"meta_conversion_mask"));
      meta[i].setEncoding(rep.getStepAttributeString(id_step,i,"meta_encoding"));
      meta[i].setDecimalSymbol(rep.getStepAttributeString(id_step,i,"meta_decimal_symbol"));
      meta[i].setGroupingSymbol(rep.getStepAttributeString(id_step,i,"meta_grouping_symbol"));
      meta[i].setCurrencySymbol(rep.getStepAttributeString(id_step,i,"meta_currency_symbol"));
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SelectValuesMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository"),e);
  }
}
