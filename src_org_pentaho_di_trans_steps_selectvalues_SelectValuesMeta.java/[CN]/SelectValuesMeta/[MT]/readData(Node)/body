{
  try {
    Node fields=XMLHandler.getSubNode(step,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    int nrremove=XMLHandler.countNodes(fields,"remove");
    int nrmeta=XMLHandler.countNodes(fields,"meta");
    allocate(nrfields,nrremove,nrmeta);
    for (int i=0; i < nrfields; i++) {
      Node line=XMLHandler.getSubNodeByNr(fields,"field",i);
      selectName[i]=XMLHandler.getTagValue(line,"name");
      selectRename[i]=XMLHandler.getTagValue(line,"rename");
      selectLength[i]=Const.toInt(XMLHandler.getTagValue(line,"length"),-2);
      selectPrecision[i]=Const.toInt(XMLHandler.getTagValue(line,"precision"),-2);
    }
    selectingAndSortingUnspecifiedFields="Y".equalsIgnoreCase(XMLHandler.getTagValue(fields,"select_unspecified"));
    for (int i=0; i < nrremove; i++) {
      Node line=XMLHandler.getSubNodeByNr(fields,"remove",i);
      deleteName[i]=XMLHandler.getTagValue(line,"name");
    }
    for (int i=0; i < nrmeta; i++) {
      Node line=XMLHandler.getSubNodeByNr(fields,"meta",i);
      metaName[i]=XMLHandler.getTagValue(line,"name");
      metaRename[i]=XMLHandler.getTagValue(line,"rename");
      metaType[i]=ValueMeta.getType(XMLHandler.getTagValue(line,"type"));
      metaLength[i]=Const.toInt(XMLHandler.getTagValue(line,"length"),-2);
      metaPrecision[i]=Const.toInt(XMLHandler.getTagValue(line,"precision"),-2);
      metaStorageType[i]=ValueMeta.getStorageType(XMLHandler.getTagValue(line,"storage_type"));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException(Messages.getString("SelectValuesMeta.Exception.UnableToReadStepInfoFromXML"),e);
  }
}
