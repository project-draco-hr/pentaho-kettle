{
  try {
    rep.saveJobEntryAttribute(id_job,getObjectId(),"servername",serverName);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"serverport",serverPort);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"username",userName);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"sftpdirectory",sftpDirectory);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"localdirectory",localDirectory);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"wildcard",wildcard);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"copyprevious",copyprevious);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"copypreviousfiles",copypreviousfiles);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"addFilenameResut",addFilenameResut);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"usekeyfilename",usekeyfilename);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"keyfilename",keyfilename);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"keyfilepass",Encr.encryptPasswordIfNotUsingVariables(keyfilepass));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"compression",compression);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxyType",proxyType);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxyHost",proxyHost);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxyPort",proxyPort);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxyUsername",proxyUsername);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxyPassword",Encr.encryptPasswordIfNotUsingVariables(proxyPassword));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"aftersftpput",getAfterSFTPPutCode(getAfterFTPS()));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"createRemoteFolder",createRemoteFolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"destinationfolder",destinationfolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"createdestinationfolder",createDestinationFolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"successWhenNoFile",successWhenNoFile);
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException("Unable to load job entry of type 'SFTPPUT' to the repository for id_job=" + id_job,dbe);
  }
}
