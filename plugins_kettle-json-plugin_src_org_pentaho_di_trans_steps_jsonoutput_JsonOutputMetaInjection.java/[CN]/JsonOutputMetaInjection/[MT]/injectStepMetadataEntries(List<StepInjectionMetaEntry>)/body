{
  List<String> jsonFields=new ArrayList<String>();
  List<String> jsonElements=new ArrayList<String>();
  for (  StepInjectionMetaEntry lookFields : all) {
    Entry fieldsEntry=Entry.findEntry(lookFields.getKey());
    if (fieldsEntry == null) {
      continue;
    }
    String lookValue=(String)lookFields.getValue();
switch (fieldsEntry) {
case JSON_FIELDS:
      for (      StepInjectionMetaEntry lookField : lookFields.getDetails()) {
        Entry fieldEntry=Entry.findEntry(lookField.getKey());
        if (fieldEntry == Entry.JSON_FIELD) {
          String jsonFieldname=null;
          String jsonElement=null;
          List<StepInjectionMetaEntry> entries=lookField.getDetails();
          for (          StepInjectionMetaEntry entry : entries) {
            Entry metaEntry=Entry.findEntry(entry.getKey());
            if (metaEntry != null) {
              String value=(String)entry.getValue();
switch (metaEntry) {
case JSON_FIELDNAME:
                jsonFieldname=value;
              break;
case JSON_ELEMENTNAME:
            jsonElement=value;
          break;
default :
        break;
    }
  }
}
jsonFields.add(jsonFieldname);
jsonElements.add(jsonElement);
}
}
break;
case OPERATION:
meta.setOperationType(meta.getOperationTypeByDesc(lookValue));
break;
case JSON_BLOC_NAME:
meta.setJsonBloc(lookValue);
break;
case NR_ROWS_IN_BLOC:
meta.setNrRowsInBloc(lookValue);
break;
case OUTPUT_VALUE:
meta.setOutputValue(lookValue);
break;
case COMPATIBILITY_MODE:
meta.setCompatibilityMode("Y".equalsIgnoreCase(lookValue));
break;
case FILE_NAME:
meta.setFileName(lookValue);
break;
case APPEND:
meta.setFileAppended("Y".equalsIgnoreCase(lookValue));
break;
case CREATE_PARENT_FOLDER:
meta.setCreateParentFolder("Y".equalsIgnoreCase(lookValue));
break;
case DONT_CREATE_AT_START:
meta.setDoNotOpenNewFileInit("Y".equalsIgnoreCase(lookValue));
break;
case EXTENSION:
meta.setExtension(lookValue);
break;
case ENCODING:
meta.setEncoding(lookValue);
break;
case PASS_TO_SERVLET:
meta.setServletOutput("Y".equalsIgnoreCase(lookValue));
break;
case INC_DATE_IN_FILENAME:
meta.setDateInFilename("Y".equalsIgnoreCase(lookValue));
break;
case INC_TIME_IN_FILENAME:
meta.setTimeInFilename("Y".equalsIgnoreCase(lookValue));
break;
case ADD_TO_RESULT:
meta.setAddToResult("Y".equalsIgnoreCase(lookValue));
break;
default :
break;
}
}
if (jsonFields.size() > 0) {
JsonOutputField[] jof=new JsonOutputField[jsonFields.size()];
Iterator<String> iJsonFields=jsonFields.iterator();
Iterator<String> iJsonElements=jsonElements.iterator();
int i=0;
while (iJsonFields.hasNext()) {
JsonOutputField field=new JsonOutputField();
field.setFieldName(iJsonFields.next());
field.setElementName(iJsonElements.next());
jof[i]=field;
i++;
}
meta.setOutputFields(jof);
}
}
