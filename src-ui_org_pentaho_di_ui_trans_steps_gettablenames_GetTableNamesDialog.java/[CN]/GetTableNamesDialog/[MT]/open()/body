{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabase() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wSettings=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSettings);
  wSettings.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.wSettings.Label"));
  FormLayout SettingsgroupLayout=new FormLayout();
  SettingsgroupLayout.marginWidth=10;
  SettingsgroupLayout.marginHeight=10;
  wSettings.setLayout(SettingsgroupLayout);
  wlincludeTable=new Label(wSettings,SWT.RIGHT);
  wlincludeTable.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeTable.Label"));
  props.setLook(wlincludeTable);
  fdlincludeTable=new FormData();
  fdlincludeTable.left=new FormAttachment(0,-margin);
  fdlincludeTable.top=new FormAttachment(wSettings,margin);
  fdlincludeTable.right=new FormAttachment(middle,-2 * margin);
  wlincludeTable.setLayoutData(fdlincludeTable);
  wincludeTable=new Button(wSettings,SWT.CHECK);
  props.setLook(wincludeTable);
  wincludeTable.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeTable.Tooltip"));
  fdincludeTable=new FormData();
  fdincludeTable.left=new FormAttachment(middle,-margin);
  fdincludeTable.top=new FormAttachment(wConnection,margin);
  wincludeTable.setLayoutData(fdincludeTable);
  SelectionAdapter lincludeTable=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wincludeTable.addSelectionListener(lincludeTable);
  wlincludeView=new Label(wSettings,SWT.RIGHT);
  wlincludeView.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeView.Label"));
  props.setLook(wlincludeView);
  fdlincludeView=new FormData();
  fdlincludeView.left=new FormAttachment(0,-margin);
  fdlincludeView.top=new FormAttachment(wincludeTable,margin);
  fdlincludeView.right=new FormAttachment(middle,-2 * margin);
  wlincludeView.setLayoutData(fdlincludeView);
  wincludeView=new Button(wSettings,SWT.CHECK);
  props.setLook(wincludeView);
  wincludeView.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeView.Tooltip"));
  fdincludeView=new FormData();
  fdincludeView.left=new FormAttachment(middle,-margin);
  fdincludeView.top=new FormAttachment(wincludeTable,margin);
  wincludeView.setLayoutData(fdincludeView);
  SelectionAdapter lincludeView=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wincludeView.addSelectionListener(lincludeView);
  wlincludeProcedure=new Label(wSettings,SWT.RIGHT);
  wlincludeProcedure.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeProcedure.Label"));
  props.setLook(wlincludeProcedure);
  fdlincludeProcedure=new FormData();
  fdlincludeProcedure.left=new FormAttachment(0,-margin);
  fdlincludeProcedure.top=new FormAttachment(wincludeView,margin);
  fdlincludeProcedure.right=new FormAttachment(middle,-2 * margin);
  wlincludeProcedure.setLayoutData(fdlincludeProcedure);
  wincludeProcedure=new Button(wSettings,SWT.CHECK);
  props.setLook(wincludeProcedure);
  wincludeProcedure.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeProcedure.Tooltip"));
  fdincludeProcedure=new FormData();
  fdincludeProcedure.left=new FormAttachment(middle,-margin);
  fdincludeProcedure.top=new FormAttachment(wincludeView,margin);
  wincludeProcedure.setLayoutData(fdincludeProcedure);
  SelectionAdapter lincludeProcedure=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wincludeProcedure.addSelectionListener(lincludeProcedure);
  wlincludeSynonym=new Label(wSettings,SWT.RIGHT);
  wlincludeSynonym.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeSynonym.Label"));
  props.setLook(wlincludeSynonym);
  fdlincludeSynonym=new FormData();
  fdlincludeSynonym.left=new FormAttachment(0,-margin);
  fdlincludeSynonym.top=new FormAttachment(wincludeProcedure,margin);
  fdlincludeSynonym.right=new FormAttachment(middle,-2 * margin);
  wlincludeSynonym.setLayoutData(fdlincludeSynonym);
  wincludeSynonym=new Button(wSettings,SWT.CHECK);
  props.setLook(wincludeSynonym);
  wincludeSynonym.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.includeSynonym.Tooltip"));
  fdincludeSynonym=new FormData();
  fdincludeSynonym.left=new FormAttachment(middle,-margin);
  fdincludeSynonym.top=new FormAttachment(wincludeProcedure,margin);
  wincludeSynonym.setLayoutData(fdincludeSynonym);
  SelectionAdapter lincludeSynonym=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wincludeSynonym.addSelectionListener(lincludeSynonym);
  FormData fdSettings=new FormData();
  fdSettings.left=new FormAttachment(0,margin);
  fdSettings.top=new FormAttachment(wConnection,2 * margin);
  fdSettings.right=new FormAttachment(100,-margin);
  wSettings.setLayoutData(fdSettings);
  wOutputFields=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wOutputFields);
  wOutputFields.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.wOutputFields.Label"));
  FormLayout OutputFieldsgroupLayout=new FormLayout();
  OutputFieldsgroupLayout.marginWidth=10;
  OutputFieldsgroupLayout.marginHeight=10;
  wOutputFields.setLayout(OutputFieldsgroupLayout);
  wlTablenameField=new Label(wOutputFields,SWT.RIGHT);
  wlTablenameField.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.TablenameFieldName.Label"));
  props.setLook(wlTablenameField);
  fdlTablenameField=new FormData();
  fdlTablenameField.left=new FormAttachment(0,0);
  fdlTablenameField.right=new FormAttachment(middle,-margin);
  fdlTablenameField.top=new FormAttachment(wSettings,margin * 2);
  wlTablenameField.setLayoutData(fdlTablenameField);
  wTablenameField=new Text(wOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wTablenameField.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.TablenameFieldName.Tooltip"));
  props.setLook(wTablenameField);
  wTablenameField.addModifyListener(lsMod);
  fdTablenameField=new FormData();
  fdTablenameField.left=new FormAttachment(middle,0);
  fdTablenameField.top=new FormAttachment(wSettings,margin * 2);
  fdTablenameField.right=new FormAttachment(100,0);
  wTablenameField.setLayoutData(fdTablenameField);
  wlObjectTypeField=new Label(wOutputFields,SWT.RIGHT);
  wlObjectTypeField.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.ObjectTypeFieldName.Label"));
  props.setLook(wlObjectTypeField);
  fdlObjectTypeField=new FormData();
  fdlObjectTypeField.left=new FormAttachment(0,0);
  fdlObjectTypeField.right=new FormAttachment(middle,-margin);
  fdlObjectTypeField.top=new FormAttachment(wTablenameField,margin);
  wlObjectTypeField.setLayoutData(fdlObjectTypeField);
  wObjectTypeField=new Text(wOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wObjectTypeField.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.ObjectTypeFieldName.Tooltip"));
  props.setLook(wObjectTypeField);
  wObjectTypeField.addModifyListener(lsMod);
  fdObjectTypeField=new FormData();
  fdObjectTypeField.left=new FormAttachment(middle,0);
  fdObjectTypeField.top=new FormAttachment(wTablenameField,margin);
  fdObjectTypeField.right=new FormAttachment(100,0);
  wObjectTypeField.setLayoutData(fdObjectTypeField);
  wlisSystemObjectField=new Label(wOutputFields,SWT.RIGHT);
  wlisSystemObjectField.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.isSystemObjectFieldName.Label"));
  props.setLook(wlisSystemObjectField);
  fdlisSystemObjectField=new FormData();
  fdlisSystemObjectField.left=new FormAttachment(0,0);
  fdlisSystemObjectField.right=new FormAttachment(middle,-margin);
  fdlisSystemObjectField.top=new FormAttachment(wObjectTypeField,margin);
  wlisSystemObjectField.setLayoutData(fdlisSystemObjectField);
  wisSystemObjectField=new Text(wOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wisSystemObjectField.setToolTipText(BaseMessages.getString(PKG,"GetTableNamesDialog.isSystemObjectFieldName.Tooltip"));
  props.setLook(wisSystemObjectField);
  wisSystemObjectField.addModifyListener(lsMod);
  fdisSystemObjectField=new FormData();
  fdisSystemObjectField.left=new FormAttachment(middle,0);
  fdisSystemObjectField.top=new FormAttachment(wObjectTypeField,margin);
  fdisSystemObjectField.right=new FormAttachment(100,0);
  wisSystemObjectField.setLayoutData(fdisSystemObjectField);
  FormData fdOutputFields=new FormData();
  fdOutputFields.left=new FormAttachment(0,margin);
  fdOutputFields.top=new FormAttachment(wSettings,2 * margin);
  fdOutputFields.right=new FormAttachment(100,-margin);
  wOutputFields.setLayoutData(fdOutputFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"GetTableNamesDialog.Preview.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wOutputFields);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wPreview.addListener(SWT.Selection,lsPreview);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
