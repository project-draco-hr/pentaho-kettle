{
  XMLJoin spy=spy(new XMLJoin(smh.stepMeta,smh.stepDataInterface,0,smh.transMeta,smh.trans));
  doReturn(createSourceRowSet(sourceXml)).when(spy).findInputRowSet("source");
  doReturn(createTargetRowSet(targetXml)).when(spy).findInputRowSet("target");
  XMLJoinMeta stepMeta=smh.initStepMetaInterface;
  when(stepMeta.getSourceXMLstep()).thenReturn("source");
  when(stepMeta.getTargetXMLstep()).thenReturn("target");
  when(stepMeta.getSourceXMLfield()).thenReturn("sourceField");
  when(stepMeta.getTargetXMLfield()).thenReturn("targetField");
  when(stepMeta.getValueXMLfield()).thenReturn("resultField");
  when(stepMeta.getTargetXPath()).thenReturn("//root");
  when(stepMeta.isOmitNullValues()).thenReturn(true);
  spy.init(stepMeta,smh.initStepDataInterface);
  spy.addRowListener(new RowAdapter(){
    @Override public void rowWrittenEvent(    RowMetaInterface rowMeta,    Object[] row) throws KettleStepException {
      Assert.assertEquals(expectedXml,row[0]);
    }
  }
);
  Assert.assertTrue(spy.processRow(stepMeta,smh.initStepDataInterface));
  Assert.assertFalse(spy.processRow(stepMeta,smh.initStepDataInterface));
}
