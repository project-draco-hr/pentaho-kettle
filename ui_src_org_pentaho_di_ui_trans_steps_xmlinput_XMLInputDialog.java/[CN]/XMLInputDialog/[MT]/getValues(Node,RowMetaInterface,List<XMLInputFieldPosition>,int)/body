{
  String baseName="";
  for (int p=0; p < path.size(); p++) {
    XMLInputFieldPosition pos=path.get(p);
    String elementName=pos.getName() + pos.getElementNr();
    if (!elementName.startsWith("#")) {
      baseName+=StringUtil.initCap(new ValueMetaAndData("p",elementName).toString());
    }
  }
  if (level == 0) {
    if (XMLHandler.getNodeValue(node) != null) {
      XMLInputFieldPosition attrPos=new XMLInputFieldPosition(node.getNodeName(),XMLInputFieldPosition.XML_ROOT);
      path.add(attrPos);
      String root=StringUtil.initCap(new ValueMetaAndData("a",node.getNodeName()).toString());
      String fieldName=baseName + root;
      if (row.searchValueMeta(fieldName) == null) {
        ValueMeta field=new ValueMeta(fieldName,ValueMeta.TYPE_STRING);
        String encoded=XMLInputFieldPosition.encodePath(path);
        field.setOrigin(encoded);
        row.addValueMeta(field);
      }
      path.remove(path.size() - 1);
    }
  }
  String attributes[]=XMLHandler.getNodeAttributes(node);
  if (attributes != null) {
    for (int i=0; i < attributes.length; i++) {
      XMLInputFieldPosition attrPos=new XMLInputFieldPosition(attributes[i],XMLInputFieldPosition.XML_ATTRIBUTE);
      path.add(attrPos);
      String attribute=StringUtil.initCap(new ValueMetaAndData("a",attributes[i]).toString());
      String fieldName=baseName + attribute;
      if (row.searchValueMeta(fieldName) == null) {
        ValueMeta field=new ValueMeta(fieldName,ValueMeta.TYPE_STRING);
        String encoded=XMLInputFieldPosition.encodePath(path);
        field.setOrigin(encoded);
        row.addValueMeta(field);
      }
      path.remove(path.size() - 1);
    }
  }
  String elements[]=XMLHandler.getNodeElements(node);
  if (elements != null) {
    for (int e=0; e < elements.length; e++) {
      int occurrences=XMLHandler.countNodes(node,elements[e]);
      for (int o=0; o < occurrences; o++) {
        Node itemNode=XMLHandler.getSubNodeByNr(node,elements[e],o,false);
        XMLInputFieldPosition xmlPos=new XMLInputFieldPosition(elements[e],XMLInputFieldPosition.XML_ELEMENT,o + 1);
        path.add(xmlPos);
        getValues(itemNode,row,path,level + 1);
        path.remove(path.size() - 1);
      }
    }
  }
 else {
    if (path.size() > 0) {
      int idxLast=path.size() - 1;
      XMLInputFieldPosition last=path.get(idxLast);
      path.remove(idxLast);
      if (path.size() > 0) {
        String encoded=XMLInputFieldPosition.encodePath(path);
        if (row.searchValueMeta(baseName) == null) {
          ValueMeta value=new ValueMeta(baseName,ValueMeta.TYPE_STRING);
          value.setOrigin(encoded);
          row.addValueMeta(value);
        }
      }
      path.add(last);
    }
  }
}
