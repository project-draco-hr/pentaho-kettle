{
  List<String> attributes=Arrays.asList("includeFilename","filenameField","includeRowNumber","addResultFile","ReadUrl","removeSourceField","IgnoreEmptyFile","doNotFailIfNoFile","ignoreMissingPath","rowNumberField","FileName","FileMask","ExcludeFileMask","FileRequired","IncludeSubFolders","InputFields","rowLimit","inFields","isAFile","FieldValue","ShortFileNameField","PathField","HiddenField","LastModificationDateField","UriField","UriField","ExtensionField","SizeField");
  Map<String,String> getterMap=new HashMap<String,String>();
  Map<String,String> setterMap=new HashMap<String,String>();
  getterMap.put("includeFilename","includeFilename");
  getterMap.put("includeRowNumber","includeRowNumber");
  getterMap.put("addResultFile","addResultFile");
  setterMap.put("HiddenField","setIsHiddenField");
  Map<String,FieldLoadSaveValidator<?>> attributesMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  FieldLoadSaveValidator<?> fileStringArrayValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),FILE_COUNT);
  attributesMap.put("FileName",fileStringArrayValidator);
  attributesMap.put("FileMask",fileStringArrayValidator);
  attributesMap.put("ExcludeFileMask",fileStringArrayValidator);
  attributesMap.put("FileRequired",fileStringArrayValidator);
  attributesMap.put("IncludeSubFolders",fileStringArrayValidator);
  Map<String,FieldLoadSaveValidator<?>> typeMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  typeMap.put(JsonInputField.class.getCanonicalName(),new ArrayLoadSaveValidator<JsonInputField>(new JsonInputFieldValidator()));
  typeMap.put(JsonInputField[].class.getCanonicalName(),new ArrayLoadSaveValidator<JsonInputField>(new JsonInputFieldValidator()));
  LoadSaveTester tester=new LoadSaveTester(JsonInputMeta.class,attributes,new ArrayList<String>(),new ArrayList<String>(),getterMap,setterMap,attributesMap,typeMap,this);
  tester.testSerialization();
}
