{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobSQL.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,null);
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobSQL.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,0);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wConnection=addConnectionLine(shell,wName,middle,margin);
  if (jobEntry.getDatabase() == null && jobMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSQLFromFile=new Label(shell,SWT.RIGHT);
  wlSQLFromFile.setText(Messages.getString("JobSQL.SQLFromFile.Label"));
  props.setLook(wlSQLFromFile);
  fdlSQLFromFile=new FormData();
  fdlSQLFromFile.left=new FormAttachment(0,0);
  fdlSQLFromFile.top=new FormAttachment(wConnection,2 * margin);
  fdlSQLFromFile.right=new FormAttachment(middle,-margin);
  wlSQLFromFile.setLayoutData(fdlSQLFromFile);
  wSQLFromFile=new Button(shell,SWT.CHECK);
  props.setLook(wSQLFromFile);
  wSQLFromFile.setToolTipText(Messages.getString("JobSQL.SQLFromFile.Tooltip"));
  fdSQLFromFile=new FormData();
  fdSQLFromFile.left=new FormAttachment(middle,0);
  fdSQLFromFile.top=new FormAttachment(wConnection,2 * margin);
  fdSQLFromFile.right=new FormAttachment(100,0);
  wSQLFromFile.setLayoutData(fdSQLFromFile);
  wSQLFromFile.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeSQLFromFile();
      jobEntry.setChanged();
    }
  }
);
  wlFilename=new Label(shell,SWT.RIGHT);
  wlFilename.setText(Messages.getString("JobSQL.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wSQLFromFile,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(Messages.getString("System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wSQLFromFile,margin);
  wbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.setToolTipText(Messages.getString("JobSQL.Filename.Tooltip"));
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(wSQLFromFile,margin);
  fdFilename.right=new FormAttachment(wbFilename,-margin);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(jobMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.sql","*.txt","*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlUseSubs=new Label(shell,SWT.RIGHT);
  wlUseSubs.setText(Messages.getString("JobSQL.UseVariableSubst.Label"));
  props.setLook(wlUseSubs);
  fdlUseSubs=new FormData();
  fdlUseSubs.left=new FormAttachment(0,0);
  fdlUseSubs.top=new FormAttachment(wFilename,margin);
  fdlUseSubs.right=new FormAttachment(middle,-margin);
  wlUseSubs.setLayoutData(fdlUseSubs);
  wUseSubs=new Button(shell,SWT.CHECK);
  props.setLook(wUseSubs);
  wUseSubs.setToolTipText(Messages.getString("JobSQL.UseVariableSubst.Tooltip"));
  fdUseSubs=new FormData();
  fdUseSubs.left=new FormAttachment(middle,0);
  fdUseSubs.top=new FormAttachment(wFilename,margin);
  fdUseSubs.right=new FormAttachment(100,0);
  wUseSubs.setLayoutData(fdUseSubs);
  wUseSubs.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setUseVariableSubstitution(!jobEntry.getUseVariableSubstitution());
      jobEntry.setChanged();
    }
  }
);
  wlPosition=new Label(shell,SWT.NONE);
  wlPosition.setText(Messages.getString("JobSQL.LineNr.Label","0"));
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(0,0);
  fdlPosition.right=new FormAttachment(100,0);
  fdlPosition.bottom=new FormAttachment(wOK,-margin);
  wlPosition.setLayoutData(fdlPosition);
  wlSQL=new Label(shell,SWT.NONE);
  wlSQL.setText(Messages.getString("JobSQL.Script.Label"));
  props.setLook(wlSQL);
  fdlSQL=new FormData();
  fdlSQL.left=new FormAttachment(0,0);
  fdlSQL.top=new FormAttachment(wUseSubs,margin);
  wlSQL.setLayoutData(fdlSQL);
  wSQL=new StyledTextComp(shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wSQL,Props.WIDGET_STYLE_FIXED);
  wSQL.addModifyListener(lsMod);
  fdSQL=new FormData();
  fdSQL.left=new FormAttachment(0,0);
  fdSQL.top=new FormAttachment(wlSQL,margin);
  fdSQL.right=new FormAttachment(100,-5);
  fdSQL.bottom=new FormAttachment(wlPosition,-margin);
  wSQL.setLayoutData(fdSQL);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wSQL.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setPosition();
    }
  }
);
  wSQL.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      setPosition();
    }
    public void keyReleased(    KeyEvent e){
      setPosition();
    }
  }
);
  wSQL.addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      setPosition();
    }
    public void focusLost(    FocusEvent e){
      setPosition();
    }
  }
);
  wSQL.addMouseListener(new MouseAdapter(){
    public void mouseDoubleClick(    MouseEvent e){
      setPosition();
    }
    public void mouseDown(    MouseEvent e){
      setPosition();
    }
    public void mouseUp(    MouseEvent e){
      setPosition();
    }
  }
);
  wSQL.addModifyListener(lsMod);
  lineStyler=new SQLValuesHighlight();
  wSQL.addLineStyleListener(lineStyler);
  getData();
  activeSQLFromFile();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobSQLDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
