{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      sftpclient=null;
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobSFTP.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobSFTP.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wServerSettings=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wServerSettings);
  wServerSettings.setText(Messages.getString("JobSFTP.ServerSettings.Group.Label"));
  FormLayout ServerSettingsgroupLayout=new FormLayout();
  ServerSettingsgroupLayout.marginWidth=10;
  ServerSettingsgroupLayout.marginHeight=10;
  wServerSettings.setLayout(ServerSettingsgroupLayout);
  wlServerName=new Label(wServerSettings,SWT.RIGHT);
  wlServerName.setText(Messages.getString("JobSFTP.Server.Label"));
  props.setLook(wlServerName);
  fdlServerName=new FormData();
  fdlServerName.left=new FormAttachment(0,0);
  fdlServerName.top=new FormAttachment(wName,margin);
  fdlServerName.right=new FormAttachment(middle,-margin);
  wlServerName.setLayoutData(fdlServerName);
  wServerName=new TextVar(jobMeta,wServerSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(middle,0);
  fdServerName.top=new FormAttachment(wName,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wlServerPort=new Label(wServerSettings,SWT.RIGHT);
  wlServerPort.setText(Messages.getString("JobSFTP.Port.Label"));
  props.setLook(wlServerPort);
  fdlServerPort=new FormData();
  fdlServerPort.left=new FormAttachment(0,0);
  fdlServerPort.top=new FormAttachment(wServerName,margin);
  fdlServerPort.right=new FormAttachment(middle,-margin);
  wlServerPort.setLayoutData(fdlServerPort);
  wServerPort=new TextVar(jobMeta,wServerSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wServerPort);
  wServerPort.setToolTipText(Messages.getString("JobSFTP.Port.Tooltip"));
  wServerPort.addModifyListener(lsMod);
  fdServerPort=new FormData();
  fdServerPort.left=new FormAttachment(middle,0);
  fdServerPort.top=new FormAttachment(wServerName,margin);
  fdServerPort.right=new FormAttachment(100,0);
  wServerPort.setLayoutData(fdServerPort);
  wlUserName=new Label(wServerSettings,SWT.RIGHT);
  wlUserName.setText(Messages.getString("JobSFTP.Username.Label"));
  props.setLook(wlUserName);
  fdlUserName=new FormData();
  fdlUserName.left=new FormAttachment(0,0);
  fdlUserName.top=new FormAttachment(wServerPort,margin);
  fdlUserName.right=new FormAttachment(middle,-margin);
  wlUserName.setLayoutData(fdlUserName);
  wUserName=new TextVar(jobMeta,wServerSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUserName);
  wUserName.addModifyListener(lsMod);
  fdUserName=new FormData();
  fdUserName.left=new FormAttachment(middle,0);
  fdUserName.top=new FormAttachment(wServerPort,margin);
  fdUserName.right=new FormAttachment(100,0);
  wUserName.setLayoutData(fdUserName);
  wlPassword=new Label(wServerSettings,SWT.RIGHT);
  wlPassword.setText(Messages.getString("JobSFTP.Password.Label"));
  props.setLook(wlPassword);
  fdlPassword=new FormData();
  fdlPassword.left=new FormAttachment(0,0);
  fdlPassword.top=new FormAttachment(wUserName,margin);
  fdlPassword.right=new FormAttachment(middle,-margin);
  wlPassword.setLayoutData(fdlPassword);
  wPassword=new TextVar(jobMeta,wServerSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPassword);
  wPassword.setEchoChar('*');
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(middle,0);
  fdPassword.top=new FormAttachment(wUserName,margin);
  fdPassword.right=new FormAttachment(100,0);
  wPassword.setLayoutData(fdPassword);
  wTest=new Button(wServerSettings,SWT.PUSH);
  wTest.setText(Messages.getString("JobSFTP.TestConnection.Label"));
  props.setLook(wTest);
  fdTest=new FormData();
  wTest.setToolTipText(Messages.getString("JobSFTP.TestConnection.Tooltip"));
  fdTest.top=new FormAttachment(wPassword,margin);
  fdTest.right=new FormAttachment(100,0);
  wTest.setLayoutData(fdTest);
  fdServerSettings=new FormData();
  fdServerSettings.left=new FormAttachment(0,margin);
  fdServerSettings.top=new FormAttachment(wName,margin);
  fdServerSettings.right=new FormAttachment(100,-margin);
  wServerSettings.setLayoutData(fdServerSettings);
  wSourceFiles=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSourceFiles);
  wSourceFiles.setText(Messages.getString("JobSFTP.SourceFiles.Group.Label"));
  FormLayout SourceFilesgroupLayout=new FormLayout();
  SourceFilesgroupLayout.marginWidth=10;
  SourceFilesgroupLayout.marginHeight=10;
  wSourceFiles.setLayout(SourceFilesgroupLayout);
  wlScpDirectory=new Label(wSourceFiles,SWT.RIGHT);
  wlScpDirectory.setText(Messages.getString("JobSFTP.RemoteDir.Label"));
  props.setLook(wlScpDirectory);
  fdlScpDirectory=new FormData();
  fdlScpDirectory.left=new FormAttachment(0,0);
  fdlScpDirectory.top=new FormAttachment(wServerSettings,2 * margin);
  fdlScpDirectory.right=new FormAttachment(middle,-margin);
  wlScpDirectory.setLayoutData(fdlScpDirectory);
  wbTestChangeFolderExists=new Button(wSourceFiles,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTestChangeFolderExists);
  wbTestChangeFolderExists.setText(Messages.getString("JobSFTP.TestFolderExists.Label"));
  fdbTestChangeFolderExists=new FormData();
  fdbTestChangeFolderExists.right=new FormAttachment(100,0);
  fdbTestChangeFolderExists.top=new FormAttachment(wServerSettings,2 * margin);
  wbTestChangeFolderExists.setLayoutData(fdbTestChangeFolderExists);
  wScpDirectory=new TextVar(jobMeta,wSourceFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobSFTP.RemoteDir.Tooltip"));
  props.setLook(wScpDirectory);
  wScpDirectory.addModifyListener(lsMod);
  fdScpDirectory=new FormData();
  fdScpDirectory.left=new FormAttachment(middle,0);
  fdScpDirectory.top=new FormAttachment(wServerSettings,2 * margin);
  fdScpDirectory.right=new FormAttachment(wbTestChangeFolderExists,-margin);
  wScpDirectory.setLayoutData(fdScpDirectory);
  wlWildcard=new Label(wSourceFiles,SWT.RIGHT);
  wlWildcard.setText(Messages.getString("JobSFTP.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wScpDirectory,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,wSourceFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobSFTP.Wildcard.Tooltip"));
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wScpDirectory,margin);
  fdWildcard.right=new FormAttachment(100,0);
  wWildcard.setLayoutData(fdWildcard);
  fdSourceFiles=new FormData();
  fdSourceFiles.left=new FormAttachment(0,margin);
  fdSourceFiles.top=new FormAttachment(wServerSettings,2 * margin);
  fdSourceFiles.right=new FormAttachment(100,-margin);
  wSourceFiles.setLayoutData(fdSourceFiles);
  wTargetFiles=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wTargetFiles);
  wTargetFiles.setText(Messages.getString("JobSFTP.TargetFiles.Group.Label"));
  FormLayout TargetFilesgroupLayout=new FormLayout();
  TargetFilesgroupLayout.marginWidth=10;
  TargetFilesgroupLayout.marginHeight=10;
  wTargetFiles.setLayout(TargetFilesgroupLayout);
  wlTargetDirectory=new Label(wTargetFiles,SWT.RIGHT);
  wlTargetDirectory.setText(Messages.getString("JobSFTP.TargetDir.Label"));
  props.setLook(wlTargetDirectory);
  fdlTargetDirectory=new FormData();
  fdlTargetDirectory.left=new FormAttachment(0,0);
  fdlTargetDirectory.top=new FormAttachment(wSourceFiles,margin);
  fdlTargetDirectory.right=new FormAttachment(middle,-margin);
  wlTargetDirectory.setLayoutData(fdlTargetDirectory);
  wbTargetDirectory=new Button(wTargetFiles,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTargetDirectory);
  wbTargetDirectory.setText(Messages.getString("JobSFTP.BrowseFolders.Label"));
  fdbTargetDirectory=new FormData();
  fdbTargetDirectory.right=new FormAttachment(100,0);
  fdbTargetDirectory.top=new FormAttachment(wSourceFiles,margin);
  wbTargetDirectory.setLayoutData(fdbTargetDirectory);
  wbTargetDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wTargetDirectory.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wTargetDirectory.setText(dir);
      }
    }
  }
);
  wTargetDirectory=new TextVar(jobMeta,wTargetFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobSFTP.TargetDir.Tooltip"));
  props.setLook(wTargetDirectory);
  wTargetDirectory.addModifyListener(lsMod);
  fdTargetDirectory=new FormData();
  fdTargetDirectory.left=new FormAttachment(middle,0);
  fdTargetDirectory.top=new FormAttachment(wSourceFiles,margin);
  fdTargetDirectory.right=new FormAttachment(wbTargetDirectory,-margin);
  wTargetDirectory.setLayoutData(fdTargetDirectory);
  wlCreateTargetFolder=new Label(wTargetFiles,SWT.RIGHT);
  wlCreateTargetFolder.setText(Messages.getString("JobSFTP.CreateTargetFolder.Label"));
  props.setLook(wlCreateTargetFolder);
  fdlCreateTargetFolder=new FormData();
  fdlCreateTargetFolder.left=new FormAttachment(0,0);
  fdlCreateTargetFolder.top=new FormAttachment(wTargetDirectory,margin);
  fdlCreateTargetFolder.right=new FormAttachment(middle,-margin);
  wlCreateTargetFolder.setLayoutData(fdlCreateTargetFolder);
  wCreateTargetFolder=new Button(wTargetFiles,SWT.CHECK);
  wCreateTargetFolder.setToolTipText(Messages.getString("JobSFTP.CreateTargetFolder.Tooltip"));
  props.setLook(wCreateTargetFolder);
  fdCreateTargetFolder=new FormData();
  fdCreateTargetFolder.left=new FormAttachment(middle,0);
  fdCreateTargetFolder.top=new FormAttachment(wTargetDirectory,margin);
  fdCreateTargetFolder.right=new FormAttachment(100,0);
  wCreateTargetFolder.setLayoutData(fdCreateTargetFolder);
  wlRemove=new Label(wTargetFiles,SWT.RIGHT);
  wlRemove.setText(Messages.getString("JobSFTP.RemoveFiles.Label"));
  props.setLook(wlRemove);
  fdlRemove=new FormData();
  fdlRemove.left=new FormAttachment(0,0);
  fdlRemove.top=new FormAttachment(wCreateTargetFolder,margin);
  fdlRemove.right=new FormAttachment(middle,-margin);
  wlRemove.setLayoutData(fdlRemove);
  wRemove=new Button(wTargetFiles,SWT.CHECK);
  props.setLook(wRemove);
  wRemove.setToolTipText(Messages.getString("JobSFTP.RemoveFiles.Tooltip"));
  fdRemove=new FormData();
  fdRemove.left=new FormAttachment(middle,0);
  fdRemove.top=new FormAttachment(wCreateTargetFolder,margin);
  fdRemove.right=new FormAttachment(100,0);
  wRemove.setLayoutData(fdRemove);
  wlAddFilenameToResult=new Label(wTargetFiles,SWT.RIGHT);
  wlAddFilenameToResult.setText(Messages.getString("JobSFTP.AddfilenametoResult.Label"));
  props.setLook(wlAddFilenameToResult);
  fdlAddFilenameToResult=new FormData();
  fdlAddFilenameToResult.left=new FormAttachment(0,0);
  fdlAddFilenameToResult.top=new FormAttachment(wRemove,margin);
  fdlAddFilenameToResult.right=new FormAttachment(middle,-margin);
  wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);
  wAddFilenameToResult=new Button(wTargetFiles,SWT.CHECK);
  wAddFilenameToResult.setToolTipText(Messages.getString("JobSFTP.AddfilenametoResult.Tooltip"));
  props.setLook(wAddFilenameToResult);
  fdAddFilenameToResult=new FormData();
  fdAddFilenameToResult.left=new FormAttachment(middle,0);
  fdAddFilenameToResult.top=new FormAttachment(wRemove,margin);
  fdAddFilenameToResult.right=new FormAttachment(100,0);
  wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);
  fdTargetFiles=new FormData();
  fdTargetFiles.left=new FormAttachment(0,margin);
  fdTargetFiles.top=new FormAttachment(wSourceFiles,margin);
  fdTargetFiles.right=new FormAttachment(100,-margin);
  wTargetFiles.setLayoutData(fdTargetFiles);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTargetFiles);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
;
  lsCheckChangeFolder=new Listener(){
    public void handleEvent(    Event e){
      checkRemoteFolder();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wTest.addListener(SWT.Selection,lsTest);
  wbTestChangeFolderExists.addListener(SWT.Selection,lsCheckChangeFolder);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wServerName.addSelectionListener(lsDef);
  wUserName.addSelectionListener(lsDef);
  wPassword.addSelectionListener(lsDef);
  wScpDirectory.addSelectionListener(lsDef);
  wTargetDirectory.addSelectionListener(lsDef);
  wWildcard.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobSFTPDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
