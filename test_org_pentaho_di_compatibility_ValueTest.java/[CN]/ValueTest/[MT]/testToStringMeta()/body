{
  String result=null;
  Value vs=new Value("Name",Value.VALUE_TYPE_STRING);
  vs.setValue("test");
  result=vs.toStringMeta();
  assertEquals("String",result);
  Value vs1=new Value("Name",Value.VALUE_TYPE_STRING);
  vs1.setValue("test");
  vs1.setLength(0);
  result=vs1.toStringMeta();
  assertEquals("String",result);
  Value vs2=new Value("Name",Value.VALUE_TYPE_STRING);
  vs2.setValue("test");
  vs2.setLength(4);
  result=vs2.toStringMeta();
  assertEquals("String(4)",result);
  Value vs3=new Value("Name",Value.VALUE_TYPE_BOOLEAN);
  vs3.setValue(false);
  result=vs3.toStringMeta();
  assertEquals("Boolean",result);
  Value vs4=new Value("Name",Value.VALUE_TYPE_BOOLEAN);
  vs4.setValue(false);
  vs4.setLength(0);
  result=vs4.toStringMeta();
  assertEquals("Boolean",result);
  Value vs5=new Value("Name",Value.VALUE_TYPE_BOOLEAN);
  vs5.setValue(false);
  vs5.setLength(4);
  result=vs5.toStringMeta();
  assertEquals("Boolean",result);
  Value vs6=new Value("Name",Value.VALUE_TYPE_INTEGER);
  vs6.setValue(10);
  result=vs6.toStringMeta();
  assertEquals("Integer",result);
  Value vs7=new Value("Name",Value.VALUE_TYPE_INTEGER);
  vs7.setValue(10);
  vs7.setLength(0);
  result=vs7.toStringMeta();
  assertEquals("Integer",result);
  Value vs8=new Value("Name",Value.VALUE_TYPE_INTEGER);
  vs8.setValue(10);
  vs8.setLength(4);
  result=vs8.toStringMeta();
  assertEquals("Integer(4)",result);
  Value vs9=new Value("Name",Value.VALUE_TYPE_NUMBER);
  vs9.setValue(10.0D);
  result=vs9.toStringMeta();
  assertEquals("Number",result);
  Value vs10=new Value("Name",Value.VALUE_TYPE_NUMBER);
  vs10.setValue(10.0D);
  vs10.setLength(0);
  result=vs10.toStringMeta();
  assertEquals("Number",result);
  Value vs11=new Value("Name",Value.VALUE_TYPE_NUMBER);
  vs11.setValue(10.0D);
  vs11.setLength(4);
  result=vs11.toStringMeta();
  assertEquals("Number(4)",result);
  Value vs12=new Value("Name",Value.VALUE_TYPE_NUMBER);
  vs12.setValue(10.0D);
  vs12.setLength(4);
  vs12.setPrecision(2);
  result=vs12.toStringMeta();
  assertEquals("Number(4, 2)",result);
  Value vs13=new Value("Name",Value.VALUE_TYPE_BIGNUMBER);
  vs13.setValue(new BigDecimal(10));
  result=vs13.toStringMeta();
  assertEquals("BigNumber",result);
  Value vs14=new Value("Name",Value.VALUE_TYPE_BIGNUMBER);
  vs14.setValue(new BigDecimal(10));
  vs14.setLength(0);
  result=vs14.toStringMeta();
  assertEquals("BigNumber",result);
  Value vs15=new Value("Name",Value.VALUE_TYPE_BIGNUMBER);
  vs15.setValue(new BigDecimal(10));
  vs15.setLength(4);
  result=vs15.toStringMeta();
  assertEquals("BigNumber(4)",result);
  Value vs16=new Value("Name",Value.VALUE_TYPE_BIGNUMBER);
  vs16.setValue(new BigDecimal(10));
  vs16.setLength(4);
  vs16.setPrecision(2);
  result=vs16.toStringMeta();
  assertEquals("BigNumber(4, 2)",result);
  Value vs17=new Value("Name",Value.VALUE_TYPE_DATE);
  vs17.setValue(new Date());
  result=vs17.toStringMeta();
  assertEquals("Date",result);
  Value vs18=new Value("Name",Value.VALUE_TYPE_DATE);
  vs18.setValue(new Date());
  vs18.setLength(0);
  result=vs18.toStringMeta();
  assertEquals("Date",result);
  Value vs19=new Value("Name",Value.VALUE_TYPE_DATE);
  vs19.setValue(new Date());
  vs19.setLength(4);
  result=vs19.toStringMeta();
  assertEquals("Date",result);
  Value vs20=new Value("Name",Value.VALUE_TYPE_DATE);
  vs20.setValue(new Date());
  vs20.setLength(4);
  vs20.setPrecision(2);
  result=vs20.toStringMeta();
  assertEquals("Date",result);
}
