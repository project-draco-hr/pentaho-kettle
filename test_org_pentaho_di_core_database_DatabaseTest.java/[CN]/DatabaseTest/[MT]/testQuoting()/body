{
  Database database=null;
  EnvUtil.environmentInit();
  try {
    TransMeta transMeta=new TransMeta();
    transMeta.setName("transname");
    for (int i=0; i < databasesXML.length; i++) {
      DatabaseMeta databaseMeta=new DatabaseMeta(databasesXML[i]);
      transMeta.addDatabase(databaseMeta);
    }
    DatabaseMeta dbInfo=transMeta.findDatabase("db");
    database=new Database(this,dbInfo);
    database.connect();
    assertNull(dbInfo.quoteField(null));
    assertEquals("table1",dbInfo.quoteField("table1"));
    assertEquals("\"table 1\"",dbInfo.quoteField("table 1"));
    assertEquals("\"table-1\"",dbInfo.quoteField("table-1"));
    assertEquals("\"table+1\"",dbInfo.quoteField("table+1"));
    assertEquals("\"table.1\"",dbInfo.quoteField("table.1"));
    assertNull(dbInfo.getQuotedSchemaTableCombination(null,null));
    assertEquals("table1",dbInfo.getQuotedSchemaTableCombination(null,"table1"));
    assertEquals("\"table 1\"",dbInfo.getQuotedSchemaTableCombination(null,"table 1"));
    assertEquals("\"table-1\"",dbInfo.getQuotedSchemaTableCombination(null,"table-1"));
    assertEquals("\"table+1\"",dbInfo.getQuotedSchemaTableCombination(null,"table+1"));
    assertEquals("\"table.1\"",dbInfo.getQuotedSchemaTableCombination(null,"table.1"));
    assertEquals("\"schema1\".\"null\"",dbInfo.getQuotedSchemaTableCombination("schema1",null));
    assertEquals("\"schema1\".\"table1\"",dbInfo.getQuotedSchemaTableCombination("schema1","table1"));
    assertEquals("\"\"schema 1\"\".\"\"table 1\"\"",dbInfo.getQuotedSchemaTableCombination("schema 1","table 1"));
    assertEquals("\"schema1\".\"\"table1\"\"",dbInfo.getQuotedSchemaTableCombination("schema1","\"table1\""));
    database.disconnect();
  }
  finally {
  }
}
