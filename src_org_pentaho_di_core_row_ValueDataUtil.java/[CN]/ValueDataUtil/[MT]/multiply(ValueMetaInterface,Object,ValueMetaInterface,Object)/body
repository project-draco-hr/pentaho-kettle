{
  if (dataA == null || dataB == null)   return null;
  if ((metaB.isString() && metaA.isNumeric()) || (metaB.isNumeric() && metaA.isString())) {
    StringBuffer s;
    String append="";
    int n;
    if (metaB.isString()) {
      s=new StringBuffer(metaB.getString(dataB));
      append=metaB.getString(dataB);
      n=metaA.getInteger(dataA).intValue();
    }
 else {
      s=new StringBuffer(metaA.getString(dataA));
      append=metaA.getString(dataA);
      n=metaB.getInteger(dataB).intValue();
    }
    if (n == 0)     s.setLength(0);
 else     for (int i=1; i < n; i++)     s.append(append);
    return s.toString();
  }
switch (metaA.getType()) {
case ValueMetaInterface.TYPE_NUMBER:
    return new Double(metaA.getNumber(dataA).doubleValue() * metaB.getNumber(dataB).doubleValue());
case ValueMetaInterface.TYPE_INTEGER:
  return new Long(metaA.getInteger(dataA).longValue() * metaB.getInteger(dataB).longValue());
case ValueMetaInterface.TYPE_BIGNUMBER:
return metaA.getBigNumber(dataA).multiply(metaB.getBigNumber(dataB));
default :
throw new KettleValueException("The 'multiply' function only works on numeric data optionally multiplying strings.");
}
}
