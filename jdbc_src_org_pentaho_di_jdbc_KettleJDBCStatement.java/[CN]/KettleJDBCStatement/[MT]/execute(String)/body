{
  if (sql == null || sql.length() == 0) {
    throw new SQLException(BaseMessages.getString(PKG,"error.generic.nosql"),"HY000");
  }
  initialize();
  TransMeta meta=null;
  Trans trans=null;
  try {
    String[] tmp=SQLParser.parse(sql,null,connection,true);
    String table=tmp[3];
    String where=tmp[1];
    String fileName="";
    String stepName="";
    int index=table.indexOf(".");
    if (index != -1) {
      stepName=table.substring(index + 1);
      fileName=table.substring(0,index);
    }
 else {
      stepName=table;
    }
    columnStr=tmp[2];
    String kettleurl=this.url.substring(url.indexOf(KettleDriver.driverPrefix) + KettleDriver.driverPrefix.length());
    URLParser p=new URLParser();
    p.parse(kettleurl);
    String fileUrl=p.getKettleUrl();
    if (fileUrl.indexOf("file://") != -1) {
      fileUrl=fileUrl.substring(fileUrl.indexOf("file://") + 7);
    }
 else     if (fileUrl.indexOf("file:///") != -1) {
      fileUrl=fileUrl.substring(fileUrl.indexOf("file://") + 8);
    }
    File f=new File(fileUrl);
    if (f.isDirectory()) {
      if (visitDirectory(f)) {
        log.debug("file=" + p.getKettleUrl() + File.separator+ fileName+ ".ktr");
        meta=new TransMeta(p.getKettleUrl() + File.separator + fileName+ ".ktr");
      }
    }
 else {
      meta=new TransMeta(p.getKettleUrl());
    }
    if (meta == null) {
      throw new SQLException("The  transformation or job" + fileUrl + "  is not valid.");
    }
    if (p.getOptions() != null) {
      setVariables(meta,p.getOptions());
    }
    if (where != null && where.length() > 1) {
      if (where.indexOf(" and") == -1) {
        int windex=where.indexOf("=");
        if (windex != -1) {
          String variableName=where.substring(0,windex);
          variableName=variableName.trim();
          int kindex=variableName.lastIndexOf(".");
          if (kindex != -1) {
            variableName=variableName.substring(kindex + 1);
          }
          String variableValue=where.substring(windex + 1);
          meta.setVariable(variableName,variableValue);
        }
      }
 else {
        int andIndex=where.indexOf("and");
        while (andIndex != -1) {
          String tmpStr=where.substring(0,andIndex);
          where=where.substring(andIndex + 3);
          andIndex=where.indexOf("and");
          tmpStr=tmpStr.trim();
          int windex=tmpStr.indexOf("=");
          if (windex != -1) {
            String variableName=tmpStr.substring(0,windex);
            variableName=variableName.trim();
            int kindex=variableName.lastIndexOf(".");
            if (kindex != -1) {
              variableName=variableName.substring(kindex + 1);
            }
            String variableValue=tmpStr.substring(windex + 1);
            meta.setVariable(variableName,variableValue);
          }
        }
      }
    }
    trans=new Trans(meta);
    trans.prepareExecution(null);
    this.listener=new RowStepListener();
    String[] stepNames=meta.getStepNames();
    if (stepNames == null || stepNames.length == 0) {
      throw new SQLException("The  transformation or job  is not valid.");
    }
    StepInterface si1=trans.getStepInterface(stepName,0);
    si1.addRowListener(listener);
    trans.startThreads();
    trans.waitUntilFinished();
    this.rowAndDatas=listener.getRowsWritten();
    if (trans.getErrors() == 0) {
      return true;
    }
  }
 catch (  KettleException e) {
    e.printStackTrace();
    log.error(e.getMessage());
    throw new SQLException(e.getMessage());
  }
  return false;
}
