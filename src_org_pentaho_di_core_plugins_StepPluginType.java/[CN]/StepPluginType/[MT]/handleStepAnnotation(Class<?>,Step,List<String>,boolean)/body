{
  String[] ids=step.name();
  if (ids.length == 1 && Const.isEmpty(ids[0])) {
    throw new KettlePluginException("No ID specified for plugin with class: " + clazz.getName());
  }
  String packageName=step.i18nPackageName();
  if (Const.isEmpty(packageName))   packageName=StepInterface.class.getPackage().getName();
  String altPackageName=clazz.getPackage().getName();
  String name=getTranslation(step.description(),packageName,altPackageName,clazz);
  String description=getTranslation(step.tooltip(),packageName,altPackageName,clazz);
  String category=getTranslation(step.categoryDescription(),packageName,altPackageName,clazz);
  Map<Class<?>,String> classMap=new HashMap<Class<?>,String>();
  classMap.put(StepInterface.class,clazz.getName());
  PluginClassTypes classTypesAnnotation=clazz.getAnnotation(PluginClassTypes.class);
  if (classTypesAnnotation != null) {
    for (int i=0; i < classTypesAnnotation.classTypes().length; i++) {
      Class<?> classType=classTypesAnnotation.classTypes()[i];
      Class<?> implementationType=(classTypesAnnotation.implementationClass().length > i) ? classTypesAnnotation.implementationClass()[i] : null;
      String className=implementationType.getName();
      classMap.put(classType,className);
    }
  }
  PluginInterface stepPlugin=new Plugin(ids,this.getClass(),StepInterface.class,category,name,description,step.image(),step.isSeparateClassLoaderNeeded(),nativeStep,classMap,libraries,null,null);
  registry.registerPlugin(this.getClass(),stepPlugin);
}
