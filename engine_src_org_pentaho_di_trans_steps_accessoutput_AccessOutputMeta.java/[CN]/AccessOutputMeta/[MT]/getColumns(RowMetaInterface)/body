{
  List<Column> list=new ArrayList<Column>();
  for (int i=0; i < row.size(); i++) {
    ValueMetaInterface value=row.getValueMeta(i);
    Column column=new Column();
    column.setName(value.getName());
    int length=value.getLength();
switch (value.getType()) {
case ValueMetaInterface.TYPE_INTEGER:
      if (length < 3) {
        column.setType(DataType.BYTE);
        length=DataType.BYTE.getFixedSize();
      }
 else {
        if (length < 5) {
          column.setType(DataType.INT);
          length=DataType.INT.getFixedSize();
        }
 else {
          column.setType(DataType.LONG);
          length=DataType.LONG.getFixedSize();
        }
      }
    break;
case ValueMetaInterface.TYPE_NUMBER:
  column.setType(DataType.DOUBLE);
length=DataType.DOUBLE.getFixedSize();
break;
case ValueMetaInterface.TYPE_DATE:
column.setType(DataType.SHORT_DATE_TIME);
length=DataType.SHORT_DATE_TIME.getFixedSize();
break;
case ValueMetaInterface.TYPE_STRING:
if (length < 255) {
column.setType(DataType.TEXT);
length*=DataType.TEXT.getUnitSize();
}
 else {
column.setType(DataType.MEMO);
length*=DataType.MEMO.getUnitSize();
}
break;
case ValueMetaInterface.TYPE_BINARY:
column.setType(DataType.BINARY);
break;
case ValueMetaInterface.TYPE_BOOLEAN:
column.setType(DataType.BOOLEAN);
length=DataType.BOOLEAN.getFixedSize();
break;
case ValueMetaInterface.TYPE_BIGNUMBER:
column.setType(DataType.NUMERIC);
length=DataType.NUMERIC.getFixedSize();
break;
default :
break;
}
if (length >= 0) {
column.setLength((short)length);
}
if (value.getPrecision() >= 1 && value.getPrecision() <= 28) {
column.setPrecision((byte)value.getPrecision());
}
list.add(column);
}
return list;
}
