{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"SSHDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"SSHDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,PropsUI.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"SSHDialog.General.Tab"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wGeneralComp.setLayout(fileLayout);
  wSettingsGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wSettingsGroup);
  wSettingsGroup.setText(BaseMessages.getString(PKG,"SSHDialog.wSettingsGroup.Label"));
  FormLayout settingGroupLayout=new FormLayout();
  settingGroupLayout.marginWidth=10;
  settingGroupLayout.marginHeight=10;
  wSettingsGroup.setLayout(settingGroupLayout);
  wServerName=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.Server.Label"),BaseMessages.getString(PKG,"SSHDialog.Server.Tooltip"));
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(0,0);
  fdServerName.top=new FormAttachment(wStepname,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wPort=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.Port.Label"),BaseMessages.getString(PKG,"SSHDialog.Port.Tooltip"));
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.left=new FormAttachment(0,0);
  fdPort.top=new FormAttachment(wServerName,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  wTimeOut=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.TimeOut.Label"),BaseMessages.getString(PKG,"SSHDialog.TimeOut.Tooltip"));
  props.setLook(wTimeOut);
  wTimeOut.addModifyListener(lsMod);
  fdTimeOut=new FormData();
  fdTimeOut.left=new FormAttachment(0,0);
  fdTimeOut.top=new FormAttachment(wPort,margin);
  fdTimeOut.right=new FormAttachment(100,0);
  wTimeOut.setLayoutData(fdTimeOut);
  wUserName=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.UserName.Label"),BaseMessages.getString(PKG,"SSHDialog.UserName.Tooltip"));
  props.setLook(wUserName);
  wUserName.addModifyListener(lsMod);
  fdUserName=new FormData();
  fdUserName.left=new FormAttachment(0,0);
  fdUserName.top=new FormAttachment(wTimeOut,margin);
  fdUserName.right=new FormAttachment(100,0);
  wUserName.setLayoutData(fdUserName);
  wPassword=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.Password.Label"),BaseMessages.getString(PKG,"SSHDialog.Password.Tooltip"));
  props.setLook(wPassword);
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(0,0);
  fdPassword.top=new FormAttachment(wUserName,margin);
  fdPassword.right=new FormAttachment(100,0);
  wPassword.setLayoutData(fdPassword);
  wlUseKey=new Label(wSettingsGroup,SWT.RIGHT);
  wlUseKey.setText(BaseMessages.getString(PKG,"SSHDialog.UseKey.Label"));
  props.setLook(wlUseKey);
  fdlUseKey=new FormData();
  fdlUseKey.left=new FormAttachment(0,0);
  fdlUseKey.top=new FormAttachment(wPassword,margin);
  fdlUseKey.right=new FormAttachment(middle,-margin);
  wlUseKey.setLayoutData(fdlUseKey);
  wUseKey=new Button(wSettingsGroup,SWT.CHECK);
  props.setLook(wUseKey);
  wUseKey.setToolTipText(BaseMessages.getString(PKG,"SSHDialog.UseKey.Tooltip"));
  fdUseKey=new FormData();
  fdUseKey.left=new FormAttachment(middle,margin);
  fdUseKey.top=new FormAttachment(wPassword,margin);
  fdUseKey.right=new FormAttachment(100,0);
  wUseKey.setLayoutData(fdUseKey);
  wUseKey.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      activateKey();
    }
  }
);
  wbFilename=new Button(wSettingsGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,-margin);
  fdbFilename.top=new FormAttachment(wUseKey,margin);
  wbFilename.setLayoutData(fdbFilename);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.SAVE);
      dialog.setFilterExtensions(new String[]{"*.pem","*"});
      if (wPrivateKey.getText() != null) {
        dialog.setFileName(transMeta.environmentSubstitute(wPrivateKey.getText()));
      }
      dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"System.FileType.PEMFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
      if (dialog.open() != null) {
        wPrivateKey.setText(dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName());
      }
    }
  }
);
  wPrivateKey=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.PrivateKey.Label"),BaseMessages.getString(PKG,"SSHDialog.PrivateKey.Tooltip"));
  props.setLook(wPassword);
  wPrivateKey.addModifyListener(lsMod);
  fdPrivateKey=new FormData();
  fdPrivateKey.left=new FormAttachment(0,5 * margin);
  fdPrivateKey.top=new FormAttachment(wUseKey,margin);
  fdPrivateKey.right=new FormAttachment(wbFilename,-margin);
  wPrivateKey.setLayoutData(fdPrivateKey);
  wPassphrase=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SSHDialog.Passphrase.Label"),BaseMessages.getString(PKG,"SSHDialog.Passphrase.Tooltip"));
  props.setLook(wPassphrase);
  wPassphrase.addModifyListener(lsMod);
  fdPassphrase=new FormData();
  fdPassphrase.left=new FormAttachment(0,0);
  fdPassphrase.top=new FormAttachment(wbFilename,margin);
  fdPassphrase.right=new FormAttachment(100,0);
  wPassphrase.setLayoutData(fdPassphrase);
  wTest=new Button(wSettingsGroup,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"SSHDialog.TestConnection.Label"));
  props.setLook(wTest);
  fdTest=new FormData();
  wTest.setToolTipText(BaseMessages.getString(PKG,"SSHDialog.TestConnection.Tooltip"));
  fdTest.top=new FormAttachment(wPassphrase,2 * margin);
  fdTest.right=new FormAttachment(100,0);
  wTest.setLayoutData(fdTest);
  fdSettingsGroup=new FormData();
  fdSettingsGroup.left=new FormAttachment(0,margin);
  fdSettingsGroup.top=new FormAttachment(wStepname,margin);
  fdSettingsGroup.right=new FormAttachment(100,-margin);
  wSettingsGroup.setLayoutData(fdSettingsGroup);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  wSettingsTab=new CTabItem(wTabFolder,SWT.NONE);
  wSettingsTab.setText(BaseMessages.getString(PKG,"SSHDialog.Settings.Tab"));
  FormLayout SettingsLayout=new FormLayout();
  SettingsLayout.marginWidth=3;
  SettingsLayout.marginHeight=3;
  wSettingsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wSettingsComp);
  wSettingsComp.setLayout(SettingsLayout);
  wOutput=new Group(wSettingsComp,SWT.SHADOW_NONE);
  props.setLook(wOutput);
  wOutput.setText(BaseMessages.getString(PKG,"SSHDialog.wOutput.Label"));
  FormLayout outputGroupLayout=new FormLayout();
  outputGroupLayout.marginWidth=10;
  outputGroupLayout.marginHeight=10;
  wOutput.setLayout(outputGroupLayout);
  wResultOutFieldName=new LabelTextVar(transMeta,wOutput,BaseMessages.getString(PKG,"SSHDialog.ResultOutFieldName.Label"),BaseMessages.getString(PKG,"SSHDialog.ResultOutFieldName.Tooltip"));
  props.setLook(wResultOutFieldName);
  wResultOutFieldName.addModifyListener(lsMod);
  fdResultOutFieldName=new FormData();
  fdResultOutFieldName.left=new FormAttachment(0,0);
  fdResultOutFieldName.top=new FormAttachment(wStepname,margin);
  fdResultOutFieldName.right=new FormAttachment(100,0);
  wResultOutFieldName.setLayoutData(fdResultOutFieldName);
  wResultErrFieldName=new LabelTextVar(transMeta,wOutput,BaseMessages.getString(PKG,"SSHDialog.ResultErrFieldName.Label"),BaseMessages.getString(PKG,"SSHDialog.ResultErrFieldName.Tooltip"));
  props.setLook(wResultErrFieldName);
  wResultErrFieldName.addModifyListener(lsMod);
  fdResultErrFieldName=new FormData();
  fdResultErrFieldName.left=new FormAttachment(0,0);
  fdResultErrFieldName.top=new FormAttachment(wResultOutFieldName,margin);
  fdResultErrFieldName.right=new FormAttachment(100,0);
  wResultErrFieldName.setLayoutData(fdResultErrFieldName);
  fdOutput=new FormData();
  fdOutput.left=new FormAttachment(0,margin);
  fdOutput.top=new FormAttachment(wStepname,margin);
  fdOutput.right=new FormAttachment(100,-margin);
  wOutput.setLayoutData(fdOutput);
  wCommands=new Group(wSettingsComp,SWT.SHADOW_NONE);
  props.setLook(wCommands);
  wCommands.setText(BaseMessages.getString(PKG,"SSHDialog.LogSettings.Group.Label"));
  FormLayout LogSettingsgroupLayout=new FormLayout();
  LogSettingsgroupLayout.marginWidth=10;
  LogSettingsgroupLayout.marginHeight=10;
  wCommands.setLayout(LogSettingsgroupLayout);
  wldynamicCommand=new Label(wCommands,SWT.RIGHT);
  wldynamicCommand.setText(BaseMessages.getString(PKG,"SSHDialog.dynamicCommand.Label"));
  props.setLook(wldynamicCommand);
  fdlynamicBase=new FormData();
  fdlynamicBase.left=new FormAttachment(0,margin);
  fdlynamicBase.top=new FormAttachment(wOutput,margin);
  fdlynamicBase.right=new FormAttachment(middle,-margin);
  wldynamicCommand.setLayoutData(fdlynamicBase);
  wdynamicCommand=new Button(wCommands,SWT.CHECK);
  props.setLook(wdynamicCommand);
  wdynamicCommand.setToolTipText(BaseMessages.getString(PKG,"SSHDialog.dynamicCommand.Tooltip"));
  fdynamicCommand=new FormData();
  fdynamicCommand.left=new FormAttachment(middle,margin);
  fdynamicCommand.top=new FormAttachment(wOutput,margin);
  wdynamicCommand.setLayoutData(fdynamicCommand);
  SelectionAdapter ldynamicCommand=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      activateDynamicCommand();
      input.setChanged();
    }
  }
;
  wdynamicCommand.addSelectionListener(ldynamicCommand);
  wlCommandField=new Label(wCommands,SWT.RIGHT);
  wlCommandField.setText(BaseMessages.getString(PKG,"SSHDialog.MessageNameField.Label"));
  props.setLook(wlCommandField);
  fdlCommandField=new FormData();
  fdlCommandField.left=new FormAttachment(0,margin);
  fdlCommandField.right=new FormAttachment(middle,-margin);
  fdlCommandField.top=new FormAttachment(wdynamicCommand,margin);
  wlCommandField.setLayoutData(fdlCommandField);
  wCommandField=new CCombo(wCommands,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wCommandField);
  wCommandField.setEditable(true);
  wCommandField.addModifyListener(lsMod);
  fdCommandField=new FormData();
  fdCommandField.left=new FormAttachment(middle,margin);
  fdCommandField.top=new FormAttachment(wdynamicCommand,margin);
  fdCommandField.right=new FormAttachment(100,0);
  wCommandField.setLayoutData(fdCommandField);
  wCommandField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      get();
    }
  }
);
  wlCommand=new Label(wCommands,SWT.RIGHT);
  wlCommand.setText(BaseMessages.getString(PKG,"SSHDialog.Command.Label"));
  props.setLook(wlCommand);
  fdlCommand=new FormData();
  fdlCommand.left=new FormAttachment(0,margin);
  fdlCommand.top=new FormAttachment(wCommandField,margin);
  fdlCommand.right=new FormAttachment(middle,-2 * margin);
  wlCommand.setLayoutData(fdlCommand);
  wCommand=new StyledTextComp(wCommands,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  wCommand.setToolTipText(BaseMessages.getString(PKG,"SSHDialog.Command.Tooltip"));
  props.setLook(wCommand);
  wCommand.addModifyListener(lsMod);
  fdCommand=new FormData();
  fdCommand.left=new FormAttachment(middle,margin);
  fdCommand.top=new FormAttachment(wCommandField,margin);
  fdCommand.right=new FormAttachment(100,0);
  fdCommand.bottom=new FormAttachment(100,-margin);
  wCommand.setLayoutData(fdCommand);
  fdLogSettings=new FormData();
  fdLogSettings.left=new FormAttachment(0,margin);
  fdLogSettings.top=new FormAttachment(wOutput,margin);
  fdLogSettings.right=new FormAttachment(100,-margin);
  fdLogSettings.bottom=new FormAttachment(100,-margin);
  wCommands.setLayoutData(fdLogSettings);
  fdSettingsComp=new FormData();
  fdSettingsComp.left=new FormAttachment(0,0);
  fdSettingsComp.top=new FormAttachment(0,0);
  fdSettingsComp.right=new FormAttachment(100,0);
  fdSettingsComp.bottom=new FormAttachment(100,0);
  wSettingsComp.setLayoutData(fdSettingsComp);
  wSettingsComp.layout();
  wSettingsTab.setControl(wSettingsComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"SSHDialog.Button.PreviewRows"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  wPreview.addListener(SWT.Selection,lsPreview);
  wTest.addListener(SWT.Selection,lsTest);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  activateKey();
  activateDynamicCommand();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
