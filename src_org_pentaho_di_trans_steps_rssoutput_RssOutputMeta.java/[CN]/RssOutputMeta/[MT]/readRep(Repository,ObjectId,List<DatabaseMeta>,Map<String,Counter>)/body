{
  try {
    displayitem=rep.getStepAttributeBoolean(id_step,"displayitem");
    customrss=rep.getStepAttributeBoolean(id_step,"customrss");
    channeltitle=rep.getStepAttributeString(id_step,"channel_title");
    channeldescription=rep.getStepAttributeString(id_step,"channel_description");
    channellink=rep.getStepAttributeString(id_step,"channel_link");
    channelpubdate=rep.getStepAttributeString(id_step,"channel_pubdate");
    channelcopyright=rep.getStepAttributeString(id_step,"channel_copyright");
    channelimagetitle=rep.getStepAttributeString(id_step,"channel_image_title");
    channelimagelink=rep.getStepAttributeString(id_step,"channel_image_link");
    channelimageurl=rep.getStepAttributeString(id_step,"channel_image_url");
    channelimagedescription=rep.getStepAttributeString(id_step,"channel_image_description");
    channellanguage=rep.getStepAttributeString(id_step,"channel_language");
    channelauthor=rep.getStepAttributeString(id_step,"channel_author");
    version=rep.getStepAttributeString(id_step,"version");
    encoding=rep.getStepAttributeString(id_step,"encoding");
    addimage=rep.getStepAttributeBoolean(id_step,"addimage");
    itemtitle=rep.getStepAttributeString(id_step,"item_title");
    itemdescription=rep.getStepAttributeString(id_step,"item_description");
    itemlink=rep.getStepAttributeString(id_step,"item_link");
    itempubdate=rep.getStepAttributeString(id_step,"item_pubdate");
    itemauthor=rep.getStepAttributeString(id_step,"item_author");
    addgeorss=rep.getStepAttributeBoolean(id_step,"addgeorss");
    usegeorssgml=rep.getStepAttributeBoolean(id_step,"usegeorssgml");
    geopointlat=rep.getStepAttributeString(id_step,"geopointlat");
    geopointlong=rep.getStepAttributeString(id_step,"geopointlong");
    filenamefield=rep.getStepAttributeString(id_step,"filename_field");
    fileName=rep.getStepAttributeString(id_step,"file_name");
    extension=rep.getStepAttributeString(id_step,"file_extention");
    stepNrInFilename=rep.getStepAttributeBoolean(id_step,"file_add_stepnr");
    partNrInFilename=rep.getStepAttributeBoolean(id_step,"file_add_partnr");
    dateInFilename=rep.getStepAttributeBoolean(id_step,"file_add_date");
    timeInFilename=rep.getStepAttributeBoolean(id_step,"file_add_time");
    isfilenameinfield=rep.getStepAttributeBoolean(id_step,"is_filename_in_field");
    createparentfolder=rep.getStepAttributeBoolean(id_step,"create_parent_folder");
    AddToResult=rep.getStepAttributeBoolean(id_step,"addtoresult");
    int nrchannel=rep.countNrStepAttributes(id_step,"channel_custom_field");
    allocate(nrchannel);
    for (int i=0; i < nrchannel; i++) {
      ChannelCustomTags[i]=rep.getStepAttributeString(id_step,i,"channel_custom_tag");
      ChannelCustomFields[i]=rep.getStepAttributeString(id_step,i,"channel_custom_field");
    }
    int nritem=rep.countNrStepAttributes(id_step,"item_custom_field");
    allocateitem(nritem);
    for (int i=0; i < nritem; i++) {
      ItemCustomTags[i]=rep.getStepAttributeString(id_step,i,"item_custom_tag");
      ItemCustomFields[i]=rep.getStepAttributeString(id_step,i,"item_custom_field");
    }
    int nrnamespaces=rep.countNrStepAttributes(id_step,"namespace_tag");
    allocatenamespace(nrnamespaces);
    for (int i=0; i < nrnamespaces; i++) {
      NameSpacesTitle[i]=rep.getStepAttributeString(id_step,i,"namespace_tag");
      NameSpaces[i]=rep.getStepAttributeString(id_step,i,"namespace_value");
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
