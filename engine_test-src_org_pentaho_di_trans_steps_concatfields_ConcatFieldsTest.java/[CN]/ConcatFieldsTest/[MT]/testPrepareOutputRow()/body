{
  ConcatFieldsHandler concatFields=new ConcatFieldsHandler(stepMockHelper.stepMeta,stepMockHelper.stepDataInterface,0,stepMockHelper.transMeta,stepMockHelper.trans);
  Object[] row=new Object[]{"one","two"};
  String[] fieldNames=new String[]{"one","two"};
  concatFields.setRow(row);
  RowMetaInterface inputRowMeta=mock(RowMetaInterface.class);
  when(inputRowMeta.clone()).thenReturn(inputRowMeta);
  when(inputRowMeta.size()).thenReturn(2);
  when(inputRowMeta.getFieldNames()).thenReturn(fieldNames);
  when(stepMockHelper.processRowsStepMetaInterface.getOutputFields()).thenReturn(textFileFields);
  when(stepMockHelper.processRowsStepMetaInterface.isFastDump()).thenReturn(Boolean.TRUE);
  when(stepMockHelper.processRowsStepMetaInterface.isFileAppended()).thenReturn(Boolean.FALSE);
  when(stepMockHelper.processRowsStepMetaInterface.isFileNameInField()).thenReturn(Boolean.FALSE);
  when(stepMockHelper.processRowsStepMetaInterface.isHeaderEnabled()).thenReturn(Boolean.TRUE);
  when(stepMockHelper.processRowsStepMetaInterface.isRemoveSelectedFields()).thenReturn(Boolean.TRUE);
  concatFields.setInputRowMeta(inputRowMeta);
  try {
    concatFields.processRow(stepMockHelper.processRowsStepMetaInterface,stepMockHelper.processRowsStepDataInterface);
    concatFields.prepareOutputRow(row);
  }
 catch (  NullPointerException npe) {
    fail("NullPointerException issue PDI-8870 still reproduced ");
  }
}
