{
  boolean retval=false;
  try {
    if (data.writer != null) {
      if (log.isDebug())       logDebug("Closing output stream");
      data.writer.close();
      if (log.isDebug())       logDebug("Closed output stream");
    }
    data.writer=null;
    if (data.cmdProc != null) {
      if (log.isDebug())       logDebug("Ending running external command");
      int procStatus=data.cmdProc.waitFor();
      try {
        data.cmdProc.getErrorStream().close();
        data.cmdProc.getOutputStream().close();
        data.cmdProc.getInputStream().close();
      }
 catch (      IOException e) {
        if (log.isDetailed())         logDetailed("Warning: Error closing streams: " + e.getMessage());
      }
      data.cmdProc=null;
      if (log.isBasic())       logBasic("Command exit status: " + procStatus);
    }
 else {
      if (log.isDebug())       logDebug("Closing normal file ...");
      if (meta.getFileCompression() == "Zip") {
        data.zip.closeEntry();
        data.zip.finish();
        data.zip.close();
      }
      if (meta.getFileCompression() == "GZip") {
        data.gzip.finish();
      }
      if (data.fos != null) {
        data.fos.close();
        data.fos=null;
      }
    }
    retval=true;
  }
 catch (  Exception e) {
    logError("Exception trying to close file: " + e.toString());
    setErrors(1);
    retval=false;
  }
  return retval;
}
