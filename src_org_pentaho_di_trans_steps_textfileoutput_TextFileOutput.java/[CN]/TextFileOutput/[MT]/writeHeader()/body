{
  boolean retval=false;
  RowMetaInterface r=data.outputRowMeta;
  try {
    if (meta.getOutputFields() != null && meta.getOutputFields().length > 0) {
      for (int i=0; i < meta.getOutputFields().length; i++) {
        String fieldName=meta.getOutputFields()[i].getName();
        ValueMetaInterface v=r.searchValueMeta(fieldName);
        if (i > 0 && data.binarySeparator.length > 0) {
          data.writer.write(data.binarySeparator);
        }
        if ((meta.isEnclosureForced() && data.binaryEnclosure.length > 0 && v != null && v.isString()) || ((!meta.isEnclosureFixDisabled() && containsSeparator(fieldName.getBytes(),data.binarySeparator)))) {
          data.writer.write(data.binaryEnclosure);
        }
        data.writer.write(getBinaryString(fieldName));
        if ((meta.isEnclosureForced() && data.binaryEnclosure.length > 0 && v != null && v.isString()) || ((!meta.isEnclosureFixDisabled() && containsSeparator(fieldName.getBytes(),data.binarySeparator)))) {
          data.writer.write(data.binaryEnclosure);
        }
      }
      data.writer.write(data.binaryNewline);
    }
 else     if (r != null) {
      for (int i=0; i < r.size(); i++) {
        if (i > 0 && data.binarySeparator.length > 0) {
          data.writer.write(data.binarySeparator);
        }
        ValueMetaInterface v=r.getValueMeta(i);
        if ((meta.isEnclosureForced() && data.binaryEnclosure.length > 0 && v != null && v.isString()) || ((!meta.isEnclosureFixDisabled() && containsSeparator(v.getName().getBytes(),data.binarySeparator)))) {
          data.writer.write(data.binaryEnclosure);
        }
        data.writer.write(getBinaryString(v.getName()));
        if ((meta.isEnclosureForced() && data.binaryEnclosure.length > 0 && v != null && v.isString()) || ((!meta.isEnclosureFixDisabled() && containsSeparator(v.getName().getBytes(),data.binarySeparator)))) {
          data.writer.write(data.binaryEnclosure);
        }
      }
      data.writer.write(data.binaryNewline);
    }
 else {
      data.writer.write(getBinaryString("no rows selected" + Const.CR));
    }
  }
 catch (  Exception e) {
    logError("Error writing header line: " + e.toString());
    logError(Const.getStackTracker(e));
    retval=true;
  }
  incrementLinesOutput();
  return retval;
}
