{
  int length=v.getLength();
  if (string == null)   return new byte[]{};
  if (length > -1 && length < string.length()) {
    String tmp=string.substring(0,length);
    if (Const.isEmpty(v.getStringEncoding())) {
      return tmp.getBytes();
    }
 else {
      try {
        return tmp.getBytes(v.getStringEncoding());
      }
 catch (      UnsupportedEncodingException e) {
        throw new KettleValueException("Unable to convert String to Binary with specified string encoding [" + v.getStringEncoding() + "]",e);
      }
    }
  }
 else {
    byte text[];
    if (Const.isEmpty(v.getStringEncoding())) {
      text=string.getBytes();
    }
 else {
      try {
        text=string.getBytes(v.getStringEncoding());
      }
 catch (      UnsupportedEncodingException e) {
        throw new KettleValueException("Unable to convert String to Binary with specified string encoding [" + v.getStringEncoding() + "]",e);
      }
    }
    if (length > string.length()) {
      byte filler[]=" ".getBytes();
      int size=filler.length * length;
      byte bytes[]=new byte[size];
      if (filler.length == 1) {
        java.util.Arrays.fill(bytes,filler[0]);
      }
 else {
      }
      System.arraycopy(text,0,bytes,0,text.length);
      return bytes;
    }
 else {
      return text;
    }
  }
}
