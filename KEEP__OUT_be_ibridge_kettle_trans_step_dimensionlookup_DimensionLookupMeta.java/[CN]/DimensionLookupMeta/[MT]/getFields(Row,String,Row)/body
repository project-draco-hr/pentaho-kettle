{
  LogWriter log=LogWriter.getInstance();
  Row row;
  if (r == null)   row=new Row();
 else   row=r;
  Value v=new Value(keyField,Value.VALUE_TYPE_INTEGER);
  if (keyRename != null && keyRename.length() > 0)   v.setName(keyRename);
  v.setLength(9,0);
  v.setOrigin(name);
  row.addValue(v);
  if (!update && fieldLookup.length > 0) {
    try {
      if (databaseMeta != null) {
        Database db=new Database(databaseMeta);
        String schemaTable=databaseMeta.getQuotedSchemaTableCombination(schemaName,tableName);
        Row extraFields=db.getTableFields(schemaTable);
        for (int i=0; i < fieldLookup.length; i++) {
          v=extraFields.searchValue(fieldLookup[i]);
          if (v == null) {
            String message=Messages.getString("DimensionLookupMeta.Exception.UnableToFindReturnField",fieldLookup[i]);
            log.logError(toString(),message);
            throw new KettleStepException(message);
          }
          if (fieldStream[i] != null && fieldStream[i].length() > 0) {
            v.setName(fieldStream[i]);
          }
          v.setOrigin(name);
          row.addValue(v);
        }
      }
 else {
        String message=Messages.getString("DimensionLookupMeta.Exception.UnableToRetrieveDataTypeOfReturnField");
        log.logError(toString(),message);
        throw new KettleStepException(message);
      }
    }
 catch (    Exception e) {
      String message=Messages.getString("DimensionLookupMeta.Exception.UnableToRetrieveDataTypeOfReturnField2");
      log.logError(toString(),message);
      throw new KettleStepException(message,e);
    }
  }
  return row;
}
