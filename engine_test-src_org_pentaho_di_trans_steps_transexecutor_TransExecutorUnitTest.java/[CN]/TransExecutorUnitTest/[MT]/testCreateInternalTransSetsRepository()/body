{
  Trans transParentMock=mock(Trans.class);
  Repository repositoryMock=mock(Repository.class);
  TransExecutorData transExecutorDataMock=mock(TransExecutorData.class);
  TransMeta transMetaMock=mock(TransMeta.class);
  executor.init(meta,data);
  when(transParentMock.getRepository()).thenReturn(repositoryMock);
  when(transParentMock.getLogLevel()).thenReturn(LogLevel.DEBUG);
  doNothing().when(transParentMock).initializeVariablesFrom(any(VariableSpace.class));
  when(executor.getLogLevel()).thenReturn(LogLevel.DEBUG);
  when(executor.createInternalTrans()).thenCallRealMethod();
  when(executor.getTrans()).thenReturn(transParentMock);
  when(executor.getData()).thenReturn(transExecutorDataMock);
  when(transMetaMock.listVariables()).thenReturn(new String[0]);
  when(transMetaMock.listParameters()).thenReturn(new String[0]);
  when(transExecutorDataMock.getExecutorTransMeta()).thenReturn(transMetaMock);
  Trans internalTrans=executor.createInternalTrans();
  assertNotNull(internalTrans);
  Trans parentTrans=internalTrans.getParentTrans();
  assertEquals(parentTrans,transParentMock);
  assertEquals(parentTrans.getRepository(),repositoryMock);
  assertEquals(internalTrans.getRepository(),repositoryMock);
}
