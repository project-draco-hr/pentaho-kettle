{
  prepareOneRowForExecutor();
  StepMeta parentStepMeta=mock(StepMeta.class);
  when(parentStepMeta.getName()).thenReturn("parentStepMeta");
  meta.setParentStepMeta(parentStepMeta);
  internalResult.setResult(true);
  meta.setExecutionResultField("executionResultField");
  internalResult.setNrErrors(1);
  meta.setExecutionNrErrorsField("executionNrErrorsField");
  internalResult.setNrLinesRead(2);
  meta.setExecutionLinesReadField("executionLinesReadField");
  internalResult.setNrLinesWritten(3);
  meta.setExecutionLinesWrittenField("executionLinesWrittenField");
  internalResult.setNrLinesInput(4);
  meta.setExecutionLinesInputField("executionLinesInputField");
  internalResult.setNrLinesOutput(5);
  meta.setExecutionLinesOutputField("executionLinesOutputField");
  internalResult.setNrLinesRejected(6);
  meta.setExecutionLinesRejectedField("executionLinesRejectedField");
  internalResult.setNrLinesUpdated(7);
  meta.setExecutionLinesUpdatedField("executionLinesUpdatedField");
  internalResult.setNrLinesDeleted(8);
  meta.setExecutionLinesDeletedField("executionLinesDeletedField");
  internalResult.setNrFilesRetrieved(9);
  meta.setExecutionFilesRetrievedField("executionFilesRetrievedField");
  internalResult.setExitStatus(10);
  meta.setExecutionExitStatusField("executionExitStatusField");
  RowSet rowSet=new QueueRowSet();
  StepMeta stepMeta=mockStepAndMapItToRowSet("stepMetaMock",rowSet);
  meta.setExecutionResultTargetStepMeta(stepMeta);
  executor.init(meta,data);
  executor.setInputRowMeta(new RowMeta());
  assertTrue("Passing one line at first time",executor.processRow(meta,data));
  assertFalse("Executing the internal trans during the second round",executor.processRow(meta,data));
  Object[] resultsRow=rowSet.getRowImmediate();
  assertNotNull(resultsRow);
  assertNull("Only one row is expected",rowSet.getRowImmediate());
  assertEquals(internalResult.getResult(),resultsRow[0]);
  assertEquals(internalResult.getNrErrors(),resultsRow[1]);
  assertEquals(internalResult.getNrLinesRead(),resultsRow[2]);
  assertEquals(internalResult.getNrLinesWritten(),resultsRow[3]);
  assertEquals(internalResult.getNrLinesInput(),resultsRow[4]);
  assertEquals(internalResult.getNrLinesOutput(),resultsRow[5]);
  assertEquals(internalResult.getNrLinesRejected(),resultsRow[6]);
  assertEquals(internalResult.getNrLinesUpdated(),resultsRow[7]);
  assertEquals(internalResult.getNrLinesDeleted(),resultsRow[8]);
  assertEquals(internalResult.getNrFilesRetrieved(),resultsRow[9]);
  assertEquals(internalResult.getExitStatus(),((Number)resultsRow[10]).intValue());
}
