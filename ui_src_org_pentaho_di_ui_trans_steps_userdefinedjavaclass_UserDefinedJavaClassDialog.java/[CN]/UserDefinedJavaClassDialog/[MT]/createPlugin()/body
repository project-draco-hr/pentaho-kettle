{
  UserDefinedJavaClassMeta udjcMeta=new UserDefinedJavaClassMeta();
  getInfo(udjcMeta);
  try {
    String pluginName="Processor";
    for (    UserDefinedJavaClassDef def : udjcMeta.getDefinitions()) {
      if (def.isTransformClass()) {
        pluginName=def.getClassName();
      }
    }
    File pluginFile=new File(String.format("plugins/steps/%s/%s.step.xml",pluginName,pluginName));
    pluginFile.getParentFile().mkdirs();
    PrintWriter pw=new PrintWriter(new FileWriter(pluginFile));
    StringBuffer outXML=new StringBuffer("<step>\n");
    outXML.append(String.format("\t<name>%s</name>\n",stepname));
    outXML.append("\t<type>UserDefinedJavaClass</type>\n");
    outXML.append("\t<description/>\n\t");
    outXML.append(udjcMeta.getXML());
    outXML.append("</step>");
    pw.println(outXML.toString());
    pw.flush();
    pw.close();
    ShowMessageDialog msgDialog=new ShowMessageDialog(shell,SWT.ICON_INFORMATION | SWT.OK,BaseMessages.getString(PKG,"UserDefinedJavaClassDialog.Plugin.CreateSuccess"),BaseMessages.getString(PKG,"UserDefinedJavaClassDialog.Plugin.CreatedFile",pluginFile.getPath()),false);
    msgDialog.open();
  }
 catch (  IOException e) {
    e.printStackTrace();
    new ErrorDialog(shell,BaseMessages.getString(PKG,"UserDefinedJavaClassDialog.Plugin.CreateErrorTitle"),BaseMessages.getString(PKG,"UserDefinedJavaClassDialog.Plugin.CreateErrorMessage",stepname),e);
  }
  return true;
}
