{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Title"));
  int margin=Const.MARGIN;
  wName=new LabelText(shell,BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Name.Label"),BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Name.Tooltip"));
  wName.addModifyListener(lsMod);
  FormData fdName=new FormData();
  fdName.top=new FormAttachment(0,0);
  fdName.left=new FormAttachment(0,0);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  Control lastControl=wName;
  wServer=new LabelTextVar(jobMeta,shell,BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Server.Label"),BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Server.Tooltip"));
  props.setLook(wServer);
  wServer.addModifyListener(lsMod);
  FormData fdBatchIdSchema=new FormData();
  fdBatchIdSchema.left=new FormAttachment(0,0);
  fdBatchIdSchema.top=new FormAttachment(lastControl,margin);
  fdBatchIdSchema.right=new FormAttachment(100,0);
  wServer.setLayoutData(fdBatchIdSchema);
  lastControl=wServer;
  wPort=new LabelTextVar(jobMeta,shell,BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Port.Label"),BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Port.Tooltip"));
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  FormData fdPort=new FormData();
  fdPort.left=new FormAttachment(0,0);
  fdPort.top=new FormAttachment(lastControl,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  lastControl=wPort;
  wVariable=new LabelTextVar(jobMeta,shell,BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Variable.Label"),BaseMessages.getString(PKG,"HL7MLLPAcknowledgeDialog.Variable.Tooltip"));
  props.setLook(wVariable);
  wVariable.addModifyListener(lsMod);
  FormData fdVariable=new FormData();
  fdVariable.left=new FormAttachment(0,0);
  fdVariable.top=new FormAttachment(lastControl,margin);
  fdVariable.right=new FormAttachment(100,0);
  wVariable.setLayoutData(fdVariable);
  lastControl=wVariable;
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,lastControl);
  wCancel.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
);
  wOK.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wServer.addSelectionListener(lsDef);
  wPort.addSelectionListener(lsDef);
  wVariable.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"HL7MLLPAcknowledgeDialog.DialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
