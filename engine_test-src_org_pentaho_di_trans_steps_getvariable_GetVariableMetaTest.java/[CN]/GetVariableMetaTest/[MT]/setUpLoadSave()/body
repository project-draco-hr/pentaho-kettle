{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  List<String> attributes=Arrays.asList("fieldDefinitions");
  Map<String,String> getterMap=new HashMap<String,String>(){
{
      put("fieldDefinitions","getFieldDefinitions");
    }
  }
;
  Map<String,String> setterMap=new HashMap<String,String>(){
{
      put("fieldDefinitions","setFieldDefinitions");
    }
  }
;
  FieldDefinition fieldDefinition=new FieldDefinition();
  fieldDefinition.setFieldName("fieldName");
  fieldDefinition.setFieldLength(4);
  fieldDefinition.setCurrency(null);
  fieldDefinition.setFieldPrecision(5);
  fieldDefinition.setFieldType(ValueMetaInterface.TYPE_NUMBER);
  fieldDefinition.setGroup("group");
  fieldDefinition.setVariableString("variableString");
  FieldLoadSaveValidator<FieldDefinition[]> fieldDefinitionLoadSaveValidator=new ArrayLoadSaveValidator<FieldDefinition>(new FieldDefinitionLoadSaveValidator(fieldDefinition),5);
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("fieldName",fieldDefinitionLoadSaveValidator);
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  typeValidatorMap.put(FieldDefinition[].class.getCanonicalName(),fieldDefinitionLoadSaveValidator);
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,Collections.emptyList(),Collections.emptyList(),getterMap,setterMap,attrValidatorMap,typeValidatorMap,this);
}
