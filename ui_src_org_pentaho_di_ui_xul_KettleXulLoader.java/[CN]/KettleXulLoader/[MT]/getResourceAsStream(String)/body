{
  int height=iconHeight;
  int width=iconWidth;
  if (resource.contains(":")) {
    width=Integer.parseInt(resource.substring(resource.indexOf(":") + 1,resource.indexOf("#")));
    height=Integer.parseInt(resource.substring(resource.indexOf("#") + 1,resource.indexOf(".")));
    resource=resource.substring(0,resource.indexOf(":")) + resource.substring(resource.indexOf("."));
  }
  if (SvgSupport.isSvgEnabled() && (SvgSupport.isSvgName(resource) || SvgSupport.isPngName(resource))) {
    InputStream in=null;
    try {
      in=super.getResourceAsStream(SvgSupport.toSvgName(resource));
      SvgImage svg=SvgSupport.loadSvgImage(in);
      SwtUniversalImage image=new SwtUniversalImageSvg(svg);
      Display d=Display.getCurrent() != null ? Display.getCurrent() : Display.getDefault();
      Image result=image.getAsBitmapForSize(d,width,height);
      ImageLoader loader=new ImageLoader();
      loader.data=new ImageData[]{result.getImageData()};
      ByteArrayOutputStream out=new ByteArrayOutputStream();
      loader.save(out,SWT.IMAGE_PNG);
      image.dispose();
      return new ByteArrayInputStream(out.toByteArray());
    }
 catch (    Throwable ignored) {
    }
 finally {
      IOUtils.closeQuietly(in);
    }
    resource=SvgSupport.toPngName(resource);
  }
  return super.getResourceAsStream(resource);
}
