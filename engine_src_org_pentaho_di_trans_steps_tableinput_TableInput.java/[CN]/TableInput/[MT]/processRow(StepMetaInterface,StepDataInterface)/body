{
  if (first) {
    Object[] parameters;
    RowMetaInterface parametersMeta;
    first=false;
    if (data.infoStream.getStepMeta() != null) {
      if (meta.isExecuteEachInputRow()) {
        if (log.isDetailed())         logDetailed("Reading single row from stream [" + data.infoStream.getStepname() + "]");
        data.rowSet=findInputRowSet(data.infoStream.getStepname());
        if (data.rowSet == null) {
          throw new KettleException("Unable to find rowset to read from, perhaps step [" + data.infoStream.getStepname() + "] doesn't exist. (or perhaps you are trying a preview?)");
        }
        parameters=getRowFrom(data.rowSet);
        parametersMeta=data.rowSet.getRowMeta();
      }
 else {
        if (log.isDetailed())         logDetailed("Reading query parameters from stream [" + data.infoStream.getStepname() + "]");
        RowMetaAndData rmad=readStartDate();
        parameters=rmad.getData();
        parametersMeta=rmad.getRowMeta();
      }
      if (parameters != null) {
        if (log.isDetailed())         logDetailed("Query parameters found = " + parametersMeta.getString(parameters));
      }
    }
 else {
      parameters=new Object[]{};
      parametersMeta=new RowMeta();
    }
    if (meta.isExecuteEachInputRow() && (parameters == null || parametersMeta.size() == 0)) {
      setOutputDone();
      return false;
    }
    boolean success=doQuery(parametersMeta,parameters);
    if (!success) {
      return false;
    }
  }
 else {
    if (data.thisrow != null) {
      data.nextrow=data.db.getRow(data.rs,meta.isLazyConversionActive());
      if (data.nextrow != null)       incrementLinesInput();
    }
  }
  if (data.thisrow == null) {
    boolean done=false;
    if (meta.isExecuteEachInputRow()) {
      Object[] nextRow=getRowFrom(data.rowSet);
      if (nextRow == null) {
        done=true;
      }
 else {
        closePreviousQuery();
        boolean success=doQuery(data.rowSet.getRowMeta(),nextRow);
        if (!success) {
          return false;
        }
        if (data.thisrow != null) {
          putRow(data.rowMeta,data.thisrow);
          data.thisrow=data.nextrow;
          if (checkFeedback(getLinesInput())) {
            if (log.isBasic())             logBasic("linenr " + getLinesInput());
          }
        }
      }
    }
 else {
      done=true;
    }
    if (done) {
      setOutputDone();
      return false;
    }
  }
 else {
    putRow(data.rowMeta,data.thisrow);
    data.thisrow=data.nextrow;
    if (checkFeedback(getLinesInput())) {
      if (log.isBasic())       logBasic("linenr " + getLinesInput());
    }
  }
  return true;
}
