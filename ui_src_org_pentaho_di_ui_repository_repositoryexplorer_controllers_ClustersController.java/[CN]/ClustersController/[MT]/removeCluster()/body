{
  String clusterSchemaName="";
  try {
    Collection<UICluster> clusters=clustersTable.getSelectedItems();
    if (clusters != null && !clusters.isEmpty()) {
      for (      Object obj : clusters) {
        if (obj != null && obj instanceof UICluster) {
          UICluster cluster=(UICluster)obj;
          ClusterSchema clusterSchema=cluster.getClusterSchema();
          clusterSchemaName=clusterSchema.getName();
          ObjectId clusterId=repository.getClusterID(clusterSchema.getName());
          if (clusterId == null) {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.DoesNotExists.Message",clusterSchema.getName()));
            mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.Title"));
            mb.open();
          }
 else {
            repository.deleteClusterSchema(clusterId);
          }
        }
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
      mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.NoItemSelected.Message"));
      mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Delete.UnexpectedError.Message") + clusterSchemaName + "]",e);
  }
 finally {
    refreshClusters();
  }
}
