{
  size++;
  if (size >= resizeThresHold) {
    ByteArrayHashIndexEntry[] oldIndex=index;
    int newSize=2 * index.length;
    ByteArrayHashIndexEntry[] newIndex=new ByteArrayHashIndexEntry[newSize];
    for (int i=0; i < oldIndex.length; i++) {
      ByteArrayHashIndexEntry entry=oldIndex[i];
      if (entry != null) {
        oldIndex[i]=null;
        entry.nextEntry=null;
        int newIndexPointer=entry.hashCode & (newSize - 1);
        ByteArrayHashIndexEntry check=newIndex[newIndexPointer];
        if (check == null) {
          newIndex[newIndexPointer]=check;
        }
 else {
          ByteArrayHashIndexEntry previousCheck=null;
          while (check != null) {
            previousCheck=check;
            check=check.nextEntry;
          }
          while (newIndex[newIndexPointer] != null) {
            newIndexPointer++;
            if (newIndexPointer >= newSize) {
              newIndexPointer=0;
            }
          }
          previousCheck.nextEntry=entry;
          newIndex[newIndexPointer]=entry;
        }
        newIndex[newIndexPointer]=entry;
      }
    }
    index=newIndex;
    resizeThresHold=(int)(newSize * STANDARD_LOAD_FACTOR);
  }
}
