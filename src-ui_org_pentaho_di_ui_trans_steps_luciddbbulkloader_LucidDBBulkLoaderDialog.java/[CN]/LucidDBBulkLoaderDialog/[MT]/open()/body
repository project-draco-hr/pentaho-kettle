{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("LucidDBBulkLoaderDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("LucidDBBulkLoaderDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSchema=new Label(shell,SWT.RIGHT);
  wlSchema.setText(Messages.getString("LucidDBBulkLoaderDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin * 2);
  wlSchema.setLayoutData(fdlSchema);
  wSchema=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsMod);
  fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin * 2);
  fdSchema.right=new FormAttachment(100,0);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(Messages.getString("LucidDBBulkLoaderDialog.TargetTable.Label"));
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(Messages.getString("LucidDBBulkLoaderDialog.Browse.Button"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wSchema,margin);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlMaxErrors=new Label(shell,SWT.RIGHT);
  wlMaxErrors.setText(Messages.getString("LucidDBBulkLoaderDialog.MaxErrors.Label"));
  props.setLook(wlMaxErrors);
  fdlMaxErrors=new FormData();
  fdlMaxErrors.left=new FormAttachment(0,0);
  fdlMaxErrors.top=new FormAttachment(wTable,margin);
  fdlMaxErrors.right=new FormAttachment(middle,-margin);
  wlMaxErrors.setLayoutData(fdlMaxErrors);
  wMaxErrors=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMaxErrors);
  wMaxErrors.addModifyListener(lsMod);
  fdMaxErrors=new FormData();
  fdMaxErrors.left=new FormAttachment(middle,0);
  fdMaxErrors.top=new FormAttachment(wTable,margin);
  fdMaxErrors.right=new FormAttachment(100,0);
  wMaxErrors.setLayoutData(fdMaxErrors);
  wlFifoPath=new Label(shell,SWT.RIGHT);
  wlFifoPath.setText(Messages.getString("LucidDBBulkLoaderDialog.FifoPath.Label"));
  props.setLook(wlFifoPath);
  fdlFifoPath=new FormData();
  fdlFifoPath.left=new FormAttachment(0,0);
  fdlFifoPath.right=new FormAttachment(middle,-margin);
  fdlFifoPath.top=new FormAttachment(wMaxErrors,margin);
  wlFifoPath.setLayoutData(fdlFifoPath);
  wbFifoPath=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFifoPath);
  wbFifoPath.setText(Messages.getString("LucidDBBulkLoaderDialog.Browse.Button"));
  fdbFifoPath=new FormData();
  fdbFifoPath.right=new FormAttachment(100,0);
  fdbFifoPath.top=new FormAttachment(wMaxErrors,margin);
  wbFifoPath.setLayoutData(fdbFifoPath);
  wFifoPath=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFifoPath);
  wFifoPath.addModifyListener(lsMod);
  fdFifoPath=new FormData();
  fdFifoPath.left=new FormAttachment(middle,0);
  fdFifoPath.top=new FormAttachment(wMaxErrors,margin);
  fdFifoPath.right=new FormAttachment(wbFifoPath,-margin);
  wFifoPath.setLayoutData(fdFifoPath);
  wlFifoServer=new Label(shell,SWT.RIGHT);
  wlFifoServer.setText(Messages.getString("LucidDBBulkLoaderDialog.FifoServer.Label"));
  props.setLook(wlFifoServer);
  fdlFifoServer=new FormData();
  fdlFifoServer.left=new FormAttachment(0,0);
  fdlFifoServer.right=new FormAttachment(middle,-margin);
  fdlFifoServer.top=new FormAttachment(wFifoPath,margin * 2);
  wlFifoServer.setLayoutData(fdlFifoServer);
  wFifoServer=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFifoServer);
  wFifoServer.addModifyListener(lsMod);
  fdFifoServer=new FormData();
  fdFifoServer.left=new FormAttachment(middle,0);
  fdFifoServer.top=new FormAttachment(wFifoPath,margin * 2);
  fdFifoServer.right=new FormAttachment(100,0);
  wFifoServer.setLayoutData(fdFifoServer);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(Messages.getString("LucidDBBulkLoaderDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wSQL},margin,null);
  wlReturn=new Label(shell,SWT.NONE);
  wlReturn.setText(Messages.getString("LucidDBBulkLoaderDialog.Fields.Label"));
  props.setLook(wlReturn);
  fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(wFifoServer,margin);
  wlReturn.setLayoutData(fdlReturn);
  int UpInsCols=3;
  int UpInsRows=(input.getFieldTable() != null ? input.getFieldTable().length : 1);
  ColumnInfo[] ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo(Messages.getString("LucidDBBulkLoaderDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[1]=new ColumnInfo(Messages.getString("LucidDBBulkLoaderDialog.ColumnInfo.StreamField"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[2]=new ColumnInfo(Messages.getString("LucidDBBulkLoaderDialog.ColumnInfo.FormatOK"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"Y","N"},true);
  wReturn=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  wGetLU=new Button(shell,SWT.PUSH);
  wGetLU.setText(Messages.getString("LucidDBBulkLoaderDialog.GetFields.Label"));
  fdGetLU=new FormData();
  fdGetLU.top=new FormAttachment(wlReturn,margin);
  fdGetLU.right=new FormAttachment(100,0);
  wGetLU.setLayoutData(fdGetLU);
  fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlReturn,margin);
  fdReturn.right=new FormAttachment(wGetLU,-margin);
  fdReturn.bottom=new FormAttachment(wOK,-2 * margin);
  wReturn.setLayoutData(fdReturn);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getUpdate();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wFifoPath.addSelectionListener(lsDef);
  wFifoServer.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wMaxErrors.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
