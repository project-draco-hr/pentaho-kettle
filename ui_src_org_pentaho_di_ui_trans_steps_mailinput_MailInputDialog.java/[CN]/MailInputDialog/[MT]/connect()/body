{
  String errordescription=null;
  boolean retval=false;
  if (mailConn != null && mailConn.isConnected()) {
    retval=mailConn.isConnected();
  }
  if (!retval) {
    String realserver=transMeta.environmentSubstitute(wServerName.getText());
    String realuser=transMeta.environmentSubstitute(wUserName.getText());
    String realpass=transMeta.environmentSubstitute(wPassword.getText());
    String realProxyUsername=transMeta.environmentSubstitute(wProxyUsername.getText());
    int realport=Const.toInt(transMeta.environmentSubstitute(wPort.getText()),-1);
    try {
      mailConn=new MailConnection(LogChannel.UI,MailConnectionMeta.getProtocolFromString(wProtocol.getText(),MailConnectionMeta.PROTOCOL_IMAP),realserver,realport,realuser,realpass,wUseSSL.getSelection(),wUseProxy.getSelection(),realProxyUsername);
      mailConn.connect();
      retval=true;
    }
 catch (    Exception e) {
      errordescription=e.getMessage();
    }
  }
  if (!retval) {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setMessage(BaseMessages.getString(PKG,"MailInput.Connected.NOK.ConnectionBad",wServerName.getText()) + Const.CR + Const.NVL(errordescription,""));
    mb.setText(BaseMessages.getString(PKG,"MailInput.Connected.Title.Bad"));
    mb.open();
  }
  return (mailConn.isConnected());
}
