{
  DatabaseMeta databaseMeta=jobMeta.findDatabase(wConnection.getText());
  if (databaseMeta != null) {
    Database database=new Database(this,databaseMeta);
    try {
      database.connect();
      String Tablenames[]=database.getTablenames();
      EnterSelectionDialog dialog=new EnterSelectionDialog(shell,Tablenames,BaseMessages.getString(PKG,"JobTruncateTables.SelectTables.Title"),BaseMessages.getString(PKG,"JobTruncateTables.SelectTables.Message"));
      dialog.setMulti(true);
      dialog.setAvoidQuickSearch();
      if (dialog.open() != null) {
        int idx[]=dialog.getSelectionIndeces();
        for (int i=0; i < idx.length; i++) {
          TableItem tableItem=new TableItem(wFields.table,SWT.NONE);
          tableItem.setText(1,Tablenames[idx[i]]);
        }
      }
    }
 catch (    KettleDatabaseException e) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.Error.Title"),BaseMessages.getString(PKG,"JobEntryTruncateTables.ConnectionError.DialogMessage"),e);
    }
 finally {
      if (database != null)       database.disconnect();
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
}
