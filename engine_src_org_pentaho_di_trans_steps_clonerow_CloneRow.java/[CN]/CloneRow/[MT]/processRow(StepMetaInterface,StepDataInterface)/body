{
  meta=(CloneRowMeta)smi;
  data=(CloneRowData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    data.NrPrevFields=getInputRowMeta().size();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    data.addInfosToRow=(meta.isAddCloneFlag() || meta.isAddCloneNum());
    if (meta.isAddCloneFlag()) {
      String realflagfield=environmentSubstitute(meta.getCloneFlagField());
      if (Const.isEmpty(realflagfield)) {
        logError(BaseMessages.getString(PKG,"CloneRow.Error.CloneFlagFieldMissing"));
        throw new KettleException(BaseMessages.getString(PKG,"CloneRow.Error.CloneFlagFieldMissing"));
      }
    }
    if (meta.isAddCloneNum()) {
      String realnumfield=environmentSubstitute(meta.getCloneNumField());
      if (Const.isEmpty(realnumfield)) {
        logError(BaseMessages.getString(PKG,"CloneRow.Error.CloneNumFieldMissing"));
        throw new KettleException(BaseMessages.getString(PKG,"CloneRow.Error.CloneNumFieldMissing"));
      }
    }
    if (meta.isNrCloneInField()) {
      String cloneinfieldname=meta.getNrCloneField();
      if (Const.isEmpty(cloneinfieldname)) {
        logError(BaseMessages.getString(PKG,"CloneRow.Error.NrCloneInFieldMissing"));
        throw new KettleException(BaseMessages.getString(PKG,"CloneRow.Error.NrCloneInFieldMissing"));
      }
      if (data.indexOfNrCloneField < 0) {
        data.indexOfNrCloneField=getInputRowMeta().indexOfValue(cloneinfieldname);
        if (data.indexOfNrCloneField < 0) {
          logError(BaseMessages.getString(PKG,"CloneRow.Log.ErrorFindingField") + "[" + cloneinfieldname+ "]");
          throw new KettleException(BaseMessages.getString(PKG,"CloneRow.Exception.CouldnotFindField",cloneinfieldname));
        }
      }
    }
 else {
      String nrclonesString=environmentSubstitute(meta.getNrClones());
      data.nrclones=Const.toInt(nrclonesString,0);
      if (log.isDebug())       logDebug(BaseMessages.getString(PKG,"CloneRow.Log.NrClones","" + data.nrclones));
    }
  }
  Object[] outputRowData=r;
  if (data.addInfosToRow) {
    outputRowData=RowDataUtil.createResizedCopy(r,data.outputRowMeta.size());
    int rowIndex=data.NrPrevFields;
    if (meta.isAddCloneFlag()) {
      outputRowData[rowIndex]=false;
      rowIndex++;
    }
    if (meta.isAddCloneNum()) {
      outputRowData[rowIndex]=0L;
    }
  }
  putRow(data.outputRowMeta,outputRowData);
  if (meta.isNrCloneInField()) {
    data.nrclones=getInputRowMeta().getInteger(r,data.indexOfNrCloneField);
    if (log.isDebug())     logDebug(BaseMessages.getString(PKG,"CloneRow.Log.NrClones","" + data.nrclones));
  }
  for (int i=0; i < data.nrclones && !isStopped(); i++) {
    outputRowData=r.clone();
    if (data.addInfosToRow) {
      outputRowData=RowDataUtil.createResizedCopy(r,data.outputRowMeta.size());
      int rowIndex=data.NrPrevFields;
      if (meta.isAddCloneFlag()) {
        outputRowData[rowIndex]=true;
        rowIndex++;
      }
      if (meta.isAddCloneNum()) {
        Long clonenum=new Long(i + 1);
        outputRowData[rowIndex]=clonenum;
      }
    }
    putRow(data.outputRowMeta,outputRowData);
  }
  if (log.isDetailed() && checkFeedback(getLinesRead())) {
    logDetailed(BaseMessages.getString(PKG,"CloneRow.Log.LineNumber","" + getLinesRead()));
  }
  return true;
}
