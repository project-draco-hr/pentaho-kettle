{
  if (isJettyMode() && !request.getContextPath().startsWith(CONTEXT_PATH))   return;
  if (log.isDebug())   logDebug(toString());
  String name=request.getParameter(PARAM_NAME);
  long increment=Const.toLong(request.getParameter(PARAM_INCREMENT),10000);
  response.setStatus(HttpServletResponse.SC_OK);
  response.setContentType("text/xml");
  response.setCharacterEncoding(Const.XML_ENCODING);
  PrintStream out=new PrintStream(response.getOutputStream());
  out.println(XMLHandler.getXMLHeader(Const.XML_ENCODING));
  out.println(XMLHandler.openTag(XML_TAG));
  try {
    SlaveSequence slaveSequence=getTransformationMap().getSlaveSequence(name);
    if (slaveSequence == null && getTransformationMap().isAutomaticSlaveSequenceCreationAllowed()) {
      slaveSequence=getTransformationMap().createSlaveSequence(name);
    }
    if (slaveSequence == null) {
      response.setStatus(HttpServletResponse.SC_NOT_FOUND);
      out.println(XMLHandler.addTagValue(XML_TAG_ERROR,"Slave sequence '" + name + "' could not be found."));
    }
 else {
      LoggingObjectInterface loggingObject=new SimpleLoggingObject("Carte",LoggingObjectType.CARTE,null);
      long nextValue=slaveSequence.getNextValue(loggingObject,increment);
      out.println(XMLHandler.addTagValue(XML_TAG_VALUE,nextValue));
      out.println(XMLHandler.addTagValue(XML_TAG_INCREMENT,increment));
    }
  }
 catch (  Exception e) {
    response.setStatus(HttpServletResponse.SC_NOT_FOUND);
    out.println(XMLHandler.addTagValue(XML_TAG_ERROR,"Error retrieving next value from slave sequence: " + Const.getStackTracker(e)));
  }
  out.println(XMLHandler.closeTag(XML_TAG));
}
