{
  List<PluginInterface> registered=new ArrayList<PluginInterface>(cycles);
  try {
    for (int i=0; i < cycles; i++) {
      String id=nameSeed + '_' + i;
      PluginInterface mock=mock(PluginInterface.class);
      when(mock.getName()).thenReturn(id);
      when(mock.getIds()).thenReturn(new String[]{id});
      when(mock.getPluginType()).thenAnswer(new Answer<Object>(){
        @Override public Object answer(        InvocationOnMock invocation) throws Throwable {
          return type;
        }
      }
);
      registered.add(mock);
      PluginRegistry.getInstance().registerPlugin(type,mock);
    }
  }
  finally {
    addUsedPlugins(type,registered);
  }
  return null;
}
