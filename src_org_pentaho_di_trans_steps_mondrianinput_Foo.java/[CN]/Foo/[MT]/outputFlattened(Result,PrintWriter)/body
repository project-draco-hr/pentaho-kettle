{
  final Axis[] axes=result.getAxes();
  List<List<Object>> rows=new ArrayList<List<Object>>();
  List<String> headings=new ArrayList<String>();
  for (  Axis axis : axes) {
    final List<Position> positions=axis.getPositions();
    if (positions.isEmpty()) {
      return;
    }
    for (    Member member : positions.get(0)) {
      headings.add(member.getHierarchy().getUniqueName());
    }
  }
  int[] coords=new int[axes.length];
  outputFlattenedRecurse(result,rows,new ArrayList<Object>(),coords,0);
  pw.println("Headings:");
  int columnOrdinal=-1;
  for (  String heading : headings) {
    pw.println("\theading #" + (++columnOrdinal) + ": "+ heading);
  }
  pw.println();
  int rowOrdinal=-1;
  for (  List<Object> rowValues : rows) {
    pw.println("Row #" + (++rowOrdinal) + ":");
    columnOrdinal=-1;
    for (    Object rowValue : rowValues) {
      pw.println("\tvalue #" + (++columnOrdinal) + ": "+ rowValue);
    }
  }
}
