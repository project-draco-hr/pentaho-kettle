{
  ValueMetaInterface filename=new ValueMeta("filename",ValueMetaInterface.TYPE_STRING);
  filename.setOrigin(name);
  filename.setLength(255);
  row.addValueMeta(filename);
  ValueMetaInterface ft=new ValueMeta("filetype",ValueMetaInterface.TYPE_STRING);
  ft.setLength(50);
  ft.setOrigin(name);
  row.addValueMeta(ft);
  ValueMetaInterface shnr=new ValueMeta("shapenr",ValueMetaInterface.TYPE_INTEGER);
  shnr.setOrigin(name);
  row.addValueMeta(shnr);
  ValueMetaInterface pnr=new ValueMeta("partnr",ValueMetaInterface.TYPE_INTEGER);
  pnr.setOrigin(name);
  row.addValueMeta(pnr);
  ValueMetaInterface nrp=new ValueMeta("nrparts",ValueMetaInterface.TYPE_INTEGER);
  nrp.setOrigin(name);
  row.addValueMeta(nrp);
  ValueMetaInterface ptnr=new ValueMeta("pointnr",ValueMetaInterface.TYPE_INTEGER);
  ptnr.setOrigin(name);
  row.addValueMeta(ptnr);
  ValueMetaInterface nrpt=new ValueMeta("nrpointS",ValueMetaInterface.TYPE_INTEGER);
  nrpt.setOrigin(name);
  row.addValueMeta(nrpt);
  ValueMetaInterface x=new ValueMeta("x",ValueMetaInterface.TYPE_NUMBER);
  x.setOrigin(name);
  row.addValueMeta(x);
  ValueMetaInterface y=new ValueMeta("y",ValueMetaInterface.TYPE_NUMBER);
  y.setOrigin(name);
  row.addValueMeta(y);
  ValueMetaInterface m=new ValueMeta("measure",ValueMetaInterface.TYPE_NUMBER);
  m.setOrigin(name);
  row.addValueMeta(m);
  if (getDbfFilename() != null) {
    XBase xbase=new XBase(getLog(),getDbfFilename());
    try {
      xbase.setDbfFile(getDbfFilename());
      xbase.open();
      RowMetaInterface fields=xbase.getFields();
      for (int i=0; i < fields.size(); i++) {
        fields.getValueMeta(i).setOrigin(name);
        row.addValueMeta(fields.getValueMeta(i));
      }
    }
 catch (    Throwable e) {
      throw new KettleStepException("Unable to read from DBF file",e);
    }
 finally {
      xbase.close();
    }
  }
 else {
    throw new KettleStepException("Unable to read from DBF file: no filename specfied");
  }
}
