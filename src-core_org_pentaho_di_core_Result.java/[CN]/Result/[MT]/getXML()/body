{
  StringBuffer xml=new StringBuffer();
  xml.append(XMLHandler.openTag(XML_TAG));
  xml.append(XMLHandler.addTagValue("lines_input",nrLinesInput));
  xml.append(XMLHandler.addTagValue("lines_output",nrLinesOutput));
  xml.append(XMLHandler.addTagValue("lines_read",nrLinesRead));
  xml.append(XMLHandler.addTagValue("lines_written",nrLinesWritten));
  xml.append(XMLHandler.addTagValue("lines_updated",nrLinesUpdated));
  xml.append(XMLHandler.addTagValue("lines_rejected",nrLinesRejected));
  xml.append(XMLHandler.addTagValue("lines_deleted",nrLinesDeleted));
  xml.append(XMLHandler.addTagValue("nr_errors",nrErrors));
  xml.append(XMLHandler.addTagValue("nr_files_retrieved",nrFilesRetrieved));
  xml.append(XMLHandler.addTagValue("entry_nr",entryNr));
  xml.append(XMLHandler.addTagValue("result",result));
  ;
  xml.append(XMLHandler.addTagValue("exit_status",exitStatus));
  xml.append(XMLHandler.addTagValue("is_stopped",stopped));
  xml.append(XMLHandler.addTagValue("log_channel_id",logChannelId));
  xml.append(XMLHandler.openTag(XML_FILES_TAG));
  for (  ResultFile resultFile : resultFiles.values()) {
    xml.append(resultFile.getXML());
  }
  xml.append(XMLHandler.closeTag(XML_FILES_TAG));
  xml.append(XMLHandler.openTag(XML_ROWS_TAG));
  boolean firstRow=true;
  RowMetaInterface rowMeta=null;
  for (  RowMetaAndData row : rows) {
    if (firstRow) {
      firstRow=false;
      rowMeta=row.getRowMeta();
      xml.append(rowMeta.getMetaXML());
    }
    xml.append(rowMeta.getDataXML(row.getData()));
  }
  xml.append(XMLHandler.closeTag(XML_ROWS_TAG));
  xml.append(XMLHandler.closeTag(XML_TAG));
  return xml.toString();
}
