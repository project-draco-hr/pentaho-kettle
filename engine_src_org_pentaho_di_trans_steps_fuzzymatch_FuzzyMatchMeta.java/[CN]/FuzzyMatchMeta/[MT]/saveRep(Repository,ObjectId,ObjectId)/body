{
  try {
    StreamInterface infoStream=getStepIOMeta().getInfoStreams().get(0);
    rep.saveStepAttribute(id_transformation,id_step,"lookup_from_step",infoStream.getStepname());
    rep.saveStepAttribute(id_transformation,id_step,"lookupfield",lookupfield);
    rep.saveStepAttribute(id_transformation,id_step,"mainstreamfield",mainstreamfield);
    rep.saveStepAttribute(id_transformation,id_step,"outputmatchfield",outputmatchfield);
    rep.saveStepAttribute(id_transformation,id_step,"outputvaluefield",outputvaluefield);
    rep.saveStepAttribute(id_transformation,id_step,"caseSensitive",caseSensitive);
    rep.saveStepAttribute(id_transformation,id_step,"closervalue",closervalue);
    rep.saveStepAttribute(id_transformation,id_step,"minimalValue",minimalValue);
    rep.saveStepAttribute(id_transformation,id_step,"maximalValue",maximalValue);
    rep.saveStepAttribute(id_transformation,id_step,"separator",separator);
    rep.saveStepAttribute(id_transformation,id_step,"algorithm",getAlgorithmTypeCode(algorithm));
    for (int i=0; i < value.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"return_value_name",value[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"return_value_rename",valueName[i]);
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"FuzzyMatchMeta.Exception.UnableToSaveStepInfoToRepository") + id_step,e);
  }
}
