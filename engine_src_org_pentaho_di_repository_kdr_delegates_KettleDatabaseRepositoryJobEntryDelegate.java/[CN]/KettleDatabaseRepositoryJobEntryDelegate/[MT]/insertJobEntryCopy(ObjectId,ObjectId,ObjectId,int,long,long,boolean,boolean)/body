{
  ObjectId id=repository.connectionDelegate.getNextJobEntryCopyID();
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_ID_JOBENTRY_COPY),id);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_ID_JOBENTRY),id_jobentry);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_ID_JOB),id_job);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_ID_JOBENTRY_TYPE),id_jobentry_type);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_NR),new Long(nr));
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_GUI_LOCATION_X),new Long(gui_location_x));
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_GUI_LOCATION_Y),new Long(gui_location_y));
  table.addValue(new ValueMetaBoolean(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_GUI_DRAW),Boolean.valueOf(gui_draw));
  table.addValue(new ValueMetaBoolean(KettleDatabaseRepository.FIELD_JOBENTRY_COPY_PARALLEL),Boolean.valueOf(parallel));
  repository.connectionDelegate.getDatabase().prepareInsert(table.getRowMeta(),KettleDatabaseRepository.TABLE_R_JOBENTRY_COPY);
  repository.connectionDelegate.getDatabase().setValuesInsert(table);
  repository.connectionDelegate.getDatabase().insertRow();
  repository.connectionDelegate.getDatabase().closeInsert();
  return id;
}
