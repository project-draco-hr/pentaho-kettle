{
  RowMetaInterface rowMeta=generateTestRowMeta();
  String fieldsClause="A, B, C";
  String conditionClause="A='Foo' AND NOT ( B>5 OR C='AAA' ) ";
  SQLFields fields=new SQLFields("Service",rowMeta,fieldsClause);
  SQLCondition sqlCondition=new SQLCondition("Service",conditionClause,rowMeta,fields);
  Condition condition=sqlCondition.getCondition();
  assertNotNull(condition);
  assertFalse(condition.isEmpty());
  assertFalse("Non-atomic condition expected",condition.isAtomic());
  assertEquals(2,condition.nrConditions());
  Condition leftAnd=condition.getCondition(0);
  assertEquals("A",leftAnd.getLeftValuename());
  assertEquals("=",leftAnd.getFunctionDesc());
  assertEquals("Foo",leftAnd.getRightExactString());
  Condition rightAnd=condition.getCondition(1);
  assertEquals(1,rightAnd.nrConditions());
  Condition notBlock=rightAnd.getCondition(0);
  assertTrue(notBlock.isNegated());
  assertEquals(2,notBlock.nrConditions());
  Condition leftOr=notBlock.getCondition(0);
  assertTrue(leftOr.isAtomic());
  assertEquals("B",leftOr.getLeftValuename());
  assertEquals(">",leftOr.getFunctionDesc());
  assertEquals("5",leftOr.getRightExactString());
  assertEquals(Condition.OPERATOR_NONE,leftOr.getOperator());
  Condition rightOr=notBlock.getCondition(1);
  assertEquals(Condition.OPERATOR_OR,rightOr.getOperator());
  assertEquals("C",rightOr.getLeftValuename());
  assertEquals("=",rightOr.getFunctionDesc());
  assertEquals("AAA",rightOr.getRightExactString());
}
