{
  RowMetaInterface rowMeta=generateTestRowMeta();
  String fieldsClause="A, B";
  String conditionClause="A='Foo' AND B>5 OR PARAMETER('par')='foo'";
  SQLFields fields=new SQLFields("Service",rowMeta,fieldsClause);
  SQLCondition sqlCondition=new SQLCondition("Service",conditionClause,rowMeta,fields);
  Condition condition=sqlCondition.getCondition();
  assertNotNull(condition);
  assertFalse(condition.isEmpty());
  assertFalse("Non-atomic condition expected",condition.isAtomic());
  assertEquals(2,condition.nrConditions());
  Condition one=condition.getCondition(0);
  assertEquals(2,one.nrConditions());
  Condition leftAnd=one.getCondition(0);
  assertEquals("A",leftAnd.getLeftValuename());
  assertEquals("=",leftAnd.getFunctionDesc());
  assertEquals("Foo",leftAnd.getRightExactString());
  Condition rightAnd=one.getCondition(1);
  assertEquals("B",rightAnd.getLeftValuename());
  assertEquals(">",rightAnd.getFunctionDesc());
  assertEquals("5",rightAnd.getRightExactString());
  assertEquals(Condition.OPERATOR_AND,rightAnd.getOperator());
  Condition param=condition.getCondition(1);
  assertTrue(param.isAtomic());
  assertEquals(Condition.OPERATOR_OR,param.getOperator());
  assertEquals(Condition.FUNC_TRUE,param.getFunction());
  assertEquals("par",param.getLeftValuename());
  assertEquals("foo",param.getRightExactString());
}
