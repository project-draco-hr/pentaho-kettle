{
  RowMetaInterface rowMeta=generateTestRowMeta();
  String fieldsClause="A, B, C, D";
  String conditionClause="A='Foo' OR B>5 AND C='foo' OR D=123";
  SQLFields fields=new SQLFields(rowMeta,fieldsClause);
  SQLCondition sqlCondition=new SQLCondition(conditionClause,rowMeta,fields);
  Condition condition=sqlCondition.getCondition();
  assertNotNull(condition);
  assertFalse(condition.isEmpty());
  assertFalse("Non-atomic condition expected",condition.isAtomic());
  assertEquals(3,condition.nrConditions());
  Condition leftOr=condition.getCondition(0);
  assertTrue(leftOr.isAtomic());
  assertEquals("A",leftOr.getLeftValuename());
  assertEquals("=",leftOr.getFunctionDesc());
  assertEquals("Foo",leftOr.getRightExactString());
  Condition middleOr=condition.getCondition(1);
  assertEquals(2,middleOr.nrConditions());
  Condition leftAnd=middleOr.getCondition(0);
  assertTrue(leftAnd.isAtomic());
  assertEquals("B",leftAnd.getLeftValuename());
  assertEquals(">",leftAnd.getFunctionDesc());
  assertEquals("5",leftAnd.getRightExactString());
  assertEquals(Condition.OPERATOR_NONE,leftAnd.getOperator());
  Condition rightAnd=middleOr.getCondition(1);
  assertEquals(Condition.OPERATOR_AND,rightAnd.getOperator());
  assertEquals("C",rightAnd.getLeftValuename());
  assertEquals("=",rightAnd.getFunctionDesc());
  assertEquals("foo",rightAnd.getRightExactString());
  Condition rightOr=condition.getCondition(2);
  assertTrue(rightOr.isAtomic());
  assertEquals("D",rightOr.getLeftValuename());
  assertEquals("=",rightOr.getFunctionDesc());
  assertEquals("123",rightOr.getRightExactString());
  assertEquals(Condition.OPERATOR_OR,rightOr.getOperator());
}
