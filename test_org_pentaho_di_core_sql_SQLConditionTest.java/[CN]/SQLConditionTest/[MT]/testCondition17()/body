{
  RowMetaInterface rowMeta=SQLTest.generateTest4RowMeta();
  String fieldsClause="A, B, C, D";
  String conditionClause="A='Foo' AND B>5 AND C='foo' AND D=123";
  SQLFields fields=new SQLFields("Service",rowMeta,fieldsClause);
  SQLCondition sqlCondition=new SQLCondition("Service",conditionClause,rowMeta,fields);
  Condition condition=sqlCondition.getCondition();
  assertNotNull(condition);
  assertFalse(condition.isEmpty());
  assertFalse("Non-atomic condition expected",condition.isAtomic());
  assertEquals(4,condition.nrConditions());
  Condition one=condition.getCondition(0);
  assertEquals("A",one.getLeftValuename());
  assertEquals("=",one.getFunctionDesc());
  assertEquals("Foo",one.getRightExactString());
  Condition two=condition.getCondition(1);
  assertEquals("B",two.getLeftValuename());
  assertEquals(">",two.getFunctionDesc());
  assertEquals("5",two.getRightExactString());
  assertEquals(Condition.OPERATOR_AND,two.getOperator());
  Condition three=condition.getCondition(2);
  assertEquals("C",three.getLeftValuename());
  assertEquals("=",three.getFunctionDesc());
  assertEquals("foo",three.getRightExactString());
  assertEquals(Condition.OPERATOR_AND,three.getOperator());
  Condition four=condition.getCondition(3);
  assertEquals("D",four.getLeftValuename());
  assertEquals("=",four.getFunctionDesc());
  assertEquals("123",four.getRightExactString());
  assertEquals(Condition.OPERATOR_AND,four.getOperator());
}
