{
  RowMetaInterface rowMeta=SQLTest.generateTest4RowMeta();
  String fieldsClause="A, B";
  String conditionClause="A LIKE '%AL%' AND ( B LIKE '15%' OR C IS NULL )";
  SQLFields fields=new SQLFields("Service",rowMeta,fieldsClause);
  SQLCondition sqlCondition=new SQLCondition("Service",conditionClause,rowMeta,fields);
  Condition condition=sqlCondition.getCondition();
  assertNotNull(condition);
  assertFalse(condition.isEmpty());
  assertFalse("Non-atomic condition expected",condition.isAtomic());
  assertEquals(2,condition.nrConditions());
  Condition leftAnd=condition.getCondition(0);
  assertTrue(leftAnd.isAtomic());
  assertEquals("A",leftAnd.getLeftValuename());
  assertEquals("LIKE",leftAnd.getFunctionDesc());
  assertEquals("%AL%",leftAnd.getRightExactString());
  Condition rightBracket=condition.getCondition(1);
  assertEquals(1,rightBracket.nrConditions());
  Condition rightAnd=rightBracket.getCondition(0);
  assertEquals(2,rightAnd.nrConditions());
  Condition leftOr=rightAnd.getCondition(0);
  assertTrue(leftOr.isAtomic());
  assertEquals("B",leftOr.getLeftValuename());
  assertEquals("LIKE",leftOr.getFunctionDesc());
  assertEquals("15%",leftOr.getRightExactString());
  assertEquals(Condition.OPERATOR_NONE,leftOr.getOperator());
  Condition rightOr=rightAnd.getCondition(1);
  assertEquals(Condition.OPERATOR_OR,rightOr.getOperator());
  assertEquals("C",rightOr.getLeftValuename());
  assertEquals("IS NULL",rightOr.getFunctionDesc());
  assertNull(rightOr.getRightExactString());
}
