{
  try {
    super.loadRep(rep,id_jobentry,databases);
    servername=rep.getJobEntryAttributeString(id_jobentry,"servername");
    username=rep.getJobEntryAttributeString(id_jobentry,"username");
    password=rep.getJobEntryAttributeString(id_jobentry,"usessl");
    usessl=rep.getJobEntryAttributeBoolean(id_jobentry,"delete");
    int intSSLPort=(int)rep.getJobEntryAttributeInteger(id_jobentry,"sslport");
    sslport=rep.getJobEntryAttributeString(id_jobentry,"sslport");
    if (intSSLPort > 0 && Const.isEmpty(sslport))     sslport=Integer.toString(intSSLPort);
    outputdirectory=rep.getJobEntryAttributeString(id_jobentry,"outputdirectory");
    filenamepattern=rep.getJobEntryAttributeString(id_jobentry,"filenamepattern");
    retrievemails=(int)rep.getJobEntryAttributeInteger(id_jobentry,"retrievemails");
    firstmails=rep.getJobEntryAttributeString(id_jobentry,"firstmails");
    delete=rep.getJobEntryAttributeBoolean(id_jobentry,"delete");
  }
 catch (  KettleException dbe) {
    throw new KettleException("Unable to load job entry of type 'get pop' exists from the repository for id_jobentry=" + id_jobentry,dbe);
  }
}
