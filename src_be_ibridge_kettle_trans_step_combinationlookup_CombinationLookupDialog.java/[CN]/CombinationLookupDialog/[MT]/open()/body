{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("CombinationLookupDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  ci=input.getDatabase();
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("CombinationLookupDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabase() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wConnection.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      ci=transMeta.findDatabase(wConnection.getText());
      setAutoincUse();
      setSequence();
      input.setChanged();
    }
  }
);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(Messages.getString("CombinationLookupDialog.Target.Label"));
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wConnection,margin * 2);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(Messages.getString("CombinationLookupDialog.BrowseTable.Button"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wConnection,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wConnection,margin * 2);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText(Messages.getString("CombinationLookupDialog.Commitsize.Label"));
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.right=new FormAttachment(middle,-margin);
  fdlCommit.top=new FormAttachment(wTable,margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText(Messages.getString("CombinationLookupDialog.Keyfields.Label"));
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wCommit,margin);
  fdlKey.right=new FormAttachment(100,0);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=2;
  int nrKeyRows=(input.getKeyField() != null ? input.getKeyField().length : 1);
  ColumnInfo[] ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo(Messages.getString("CombinationLookupDialog.ColumnInfo.DimensionField"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[1]=new ColumnInfo(Messages.getString("CombinationLookupDialog.ColumnInfo.FieldInStream"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  wKey=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(Messages.getString("CombinationLookupDialog.GetFields.Button"));
  wCreate=new Button(shell,SWT.PUSH);
  wCreate.setText(Messages.getString("CombinationLookupDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wGet,wCreate,wCancel},margin,null);
  wlHashfield=new Label(shell,SWT.RIGHT);
  wlHashfield.setText(Messages.getString("CombinationLookupDialog.Hashfield.Label"));
  props.setLook(wlHashfield);
  fdlHashfield=new FormData();
  fdlHashfield.left=new FormAttachment(0,0);
  fdlHashfield.right=new FormAttachment(middle,-margin);
  fdlHashfield.bottom=new FormAttachment(wOK,-2 * margin);
  wlHashfield.setLayoutData(fdlHashfield);
  wHashfield=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wHashfield);
  wHashfield.addModifyListener(lsMod);
  fdHashfield=new FormData();
  fdHashfield.left=new FormAttachment(middle,0);
  fdHashfield.right=new FormAttachment(100,0);
  fdHashfield.bottom=new FormAttachment(wOK,-2 * margin);
  wHashfield.setLayoutData(fdHashfield);
  wlHashcode=new Label(shell,SWT.RIGHT);
  wlHashcode.setText(Messages.getString("CombinationLookupDialog.Hashcode.Label"));
  props.setLook(wlHashcode);
  fdlHashcode=new FormData();
  fdlHashcode.left=new FormAttachment(0,0);
  fdlHashcode.right=new FormAttachment(middle,-margin);
  fdlHashcode.bottom=new FormAttachment(wHashfield,-margin);
  wlHashcode.setLayoutData(fdlHashcode);
  wHashcode=new Button(shell,SWT.CHECK);
  props.setLook(wHashcode);
  fdHashcode=new FormData();
  fdHashcode.left=new FormAttachment(middle,0);
  fdHashcode.right=new FormAttachment(100,0);
  fdHashcode.bottom=new FormAttachment(wHashfield,-margin);
  wHashcode.setLayoutData(fdHashcode);
  wHashcode.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      enableFields();
    }
  }
);
  wlReplace=new Label(shell,SWT.RIGHT);
  wlReplace.setText(Messages.getString("CombinationLookupDialog.Replace.Label"));
  props.setLook(wlReplace);
  fdlReplace=new FormData();
  fdlReplace.left=new FormAttachment(0,0);
  fdlReplace.right=new FormAttachment(middle,-margin);
  fdlReplace.bottom=new FormAttachment(wHashcode,-margin);
  wlReplace.setLayoutData(fdlReplace);
  wReplace=new Button(shell,SWT.CHECK);
  props.setLook(wReplace);
  fdReplace=new FormData();
  fdReplace.left=new FormAttachment(middle,0);
  fdReplace.bottom=new FormAttachment(wHashcode,-margin);
  fdReplace.right=new FormAttachment(100,0);
  wReplace.setLayoutData(fdReplace);
  wReplace.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      enableFields();
    }
  }
);
  gTechGroup=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gTechGroup.setText(Messages.getString("CombinationLookupDialog.TechGroup.Label"));
  GridLayout gridLayout=new GridLayout(3,false);
  gTechGroup.setLayout(gridLayout);
  fdTechGroup=new FormData();
  fdTechGroup.left=new FormAttachment(middle,0);
  fdTechGroup.bottom=new FormAttachment(wReplace,-margin);
  fdTechGroup.right=new FormAttachment(100,0);
  gTechGroup.setBackground(shell.getBackground());
  gTechGroup.setLayoutData(fdTechGroup);
  wTableMax=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wTableMax);
  wTableMax.setSelection(false);
  gdTableMax=new GridData();
  wTableMax.setLayoutData(gdTableMax);
  wTableMax.setToolTipText(Messages.getString("CombinationLookupDialog.TableMaximum.Tooltip",Const.CR));
  wlTableMax=new Label(gTechGroup,SWT.LEFT);
  wlTableMax.setText(Messages.getString("CombinationLookupDialog.TableMaximum.Label"));
  props.setLook(wlTableMax);
  gdlTableMax=new GridData(GridData.FILL_BOTH);
  gdlTableMax.horizontalSpan=2;
  gdlTableMax.verticalSpan=1;
  wlTableMax.setLayoutData(gdlTableMax);
  wSeqButton=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wSeqButton);
  wSeqButton.setSelection(false);
  gdSeqButton=new GridData();
  wSeqButton.setLayoutData(gdSeqButton);
  wSeqButton.setToolTipText(Messages.getString("CombinationLookupDialog.Sequence.Tooltip",Const.CR));
  wlSeqButton=new Label(gTechGroup,SWT.LEFT);
  wlSeqButton.setText(Messages.getString("CombinationLookupDialog.Sequence.Label"));
  props.setLook(wlSeqButton);
  gdlSeqButton=new GridData();
  wlSeqButton.setLayoutData(gdlSeqButton);
  wSeq=new Text(gTechGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSeq);
  wSeq.addModifyListener(lsMod);
  gdSeq=new GridData(GridData.FILL_HORIZONTAL);
  wSeq.setLayoutData(gdSeq);
  wSeq.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent arg0){
      input.setTechKeyCreation(CombinationLookupMeta.CREATION_METHOD_SEQUENCE);
      wSeqButton.setSelection(true);
      wAutoinc.setSelection(false);
      wTableMax.setSelection(false);
    }
    public void focusLost(    FocusEvent arg0){
    }
  }
);
  wAutoinc=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wAutoinc);
  wAutoinc.setSelection(false);
  gdAutoinc=new GridData();
  wAutoinc.setLayoutData(gdAutoinc);
  wAutoinc.setToolTipText(Messages.getString("CombinationLookupDialog.AutoincButton.Tooltip",Const.CR));
  wlAutoinc=new Label(gTechGroup,SWT.LEFT);
  wlAutoinc.setText(Messages.getString("CombinationLookupDialog.Autoincrement.Label"));
  props.setLook(wlAutoinc);
  gdlAutoinc=new GridData();
  wlAutoinc.setLayoutData(gdlAutoinc);
  setTableMax();
  setSequence();
  setAutoincUse();
  wlTk=new Label(shell,SWT.RIGHT);
  wlTk.setText(Messages.getString("CombinationLookupDialog.TechnicalKey.Label"));
  props.setLook(wlTk);
  fdlTk=new FormData();
  fdlTk.left=new FormAttachment(0,0);
  fdlTk.right=new FormAttachment(middle,-margin);
  fdlTk.bottom=new FormAttachment(gTechGroup,-margin);
  wlTk.setLayoutData(fdlTk);
  wTk=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTk);
  fdTk=new FormData();
  fdTk.left=new FormAttachment(middle,0);
  fdTk.bottom=new FormAttachment(gTechGroup,-margin);
  fdTk.right=new FormAttachment(100,0);
  wTk.setLayoutData(fdTk);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(100,0);
  fdKey.bottom=new FormAttachment(wTk,-margin);
  wKey.setLayoutData(fdKey);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCreate=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCreate.addListener(SWT.Selection,lsCreate);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
