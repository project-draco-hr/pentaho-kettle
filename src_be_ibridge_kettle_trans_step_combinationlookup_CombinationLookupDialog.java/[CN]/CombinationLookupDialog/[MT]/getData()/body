{
  int i;
  log.logDebug(toString(),Messages.getString("CombinationLookupDialog.Log.GettingKeyInfo"));
  if (input.getKeyField() != null)   for (i=0; i < input.getKeyField().length; i++) {
    TableItem item=wKey.table.getItem(i);
    if (input.getKeyLookup()[i] != null)     item.setText(1,input.getKeyLookup()[i]);
    if (input.getKeyField()[i] != null)     item.setText(2,input.getKeyField()[i]);
  }
  wReplace.setSelection(input.replaceFields());
  wHashcode.setSelection(input.useHash());
  wHashfield.setEnabled(input.useHash());
  wHashfield.setVisible(input.useHash());
  wlHashfield.setEnabled(input.useHash());
  String techKeyCreation=input.getTechKeyCreation();
  if (techKeyCreation == null) {
    DatabaseMeta database=input.getDatabase();
    if (database == null || !database.supportsAutoinc()) {
      input.setUseAutoinc(false);
    }
    wAutoinc.setSelection(input.isUseAutoinc());
    wSeqButton.setSelection(input.getSequenceFrom() != null && input.getSequenceFrom().length() > 0);
    if (input.isUseAutoinc() == false && (input.getSequenceFrom() == null || input.getSequenceFrom().length() <= 0)) {
      wTableMax.setSelection(true);
    }
    if (database != null && database.supportsSequences() && input.getSequenceFrom() != null) {
      wSeq.setText(input.getSequenceFrom());
      input.setUseAutoinc(false);
      wTableMax.setSelection(false);
    }
  }
 else {
    if (CombinationLookupMeta.CREATION_METHOD_AUTOINC.equals(techKeyCreation)) {
      wAutoinc.setSelection(true);
    }
 else     if ((CombinationLookupMeta.CREATION_METHOD_SEQUENCE.equals(techKeyCreation))) {
      wSeqButton.setSelection(true);
    }
 else {
      wTableMax.setSelection(true);
      input.setTechKeyCreation(CombinationLookupMeta.CREATION_METHOD_TABLEMAX);
    }
    if (input.getSequenceFrom() != null) {
      wSeq.setText(input.getSequenceFrom());
    }
  }
  setAutoincUse();
  setSequence();
  setTableMax();
  if (input.getTablename() != null)   wTable.setText(input.getTablename());
  if (input.getTechnicalKeyField() != null)   wTk.setText(input.getTechnicalKeyField());
  if (input.getDatabase() != null)   wConnection.setText(input.getDatabase().getName());
 else   if (transMeta.nrDatabases() == 1) {
    wConnection.setText(transMeta.getDatabase(0).getName());
  }
  if (input.getHashField() != null)   wHashfield.setText(input.getHashField());
  wCommit.setText("" + input.getCommitSize());
  wKey.setRowNums();
  wKey.optWidth(true);
  wStepname.selectAll();
}
