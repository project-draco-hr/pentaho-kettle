{
  int i;
  log.logDebug(toString(),Messages.getString("CombinationLookupDialog.Log.GettingKeyInfo"));
  if (input.getKeyField() != null)   for (i=0; i < input.getKeyField().length; i++) {
    TableItem item=wKey.table.getItem(i);
    if (input.getKeyField()[i] != null)     item.setText(1,input.getKeyField()[i]);
    if (input.getKeyLookup()[i] != null)     item.setText(2,input.getKeyLookup()[i]);
  }
  wReplace.setSelection(input.replaceFields());
  wHashcode.setSelection(input.useHash());
  wHashfield.setEnabled(input.useHash());
  wHashfield.setVisible(input.useHash());
  wlHashfield.setEnabled(input.useHash());
  setAutoinc();
  if (input.getTablename() != null)   wTable.setText(input.getTablename());
  if (input.getTechnicalKeyField() != null)   wTk.setText(input.getTechnicalKeyField());
  wAutoinc.setSelection(input.isUseAutoinc());
  if (input.getSequenceFrom() != null)   wSeq.setText(input.getSequenceFrom());
  if (input.getDatabase() != null)   wConnection.setText(input.getDatabase().getName());
 else   if (transMeta.nrDatabases() == 1) {
    wConnection.setText(transMeta.getDatabase(0).getName());
  }
  if (input.getHashField() != null)   wHashfield.setText(input.getHashField());
  wCommit.setText("" + input.getCommitSize());
  wKey.setRowNums();
  wKey.optWidth(true);
  wStepname.selectAll();
}
