{
  String[] dataformats=new String[DataFormat.values().length];
  int i=0;
  for (  DataFormat format : DataFormat.values()) {
    dataformats[i++]=format.getDisplayText();
  }
  Map<String,Charset> availableCharsetsMap=Charset.availableCharsets();
  String[] availableCharsets=new String[availableCharsetsMap.size()];
  int j=0;
  for (  String charsetName : availableCharsetsMap.keySet()) {
    availableCharsets[j++]=charsetName;
  }
  dataFormatSelect=addStandardSelect(BaseMessages.getString(PKG,"InfobrightLoaderDialog.Dataformat.Label"),prevControl,dataformats);
  targetSchemaText=addStandardTextVar(BaseMessages.getString(PKG,"InfobrightLoaderDialog.TargetSchema.Label"),dataFormatSelect);
  targetTableText=addStandardTextVar(BaseMessages.getString(PKG,"InfobrightLoaderDialog.TargetTable.Label"),targetSchemaText);
  charsetSelect=addStandardSelect(BaseMessages.getString(PKG,"InfobrightLoaderDialog.Charset.Label"),targetTableText,availableCharsets);
  agentPortText=addStandardTextVar(BaseMessages.getString(PKG,"InfobrightLoaderDialog.AgentPort.Label"),charsetSelect);
  debugFileText=addStandardTextVar(BaseMessages.getString(PKG,"InfobrightLoaderDialog.DebugFile.Label"),agentPortText);
  return debugFileText;
}
