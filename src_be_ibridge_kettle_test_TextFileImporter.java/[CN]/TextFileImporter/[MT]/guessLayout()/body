{
  Vector retval=new Vector();
  try {
    int maxlength=0;
    int linenr=1;
    FileReader fr=new FileReader(filename);
    String line=readLine(fr);
    while (line != null && line.length() > 0 && linenr < nrrows) {
      if (line.length() > maxlength)       maxlength=line.length();
      linenr++;
      line=readLine(fr);
    }
    fr.close();
    System.out.println("Max. length = " + maxlength);
    Hashtable positions[]=new Hashtable[maxlength];
    for (int i=0; i < maxlength; i++) {
      positions[i]=new Hashtable();
    }
    fr=new FileReader(filename);
    line=readLine(fr);
    linenr=1;
    while (line != null && line.length() > 0 && linenr < nrrows) {
      for (int i=0; i < line.length(); i++) {
        char ch=line.charAt(i);
        if (ch != ' ') {
          Character chr=new Character(line.charAt(i));
          Integer occ=(Integer)positions[i].get(chr);
          if (occ == null)           occ=new Integer(1);
 else           occ=new Integer(occ.intValue() + 1);
          positions[i].put(chr,occ);
        }
      }
      line=readLine(fr);
      linenr++;
    }
    fr.close();
    int min=999;
    for (int i=0; i < maxlength; i++) {
      Hashtable pos=positions[i];
      int size=nrentries(pos);
      if (min > size && size > 0)       min=size;
    }
    System.out.println("Minimal nr of occurances : " + min);
    boolean hadpeak=false;
    for (int i=0; i < maxlength; i++) {
      Hashtable pos=positions[i];
      int size=nrentries(pos);
      boolean valey=false;
      if (size <= min + margin && hadpeak && size > 0) {
        valey=true;
        hadpeak=false;
      }
 else {
        if (size > min + margin) {
          hadpeak=true;
        }
      }
      if (valey) {
        System.out.print("x");
        retval.add(new Integer(i));
      }
 else {
        System.out.print(" ");
      }
    }
    System.out.println();
  }
 catch (  IOException e) {
  }
  return retval;
}
