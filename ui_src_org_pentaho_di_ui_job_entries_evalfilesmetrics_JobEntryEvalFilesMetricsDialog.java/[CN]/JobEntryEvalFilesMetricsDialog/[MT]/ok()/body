{
  if (Utils.isEmpty(wName.getText())) {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setText(BaseMessages.getString(PKG,"System.StepJobEntryNameMissing.Title"));
    mb.setMessage(BaseMessages.getString(PKG,"System.JobEntryNameMissing.Msg"));
    mb.open();
    return;
  }
  jobEntry.setName(wName.getText());
  jobEntry.setResultFilenamesWildcard(wResultFilenamesWildcard.getText());
  jobEntry.setResultFieldFile(wResultFieldFile.getText());
  jobEntry.setResultFieldWildcard(wResultFieldWildcard.getText());
  jobEntry.setResultFieldIncludeSubfolders(wResultFieldIncludeSubFolders.getText());
  jobEntry.sourceFiles=JobEntryEvalFilesMetrics.getSourceFilesByDesc(wSourceFiles.getText());
  jobEntry.evaluationType=JobEntryEvalFilesMetrics.getEvaluationTypeByDesc(wEvaluationType.getText());
  jobEntry.scale=JobEntryEvalFilesMetrics.getScaleByDesc(wScale.getText());
  jobEntry.setSuccessConditionType(JobEntrySimpleEval.getSuccessNumberConditionByDesc(wSuccessNumberCondition.getText()));
  jobEntry.setCompareValue(wCompareValue.getText());
  jobEntry.setMinValue(wMinValue.getText());
  jobEntry.setMaxValue(wMaxValue.getText());
  int nritems=wFields.nrNonEmpty();
  int nr=0;
  for (int i=0; i < nritems; i++) {
    String arg=wFields.getNonEmpty(i).getText(1);
    if (arg != null && arg.length() != 0) {
      nr++;
    }
  }
  String[] sourceFileFolder=new String[nr];
  String[] sourceWildcard=new String[nr];
  String[] sourceIncludeSubfolders=new String[nr];
  nr=0;
  for (int i=0; i < nritems; i++) {
    String source=wFields.getNonEmpty(i).getText(1);
    String wild=wFields.getNonEmpty(i).getText(2);
    String includeSubFolders=wFields.getNonEmpty(i).getText(3);
    if (source != null && source.length() != 0) {
      sourceFileFolder[nr]=source;
      sourceWildcard[nr]=wild;
      sourceIncludeSubfolders[nr]=JobEntryEvalFilesMetrics.getIncludeSubFolders(includeSubFolders);
      nr++;
    }
  }
  jobEntry.setSourceFileFolder(sourceFileFolder);
  jobEntry.setSourceWildcard(sourceWildcard);
  jobEntry.setSourceIncludeSubfolders(sourceIncludeSubfolders);
  dispose();
}
