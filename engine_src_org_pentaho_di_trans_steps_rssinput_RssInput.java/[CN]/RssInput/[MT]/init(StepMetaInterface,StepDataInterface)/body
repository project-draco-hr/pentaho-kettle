{
  meta=(RssInputMeta)smi;
  data=(RssInputData)sdi;
  if (super.init(smi,sdi)) {
    if (meta.includeRowNumber() && Const.isEmpty(meta.getRowNumberField())) {
      logError(BaseMessages.getString(PKG,"RssInput.Error.RowNumberFieldMissing"));
      return false;
    }
    if (meta.includeUrl() && Const.isEmpty(meta.geturlField())) {
      logError(BaseMessages.getString(PKG,"RssInput.Error.UrlFieldMissing"));
      return false;
    }
    if (!Const.isEmpty(meta.getReadFrom())) {
      try {
        SimpleDateFormat fdrss=new SimpleDateFormat("yyyy-MM-dd");
        fdrss.setLenient(false);
        data.readfromdatevalide=fdrss.parse(meta.getRealReadFrom());
      }
 catch (      Exception e) {
        logError("can not validate ''Read From date'' : " + environmentSubstitute(meta.getReadFrom()));
        return false;
      }
    }
    if (meta.urlInField()) {
      if (meta.getUrl() == null && meta.getUrl().length == 0) {
        logError(BaseMessages.getString(PKG,"RssInput.Log.UrlMissing"));
        return false;
      }
    }
 else {
      data.urlsize=meta.getUrl().length;
      try {
        data.outputRowMeta=new RowMeta();
        meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
        data.convertRowMeta=data.outputRowMeta.cloneToType(ValueMetaInterface.TYPE_STRING);
      }
 catch (      Exception e) {
        logError("Error initializing step: " + e.toString());
        logError(Const.getStackTracker(e));
        return false;
      }
    }
    data.rownr=1L;
    data.urlnr=0;
    data.nrInputFields=meta.getInputFields().length;
    return true;
  }
  return false;
}
