{
  if (isReceivingInput) {
    inputMeta.setFilenameField(wFilenameField.getText());
    inputMeta.setIncludingFilename(wIncludeFilename.getSelection());
  }
 else {
    inputMeta.setFilename(wFilename.getText());
  }
  inputMeta.setDelimiter(wDelimiter.getText());
  inputMeta.setEnclosure(wEnclosure.getText());
  inputMeta.setBufferSize(wBufferSize.getText());
  inputMeta.setLazyConversionActive(wLazyConversion.getSelection());
  inputMeta.setHeaderPresent(wHeaderPresent.getSelection());
  inputMeta.setRowNumField(wRowNumField.getText());
  inputMeta.setAddResultFile(wAddResult.getSelection());
  inputMeta.setRunningInParallel(wRunningInParallel.getSelection());
  inputMeta.setNewlinePossibleInFields(wNewlinePossible.getSelection());
  inputMeta.setEncoding(wEncoding.getText());
  int nrNonEmptyFields=wFields.nrNonEmpty();
  inputMeta.allocate(nrNonEmptyFields);
  for (int i=0; i < nrNonEmptyFields; i++) {
    TableItem item=wFields.getNonEmpty(i);
    inputMeta.getInputFields()[i]=new TextFileInputField();
    int colnr=1;
    inputMeta.getInputFields()[i].setName(item.getText(colnr++));
    inputMeta.getInputFields()[i].setType(ValueMeta.getType(item.getText(colnr++)));
    inputMeta.getInputFields()[i].setFormat(item.getText(colnr++));
    inputMeta.getInputFields()[i].setLength(Const.toInt(item.getText(colnr++),-1));
    inputMeta.getInputFields()[i].setPrecision(Const.toInt(item.getText(colnr++),-1));
    inputMeta.getInputFields()[i].setCurrencySymbol(item.getText(colnr++));
    inputMeta.getInputFields()[i].setDecimalSymbol(item.getText(colnr++));
    inputMeta.getInputFields()[i].setGroupSymbol(item.getText(colnr++));
    inputMeta.getInputFields()[i].setTrimType(ValueMeta.getTrimTypeByDesc(item.getText(colnr++)));
  }
  wFields.removeEmptyRows();
  wFields.setRowNums();
  wFields.optWidth(true);
  inputMeta.setChanged();
}
