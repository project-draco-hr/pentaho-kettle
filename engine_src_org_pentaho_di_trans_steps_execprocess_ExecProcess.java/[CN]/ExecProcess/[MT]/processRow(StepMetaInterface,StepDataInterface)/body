{
  meta=(ExecProcessMeta)smi;
  data=(ExecProcessData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.previousRowMeta=getInputRowMeta().clone();
    data.NrPrevFields=data.previousRowMeta.size();
    data.outputRowMeta=data.previousRowMeta;
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    if (Const.isEmpty(meta.getProcessField())) {
      logError(BaseMessages.getString(PKG,"ExecProcess.Error.ProcessFieldMissing"));
      throw new KettleException(BaseMessages.getString(PKG,"ExecProcess.Error.ProcessFieldMissing"));
    }
    if (data.indexOfProcess < 0) {
      data.indexOfProcess=data.previousRowMeta.indexOfValue(meta.getProcessField());
      if (data.indexOfProcess < 0) {
        logError(BaseMessages.getString(PKG,"ExecProcess.Exception.CouldnotFindField") + "[" + meta.getProcessField()+ "]");
        throw new KettleException(BaseMessages.getString(PKG,"ExecProcess.Exception.CouldnotFindField",meta.getProcessField()));
      }
    }
  }
  Object[] outputRow=RowDataUtil.allocateRowData(data.outputRowMeta.size());
  for (int i=0; i < data.NrPrevFields; i++) {
    outputRow[i]=r[i];
  }
  String processString=data.previousRowMeta.getString(r,data.indexOfProcess);
  ProcessResult processResult=new ProcessResult();
  try {
    if (Const.isEmpty(processString)) {
      throw new KettleException(BaseMessages.getString(PKG,"ExecProcess.ProcessEmpty"));
    }
    execProcess(processString,processResult);
    if (meta.isFailWhenNotSuccess()) {
      if (processResult.getExistStatus() != 0) {
        String errorString=processResult.getErrorStream();
        if (Const.isEmpty(errorString)) {
          errorString=processResult.getOutputStream();
        }
        throw new KettleException(errorString);
      }
    }
    int rowIndex=data.NrPrevFields;
    outputRow[rowIndex++]=processResult.getOutputStream();
    outputRow[rowIndex++]=processResult.getErrorStream();
    outputRow[rowIndex++]=processResult.getExistStatus();
    putRow(data.outputRowMeta,outputRow);
    if (log.isRowLevel()) {
      logRowlevel(BaseMessages.getString(PKG,"ExecProcess.LineNumber",getLinesRead() + " : " + getInputRowMeta().getString(r)));
    }
  }
 catch (  KettleException e) {
    boolean sendToErrorRow=false;
    String errorMessage=null;
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(BaseMessages.getString(PKG,"ExecProcess.ErrorInStepRunning") + e.getMessage());
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,meta.getResultFieldName(),"ExecProcess001");
    }
  }
  return true;
}
