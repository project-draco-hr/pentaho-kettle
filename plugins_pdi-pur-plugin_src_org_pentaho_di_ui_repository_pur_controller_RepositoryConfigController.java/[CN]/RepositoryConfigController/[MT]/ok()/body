{
  if (repositoryMeta instanceof PurRepositoryMeta) {
    repositoryMeta.setName(model.getName());
    repositoryMeta.setDescription(model.getId());
    String url=model.getUrl();
    String urlTrim=url.endsWith("/") ? url.substring(0,url.length() - 1) : url;
    PurRepositoryLocation location=new PurRepositoryLocation(urlTrim);
    ((PurRepositoryMeta)repositoryMeta).setRepositoryLocation(location);
    ((PurRepositoryMeta)repositoryMeta).setVersionCommentMandatory(model.isModificationComments());
    getCallback().onSuccess(((PurRepositoryMeta)repositoryMeta));
  }
 else {
    getCallback().onError(new IllegalStateException(BaseMessages.getString(PurRepositoryDialog.class,"RepositoryConfigDialog.ERROR_0001_NotAnInstanceOfPurRepositoryMeta")));
  }
}
