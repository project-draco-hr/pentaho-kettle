{
  localeList=new ArrayList<String>();
  rootDirectories=new ArrayList<String>();
  filesToAvoid=new ArrayList<String>();
  File file=new File("translator.xml");
  if (file.exists()) {
    try {
      Document doc=XMLHandler.loadXMLFile(file);
      Node configNode=XMLHandler.getSubNode(doc,"translator-config");
      referenceLocale=XMLHandler.getTagValue(configNode,"reference-locale");
      singleMessagesFile=XMLHandler.getTagValue(configNode,"single-messages-file");
      Node localeListNode=XMLHandler.getSubNode(configNode,"locale-list");
      int nrLocale=XMLHandler.countNodes(localeListNode,"locale");
      if (nrLocale > 0)       localeList.clear();
      for (int i=0; i < nrLocale; i++) {
        Node localeNode=XMLHandler.getSubNodeByNr(localeListNode,"locale",i);
        String locale=XMLHandler.getTagValue(localeNode,"code");
        localeList.add(locale);
      }
      Node rootsNode=XMLHandler.getSubNode(configNode,"source-directories");
      int nrRoots=XMLHandler.countNodes(rootsNode,"root");
      if (nrRoots > 0)       rootDirectories.clear();
      for (int i=0; i < nrRoots; i++) {
        Node rootNode=XMLHandler.getSubNodeByNr(rootsNode,"root",i);
        String directory=XMLHandler.getNodeValue(rootNode);
        rootDirectories.add(directory);
      }
      Node filesNode=XMLHandler.getSubNode(configNode,"files-to-avoid");
      int nrFiles=XMLHandler.countNodes(filesNode,"filename");
      if (nrFiles > 0)       filesToAvoid.clear();
      for (int i=0; i < nrFiles; i++) {
        Node fileNode=XMLHandler.getSubNodeByNr(filesNode,"filename",i);
        String filename=XMLHandler.getNodeValue(fileNode);
        filesToAvoid.add(filename);
      }
    }
 catch (    Exception e) {
      log.logError("Translator","Error reading translator.xml",e);
    }
  }
}
