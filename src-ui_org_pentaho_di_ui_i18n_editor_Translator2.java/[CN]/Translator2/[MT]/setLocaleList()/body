{
  localeList=new ArrayList<String>();
  localeList.add("en_US");
  localeList.add("fr_FR");
  localeList.add("es_ES");
  localeList.add("es_AR");
  localeList.add("nl_NL");
  localeList.add("de_DE");
  localeList.add("zh_CN");
  localeList.add("pt_BR");
  localeList.add("pt_PT");
  localeList.add("es_AR");
  localeList.add("no_NO");
  File file=new File("translator.xml");
  if (file.exists()) {
    try {
      Document doc=XMLHandler.loadXMLFile(file);
      Node configNode=XMLHandler.getSubNode(doc,"translator-config");
      Node localeListNode=XMLHandler.getSubNode(configNode,"locale-list");
      int nrLocale=XMLHandler.countNodes(localeListNode,"locale");
      if (nrLocale > 0)       localeList.clear();
      for (int i=0; i < nrLocale; i++) {
        Node localeNode=XMLHandler.getSubNodeByNr(localeListNode,"locale",i);
        String locale=XMLHandler.getTagValue(localeNode,"code");
        localeList.add(locale);
      }
    }
 catch (    Exception e) {
      log.logError("Translator","Error reading translator.xml",e);
    }
  }
}
