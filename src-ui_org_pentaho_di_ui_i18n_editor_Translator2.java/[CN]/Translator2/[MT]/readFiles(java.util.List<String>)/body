{
  log.logBasic(toString(),Messages.getString("i18n.Log.ScanningSourceDirectories"));
  try {
    crawler=new MessagesSourceCrawler(directories,singleMessagesFile,xmlFolders);
    crawler.setScanPhrases(scanPhrases);
    crawler.setFilesToAvoid(filesToAvoid);
    crawler.crawl();
    messagesPackages=crawler.getMessagesPackagesList();
    store=new TranslationsStore(localeList,messagesPackages,referenceLocale);
    store.read(directories);
    int nrKeys=0;
    int keyCounts[]=new int[localeList.size()];
    for (int i=0; i < localeList.size(); i++) {
      String locale=localeList.get(i);
      keyCounts[i]=0;
      for (      KeyOccurrence keyOccurrence : crawler.getOccurrences()) {
        if (showKey(keyOccurrence.getKey(),keyOccurrence.getMessagesPackage())) {
          String value=store.lookupKeyValue(locale,keyOccurrence.getMessagesPackage(),keyOccurrence.getKey());
          if (!Const.isEmpty(value)) {
            keyCounts[i]++;
          }
          if (locale.equals(referenceLocale)) {
            nrKeys++;
          }
        }
      }
    }
    String[] locales=localeList.toArray(new String[localeList.size()]);
    for (int i=0; i < locales.length; i++) {
      for (int j=0; j < locales.length - 1; j++) {
        if (keyCounts[j] < keyCounts[j + 1]) {
          int c=keyCounts[j];
          keyCounts[j]=keyCounts[j + 1];
          keyCounts[j + 1]=c;
          String l=locales[j];
          locales[j]=locales[j + 1];
          locales[j + 1]=l;
        }
      }
    }
    DecimalFormat pctFormat=new DecimalFormat("#00.00");
    DecimalFormat nrFormat=new DecimalFormat("00");
    System.out.println(Messages.getString("i18n.Log.NumberOfKeysFound","" + nrKeys));
    for (int i=0; i < locales.length; i++) {
      double donePct=100 * (double)keyCounts[i] / (double)nrKeys;
      int missingKeys=nrKeys - keyCounts[i];
      String statusKeys="# " + nrFormat.format(i + 1) + " : "+ locales[i]+ " : "+ pctFormat.format(donePct)+ "% complete  ("+ keyCounts[i]+ ")"+ (missingKeys != 0 ? ("...missing " + missingKeys) : "");
      System.out.println(statusKeys);
    }
  }
 catch (  Exception e) {
    throw new KettleFileException(Messages.getString("i18n.Log.UnableToGetFiles",rootDirectories.toString()),e);
  }
}
