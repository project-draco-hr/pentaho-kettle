{
  CheckResult cr;
  if (databaseMeta != null) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"Connection exists",stepMeta);
    remarks.add(cr);
    final PaloHelper helper=new PaloHelper(databaseMeta,DefaultLogLevel.getLogLevel());
    try {
      helper.connect();
      cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"Connection to database OK",stepMeta);
      remarks.add(cr);
      if (!Utils.isEmpty(dimension)) {
        cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,"The name of the dimension is entered",stepMeta);
        remarks.add(cr);
      }
 else {
        cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"The name of the dimension is missing.",stepMeta);
        remarks.add(cr);
      }
      if (this.levels == null || this.levels.size() == 0) {
        cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"Dimension Output Fields are empty.",stepMeta);
        remarks.add(cr);
      }
 else {
        for (        PaloDimensionLevel level : this.levels) {
          if (Utils.isEmpty(level.getLevelName())) {
            cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"Level Name for Level " + level.getLevelNumber() + " is empty.",stepMeta);
            remarks.add(cr);
          }
          if (Utils.isEmpty(level.getFieldName())) {
            cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"Input Field Name for Level " + level.getLevelNumber() + " is empty.",stepMeta);
            remarks.add(cr);
          }
          if (Utils.isEmpty(level.getFieldType())) {
            cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"Level Type for Level " + level.getLevelNumber() + " is empty.",stepMeta);
            remarks.add(cr);
          }
        }
      }
    }
 catch (    KettleException e) {
      cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"An error occurred: " + e.getMessage(),stepMeta);
      remarks.add(cr);
    }
 finally {
      helper.disconnect();
    }
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,"Please select or create a connection to use",stepMeta);
    remarks.add(cr);
  }
}
