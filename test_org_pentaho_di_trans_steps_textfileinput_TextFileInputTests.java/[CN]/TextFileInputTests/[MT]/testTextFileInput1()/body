{
  KettleEnvironment.init();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("testTextFileInput1");
  PluginRegistry registry=PluginRegistry.getInstance();
  String fileName=writeInputFile();
  String injectorStepName="injector step";
  StepMeta injectorStep=TestUtilities.createInjectorStep(injectorStepName,registry);
  transMeta.addStep(injectorStep);
  String testFileInputName="text file input step";
  StepMeta textFileInputStep=createTextFileInputStep(testFileInputName,fileName,registry);
  transMeta.addStep(textFileInputStep);
  TransHopMeta hopInputTextFile=new TransHopMeta(injectorStep,textFileInputStep);
  transMeta.addTransHop(hopInputTextFile);
  String dummyStepName="dummy step";
  StepMeta dummyStep=TestUtilities.createDummyStep(dummyStepName,registry);
  transMeta.addStep(dummyStep);
  TransHopMeta hop_textFileInputStep_dummyStep=new TransHopMeta(textFileInputStep,dummyStep);
  transMeta.addTransHop(hop_textFileInputStep_dummyStep);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  StepInterface si=trans.getStepInterface(dummyStepName,0);
  RowStepCollector dummyRowCollector=new RowStepCollector();
  si.addRowListener(dummyRowCollector);
  RowProducer rowProducer=trans.addRowProducer(injectorStepName,0);
  trans.startThreads();
  List<RowMetaAndData> inputList=createData(fileName);
  Iterator<RowMetaAndData> it=inputList.iterator();
  while (it.hasNext()) {
    RowMetaAndData rowMetaAndData=it.next();
    rowProducer.putRow(rowMetaAndData.getRowMeta(),rowMetaAndData.getData());
  }
  rowProducer.finished();
  trans.waitUntilFinished();
  List<RowMetaAndData> resultRows=dummyRowCollector.getRowsWritten();
  List<RowMetaAndData> goldenImageRows=createResultData1();
  try {
    TestUtilities.checkRows(goldenImageRows,resultRows,5);
  }
 catch (  TestFailedException tfe) {
    fail(tfe.getMessage());
  }
}
