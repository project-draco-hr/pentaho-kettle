{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlSpecifyWildcard=new Label(shell,SWT.RIGHT);
  wlSpecifyWildcard.setText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.SpecifyWildcard.Label"));
  props.setLook(wlSpecifyWildcard);
  fdlSpecifyWildcard=new FormData();
  fdlSpecifyWildcard.left=new FormAttachment(0,0);
  fdlSpecifyWildcard.top=new FormAttachment(wName,margin);
  fdlSpecifyWildcard.right=new FormAttachment(middle,-margin);
  wlSpecifyWildcard.setLayoutData(fdlSpecifyWildcard);
  wSpecifyWildcard=new Button(shell,SWT.CHECK);
  props.setLook(wSpecifyWildcard);
  wSpecifyWildcard.setToolTipText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.SpecifyWildcard.Tooltip"));
  fdSpecifyWildcard=new FormData();
  fdSpecifyWildcard.left=new FormAttachment(middle,0);
  fdSpecifyWildcard.top=new FormAttachment(wName,margin);
  fdSpecifyWildcard.right=new FormAttachment(100,0);
  wSpecifyWildcard.setLayoutData(fdSpecifyWildcard);
  wSpecifyWildcard.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
      CheckLimit();
    }
  }
);
  wlWildcard=new Label(shell,SWT.RIGHT);
  wlWildcard.setText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wSpecifyWildcard,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wWildcard.setToolTipText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.Wildcard.Tooltip"));
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wSpecifyWildcard,margin);
  fdWildcard.right=new FormAttachment(100,-margin);
  wWildcard.setLayoutData(fdWildcard);
  wWildcard.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wWildcard.setToolTipText(jobMeta.environmentSubstitute(wWildcard.getText()));
    }
  }
);
  wlWildcardExclude=new Label(shell,SWT.RIGHT);
  wlWildcardExclude.setText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.WildcardExclude.Label"));
  props.setLook(wlWildcardExclude);
  fdlWildcardExclude=new FormData();
  fdlWildcardExclude.left=new FormAttachment(0,0);
  fdlWildcardExclude.top=new FormAttachment(wWildcard,margin);
  fdlWildcardExclude.right=new FormAttachment(middle,-margin);
  wlWildcardExclude.setLayoutData(fdlWildcardExclude);
  wWildcardExclude=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wWildcardExclude.setToolTipText(BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.WildcardExclude.Tooltip"));
  props.setLook(wWildcardExclude);
  wWildcardExclude.addModifyListener(lsMod);
  fdWildcardExclude=new FormData();
  fdWildcardExclude.left=new FormAttachment(middle,0);
  fdWildcardExclude.top=new FormAttachment(wWildcard,margin);
  fdWildcardExclude.right=new FormAttachment(100,-margin);
  wWildcardExclude.setLayoutData(fdWildcardExclude);
  wWildcardExclude.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wWildcardExclude.setToolTipText(jobMeta.environmentSubstitute(wWildcardExclude.getText()));
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wWildcardExclude);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  CheckLimit();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
