{
  try {
    UserDefinedJavaClassMeta retval=(UserDefinedJavaClassMeta)super.clone();
    if (fields != null) {
      List<FieldInfo> newFields=new ArrayList<FieldInfo>(fields.size());
      for (      FieldInfo field : fields) {
        newFields.add((FieldInfo)field.clone());
      }
      retval.fields=newFields;
    }
    if (definitions != null) {
      List<UserDefinedJavaClassDef> newDefinitions=new ArrayList<UserDefinedJavaClassDef>();
      for (      UserDefinedJavaClassDef def : definitions) {
        newDefinitions.add((UserDefinedJavaClassDef)def.clone());
      }
      retval.definitions=newDefinitions;
    }
    retval.cookedTransformClass=null;
    retval.cookErrors=new ArrayList<Exception>(0);
    if (infoStepDefinitions != null) {
      List<StepDefinition> newInfoStepDefinitions=new ArrayList<StepDefinition>();
      for (      StepDefinition step : infoStepDefinitions) {
        newInfoStepDefinitions.add((StepDefinition)step.clone());
      }
      retval.infoStepDefinitions=newInfoStepDefinitions;
    }
    if (targetStepDefinitions != null) {
      List<StepDefinition> newTargetStepDefinitions=new ArrayList<StepDefinition>();
      for (      StepDefinition step : targetStepDefinitions) {
        newTargetStepDefinitions.add((StepDefinition)step.clone());
      }
      retval.targetStepDefinitions=newTargetStepDefinitions;
    }
    if (usageParameters != null) {
      List<UsageParameter> newUsageParameters=new ArrayList<UsageParameter>();
      for (      UsageParameter param : usageParameters) {
        newUsageParameters.add((UsageParameter)param.clone());
      }
      retval.usageParameters=newUsageParameters;
    }
    return retval;
  }
 catch (  CloneNotSupportedException e) {
    return null;
  }
}
