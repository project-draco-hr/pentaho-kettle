{
  StringBuilder retval=new StringBuilder(300);
  retval.append(String.format("\n    <%s>",ElementNames.definitions.name()));
  for (  UserDefinedJavaClassDef def : definitions) {
    retval.append(String.format("\n        <%s>",ElementNames.definition.name()));
    retval.append("\n        ").append(XMLHandler.addTagValue(ElementNames.class_type.name(),def.getClassType().name()));
    retval.append("\n        ").append(XMLHandler.addTagValue(ElementNames.class_name.name(),def.getClassName()));
    retval.append("\n        ").append(XMLHandler.openTag(ElementNames.class_source.name()));
    retval.append(XMLHandler.buildCDATA(def.getSource())).append(XMLHandler.closeTag(ElementNames.class_source.name()));
    retval.append(String.format("\n        </%s>",ElementNames.definition.name()));
  }
  retval.append(String.format("\n    </%s>",ElementNames.definitions.name()));
  retval.append(String.format("\n    <%s>",ElementNames.fields.name()));
  for (  FieldInfo fi : fields) {
    retval.append(String.format("\n        <%s>",ElementNames.field.name()));
    retval.append("\n        ").append(XMLHandler.addTagValue(ElementNames.field_name.name(),fi.name));
    retval.append("\n        ").append(XMLHandler.addTagValue(ElementNames.field_type.name(),ValueMeta.getTypeDesc(fi.type)));
    retval.append("\n        ").append(XMLHandler.addTagValue(ElementNames.field_length.name(),fi.length));
    retval.append("\n        ").append(XMLHandler.addTagValue(ElementNames.field_precision.name(),fi.precision));
    retval.append(String.format("\n        </%s>",ElementNames.field.name()));
  }
  retval.append(String.format("\n    </%s>",ElementNames.fields.name()));
  retval.append(XMLHandler.addTagValue(ElementNames.clear_result_fields.name(),clearingResultFields));
  retval.append(XMLHandler.openTag(ElementNames.info_steps.name()));
  for (  StepDefinition stepDefinition : infoStepDefinitions) {
    retval.append(XMLHandler.openTag(ElementNames.info_step.name()));
    retval.append(XMLHandler.addTagValue(ElementNames.step_tag.name(),stepDefinition.tag));
    retval.append(XMLHandler.addTagValue(ElementNames.step_name.name(),stepDefinition.stepMeta != null ? stepDefinition.stepMeta.getName() : null));
    retval.append(XMLHandler.addTagValue(ElementNames.step_description.name(),stepDefinition.description));
    retval.append(XMLHandler.closeTag(ElementNames.info_step.name()));
  }
  retval.append(XMLHandler.closeTag(ElementNames.info_steps.name()));
  retval.append(XMLHandler.openTag(ElementNames.target_steps.name()));
  for (  StepDefinition stepDefinition : targetStepDefinitions) {
    retval.append(XMLHandler.openTag(ElementNames.target_step.name()));
    retval.append(XMLHandler.addTagValue(ElementNames.step_tag.name(),stepDefinition.tag));
    retval.append(XMLHandler.addTagValue(ElementNames.step_name.name(),stepDefinition.stepMeta != null ? stepDefinition.stepMeta.getName() : null));
    retval.append(XMLHandler.addTagValue(ElementNames.step_description.name(),stepDefinition.description));
    retval.append(XMLHandler.closeTag(ElementNames.target_step.name()));
  }
  retval.append(XMLHandler.closeTag(ElementNames.target_steps.name()));
  retval.append(XMLHandler.openTag(ElementNames.usage_parameters.name()));
  for (  UsageParameter usageParameter : usageParameters) {
    retval.append(XMLHandler.openTag(ElementNames.usage_parameter.name()));
    retval.append(XMLHandler.addTagValue(ElementNames.parameter_tag.name(),usageParameter.tag));
    retval.append(XMLHandler.addTagValue(ElementNames.parameter_value.name(),usageParameter.value));
    retval.append(XMLHandler.addTagValue(ElementNames.parameter_description.name(),usageParameter.description));
    retval.append(XMLHandler.closeTag(ElementNames.usage_parameter.name()));
  }
  retval.append(XMLHandler.closeTag(ElementNames.usage_parameters.name()));
  return retval.toString();
}
