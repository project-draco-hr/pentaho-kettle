{
  try {
    Node definitionsNode=XMLHandler.getSubNode(stepnode,ElementNames.definitions.name());
    int nrDefinitions=XMLHandler.countNodes(definitionsNode,ElementNames.definition.name());
    for (int i=0; i < nrDefinitions; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(definitionsNode,ElementNames.definition.name(),i);
      definitions.add(new UserDefinedJavaClassDef(ClassType.valueOf(XMLHandler.getTagValue(fnode,ElementNames.class_type.name())),XMLHandler.getTagValue(fnode,ElementNames.class_name.name()),XMLHandler.getTagValue(fnode,ElementNames.class_source.name())));
    }
    Node fieldsNode=XMLHandler.getSubNode(stepnode,ElementNames.fields.name());
    int nrfields=XMLHandler.countNodes(fieldsNode,ElementNames.field.name());
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fieldsNode,ElementNames.field.name(),i);
      fields.add(new FieldInfo(XMLHandler.getTagValue(fnode,ElementNames.field_name.name()),ValueMeta.getType(XMLHandler.getTagValue(fnode,ElementNames.field_type.name())),Const.toInt(XMLHandler.getTagValue(fnode,ElementNames.field_length.name()),-1),Const.toInt(XMLHandler.getTagValue(fnode,ElementNames.field_precision.name()),-1)));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException(Messages.getString("UserDefinedJavaClassMeta.Exception.UnableToLoadStepInfoFromXML"),e);
  }
}
