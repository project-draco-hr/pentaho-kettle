{
  try {
    for (int i=0; i < definitions.size(); i++) {
      UserDefinedJavaClassDef def=definitions.get(i);
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.class_name.name(),def.getClassName());
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.class_source.name(),def.getSource());
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.class_type.name(),def.getClassType().name());
    }
    for (int i=0; i < fields.size(); i++) {
      FieldInfo fi=fields.get(i);
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.field_name.name(),fi.name);
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.field_type.name(),ValueMeta.getTypeDesc(fi.type));
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.field_length.name(),fi.length);
      rep.saveStepAttribute(id_transformation,id_step,i,ElementNames.field_precision.name(),fi.precision);
    }
    rep.saveStepAttribute(id_transformation,id_step,ElementNames.clear_result_fields.name(),clearingResultFields);
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"UserDefinedJavaClassMeta.Exception.UnableToSaveStepInfo") + id_step,e);
  }
}
