{
  cookErrors.clear();
  for (  UserDefinedJavaClassDef def : getDefinitions()) {
    if (def.isActive()) {
      try {
        Class<?> cookedClass=cookClass(def);
        if (def.isTransformClass()) {
          cookedTransformClass=(Class<TransformClassBase>)cookedClass;
        }
      }
 catch (      Exception e) {
        CompileException exception=new CompileException(e.getMessage(),null);
        exception.setStackTrace(new StackTraceElement[]{});
        cookErrors.add(exception);
      }
    }
  }
  changed=false;
}
