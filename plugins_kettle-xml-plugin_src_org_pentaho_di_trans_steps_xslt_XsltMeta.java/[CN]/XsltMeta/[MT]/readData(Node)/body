{
  try {
    xslFilename=XMLHandler.getTagValue(stepnode,"xslfilename");
    fieldName=XMLHandler.getTagValue(stepnode,"fieldname");
    resultFieldname=XMLHandler.getTagValue(stepnode,"resultfieldname");
    xslFileField=XMLHandler.getTagValue(stepnode,"xslfilefield");
    xslFileFieldUse="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"xslfilefielduse"));
    String isAFile=XMLHandler.getTagValue(stepnode,"xslfieldisafile");
    if (xslFileFieldUse && Utils.isEmpty(isAFile)) {
      xslFieldIsAFile=true;
    }
 else {
      xslFieldIsAFile="Y".equalsIgnoreCase(isAFile);
    }
    xslFactory=XMLHandler.getTagValue(stepnode,"xslfactory");
    Node parametersNode=XMLHandler.getSubNode(stepnode,"parameters");
    int nrparams=XMLHandler.countNodes(parametersNode,"parameter");
    Node parametersOutputProps=XMLHandler.getSubNode(stepnode,"outputproperties");
    int nroutputprops=XMLHandler.countNodes(parametersOutputProps,"outputproperty");
    allocate(nrparams,nroutputprops);
    for (int i=0; i < nrparams; i++) {
      Node anode=XMLHandler.getSubNodeByNr(parametersNode,"parameter",i);
      parameterField[i]=XMLHandler.getTagValue(anode,"field");
      parameterName[i]=XMLHandler.getTagValue(anode,"name");
    }
    for (int i=0; i < nroutputprops; i++) {
      Node anode=XMLHandler.getSubNodeByNr(parametersOutputProps,"outputproperty",i);
      outputPropertyName[i]=XMLHandler.getTagValue(anode,"name");
      outputPropertyValue[i]=XMLHandler.getTagValue(anode,"value");
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"XsltMeta.Exception.UnableToLoadStepInfoFromXML"),e);
  }
}
