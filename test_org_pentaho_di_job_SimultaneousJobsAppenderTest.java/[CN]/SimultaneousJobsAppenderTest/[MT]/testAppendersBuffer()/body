{
  Job[] jobs=new Job[howMany];
  for (int i=0; i < jobs.length; i++) {
    JobMeta jm=new JobMeta(new File(SimultaneousJobsAppenderTest.class.getClassLoader().getResource(PKG + jobPath).toURI()).getCanonicalPath(),null);
    jm.setName("Job number " + i);
    Job job=new Job(null,jm);
    job.setLogLevel(LogLevel.BASIC);
    jobs[i]=job;
  }
  for (  Job job : jobs) {
    job.start();
  }
  for (  Job job : jobs) {
    job.waitUntilFinished();
  }
  LoggingBuffer appender=KettleLogStore.getAppender();
  for (int i=0; i < jobs.length; i++) {
    if (prevJobBuffer != 0) {
      Assert.assertEquals("Uncorrect buffer size, job: " + i,prevJobBuffer,appender.getBuffer(jobs[i].getLogChannelId(),false).length());
    }
    prevJobBuffer=appender.getBuffer(jobs[i].getLogChannelId(),false).length();
  }
}
