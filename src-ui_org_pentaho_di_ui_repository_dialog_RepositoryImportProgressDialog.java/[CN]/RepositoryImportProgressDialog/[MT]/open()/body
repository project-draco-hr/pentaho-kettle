{
  display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setText(BaseMessages.getString(PKG,"RepositoryImportDialog.Title"));
  shell.setImage(GUIResource.getInstance().getImageSpoon());
  shell.setLayout(formLayout);
  wLabel=new Label(shell,SWT.LEFT);
  props.setLook(wLabel);
  FormData fdLabel=new FormData();
  fdLabel.left=new FormAttachment(0,0);
  fdLabel.top=new FormAttachment(0,0);
  fdLabel.right=new FormAttachment(100,0);
  wLabel.setLayoutData(fdLabel);
  wClose=new Button(shell,SWT.PUSH);
  wClose.setText(BaseMessages.getString(PKG,"System.Button.Close"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wClose},Const.MARGIN,(Control)null);
  wClose.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      dispose();
    }
  }
);
  wLogging=new Text(shell,SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);
  props.setLook(wLabel);
  FormData fdLogging=new FormData();
  fdLogging.left=new FormAttachment(0,0);
  fdLogging.top=new FormAttachment(wLabel,Const.MARGIN);
  fdLogging.right=new FormAttachment(100,0);
  fdLogging.bottom=new FormAttachment(wClose,-Const.MARGIN);
  wLogging.setLayoutData(fdLogging);
  display.asyncExec(new Runnable(){
    public void run(){
      shell.addShellListener(new ShellAdapter(){
        public void shellClosed(        ShellEvent e){
          dispose();
        }
      }
);
    }
  }
);
  BaseStepDialog.setSize(shell,1024,768,true);
  shell.open();
  display.asyncExec(new Runnable(){
    public void run(){
      rep.getImporter().importAll(RepositoryImportProgressDialog.this,fileDirectory,filenames,baseDirectory,false,false,versionComment);
    }
  }
);
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
}
