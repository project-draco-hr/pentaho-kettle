{
  RowMapTest rowMapTest=new RowMapTest();
  System.out.println("Populating test data for " + SIZE + " rows, "+ fieldNames.length+ " fields in "+ STEPS+ " steps.");
  long totalDiffWith=0;
  long totalDiffWithout=0;
  long totalDiffFast=0;
  long totalDiffFastSearch=0;
  long totalDiffWithButInit=0;
  for (int i=1; i <= RETRIES; i++) {
    rowMapTest.clear();
    System.gc();
    System.out.println("RUN #" + i + " : Starting run with maps...");
    long startMillis=new Date().getTime();
    rowMapTest.initTestWith();
    rowMapTest.runTestsWith();
    long endMillis=new Date().getTime();
    long diff=endMillis - startMillis;
    System.out.println("RUN #" + i + " time lapsed with (ms)   : "+ diff);
    totalDiffWith+=diff;
    rowMapTest.clear();
    System.gc();
    System.out.println("RUN #" + i + " Starting run without maps...");
    long startMillis2=new Date().getTime();
    rowMapTest.initTestWithout();
    rowMapTest.runTestsWithout();
    long endMillis2=new Date().getTime();
    long diff2=endMillis2 - startMillis2;
    totalDiffWithout+=diff2;
    System.out.println("RUN #" + i + " time lapsed without (ms): "+ diff2);
    rowMapTest.clear();
    System.gc();
    System.out.println("RUN #" + i + " Starting run fast map...");
    long startMillis3=new Date().getTime();
    rowMapTest.initTestWith();
    rowMapTest.runTestsFastMap();
    long endMillis3=new Date().getTime();
    long diff3=endMillis3 - startMillis3;
    totalDiffFast+=diff3;
    System.out.println("RUN #" + i + " time lapsed fast (ms): "+ diff3);
    rowMapTest.clear();
    System.gc();
    System.out.println("RUN #" + i + " Starting run fast search...");
    long startMillis4=new Date().getTime();
    rowMapTest.initTestWithout();
    rowMapTest.runTestsFastSearch();
    long endMillis4=new Date().getTime();
    long diff4=endMillis4 - startMillis4;
    totalDiffFastSearch+=diff4;
    System.out.println("RUN #" + i + " time lapsed fast (ms): "+ diff4);
    rowMapTest.clear();
    System.gc();
    System.out.println("RUN #" + i + " Starting run without maps, but map init...");
    long startMillis5=new Date().getTime();
    rowMapTest.initTestWith();
    rowMapTest.runTestsWithout();
    long endMillis5=new Date().getTime();
    long diff5=endMillis5 - startMillis5;
    totalDiffWithButInit+=diff5;
    System.out.println("RUN #" + i + " time lapsed without maps, but map init (ms): "+ diff5);
    System.out.println();
  }
  System.out.println("Average runtime using maps  : " + (totalDiffWith / RETRIES));
  System.out.println("Average runtime without maps: " + (totalDiffWithout / RETRIES));
  System.out.println("Average runtime fast map: " + (totalDiffFast / RETRIES));
  System.out.println("Average runtime fast search: " + (totalDiffFastSearch / RETRIES));
  System.out.println("Average runtime without maps, with map init: " + (totalDiffWithButInit / RETRIES));
}
