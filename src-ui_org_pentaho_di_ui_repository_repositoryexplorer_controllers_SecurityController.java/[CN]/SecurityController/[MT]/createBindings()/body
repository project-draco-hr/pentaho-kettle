{
  userEditButton=(XulButton)document.getElementById("user-edit");
  userRemoveButton=(XulButton)document.getElementById("user-remove");
  userDialog=(XulDialog)document.getElementById("add-user-dialog");
  userListBox=(XulListbox)document.getElementById("users-list");
  username=(XulTextbox)document.getElementById("user-name");
  userPassword=(XulTextbox)document.getElementById("user-password");
  userDescription=(XulTextbox)document.getElementById("user-description");
  bf.setBindingType(Binding.Type.BI_DIRECTIONAL);
  bf.createBinding(securityUser,"name",username,"value");
  bf.createBinding(securityUser,"password",userPassword,"value");
  bf.createBinding(securityUser,"description",userDescription,"value");
  bf.createBinding(security,"selectedUserIndex",userListBox,"selectedIndex");
  bf.setBindingType(Binding.Type.ONE_WAY);
  try {
    BindingConvertor<Integer,Boolean> buttonConverter=new BindingConvertor<Integer,Boolean>(){
      @Override public Boolean sourceToTarget(      Integer value){
        if (value != null && value >= 0) {
          return false;
        }
        return true;
      }
      @Override public Integer targetToSource(      Boolean value){
        return null;
      }
    }
;
    bf.createBinding(userListBox,"selectedIndex",userEditButton,"disabled",buttonConverter);
    bf.createBinding(userListBox,"selectedIndex",userRemoveButton,"disabled",buttonConverter);
    bf.setBindingType(Binding.Type.ONE_WAY);
    bf.createBinding(userListBox,"selectedItem",security,"selectedUser");
    bf.createBinding(security,"userList",userListBox,"elements").fireSourceChanged();
    BindingConvertor<Mode,Boolean> modeBindingConverter=new BindingConvertor<Mode,Boolean>(){
      @Override public Boolean sourceToTarget(      Mode arg0){
        if (arg0.equals(Mode.ADD)) {
          return false;
        }
        return true;
      }
      @Override public Mode targetToSource(      Boolean arg0){
        return null;
      }
    }
;
    bf.createBinding(securityUser,"mode",username,"disabled",modeBindingConverter);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
