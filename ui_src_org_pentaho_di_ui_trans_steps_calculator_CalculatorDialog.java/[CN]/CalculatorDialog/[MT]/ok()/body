{
  if (Utils.isEmpty(wStepname.getText())) {
    return;
  }
  stepname=wStepname.getText();
  int nrNonEmptyFields=wFields.nrNonEmpty();
  currentMeta.allocate(nrNonEmptyFields);
  for (int i=0; i < nrNonEmptyFields; i++) {
    TableItem item=wFields.getNonEmpty(i);
    String fieldName=item.getText(1);
    int calcType=CalculatorMetaFunction.getCalcFunctionType(item.getText(2));
    String fieldA=item.getText(3);
    String fieldB=item.getText(4);
    String fieldC=item.getText(5);
    int valueType=ValueMetaFactory.getIdForValueMeta(item.getText(6));
    int valueLength=Const.toInt(item.getText(7),-1);
    int valuePrecision=Const.toInt(item.getText(8),-1);
    boolean removed=BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(9));
    String conversionMask=item.getText(10);
    String decimalSymbol=item.getText(11);
    String groupingSymbol=item.getText(12);
    String currencySymbol=item.getText(13);
    currentMeta.getCalculation()[i]=new CalculatorMetaFunction(fieldName,calcType,fieldA,fieldB,fieldC,valueType,valueLength,valuePrecision,removed,conversionMask,decimalSymbol,groupingSymbol,currencySymbol);
  }
  if (!originalMeta.equals(currentMeta)) {
    currentMeta.setChanged();
    changed=currentMeta.hasChanged();
  }
  dispose();
}
