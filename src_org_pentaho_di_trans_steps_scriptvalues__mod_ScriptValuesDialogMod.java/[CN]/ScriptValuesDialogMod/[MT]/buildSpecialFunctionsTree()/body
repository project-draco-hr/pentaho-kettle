{
  TreeItem item=new TreeItem(wTree,SWT.NULL);
  item.setText("Transform Constants");
  TreeItem itemT=new TreeItem(item,SWT.NULL);
  itemT.setText("SKIP_TRANSFORMATION");
  itemT.setData("SKIP_TRANSFORMATION");
  itemT=new TreeItem(item,SWT.NULL);
  itemT.setText("ERROR_TRANSFORMATION");
  itemT.setData("ERROR_TRANSFORMATION");
  itemT=new TreeItem(item,SWT.NULL);
  itemT.setText("CONTINUE_TRANSFORMATION");
  itemT.setData("CONTINUE_TRANSFORMATION");
  item=new TreeItem(wTree,SWT.NULL);
  item.setText("Transform Functions");
  String strData="";
  TreeItem itemStringFunctionsGroup=new TreeItem(item,SWT.NULL);
  itemStringFunctionsGroup.setText("String Functions");
  itemStringFunctionsGroup.setData("Function");
  TreeItem itemNumericFunctionsGroup=new TreeItem(item,SWT.NULL);
  itemNumericFunctionsGroup.setText("Numeric Functions");
  itemNumericFunctionsGroup.setData("Function");
  TreeItem itemDateFunctionsGroup=new TreeItem(item,SWT.NULL);
  itemDateFunctionsGroup.setText("Date Functions");
  itemDateFunctionsGroup.setData("Function");
  TreeItem itemLogicFunctionsGroup=new TreeItem(item,SWT.NULL);
  itemLogicFunctionsGroup.setText("Logic Functions");
  itemLogicFunctionsGroup.setData("Function");
  TreeItem itemSpecialFunctionsGroup=new TreeItem(item,SWT.NULL);
  itemSpecialFunctionsGroup.setText("Special Functions");
  itemSpecialFunctionsGroup.setData("Function");
  Hashtable<String,String> hatFunctions=scVHelp.getFunctionList();
  Vector<String> v=new Vector<String>(hatFunctions.keySet());
  Collections.sort(v);
  Iterator it=v.iterator();
  while (it.hasNext()) {
    String strFunction=(String)it.next();
    String strFunctionType=(String)hatFunctions.get(strFunction);
    int iFunctionType=Integer.valueOf(strFunctionType).intValue();
    TreeItem itemFunction=null;
switch (iFunctionType) {
case ScriptValuesAddedFunctions.STRING_FUNCTION:
      itemFunction=new TreeItem(itemStringFunctionsGroup,SWT.NULL);
    break;
case ScriptValuesAddedFunctions.NUMERIC_FUNCTION:
  itemFunction=new TreeItem(itemNumericFunctionsGroup,SWT.NULL);
break;
case ScriptValuesAddedFunctions.DATE_FUNCTION:
itemFunction=new TreeItem(itemDateFunctionsGroup,SWT.NULL);
break;
case ScriptValuesAddedFunctions.LOGIC_FUNCTION:
itemFunction=new TreeItem(itemLogicFunctionsGroup,SWT.NULL);
break;
case ScriptValuesAddedFunctions.SPECIAL_FUNCTION:
itemFunction=new TreeItem(itemSpecialFunctionsGroup,SWT.NULL);
break;
}
if (itemFunction != null) {
itemFunction.setText(strFunction);
strData="jsFunction";
itemFunction.setData(strData);
}
}
}
