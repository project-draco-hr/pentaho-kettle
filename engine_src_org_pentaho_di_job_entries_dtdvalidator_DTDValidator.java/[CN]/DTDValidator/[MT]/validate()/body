{
  boolean retval=false;
  FileObject xmlfile=null;
  FileObject DTDfile=null;
  ByteArrayInputStream ba=null;
  try {
    if (xmlfilename != null && ((getDTDFilename() != null && !isInternDTD()) || (isInternDTD()))) {
      xmlfile=KettleVFS.getFileObject(getXMLFilename());
      if (xmlfile.exists()) {
        URL xmlFile=new File(KettleVFS.getFilename(xmlfile)).toURI().toURL();
        StringBuffer xmlStringbuffer=new StringBuffer("");
        BufferedReader xmlBufferedReader=null;
        InputStreamReader is=null;
        try {
          is=new InputStreamReader(xmlFile.openStream());
          xmlBufferedReader=new BufferedReader(is);
          char[] buffertXML=new char[1024];
          int LenXML=-1;
          while ((LenXML=xmlBufferedReader.read(buffertXML)) != -1)           xmlStringbuffer.append(buffertXML,0,LenXML);
        }
  finally {
          if (is != null)           is.close();
          if (xmlBufferedReader != null)           xmlBufferedReader.close();
        }
        DocumentBuilderFactory DocBuilderFactory=DocumentBuilderFactory.newInstance();
        DocumentBuilder DocBuilder=DocBuilderFactory.newDocumentBuilder();
        DocBuilderFactory.setValidating(false);
        ba=new ByteArrayInputStream(xmlStringbuffer.toString().getBytes("UTF-8"));
        Document xmlDocDTD=DocBuilder.parse(ba);
        if (ba != null)         ba.close();
        String encoding=null;
        if (xmlDocDTD.getXmlEncoding() == null) {
          encoding="UTF-8";
        }
 else {
          encoding=xmlDocDTD.getXmlEncoding();
        }
        int xmlStartDTD=xmlStringbuffer.indexOf("<!DOCTYPE");
        if (isInternDTD()) {
          if (xmlStartDTD != -1) {
            log.logBasic(BaseMessages.getString(PKG,"JobEntryDTDValidator.ERRORDTDFound.Label",getXMLFilename()));
          }
 else {
            setErrorMessage(BaseMessages.getString(PKG,"JobEntryDTDValidator.ERRORDTDNotFound.Label",getXMLFilename()));
          }
        }
 else {
          DTDfile=KettleVFS.getFileObject(getDTDFilename());
          if (DTDfile.exists()) {
            if (xmlStartDTD != -1) {
              int EndDTD=xmlStringbuffer.indexOf(">",xmlStartDTD);
              xmlStringbuffer.replace(xmlStartDTD,EndDTD + 1,"");
            }
            String xmlRootnodeDTD=xmlDocDTD.getDocumentElement().getNodeName();
            String RefDTD="<?xml version='" + xmlDocDTD.getXmlVersion() + "' encoding='"+ encoding+ "'?>\n<!DOCTYPE "+ xmlRootnodeDTD+ " SYSTEM '"+ KettleVFS.getFilename(DTDfile)+ "'>\n";
            int xmloffsetDTD=xmlStringbuffer.indexOf("<" + xmlRootnodeDTD);
            xmlStringbuffer.replace(0,xmloffsetDTD,RefDTD);
          }
 else {
            log.logError(BaseMessages.getString(PKG,"JobEntryDTDValidator.ERRORDTDFileNotExists.Subject"),BaseMessages.getString(PKG,"JobEntryDTDValidator.ERRORDTDFileNotExists.Msg",getDTDFilename()));
          }
        }
        if ((isInternDTD() && xmlStartDTD == -1 || (!isInternDTD() && !DTDfile.exists()))) {
        }
 else {
          MyErrorHandler error=new MyErrorHandler();
          DocBuilderFactory.setValidating(true);
          DocBuilder=DocBuilderFactory.newDocumentBuilder();
          DocBuilder.setErrorHandler(error);
          ba=new ByteArrayInputStream(xmlStringbuffer.toString().getBytes(encoding));
          xmlDocDTD=DocBuilder.parse(ba);
          if (error.errorMessage == null) {
            log.logBasic(BaseMessages.getString(PKG,"JobEntryDTDValidator.DTDValidatorOK.Subject"),BaseMessages.getString(PKG,"JobEntryDTDValidator.DTDValidatorOK.Label",getXMLFilename()));
            retval=true;
          }
 else {
            setNrErrors(error.nrErrors);
            setErrorMessage(BaseMessages.getString(PKG,"JobEntryDTDValidator.DTDValidatorKO",getXMLFilename(),error.nrErrors,error.errorMessage));
          }
        }
      }
 else {
        if (!xmlfile.exists()) {
          setErrorMessage(BaseMessages.getString(PKG,"JobEntryDTDValidator.FileDoesNotExist.Label",getXMLFilename()));
        }
      }
    }
 else {
      setErrorMessage(BaseMessages.getString(PKG,"JobEntryDTDValidator.AllFilesNotNull.Label"));
    }
  }
 catch (  Exception e) {
    setErrorMessage(BaseMessages.getString(PKG,"JobEntryDTDValidator.ErrorDTDValidator.Label",getXMLFilename(),getDTDFilename(),e.getMessage()));
  }
 finally {
    try {
      if (xmlfile != null)       xmlfile.close();
      if (DTDfile != null)       DTDfile.close();
      if (ba != null)       ba.close();
    }
 catch (    IOException e) {
    }
    ;
  }
  return retval;
}
