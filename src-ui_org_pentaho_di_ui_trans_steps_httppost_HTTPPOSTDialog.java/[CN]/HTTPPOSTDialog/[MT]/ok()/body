{
  if (Const.isEmpty(wStepname.getText()))   return;
  int nrargs=wFields.nrNonEmpty();
  input.allocate(nrargs);
  if (log.isDebug())   logDebug(BaseMessages.getString(PKG,"HTTPPOSTDialog.Log.FoundArguments",String.valueOf(nrargs)));
  for (int i=0; i < nrargs; i++) {
    TableItem item=wFields.getNonEmpty(i);
    input.getArgumentField()[i]=item.getText(1);
    input.getArgumentParameter()[i]=item.getText(2);
    input.getArgumentHeader()[i]=YES.equals(item.getText(3));
  }
  int nrqueryparams=wQuery.nrNonEmpty();
  input.allocateQuery(nrqueryparams);
  if (log.isDebug())   logDebug(BaseMessages.getString(PKG,"HTTPPOSTDialog.Log.FoundQueryParameters",String.valueOf(nrqueryparams)));
  for (int i=0; i < nrqueryparams; i++) {
    TableItem item=wQuery.getNonEmpty(i);
    input.getQueryField()[i]=item.getText(1);
    input.getQueryParameter()[i]=item.getText(2);
  }
  input.setUrl(wUrl.getText());
  input.setUrlField(wUrlField.getText());
  input.setRequestEntity(wrequestEntity.getText());
  input.setUrlInField(wUrlInField.getSelection());
  input.setFieldName(wResult.getText());
  input.setResultCodeFieldName(wResultCode.getText());
  input.setResponseTimeFieldName(wResponseTime.getText());
  input.setEncoding(wEncoding.getText());
  input.setPostAFile(wPostAFile.getSelection());
  input.setHttpLogin(wHttpLogin.getText());
  input.setHttpPassword(wHttpPassword.getText());
  input.setProxyHost(wProxyHost.getText());
  input.setProxyPort(wProxyPort.getText());
  input.setSocketTimeout(wSocketTimeOut.getText());
  input.setConnectionTimeout(wConnectionTimeOut.getText());
  stepname=wStepname.getText();
  dispose();
}
