{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("HTTPPOSTDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("HTTPPOSTDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlUrl=new Label(shell,SWT.RIGHT);
  wlUrl.setText(Messages.getString("HTTPPOSTDialog.URL.Label"));
  props.setLook(wlUrl);
  fdlUrl=new FormData();
  fdlUrl.left=new FormAttachment(0,0);
  fdlUrl.right=new FormAttachment(middle,-margin);
  fdlUrl.top=new FormAttachment(wStepname,margin * 2);
  wlUrl.setLayoutData(fdlUrl);
  wUrl=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUrl);
  wUrl.addModifyListener(lsMod);
  fdUrl=new FormData();
  fdUrl.left=new FormAttachment(middle,0);
  fdUrl.top=new FormAttachment(wStepname,margin * 2);
  fdUrl.right=new FormAttachment(100,0);
  wUrl.setLayoutData(fdUrl);
  wlUrlInField=new Label(shell,SWT.RIGHT);
  wlUrlInField.setText(Messages.getString("HTTPPOSTDialog.UrlInField.Label"));
  props.setLook(wlUrlInField);
  fdlUrlInField=new FormData();
  fdlUrlInField.left=new FormAttachment(0,0);
  fdlUrlInField.top=new FormAttachment(wUrl,margin);
  fdlUrlInField.right=new FormAttachment(middle,-margin);
  wlUrlInField.setLayoutData(fdlUrlInField);
  wUrlInField=new Button(shell,SWT.CHECK);
  props.setLook(wUrlInField);
  fdUrlInField=new FormData();
  fdUrlInField.left=new FormAttachment(middle,0);
  fdUrlInField.top=new FormAttachment(wUrl,margin);
  fdUrlInField.right=new FormAttachment(100,0);
  wUrlInField.setLayoutData(fdUrlInField);
  wUrlInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      activeUrlInfield();
    }
  }
);
  wlUrlField=new Label(shell,SWT.RIGHT);
  wlUrlField.setText(Messages.getString("HTTPPOSTDialog.UrlField.Label"));
  props.setLook(wlUrlField);
  fdlUrlField=new FormData();
  fdlUrlField.left=new FormAttachment(0,0);
  fdlUrlField.right=new FormAttachment(middle,-margin);
  fdlUrlField.top=new FormAttachment(wUrlInField,margin);
  wlUrlField.setLayoutData(fdlUrlField);
  wUrlField=new ComboVar(transMeta,shell,SWT.BORDER | SWT.READ_ONLY);
  wUrlField.setEditable(true);
  props.setLook(wUrlField);
  wUrlField.addModifyListener(lsMod);
  fdUrlField=new FormData();
  fdUrlField.left=new FormAttachment(middle,0);
  fdUrlField.top=new FormAttachment(wUrlInField,margin);
  fdUrlField.right=new FormAttachment(100,-margin);
  wUrlField.setLayoutData(fdUrlField);
  wUrlField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setStreamFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlEncoding=new Label(shell,SWT.RIGHT);
  wlEncoding.setText(Messages.getString("HTTPPOSTDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(wUrlField,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new ComboVar(transMeta,shell,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(wUrlField,margin);
  fdEncoding.right=new FormAttachment(100,-margin);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlrequestEntity=new Label(shell,SWT.RIGHT);
  wlrequestEntity.setText(Messages.getString("HTTPPOSTDialog.requestEntity.Label"));
  props.setLook(wlrequestEntity);
  fdlrequestEntity=new FormData();
  fdlrequestEntity.left=new FormAttachment(0,0);
  fdlrequestEntity.right=new FormAttachment(middle,-margin);
  fdlrequestEntity.top=new FormAttachment(wEncoding,margin);
  wlrequestEntity.setLayoutData(fdlrequestEntity);
  wrequestEntity=new ComboVar(transMeta,shell,SWT.BORDER | SWT.READ_ONLY);
  wrequestEntity.setEditable(true);
  props.setLook(wrequestEntity);
  wrequestEntity.addModifyListener(lsMod);
  fdrequestEntity=new FormData();
  fdrequestEntity.left=new FormAttachment(middle,0);
  fdrequestEntity.top=new FormAttachment(wEncoding,margin);
  fdrequestEntity.right=new FormAttachment(100,-margin);
  wrequestEntity.setLayoutData(fdrequestEntity);
  wrequestEntity.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setStreamFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPostAFile=new Label(shell,SWT.RIGHT);
  wlPostAFile.setText(Messages.getString("HTTPPOSTDialog.postAFile.Label"));
  props.setLook(wlPostAFile);
  FormData fdlPostAFile=new FormData();
  fdlPostAFile.left=new FormAttachment(0,0);
  fdlPostAFile.right=new FormAttachment(middle,-margin);
  fdlPostAFile.top=new FormAttachment(wrequestEntity,margin);
  wlPostAFile.setLayoutData(fdlPostAFile);
  wPostAFile=new Button(shell,SWT.CHECK);
  wPostAFile.setToolTipText(Messages.getString("HTTPPOSTDialog.postAFile.Tooltip"));
  props.setLook(wPostAFile);
  FormData fdPostAFile=new FormData();
  fdPostAFile.left=new FormAttachment(middle,0);
  fdPostAFile.top=new FormAttachment(wrequestEntity,margin);
  fdPostAFile.right=new FormAttachment(100,0);
  wPostAFile.setLayoutData(fdPostAFile);
  wlResult=new Label(shell,SWT.RIGHT);
  wlResult.setText(Messages.getString("HTTPPOSTDialog.Result.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(wPostAFile,margin * 2);
  wlResult.setLayoutData(fdlResult);
  wResult=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(wPostAFile,margin * 2);
  fdResult.right=new FormAttachment(100,-margin);
  wResult.setLayoutData(fdResult);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(Messages.getString("HTTPPOSTDialog.Parameters.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wResult,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsRows=input.getArgumentField().length;
  colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("HTTPPOSTDialog.ColumnInfo.Name"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(Messages.getString("HTTPPOSTDialog.ColumnInfo.Parameter"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[1].setUsingVariables(true);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  wGetBodyParam=new Button(shell,SWT.PUSH);
  wGetBodyParam.setText(Messages.getString("HTTPPOSTDialog.GetFields.Button"));
  fdGetBodyParam=new FormData();
  fdGetBodyParam.top=new FormAttachment(wlFields,margin);
  fdGetBodyParam.right=new FormAttachment(100,0);
  wGetBodyParam.setLayoutData(fdGetBodyParam);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wGetBodyParam,-margin);
  fdFields.bottom=new FormAttachment(wlFields,150);
  wFields.setLayoutData(fdFields);
  wlQuery=new Label(shell,SWT.NONE);
  wlQuery.setText(Messages.getString("HTTPPOSTDialog.QueryParameters.Label"));
  props.setLook(wlQuery);
  fdlQuery=new FormData();
  fdlQuery.left=new FormAttachment(0,0);
  fdlQuery.top=new FormAttachment(wFields,margin);
  wlQuery.setLayoutData(fdlQuery);
  final int QueryRows=input.getQueryParameter().length;
  colinfquery=new ColumnInfo[]{new ColumnInfo(Messages.getString("HTTPPOSTDialog.ColumnInfo.QueryName"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(Messages.getString("HTTPPOSTDialog.ColumnInfo.QueryParameter"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinfquery[1].setUsingVariables(true);
  wQuery=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinfquery,QueryRows,lsMod,props);
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(Messages.getString("HTTPPOSTDialog.GetFields.Button"));
  fdGet=new FormData();
  fdGet.top=new FormAttachment(wlQuery,margin);
  fdGet.right=new FormAttachment(100,0);
  wGet.setLayoutData(fdGet);
  fdQuery=new FormData();
  fdQuery.left=new FormAttachment(0,0);
  fdQuery.top=new FormAttachment(wlQuery,margin);
  fdQuery.right=new FormAttachment(wGet,-margin);
  fdQuery.bottom=new FormAttachment(100,-50);
  wQuery.setLayoutData(fdQuery);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          log.logError(toString(),"Impossible de r?cup?rer les champs depuis l'?tape pr?c?dente");
        }
      }
    }
  }
;
  new Thread(runnable).start();
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wQuery);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      getQueryFields();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGetBodyParam=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCancel.addListener(SWT.Selection,lsCancel);
  wGetBodyParam.addListener(SWT.Selection,lsGetBodyParam);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wUrl.addSelectionListener(lsDef);
  wResult.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  setSize();
  getData();
  activeUrlInfield();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
