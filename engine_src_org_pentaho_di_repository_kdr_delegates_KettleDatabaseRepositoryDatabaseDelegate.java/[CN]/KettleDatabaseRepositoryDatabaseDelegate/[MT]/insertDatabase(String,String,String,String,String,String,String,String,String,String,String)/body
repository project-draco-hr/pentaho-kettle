{
  ObjectId id=repository.connectionDelegate.getNextDatabaseID();
  ObjectId id_database_type=getDatabaseTypeID(type);
  if (id_database_type == null) {
    id_database_type=repository.connectionDelegate.getNextDatabaseTypeID();
    String tablename=KettleDatabaseRepository.TABLE_R_DATABASE_TYPE;
    RowMetaInterface tableMeta=new RowMeta();
    tableMeta.addValueMeta(new ValueMetaInteger(KettleDatabaseRepository.FIELD_DATABASE_TYPE_ID_DATABASE_TYPE,5,0));
    tableMeta.addValueMeta(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_TYPE_CODE,KettleDatabaseRepository.REP_STRING_CODE_LENGTH,0));
    tableMeta.addValueMeta(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_TYPE_DESCRIPTION,KettleDatabaseRepository.REP_STRING_LENGTH,0));
    repository.connectionDelegate.getDatabase().prepareInsert(tableMeta,tablename);
    Object[] tableData=new Object[3];
    int tableIndex=0;
    tableData[tableIndex++]=new LongObjectId(id_database_type).longValue();
    tableData[tableIndex++]=type;
    tableData[tableIndex++]=type;
    repository.connectionDelegate.getDatabase().setValuesInsert(tableMeta,tableData);
    repository.connectionDelegate.getDatabase().insertRow();
    repository.connectionDelegate.getDatabase().closeInsert();
  }
  ObjectId id_database_contype=getDatabaseConTypeID(access);
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_DATABASE_ID_DATABASE),id);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_NAME),name);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_DATABASE_ID_DATABASE_TYPE),id_database_type);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_DATABASE_ID_DATABASE_CONTYPE),id_database_contype);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_HOST_NAME),host);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_DATABASE_NAME),dbname);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_DATABASE_PORT),Long.valueOf(Const.toLong(port,-1)));
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_USERNAME),user);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_PASSWORD),Encr.encryptPasswordIfNotUsingVariables(pass));
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_SERVERNAME),servername);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_DATA_TBS),data_tablespace);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_DATABASE_INDEX_TBS),index_tablespace);
  repository.connectionDelegate.getDatabase().prepareInsert(table.getRowMeta(),KettleDatabaseRepository.TABLE_R_DATABASE);
  repository.connectionDelegate.getDatabase().setValuesInsert(table);
  repository.connectionDelegate.getDatabase().insertRow();
  repository.connectionDelegate.getDatabase().closeInsert();
  return id;
}
