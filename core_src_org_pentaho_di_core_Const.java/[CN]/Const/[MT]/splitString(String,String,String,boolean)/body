{
  ArrayList<String> splitList=null;
  if (stringToSplit == null) {
    return null;
  }
  if (delimiter == null) {
    return (new String[]{stringToSplit});
  }
  String[] delimiterSplit=stringToSplit.split(Pattern.quote(delimiter));
  if (isEmpty(enclosure)) {
    return delimiterSplit;
  }
  StringBuilder concatSplit=null;
  if (delimiterSplit != null && delimiterSplit.length > 0) {
    splitList=new ArrayList<String>();
    for (    String currentSplit : delimiterSplit) {
      if (!currentSplit.contains(enclosure)) {
        if (concatSplit != null) {
          concatSplit.append(delimiter);
          concatSplit.append(currentSplit);
        }
 else {
          splitList.add(currentSplit);
        }
      }
 else {
        int numEnclosures=StringUtils.countMatches(currentSplit,enclosure);
        boolean oddNumberOfEnclosures=(numEnclosures % 2 != 0);
        boolean addSplit=false;
        if (concatSplit == null) {
          concatSplit=new StringBuilder(currentSplit);
          addSplit=!oddNumberOfEnclosures;
        }
 else {
          concatSplit.append(delimiter);
          concatSplit.append(currentSplit);
          addSplit=oddNumberOfEnclosures;
        }
        if (addSplit) {
          String splitResult=concatSplit.toString();
          if (removeEnclosure) {
            splitResult=removeEnclosure(splitResult,enclosure);
          }
          splitList.add(splitResult);
          concatSplit=null;
          addSplit=false;
        }
      }
    }
  }
  return splitList.toArray(new String[splitList.size()]);
}
