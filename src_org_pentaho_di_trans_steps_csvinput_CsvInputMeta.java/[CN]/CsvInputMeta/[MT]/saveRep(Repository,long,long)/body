{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"filename",filename);
    rep.saveStepAttribute(id_transformation,id_step,"filename_field",filenameField);
    rep.saveStepAttribute(id_transformation,id_step,"separator",delimiter);
    rep.saveStepAttribute(id_transformation,id_step,"enclosure",enclosure);
    rep.saveStepAttribute(id_transformation,id_step,"buffer_size",bufferSize);
    rep.saveStepAttribute(id_transformation,id_step,"header",headerPresent);
    rep.saveStepAttribute(id_transformation,id_step,"lazy_conversion",lazyConversionActive);
    for (int i=0; i < inputFields.length; i++) {
      TextFileInputField field=inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",ValueMeta.getTypeDesc(field.getType()));
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",ValueMeta.getTrimTypeCode(field.getTrimType()));
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
