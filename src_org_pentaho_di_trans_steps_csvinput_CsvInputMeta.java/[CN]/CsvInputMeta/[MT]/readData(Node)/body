{
  try {
    filename=XMLHandler.getTagValue(stepnode,getXmlCode("FILENAME"));
    filenameField=XMLHandler.getTagValue(stepnode,getXmlCode("FILENAME_FIELD"));
    rowNumField=XMLHandler.getTagValue(stepnode,getXmlCode("ROW_NUM_FIELD"));
    includingFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,getXmlCode("INCLUDE_FILENAME")));
    delimiter=XMLHandler.getTagValue(stepnode,getXmlCode("DELIMITER"));
    enclosure=XMLHandler.getTagValue(stepnode,getXmlCode("ENCLOSURE"));
    bufferSize=XMLHandler.getTagValue(stepnode,getXmlCode("BUFFERSIZE"));
    headerPresent="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,getXmlCode("HEADER_PRESENT")));
    lazyConversionActive="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,getXmlCode("LAZY_CONVERSION")));
    isaddresult="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,getXmlCode("ADD_FILENAME_RESULT")));
    runningInParallel="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,getXmlCode("PARALLEL")));
    encoding=XMLHandler.getTagValue(stepnode,getXmlCode("ENCODING"));
    Node fields=XMLHandler.getSubNode(stepnode,getXmlCode("FIELDS"));
    int nrfields=XMLHandler.countNodes(fields,getXmlCode("FIELD"));
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      inputFields[i]=new TextFileInputField();
      Node fnode=XMLHandler.getSubNodeByNr(fields,getXmlCode("FIELD"),i);
      inputFields[i].setName(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_NAME")));
      inputFields[i].setType(ValueMeta.getType(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_TYPE"))));
      inputFields[i].setFormat(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_FORMAT")));
      inputFields[i].setCurrencySymbol(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_CURRENCY")));
      inputFields[i].setDecimalSymbol(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_DECIMAL")));
      inputFields[i].setGroupSymbol(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_GROUP")));
      inputFields[i].setLength(Const.toInt(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_LENGTH")),-1));
      inputFields[i].setPrecision(Const.toInt(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_PRECISION")),-1));
      inputFields[i].setTrimType(ValueMeta.getTrimTypeByCode(XMLHandler.getTagValue(fnode,getXmlCode("FIELD_TRIM_TYPE"))));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
