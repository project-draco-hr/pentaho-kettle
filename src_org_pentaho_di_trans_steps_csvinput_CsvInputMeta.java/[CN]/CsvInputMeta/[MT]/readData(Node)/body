{
  try {
    filename=XMLHandler.getTagValue(stepnode,"filename");
    delimiter=XMLHandler.getTagValue(stepnode,"separator");
    bufferSize=XMLHandler.getTagValue(stepnode,"buffer_size");
    headerPresent="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"header"));
    lazyConversionActive="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"lazy_conversion"));
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      fieldNames[i]=XMLHandler.getTagValue(fnode,"name");
      fieldTypes[i]=ValueMeta.getType(XMLHandler.getTagValue(fnode,"type"));
      fieldFormat[i]=XMLHandler.getTagValue(fnode,"format");
      fieldCurrency[i]=XMLHandler.getTagValue(fnode,"currency");
      fieldDecimal[i]=XMLHandler.getTagValue(fnode,"decimal");
      fieldGrouping[i]=XMLHandler.getTagValue(fnode,"group");
      fieldLength[i]=Const.toInt(XMLHandler.getTagValue(fnode,"length"),-1);
      fieldPrecision[i]=Const.toInt(XMLHandler.getTagValue(fnode,"precision"),-1);
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
