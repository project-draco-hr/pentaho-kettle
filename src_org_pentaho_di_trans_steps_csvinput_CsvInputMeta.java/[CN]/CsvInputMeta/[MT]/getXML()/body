{
  StringBuffer retval=new StringBuffer(500);
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.FILENAME,filename));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.FILENAME_FIELD,filenameField));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.ROW_NUM_FIELD,rowNumField));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.INCLUDE_FILENAME,includingFilename));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.DELIMITER,delimiter));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.ENCLOSURE,enclosure));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.HEADER_PRESENT,headerPresent));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.BUFFERSIZE,bufferSize));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.LAZY_CONVERSION,lazyConversionActive));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.ADD_FILENAME_RESULT,isaddresult));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.PARALLEL,runningInParallel));
  retval.append("    ").append(XMLHandler.addTagValue(CsvInputAttr.ENCODING,encoding));
  retval.append("    ").append(XMLHandler.openTag(CsvInputAttr.FIELDS.getXmlCode())).append(Const.CR);
  for (int i=0; i < inputFields.length; i++) {
    TextFileInputField field=inputFields[i];
    retval.append("      ").append(XMLHandler.openTag(CsvInputAttr.FIELD.getXmlCode())).append(Const.CR);
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_NAME,field.getName()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_TYPE,ValueMeta.getTypeDesc(field.getType())));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_FORMAT,field.getFormat()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_CURRENCY,field.getCurrencySymbol()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_DECIMAL,field.getDecimalSymbol()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_GROUP,field.getGroupSymbol()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_LENGTH,field.getLength()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_PRECISION,field.getPrecision()));
    retval.append("        ").append(XMLHandler.addTagValue(CsvInputAttr.FIELD_TRIM_TYPE,ValueMeta.getTrimTypeCode(field.getTrimType())));
    retval.append("      ").append(XMLHandler.closeTag(CsvInputAttr.FIELD.getXmlCode())).append(Const.CR);
  }
  retval.append("    ").append(XMLHandler.closeTag(CsvInputAttr.FIELDS.getXmlCode())).append(Const.CR);
  return retval.toString();
}
