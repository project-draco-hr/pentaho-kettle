{
  try {
    filename=rep.getStepAttributeString(id_step,"filename");
    delimiter=rep.getStepAttributeString(id_step,"separator");
    enclosure=rep.getStepAttributeString(id_step,"enclosure");
    headerPresent=rep.getStepAttributeBoolean(id_step,"header");
    bufferSize=rep.getStepAttributeString(id_step,"buffer_size");
    lazyConversionActive=rep.getStepAttributeBoolean(id_step,"lazy_conversion");
    int nrfields=rep.countNrStepAttributes(id_step,"field_name");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      inputFields[i]=new TextFileInputField();
      inputFields[i].setName(rep.getStepAttributeString(id_step,i,"field_name"));
      inputFields[i].setType(ValueMeta.getType(rep.getStepAttributeString(id_step,i,"field_type")));
      inputFields[i].setFormat(rep.getStepAttributeString(id_step,i,"field_format"));
      inputFields[i].setCurrencySymbol(rep.getStepAttributeString(id_step,i,"field_currency"));
      inputFields[i].setDecimalSymbol(rep.getStepAttributeString(id_step,i,"field_decimal"));
      inputFields[i].setGroupSymbol(rep.getStepAttributeString(id_step,i,"field_group"));
      inputFields[i].setLength((int)rep.getStepAttributeInteger(id_step,i,"field_length"));
      inputFields[i].setPrecision((int)rep.getStepAttributeInteger(id_step,i,"field_precision"));
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
