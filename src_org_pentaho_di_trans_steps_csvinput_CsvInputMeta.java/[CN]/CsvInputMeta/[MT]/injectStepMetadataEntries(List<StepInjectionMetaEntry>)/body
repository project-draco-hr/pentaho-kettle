{
  for (  StepInjectionMetaEntry entry : metadata) {
    KettleAttributeInterface attr=findAttribute(entry.getKey());
    if (entry.getValueType() != ValueMetaInterface.TYPE_NONE) {
      if (attr.getKey().equals("FILENAME")) {
        filename=(String)entry.getValue();
      }
 else       if (attr.getKey().equals("FILENAME_FIELD")) {
        filenameField=(String)entry.getValue();
      }
 else       if (attr.getKey().equals("ROW_NUM_FIELD")) {
        rowNumField=(String)entry.getValue();
      }
 else       if (attr.getKey().equals("HEADER_PRESENT")) {
        headerPresent=(Boolean)entry.getValue();
      }
 else       if (attr.getKey().equals("DELIMITER")) {
        delimiter=(String)entry.getValue();
      }
 else       if (attr.getKey().equals("ENCLOSURE")) {
        enclosure=(String)entry.getValue();
      }
 else       if (attr.getKey().equals("BUFFERSIZE")) {
        bufferSize=(String)entry.getValue();
      }
 else       if (attr.getKey().equals("LAZY_CONVERSION")) {
        lazyConversionActive=(Boolean)entry.getValue();
      }
 else       if (attr.getKey().equals("PARALLEL")) {
        runningInParallel=(Boolean)entry.getValue();
      }
 else       if (attr.getKey().equals("ADD_FILENAME_RESULT")) {
        isaddresult=(Boolean)entry.getValue();
      }
 else       if (attr.getKey().equals("ENCODING")) {
        encoding=(String)entry.getValue();
      }
 else {
        throw new RuntimeException("Unhandled metadata injection of attribute: " + attr.toString() + " - "+ attr.getDescription());
      }
    }
 else {
      if (attr.getKey().equals("FIELDS")) {
        List<StepInjectionMetaEntry> inputFieldEntries=entry.getDetails();
        inputFields=new TextFileInputField[inputFieldEntries.size()];
        for (int row=0; row < inputFieldEntries.size(); row++) {
          StepInjectionMetaEntry inputFieldEntry=inputFieldEntries.get(row);
          TextFileInputField inputField=new TextFileInputField();
          List<StepInjectionMetaEntry> fieldAttributes=inputFieldEntry.getDetails();
          for (int i=0; i < fieldAttributes.size(); i++) {
            StepInjectionMetaEntry fieldAttribute=fieldAttributes.get(i);
            KettleAttributeInterface fieldAttr=findAttribute(fieldAttribute.getKey());
            String attributeValue=(String)fieldAttribute.getValue();
            if (fieldAttr.getKey().equals("FIELD_NAME")) {
              inputField.setName(attributeValue);
            }
 else             if (fieldAttr.getKey().equals("FIELD_TYPE")) {
              inputField.setType(ValueMeta.getType(attributeValue));
            }
 else             if (fieldAttr.getKey().equals("FIELD_FORMAT")) {
              inputField.setFormat(attributeValue);
            }
 else             if (fieldAttr.getKey().equals("FIELD_LENGTH")) {
              inputField.setLength(attributeValue == null ? -1 : Integer.parseInt(attributeValue));
            }
 else             if (fieldAttr.getKey().equals("FIELD_PRECISION")) {
              inputField.setPrecision(attributeValue == null ? -1 : Integer.parseInt(attributeValue));
            }
 else             if (fieldAttr.getKey().equals("FIELD_CURRENCY")) {
              inputField.setCurrencySymbol(attributeValue);
            }
 else             if (fieldAttr.getKey().equals("FIELD_DECIMAL")) {
              inputField.setDecimalSymbol(attributeValue);
            }
 else             if (fieldAttr.getKey().equals("FIELD_GROUP")) {
              inputField.setGroupSymbol(attributeValue);
            }
 else             if (fieldAttr.getKey().equals("FIELD_TRIM_TYPE")) {
              inputField.setTrimType(ValueMeta.getTrimTypeByCode(attributeValue));
            }
 else {
              throw new RuntimeException("Unhandled metadata injection of attribute: " + fieldAttr.toString() + " - "+ fieldAttr.getDescription());
            }
          }
          inputFields[row]=inputField;
        }
      }
    }
  }
}
