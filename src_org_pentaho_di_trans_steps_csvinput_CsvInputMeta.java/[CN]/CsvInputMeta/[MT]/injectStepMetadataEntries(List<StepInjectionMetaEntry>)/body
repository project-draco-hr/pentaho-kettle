{
  for (  StepInjectionMetaEntry entry : metadata) {
    CsvInputAttr attr=CsvInputAttr.findByKey(entry.getKey());
    if (entry.getValueType() != ValueMetaInterface.TYPE_NONE) {
switch (attr) {
case FILENAME:
        filename=(String)entry.getValue();
      break;
case FILENAME_FIELD:
    filenameField=(String)entry.getValue();
  break;
case ROW_NUM_FIELD:
rowNumField=(String)entry.getValue();
break;
case HEADER_PRESENT:
headerPresent=(Boolean)entry.getValue();
break;
case DELIMITER:
delimiter=(String)entry.getValue();
break;
case ENCLOSURE:
enclosure=(String)entry.getValue();
break;
case BUFFERSIZE:
bufferSize=(String)entry.getValue();
break;
case LAZY_CONVERSION:
lazyConversionActive=(Boolean)entry.getValue();
break;
case PARALLEL:
runningInParallel=(Boolean)entry.getValue();
break;
case ADD_FILENAME_RESULT:
isaddresult=(Boolean)entry.getValue();
break;
case ENCODING:
encoding=(String)entry.getValue();
break;
default :
throw new RuntimeException("Unhandled metadata injection of attribute: " + attr.toString() + " - "+ attr.getDescription());
}
}
 else {
if (attr == CsvInputAttr.FIELDS) {
List<StepInjectionMetaEntry> inputFieldEntries=entry.getDetails();
inputFields=new TextFileInputField[inputFieldEntries.size()];
for (int row=0; row < inputFieldEntries.size(); row++) {
StepInjectionMetaEntry inputFieldEntry=inputFieldEntries.get(row);
TextFileInputField inputField=new TextFileInputField();
List<StepInjectionMetaEntry> fieldAttributes=inputFieldEntry.getDetails();
for (int i=0; i < fieldAttributes.size(); i++) {
StepInjectionMetaEntry fieldAttribute=fieldAttributes.get(i);
CsvInputAttr fieldAttr=CsvInputAttr.findByKey(fieldAttribute.getKey());
String attributeValue=(String)fieldAttribute.getValue();
switch (fieldAttr) {
case FIELD_NAME:
inputField.setName(attributeValue);
break;
case FIELD_TYPE:
inputField.setType(ValueMeta.getType(attributeValue));
break;
case FIELD_FORMAT:
inputField.setFormat(attributeValue);
break;
case FIELD_LENGTH:
inputField.setLength(attributeValue == null ? -1 : Integer.parseInt(attributeValue));
break;
case FIELD_PRECISION:
inputField.setPrecision(attributeValue == null ? -1 : Integer.parseInt(attributeValue));
break;
case FIELD_CURRENCY:
inputField.setCurrencySymbol(attributeValue);
break;
case FIELD_DECIMAL:
inputField.setDecimalSymbol(attributeValue);
break;
case FIELD_GROUP:
inputField.setGroupSymbol(attributeValue);
break;
case FIELD_TRIM_TYPE:
inputField.setTrimType(ValueMeta.getTrimTypeByCode(attributeValue));
break;
default :
throw new RuntimeException("Unhandled metadata injection of attribute: " + fieldAttr.toString() + " - "+ fieldAttr.getDescription());
}
}
inputFields[row]=inputField;
}
}
}
}
}
