{
  List<TabMapEntry> list=new ArrayList<TabMapEntry>(tabMap);
  for (  TabMapEntry entry : list) {
    if (entry.getTabItem().isDisposed()) {
      tabMap.remove(entry.getObjectName());
      continue;
    }
    Object managedObject=entry.getObject().getManagedObject();
    if (managedObject != null) {
      if (entry.getObject() instanceof AbstractGraph) {
        AbstractMeta meta=(AbstractMeta)managedObject;
        String tabText=makeTabName(meta,entry.isShowingLocation());
        entry.getTabItem().setText(tabText);
        String toolTipText=BaseMessages.getString(PKG,"Spoon.TabTrans.Tooltip",tabText);
        if (entry.getObject() instanceof JobGraph) {
          toolTipText=BaseMessages.getString(PKG,"Spoon.TabJob.Tooltip",tabText);
        }
        if (Const.isWindows() && !Utils.isEmpty(meta.getFilename())) {
          toolTipText+=Const.CR + Const.CR + meta.getFilename();
        }
        entry.getTabItem().setToolTipText(toolTipText);
      }
      if (entry.getTabItem() == spoon.tabfolder.getSelected()) {
        ((AbstractGraph)entry.getObject()).setData("LOG_PATH",configureFileLogging(entry.getTabItem()));
      }
    }
  }
  spoon.setShellText();
}
