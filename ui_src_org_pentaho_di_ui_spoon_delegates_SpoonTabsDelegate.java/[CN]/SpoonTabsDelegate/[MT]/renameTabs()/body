{
  List<TabMapEntry> list=new ArrayList<TabMapEntry>(tabMap);
  for (  TabMapEntry entry : list) {
    if (entry.getTabItem().isDisposed()) {
      tabMap.remove(entry.getObjectName());
      continue;
    }
    Object managedObject=entry.getObject().getManagedObject();
    if (managedObject != null) {
      if (entry.getObject() instanceof TransGraph) {
        TransMeta transMeta=(TransMeta)managedObject;
        String tabText=makeTabName(transMeta,entry.isShowingLocation());
        entry.getTabItem().setText(tabText);
        String toolTipText=BaseMessages.getString(PKG,"Spoon.TabTrans.Tooltip",tabText);
        if (Const.isWindows() && !Const.isEmpty(transMeta.getFilename())) {
          toolTipText+=Const.CR + Const.CR + transMeta.getFilename();
        }
        entry.getTabItem().setToolTipText(toolTipText);
      }
 else       if (entry.getObject() instanceof JobGraph) {
        JobMeta jobMeta=(JobMeta)managedObject;
        entry.getTabItem().setText(makeTabName(jobMeta,entry.isShowingLocation()));
        String toolTipText=BaseMessages.getString(PKG,"Spoon.TabJob.Tooltip",makeTabName(jobMeta,entry.isShowingLocation()));
        if (Const.isWindows() && !Const.isEmpty(jobMeta.getFilename())) {
          toolTipText+=Const.CR + Const.CR + jobMeta.getFilename();
        }
        entry.getTabItem().setToolTipText(toolTipText);
      }
    }
  }
  spoon.setShellText();
}
