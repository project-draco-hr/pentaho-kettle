{
  List<TabMapEntry> collection=new ArrayList<TabMapEntry>();
  collection.addAll(tabMap);
  boolean createPerms=!RepositorySecurityUI.verifyOperations(Spoon.getInstance().getShell(),Spoon.getInstance().getRepository(),false,RepositoryOperation.MODIFY_TRANSFORMATION,RepositoryOperation.MODIFY_JOB);
  boolean close=true;
  boolean canSave=true;
  for (  TabMapEntry entry : collection) {
    if (item.equals(entry.getTabItem())) {
      TabItemInterface itemInterface=entry.getObject();
      if (itemInterface.getManagedObject() != null && AbstractMeta.class.isAssignableFrom(itemInterface.getManagedObject().getClass())) {
        canSave=!((AbstractMeta)itemInterface.getManagedObject()).hasMissingPlugins();
      }
      if (canSave) {
        if (!itemInterface.canBeClosed() && createPerms) {
          int reply=itemInterface.showChangedWarning();
          if (reply == SWT.YES) {
            close=itemInterface.applyChanges();
          }
 else {
            if (reply == SWT.CANCEL) {
              close=false;
            }
 else {
              close=true;
            }
          }
        }
      }
      if (close) {
        if (entry.getObject() instanceof TransGraph) {
          TransMeta transMeta=(TransMeta)entry.getObject().getManagedObject();
          spoon.delegates.trans.closeTransformation(transMeta);
          spoon.refreshTree();
        }
 else         if (entry.getObject() instanceof JobGraph) {
          JobMeta jobMeta=(JobMeta)entry.getObject().getManagedObject();
          spoon.delegates.jobs.closeJob(jobMeta);
          spoon.refreshTree();
        }
 else         if (entry.getObject() instanceof SpoonBrowser) {
          spoon.closeSpoonBrowser();
          spoon.refreshTree();
        }
 else         if (entry.getObject() instanceof Composite) {
          Composite comp=(Composite)entry.getObject();
          if (comp != null && !comp.isDisposed()) {
            comp.dispose();
          }
        }
      }
      break;
    }
  }
  return close;
}
