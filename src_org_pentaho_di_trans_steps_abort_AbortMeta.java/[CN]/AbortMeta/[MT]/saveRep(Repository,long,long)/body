{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"row_threshold",rowThreshold);
    rep.saveStepAttribute(id_transformation,id_step,"message",message);
    rep.saveStepAttribute(id_transformation,id_step,"always_log_rows",alwaysLogRows);
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"AbortMeta.Exception.UnableToSaveStepInfoToRepository") + id_step,e);
  }
}
