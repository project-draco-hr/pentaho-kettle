{
  CheckResult cr;
  if (prev == null || prev.size() == 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_WARNING,Messages.getString("MappingMeta.CheckResult.NotReceivingAnyFields"),stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("MappingMeta.CheckResult.StepReceivingFields",prev.size() + ""),stepinfo);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("MappingMeta.CheckResult.StepReceivingFieldsFromOtherSteps"),stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.NoInputReceived"),stepinfo);
    remarks.add(cr);
  }
  for (int i=0; i < inputField.length; i++) {
    if (inputField[i] != null && inputField[i].length() > 0) {
      if (inputMapping[i] != null && inputMapping[i].length() > 0) {
        if (!inputField[i].equals(inputMapping[i])) {
          int idx=prev.searchValueIndex(inputField[i]);
          if (idx < 0) {
            cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.MappingTargetFieldNotPresent",inputField[i]),stepinfo);
            remarks.add(cr);
          }
        }
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.MappingTargetFieldNotSepecified",i + "",inputField[i]),stepinfo);
        remarks.add(cr);
      }
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.InputFieldNotSpecified",i + ""),stepinfo);
      remarks.add(cr);
    }
  }
  Repository repository=Repository.getCurrentRepository();
  TransMeta mappingTransMeta=null;
  try {
    mappingTransMeta=loadMappingMeta(fileName,transName,directoryPath,repository);
  }
 catch (  KettleException e) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("MappingMeta.CheckResult.UnableToLoadMappingTransformation") + ":" + Const.getStackTracker(e),stepinfo);
    remarks.add(cr);
  }
  if (mappingTransMeta != null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("MappingMeta.CheckResult.MappingTransformationSpecified"),stepinfo);
    remarks.add(cr);
    StepMeta stepMeta=mappingTransMeta.getMappingOutputStep();
    if (stepMeta != null) {
      Row fields=null;
      try {
        fields=mappingTransMeta.getStepFields(stepMeta);
        boolean allOK=true;
        for (int i=0; i < outputMapping.length; i++) {
          Value v=fields.searchValue(outputMapping[i]);
          if (v == null) {
            cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.MappingOutFieldSpecifiedCouldNotFound") + outputMapping[i],stepinfo);
            remarks.add(cr);
            allOK=false;
          }
        }
        if (allOK) {
          cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("MappingMeta.CheckResult.AllOutputMappingFieldCouldBeFound"),stepinfo);
          remarks.add(cr);
        }
      }
 catch (      KettleStepException e) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.UnableToGetStepOutputFields") + stepMeta.getName() + "]",stepinfo);
        remarks.add(cr);
      }
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.NoMappingOutputStepSpecified"),stepinfo);
      remarks.add(cr);
    }
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("MappingMeta.CheckResult.NoMappingSpecified"),stepinfo);
    remarks.add(cr);
  }
}
