{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("DummyPluginDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText("Job entry name ");
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlSourceDirectory=new Label(shell,SWT.RIGHT);
  wlSourceDirectory.setText("Source directory");
  props.setLook(wlSourceDirectory);
  fdlSourceDirectory=new FormData();
  fdlSourceDirectory.left=new FormAttachment(0,0);
  fdlSourceDirectory.top=new FormAttachment(wName,margin);
  fdlSourceDirectory.right=new FormAttachment(middle,-margin);
  wlSourceDirectory.setLayoutData(fdlSourceDirectory);
  wSourceDirectory=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSourceDirectory);
  wSourceDirectory.addModifyListener(lsMod);
  fdSourceDirectory=new FormData();
  fdSourceDirectory.left=new FormAttachment(middle,0);
  fdSourceDirectory.top=new FormAttachment(wName,margin);
  fdSourceDirectory.right=new FormAttachment(100,0);
  wSourceDirectory.setLayoutData(fdSourceDirectory);
  wlTargetDirectory=new Label(shell,SWT.RIGHT);
  wlTargetDirectory.setText("Target directory");
  props.setLook(wlTargetDirectory);
  fdlTargetDirectory=new FormData();
  fdlTargetDirectory.left=new FormAttachment(0,0);
  fdlTargetDirectory.top=new FormAttachment(wSourceDirectory,margin);
  fdlTargetDirectory.right=new FormAttachment(middle,-margin);
  wlTargetDirectory.setLayoutData(fdlTargetDirectory);
  wTargetDirectory=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTargetDirectory);
  wTargetDirectory.addModifyListener(lsMod);
  fdTargetDirectory=new FormData();
  fdTargetDirectory.left=new FormAttachment(middle,0);
  fdTargetDirectory.top=new FormAttachment(wSourceDirectory,margin);
  fdTargetDirectory.right=new FormAttachment(100,0);
  wTargetDirectory.setLayoutData(fdTargetDirectory);
  wlWildcard=new Label(shell,SWT.RIGHT);
  wlWildcard.setText("Wildcard (regular expression)");
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wTargetDirectory,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wTargetDirectory,margin);
  fdWildcard.right=new FormAttachment(100,0);
  wWildcard.setLayoutData(fdWildcard);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wWildcard);
  lsCancel=new Listener(){
    @Override public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    @Override public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wSourceDirectory.addSelectionListener(lsDef);
  wTargetDirectory.addSelectionListener(lsDef);
  wWildcard.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    @Override public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
