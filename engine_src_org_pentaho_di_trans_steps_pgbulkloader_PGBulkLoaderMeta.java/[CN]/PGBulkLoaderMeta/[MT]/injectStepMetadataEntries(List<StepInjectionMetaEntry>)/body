{
  for (  StepInjectionMetaEntry entry : metadata) {
    KettleAttributeInterface attr=findAttribute(entry.getKey());
    if (entry.getValueType() != ValueMetaInterface.TYPE_NONE) {
    }
 else {
      if (attr.getKey().equals("MAPPINGS")) {
        List<StepInjectionMetaEntry> selectMappings=entry.getDetails();
        fieldTable=new String[selectMappings.size()];
        fieldStream=new String[selectMappings.size()];
        dateMask=new String[selectMappings.size()];
        for (int row=0; row < selectMappings.size(); row++) {
          StepInjectionMetaEntry selectField=selectMappings.get(row);
          List<StepInjectionMetaEntry> fieldAttributes=selectField.getDetails();
          for (int i=0; i < fieldAttributes.size(); i++) {
            StepInjectionMetaEntry fieldAttribute=fieldAttributes.get(i);
            KettleAttributeInterface fieldAttr=findAttribute(fieldAttribute.getKey());
            String attributeValue=(String)fieldAttribute.getValue();
            if (fieldAttr.getKey().equals("STREAMNAME")) {
              getFieldStream()[row]=attributeValue;
            }
 else             if (fieldAttr.getKey().equals("FIELDNAME")) {
              getFieldTable()[row]=attributeValue;
            }
 else             if (fieldAttr.getKey().equals("DATEMASK")) {
              getDateMask()[row]=attributeValue;
            }
 else {
              throw new RuntimeException("Unhandled metadata injection of attribute: " + fieldAttr.toString() + " - "+ fieldAttr.getDescription());
            }
          }
        }
      }
      if (!Const.isEmpty(getFieldStream())) {
        for (int i=0; i < getFieldStream().length; i++) {
          logDetailed("row " + Integer.toString(i) + ": stream="+ getFieldStream()[i]+ " : table="+ getFieldTable()[i]);
        }
      }
    }
  }
}
