{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,m_currentMeta);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      m_currentMeta.setChanged();
    }
  }
;
  changed=m_currentMeta.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"UnivariateStatsDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  m_wlStepname=new Label(shell,SWT.RIGHT);
  m_wlStepname.setText(BaseMessages.getString(PKG,"UnivariateStatsDialog.StepName.Label"));
  props.setLook(m_wlStepname);
  m_fdlStepname=new FormData();
  m_fdlStepname.left=new FormAttachment(0,0);
  m_fdlStepname.right=new FormAttachment(middle,-margin);
  m_fdlStepname.top=new FormAttachment(0,margin);
  m_wlStepname.setLayoutData(m_fdlStepname);
  m_wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  m_wStepname.setText(stepname);
  props.setLook(m_wStepname);
  m_wStepname.addModifyListener(lsMod);
  m_fdStepname=new FormData();
  m_fdStepname.left=new FormAttachment(middle,0);
  m_fdStepname.top=new FormAttachment(0,margin);
  m_fdStepname.right=new FormAttachment(100,0);
  m_wStepname.setLayoutData(m_fdStepname);
  m_wlFields=new Label(shell,SWT.NONE);
  m_wlFields.setText(BaseMessages.getString(PKG,"UnivariateStatsDialog.Fields.Label"));
  props.setLook(m_wlFields);
  m_fdlFields=new FormData();
  m_fdlFields.left=new FormAttachment(0,0);
  m_fdlFields.top=new FormAttachment(m_wStepname,margin);
  m_wlFields.setLayoutData(m_fdlFields);
  final int fieldsRows=(m_currentMeta.getInputFieldMetaFunctions() != null) ? m_currentMeta.getNumFieldsToProcess() : 1;
  m_colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.InputFieldColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.NColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.MeanColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.StdDevColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.MinColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.MaxColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.MedianColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.PercentileColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"UnivariateStatsDialog.InterpolateColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"True","False"},true)};
  m_wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,m_colinf,fieldsRows,lsMod,props);
  m_fdFields=new FormData();
  m_fdFields.left=new FormAttachment(0,0);
  m_fdFields.top=new FormAttachment(m_wlFields,margin);
  m_fdFields.right=new FormAttachment(100,0);
  m_fdFields.bottom=new FormAttachment(100,-50);
  m_wFields.setLayoutData(m_fdFields);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            ValueMetaInterface field=row.getValueMeta(i);
            if (field.isNumeric()) {
              m_inputFields.put(field.getName(),Integer.valueOf(i));
            }
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          log.logError(toString(),BaseMessages.getString(PKG,"UnivariateStatsDialog.Log.UnableToFindInput"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  m_wFields.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      shell.getDisplay().asyncExec(new Runnable(){
        public void run(){
          setComboBoxes();
        }
      }
);
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,null);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  m_wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  m_currentMeta.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
