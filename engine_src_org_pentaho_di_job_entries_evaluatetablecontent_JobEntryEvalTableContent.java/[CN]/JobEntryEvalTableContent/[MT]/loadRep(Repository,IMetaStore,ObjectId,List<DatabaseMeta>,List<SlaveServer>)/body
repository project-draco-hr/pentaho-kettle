{
  try {
    connection=rep.loadDatabaseMetaFromJobEntryAttribute(id_jobentry,"connection","id_database",databases);
    schemaname=rep.getJobEntryAttributeString(id_jobentry,"schemaname");
    tablename=rep.getJobEntryAttributeString(id_jobentry,"tablename");
    successCondition=getSuccessConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"success_condition"),""));
    limit=rep.getJobEntryAttributeString(id_jobentry,"limit");
    useCustomSQL=rep.getJobEntryAttributeBoolean(id_jobentry,"is_custom_sql");
    useVars=rep.getJobEntryAttributeBoolean(id_jobentry,"is_usevars");
    addRowsResult=rep.getJobEntryAttributeBoolean(id_jobentry,"add_rows_result");
    clearResultList=rep.getJobEntryAttributeBoolean(id_jobentry,"clear_result_rows");
    customSQL=rep.getJobEntryAttributeString(id_jobentry,"custom_sql");
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEntryEvalTableContent.UnableLoadRep","" + id_jobentry),dbe);
  }
}
