{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  FocusListener lsFocusLost=new FocusAdapter(){
    public void focusLost(    FocusEvent arg0){
      setTableFieldCombo();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("SynchronizeAfterMergeDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("SynchronizeAfterMergeDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(Messages.getString("SynchronizeAfterMergeDialog.GeneralTab.TabTitle"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wConnection=addConnectionLine(wGeneralComp,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSchema=new Label(wGeneralComp,SWT.RIGHT);
  wlSchema.setText(Messages.getString("SynchronizeAfterMergeDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin * 2);
  wlSchema.setLayoutData(fdlSchema);
  wSchema=new TextVar(transMeta,wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsMod);
  wSchema.addFocusListener(lsFocusLost);
  fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin * 2);
  fdSchema.right=new FormAttachment(100,0);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(wGeneralComp,SWT.RIGHT);
  wlTable.setText(Messages.getString("SynchronizeAfterMergeDialog.TargetTable.Label"));
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(Messages.getString("SynchronizeAfterMergeDialog.Browse.Button"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  wTable.addFocusListener(lsFocusLost);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wSchema,margin);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(wGeneralComp,SWT.RIGHT);
  wlCommit.setText(Messages.getString("SynchronizeAfterMergeDialog.CommitSize.Label"));
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.top=new FormAttachment(wTable,margin);
  fdlCommit.right=new FormAttachment(middle,-margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlBatch=new Label(wGeneralComp,SWT.RIGHT);
  wlBatch.setText(Messages.getString("SynchronizeAfterMergeDialog.Batch.Label"));
  props.setLook(wlBatch);
  fdlBatch=new FormData();
  fdlBatch.left=new FormAttachment(0,0);
  fdlBatch.top=new FormAttachment(wCommit,margin);
  fdlBatch.right=new FormAttachment(middle,-margin);
  wlBatch.setLayoutData(fdlBatch);
  wBatch=new Button(wGeneralComp,SWT.CHECK);
  wBatch.setToolTipText(Messages.getString("SynchronizeAfterMergeDialog.Batch.Tooltip"));
  props.setLook(wBatch);
  fdBatch=new FormData();
  fdBatch.left=new FormAttachment(middle,0);
  fdBatch.top=new FormAttachment(wCommit,margin);
  fdBatch.right=new FormAttachment(100,0);
  wBatch.setLayoutData(fdBatch);
  wlTablenameInField=new Label(wGeneralComp,SWT.RIGHT);
  wlTablenameInField.setText(Messages.getString("SynchronizeAfterMergeDialog.TablenameInField.Label"));
  props.setLook(wlTablenameInField);
  fdlTablenameInField=new FormData();
  fdlTablenameInField.left=new FormAttachment(0,0);
  fdlTablenameInField.top=new FormAttachment(wBatch,margin);
  fdlTablenameInField.right=new FormAttachment(middle,-margin);
  wlTablenameInField.setLayoutData(fdlTablenameInField);
  wTablenameInField=new Button(wGeneralComp,SWT.CHECK);
  wTablenameInField.setToolTipText(Messages.getString("SynchronizeAfterMergeDialog.TablenameInField.Tooltip"));
  props.setLook(wTablenameInField);
  fdTablenameInField=new FormData();
  fdTablenameInField.left=new FormAttachment(middle,0);
  fdTablenameInField.top=new FormAttachment(wBatch,margin);
  fdTablenameInField.right=new FormAttachment(100,0);
  wTablenameInField.setLayoutData(fdTablenameInField);
  wTablenameInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeTablenameField();
      input.setChanged();
    }
  }
);
  wlTableField=new Label(wGeneralComp,SWT.RIGHT);
  wlTableField.setText(Messages.getString("SynchronizeAfterMergeDialog.TableField.Label"));
  props.setLook(wlTableField);
  fdlTableField=new FormData();
  fdlTableField.left=new FormAttachment(0,0);
  fdlTableField.top=new FormAttachment(wTablenameInField,margin);
  fdlTableField.right=new FormAttachment(middle,-margin);
  wlTableField.setLayoutData(fdlTableField);
  wTableField=new CCombo(wGeneralComp,SWT.BORDER | SWT.READ_ONLY);
  wTableField.setEditable(true);
  props.setLook(wTableField);
  wTableField.addModifyListener(lsMod);
  fdTableField=new FormData();
  fdTableField.left=new FormAttachment(middle,0);
  fdTableField.top=new FormAttachment(wTablenameInField,margin);
  fdTableField.right=new FormAttachment(100,0);
  wTableField.setLayoutData(fdTableField);
  wTableField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlKey=new Label(wGeneralComp,SWT.NONE);
  wlKey.setText(Messages.getString("SynchronizeAfterMergeDialog.Keys.Label"));
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wTableField,margin);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=4;
  int nrKeyRows=(input.getKeyStream() != null ? input.getKeyStream().length : 1);
  ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[1]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.Comparator"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"=","<>","<","<=",">",">=","LIKE","BETWEEN","IS NULL","IS NOT NULL"});
  ciKey[2]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.StreamField1"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[3]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.StreamField2"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  tableFieldColumns.add(ciKey[0]);
  wKey=new TableView(transMeta,wGeneralComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  wGet=new Button(wGeneralComp,SWT.PUSH);
  wGet.setText(Messages.getString("SynchronizeAfterMergeDialog.GetFields.Button"));
  fdGet=new FormData();
  fdGet.right=new FormAttachment(100,0);
  fdGet.top=new FormAttachment(wlKey,margin);
  wGet.setLayoutData(fdGet);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(wGet,-margin);
  fdKey.bottom=new FormAttachment(wlKey,160);
  wKey.setLayoutData(fdKey);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(Messages.getString("SynchronizeAfterMergeDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wSQL,wCancel},margin,null);
  wlReturn=new Label(wGeneralComp,SWT.NONE);
  wlReturn.setText(Messages.getString("SynchronizeAfterMergeDialog.UpdateFields.Label"));
  props.setLook(wlReturn);
  fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(wKey,margin);
  wlReturn.setLayoutData(fdlReturn);
  int UpInsCols=3;
  int UpInsRows=(input.getUpdateLookup() != null ? input.getUpdateLookup().length : 1);
  ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciReturn[1]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.StreamField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciReturn[2]=new ColumnInfo(Messages.getString("SynchronizeAfterMergeDialog.ColumnInfo.Update"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"Y","N"});
  tableFieldColumns.add(ciReturn[0]);
  wReturn=new TableView(transMeta,wGeneralComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  wGetLU=new Button(wGeneralComp,SWT.PUSH);
  wGetLU.setText(Messages.getString("SynchronizeAfterMergeDialog.GetAndUpdateFields.Label"));
  fdGetLU=new FormData();
  fdGetLU.top=new FormAttachment(wlReturn,margin);
  fdGetLU.right=new FormAttachment(100,0);
  wGetLU.setLayoutData(fdGetLU);
  fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlReturn,margin);
  fdReturn.right=new FormAttachment(wGetLU,-margin);
  fdReturn.bottom=new FormAttachment(100,-2 * margin);
  wReturn.setLayoutData(fdReturn);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          log.logError(toString(),"It was not possible to get the fields from the previous step(s).");
        }
      }
    }
  }
;
  new Thread(runnable).start();
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getUpdate();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  wAdvancedTab=new CTabItem(wTabFolder,SWT.NONE);
  wAdvancedTab.setText(Messages.getString("SynchronizeAfterMergeDialog.AdvancedTab.TabTitle"));
  wAdvancedComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wAdvancedComp);
  FormLayout advancedLayout=new FormLayout();
  advancedLayout.marginWidth=3;
  advancedLayout.marginHeight=3;
  wAdvancedComp.setLayout(advancedLayout);
  wOperationOrder=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wOperationOrder);
  wOperationOrder.setText(Messages.getString("SynchronizeAfterMergeDialog.OperationOrder.Label"));
  FormLayout OriginFilesgroupLayout=new FormLayout();
  OriginFilesgroupLayout.marginWidth=10;
  OriginFilesgroupLayout.marginHeight=10;
  wOperationOrder.setLayout(OriginFilesgroupLayout);
  wlOperationField=new Label(wOperationOrder,SWT.RIGHT);
  wlOperationField.setText(Messages.getString("SynchronizeAfterMergeDialog.OperationField.Label"));
  props.setLook(wlOperationField);
  fdlOperationField=new FormData();
  fdlOperationField.left=new FormAttachment(0,0);
  fdlOperationField.top=new FormAttachment(wTableField,margin);
  fdlOperationField.right=new FormAttachment(middle,-margin);
  wlOperationField.setLayoutData(fdlOperationField);
  wOperationField=new CCombo(wOperationOrder,SWT.BORDER | SWT.READ_ONLY);
  wOperationField.setEditable(true);
  props.setLook(wOperationField);
  wOperationField.addModifyListener(lsMod);
  fdOperationField=new FormData();
  fdOperationField.left=new FormAttachment(middle,0);
  fdOperationField.top=new FormAttachment(wTableField,margin);
  fdOperationField.right=new FormAttachment(100,0);
  wOperationField.setLayoutData(fdOperationField);
  wOperationField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlOrderInsert=new Label(wOperationOrder,SWT.RIGHT);
  wlOrderInsert.setText(Messages.getString("SynchronizeAfterMergeDialog.OrderInsert.Label"));
  props.setLook(wlOrderInsert);
  fdlOrderInsert=new FormData();
  fdlOrderInsert.left=new FormAttachment(0,0);
  fdlOrderInsert.right=new FormAttachment(middle,-margin);
  fdlOrderInsert.top=new FormAttachment(wOperationField,margin);
  wlOrderInsert.setLayoutData(fdlOrderInsert);
  wOrderInsert=new TextVar(transMeta,wOperationOrder,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wOrderInsert.setToolTipText(Messages.getString("SynchronizeAfterMergeDialog.OrderInsert.ToolTip"));
  props.setLook(wOrderInsert);
  wOrderInsert.addModifyListener(lsMod);
  wOrderInsert.addFocusListener(lsFocusLost);
  fdOrderInsert=new FormData();
  fdOrderInsert.left=new FormAttachment(middle,0);
  fdOrderInsert.top=new FormAttachment(wOperationField,margin);
  fdOrderInsert.right=new FormAttachment(100,0);
  wOrderInsert.setLayoutData(fdOrderInsert);
  wlOrderUpdate=new Label(wOperationOrder,SWT.RIGHT);
  wlOrderUpdate.setText(Messages.getString("SynchronizeAfterMergeDialog.OrderUpdate.Label"));
  props.setLook(wlOrderUpdate);
  fdlOrderUpdate=new FormData();
  fdlOrderUpdate.left=new FormAttachment(0,0);
  fdlOrderUpdate.right=new FormAttachment(middle,-margin);
  fdlOrderUpdate.top=new FormAttachment(wOrderInsert,margin);
  wlOrderUpdate.setLayoutData(fdlOrderUpdate);
  wOrderUpdate=new TextVar(transMeta,wOperationOrder,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wOrderUpdate.setToolTipText(Messages.getString("SynchronizeAfterMergeDialog.OrderUpdate.ToolTip"));
  props.setLook(wOrderUpdate);
  wOrderUpdate.addModifyListener(lsMod);
  wOrderUpdate.addFocusListener(lsFocusLost);
  fdOrderUpdate=new FormData();
  fdOrderUpdate.left=new FormAttachment(middle,0);
  fdOrderUpdate.top=new FormAttachment(wOrderInsert,margin);
  fdOrderUpdate.right=new FormAttachment(100,0);
  wOrderUpdate.setLayoutData(fdOrderUpdate);
  wlOrderDelete=new Label(wOperationOrder,SWT.RIGHT);
  wlOrderDelete.setText(Messages.getString("SynchronizeAfterMergeDialog.OrderDelete.Label"));
  props.setLook(wlOrderDelete);
  fdlOrderDelete=new FormData();
  fdlOrderDelete.left=new FormAttachment(0,0);
  fdlOrderDelete.right=new FormAttachment(middle,-margin);
  fdlOrderDelete.top=new FormAttachment(wOrderUpdate,margin);
  wlOrderDelete.setLayoutData(fdlOrderDelete);
  wOrderDelete=new TextVar(transMeta,wOperationOrder,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wOrderDelete.setToolTipText(Messages.getString("SynchronizeAfterMergeDialog.OrderDelete.ToolTip"));
  props.setLook(wOrderDelete);
  wOrderDelete.addModifyListener(lsMod);
  wOrderDelete.addFocusListener(lsFocusLost);
  fdOrderDelete=new FormData();
  fdOrderDelete.left=new FormAttachment(middle,0);
  fdOrderDelete.top=new FormAttachment(wOrderUpdate,margin);
  fdOrderDelete.right=new FormAttachment(100,0);
  wOrderDelete.setLayoutData(fdOrderDelete);
  wlPerformLookup=new Label(wOperationOrder,SWT.RIGHT);
  wlPerformLookup.setText(Messages.getString("SynchronizeAfterMergeDialog.PerformLookup.Label"));
  props.setLook(wlPerformLookup);
  fdlPerformLookup=new FormData();
  fdlPerformLookup.left=new FormAttachment(0,0);
  fdlPerformLookup.top=new FormAttachment(wOrderDelete,margin);
  fdlPerformLookup.right=new FormAttachment(middle,-margin);
  wlPerformLookup.setLayoutData(fdlPerformLookup);
  wPerformLookup=new Button(wOperationOrder,SWT.CHECK);
  wPerformLookup.setToolTipText(Messages.getString("SynchronizeAfterMergeDialog.PerformLookup.Tooltip"));
  props.setLook(wPerformLookup);
  fdPerformLookup=new FormData();
  fdPerformLookup.left=new FormAttachment(middle,0);
  fdPerformLookup.top=new FormAttachment(wOrderDelete,margin);
  fdPerformLookup.right=new FormAttachment(100,0);
  wPerformLookup.setLayoutData(fdPerformLookup);
  fdOperationOrder=new FormData();
  fdOperationOrder.left=new FormAttachment(0,margin);
  fdOperationOrder.top=new FormAttachment(wStepname,margin);
  fdOperationOrder.right=new FormAttachment(100,-margin);
  wOperationOrder.setLayoutData(fdOperationOrder);
  fdAdvancedComp=new FormData();
  fdAdvancedComp.left=new FormAttachment(0,0);
  fdAdvancedComp.top=new FormAttachment(0,0);
  fdAdvancedComp.right=new FormAttachment(100,0);
  fdAdvancedComp.bottom=new FormAttachment(100,0);
  wAdvancedComp.setLayoutData(fdAdvancedComp);
  wAdvancedComp.layout();
  wAdvancedTab.setControl(wAdvancedComp);
  props.setLook(wAdvancedComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wCommit.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  setTableFieldCombo();
  activeTablenameField();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
