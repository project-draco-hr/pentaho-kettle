{
  ResultSetMetaData rsMeta=mock(ResultSetMetaData.class);
  when(rsMeta.getColumnCount()).thenReturn(1);
  when(rsMeta.getColumnLabel(1)).thenReturn("column");
  when(rsMeta.getColumnName(1)).thenReturn("column");
  when(rsMeta.getColumnType(1)).thenReturn(java.sql.Types.VARBINARY);
  ResultSet rs=mock(ResultSet.class);
  when(rs.getMetaData()).thenReturn(rsMeta);
  PreparedStatement ps=mock(PreparedStatement.class);
  when(ps.executeQuery()).thenReturn(rs);
  DatabaseMeta meta=new DatabaseMeta();
  meta.setDatabaseInterface(new MySQLDatabaseMeta());
  DatabaseMetaData dbMetaData=mock(DatabaseMetaData.class);
  Database db=new Database(log,meta);
  db.setConnection(mockConnection(dbMetaData));
  db.getLookup(ps,false,true);
  RowMetaInterface rowMeta=db.getReturnRowMeta();
  assertEquals(1,rowMeta.size());
  ValueMetaInterface valueMeta=rowMeta.getValueMeta(0);
  assertEquals(ValueMetaInterface.TYPE_STRING,valueMeta.getType());
  assertEquals(ValueMetaInterface.STORAGE_TYPE_BINARY_STRING,valueMeta.getStorageType());
}
