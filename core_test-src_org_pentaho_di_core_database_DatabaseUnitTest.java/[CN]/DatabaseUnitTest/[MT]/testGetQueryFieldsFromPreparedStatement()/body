{
  String sql="select * from employees";
  String columnName="salary";
  DatabaseMeta meta=Mockito.mock(DatabaseMeta.class);
  PreparedStatement ps=Mockito.mock(PreparedStatement.class);
  Connection conn=mockConnection(mock(DatabaseMetaData.class));
  ResultSetMetaData rsMetaData=mock(ResultSetMetaData.class);
  when(rsMetaData.getColumnCount()).thenReturn(1);
  when(rsMetaData.getColumnName(1)).thenReturn(columnName);
  when(rsMetaData.getColumnLabel(1)).thenReturn(columnName);
  when(rsMetaData.getColumnType(1)).thenReturn(Types.DECIMAL);
  Mockito.when(meta.stripCR(anyString())).thenReturn(sql);
  Mockito.when(meta.getDatabaseInterface()).thenReturn(new MySQLDatabaseMeta());
  Mockito.when(conn.prepareStatement(sql,ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY)).thenReturn(ps);
  Mockito.when(ps.getMetaData()).thenReturn(rsMetaData);
  Database db=new Database(log,meta);
  db.setConnection(conn);
  RowMetaInterface rowMetaInterface=db.getQueryFieldsFromPreparedStatement(sql);
  assertEquals(rowMetaInterface.size(),1);
  assertEquals(rowMetaInterface.getValueMeta(0).getName(),columnName);
  assertTrue(rowMetaInterface.getValueMeta(0) instanceof ValueMetaNumber);
}
