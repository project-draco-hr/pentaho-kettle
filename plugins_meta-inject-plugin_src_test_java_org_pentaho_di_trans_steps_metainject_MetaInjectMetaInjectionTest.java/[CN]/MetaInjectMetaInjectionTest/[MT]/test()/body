{
  check("TRANS_NAME",new StringGetter(){
    public String get(){
      return meta.getTransName();
    }
  }
);
  check("FILE_NAME",new StringGetter(){
    public String get(){
      return meta.getFileName();
    }
  }
);
  check("DIRECTORY_PATH",new StringGetter(){
    public String get(){
      return meta.getDirectoryPath();
    }
  }
);
  check("SOURCE_STEP_NAME",new StringGetter(){
    public String get(){
      return meta.getSourceStepName();
    }
  }
);
  check("TARGET_FILE",new StringGetter(){
    public String get(){
      return meta.getTargetFile();
    }
  }
);
  check("NO_EXECUTION",new BooleanGetter(){
    public boolean get(){
      return meta.isNoExecution();
    }
  }
);
  check("STREAMING_SOURCE_STEP",new StringGetter(){
    public String get(){
      return meta.getStreamSourceStepname();
    }
  }
);
  check("STREAMING_TARGET_STEP",new StringGetter(){
    public String get(){
      return meta.getStreamTargetStepname();
    }
  }
);
  check("SOURCE_OUTPUT_NAME",new StringGetter(){
    public String get(){
      return meta.getSourceOutputFields().get(0).getName();
    }
  }
);
  String[] typeNames=ValueMetaBase.getAllTypes();
  checkStringToInt("SOURCE_OUTPUT_TYPE",new IntGetter(){
    public int get(){
      return meta.getSourceOutputFields().get(0).getType();
    }
  }
,typeNames,getTypeCodes(typeNames));
  check("SOURCE_OUTPUT_LENGTH",new IntGetter(){
    public int get(){
      return meta.getSourceOutputFields().get(0).getLength();
    }
  }
);
  check("SOURCE_OUTPUT_PRECISION",new IntGetter(){
    public int get(){
      return meta.getSourceOutputFields().get(0).getPrecision();
    }
  }
);
  check("MAPPING_SOURCE_STEP",new StringGetter(){
    public String get(){
      return meta.getMetaInjectMapping().get(0).getSourceStep();
    }
  }
);
  check("MAPPING_SOURCE_FIELD",new StringGetter(){
    public String get(){
      return meta.getMetaInjectMapping().get(0).getSourceField();
    }
  }
);
  check("MAPPING_TARGET_STEP",new StringGetter(){
    public String get(){
      return meta.getMetaInjectMapping().get(0).getTargetStep();
    }
  }
);
  check("MAPPING_TARGET_FIELD",new StringGetter(){
    public String get(){
      return meta.getMetaInjectMapping().get(0).getTargetField();
    }
  }
);
  check("TRANS_SEPECIFICATION_METHOD",new EnumGetter(){
    @Override public Enum<?> get(){
      return meta.getSpecificationMethod();
    }
  }
,ObjectLocationSpecificationMethod.class);
  ValueMetaInterface mftt=new ValueMetaString("f");
  injector.setProperty(meta,"TRANS_OBJECT_ID",setValue(mftt,TEST_ID),"f");
  assertEquals(TEST_ID,meta.getTransObjectId().getId());
  skipPropertyTest("TRANS_OBJECT_ID");
}
