{
  if (first) {
    first=false;
    data.outputRowMeta=new RowMeta();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
  }
  if (data.filenr >= data.list.size()) {
    setOutputDone();
    return false;
  }
  RepositoryElementMetaInterface repositoryObject=data.list.get(data.filenr++);
  Object[] outputRow=buildEmptyRow();
  int outputIndex=0;
  String directory=repositoryObject.getRepositoryDirectory().getPath();
  String name=repositoryObject.getName();
  String path=directory.endsWith("/") ? directory + name : directory + "/" + name;
  outputRow[outputIndex++]=path;
  outputRow[outputIndex++]=directory;
  outputRow[outputIndex++]=name;
  outputRow[outputIndex++]=repositoryObject.getObjectType().getTypeDescription();
  outputRow[outputIndex++]=repositoryObject.getObjectId().toString();
  outputRow[outputIndex++]=repositoryObject.getModifiedUser();
  outputRow[outputIndex++]=repositoryObject.getModifiedDate();
  if (meta.isIncludeRowNumber()) {
    outputRow[outputIndex++]=Long.valueOf(data.rownr++);
  }
  putRow(data.outputRowMeta,outputRow);
  if (checkFeedback(getLinesInput())) {
    if (log.isBasic())     logBasic(BaseMessages.getString(PKG,"GetRepositoryNames.Log.NrLine","" + getLinesInput()));
  }
  return true;
}
