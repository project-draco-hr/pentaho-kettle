{
  try {
    urlInField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"url_in_field"));
    urlFieldname=XMLHandler.getTagValue(stepnode,"url_field_name");
    includeRowNumber="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"rownum"));
    rowNumberField=XMLHandler.getTagValue(stepnode,"rownum_field");
    includeUrl="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"include_url"));
    urlField=XMLHandler.getTagValue(stepnode,"url_Field");
    readfrom=XMLHandler.getTagValue(stepnode,"read_from");
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrFields=XMLHandler.countNodes(fields,"field");
    Node urlnode=XMLHandler.getSubNode(stepnode,"urls");
    int nrUrls=XMLHandler.countNodes(urlnode,"url");
    allocate(nrUrls,nrFields);
    for (int i=0; i < nrUrls; i++) {
      Node urlnamenode=XMLHandler.getSubNodeByNr(urlnode,"url",i);
      url[i]=XMLHandler.getNodeValue(urlnamenode);
    }
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      RssInputField field=new RssInputField(fnode);
      inputFields[i]=field;
    }
    rowLimit=Const.toLong(XMLHandler.getTagValue(stepnode,"limit"),0L);
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
