{
  try {
    urlInField=rep.getStepAttributeBoolean(id_step,"url_in_field");
    urlFieldname=rep.getStepAttributeString(id_step,"url_field_name");
    includeRowNumber=rep.getStepAttributeBoolean(id_step,"rownum");
    rowNumberField=rep.getStepAttributeString(id_step,"rownum_field");
    includeUrl=rep.getStepAttributeBoolean(id_step,"include_url");
    urlField=rep.getStepAttributeString(id_step,"url_Field");
    readfrom=rep.getStepAttributeString(id_step,"read_from");
    rowLimit=rep.getStepAttributeInteger(id_step,"limit");
    int nrFields=rep.countNrStepAttributes(id_step,"field_name");
    int nrUrls=rep.countNrStepAttributes(id_step,"url_name");
    allocate(nrUrls,nrFields);
    for (int i=0; i < nrUrls; i++) {
      url[i]=rep.getStepAttributeString(id_step,i,"url_name");
    }
    for (int i=0; i < nrFields; i++) {
      RssInputField field=new RssInputField();
      field.setName(rep.getStepAttributeString(id_step,i,"field_name"));
      field.setColumn(RssInputField.getColumnByCode(rep.getStepAttributeString(id_step,i,"field_column")));
      field.setType(ValueMeta.getType(rep.getStepAttributeString(id_step,i,"field_type")));
      field.setFormat(rep.getStepAttributeString(id_step,i,"field_format"));
      field.setCurrencySymbol(rep.getStepAttributeString(id_step,i,"field_currency"));
      field.setDecimalSymbol(rep.getStepAttributeString(id_step,i,"field_decimal"));
      field.setGroupSymbol(rep.getStepAttributeString(id_step,i,"field_group"));
      field.setLength((int)rep.getStepAttributeInteger(id_step,i,"field_length"));
      field.setPrecision((int)rep.getStepAttributeInteger(id_step,i,"field_precision"));
      field.setTrimType(RssInputField.getTrimTypeByCode(rep.getStepAttributeString(id_step,i,"field_trim_type")));
      field.setRepeated(rep.getStepAttributeBoolean(id_step,i,"field_repeat"));
      inputFields[i]=field;
    }
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("RssInputMeta.Exception.ErrorReadingRepository"),e);
  }
}
