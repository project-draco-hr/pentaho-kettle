{
  if (row == null || row.size() == 0) {
    return;
  }
  Table table=tableView.table;
  List<String> keys=new ArrayList<String>();
  for (int i=0; i < table.getItemCount(); i++) {
    TableItem tableItem=table.getItem(i);
    String key=tableItem.getText(keyColumn);
    if (!Utils.isEmpty(key) && keys.indexOf(key) < 0) {
      keys.add(key);
    }
  }
  int choice=0;
  if (keys.size() > 0) {
    MessageDialog md=new MessageDialog(tableView.getShell(),BaseMessages.getString(PKG,"BaseStepDialog.GetFieldsChoice.Title"),null,BaseMessages.getString(PKG,"BaseStepDialog.GetFieldsChoice.Message","" + keys.size(),"" + row.size()),MessageDialog.WARNING,new String[]{BaseMessages.getString(PKG,"BaseStepDialog.AddNew"),BaseMessages.getString(PKG,"BaseStepDialog.Add"),BaseMessages.getString(PKG,"BaseStepDialog.ClearAndAdd"),BaseMessages.getString(PKG,"BaseStepDialog.Cancel")},0);
    MessageDialog.setDefaultImage(GUIResource.getInstance().getImageSpoon());
    int idx=md.open();
    choice=idx & 0xFF;
  }
  if (choice == 3 || choice == 255) {
    return;
  }
  if (choice == 2) {
    tableView.clearAll(false);
  }
  for (int i=0; i < row.size(); i++) {
    ValueMetaInterface v=row.getValueMeta(i);
    boolean add=true;
    if (choice == 0) {
      if (keys.indexOf(v.getName()) >= 0) {
        add=false;
      }
    }
    if (add) {
      TableItem tableItem=new TableItem(table,SWT.NONE);
      for (int c=0; c < nameColumn.length; c++) {
        tableItem.setText(nameColumn[c],Const.NVL(v.getName(),""));
      }
      if (dataTypeColumn != null) {
        for (int c=0; c < dataTypeColumn.length; c++) {
          tableItem.setText(dataTypeColumn[c],v.getTypeDesc());
        }
      }
      if (lengthColumn > 0) {
        if (v.getLength() >= 0) {
          tableItem.setText(lengthColumn,Integer.toString(v.getLength()));
        }
      }
      if (precisionColumn > 0) {
        if (v.getPrecision() >= 0) {
          tableItem.setText(precisionColumn,Integer.toString(v.getPrecision()));
        }
      }
      if (listener != null) {
        if (!listener.tableItemInserted(tableItem,v)) {
          tableItem.dispose();
        }
      }
    }
  }
  tableView.removeEmptyRows();
  tableView.setRowNums();
  tableView.optWidth(true);
}
