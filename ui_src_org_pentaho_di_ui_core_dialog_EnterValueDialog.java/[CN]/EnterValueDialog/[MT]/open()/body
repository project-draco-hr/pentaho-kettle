{
  Shell parent=getParent();
  display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | (modalDialog ? SWT.APPLICATION_MODAL | SWT.SHEET : SWT.NONE));
  props.setLook(shell);
  shell.setImage(GUIResource.getInstance().getImageSpoon());
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"EnterValueDialog.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlValueType=new Label(shell,SWT.RIGHT);
  wlValueType.setText(BaseMessages.getString(PKG,"EnterValueDialog.Type.Label"));
  props.setLook(wlValueType);
  fdlValueType=new FormData();
  fdlValueType.left=new FormAttachment(0,0);
  fdlValueType.right=new FormAttachment(middle,-margin);
  fdlValueType.top=new FormAttachment(0,margin);
  wlValueType.setLayoutData(fdlValueType);
  wValueType=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER| SWT.READ_ONLY);
  wValueType.setItems(ValueMetaFactory.getValueMetaNames());
  props.setLook(wValueType);
  fdValueType=new FormData();
  fdValueType.left=new FormAttachment(middle,0);
  fdValueType.top=new FormAttachment(0,margin);
  fdValueType.right=new FormAttachment(100,-margin);
  wValueType.setLayoutData(fdValueType);
  wValueType.addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent arg0){
      setFormats();
    }
  }
);
  wlInputString=new Label(shell,SWT.RIGHT);
  wlInputString.setText(BaseMessages.getString(PKG,"EnterValueDialog.Value.Label"));
  props.setLook(wlInputString);
  fdlInputString=new FormData();
  fdlInputString.left=new FormAttachment(0,0);
  fdlInputString.right=new FormAttachment(middle,-margin);
  fdlInputString.top=new FormAttachment(wValueType,margin);
  wlInputString.setLayoutData(fdlInputString);
  wInputString=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInputString);
  fdInputString=new FormData();
  fdInputString.left=new FormAttachment(middle,0);
  fdInputString.top=new FormAttachment(wValueType,margin);
  fdInputString.right=new FormAttachment(100,-margin);
  wInputString.setLayoutData(fdInputString);
  wlFormat=new Label(shell,SWT.RIGHT);
  wlFormat.setText(BaseMessages.getString(PKG,"EnterValueDialog.ConversionFormat.Label"));
  props.setLook(wlFormat);
  fdlFormat=new FormData();
  fdlFormat.left=new FormAttachment(0,0);
  fdlFormat.right=new FormAttachment(middle,-margin);
  fdlFormat.top=new FormAttachment(wInputString,margin);
  wlFormat.setLayoutData(fdlFormat);
  wFormat=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFormat);
  fdFormat=new FormData();
  fdFormat.left=new FormAttachment(middle,0);
  fdFormat.right=new FormAttachment(100,-margin);
  fdFormat.top=new FormAttachment(wInputString,margin);
  wFormat.setLayoutData(fdFormat);
  wlLength=new Label(shell,SWT.RIGHT);
  wlLength.setText(BaseMessages.getString(PKG,"EnterValueDialog.Length.Label"));
  props.setLook(wlLength);
  fdlLength=new FormData();
  fdlLength.left=new FormAttachment(0,0);
  fdlLength.right=new FormAttachment(middle,-margin);
  fdlLength.top=new FormAttachment(wFormat,margin);
  wlLength.setLayoutData(fdlLength);
  wLength=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLength);
  fdLength=new FormData();
  fdLength.left=new FormAttachment(middle,0);
  fdLength.right=new FormAttachment(100,-margin);
  fdLength.top=new FormAttachment(wFormat,margin);
  wLength.setLayoutData(fdLength);
  wlPrecision=new Label(shell,SWT.RIGHT);
  wlPrecision.setText(BaseMessages.getString(PKG,"EnterValueDialog.Precision.Label"));
  props.setLook(wlPrecision);
  fdlPrecision=new FormData();
  fdlPrecision.left=new FormAttachment(0,0);
  fdlPrecision.right=new FormAttachment(middle,-margin);
  fdlPrecision.top=new FormAttachment(wLength,margin);
  wlPrecision.setLayoutData(fdlPrecision);
  wPrecision=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPrecision);
  fdPrecision=new FormData();
  fdPrecision.left=new FormAttachment(middle,0);
  fdPrecision.right=new FormAttachment(100,-margin);
  fdPrecision.top=new FormAttachment(wLength,margin);
  wPrecision.setLayoutData(fdPrecision);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wTest=new Button(shell,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"System.Button.Test"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wTest,wCancel},margin,wPrecision);
  lsCancel=new Listener(){
    @Override public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    @Override public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsTest=new Listener(){
    @Override public void handleEvent(    Event e){
      test();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wTest.addListener(SWT.Selection,lsTest);
  lsDef=new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wInputString.addSelectionListener(lsDef);
  wLength.addSelectionListener(lsDef);
  wPrecision.addSelectionListener(lsDef);
  wInputString.addModifyListener(new ModifyListener(){
    @Override public void modifyText(    ModifyEvent event){
      setFormats();
    }
  }
);
  wValueType.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent event){
      setFormats();
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    @Override public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return valueMetaAndData;
}
