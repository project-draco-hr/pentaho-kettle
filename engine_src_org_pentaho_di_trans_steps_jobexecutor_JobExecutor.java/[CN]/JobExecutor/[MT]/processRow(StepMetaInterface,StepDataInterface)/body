{
  try {
    meta=(JobExecutorMeta)smi;
    data=(JobExecutorData)sdi;
    Object[] row=getRow();
    if (row == null) {
      if (!data.groupBuffer.isEmpty()) {
        executeJob();
      }
      setOutputDone();
      return false;
    }
    if (first) {
      first=false;
      data.inputRowMeta=getInputRowMeta();
      data.executionResultsOutputRowMeta=data.inputRowMeta.clone();
      data.resultRowsOutputRowMeta=data.inputRowMeta.clone();
      data.resultFilesOutputRowMeta=data.inputRowMeta.clone();
      if (meta.getExecutionResultTargetStepMeta() != null) {
        meta.getFields(data.executionResultsOutputRowMeta,getStepname(),null,meta.getExecutionResultTargetStepMeta(),this,repository,metaStore);
        data.executionResultRowSet=findOutputRowSet(meta.getExecutionResultTargetStepMeta().getName());
      }
      if (meta.getResultRowsTargetStepMeta() != null) {
        meta.getFields(data.resultRowsOutputRowMeta,getStepname(),null,meta.getResultRowsTargetStepMeta(),this,repository,metaStore);
        data.resultRowsRowSet=findOutputRowSet(meta.getResultRowsTargetStepMeta().getName());
      }
      if (meta.getResultFilesTargetStepMeta() != null) {
        meta.getFields(data.resultFilesOutputRowMeta,getStepname(),null,meta.getResultFilesTargetStepMeta(),this,repository,metaStore);
        data.resultFilesRowSet=findOutputRowSet(meta.getResultFilesTargetStepMeta().getName());
      }
      data.groupFieldIndex=-1;
      if (!Const.isEmpty(data.groupField)) {
        data.groupFieldIndex=getInputRowMeta().indexOfValue(data.groupField);
        if (data.groupFieldIndex < 0) {
          throw new KettleException(BaseMessages.getString(PKG,"JobExecutor.Exception.GroupFieldNotFound",data.groupField));
        }
        data.groupFieldMeta=getInputRowMeta().getValueMeta(data.groupFieldIndex);
      }
    }
    if (data.groupSize < 0) {
      if (data.groupFieldIndex >= 0) {
        Object groupFieldData=row[data.groupFieldIndex];
        if (data.prevGroupFieldData != null) {
          if (data.groupFieldMeta.compare(data.prevGroupFieldData,groupFieldData) != 0) {
            executeJob();
          }
        }
        data.prevGroupFieldData=groupFieldData;
      }
 else       if (data.groupTime > 0) {
        long now=System.currentTimeMillis();
        if (now - data.groupTimeStart >= data.groupTime) {
          executeJob();
        }
      }
    }
    data.groupBuffer.add(new RowMetaAndData(getInputRowMeta(),row));
    if (data.groupSize > 0) {
      if (data.groupBuffer.size() >= data.groupSize) {
        executeJob();
      }
    }
    return true;
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"JobExecutor.UnexpectedError"),e);
  }
}
