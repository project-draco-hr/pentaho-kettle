{
  int[] trimTypes;
  if (tryTrimming) {
    trimTypes=new int[]{ValueMetaInterface.TRIM_TYPE_NONE,ValueMetaInterface.TRIM_TYPE_BOTH};
  }
 else {
    trimTypes=new int[]{ValueMetaInterface.TRIM_TYPE_NONE};
  }
  for (  int trimType : trimTypes) {
    for (    String format : Const.getDateFormats()) {
      ValueMetaInterface conversionMeta=new ValueMeta("date",ValueMetaInterface.TYPE_DATE);
      conversionMeta.setConversionMask(format);
      conversionMeta.setTrimType(trimType);
      conversionMeta.setDateFormatLenient(false);
      evaluationResults.add(new StringEvaluationResult(conversionMeta));
    }
    for (    String format : NUMBER_FORMATS) {
      ValueMetaInterface conversionMeta=new ValueMeta("number-us",ValueMetaInterface.TYPE_NUMBER);
      conversionMeta.setConversionMask(format);
      conversionMeta.setTrimType(trimType);
      conversionMeta.setDecimalSymbol(".");
      conversionMeta.setGroupingSymbol(",");
      evaluationResults.add(new StringEvaluationResult(conversionMeta));
      conversionMeta=new ValueMeta("number-eu",ValueMetaInterface.TYPE_NUMBER);
      conversionMeta.setConversionMask(format);
      conversionMeta.setTrimType(trimType);
      conversionMeta.setDecimalSymbol(",");
      conversionMeta.setGroupingSymbol(".");
      evaluationResults.add(new StringEvaluationResult(conversionMeta));
    }
    ValueMetaInterface conversionMeta=new ValueMeta("integer",ValueMetaInterface.TYPE_INTEGER);
    conversionMeta.setConversionMask("#");
    evaluationResults.add(new StringEvaluationResult(conversionMeta));
    conversionMeta=new ValueMeta("boolean",ValueMetaInterface.TYPE_BOOLEAN);
    evaluationResults.add(new StringEvaluationResult(conversionMeta));
  }
}
