{
  String LimitNbrLignes="";
  String ListOfColumn="*";
  String strHighPriority="";
  String OutDumpText="";
  String OptionEnclosed="";
  String FieldSeparator="";
  String LinesTerminated="";
  LogWriter log=LogWriter.getInstance();
  Result result=previousResult;
  result.setResult(false);
  if (filename != null) {
    String realFilename=getRealFilename();
    File file=new File(realFilename);
    if (file.exists() && iffileexists == 2) {
      result.setResult(false);
      result.setNrErrors(1);
      log.logError(toString(),Messages.getString("JobMysqlBulkFile.FileExists1.Label") + realFilename + Messages.getString("JobMysqlBulkFile.FileExists2.Label"));
    }
 else     if (file.exists() && iffileexists == 1) {
      result.setResult(true);
      log.logDetailed(toString(),Messages.getString("JobMysqlBulkFile.FileExists1.Label") + realFilename + Messages.getString("JobMysqlBulkFile.FileExists2.Label"));
    }
 else {
      if (file.exists() && iffileexists == 0) {
        DateFormat dateFormat=new SimpleDateFormat("mmddyyyy_hhmmss");
        String wildcard=realFilename.substring(realFilename.length() - 4,realFilename.length());
        if (wildcard.substring(0,1).equals(".")) {
          realFilename=realFilename.substring(0,realFilename.length() - 4) + "_" + dateFormat.format(new Date())+ wildcard;
        }
 else {
          realFilename=realFilename + "_" + dateFormat.format(new Date());
        }
        log.logDebug(toString(),Messages.getString("JobMysqlBulkFile.FileNameChange1.Label") + realFilename + Messages.getString("JobMysqlBulkFile.FileNameChange1.Label"));
      }
      log.logDetailed(toString(),Messages.getString("JobMysqlBulkFile.FileExists1.Label") + realFilename + Messages.getString("JobMysqlBulkFile.FileExists2.Label"));
      if (connection != null) {
        Database db=new Database(connection);
        try {
          db.connect();
          String realSchemaname=StringUtil.environmentSubstitute(schemaname);
          String realTablename=StringUtil.environmentSubstitute(tablename);
          if (db.checkTableExists(realTablename)) {
            log.logDetailed(toString(),Messages.getString("JobMysqlBulkFile.TableExists1.Label") + realTablename + Messages.getString("JobMysqlBulkFile.TableExists2.Label"));
            if (schemaname != null) {
              realTablename=realSchemaname + "." + realTablename;
            }
            if (Const.toInt(getRealLimitlines(),0) > 0) {
              LimitNbrLignes="LIMIT " + getRealLimitlines();
            }
            if (getRealListColumn() != null) {
              ListOfColumn=MysqlString(getRealListColumn());
            }
            if (getRealSeparator() != null && outdumpvalue == 0) {
              FieldSeparator="FIELDS TERMINATED BY '" + Const.replace(getRealSeparator(),"'","''") + "'";
            }
            if (getRealLineterminated() != null && outdumpvalue == 0) {
              LinesTerminated="LINES TERMINATED BY '" + Const.replace(getRealLineterminated(),"'","''") + "'";
            }
            if (isHighPriority()) {
              strHighPriority="HIGH_PRIORITY";
            }
            if (getRealEnclosed() != null && outdumpvalue == 0) {
              if (isOptionEnclosed()) {
                OptionEnclosed="OPTIONALLY ";
              }
              OptionEnclosed=OptionEnclosed + "ENCLOSED BY '" + Const.replace(getRealEnclosed(),"'","''")+ "'";
            }
            if (outdumpvalue == 0) {
              OutDumpText="INTO OUTFILE";
            }
 else {
              OutDumpText="INTO DUMPFILE";
            }
            String FILEBulkFile="SELECT " + strHighPriority + " "+ ListOfColumn+ " "+ OutDumpText+ " '"+ realFilename+ "' "+ FieldSeparator+ " "+ OptionEnclosed+ " "+ LinesTerminated+ " FROM "+ realTablename+ " "+ LimitNbrLignes+ " LOCK IN SHARE MODE";
            try {
              log.logDetailed(toString(),FILEBulkFile);
              PreparedStatement ps=db.prepareSQL(FILEBulkFile);
              ps.execute();
              db.disconnect();
              result.setResult(true);
            }
 catch (            SQLException je) {
              db.disconnect();
              result.setNrErrors(1);
              log.logError(toString(),Messages.getString("JobMysqlBulkFile.Error.Label") + " " + je.getMessage());
            }
          }
 else {
            db.disconnect();
            result.setNrErrors(1);
            log.logDetailed(toString(),Messages.getString("JobMysqlBulkFile.TableNotExists1.Label") + realTablename + Messages.getString("JobMysqlBulkFile.TableNotExists2.Label"));
          }
        }
 catch (        KettleDatabaseException dbe) {
          db.disconnect();
          result.setNrErrors(1);
          log.logError(toString(),Messages.getString("JobMysqlBulkFile.Error.Label") + " " + dbe.getMessage());
        }
      }
 else {
        result.setNrErrors(1);
        log.logError(toString(),Messages.getString("JobMysqlBulkFile.Nodatabase.Label"));
      }
    }
  }
 else {
    result.setNrErrors(1);
    log.logError(toString(),Messages.getString("JobMysqlBulkFile.Nofilename.Label"));
  }
  return result;
}
