{
  try {
    long id_db=rep.getJobEntryAttributeInteger(id_jobentry,"id_database");
    if (id_db > 0) {
      connection=DatabaseMeta.findDatabase(databases,id_db);
    }
 else {
      connection=DatabaseMeta.findDatabase(databases,rep.getJobEntryAttributeString(id_jobentry,"connection"));
    }
    schemaname=rep.getJobEntryAttributeString(id_jobentry,"schemaname");
    tablename=rep.getJobEntryAttributeString(id_jobentry,"tablename");
    successCondition=getSuccessConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"success_condition"),""));
    limit=rep.getJobEntryAttributeString(id_jobentry,"limit");
    iscustomSQL=rep.getJobEntryAttributeBoolean(id_jobentry,"is_custom_sql");
    isUseVars=rep.getJobEntryAttributeBoolean(id_jobentry,"is_usevars");
    isAddRowsResult=rep.getJobEntryAttributeBoolean(id_jobentry,"add_rows_result");
    isClearResultList=rep.getJobEntryAttributeBoolean(id_jobentry,"clear_result_rows");
    customSQL=rep.getJobEntryAttributeString(id_jobentry,"custom_sql");
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEntryEvalTableContent.UnableLoadRep","" + id_jobentry),dbe);
  }
}
