{
  try {
    StringBuilder xml=new StringBuilder();
    xml.append(XMLHandler.openTag(XML_TAG));
    xml.append(XMLHandler.addTagValue("stepname",stepname,false));
    xml.append(XMLHandler.addTagValue("copy",copy,false));
    xml.append(XMLHandler.addTagValue("linesRead",linesRead,false));
    xml.append(XMLHandler.addTagValue("linesWritten",linesWritten,false));
    xml.append(XMLHandler.addTagValue("linesInput",linesInput,false));
    xml.append(XMLHandler.addTagValue("linesOutput",linesOutput,false));
    xml.append(XMLHandler.addTagValue("linesUpdated",linesUpdated,false));
    xml.append(XMLHandler.addTagValue("linesRejected",linesRejected,false));
    xml.append(XMLHandler.addTagValue("errors",errors,false));
    xml.append(XMLHandler.addTagValue("statusDescription",statusDescription,false));
    xml.append(XMLHandler.addTagValue("seconds",seconds,false));
    xml.append(XMLHandler.addTagValue("speed",speed,false));
    xml.append(XMLHandler.addTagValue("priority",priority,false));
    xml.append(XMLHandler.addTagValue("stopped",stopped,false));
    xml.append(XMLHandler.addTagValue("paused",paused,false));
    if (sampleRowMeta != null) {
      xml.append(XMLHandler.openTag("samples"));
      xml.append(sampleRowMeta.getMetaXML());
      xml.append(Const.CR);
      if (sampleRows != null) {
synchronized (sampleRows) {
          Iterator<Object[]> iterator=sampleRows.iterator();
          while (iterator.hasNext()) {
            Object[] sampleRow=iterator.next();
            xml.append(sampleRowMeta.getDataXML(sampleRow));
            xml.append(Const.CR);
          }
        }
      }
      xml.append(XMLHandler.closeTag("samples"));
    }
    xml.append(XMLHandler.closeTag(XML_TAG));
    return xml.toString();
  }
 catch (  Exception e) {
    throw new KettleException("Unable to serialize step '" + stepname + "' status data to XML",e);
  }
}
