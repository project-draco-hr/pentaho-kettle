{
  RowMetaInterface fields=new RowMeta();
  ExcelInputMeta info=new ExcelInputMeta();
  getInfo(info);
  int clearFields=SWT.YES;
  if (wFields.nrNonEmpty() > 0) {
    MessageBox messageBox=new MessageBox(shell,SWT.YES | SWT.NO | SWT.CANCEL| SWT.ICON_QUESTION);
    messageBox.setMessage(BaseMessages.getString(PKG,"ExcelInputDialog.ClearFieldList.DialogMessage"));
    messageBox.setText(BaseMessages.getString(PKG,"ExcelInputDialog.ClearFieldList.DialogTitle"));
    clearFields=messageBox.open();
    if (clearFields == SWT.CANCEL) {
      return;
    }
  }
  FileInputList fileList=info.getFileList(transMeta);
  for (  FileObject file : fileList.getFiles()) {
    try {
      KWorkbook workbook=WorkbookFactory.getWorkbook(info.getSpreadSheetType(),KettleVFS.getFilename(file),info.getEncoding());
      int nrSheets=workbook.getNumberOfSheets();
      for (int j=0; j < nrSheets; j++) {
        KSheet sheet=workbook.getSheet(j);
        int sheetIndex;
        if (info.readAllSheets()) {
          sheetIndex=0;
        }
 else {
          sheetIndex=Const.indexOfString(sheet.getName(),info.getSheetName());
        }
        if (sheetIndex >= 0) {
          int rownr=0;
          int startcol=0;
          if (info.readAllSheets()) {
            if (info.getStartColumn().length == 1)             startcol=info.getStartColumn()[0];
            if (info.getStartRow().length == 1)             rownr=info.getStartRow()[0];
          }
 else {
            rownr=info.getStartRow()[sheetIndex];
            startcol=info.getStartColumn()[sheetIndex];
          }
          boolean stop=false;
          for (int colnr=startcol; colnr < 256 && !stop; colnr++) {
            try {
              String fieldname=null;
              int fieldtype=ValueMetaInterface.TYPE_NONE;
              KCell cell=sheet.getCell(colnr,rownr);
              if (cell == null) {
                stop=true;
              }
 else {
                if (cell.getType() != KCellType.EMPTY) {
                  fieldname=cell.getContents();
                }
                KCell below=sheet.getCell(colnr,rownr + 1);
                if (below != null) {
                  if (below.getType() == KCellType.BOOLEAN) {
                    fieldtype=ValueMetaInterface.TYPE_BOOLEAN;
                  }
 else                   if (below.getType() == KCellType.DATE) {
                    fieldtype=ValueMetaInterface.TYPE_DATE;
                  }
 else                   if (below.getType() == KCellType.LABEL) {
                    fieldtype=ValueMetaInterface.TYPE_STRING;
                  }
 else                   if (below.getType() == KCellType.NUMBER) {
                    fieldtype=ValueMetaInterface.TYPE_NUMBER;
                  }
                  if (fieldname != null && fieldtype == ValueMetaInterface.TYPE_NONE) {
                    fieldtype=ValueMetaInterface.TYPE_STRING;
                  }
                }
                if (fieldname != null && fieldtype != ValueMetaInterface.TYPE_NONE) {
                  ValueMetaInterface field=new ValueMeta(fieldname,fieldtype);
                  fields.addValueMeta(field);
                }
 else {
                  if (fieldname == null)                   stop=true;
                }
              }
            }
 catch (            ArrayIndexOutOfBoundsException aioobe) {
              stop=true;
            }
          }
        }
      }
      workbook.close();
    }
 catch (    Exception e) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.Error.Title"),BaseMessages.getString(PKG,"ExcelInputDialog.ErrorReadingFile2.DialogMessage",KettleVFS.getFilename(file),e.toString()),e);
    }
  }
  if (fields.size() > 0) {
    if (clearFields == SWT.YES) {
      wFields.clearAll(false);
    }
    for (int j=0; j < fields.size(); j++) {
      ValueMetaInterface field=fields.getValueMeta(j);
      wFields.add(new String[]{field.getName(),field.getTypeDesc(),"","","none","N"});
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
    mb.setMessage(BaseMessages.getString(PKG,"ExcelInputDialog.UnableToFindFields.DialogMessage"));
    mb.setText(BaseMessages.getString(PKG,"ExcelInputDialog.UnableToFindFields.DialogTitle"));
    mb.open();
  }
  checkAlerts();
}
