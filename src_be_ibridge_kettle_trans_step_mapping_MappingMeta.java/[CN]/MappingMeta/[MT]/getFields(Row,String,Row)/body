{
  for (int i=0; i < inputField.length; i++) {
    if (inputField[i] != null && inputField[i].length() > 0) {
      if (inputMapping[i] != null && inputMapping[i].length() > 0) {
        if (!inputField[i].equals(inputMapping[i])) {
          int idx=r.searchValueIndex(inputField[i]);
          if (idx < 0) {
            throw new KettleStepException("Mapping target field [" + inputField[i] + "] is not present in the input rows!");
          }
          r.getValue(idx).setName(inputMapping[i]);
        }
      }
 else {
        throw new KettleStepException("Mapping target field #" + i + " is not specified for input ["+ inputField[i]+ "]!");
      }
    }
 else {
      throw new KettleStepException("Input field #" + i + " is not specified!");
    }
  }
  if (mappingTransMeta != null) {
    StepMeta stepMeta=mappingTransMeta.getMappingOutputStep();
    if (stepMeta != null) {
      stepMeta.getStepMetaInterface().getFields(r,name,info);
      for (int i=0; i < outputMapping.length; i++) {
        Value v=r.searchValue(outputMapping[i]);
        if (v != null) {
          v.setName(outputField[i]);
          v.setOrigin(name);
        }
 else {
          throw new KettleStepException("Unable to find field : " + outputMapping[i]);
        }
      }
      return r;
    }
 else {
      throw new KettleStepException("Please use one (1) mapping output step in the mapping (sub-transformation)");
    }
  }
 else {
    throw new KettleStepException("Unable to get fields from Mapping: no mapping is selected.");
  }
}
