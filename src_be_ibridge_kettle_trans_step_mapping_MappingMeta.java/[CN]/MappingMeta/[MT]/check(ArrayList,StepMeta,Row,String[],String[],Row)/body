{
  CheckResult cr;
  if (prev == null || prev.size() == 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_WARNING,"Not receiving any fields from previous steps!",stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is connected to previous one, receiving " + prev.size() + " fields",stepinfo);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is receiving info from other steps.",stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No input received from other steps!",stepinfo);
    remarks.add(cr);
  }
  for (int i=0; i < inputField.length; i++) {
    if (inputField[i] != null && inputField[i].length() > 0) {
      if (inputMapping[i] != null && inputMapping[i].length() > 0) {
        if (!inputField[i].equals(inputMapping[i])) {
          int idx=prev.searchValueIndex(inputField[i]);
          if (idx < 0) {
            cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Mapping target field [" + inputField[i] + "] is not present in the input rows!",stepinfo);
            remarks.add(cr);
          }
        }
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Mapping target field #" + i + " is not specified for input ["+ inputField[i]+ "]!",stepinfo);
        remarks.add(cr);
      }
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Input field #" + i + " is not specified!",stepinfo);
      remarks.add(cr);
    }
  }
  if (mappingTransMeta != null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"A mapping (transformation) is specified.",stepinfo);
    remarks.add(cr);
    StepMeta stepMeta=mappingTransMeta.getMappingOutputStep();
    if (stepMeta != null) {
      Row fields=null;
      try {
        fields=mappingTransMeta.getStepFields(stepMeta);
        boolean allOK=true;
        for (int i=0; i < outputMapping.length; i++) {
          Value v=fields.searchValue(outputMapping[i]);
          if (v == null) {
            cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Mapping output field specified couldn't be found in the mapping: " + outputMapping[i],stepinfo);
            remarks.add(cr);
            allOK=false;
          }
        }
        if (allOK) {
          cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"All output mapping fields could be found in the mapping.",stepinfo);
          remarks.add(cr);
        }
      }
 catch (      KettleStepException e) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Unable to get the step output fields for mapping output step [" + stepMeta.getName() + "]",stepinfo);
        remarks.add(cr);
      }
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No mapping output step was specified in the mapping!",stepinfo);
      remarks.add(cr);
    }
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"There is no mapping specified!",stepinfo);
    remarks.add(cr);
  }
}
