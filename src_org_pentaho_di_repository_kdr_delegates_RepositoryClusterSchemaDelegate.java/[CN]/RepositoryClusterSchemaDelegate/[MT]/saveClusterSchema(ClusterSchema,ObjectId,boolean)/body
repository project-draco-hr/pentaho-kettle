{
  clusterSchema.setObjectId(getClusterID(clusterSchema.getName()));
  if (clusterSchema.getObjectId() == null) {
    clusterSchema.setObjectId(insertCluster(clusterSchema));
  }
 else {
    repository.delClusterSlaves(clusterSchema.getObjectId());
  }
  for (int i=0; i < clusterSchema.getSlaveServers().size(); i++) {
    SlaveServer slaveServer=clusterSchema.getSlaveServers().get(i);
    if (slaveServer.getObjectId() == null) {
      repository.save(slaveServer,null,id_transformation,isUsedByTransformation);
    }
    repository.insertClusterSlave(clusterSchema,slaveServer);
  }
  if (isUsedByTransformation) {
    repository.insertTransformationCluster(id_transformation,clusterSchema.getObjectId());
  }
}
