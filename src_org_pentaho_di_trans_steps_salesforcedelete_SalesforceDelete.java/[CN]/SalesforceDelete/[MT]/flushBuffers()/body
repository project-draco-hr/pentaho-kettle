{
  try {
    data.deleteResult=data.connection.delete(data.deleteId);
    for (int j=0; j < data.deleteResult.length; j++) {
      if (data.deleteResult[j].isSuccess()) {
        putRow(data.outputRowMeta,data.outputBuffer[j]);
        incrementLinesOutput();
        if (checkFeedback(getLinesInput())) {
          if (log.isDetailed())           logDetailed(BaseMessages.getString(PKG,"SalesforceDelete.log.LineRow",String.valueOf(getLinesInput())));
        }
      }
 else {
        boolean sendToErrorRow=false;
        String errorMessage=null;
        if (getStepMeta().isDoingErrorHandling()) {
          sendToErrorRow=true;
          errorMessage="";
          for (int i=0; i < data.deleteResult[j].getErrors().length; i++) {
            com.sforce.soap.partner.Error err=data.deleteResult[j].getErrors()[i];
            errorMessage+=BaseMessages.getString(PKG,"SalesforceDelete.Error.FlushBuffer",new Integer(j),err.getStatusCode(),err.getMessage());
          }
        }
 else {
          if (log.isDetailed())           logDetailed(BaseMessages.getString(PKG,"SalesforceDelete.Found.Error"));
          com.sforce.soap.partner.Error err=data.deleteResult[j].getErrors()[0];
          throw new KettleException(BaseMessages.getString(PKG,"SalesforceDelete.Error.FlushBuffer",new Integer(j),err.getStatusCode(),err.getMessage()));
        }
        if (sendToErrorRow) {
          if (log.isDebug())           logDebug(BaseMessages.getString(PKG,"SalesforceDelete.PassingRowToErrorStep"));
          putError(getInputRowMeta(),data.outputBuffer[j],1,errorMessage,null,"SalesforceDelete001");
        }
      }
    }
    data.deleteId=new String[meta.getBatchSizeInt()];
    data.outputBuffer=new Object[meta.getBatchSizeInt()][];
    data.iBufferPos=0;
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceDelete.FailedToDeleted",e.getMessage()));
  }
 finally {
    if (data.deleteResult != null)     data.deleteResult=null;
  }
}
