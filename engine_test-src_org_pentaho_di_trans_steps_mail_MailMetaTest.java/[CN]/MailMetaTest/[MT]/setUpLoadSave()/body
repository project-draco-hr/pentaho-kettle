{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  List<String> attributes=Arrays.asList("server","destination","destinationCc","destinationBCc","replyAddress","replyName","subject","includeDate","includeSubFolders","zipFilenameDynamic","isFilenameDynamic","dynamicFieldname","dynamicWildcard","dynamicZipFilenameField","sourceFileFoldername","sourceWildcard","contactPerson","contactPhone","comment","includingFiles","zipFiles","zipFilename","zipLimitSize","usingAuthentication","authenticationUser","authenticationPassword","onlySendComment","useHTML","usingSecureAuthentication","usePriority","port","priority","importance","sensitivity","secureConnectionType","encoding","replyToAddresses","attachContentFromField","attachContentField","attachContentFileNameField","embeddedImages","contentIds");
  Map<String,String> getterMap=new HashMap<String,String>(){
{
      put("isFilenameDynamic","isDynamicFilename");
    }
  }
;
  Map<String,String> setterMap=new HashMap<String,String>(){
{
      put("isFilenameDynamic","setisDynamicFilename");
    }
  }
;
  FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),5);
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("embeddedImages",stringArrayLoadSaveValidator);
  attrValidatorMap.put("contentIds",stringArrayLoadSaveValidator);
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,new ArrayList<String>(),new ArrayList<String>(),getterMap,setterMap,attrValidatorMap,typeValidatorMap,this);
}
