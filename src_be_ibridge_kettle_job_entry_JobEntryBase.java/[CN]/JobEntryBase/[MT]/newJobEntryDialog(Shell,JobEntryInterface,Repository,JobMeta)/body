{
  if (jei == null)   return null;
  JobEntryDialogInterface d=null;
switch (jei.getType()) {
case JobEntryInterface.TYPE_JOBENTRY_EVALUATION:
    d=new JobEntryEvalDialog(parent,(JobEntryEval)jei);
  break;
case JobEntryInterface.TYPE_JOBENTRY_JOB:
d=new JobEntryJobDialog(parent,(JobEntryJob)jei,rep);
break;
case JobEntryInterface.TYPE_JOBENTRY_MAIL:
d=new JobEntryMailDialog(parent,(JobEntryMail)jei,rep);
break;
case JobEntryInterface.TYPE_JOBENTRY_SHELL:
d=new JobEntryShellDialog(parent,(JobEntryShell)jei,rep);
break;
case JobEntryInterface.TYPE_JOBENTRY_SQL:
d=new JobEntrySQLDialog(parent,(JobEntrySQL)jei,rep,jobinfo);
break;
case JobEntryInterface.TYPE_JOBENTRY_FTP:
d=new JobEntryFTPDialog(parent,(JobEntryFTP)jei,rep,jobinfo);
break;
case JobEntryInterface.TYPE_JOBENTRY_TABLE_EXISTS:
d=new JobEntryTableExistsDialog(parent,(JobEntryTableExists)jei,rep,jobinfo);
break;
case JobEntryInterface.TYPE_JOBENTRY_FILE_EXISTS:
d=new JobEntryFileExistsDialog(parent,(JobEntryFileExists)jei,rep,jobinfo);
break;
case JobEntryInterface.TYPE_JOBENTRY_TRANSFORMATION:
d=new JobEntryTransDialog(parent,(JobEntryTrans)jei,rep);
break;
default :
throw new KettleException("Unable to find dialog for job interface: " + jei.getName());
}
return d;
}
