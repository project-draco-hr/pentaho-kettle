{
  try {
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    rep.saveStepAttribute(id_transformation,id_step,"sql",sql);
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    StreamInterface infoStream=getStepIOMeta().getInfoStreams().get(0);
    rep.saveStepAttribute(id_transformation,id_step,"lookup",infoStream.getStepname());
    rep.saveStepAttribute(id_transformation,id_step,"execute_each_row",executeEachInputRow);
    rep.saveStepAttribute(id_transformation,id_step,"variables_active",variableReplacementActive);
    rep.saveStepAttribute(id_transformation,id_step,"lazy_conversion_active",lazyConversionActive);
    if (databaseMeta != null)     rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getObjectId());
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
