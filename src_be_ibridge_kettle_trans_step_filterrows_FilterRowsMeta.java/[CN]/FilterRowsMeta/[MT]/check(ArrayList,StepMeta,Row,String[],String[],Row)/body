{
  CheckResult cr;
  String error_message="";
  if (getSendTrueStepname() != null && getSendFalseStepname() != null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Both 'true' and 'false' steps are specified.  I know how to split the incoming stream(s) of data.",stepinfo);
    remarks.add(cr);
  }
 else   if (getSendTrueStepname() == null && getSendFalseStepname() == null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Neither 'true' and 'false' steps are specified.  Only when the condition is true, rows are sent to the next steps.",stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Please specify both the 'true' AND 'false' steps.  That way Kettle know for sure where to send the data after computing the condition.",stepinfo);
    remarks.add(cr);
  }
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is connected to previous one, receiving " + prev.size() + " fields",stepinfo);
    remarks.add(cr);
    boolean first=true;
    error_message="";
    boolean error_found=false;
    String key[]=condition.getUsedFields();
    for (int i=0; i < key.length; i++) {
      Value v=prev.searchValue(key[i]);
      if (v == null) {
        if (first) {
          first=false;
          error_message+="Fields used in the condition, not found in input from previous steps:" + Const.CR;
        }
        error_found=true;
        error_message+="\t\t" + key[i] + Const.CR;
      }
    }
    if (error_found) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"All fields to compare with are found in the input stream.",stepinfo);
    }
    remarks.add(cr);
  }
 else {
    error_message="Couldn't read fields from the previous step." + Const.CR;
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is receiving info from other steps.",stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No input received from other steps!",stepinfo);
    remarks.add(cr);
  }
}
