{
  CheckResult cr;
  String error_message="";
  if (getSendTrueStepname() != null && getSendFalseStepname() != null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("FilterRowsMeta.CheckResult.BothTrueAndFalseStepSpecified"),stepinfo);
    remarks.add(cr);
  }
 else   if (getSendTrueStepname() == null && getSendFalseStepname() == null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("FilterRowsMeta.CheckResult.NeitherTrueAndFalseStepSpecified"),stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("FilterRowsMeta.CheckResult.PlsSpecifyBothTrueAndFalseStep"),stepinfo);
    remarks.add(cr);
  }
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("FilterRowsMeta.CheckResult.StepReceivingFields",prev.size() + ""),stepinfo);
    remarks.add(cr);
    boolean first=true;
    error_message="";
    boolean error_found=false;
    String key[]=condition.getUsedFields();
    for (int i=0; i < key.length; i++) {
      Value v=prev.searchValue(key[i]);
      if (v == null) {
        if (first) {
          first=false;
          error_message+=Messages.getString("FilterRowsMeta.CheckResult.FieldsNotFoundFromPreviousStep") + Const.CR;
        }
        error_found=true;
        error_message+="\t\t" + key[i] + Const.CR;
      }
    }
    if (error_found) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("FilterRowsMeta.CheckResult.AllFieldsFoundInInputStream"),stepinfo);
    }
    remarks.add(cr);
  }
 else {
    error_message=Messages.getString("FilterRowsMeta.CheckResult.CouldNotReadFieldsFromPreviousStep") + Const.CR;
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("FilterRowsMeta.CheckResult.StepReceivingInfoFromOtherSteps"),stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("FilterRowsMeta.CheckResult.NoInputReceivedFromOtherSteps"),stepinfo);
    remarks.add(cr);
  }
}
