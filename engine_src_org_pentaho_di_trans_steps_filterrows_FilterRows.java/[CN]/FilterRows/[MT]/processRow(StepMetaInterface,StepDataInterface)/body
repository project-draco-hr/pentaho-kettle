{
  meta=(FilterRowsMeta)smi;
  data=(FilterRowsData)sdi;
  boolean keep;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(getInputRowMeta(),getStepname(),null,null,this,repository,metaStore);
    if (data.chosesTargetSteps) {
      List<StreamInterface> targetStreams=meta.getStepIOMeta().getTargetStreams();
      if (!Const.isEmpty(targetStreams.get(0).getStepname())) {
        data.trueRowSet=findOutputRowSet(getStepname(),getCopy(),targetStreams.get(0).getStepname(),0);
        if (data.trueRowSet == null) {
          throw new KettleException(BaseMessages.getString(PKG,"FilterRows.Log.TargetStepInvalid",targetStreams.get(0).getStepname()));
        }
      }
 else {
        data.trueRowSet=null;
      }
      if (!Const.isEmpty(targetStreams.get(1).getStepname())) {
        data.falseRowSet=findOutputRowSet(getStepname(),getCopy(),targetStreams.get(1).getStepname(),0);
        if (data.falseRowSet == null) {
          throw new KettleException(BaseMessages.getString(PKG,"FilterRows.Log.TargetStepInvalid",targetStreams.get(1).getStepname()));
        }
      }
 else {
        data.falseRowSet=null;
      }
    }
  }
  keep=keepRow(getInputRowMeta(),r);
  if (!data.chosesTargetSteps) {
    if (keep) {
      putRow(data.outputRowMeta,r);
    }
  }
 else {
    if (keep) {
      if (data.trueRowSet != null) {
        if (log.isRowLevel())         logRowlevel("Sending row to true  :" + data.trueStepname + " : "+ getInputRowMeta().getString(r));
        putRowTo(data.outputRowMeta,r,data.trueRowSet);
      }
    }
 else {
      if (data.falseRowSet != null) {
        if (log.isRowLevel())         logRowlevel("Sending row to false :" + data.falseStepname + " : "+ getInputRowMeta().getString(r));
        putRowTo(data.outputRowMeta,r,data.falseRowSet);
      }
    }
  }
  if (checkFeedback(getLinesRead())) {
    if (log.isBasic())     logBasic(BaseMessages.getString(PKG,"FilterRows.Log.LineNumber") + getLinesRead());
  }
  return true;
}
