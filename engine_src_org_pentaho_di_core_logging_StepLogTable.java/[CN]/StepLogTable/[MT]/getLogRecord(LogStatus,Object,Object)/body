{
  if (subject == null || subject instanceof StepMetaDataCombi) {
    StepMetaDataCombi combi=(StepMetaDataCombi)subject;
    RowMetaAndData row=new RowMetaAndData();
    for (    LogTableField field : fields) {
      if (field.isEnabled()) {
        Object value=null;
        if (subject != null) {
switch (ID.valueOf(field.getId())) {
case ID_BATCH:
            value=new Long(combi.step.getTrans().getBatchId());
          break;
case CHANNEL_ID:
        value=combi.step.getLogChannel().getLogChannelId();
      break;
case LOG_DATE:
    value=new Date();
  break;
case TRANSNAME:
value=combi.step.getTrans().getName();
break;
case STEPNAME:
value=combi.stepname;
break;
case STEP_COPY:
value=new Long(combi.copy);
break;
case LINES_READ:
value=new Long(combi.step.getLinesRead());
break;
case LINES_WRITTEN:
value=new Long(combi.step.getLinesWritten());
break;
case LINES_UPDATED:
value=new Long(combi.step.getLinesUpdated());
break;
case LINES_INPUT:
value=new Long(combi.step.getLinesInput());
break;
case LINES_OUTPUT:
value=new Long(combi.step.getLinesOutput());
break;
case LINES_REJECTED:
value=new Long(combi.step.getLinesRejected());
break;
case ERRORS:
value=new Long(combi.step.getErrors());
break;
case LOG_FIELD:
value=getLogBuffer(combi.step,combi.step.getLogChannel().getLogChannelId(),status,null);
break;
default :
break;
}
}
row.addValue(field.getFieldName(),field.getDataType(),value);
row.getRowMeta().getValueMeta(row.size() - 1).setLength(field.getLength());
}
}
return row;
}
 else {
return null;
}
}
