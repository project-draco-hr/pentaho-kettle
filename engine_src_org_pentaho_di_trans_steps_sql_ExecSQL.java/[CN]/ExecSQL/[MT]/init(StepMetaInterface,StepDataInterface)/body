{
  meta=(ExecSQLMeta)smi;
  data=(ExecSQLData)sdi;
  if (super.init(smi,sdi)) {
    if (meta.getDatabaseMeta() == null) {
      logError(BaseMessages.getString(PKG,"ExecSQL.Init.ConnectionMissing",getStepname()));
      return false;
    }
    data.db=new Database(this,meta.getDatabaseMeta());
    data.db.shareVariablesWith(this);
    try {
      if (getTransMeta().isUsingUniqueConnections()) {
synchronized (getTrans()) {
          data.db.connect(getTrans().getTransactionId(),getPartitionID());
        }
      }
 else {
        data.db.connect(getPartitionID());
      }
      if (log.isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"ExecSQL.Log.ConnectedToDB"));
      }
      if (meta.isReplaceVariables()) {
        data.sql=environmentSubstitute(meta.getSql());
      }
 else {
        data.sql=meta.getSql();
      }
      if (!meta.isExecutedEachInputRow()) {
        if (meta.isSingleStatement()) {
          data.result=data.db.execStatement(data.sql);
        }
 else {
          data.result=data.db.execStatements(data.sql);
        }
        if (!data.db.isAutoCommit()) {
          data.db.commit();
        }
      }
      return true;
    }
 catch (    KettleException e) {
      logError(BaseMessages.getString(PKG,"ExecSQL.Log.ErrorOccurred") + e.getMessage());
      setErrors(1);
      stopAll();
    }
  }
  return false;
}
