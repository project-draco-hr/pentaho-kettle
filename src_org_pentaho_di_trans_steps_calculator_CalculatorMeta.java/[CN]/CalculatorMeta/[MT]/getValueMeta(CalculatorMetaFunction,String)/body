{
  ValueMetaInterface v=new ValueMeta(fn.getFieldName(),fn.getValueType());
  v.setLength(fn.getValueLength());
  v.setPrecision(fn.getValuePrecision());
  v.setOrigin(origin);
  v.setComments(fn.getCalcTypeDesc());
  v.setConversionMask(fn.getConversionMask());
  v.setDecimalSymbol(fn.getDecimalSymbol());
  v.setGroupingSymbol(fn.getGroupingSymbol());
  v.setCurrencySymbol(fn.getCurrencySymbol());
  if (fn.getValueType() == ValueMetaInterface.TYPE_NONE) {
    int defaultResultType=ValueMetaInterface.TYPE_NONE;
switch (fn.getCalcType()) {
case CalculatorMetaFunction.CALC_NONE:
      break;
case CalculatorMetaFunction.CALC_ADD:
    defaultResultType=ValueMetaInterface.TYPE_NUMBER;
  break;
case CalculatorMetaFunction.CALC_SUBTRACT:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_MULTIPLY:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_DIVIDE:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_SQUARE:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_SQUARE_ROOT:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_PERCENT_1:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_PERCENT_2:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_PERCENT_3:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_COMBINATION_1:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_COMBINATION_2:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_ROUND_1:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_ROUND_2:
defaultResultType=ValueMetaInterface.TYPE_NUMBER;
break;
case CalculatorMetaFunction.CALC_CONSTANT:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_NVL:
break;
case CalculatorMetaFunction.CALC_ADD_DAYS:
defaultResultType=ValueMetaInterface.TYPE_DATE;
break;
case CalculatorMetaFunction.CALC_YEAR_OF_DATE:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_MONTH_OF_DATE:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_DAY_OF_YEAR:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_DAY_OF_MONTH:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_DAY_OF_WEEK:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_WEEK_OF_YEAR:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_WEEK_OF_YEAR_ISO8601:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_YEAR_OF_DATE_ISO8601:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_BYTE_TO_HEX_ENCODE:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_HEX_TO_BYTE_DECODE:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_CHAR_TO_HEX_ENCODE:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_HEX_TO_CHAR_DECODE:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_CRC32:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_ADLER32:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
case CalculatorMetaFunction.CALC_MD5:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_SHA1:
defaultResultType=ValueMetaInterface.TYPE_STRING;
break;
case CalculatorMetaFunction.CALC_LEVENSHTEIN_DISTANCE:
defaultResultType=ValueMetaInterface.TYPE_INTEGER;
break;
default :
break;
}
v.setType(defaultResultType);
}
return v;
}
