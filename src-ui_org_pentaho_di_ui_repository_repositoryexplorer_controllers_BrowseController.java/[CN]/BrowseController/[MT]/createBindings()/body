{
  folderTree=(XulTree)document.getElementById("folder-tree");
  fileTable=(XulTree)document.getElementById("file-table");
  directoryBinding=bf.createBinding(repositoryDirectory,"children",folderTree,"elements");
  bf.setBindingType(Binding.Type.ONE_WAY);
  bf.createBinding(folderTree,"selectedItems",this,"selectedFolderItems");
  bf.createBinding(this,"repositoryDirectories",fileTable,"elements",new BindingConvertor<List<UIRepositoryDirectory>,UIRepositoryObjects>(){
    @Override public UIRepositoryObjects sourceToTarget(    List<UIRepositoryDirectory> rd){
      UIRepositoryObjects listOfObjects=new UIRepositoryObjects();
      if (rd == null) {
        return null;
      }
      if (rd.size() <= 0) {
        return null;
      }
      try {
        listOfObjects=rd.get(0).getRepositoryObjects();
        bf.setBindingType(Binding.Type.ONE_WAY);
        bf.createBinding(listOfObjects,"children",fileTable,"elements");
      }
 catch (      Exception e) {
      }
      return listOfObjects;
    }
    @Override public List<UIRepositoryDirectory> targetToSource(    UIRepositoryObjects elements){
      return null;
    }
  }
);
  try {
    directoryBinding.fireSourceChanged();
  }
 catch (  Exception e) {
    System.out.println(e.getMessage());
    e.printStackTrace();
  }
  if (repositoryDirectory.isRevisionsSupported()) {
    createRevisionBindings();
  }
}
