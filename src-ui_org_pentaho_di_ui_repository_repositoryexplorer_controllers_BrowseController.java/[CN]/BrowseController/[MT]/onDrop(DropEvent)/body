{
  boolean result=false;
  try {
    List<Object> dirList=new ArrayList<Object>();
    List<UIRepositoryObject> moveList=new ArrayList<UIRepositoryObject>();
    UIRepositoryDirectory targetDirectory=null;
    if (event.getDropParent() != null && event.getDropParent() instanceof UIRepositoryDirectory) {
      targetDirectory=(UIRepositoryDirectory)event.getDropParent();
      if (event.getDataTransfer().getData().size() > 0) {
        for (        Object o : event.getDataTransfer().getData()) {
          if (o instanceof UIRepositoryObject) {
            moveList.add((UIRepositoryObject)o);
            if (o instanceof UIRepositoryDirectory) {
              dirList.add(o);
            }
            result=true;
          }
        }
      }
    }
    if (result == true) {
      List<UIRepositoryObject> collisionObjects=new ArrayList<UIRepositoryObject>();
      for (      UIRepositoryObject newChild : moveList) {
        for (        UIRepositoryObject currChild : targetDirectory.getRepositoryObjects()) {
          if ((currChild instanceof UIRepositoryDirectory) && (newChild instanceof UIRepositoryDirectory) && (currChild.getName().equalsIgnoreCase(newChild.getName()))) {
            messageBox.setTitle(messages.getString("Dialog.Error"));
            messageBox.setAcceptLabel(messages.getString("Dialog.Ok"));
            messageBox.setMessage(BaseMessages.getString(RepositoryExplorer.class,"BrowseController.UnableToMove.DirectoryAlreadyExists",currChild.getPath()));
            messageBox.open();
            result=false;
            break;
          }
 else           if (!(currChild instanceof UIRepositoryDirectory) && (currChild.getType().equalsIgnoreCase(newChild.getType())) && (currChild.getName().equalsIgnoreCase(newChild.getName()))) {
            collisionObjects.add(currChild);
          }
        }
        if (!result) {
          break;
        }
      }
      if (result && collisionObjects.size() > 0) {
        FileOverwriteDialogController fileOverwriteDialog=FileOverwriteDialogController.getInstance(getXulDomContainer().getOuterContext() instanceof Shell ? (Shell)getXulDomContainer().getOuterContext() : null,collisionObjects);
        fileOverwriteDialog.show();
        if (fileOverwriteDialog.isOverwriteFiles()) {
          for (          UIRepositoryObject o : collisionObjects) {
            o.delete();
          }
        }
 else {
          result=false;
        }
      }
      if (result) {
        for (        UIRepositoryObject o : moveList) {
          o.move(targetDirectory);
        }
        event.getDataTransfer().setData(dirList);
      }
    }
  }
 catch (  Exception e) {
    result=false;
    event.setAccepted(false);
    messageBox.setTitle(messages.getString("Dialog.Error"));
    messageBox.setAcceptLabel(messages.getString("Dialog.Ok"));
    messageBox.setMessage(BaseMessages.getString(RepositoryExplorer.class,"BrowseController.UnableToMove",e.getLocalizedMessage()));
    messageBox.open();
  }
  event.setAccepted(result);
}
