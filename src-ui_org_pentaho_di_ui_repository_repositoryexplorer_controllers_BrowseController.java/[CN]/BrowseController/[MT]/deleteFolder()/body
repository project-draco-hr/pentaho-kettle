{
  UIRepositoryDirectory newSelectedItem=null;
  try {
    for (    Object object : folderTree.getSelectedItems()) {
      if (object instanceof UIRepositoryDirectory) {
        repoDir=(UIRepositoryDirectory)object;
        if (repoDir != null) {
          newSelectedItem=repoDir.getParent();
          if (repoDir.getChildren().size() > 0 || repoDir.getRepositoryObjects().size() > 0) {
            confirmBox=(XulConfirmBox)document.createElement("confirmbox");
            confirmBox.setTitle(BaseMessages.getString(PKG,"BrowseController.DeleteNonEmptyFolderWarningTitle"));
            confirmBox.setMessage(BaseMessages.getString(PKG,"BrowseController.DeleteNonEmptyFolderWarningMessage"));
            confirmBox.setAcceptLabel(BaseMessages.getString(PKG,"Dialog.Ok"));
            confirmBox.setCancelLabel(BaseMessages.getString(PKG,"Dialog.Cancel"));
            confirmBox.addDialogCallback(new XulDialogCallback<Object>(){
              public void onClose(              XulComponent sender,              Status returnCode,              Object retVal){
                if (returnCode == Status.ACCEPT) {
                  try {
                    deleteFolder(repoDir);
                  }
 catch (                  Exception e) {
                    messageBox.setTitle(BaseMessages.getString(PKG,"Dialog.Error"));
                    messageBox.setAcceptLabel(BaseMessages.getString(PKG,"Dialog.Ok"));
                    messageBox.setMessage(BaseMessages.getString(PKG,e.getLocalizedMessage()));
                    messageBox.open();
                  }
                }
              }
              public void onError(              XulComponent sender,              Throwable t){
                throw new RuntimeException(t);
              }
            }
);
            confirmBox.open();
            break;
          }
 else {
            deleteFolder(repoDir);
          }
        }
      }
    }
  }
 catch (  KettleException ke) {
    messageBox.setTitle(BaseMessages.getString(PKG,"Dialog.Error"));
    messageBox.setAcceptLabel(BaseMessages.getString(PKG,"Dialog.Ok"));
    messageBox.setMessage(BaseMessages.getString(PKG,ke.getLocalizedMessage()));
    messageBox.open();
  }
  if (newSelectedItem != null) {
    folderTree.setSelectedItems(Arrays.asList(newSelectedItem));
  }
}
