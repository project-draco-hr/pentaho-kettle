{
  SelectFieldDialog sfd=new SelectFieldDialog(shell,SWT.NONE,log,schema);
  if (sfd.open()) {
    TableField f[]=sfd.fields;
    WhereCondition c[]=sfd.conditions;
    System.out.println("f.length = " + f.length + ", c.length = "+ c.length);
    String sql=schema.getSQL(f,c);
    if (sql != null) {
{
        schema.removeAllSelFields();
        for (int i=0; i < f.length; i++) {
          schema.addSelField(f[i]);
        }
        schema.removeAllSelConditions();
        for (int i=0; i < c.length; i++) {
          schema.addSelCondition(c[i]);
        }
        LogWriter newlog=LogWriter.getInstance(Const.MENU_LOG_FILE,false,LogWriter.LOG_LEVEL_BASIC);
        TransMeta trans=new TransMeta();
        DatabaseMeta dbinfo=f[0].getTable().getDatabase();
        trans.addDatabase(dbinfo);
        TableInputMeta tii=new TableInputMeta();
        tii.setDatabaseMeta(dbinfo);
        tii.setSQL(sql);
        tii.setChanged();
        StepMeta stii=new StepMeta(newlog,"TableInput","Read from database",tii);
        stii.setLocation(50,50);
        stii.setDraw(true);
        trans.addStep(stii);
        SelectValuesMeta svi=new SelectValuesMeta();
        svi.allocate(f.length,0,0);
        for (int i=0; i < f.length; i++) {
          svi.getSelectName()[i]=f[i].getRenameAsField(dbinfo,i);
          svi.getSelectRename()[i]=f[i].getName();
          svi.getSelectLength()[i]=-2;
          svi.getSelectPrecision()[i]=-2;
        }
        StepMeta ssvi=new StepMeta(newlog,"SelectValues","Rename values",svi);
        ssvi.setLocation(200,50);
        ssvi.setDraw(true);
        trans.addStep(ssvi);
        TransHopMeta hop=new TransHopMeta(stii,ssvi);
        trans.addTransHop(hop);
        DummyTransMeta dti=new DummyTransMeta();
        StepMeta sdti=new StepMeta(newlog,"Dummy","Dummy",dti);
        sdti.setLocation(350,50);
        sdti.setDraw(true);
        sdti.setTerminator();
        trans.addStep(sdti);
        TransHopMeta hop2=new TransHopMeta(ssvi,sdti);
        trans.addTransHop(hop2);
        CubeOutputMeta coi=new CubeOutputMeta();
        coi.setFilename(schema.getCubeFile());
        StepMeta scoi=new StepMeta(newlog,"CubeOutput","Write to cube",coi);
        scoi.setLocation(500,50);
        scoi.setDraw(true);
        trans.addStep(scoi);
        TransHopMeta hop3=new TransHopMeta(sdti,scoi);
        trans.addTransHop(hop3);
        trans.setName("Transformation generated by Kettle");
        trans.clearChanged();
        Spoon sp=new Spoon(newlog,disp,trans,rep);
        sp.open();
      }
    }
  }
}
