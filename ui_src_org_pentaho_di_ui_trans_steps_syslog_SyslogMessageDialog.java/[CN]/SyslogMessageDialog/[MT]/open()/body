{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wSettingsGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSettingsGroup);
  wSettingsGroup.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.wSettingsGroup.Label"));
  FormLayout settingGroupLayout=new FormLayout();
  settingGroupLayout.marginWidth=10;
  settingGroupLayout.marginHeight=10;
  wSettingsGroup.setLayout(settingGroupLayout);
  wServerName=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SyslogMessageDialog.Server.Label"),BaseMessages.getString(PKG,"SyslogMessageDialog.Server.Tooltip"));
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(0,0);
  fdServerName.top=new FormAttachment(wStepname,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wPort=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"SyslogMessageDialog.Port.Label"),BaseMessages.getString(PKG,"SyslogMessageDialog.Port.Tooltip"));
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.left=new FormAttachment(0,0);
  fdPort.top=new FormAttachment(wServerName,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  wTest=new Button(wSettingsGroup,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.TestConnection.Label"));
  props.setLook(wTest);
  fdTest=new FormData();
  wTest.setToolTipText(BaseMessages.getString(PKG,"SyslogMessageDialog.TestConnection.Tooltip"));
  fdTest.top=new FormAttachment(wPort,2 * margin);
  fdTest.right=new FormAttachment(100,0);
  wTest.setLayoutData(fdTest);
  fdSettingsGroup=new FormData();
  fdSettingsGroup.left=new FormAttachment(0,margin);
  fdSettingsGroup.top=new FormAttachment(wStepname,margin);
  fdSettingsGroup.right=new FormAttachment(100,-margin);
  wSettingsGroup.setLayoutData(fdSettingsGroup);
  wLogSettings=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wLogSettings);
  wLogSettings.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.LogSettings.Group.Label"));
  FormLayout LogSettingsgroupLayout=new FormLayout();
  LogSettingsgroupLayout.marginWidth=10;
  LogSettingsgroupLayout.marginHeight=10;
  wLogSettings.setLayout(LogSettingsgroupLayout);
  wlFacility=new Label(wLogSettings,SWT.RIGHT);
  wlFacility.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.Facility.Label"));
  props.setLook(wlFacility);
  fdlFacility=new FormData();
  fdlFacility.left=new FormAttachment(0,margin);
  fdlFacility.right=new FormAttachment(middle,-margin);
  fdlFacility.top=new FormAttachment(wSettingsGroup,margin);
  wlFacility.setLayoutData(fdlFacility);
  wFacility=new CCombo(wLogSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wFacility.setItems(SyslogDefs.FACILITYS);
  props.setLook(wFacility);
  fdFacility=new FormData();
  fdFacility.left=new FormAttachment(middle,margin);
  fdFacility.top=new FormAttachment(wSettingsGroup,margin);
  fdFacility.right=new FormAttachment(100,0);
  wFacility.setLayoutData(fdFacility);
  wFacility.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlPriority=new Label(wLogSettings,SWT.RIGHT);
  wlPriority.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.Priority.Label"));
  props.setLook(wlPriority);
  fdlPriority=new FormData();
  fdlPriority.left=new FormAttachment(0,margin);
  fdlPriority.right=new FormAttachment(middle,-margin);
  fdlPriority.top=new FormAttachment(wFacility,margin);
  wlPriority.setLayoutData(fdlPriority);
  wPriority=new CCombo(wLogSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wPriority.setItems(SyslogDefs.PRIORITYS);
  props.setLook(wPriority);
  fdPriority=new FormData();
  fdPriority.left=new FormAttachment(middle,margin);
  fdPriority.top=new FormAttachment(wFacility,margin);
  fdPriority.right=new FormAttachment(100,0);
  wPriority.setLayoutData(fdPriority);
  wPriority.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlAddHostName=new Label(wLogSettings,SWT.RIGHT);
  wlAddHostName.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.AddHostName.Label"));
  props.setLook(wlAddHostName);
  fdlAddHostName=new FormData();
  fdlAddHostName.left=new FormAttachment(0,0);
  fdlAddHostName.top=new FormAttachment(wPriority,margin);
  fdlAddHostName.right=new FormAttachment(middle,-margin);
  wlAddHostName.setLayoutData(fdlAddHostName);
  wAddHostName=new Button(wLogSettings,SWT.CHECK);
  props.setLook(wAddHostName);
  wAddHostName.setToolTipText(BaseMessages.getString(PKG,"SyslogMessageDialog.AddHostName.Tooltip"));
  fdAddHostName=new FormData();
  fdAddHostName.left=new FormAttachment(middle,margin);
  fdAddHostName.top=new FormAttachment(wPriority,margin);
  fdAddHostName.right=new FormAttachment(100,0);
  wAddHostName.setLayoutData(fdAddHostName);
  wAddHostName.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddTimestamp=new Label(wLogSettings,SWT.RIGHT);
  wlAddTimestamp.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.AddTimestamp.Label"));
  props.setLook(wlAddTimestamp);
  fdlAddTimestamp=new FormData();
  fdlAddTimestamp.left=new FormAttachment(0,0);
  fdlAddTimestamp.top=new FormAttachment(wAddHostName,margin);
  fdlAddTimestamp.right=new FormAttachment(middle,-margin);
  wlAddTimestamp.setLayoutData(fdlAddTimestamp);
  wAddTimestamp=new Button(wLogSettings,SWT.CHECK);
  props.setLook(wAddTimestamp);
  wAddTimestamp.setToolTipText(BaseMessages.getString(PKG,"SyslogMessageDialog.AddTimestamp.Tooltip"));
  fdAddTimestamp=new FormData();
  fdAddTimestamp.left=new FormAttachment(middle,margin);
  fdAddTimestamp.top=new FormAttachment(wAddHostName,margin);
  fdAddTimestamp.right=new FormAttachment(100,0);
  wAddTimestamp.setLayoutData(fdAddTimestamp);
  wAddTimestamp.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeAddTimestamp();
      input.setChanged();
    }
  }
);
  wlDatePattern=new Label(wLogSettings,SWT.RIGHT);
  wlDatePattern.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.DatePattern.Label"));
  props.setLook(wlDatePattern);
  fdlDatePattern=new FormData();
  fdlDatePattern.left=new FormAttachment(0,margin);
  fdlDatePattern.right=new FormAttachment(middle,-margin);
  fdlDatePattern.top=new FormAttachment(wAddTimestamp,margin);
  wlDatePattern.setLayoutData(fdlDatePattern);
  wDatePattern=new ComboVar(transMeta,wLogSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wDatePattern.setItems(Const.getDateFormats());
  props.setLook(wDatePattern);
  fdDatePattern=new FormData();
  fdDatePattern.left=new FormAttachment(middle,margin);
  fdDatePattern.top=new FormAttachment(wAddTimestamp,margin);
  fdDatePattern.right=new FormAttachment(100,0);
  wDatePattern.setLayoutData(fdDatePattern);
  wDatePattern.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlMessageField=new Label(wLogSettings,SWT.RIGHT);
  wlMessageField.setText(BaseMessages.getString(PKG,"SyslogMessageDialog.MessageNameField.Label"));
  props.setLook(wlMessageField);
  fdlMessageField=new FormData();
  fdlMessageField.left=new FormAttachment(0,margin);
  fdlMessageField.right=new FormAttachment(middle,-margin);
  fdlMessageField.top=new FormAttachment(wDatePattern,margin);
  wlMessageField.setLayoutData(fdlMessageField);
  wMessageField=new CCombo(wLogSettings,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wMessageField);
  wMessageField.setEditable(true);
  wMessageField.addModifyListener(lsMod);
  fdMessageField=new FormData();
  fdMessageField.left=new FormAttachment(middle,margin);
  fdMessageField.top=new FormAttachment(wDatePattern,margin);
  fdMessageField.right=new FormAttachment(100,0);
  wMessageField.setLayoutData(fdMessageField);
  wMessageField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      get();
    }
  }
);
  fdLogSettings=new FormData();
  fdLogSettings.left=new FormAttachment(0,margin);
  fdLogSettings.top=new FormAttachment(wSettingsGroup,margin);
  fdLogSettings.right=new FormAttachment(100,-margin);
  wLogSettings.setLayoutData(fdLogSettings);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wLogSettings);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  wTest.addListener(SWT.Selection,lsTest);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  activeAddTimestamp();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
