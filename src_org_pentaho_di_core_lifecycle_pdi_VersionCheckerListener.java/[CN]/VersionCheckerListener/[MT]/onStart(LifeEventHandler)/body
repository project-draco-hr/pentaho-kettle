{
  try {
    final KettleVersionCheckDataProvider dataProvider=new KettleVersionCheckDataProvider();
    final StringBuilder message=new StringBuilder();
    final StringBuilder version=new StringBuilder(), url=new StringBuilder();
    VersionChecker vc=new VersionChecker();
    vc.setDataProvider(dataProvider);
    vc.addResultHandler(new IVersionCheckResultHandler(){
      public void processResults(      String result){
        try {
          Document doc=XMLHandler.loadXMLString(result);
          Node vers=doc.getDocumentElement();
          Node product=XMLHandler.getNodeWithAttributeValue(vers,"product","id",dataProvider.getApplicationID());
          if (product != null) {
            Node update=XMLHandler.getSubNode(product,"update");
            try {
              FileObject html=KettleVFS.getFileObject("docs/English/welcome/kettle_version_check.html");
              String line=null;
              version.append(update.getAttributes().getNamedItem("version").getTextContent());
              url.append(XMLHandler.getTagValue(update,"downloadurl"));
              BufferedReader myInput=new BufferedReader(new InputStreamReader(html.getURL().openStream()));
              while ((line=myInput.readLine()) != null)               message.append(line);
            }
 catch (            IOException e) {
              root=new LifecycleException(e,false);
            }
          }
 else {
            log.logBasic("VersionChecker","OK",new Object[]{});
          }
        }
 catch (        KettleXMLException e) {
          log.logDebug("XML ERROR",e.getMessage(),new Object[]{});
          root=new LifecycleException(e,false);
        }
      }
    }
);
    vc.addErrorHandler(new IVersionCheckErrorHandler(){
      public void handleException(      Exception e){
        root=new LifecycleException(e,false);
      }
    }
);
    vc.performCheck(false);
    if (root != null)     throw root;
    if (message.length() > 0) {
      String smsg=message.toString().replace("$url$",url).replace("$version$",version);
      try {
        FileObject root=KettleVFS.getFileObject("docs/English/welcome");
        FileObject logo=VFS.getManager().resolveFile(root,"images/pentaho_logo.png");
        FileObject css=VFS.getManager().resolveFile(root,"images/styles-new.css");
        smsg=smsg.replace("$pentaho_logo$",logo.getURL().toURI().toString()).replace("$css$",css.getURL().toURI().toString());
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      LifeEventInfo info=new LifeEventInfo();
      info.setName(Messages.getString("VersionListener.title"));
      info.setMessage(smsg);
      info.setHint(LifeEventInfo.Hint.DISPLAY_BROWSER);
      info.setState(LifeEventInfo.State.SUCCESS);
      handler.consume(info);
    }
  }
 catch (  IOException e) {
    throw new LifecycleException(e,false);
  }
}
