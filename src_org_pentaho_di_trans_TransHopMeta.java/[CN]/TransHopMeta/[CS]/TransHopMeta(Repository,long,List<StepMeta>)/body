{
  try {
    setID(id_trans_hop);
    RowMetaAndData r=rep.getTransHop(id_trans_hop);
    long id_step_from=r.getInteger("ID_STEP_FROM",0);
    long id_step_to=r.getInteger("ID_STEP_TO",0);
    enabled=r.getBoolean("ENABLED",false);
    from_step=StepMeta.findStep(steps,id_step_from);
    if (from_step == null && id_step_from > 0) {
      StepMeta stepMeta=new StepMeta(rep,id_step_from,new ArrayList<DatabaseMeta>(),new Hashtable<String,Counter>(),new ArrayList<PartitionSchema>());
      from_step=StepMeta.findStep(steps,stepMeta.getName());
    }
    from_step.setDraw(true);
    to_step=StepMeta.findStep(steps,id_step_to);
    if (to_step == null && id_step_to > 0) {
      StepMeta stepMeta=new StepMeta(rep,id_step_to,new ArrayList<DatabaseMeta>(),new Hashtable<String,Counter>(),new ArrayList<PartitionSchema>());
      to_step=StepMeta.findStep(steps,stepMeta.getName());
    }
    to_step.setDraw(true);
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"TransHopMeta.Exception.LoadTransformationHopInfo") + id_trans_hop,dbe);
  }
}
