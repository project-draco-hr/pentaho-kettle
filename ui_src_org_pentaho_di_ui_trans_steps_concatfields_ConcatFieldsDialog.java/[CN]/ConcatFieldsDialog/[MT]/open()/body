{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlTargetFieldName=new Label(shell,SWT.RIGHT);
  wlTargetFieldName.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.TargetFieldName.Label"));
  wlTargetFieldName.setToolTipText(BaseMessages.getString(PKG,"ConcatFieldsDialog.TargetFieldName.Tooltip"));
  props.setLook(wlTargetFieldName);
  fdlTargetFieldName=new FormData();
  fdlTargetFieldName.left=new FormAttachment(0,0);
  fdlTargetFieldName.top=new FormAttachment(wStepname,margin);
  fdlTargetFieldName.right=new FormAttachment(middle,-margin);
  wlTargetFieldName.setLayoutData(fdlTargetFieldName);
  wTargetFieldName=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wTargetFieldName.setText("");
  props.setLook(wTargetFieldName);
  wTargetFieldName.addModifyListener(lsMod);
  fdTargetFieldName=new FormData();
  fdTargetFieldName.left=new FormAttachment(middle,0);
  fdTargetFieldName.top=new FormAttachment(wStepname,margin);
  fdTargetFieldName.right=new FormAttachment(100,0);
  wTargetFieldName.setLayoutData(fdTargetFieldName);
  wlTargetFieldLength=new Label(shell,SWT.RIGHT);
  wlTargetFieldLength.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.TargetFieldLength.Label"));
  wlTargetFieldLength.setToolTipText(BaseMessages.getString(PKG,"ConcatFieldsDialog.TargetFieldLength.Tooltip"));
  props.setLook(wlTargetFieldLength);
  fdlTargetFieldLength=new FormData();
  fdlTargetFieldLength.left=new FormAttachment(0,0);
  fdlTargetFieldLength.top=new FormAttachment(wTargetFieldName,margin);
  fdlTargetFieldLength.right=new FormAttachment(middle,-margin);
  wlTargetFieldLength.setLayoutData(fdlTargetFieldLength);
  wTargetFieldLength=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTargetFieldLength);
  wTargetFieldLength.addModifyListener(lsMod);
  fdTargetFieldLength=new FormData();
  fdTargetFieldLength.left=new FormAttachment(middle,0);
  fdTargetFieldLength.top=new FormAttachment(wTargetFieldName,margin);
  fdTargetFieldLength.right=new FormAttachment(100,0);
  wTargetFieldLength.setLayoutData(fdTargetFieldLength);
  wlSeparator=new Label(shell,SWT.RIGHT);
  wlSeparator.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Separator.Label"));
  props.setLook(wlSeparator);
  fdlSeparator=new FormData();
  fdlSeparator.left=new FormAttachment(0,0);
  fdlSeparator.top=new FormAttachment(wTargetFieldLength,margin);
  fdlSeparator.right=new FormAttachment(middle,-margin);
  wlSeparator.setLayoutData(fdlSeparator);
  wbSeparator=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSeparator);
  wbSeparator.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Separator.Button"));
  fdbSeparator=new FormData();
  fdbSeparator.right=new FormAttachment(100,0);
  fdbSeparator.top=new FormAttachment(wTargetFieldLength,margin);
  wbSeparator.setLayoutData(fdbSeparator);
  wbSeparator.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent se){
      wSeparator.getTextWidget().insert("\t");
    }
  }
);
  wSeparator=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSeparator);
  wSeparator.addModifyListener(lsMod);
  fdSeparator=new FormData();
  fdSeparator.left=new FormAttachment(middle,0);
  fdSeparator.top=new FormAttachment(wTargetFieldLength,margin);
  fdSeparator.right=new FormAttachment(wbSeparator,-margin);
  wSeparator.setLayoutData(fdSeparator);
  wlEnclosure=new Label(shell,SWT.RIGHT);
  wlEnclosure.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Enclosure.Label"));
  props.setLook(wlEnclosure);
  fdlEnclosure=new FormData();
  fdlEnclosure.left=new FormAttachment(0,0);
  fdlEnclosure.top=new FormAttachment(wSeparator,margin);
  fdlEnclosure.right=new FormAttachment(middle,-margin);
  wlEnclosure.setLayoutData(fdlEnclosure);
  wEnclosure=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEnclosure);
  wEnclosure.addModifyListener(lsMod);
  fdEnclosure=new FormData();
  fdEnclosure.left=new FormAttachment(middle,0);
  fdEnclosure.top=new FormAttachment(wSeparator,margin);
  fdEnclosure.right=new FormAttachment(100,0);
  wEnclosure.setLayoutData(fdEnclosure);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wTabFolder.setSimple(false);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.FieldsTab.TabTitle"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  Composite wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wGet=new Button(wFieldsComp,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"System.Button.GetFields"));
  wGet.setToolTipText(BaseMessages.getString(PKG,"System.Tooltip.GetFields"));
  wMinWidth=new Button(wFieldsComp,SWT.PUSH);
  wMinWidth.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.MinWidth.Button"));
  wMinWidth.setToolTipText(BaseMessages.getString(PKG,"ConcatFieldsDialog.MinWidth.Tooltip"));
  setButtonPositions(new Button[]{wGet,wMinWidth},margin,null);
  final int FieldsCols=10;
  final int FieldsRows=input.getOutputFields().length;
  String[] dats=Const.getDateFormats();
  String[] nums=Const.getNumberFormats();
  int totsize=dats.length + nums.length;
  String[] formats=new String[totsize];
  for (int x=0; x < dats.length; x++) {
    formats[x]=dats[x];
  }
  for (int x=0; x < nums.length; x++) {
    formats[dats.length + x]=nums[x];
  }
  colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.NameColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  colinf[1]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.TypeColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes());
  colinf[2]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.FormatColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,formats);
  colinf[3]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.LengthColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[4]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.PrecisionColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[5]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.CurrencyColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[6]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.DecimalColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[7]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.GroupColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[8]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.TrimTypeColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.trimTypeDesc,true);
  colinf[9]=new ColumnInfo(BaseMessages.getString(PKG,"ConcatFieldsDialog.NullColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  wFields=new TableView(transMeta,wFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wGet,-margin);
  wFields.setLayoutData(fdFields);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  wAdvancedTab=new CTabItem(wTabFolder,SWT.NONE);
  wAdvancedTab.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.AdvancedTab.TabTitle"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  Composite wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wlRemoveSelectedFields=new Label(wContentComp,SWT.RIGHT);
  wlRemoveSelectedFields.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.RemoveSelectedFields.Label"));
  wlRemoveSelectedFields.setToolTipText(BaseMessages.getString(PKG,"ConcatFieldsDialog.RemoveSelectedFields.Tooltip"));
  props.setLook(wlRemoveSelectedFields);
  fdlRemoveSelectedFields=new FormData();
  fdlRemoveSelectedFields.left=new FormAttachment(0,0);
  fdlRemoveSelectedFields.top=new FormAttachment(0,0);
  fdlRemoveSelectedFields.right=new FormAttachment(middle,-margin);
  wlRemoveSelectedFields.setLayoutData(fdlRemoveSelectedFields);
  wRemoveSelectedFields=new Button(wContentComp,SWT.CHECK);
  props.setLook(wRemoveSelectedFields);
  fdRemoveSelectedFields=new FormData();
  fdRemoveSelectedFields.left=new FormAttachment(middle,0);
  fdRemoveSelectedFields.top=new FormAttachment(0,0);
  fdRemoveSelectedFields.right=new FormAttachment(100,0);
  wRemoveSelectedFields.setLayoutData(fdRemoveSelectedFields);
  wRemoveSelectedFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlEnclForced=new Label(wContentComp,SWT.RIGHT);
  wlEnclForced.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.EnclForced.Label"));
  props.setLook(wlEnclForced);
  fdlEnclForced=new FormData();
  fdlEnclForced.left=new FormAttachment(0,0);
  fdlEnclForced.top=new FormAttachment(wRemoveSelectedFields,margin);
  fdlEnclForced.right=new FormAttachment(middle,-margin);
  wlEnclForced.setLayoutData(fdlEnclForced);
  wEnclForced=new Button(wContentComp,SWT.CHECK);
  props.setLook(wEnclForced);
  fdEnclForced=new FormData();
  fdEnclForced.left=new FormAttachment(middle,0);
  fdEnclForced.top=new FormAttachment(wRemoveSelectedFields,margin);
  fdEnclForced.right=new FormAttachment(100,0);
  wEnclForced.setLayoutData(fdEnclForced);
  wEnclForced.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlDisableEnclosureFix=new Label(wContentComp,SWT.RIGHT);
  wlDisableEnclosureFix.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.DisableEnclosureFix.Label"));
  props.setLook(wlDisableEnclosureFix);
  fdlDisableEnclosureFix=new FormData();
  fdlDisableEnclosureFix.left=new FormAttachment(0,0);
  fdlDisableEnclosureFix.top=new FormAttachment(wEnclForced,margin);
  fdlDisableEnclosureFix.right=new FormAttachment(middle,-margin);
  wlDisableEnclosureFix.setLayoutData(fdlDisableEnclosureFix);
  wDisableEnclosureFix=new Button(wContentComp,SWT.CHECK);
  props.setLook(wDisableEnclosureFix);
  fdDisableEnclosureFix=new FormData();
  fdDisableEnclosureFix.left=new FormAttachment(middle,0);
  fdDisableEnclosureFix.top=new FormAttachment(wEnclForced,margin);
  fdDisableEnclosureFix.right=new FormAttachment(100,0);
  wDisableEnclosureFix.setLayoutData(fdDisableEnclosureFix);
  wDisableEnclosureFix.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlHeader=new Label(wContentComp,SWT.RIGHT);
  wlHeader.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Header.Label"));
  props.setLook(wlHeader);
  fdlHeader=new FormData();
  fdlHeader.left=new FormAttachment(0,0);
  fdlHeader.top=new FormAttachment(wDisableEnclosureFix,margin);
  fdlHeader.right=new FormAttachment(middle,-margin);
  wlHeader.setLayoutData(fdlHeader);
  wHeader=new Button(wContentComp,SWT.CHECK);
  props.setLook(wHeader);
  fdHeader=new FormData();
  fdHeader.left=new FormAttachment(middle,0);
  fdHeader.top=new FormAttachment(wDisableEnclosureFix,margin);
  fdHeader.right=new FormAttachment(100,0);
  wHeader.setLayoutData(fdHeader);
  wHeader.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlFooter=new Label(wContentComp,SWT.RIGHT);
  wlFooter.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Footer.Label"));
  props.setLook(wlFooter);
  fdlFooter=new FormData();
  fdlFooter.left=new FormAttachment(0,0);
  fdlFooter.top=new FormAttachment(wHeader,margin);
  fdlFooter.right=new FormAttachment(middle,-margin);
  wlFooter.setLayoutData(fdlFooter);
  wFooter=new Button(wContentComp,SWT.CHECK);
  props.setLook(wFooter);
  fdFooter=new FormData();
  fdFooter.left=new FormAttachment(middle,0);
  fdFooter.top=new FormAttachment(wHeader,margin);
  fdFooter.right=new FormAttachment(100,0);
  wFooter.setLayoutData(fdFooter);
  wFooter.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlEncoding=new Label(wContentComp,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(wFooter,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(wFooter,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPad=new Label(wContentComp,SWT.RIGHT);
  wlPad.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.Pad.Label"));
  props.setLook(wlPad);
  fdlPad=new FormData();
  fdlPad.left=new FormAttachment(0,0);
  fdlPad.top=new FormAttachment(wEncoding,margin);
  fdlPad.right=new FormAttachment(middle,-margin);
  wlPad.setLayoutData(fdlPad);
  wPad=new Button(wContentComp,SWT.CHECK);
  props.setLook(wPad);
  fdPad=new FormData();
  fdPad.left=new FormAttachment(middle,0);
  fdPad.top=new FormAttachment(wEncoding,margin);
  fdPad.right=new FormAttachment(100,0);
  wPad.setLayoutData(fdPad);
  wPad.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlFastDump=new Label(wContentComp,SWT.RIGHT);
  wlFastDump.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.FastDump.Label"));
  props.setLook(wlFastDump);
  fdlFastDump=new FormData();
  fdlFastDump.left=new FormAttachment(0,0);
  fdlFastDump.top=new FormAttachment(wPad,margin);
  fdlFastDump.right=new FormAttachment(middle,-margin);
  wlFastDump.setLayoutData(fdlFastDump);
  wFastDump=new Button(wContentComp,SWT.CHECK);
  props.setLook(wFastDump);
  fdFastDump=new FormData();
  fdFastDump.left=new FormAttachment(middle,0);
  fdFastDump.top=new FormAttachment(wPad,margin);
  fdFastDump.right=new FormAttachment(100,0);
  wFastDump.setLayoutData(fdFastDump);
  wFastDump.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setFlags();
    }
  }
);
  wlSplitEvery=new Label(wContentComp,SWT.RIGHT);
  wlSplitEvery.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.SplitEvery.Label"));
  props.setLook(wlSplitEvery);
  fdlSplitEvery=new FormData();
  fdlSplitEvery.left=new FormAttachment(0,0);
  fdlSplitEvery.top=new FormAttachment(wFastDump,margin);
  fdlSplitEvery.right=new FormAttachment(middle,-margin);
  wlSplitEvery.setLayoutData(fdlSplitEvery);
  wSplitEvery=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSplitEvery);
  wSplitEvery.addModifyListener(lsMod);
  fdSplitEvery=new FormData();
  fdSplitEvery.left=new FormAttachment(middle,0);
  fdSplitEvery.top=new FormAttachment(wFastDump,margin);
  fdSplitEvery.right=new FormAttachment(100,0);
  wSplitEvery.setLayoutData(fdSplitEvery);
  wlEndedLine=new Label(wContentComp,SWT.RIGHT);
  wlEndedLine.setText(BaseMessages.getString(PKG,"ConcatFieldsDialog.EndedLine.Label"));
  props.setLook(wlEndedLine);
  fdlEndedLine=new FormData();
  fdlEndedLine.left=new FormAttachment(0,0);
  fdlEndedLine.top=new FormAttachment(wSplitEvery,margin);
  fdlEndedLine.right=new FormAttachment(middle,-margin);
  wlEndedLine.setLayoutData(fdlEndedLine);
  wEndedLine=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEndedLine);
  wEndedLine.addModifyListener(lsMod);
  fdEndedLine=new FormData();
  fdEndedLine.left=new FormAttachment(middle,0);
  fdEndedLine.top=new FormAttachment(wSplitEvery,margin);
  fdEndedLine.right=new FormAttachment(100,0);
  wEndedLine.setLayoutData(fdEndedLine);
  fdAdvancedComp=new FormData();
  fdAdvancedComp.left=new FormAttachment(0,0);
  fdAdvancedComp.top=new FormAttachment(0,0);
  fdAdvancedComp.right=new FormAttachment(100,0);
  fdAdvancedComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdAdvancedComp);
  wContentComp.layout();
  wAdvancedTab.setControl(wContentComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wEnclosure,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsMinWidth=new Listener(){
    public void handleEvent(    Event e){
      setMinimalWidth();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wMinWidth.addListener(SWT.Selection,lsMinWidth);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wTargetFieldName.addSelectionListener(lsDef);
  wTargetFieldLength.addSelectionListener(lsDef);
  wSeparator.addSelectionListener(lsDef);
  wTargetFieldName.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wTargetFieldName.setToolTipText(transMeta.environmentSubstitute(wTargetFieldName.getText()));
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
