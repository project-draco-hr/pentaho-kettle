{
  if (Utils.isEmpty(wStepname.getText())) {
    return;
  }
  input.setMainStreamField(wMainStreamField.getText());
  input.setLookupField(wLookupField.getText());
  input.setAlgorithmType(FuzzyMatchMeta.getAlgorithmTypeByDesc(wAlgorithm.getText()));
  input.setCaseSensitive(wcaseSensitive.getSelection());
  input.setGetCloserValue(wgetCloserValue.getSelection());
  input.setMaximalValue(wmaxValue.getText());
  input.setMinimalValue(wminValue.getText());
  input.setOutputMatchField(wmatchField.getText());
  input.setOutputValueField(wvalueField.getText());
  input.setSeparator(wseparator.getText());
  int nrvalues=wReturn.nrNonEmpty();
  input.allocate(nrvalues);
  if (isDebug()) {
    logDebug(BaseMessages.getString(PKG,"FuzzyMatchDialog.Log.FoundFields",nrvalues + ""));
  }
  for (int i=0; i < nrvalues; i++) {
    TableItem item=wReturn.getNonEmpty(i);
    input.getValue()[i]=item.getText(1);
    input.getValueName()[i]=item.getText(2);
    if (input.getValueName()[i] == null || input.getValueName()[i].length() == 0) {
      input.getValueName()[i]=input.getValue()[i];
    }
  }
  StreamInterface infoStream=input.getStepIOMeta().getInfoStreams().get(0);
  infoStream.setStepMeta(transMeta.findStep(wStep.getText()));
  if (infoStream.getStepMeta() == null) {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    if (Utils.isEmpty(wStep.getText())) {
      mb.setMessage(BaseMessages.getString(PKG,"FuzzyMatchDialog.NotStepSpecified.DialogMessage",wStep.getText()));
    }
 else {
      mb.setMessage(BaseMessages.getString(PKG,"FuzzyMatchDialog.StepCanNotFound.DialogMessage",wStep.getText()));
    }
    mb.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.StepCanNotFound.DialogTitle"));
    mb.open();
  }
  stepname=wStepname.getText();
  dispose();
}
