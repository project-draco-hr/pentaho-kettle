{
  JobLogTable table=new JobLogTable();
  table.fields.add(new LogTableField(ID.ID_BATCH.id,true,false,"ID_BATCH",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.BatchID"),ValueMetaInterface.TYPE_INTEGER,8));
  table.fields.add(new LogTableField(ID.CHANNEL_ID.id,false,false,"CHANNEL_ID",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.ChannelID"),ValueMetaInterface.TYPE_STRING,255));
  table.fields.add(new LogTableField(ID.JOBNAME.id,true,false,"TRANSNAME",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.TransName"),ValueMetaInterface.TYPE_STRING,255));
  table.fields.add(new LogTableField(ID.STATUS.id,true,false,"STATUS",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.Status"),ValueMetaInterface.TYPE_STRING,15));
  table.fields.add(new LogTableField(ID.LINES_READ.id,true,false,"LINES_READ",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LinesRead"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.LINES_WRITTEN.id,true,false,"LINES_WRITTEN",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LinesWritten"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.LINES_UPDATED.id,true,false,"LINES_UPDATED",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LinesUpdated"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.LINES_INPUT.id,true,false,"LINES_INPUT",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LinesInput"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.LINES_OUTPUT.id,true,false,"LINES_OUTPUT",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LinesOutput"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.LINES_REJECTED.id,false,false,"LINES_REJECTED",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LinesRejected"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.ERRORS.id,true,false,"ERRORS",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.Errors"),ValueMetaInterface.TYPE_INTEGER,18));
  table.fields.add(new LogTableField(ID.STARTDATE.id,true,false,"STARTDATE",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.StartDateRange"),ValueMetaInterface.TYPE_DATE,-1));
  table.fields.add(new LogTableField(ID.ENDDATE.id,true,false,"ENDDATE",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.EndDateRange"),ValueMetaInterface.TYPE_DATE,-1));
  table.fields.add(new LogTableField(ID.LOGDATE.id,true,false,"LOGDATE",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LogDate"),ValueMetaInterface.TYPE_DATE,-1));
  table.fields.add(new LogTableField(ID.DEPDATE.id,true,false,"DEPDATE",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.DepDate"),ValueMetaInterface.TYPE_DATE,-1));
  table.fields.add(new LogTableField(ID.REPLAYDATE.id,true,false,"REPLAYDATE",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.ReplayDate"),ValueMetaInterface.TYPE_DATE,-1));
  table.fields.add(new LogTableField(ID.LOG_FIELD.id,true,false,"LOG_FIELD",BaseMessages.getString(PKG,"TransLogTable.FieldDescription.LogField"),ValueMetaInterface.TYPE_STRING,DatabaseMeta.CLOB_LENGTH));
  table.findField(ID.ID_BATCH).setKey(true);
  return table;
}
