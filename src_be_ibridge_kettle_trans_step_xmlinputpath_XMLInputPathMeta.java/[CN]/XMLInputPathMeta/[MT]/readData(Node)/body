{
  try {
    includeFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"include"));
    filenameField=XMLHandler.getTagValue(stepnode,"include_field");
    includeRowNumber="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"rownum"));
    rowNumberField=XMLHandler.getTagValue(stepnode,"rownum_field");
    encoding=XMLHandler.getTagValue(stepnode,"encoding");
    Node filenode=XMLHandler.getSubNode(stepnode,"file");
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrFiles=XMLHandler.countNodes(filenode,"name");
    int nrFields=XMLHandler.countNodes(fields,"field");
    allocate(nrFiles,nrFields);
    for (int i=0; i < nrFiles; i++) {
      Node filenamenode=XMLHandler.getSubNodeByNr(filenode,"name",i);
      Node filemasknode=XMLHandler.getSubNodeByNr(filenode,"filemask",i);
      fileName[i]=XMLHandler.getNodeValue(filenamenode);
      fileMask[i]=XMLHandler.getNodeValue(filemasknode);
    }
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      XMLInputPathField field=new XMLInputPathField(fnode);
      inputFields[i]=field;
    }
    rowLimit=Const.toLong(XMLHandler.getTagValue(stepnode,"limit"),0L);
    loopxpath=XMLHandler.getTagValue(stepnode,"loopxpath");
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
