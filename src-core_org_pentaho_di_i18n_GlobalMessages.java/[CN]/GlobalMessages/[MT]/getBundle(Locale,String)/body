{
  String filename=buildHashKey(locale,packageName);
  filename="/" + filename.replace('.','/') + ".properties";
  try {
    ResourceBundle bundle=locales.get(filename);
    if (bundle == null) {
      InputStream inputStream=LanguageChoice.getInstance().getClass().getResourceAsStream(filename);
      if (inputStream == null) {
        try {
          Class<?> stepLoaderClass=Class.forName("org.pentaho.di.trans.StepLoader");
          Method getInstanceMethod=stepLoaderClass.getMethod("getInstance",new Class[0]);
          LoaderInputStreamProvider inputStreamProvider=(LoaderInputStreamProvider)getInstanceMethod.invoke(null,new Object[0]);
          inputStream=inputStreamProvider.getInputStreamForFile(filename);
        }
 catch (        Exception e) {
        }
      }
      if (inputStream == null) {
        try {
          Class<?> stepLoaderClass=Class.forName("org.pentaho.di.job.JobEntryLoader");
          Method getInstanceMethod=stepLoaderClass.getMethod("getInstance",new Class[0]);
          LoaderInputStreamProvider inputStreamProvider=(LoaderInputStreamProvider)getInstanceMethod.invoke(null,new Object[0]);
          inputStream=inputStreamProvider.getInputStreamForFile(filename);
        }
 catch (        Exception e) {
        }
      }
      if (inputStream != null) {
        bundle=new PropertyResourceBundle(inputStream);
        locales.put(filename,bundle);
      }
 else {
        throw new MissingResourceException("Unable to find properties file [" + filename + "]",locale.toString(),packageName);
      }
    }
    return bundle;
  }
 catch (  IOException e) {
    throw new MissingResourceException("Unable to find properties file [" + filename + "] : "+ e.toString(),locale.toString(),packageName);
  }
}
