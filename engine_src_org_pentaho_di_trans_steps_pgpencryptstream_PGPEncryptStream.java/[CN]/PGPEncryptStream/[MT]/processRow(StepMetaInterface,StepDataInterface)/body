{
  meta=(PGPEncryptStreamMeta)smi;
  data=(PGPEncryptStreamData)sdi;
  boolean sendToErrorRow=false;
  String errorMessage=null;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  try {
    if (first) {
      first=false;
      data.previousRowMeta=getInputRowMeta().clone();
      data.NrPrevFields=data.previousRowMeta.size();
      data.outputRowMeta=data.previousRowMeta;
      meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
      if (Const.isEmpty(meta.getStreamField())) {
        throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Error.DataStreamFieldMissing"));
      }
      if (meta.isKeynameInField()) {
        String keyField=meta.getKeynameFieldName();
        if (Const.isEmpty(keyField)) {
          throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Error.KeyNameFieldMissing"));
        }
        data.indexOfKeyName=data.previousRowMeta.indexOfValue(keyField);
        if (data.indexOfKeyName < 0) {
          throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Exception.CouldnotFindField",meta.getStreamField()));
        }
      }
 else {
        data.keyName=environmentSubstitute(meta.getKeyName());
        if (Const.isEmpty(data.keyName)) {
          throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Error.KeyNameMissing"));
        }
      }
      if (data.indexOfField < 0) {
        data.indexOfField=data.previousRowMeta.indexOfValue(meta.getStreamField());
        if (data.indexOfField < 0) {
          throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Exception.CouldnotFindField",meta.getStreamField()));
        }
      }
    }
    Object[] outputRow=RowDataUtil.allocateRowData(data.outputRowMeta.size());
    for (int i=0; i < data.NrPrevFields; i++) {
      outputRow[i]=r[i];
    }
    if (meta.isKeynameInField()) {
      data.keyName=data.previousRowMeta.getString(r,data.indexOfKeyName);
      if (Const.isEmpty(data.keyName)) {
        throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Error.KeyNameMissing"));
      }
    }
    String dataToEncrypt=data.previousRowMeta.getString(r,data.indexOfField);
    if (Const.isEmpty(dataToEncrypt)) {
      throw new KettleException(BaseMessages.getString(PKG,"PGPEncryptStream.Error.DataToEncryptEmpty"));
    }
    String encryptedData=data.gpg.encrypt(dataToEncrypt,data.keyName);
    outputRow[data.NrPrevFields]=encryptedData;
    putRow(data.outputRowMeta,outputRow);
    if (log.isRowLevel()) {
      logRowlevel(BaseMessages.getString(PKG,"PGPEncryptStream.LineNumber",getLinesRead() + " : " + getInputRowMeta().getString(r)));
    }
  }
 catch (  Exception e) {
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(BaseMessages.getString(PKG,"PGPEncryptStream.ErrorInStepRunning") + e.getMessage());
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,meta.getResultFieldName(),"PGPEncryptStreamO01");
    }
  }
  return true;
}
