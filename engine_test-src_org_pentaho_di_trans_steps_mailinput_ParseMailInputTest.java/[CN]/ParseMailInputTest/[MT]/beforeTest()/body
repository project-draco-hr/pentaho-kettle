{
  message=Mockito.mock(Message.class);
  MailConnection conn=mock(MailConnection.class);
  when(conn.getMessageBody(any(Message.class))).thenReturn(MSG_BODY);
  when(conn.getFolderName()).thenReturn(FLD_NAME);
  when(conn.getAttachedFilesCount(any(Message.class),any(Pattern.class))).thenReturn(ATTCH_COUNT);
  when(conn.getMessageBodyContentType(any(Message.class))).thenReturn(CNTNT_TYPE);
  data=mock(MailInputData.class);
  data.mailConn=conn;
  mailInput=new MailInput(stepMockHelper.stepMeta,data,0,stepMockHelper.transMeta,stepMockHelper.trans);
  Address addrFrom1=mock(Address.class);
  when(addrFrom1.toString()).thenReturn(FROM1);
  Address addrFrom2=mock(Address.class);
  when(addrFrom2.toString()).thenReturn(FROM2);
  Address addrRep1=mock(Address.class);
  when(addrRep1.toString()).thenReturn(REP1);
  Address addrRep2=mock(Address.class);
  when(addrRep2.toString()).thenReturn(REP2);
  Address allRec1=mock(Address.class);
  when(allRec1.toString()).thenReturn(REC1);
  Address allRec2=mock(Address.class);
  when(allRec2.toString()).thenReturn(REC2);
  Address[] adrFr={addrFrom1,addrFrom2};
  Address[] adrRep={addrRep1,addrRep2};
  Address[] adrRecip={allRec1,allRec2};
  message=Mockito.mock(Message.class);
  when(message.getMessageNumber()).thenReturn(MSG_NUMB);
  when(message.getSubject()).thenReturn(SUBJ);
  when(message.getFrom()).thenReturn(adrFr);
  when(message.getReplyTo()).thenReturn(adrRep);
  when(message.getAllRecipients()).thenReturn(adrRecip);
  when(message.getDescription()).thenReturn(DESC);
  when(message.getReceivedDate()).thenReturn(DATE1);
  when(message.getSentDate()).thenReturn(DATE2);
  when(message.getContentType()).thenReturn(CNTNT_TYPE_EMAIL);
  when(message.getSize()).thenReturn(CNTNT_SIZE);
  Header ex1=new Header(HDR_EX1,HDR_EX1V);
  Header ex2=new Header(HDR_EX2,HDR_EX2V);
  when(message.getMatchingHeaders(AdditionalMatchers.aryEq(new String[]{HDR_EX1}))).thenReturn(getEnum(new Header[]{ex1}));
  when(message.getMatchingHeaders(AdditionalMatchers.aryEq(new String[]{HDR_EX2}))).thenReturn(getEnum(new Header[]{ex2}));
  when(message.getMatchingHeaders(AdditionalMatchers.aryEq(new String[]{HDR_EX1,HDR_EX2}))).thenReturn(getEnum(new Header[]{ex1,ex2}));
  when(message.getHeader(eq(HDR_EX1))).thenReturn(new String[]{ex1.getValue()});
  when(message.getHeader(eq(HDR_EX2))).thenReturn(new String[]{ex2.getValue()});
}
