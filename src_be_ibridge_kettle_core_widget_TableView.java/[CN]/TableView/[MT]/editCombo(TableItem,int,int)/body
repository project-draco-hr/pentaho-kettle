{
  if (columns[colnr - 1].getSelectionAdapter() != null) {
    Event e=new Event();
    e.widget=this;
    e.x=colnr;
    e.y=rownr;
    columns[colnr - 1].getSelectionAdapter().widgetSelected(new SelectionEvent(e));
    return;
  }
  before_edit=getItemText(row);
  field_changed=false;
  ColumnInfo colinfo=columns[colnr - 1];
  combo=new CCombo(cursor,colinfo.isReadOnly() ? SWT.READ_ONLY : SWT.NONE);
  props.setLook(combo,Props.WIDGET_STYLE_TABLE);
  combo.addTraverseListener(lsTraverse);
  combo.addModifyListener(lsModCombo);
  combo.addFocusListener(lsFocusCombo);
  String opt[]=colinfo.getComboValues();
  for (int i=0; i < opt.length; i++)   combo.add(opt[i]);
  combo.setText(row.getText(colnr));
  if (lsMod != null)   combo.addModifyListener(lsMod);
  combo.addModifyListener(lsUndo);
  String tooltip=colinfo.getToolTip();
  if (tooltip != null)   combo.setToolTipText(tooltip);
 else   combo.setToolTipText("");
  combo.setVisible(true);
  combo.addKeyListener(lsKeyCombo);
  int width=tablecolumn[colnr].getWidth();
  int height=20;
  editor.horizontalAlignment=SWT.LEFT;
  editor.verticalAlignment=SWT.TOP;
  editor.minimumWidth=width;
  editor.minimumHeight=height;
  editor.layout();
  editor.setEditor(combo);
  combo.setFocus();
  combo.setSize(width,height);
  combo.layout();
}
