{
  before_edit=getItemText(row);
  field_changed=false;
  if (columns[colnr - 1].isReadOnly()) {
    return;
  }
  if (text != null && !text.isDisposed())   text.dispose();
  text=new Text(table,SWT.NONE);
  props.setLook(text,Props.WIDGET_STYLE_TABLE);
  text.addTraverseListener(lsTraverse);
  text.addFocusListener(lsFocusText);
  String content=row.getText(colnr) + (extra != 0 ? "" + extra : "");
  text.setText(content);
  if (lsMod != null)   text.addModifyListener(lsMod);
  text.addModifyListener(lsUndo);
  String tooltip=columns[colnr - 1].getToolTip();
  if (tooltip != null)   text.setToolTipText(tooltip);
 else   text.setToolTipText("");
  text.setSelection(content.length());
  text.addKeyListener(lsKeyText);
  final int column_number=colnr;
  text.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent me){
      String str=text.getText();
      int strmax=dummy_gc.textExtent(str,SWT.DRAW_TAB | SWT.DRAW_DELIMITER).x + 5;
      int colmax=tablecolumn[column_number].getWidth();
      if (strmax > colmax)       tablecolumn[column_number].setWidth(strmax + 20);
    }
  }
);
  int width=tablecolumn[colnr].getWidth();
  int height=30;
  editor.horizontalAlignment=SWT.LEFT;
  editor.grabHorizontal=true;
  if (select_text)   text.selectAll();
  editor.setEditor(text,row,colnr);
  text.setFocus();
  text.setSize(width,height);
  editor.layout();
}
