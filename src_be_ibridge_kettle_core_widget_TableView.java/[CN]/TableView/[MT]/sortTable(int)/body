{
  if (sortfield == colnr) {
    sort_desc=(!sort_desc);
  }
 else {
    sortfield=colnr;
    sort_desc=false;
  }
  TableItem[] items=table.getItems();
  Vector v=new Vector();
  for (int i=0; i < items.length; i++) {
    TableItem item=items[i];
    Row r=new Row();
    Color bg=item.getBackground();
    Value colorValue=new Value("bg",(long)((bg.getRed() << 16) + (bg.getGreen() << 8) + (bg.getBlue())));
    r.addValue(colorValue);
    for (int j=0; j < table.getColumnCount(); j++) {
      Value value=new Value("Col#" + j,item.getText(j));
      r.addValue(value);
    }
    v.addElement(r);
  }
  quickSort(v);
  table.removeAll();
  Enumeration en=v.elements();
  while (en.hasMoreElements()) {
    Row r=(Row)en.nextElement();
    TableItem item=new TableItem(table,SWT.NONE);
    Value colorValue=r.getValue(0);
    int red=(int)((colorValue.getInteger() & 0xFF0000) >> 16);
    int green=(int)((colorValue.getInteger() & 0x00FF00) >> 8);
    int blue=(int)((colorValue.getInteger() & 0x0000FF));
    Color bg=new Color(parent.getDisplay(),red,green,blue);
    item.setBackground(bg);
    bg.dispose();
    for (int i=1; i < r.size(); i++) {
      Value value=r.getValue(i);
      item.setText(i - 1,value.getString());
    }
  }
}
