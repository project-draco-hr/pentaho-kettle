{
  before_edit=getItemText(row);
  field_changed=false;
  if (columns[colnr - 1].isReadOnly()) {
    return;
  }
  button=new Button(table,SWT.PUSH);
  props.setLook(button,Props.WIDGET_STYLE_TABLE);
  button.setText(columns[colnr - 1].getButtonText());
  Image image=new Image(parent.getDisplay(),getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "edittext.png"));
  button.setImage(image);
  SelectionAdapter selAdpt=columns[colnr - 1].getSelectionAdapter();
  if (selAdpt != null)   button.addSelectionListener(selAdpt);
  button_rownr=rownr;
  button_colnr=colnr;
  button_content=row.getText(colnr);
  String tooltip=columns[colnr - 1].getToolTip();
  if (tooltip != null)   button.setToolTipText(tooltip);
 else   button.setToolTipText("");
  button.addTraverseListener(lsTraverse);
  button.addTraverseListener(new TraverseListener(){
    public void keyTraversed(    TraverseEvent arg0){
      closeActiveButton();
    }
  }
);
  editor.horizontalAlignment=SWT.LEFT;
  editor.verticalAlignment=SWT.TOP;
  editor.grabHorizontal=false;
  editor.grabVertical=false;
  Point size=button.computeSize(SWT.DEFAULT,SWT.DEFAULT);
  editor.minimumWidth=size.x;
  editor.minimumHeight=size.y - 2;
  editor.layout();
  editor.setEditor(button);
  button.setFocus();
}
