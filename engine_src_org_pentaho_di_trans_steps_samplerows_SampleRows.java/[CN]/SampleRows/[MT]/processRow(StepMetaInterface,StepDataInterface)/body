{
  meta=(SampleRowsMeta)smi;
  data=(SampleRowsData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    String realRange=environmentSubstitute(meta.getLinesRange());
    data.addlineField=(!Const.isEmpty(environmentSubstitute(meta.getLineNumberField())));
    data.previousRowMeta=getInputRowMeta().clone();
    data.NrPrevFields=data.previousRowMeta.size();
    data.outputRowMeta=data.previousRowMeta;
    if (data.addlineField) {
      meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    }
    String[] rangePart=realRange.split(",");
    for (int i=0; i < rangePart.length; i++) {
      if (rangePart[i].matches("\\d+")) {
        String part=rangePart[i];
        if (log.isDebug()) {
          logDebug(BaseMessages.getString(PKG,"SampleRows.Log.RangeValue",part));
        }
        int vpart=Integer.valueOf(part);
        data.range.add(vpart);
      }
 else       if (rangePart[i].matches("\\d+\\.\\.\\d+")) {
        String[] rangeMultiPart=rangePart[i].split("\\.\\.");
        for (int j=Integer.valueOf(rangeMultiPart[0]); j < Integer.valueOf(rangeMultiPart[1]) + 1; j++) {
          if (log.isDebug()) {
            logDebug(BaseMessages.getString(PKG,"SampleRows.Log.RangeValue","" + j));
          }
          int vpart=j;
          data.range.add(vpart);
        }
      }
    }
    if (data.range.size() == 0) {
      return false;
    }
  }
  if (data.addlineField) {
    data.outputRow=RowDataUtil.allocateRowData(data.outputRowMeta.size());
    for (int i=0; i < data.NrPrevFields; i++) {
      data.outputRow[i]=r[i];
    }
  }
 else {
    data.outputRow=r;
  }
  if (data.range.contains((int)getLinesRead())) {
    if (data.addlineField) {
      data.outputRow[data.NrPrevFields]=getLinesRead();
    }
    putRow(data.outputRowMeta,data.outputRow);
    numRowsSampled++;
    if (log.isRowLevel()) {
      logRowlevel(BaseMessages.getString(PKG,"SampleRows.Log.LineNumber",getLinesRead() + " : " + getInputRowMeta().getString(r)));
    }
  }
  return numRowsSampled < data.range.size();
}
