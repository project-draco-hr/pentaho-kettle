{
  meta=(SampleRowsMeta)smi;
  data=(SampleRowsData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    String realRange=environmentSubstitute(meta.getLinesRange());
    data.addlineField=(!Const.isEmpty(environmentSubstitute(meta.getLineNumberField())));
    data.previousRowMeta=getInputRowMeta().clone();
    data.NrPrevFields=data.previousRowMeta.size();
    data.outputRowMeta=data.previousRowMeta;
    if (data.addlineField) {
      meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    }
    String[] rangePart=realRange.split(",");
    ImmutableRangeSet.Builder<Integer> setBuilder=ImmutableRangeSet.builder();
    for (    String part : rangePart) {
      if (part.matches("\\d+")) {
        if (log.isDebug()) {
          logDebug(BaseMessages.getString(PKG,"SampleRows.Log.RangeValue",part));
        }
        int vpart=Integer.valueOf(part);
        setBuilder.add(Range.singleton(vpart));
      }
 else       if (part.matches("\\d+\\.\\.\\d+")) {
        String[] rangeMultiPart=part.split("\\.\\.");
        Integer start=Integer.valueOf(rangeMultiPart[0]);
        Integer end=Integer.valueOf(rangeMultiPart[1]);
        Range<Integer> range=Range.closed(start,end);
        if (log.isDebug()) {
          logDebug(BaseMessages.getString(PKG,"SampleRows.Log.RangeValue",range));
        }
        setBuilder.add(range);
      }
    }
    data.rangeSet=setBuilder.build();
    if (data.rangeSet.isEmpty()) {
      setOutputDone();
      return false;
    }
  }
  if (data.addlineField) {
    data.outputRow=RowDataUtil.allocateRowData(data.outputRowMeta.size());
    for (int i=0; i < data.NrPrevFields; i++) {
      data.outputRow[i]=r[i];
    }
  }
 else {
    data.outputRow=r;
  }
  int linesRead=(int)getLinesRead();
  if (data.rangeSet.contains(linesRead)) {
    if (data.addlineField) {
      data.outputRow[data.NrPrevFields]=getLinesRead();
    }
    putRow(data.outputRowMeta,data.outputRow);
    if (log.isRowLevel()) {
      logRowlevel(BaseMessages.getString(PKG,"SampleRows.Log.LineNumber",linesRead + " : " + getInputRowMeta().getString(r)));
    }
  }
  boolean done=linesRead >= data.rangeSet.span().upperEndpoint();
  if (done) {
    setOutputDone();
  }
  return !done;
}
