{
  newTab.removeAll();
  String tableName=tablename;
  String st[]=tableName.split("\\.",2);
  if (st.length > 1) {
    tableName=st[1];
  }
  if (dbMeta.isInNeedOfQuoting(tablename))   tableName=dbMeta.quoteField(tableName);
  String sql=dbMeta.getSQLQueryFields(tableName);
  Database db=new Database(this,dbMeta);
  RowMetaInterface result=null;
  try {
    db.connect();
    result=db.getQueryFields(sql,false);
    if (result != null) {
      List<String> pka=new ArrayList<String>();
      String[] pk=db.getPrimaryKeyColumnNames(tableName);
      for (int k=0; k < pk.length; k++) {
        pka.add(pk[k]);
      }
      for (int c=0; c < result.size(); c++) {
        ValueMetaInterface v=result.getValueMeta(c);
        if (v.getName() != null) {
          TreeItem newCol=new TreeItem(newTab,SWT.NONE);
          if (pka.contains(v.getName())) {
            newCol.setImage(GUIResource.getInstance().getImageKeySmall());
          }
 else           newCol.setImage(GUIResource.getInstance().getImageColumnSmall());
          newCol.setText(v.getName() + " (" + v.getTypeDesc()+ " "+ (v.getLength() < 0 ? "" : "" + v.getLength())+ ")");
        }
      }
    }
    newTab.setExpanded(true);
  }
 catch (  Exception e) {
    new ErrorDialog(shell,"Error","Error getting colums from table [" + tablename + "]",e);
  }
 finally {
    db.disconnect();
  }
}
