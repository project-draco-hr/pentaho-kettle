{
  List<String> attributes=Arrays.asList("localHosts","localhostPort","schemaName","tableName","errorTableName","gploadPath","controlFile","dataFile","logFile","nullAs","databaseMeta","fieldTable","fieldStream","matchColumn","updateColumn","dateMask","maxErrors","loadMethod","loadAction","encoding","eraseFiles","encloseNumbers","delimiter","updateCondition");
  Map<String,String> getterMap=new HashMap<>();
  Map<String,String> setterMap=new HashMap<>();
  for (  String attribute : attributes) {
    if (attribute.equals("eraseFiles")) {
      getterMap.put("eraseFiles","isEraseFiles");
    }
 else {
      getterMap.put(attribute,"get" + attribute.substring(0,1).toUpperCase() + attribute.substring(1));
    }
    if (attribute.equals("matchColumn")) {
      setterMap.put("matchColumn","setMatchColumns");
    }
 else {
      setterMap.put(attribute,"set" + attribute.substring(0,1).toUpperCase() + attribute.substring(1));
    }
  }
  Map<String,FieldLoadSaveValidator<?>> fieldLoadSaveValidatorAttributeMap=new HashMap<>();
  Map<String,FieldLoadSaveValidator<?>> fieldLoadSaveValidatorTypeMap=new HashMap<>();
  fieldLoadSaveValidatorAttributeMap.put("dateMask",new ArrayLoadSaveValidator<>(new DateMaskLoadSaveValidator(),10));
  fieldLoadSaveValidatorTypeMap.put(DatabaseMeta.class.getCanonicalName(),new DatabaseMetaFieldLoadSaveValidator());
  fieldLoadSaveValidatorTypeMap.put(String[].class.getCanonicalName(),new ArrayLoadSaveValidator<>(new StringLoadSaveValidator(),10));
  fieldLoadSaveValidatorTypeMap.put(boolean[].class.getCanonicalName(),new PrimitiveBooleanArrayLoadSaveValidator(new BooleanLoadSaveValidator(),10));
  LoadSaveTester loadSaveTester=new LoadSaveTester(GPLoadMeta.class,attributes,getterMap,setterMap,fieldLoadSaveValidatorAttributeMap,fieldLoadSaveValidatorTypeMap);
  loadSaveTester.testRepoRoundTrip();
  loadSaveTester.testXmlRoundTrip();
}
