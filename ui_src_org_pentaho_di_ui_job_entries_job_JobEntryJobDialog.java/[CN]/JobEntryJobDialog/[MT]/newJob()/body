{
  JobMeta newJobMeta=new JobMeta();
  JobDialog jobDialog=new JobDialog(shell,SWT.NONE,newJobMeta,rep);
  if (jobDialog.open() != null) {
    Spoon spoon=Spoon.getInstance();
    spoon.addJobGraph(newJobMeta);
    boolean saved=false;
    try {
      if (rep != null) {
        if (!Const.isEmpty(newJobMeta.getName())) {
          wName.setText(newJobMeta.getName());
        }
        saved=spoon.saveToRepository(newJobMeta,false);
        if (rep.getRepositoryMeta().getRepositoryCapabilities().supportsReferences()) {
          specificationMethod=ObjectLocationSpecificationMethod.REPOSITORY_BY_REFERENCE;
        }
 else {
          specificationMethod=ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME;
        }
      }
 else {
        saved=spoon.saveToFile(newJobMeta);
        specificationMethod=ObjectLocationSpecificationMethod.FILENAME;
      }
    }
 catch (    Exception e) {
      new ErrorDialog(shell,"Error","Error saving new job",e);
    }
    if (saved) {
      setRadioButtons();
switch (specificationMethod) {
case FILENAME:
        wFilename.setText(Const.NVL(newJobMeta.getFilename(),""));
      break;
case REPOSITORY_BY_NAME:
    wJobname.setText(Const.NVL(newJobMeta.getName(),""));
  wDirectory.setText(newJobMeta.getRepositoryDirectory().getPath());
break;
case REPOSITORY_BY_REFERENCE:
getByReferenceData(newJobMeta.getObjectId());
break;
}
}
}
}
