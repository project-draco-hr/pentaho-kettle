{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"schema",schemaName);
    rep.saveStepAttribute(id_transformation,id_step,"table",tableName);
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    rep.saveStepAttribute(id_transformation,id_step,"commit",commitSize);
    rep.saveStepAttribute(id_transformation,id_step,"update",update);
    for (int i=0; i < keyStream.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"lookup_key_name",keyStream[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"lookup_key_field",keyLookup[i]);
    }
    rep.saveStepAttribute(id_transformation,id_step,"date_name",dateField);
    rep.saveStepAttribute(id_transformation,id_step,"date_from",dateFrom);
    rep.saveStepAttribute(id_transformation,id_step,"date_to",dateTo);
    if (fieldStream != null)     for (int i=0; i < fieldStream.length; i++) {
      if (fieldStream[i] != null) {
        rep.saveStepAttribute(id_transformation,id_step,i,"field_name",fieldStream[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_lookup",fieldLookup[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_update",getUpdateTypeCode(update,fieldUpdate[i]));
      }
    }
    rep.saveStepAttribute(id_transformation,id_step,"return_name",keyField);
    rep.saveStepAttribute(id_transformation,id_step,"return_rename",keyRename);
    rep.saveStepAttribute(id_transformation,id_step,"creation_method",techKeyCreation);
    rep.saveStepAttribute(id_transformation,id_step,"use_autoinc",autoIncrement);
    rep.saveStepAttribute(id_transformation,id_step,"version_field",versionField);
    rep.saveStepAttribute(id_transformation,id_step,"sequence",sequenceName);
    rep.saveStepAttribute(id_transformation,id_step,"min_year",minYear);
    rep.saveStepAttribute(id_transformation,id_step,"max_year",maxYear);
    rep.saveStepAttribute(id_transformation,id_step,"cache_size",cacheSize);
    rep.saveStepAttribute(id_transformation,id_step,"preload_cache",preloadingCache);
    rep.saveStepAttribute(id_transformation,id_step,"use_start_date_alternative",usingStartDateAlternative);
    rep.saveStepAttribute(id_transformation,id_step,"start_date_alternative",getStartDateAlternativeCode(startDateAlternative));
    rep.saveStepAttribute(id_transformation,id_step,"start_date_field_name",startDateFieldName);
    if (databaseMeta != null)     rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getObjectId());
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"DimensionLookupMeta.Exception.UnableToLoadDimensionLookupInfoFromRepository"),dbe);
  }
}
