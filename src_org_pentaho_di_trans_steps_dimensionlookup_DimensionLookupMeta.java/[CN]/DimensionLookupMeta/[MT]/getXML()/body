{
  StringBuffer retval=new StringBuffer(512);
  retval.append("      ").append(XMLHandler.addTagValue("schema",schemaName));
  retval.append("      ").append(XMLHandler.addTagValue("table",tableName));
  retval.append("      ").append(XMLHandler.addTagValue("connection",databaseMeta == null ? "" : databaseMeta.getName()));
  retval.append("      ").append(XMLHandler.addTagValue("commit",commitSize));
  retval.append("      ").append(XMLHandler.addTagValue("update",update));
  retval.append("      <fields>").append(Const.CR);
  for (int i=0; i < keyStream.length; i++) {
    retval.append("        <key>").append(Const.CR);
    retval.append("          ").append(XMLHandler.addTagValue("name",keyStream[i]));
    retval.append("          ").append(XMLHandler.addTagValue("lookup",keyLookup[i]));
    retval.append("        </key>").append(Const.CR);
  }
  retval.append("        <date>").append(Const.CR);
  retval.append("          ").append(XMLHandler.addTagValue("name",dateField));
  retval.append("          ").append(XMLHandler.addTagValue("from",dateFrom));
  retval.append("          ").append(XMLHandler.addTagValue("to",dateTo));
  retval.append("        </date>").append(Const.CR);
  if (fieldStream != null) {
    for (int i=0; i < fieldStream.length; i++) {
      if (fieldStream[i] != null) {
        retval.append("        <field>").append(Const.CR);
        retval.append("          ").append(XMLHandler.addTagValue("name",fieldStream[i]));
        retval.append("          ").append(XMLHandler.addTagValue("lookup",fieldLookup[i]));
        retval.append("          ").append(XMLHandler.addTagValue("update",getUpdateTypeCode(update,fieldUpdate[i])));
        retval.append("        </field>").append(Const.CR);
      }
    }
  }
  retval.append("        <return>").append(Const.CR);
  retval.append("          ").append(XMLHandler.addTagValue("name",keyField));
  retval.append("          ").append(XMLHandler.addTagValue("rename",keyRename));
  retval.append("          ").append(XMLHandler.addTagValue("creation_method",techKeyCreation));
  retval.append("          ").append(XMLHandler.addTagValue("use_autoinc",autoIncrement));
  retval.append("          ").append(XMLHandler.addTagValue("version",versionField));
  retval.append("        </return>").append(Const.CR);
  retval.append("      </fields>").append(Const.CR);
  retval.append("      ").append(XMLHandler.addTagValue("sequence",sequenceName));
  retval.append("      ").append(XMLHandler.addTagValue("min_year",minYear));
  retval.append("      ").append(XMLHandler.addTagValue("max_year",maxYear));
  retval.append("      ").append(XMLHandler.addTagValue("cache_size",cacheSize));
  retval.append("      ").append(XMLHandler.addTagValue("preload_cache",preloadingCache));
  retval.append("      ").append(XMLHandler.addTagValue("use_start_date_alternative",usingStartDateAlternative));
  retval.append("      ").append(XMLHandler.addTagValue("start_date_alternative",getStartDateAlternativeCode(startDateAlternative)));
  retval.append("      ").append(XMLHandler.addTagValue("start_date_field_name",startDateFieldName));
  return retval.toString();
}
