{
  try {
    if (data.filenr >= data.files.size()) {
      if (log.isDetailed())       logDetailed(Messages.getString("XMLInput.Log.FinishedProcessing"));
      return false;
    }
    data.last_file=(data.filenr == data.files.size() - 1);
    data.file=(FileObject)data.files.get(data.filenr);
    logBasic(Messages.getString("XMLInput.Log.OpeningFile",data.file.toString()));
    data.filenr++;
    String baseURI=this.environmentSubstitute(meta.getFileBaseURI());
    if (Const.isEmpty(baseURI)) {
      baseURI=data.file.getParent().getName().getURI();
    }
    data.document=XMLHandler.loadXMLFile(data.file,baseURI,meta.isIgnoreEntities(),meta.isNamespaceAware());
    ResultFile resultFile=new ResultFile(ResultFile.FILE_TYPE_GENERAL,data.file,getTransMeta().getName(),getStepname());
    resultFile.setComment("File was read by an XML input step");
    addResultFile(resultFile);
    if (log.isDetailed())     logDetailed(Messages.getString("XMLInput.Log.FileOpened",data.file.toString()));
    data.section=data.document;
    for (int i=0; i < meta.getInputPosition().length - 1; i++) {
      data.section=XMLHandler.getSubNode(data.section,meta.getInputPosition()[i]);
    }
    data.itemElement=meta.getInputPosition()[meta.getInputPosition().length - 1];
    data.itemCount=XMLHandler.countNodes(data.section,data.itemElement);
    data.itemPosition=(int)meta.getNrRowsToSkip();
  }
 catch (  Exception e) {
    logError(Messages.getString("XMLInput.Log.UnableToOpenFile","" + data.filenr,data.file.toString(),e.toString()));
    stopAll();
    setErrors(1);
    return false;
  }
  return true;
}
