{
  try {
    XMLInputFactory vFactory=XMLInputFactory.newInstance();
    XMLStreamReader vReader=vFactory.createXMLStreamReader(anXml);
    Row r=null;
    boolean processing=false;
    for (int event=vReader.next(); event != XMLStreamConstants.END_DOCUMENT; event=vReader.next()) {
switch (event) {
case XMLStreamConstants.START_ELEMENT:
        if (meta.getOutFieldArgumentNameWebService().equals(vReader.getLocalName())) {
          r=new Row();
          processing=true;
        }
 else         if (processing) {
          FieldLinkWebServiceField field=meta.getWsOutLink(vReader.getLocalName());
          String vNodeValue=vReader.getElementText();
          if (field != null) {
            WSDLParameter param=meta.getWsOutField(vReader.getLocalName());
            Value value=new Value(field.getField());
            if (vNodeValue == null) {
              value.setNull();
            }
 else {
              if (XsdType.BOOLEAN.equals(param.getType())) {
                value.setValue(Boolean.valueOf(vNodeValue));
              }
 else               if (XsdType.DATE.equals(param.getType())) {
                try {
                  value.setValue(dateFormat.parse(vNodeValue));
                }
 catch (                ParseException e) {
                  value.setNull();
                }
              }
 else               if (XsdType.TIME.equals(param.getType())) {
                try {
                  value.setValue(heureFormat.parse(vNodeValue));
                }
 catch (                ParseException e) {
                  value.setNull();
                }
              }
 else               if (XsdType.DATE_TIME.equals(param.getType())) {
                value.setValue(dateHeureFormat.parse(vNodeValue));
              }
 else               if (XsdType.INTEGER.equals(param.getType()) || XsdType.SHORT.equals(param.getType())) {
                try {
                  value.setValue(Integer.parseInt(vNodeValue));
                }
 catch (                NumberFormatException nfe) {
                  value.setNull();
                }
              }
 else               if (XsdType.FLOAT.equals(param.getType()) || XsdType.DOUBLE.equals(param.getType())) {
                try {
                  value.setValue(Double.parseDouble(vNodeValue));
                }
 catch (                NumberFormatException nfe) {
                  value.setNull();
                }
              }
 else               if (XsdType.BINARY.equals(param.getType())) {
                value.setValue(Base64.decodeBase64(vNodeValue.getBytes()));
              }
 else {
                value.setValue(vNodeValue);
              }
            }
            r.addValue(value);
          }
        }
      break;
case XMLStreamConstants.END_ELEMENT:
    if (meta.getOutFieldArgumentNameWebService().equals(vReader.getLocalName())) {
      putRow(r);
      processing=false;
    }
  break;
default :
break;
}
}
}
 catch (Exception e) {
logError(Const.getStackTracker(e));
}
}
