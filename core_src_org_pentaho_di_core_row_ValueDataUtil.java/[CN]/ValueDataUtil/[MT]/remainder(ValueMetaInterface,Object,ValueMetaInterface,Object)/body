{
  if (dataA == null || dataB == null) {
    return null;
  }
switch (metaA.getType()) {
case ValueMetaInterface.TYPE_NUMBER:
    return new Double(Math.IEEEremainder(metaA.getNumber(dataA).doubleValue(),metaB.getNumber(dataB).doubleValue()));
case ValueMetaInterface.TYPE_INTEGER:
  return new Long(metaA.getInteger(dataA) % metaB.getInteger(dataB));
case ValueMetaInterface.TYPE_BIGNUMBER:
return metaA.getBigNumber(dataA).remainder(metaB.getBigNumber(dataB),MathContext.DECIMAL64);
default :
throw new KettleValueException("The 'remainder' function only works on numeric data");
}
}
