{
  if (dataA == null || dataB == null)   return null;
switch (metaA.getType()) {
case ValueMetaInterface.TYPE_NUMBER:
    return new Double(Const.round(metaA.getNumber(dataA).doubleValue(),metaB.getInteger(dataB).intValue()));
case ValueMetaInterface.TYPE_INTEGER:
  return metaA.getInteger(dataA);
case ValueMetaInterface.TYPE_BIGNUMBER:
BigDecimal number=metaA.getBigNumber(dataA);
return number.setScale(metaB.getInteger(dataB).intValue(),BigDecimal.ROUND_HALF_EVEN);
default :
throw new KettleValueException("The 'round' function only works on numeric data");
}
}
