{
  StringBuffer retval=new StringBuffer(500);
  retval.append("    ").append(XMLHandler.addTagValue("outputValue",outputValue));
  retval.append("    ").append(XMLHandler.addTagValue("jsonBloc",jsonBloc));
  retval.append("    ").append(XMLHandler.addTagValue("nrRowsInBloc",nrRowsInBloc));
  retval.append("    ").append(XMLHandler.addTagValue("operation_type",getOperationTypeCode(operationType)));
  retval.append("    ").append(XMLHandler.addTagValue("encoding",encoding));
  retval.append("    ").append(XMLHandler.addTagValue("addtoresult",AddToResult));
  retval.append("    <file>" + Const.CR);
  retval.append("      ").append(XMLHandler.addTagValue("name",fileName));
  retval.append("      ").append(XMLHandler.addTagValue("extention",extension));
  retval.append("      ").append(XMLHandler.addTagValue("append",fileAppended));
  retval.append("      ").append(XMLHandler.addTagValue("split",stepNrInFilename));
  retval.append("      ").append(XMLHandler.addTagValue("haspartno",partNrInFilename));
  retval.append("      ").append(XMLHandler.addTagValue("add_date",dateInFilename));
  retval.append("      ").append(XMLHandler.addTagValue("add_time",timeInFilename));
  retval.append("      ").append(XMLHandler.addTagValue("create_parent_folder",createparentfolder));
  retval.append("      ").append(XMLHandler.addTagValue("DoNotOpenNewFileInit",DoNotOpenNewFileInit));
  retval.append("      </file>" + Const.CR);
  retval.append("    <fields>").append(Const.CR);
  for (int i=0; i < outputFields.length; i++) {
    JsonOutputField field=outputFields[i];
    if (field.getFieldName() != null && field.getFieldName().length() != 0) {
      retval.append("      <field>").append(Const.CR);
      retval.append("        ").append(XMLHandler.addTagValue("name",field.getFieldName()));
      retval.append("        ").append(XMLHandler.addTagValue("element",field.getElementName()));
      retval.append("    </field>" + Const.CR);
    }
  }
  retval.append("    </fields>").append(Const.CR);
  return retval.toString();
}
