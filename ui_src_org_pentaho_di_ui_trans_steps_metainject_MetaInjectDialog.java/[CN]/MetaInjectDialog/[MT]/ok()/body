{
  if (Const.isEmpty(wStepname.getText())) {
    return;
  }
  stepname=wStepname.getText();
  try {
    loadTransformation();
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"MetaInjectDialog.ErrorLoadingSpecifiedTransformation.Title"),BaseMessages.getString(PKG,"MetaInjectDialog.ErrorLoadingSpecifiedTransformation.Message"),e);
  }
  metaInjectMeta.setSpecificationMethod(specificationMethod);
switch (specificationMethod) {
case FILENAME:
    metaInjectMeta.setFileName(wFilename.getText());
  metaInjectMeta.setDirectoryPath(null);
metaInjectMeta.setTransName(null);
metaInjectMeta.setTransObjectId(null);
break;
case REPOSITORY_BY_NAME:
metaInjectMeta.setDirectoryPath(wDirectory.getText());
metaInjectMeta.setTransName(wTransname.getText());
metaInjectMeta.setFileName(null);
metaInjectMeta.setTransObjectId(null);
break;
case REPOSITORY_BY_REFERENCE:
metaInjectMeta.setFileName(null);
metaInjectMeta.setDirectoryPath(null);
metaInjectMeta.setTransName(null);
metaInjectMeta.setTransObjectId(referenceObjectId);
break;
default :
break;
}
metaInjectMeta.setSourceStepName(wSourceStep.getText());
metaInjectMeta.setSourceOutputFields(new ArrayList<MetaInjectOutputField>());
for (int i=0; i < wSourceFields.nrNonEmpty(); i++) {
TableItem item=wSourceFields.getNonEmpty(i);
int colIndex=1;
String name=item.getText(colIndex++);
int type=ValueMetaFactory.getIdForValueMeta(item.getText(colIndex++));
int length=Const.toInt(item.getText(colIndex++),-1);
int precision=Const.toInt(item.getText(colIndex++),-1);
metaInjectMeta.getSourceOutputFields().add(new MetaInjectOutputField(name,type,length,precision));
}
metaInjectMeta.setTargetFile(wTargetFile.getText());
metaInjectMeta.setNoExecution(wNoExecution.getSelection());
metaInjectMeta.setStreamSourceStep(transMeta.findStep(wStreamingSourceStep.getText()));
metaInjectMeta.setStreamTargetStepname(wStreamingTargetStep.getText());
metaInjectMeta.setTargetSourceMapping(targetSourceMapping);
metaInjectMeta.setChanged(true);
dispose();
}
