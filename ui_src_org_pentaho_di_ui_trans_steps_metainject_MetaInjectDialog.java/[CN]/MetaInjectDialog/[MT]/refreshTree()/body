{
  try {
    loadTransformation();
    treeItemTargetMap=new HashMap<TreeItem,TargetStepAttribute>();
    wTree.removeAll();
    TreeItem transItem=new TreeItem(wTree,SWT.NONE);
    transItem.setExpanded(true);
    transItem.setText(injectTransMeta.getName());
    List<StepMeta> injectSteps=new ArrayList<StepMeta>();
    for (    StepMeta stepMeta : injectTransMeta.getUsedSteps()) {
      StepMetaInterface meta=stepMeta.getStepMetaInterface();
      if (meta.getStepMetaInjectionInterface() != null || BeanInjectionInfo.isInjectionSupported(meta.getClass())) {
        injectSteps.add(stepMeta);
      }
    }
    Collections.sort(injectSteps);
    for (    StepMeta stepMeta : injectSteps) {
      TreeItem stepItem=new TreeItem(transItem,SWT.NONE);
      stepItem.setText(stepMeta.getName());
      stepItem.setExpanded(true);
      StepMetaInterface metaInterface=stepMeta.getStepMetaInterface();
      if (BeanInjectionInfo.isInjectionSupported(metaInterface.getClass())) {
        processNewMDIDescription(stepMeta,stepItem,metaInterface);
      }
 else {
        processOldMDIDescription(stepMeta,stepItem,metaInterface.getStepMetaInjectionInterface());
      }
    }
  }
 catch (  Throwable t) {
  }
  for (  TreeItem item : wTree.getItems()) {
    expandItemAndChildren(item);
  }
  if (injectTransMeta != null) {
    String[] sourceSteps=injectTransMeta.getStepNames();
    Arrays.sort(sourceSteps);
    wSourceStep.setItems(sourceSteps);
    wStreamingTargetStep.setItems(sourceSteps);
  }
}
