{
  try {
    int portColonIndex=url.indexOf(':',ThinDriver.BASE_URL.length());
    hostname=url.substring(ThinDriver.BASE_URL.length(),portColonIndex);
    int kettleIndex=url.indexOf(ThinDriver.SERVICE_NAME,portColonIndex);
    port=url.substring(portColonIndex + 1,kettleIndex);
    int startIndex=url.indexOf('?',kettleIndex) + 1;
    arguments=new HashMap<String,String>();
    if (startIndex > 0) {
      String path=url.substring(startIndex);
      String[] args=path.split("\\&");
      for (      String arg : args) {
        String[] parts=arg.split("=");
        if (parts.length == 2) {
          arguments.put(parts[0],parts[1]);
        }
      }
    }
    webAppName=arguments.get(ARG_WEBAPPNAME);
    service=ThinDriver.SERVICE_NAME;
    slaveBaseAddress="http://" + hostname + ":"+ port+ service;
    proxyHostname=arguments.get(ARG_PROXYHOSTNAME);
    proxyPort=arguments.get(ARG_PROXYPORT);
    nonProxyHosts=arguments.get(ARG_NONPROXYHOSTS);
    debugTransFilename=arguments.get(ARG_DEBUGTRANS);
    debuggingRemoteLog="true".equalsIgnoreCase(arguments.get(ARG_DEBUGLOG));
    HttpUtil.execService(new Variables(),hostname,port,webAppName,service + "/status/",username,password,proxyHostname,proxyPort,nonProxyHosts);
  }
 catch (  Exception e) {
    throw new SQLException("Unable to de-compose slave server address for URL: " + slaveBaseAddress,e);
  }
}
