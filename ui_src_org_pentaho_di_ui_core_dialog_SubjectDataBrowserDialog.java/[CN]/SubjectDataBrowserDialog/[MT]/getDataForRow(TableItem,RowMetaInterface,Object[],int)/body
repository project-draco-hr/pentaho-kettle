{
  int nrErrors=0;
  String strNr;
  try {
    strNr=wFields.getNumberColumn().getValueMeta().getString(new Long(lineNr));
  }
 catch (  Exception e) {
    strNr=Integer.toString(lineNr);
  }
  item.setText(0,strNr);
  for (int c=0; c < rowMeta.size(); c++) {
    ValueMetaInterface v=rowMeta.getValueMeta(c);
    String show;
    try {
      show=v.getString(row[c]);
      if (v.isBinary() && show != null && show.length() > MAX_BINARY_STRING_PREVIEW_SIZE) {
        show=show.substring(0,MAX_BINARY_STRING_PREVIEW_SIZE);
      }
    }
 catch (    KettleValueException e) {
      nrErrors++;
      if (nrErrors < 25) {
        log.logError(Const.getStackTracker(e));
      }
      show=null;
    }
catch (    ArrayIndexOutOfBoundsException e) {
      nrErrors++;
      if (nrErrors < 25) {
        log.logError(Const.getStackTracker(e));
      }
      show=null;
    }
    if (show != null) {
      item.setText(c + 1,show);
      item.setForeground(c + 1,GUIResource.getInstance().getColorBlack());
    }
 else {
      item.setText(c + 1,"<null>");
      item.setForeground(c + 1,GUIResource.getInstance().getColorBlue());
    }
  }
  return nrErrors;
}
