{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"CheckSumDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"CheckSumDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlType=new Label(shell,SWT.RIGHT);
  wlType.setText(BaseMessages.getString(PKG,"CheckSumDialog.Type.Label"));
  props.setLook(wlType);
  fdlType=new FormData();
  fdlType.left=new FormAttachment(0,0);
  fdlType.right=new FormAttachment(middle,-margin);
  fdlType.top=new FormAttachment(wStepname,margin);
  wlType.setLayoutData(fdlType);
  wType=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wType.add(BaseMessages.getString(PKG,"CheckSumDialog.Type.CRC32"));
  wType.add(BaseMessages.getString(PKG,"CheckSumDialog.Type.ADLER32"));
  wType.add(BaseMessages.getString(PKG,"CheckSumDialog.Type.MD5"));
  wType.add(BaseMessages.getString(PKG,"CheckSumDialog.Type.SHA1"));
  wType.select(0);
  props.setLook(wType);
  fdType=new FormData();
  fdType.left=new FormAttachment(middle,0);
  fdType.top=new FormAttachment(wStepname,margin);
  fdType.right=new FormAttachment(100,0);
  wType.setLayoutData(fdType);
  wType.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeResultType();
    }
  }
);
  wlResultType=new Label(shell,SWT.RIGHT);
  wlResultType.setText(BaseMessages.getString(PKG,"CheckSumDialog.ResultType.Label"));
  props.setLook(wlResultType);
  fdlResultType=new FormData();
  fdlResultType.left=new FormAttachment(0,0);
  fdlResultType.right=new FormAttachment(middle,-margin);
  fdlResultType.top=new FormAttachment(wType,2 * margin);
  wlResultType.setLayoutData(fdlResultType);
  wResultType=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wResultType.setItems(CheckSumMeta.resultTypeDesc);
  wResultType.select(0);
  props.setLook(wResultType);
  fdResultType=new FormData();
  fdResultType.left=new FormAttachment(middle,0);
  fdResultType.top=new FormAttachment(wType,2 * margin);
  fdResultType.right=new FormAttachment(100,0);
  wResultType.setLayoutData(fdResultType);
  wResultType.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      activeHexa();
    }
  }
);
  wlResult=new Label(shell,SWT.RIGHT);
  wlResult.setText(BaseMessages.getString(PKG,"CheckSumDialog.Result.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(wResultType,margin * 2);
  wlResult.setLayoutData(fdlResult);
  wResult=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(wResultType,margin * 2);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"System.Button.GetFields"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,null);
  wlCompatibility=new Label(shell,SWT.RIGHT);
  wlCompatibility.setText(BaseMessages.getString(PKG,"CheckSumDialog.CompatibilityMode.Label"));
  props.setLook(wlCompatibility);
  fdlCompatibility=new FormData();
  fdlCompatibility.left=new FormAttachment(0,0);
  fdlCompatibility.top=new FormAttachment(wResult,margin);
  fdlCompatibility.right=new FormAttachment(middle,-margin);
  wlCompatibility.setLayoutData(fdlCompatibility);
  wCompatibility=new Button(shell,SWT.CHECK);
  wCompatibility.setToolTipText(BaseMessages.getString(PKG,"CheckSumDialog.CompatibilityMode.Tooltip"));
  props.setLook(wCompatibility);
  fdCompatibility=new FormData();
  fdCompatibility.left=new FormAttachment(middle,0);
  fdCompatibility.top=new FormAttachment(wResult,margin);
  fdCompatibility.right=new FormAttachment(100,0);
  wCompatibility.setLayoutData(fdCompatibility);
  SelectionAdapter lsSelR=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wCompatibility.addSelectionListener(lsSelR);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"CheckSumDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wCompatibility,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsCols=1;
  final int FieldsRows=input.getFieldName().length;
  colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(BaseMessages.getString(PKG,"CheckSumDialog.Fieldname.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wOK,-2 * margin);
  wFields.setLayoutData(fdFields);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  activeHexa();
  activeResultType();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
