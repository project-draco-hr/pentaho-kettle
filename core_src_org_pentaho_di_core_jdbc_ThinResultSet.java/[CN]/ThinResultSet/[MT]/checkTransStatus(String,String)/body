{
  try {
    String xml=HttpUtil.execService(new Variables(),connection.getHostname(),connection.getPort(),connection.getWebAppName(),connection.getService() + "/transStatus/?name=" + URLEncoder.encode(transformationName,"UTF-8")+ "&id="+ Const.NVL(transformationObjectId,"")+ "&xml=Y",connection.getUsername(),connection.getPassword(),connection.getProxyHostname(),connection.getProxyPort(),connection.getNonProxyHosts());
    Document doc=XMLHandler.loadXMLString(xml);
    Node resultNode=XMLHandler.getSubNode(doc,"transstatus","result");
    Result result=new Result(resultNode);
    String loggingString64=XMLHandler.getNodeValue(XMLHandler.getSubNode(doc,"transstatus","logging_string"));
    String log="";
    if (!Const.isEmpty(loggingString64)) {
      String dataString64=loggingString64.substring("<![CDATA[".length(),loggingString64.length() - "]]>".length());
      log=HttpUtil.decodeBase64ZippedString(dataString64);
    }
    if (!result.getResult() || result.getNrErrors() > 0) {
      throw new KettleException("The SQL query transformation failed with the following log text:" + Const.CR + log);
    }
    boolean stopped="Stopped".equalsIgnoreCase(XMLHandler.getTagValue(doc,"transstatus","status_desc"));
    if (stopped) {
      throw new KettleException("The SQL query transformation was stopped.  Logging text: " + Const.CR + log);
    }
    if (connection.isDebuggingRemoteLog()) {
      LogChannel.GENERAL.logBasic(log);
    }
  }
 catch (  Exception e) {
    throw new SQLException("Couldn't validate correct execution of SQL query for transformation [" + transformationName + "]",e);
  }
}
