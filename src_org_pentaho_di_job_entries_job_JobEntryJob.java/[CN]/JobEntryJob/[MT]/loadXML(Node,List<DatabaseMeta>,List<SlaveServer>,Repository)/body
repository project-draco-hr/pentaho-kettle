{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    setFileName(XMLHandler.getTagValue(entrynode,"filename"));
    setJobName(XMLHandler.getTagValue(entrynode,"jobname"));
    argFromPrevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"arg_from_previous"));
    paramsFromPrevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"params_from_previous"));
    execPerRow="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"exec_per_row"));
    setLogfile="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"set_logfile"));
    addDate="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_date"));
    addTime="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_time"));
    logfile=XMLHandler.getTagValue(entrynode,"logfile");
    logext=XMLHandler.getTagValue(entrynode,"logext");
    loglevel=LogWriter.getLogLevel(XMLHandler.getTagValue(entrynode,"loglevel"));
    setAppendLogfile="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"set_append_logfile"));
    remoteSlaveServerName=XMLHandler.getTagValue(entrynode,"slave_server_name");
    directory=XMLHandler.getTagValue(entrynode,"directory");
    String wait=XMLHandler.getTagValue(entrynode,"wait_until_finished");
    if (Const.isEmpty(wait))     waitingToFinish=true;
 else     waitingToFinish="Y".equalsIgnoreCase(wait);
    followingAbortRemotely="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"follow_abort_remote"));
    int argnr=0;
    while (XMLHandler.getTagValue(entrynode,"argument" + argnr) != null)     argnr++;
    arguments=new String[argnr];
    for (int a=0; a < argnr; a++) {
      arguments[a]=XMLHandler.getTagValue(entrynode,"argument" + a);
    }
    Node fields=XMLHandler.getSubNode(entrynode,"parameters");
    int nrRows=XMLHandler.countNodes(fields,"parameter");
    parameters=new String[nrRows];
    parameterFieldNames=new String[nrRows];
    parameterValues=new String[nrRows];
    for (int i=0; i < nrRows; i++) {
      Node knode=XMLHandler.getSubNodeByNr(fields,"parameter",i);
      parameters[i]=XMLHandler.getTagValue(knode,"name");
      parameterFieldNames[i]=XMLHandler.getTagValue(knode,"stream_name");
      parameterValues[i]=XMLHandler.getTagValue(knode,"value");
    }
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException("Unable to load 'job' job entry from XML node",xe);
  }
}
