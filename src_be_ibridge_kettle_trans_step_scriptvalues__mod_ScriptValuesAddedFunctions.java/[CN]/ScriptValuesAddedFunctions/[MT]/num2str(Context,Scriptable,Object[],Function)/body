{
  String sRC="";
switch (ArgList.length) {
case 0:
    throw Context.reportRuntimeError("Please provide an valid Number to the Function.");
case 1:
  try {
    if (isNull(ArgList[0]))     return null;
 else     if (isUndefined(ArgList[0]))     return (String)Context.getUndefinedValue();
    double sArg1=Context.toNumber(ArgList[0]);
    if (Double.isNaN(sArg1))     throw Context.reportRuntimeError("The first Argument must be a Number.");
    DecimalFormat formatter=new DecimalFormat();
    sRC=formatter.format(sArg1);
  }
 catch (  IllegalArgumentException e) {
    throw Context.reportRuntimeError("Could not aply the given format on the number.");
  }
break;
case 2:
try {
if (isNull(ArgList,new int[]{0,1})) return null;
 else if (isUndefined(ArgList,new int[]{0,1})) return (String)Context.getUndefinedValue();
double sArg1=Context.toNumber(ArgList[0]);
if (Double.isNaN(sArg1)) throw Context.reportRuntimeError("The first Argument must be a Number.");
String sArg2=Context.toString(ArgList[1]);
DecimalFormat formatter=new DecimalFormat(sArg2);
sRC=formatter.format(sArg1);
}
 catch (IllegalArgumentException e) {
throw Context.reportRuntimeError("Could not aply the given format on the number.");
}
break;
case 3:
try {
if (isNull(ArgList,new int[]{0,1,2})) return null;
 else if (isUndefined(ArgList,new int[]{0,1,2})) return (String)Context.getUndefinedValue();
double sArg1=Context.toNumber(ArgList[0]);
if (Double.isNaN(sArg1)) throw Context.reportRuntimeError("The first Argument must be a Number.");
String sArg2=Context.toString(ArgList[1]);
String sArg3=Context.toString(ArgList[2]);
if (sArg3.length() == 2) {
DecimalFormatSymbols dfs=new DecimalFormatSymbols(new Locale(sArg3.toLowerCase()));
DecimalFormat formatter=new DecimalFormat(sArg2,dfs);
sRC=formatter.format(sArg1);
}
}
 catch (Exception e) {
throw Context.reportRuntimeError(e.toString());
}
break;
default :
throw Context.reportRuntimeError("The function call num2str is not valid");
}
return sRC;
}
