{
  int i;
  BaseStep thr;
  long proc;
  log.logBasic(toString()," ");
  if (steps == null)   return;
  for (i=0; i < steps.size(); i++) {
    StepMetaDataCombi sid=(StepMetaDataCombi)steps.get(i);
    thr=(BaseStep)sid.step;
    proc=thr.getProcessed();
    if (seconds != 0) {
      if (thr.getErrors() == 0) {
        log.logBasic(toString(),Messages.getString("Trans.Log.ProcessSuccessfullyInfo",thr.getStepname(),"'." + thr.getCopy(),String.valueOf(proc),String.valueOf((proc / seconds))));
      }
 else {
        log.logError(toString(),Messages.getString("Trans.Log.ProcessErrorInfo",thr.getStepname(),"'." + thr.getCopy(),String.valueOf(thr.getErrors()),String.valueOf(proc),String.valueOf(proc / seconds)));
      }
    }
 else {
      if (thr.getErrors() == 0) {
        log.logBasic(toString(),Messages.getString("Trans.Log.ProcessSuccessfullyInfo",thr.getStepname(),"'." + thr.getCopy(),String.valueOf(proc),String.valueOf((proc / seconds))));
      }
 else {
        log.logError(toString(),Messages.getString("Trans.Log.ProcessErrorInfo2",thr.getStepname(),"'." + thr.getCopy(),String.valueOf(thr.getErrors()),String.valueOf(proc),String.valueOf(seconds)));
      }
    }
  }
}
