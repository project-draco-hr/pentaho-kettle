{
  if (steps == null)   return null;
  Result result=new Result();
  for (int i=0; i < steps.size(); i++) {
    StepMetaDataCombi sid=(StepMetaDataCombi)steps.get(i);
    BaseStep rt=(BaseStep)sid.step;
    result.setNrErrors(result.getNrErrors() + sid.step.getErrors());
    result.getResultFiles().putAll(rt.getResultFiles());
    if (transMeta.getReadStep() != null && rt.getStepname().equals(transMeta.getReadStep().getName()))     result.setNrLinesRead(result.getNrLinesRead() + rt.linesRead);
    if (transMeta.getInputStep() != null && rt.getStepname().equals(transMeta.getInputStep().getName()))     result.setNrLinesInput(result.getNrLinesInput() + rt.linesInput);
    if (transMeta.getWriteStep() != null && rt.getStepname().equals(transMeta.getWriteStep().getName()))     result.setNrLinesWritten(result.getNrLinesWritten() + rt.linesWritten);
    if (transMeta.getOutputStep() != null && rt.getStepname().equals(transMeta.getOutputStep().getName()))     result.setNrLinesOutput(result.getNrLinesOutput() + rt.linesOutput);
    if (transMeta.getUpdateStep() != null && rt.getStepname().equals(transMeta.getUpdateStep().getName()))     result.setNrLinesUpdated(result.getNrLinesUpdated() + rt.linesUpdated);
    if (transMeta.getRejectedStep() != null && rt.getStepname().equals(transMeta.getUpdateStep().getName()))     result.setNrLinesUpdated(result.getNrLinesUpdated() + rt.linesUpdated);
  }
  result.setRows(transMeta.getResultRows());
  return result;
}
