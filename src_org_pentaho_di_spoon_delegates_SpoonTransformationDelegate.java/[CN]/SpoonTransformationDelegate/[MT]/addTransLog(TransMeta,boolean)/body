{
  String tabName=spoon.delegates.tabs.makeLogTabName(transMeta);
  TabItem tabItem=spoon.delegates.tabs.findTabItem(tabName,TabMapEntry.OBJECT_TYPE_TRANSFORMATION_LOG);
  if (tabItem == null) {
    TransLog transLog=new TransLog(spoon.tabfolder.getSwtTabset(),spoon,transMeta);
    tabItem=new TabItem(spoon.tabfolder,tabName,tabName);
    tabItem.setToolTipText(Messages.getString("Spoon.Title.ExecLogTransView.Tooltip",spoon.delegates.tabs.makeTransGraphTabName(transMeta)));
    tabItem.setControl(transLog);
    TransHistory transHistory=findTransHistoryOfTransformation(transMeta);
    TabItem historyItem=spoon.delegates.tabs.findTabItem(spoon.delegates.tabs.makeHistoryTabName(transMeta),TabMapEntry.OBJECT_TYPE_TRANSFORMATION_HISTORY);
    if (transHistory != null && historyItem != null) {
      TransHistoryRefresher transHistoryRefresher=new TransHistoryRefresher(historyItem,transHistory);
      spoon.tabfolder.addListener(transHistoryRefresher);
      transLog.setTransHistoryRefresher(transHistoryRefresher);
    }
    spoon.delegates.tabs.addTab(tabName,new TabMapEntry(tabItem,tabName,transLog,TabMapEntry.OBJECT_TYPE_TRANSFORMATION_LOG));
  }
  if (setActive) {
    int idx=spoon.tabfolder.indexOf(tabItem);
    spoon.tabfolder.setSelected(idx);
  }
}
