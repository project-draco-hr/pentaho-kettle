{
  jobEntry.setName(wName.getText());
  jobEntry.setIncludeSubfolders(wIncludeSubfolders.getSelection());
  jobEntry.setArgFromPrevious(wPrevious.getSelection());
  jobEntry.setNrErrorsLessThan(wNrErrorsLessThan.getText());
  if (wSuccessCondition.getSelectionIndex() == 1)   jobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_AT_LEAST_X_FILES_WELL_FORMED);
 else   if (wSuccessCondition.getSelectionIndex() == 2)   jobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_BAD_FORMED_FILES_LESS);
 else   jobEntry.setSuccessCondition(jobEntry.SUCCESS_IF_NO_ERRORS);
  if (wAddFilenameToResult.getSelectionIndex() == 1)   jobEntry.setResultFilenames(jobEntry.ADD_WELL_FORMED_FILES_ONLY);
 else   if (wAddFilenameToResult.getSelectionIndex() == 2)   jobEntry.setResultFilenames(jobEntry.ADD_BAD_FORMED_FILES_ONLY);
 else   jobEntry.setResultFilenames(jobEntry.ADD_ALL_FILENAMES);
  int nritems=wFields.nrNonEmpty();
  int nr=0;
  for (int i=0; i < nritems; i++) {
    String arg=wFields.getNonEmpty(i).getText(1);
    if (arg != null && arg.length() != 0)     nr++;
  }
  jobEntry.source_filefolder=new String[nr];
  jobEntry.wildcard=new String[nr];
  nr=0;
  for (int i=0; i < nritems; i++) {
    String source=wFields.getNonEmpty(i).getText(1);
    String wild=wFields.getNonEmpty(i).getText(2);
    if (source != null && source.length() != 0) {
      jobEntry.source_filefolder[nr]=source;
      jobEntry.wildcard[nr]=wild;
      nr++;
    }
  }
  dispose();
}
