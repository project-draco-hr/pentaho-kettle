{
  super(composite,SWT.NONE);
  this.toolTipText=toolTipText;
  this.getCaretPositionInterface=getCaretPositionInterface;
  this.insertTextInterface=insertTextInterface;
  this.variables=space;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=0;
  formLayout.marginHeight=0;
  formLayout.marginTop=0;
  formLayout.marginBottom=0;
  this.setLayout(formLayout);
  wText=new Text(this,flags);
  variableControlDecoration=new ControlDecoration(wText,SWT.TOP | SWT.RIGHT);
  Image image=GUIResource.getInstance().getImageVariable();
  variableControlDecoration.setImage(image);
  variableControlDecoration.setDescriptionText(Messages.getString("TextVar.tooltip.InsertVariable"));
  inUseControlDecoration=new ControlDecoration(wText,SWT.CENTER | SWT.LEFT);
  FieldDecoration inUseFieldDecoration=FieldDecorationRegistry.getDefault().getFieldDecoration(FieldDecorationRegistry.DEC_INFORMATION);
  inUseControlDecoration.setImage(inUseFieldDecoration.getImage());
  inUseControlDecoration.setDescriptionText(Messages.getString("TextVar.tooltip.FieldIsInUse"));
  inUseControlDecoration.hide();
  wText.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      if (!Const.isEmpty(wText.getText()))       inUseControlDecoration.show();
 else       inUseControlDecoration.hide();
    }
  }
);
  wText.addModifyListener(getModifyListenerTooltipText(wText));
  controlSpaceKeyAdapter=new ControlSpaceKeyAdapter(variables,wText,getCaretPositionInterface,insertTextInterface);
  wText.addKeyListener(controlSpaceKeyAdapter);
  FormData fdText=new FormData();
  fdText.top=new FormAttachment(0,0);
  fdText.left=new FormAttachment(0,inUseFieldDecoration.getImage().getBounds().width);
  fdText.right=new FormAttachment(100,-image.getBounds().width);
  wText.setLayoutData(fdText);
}
