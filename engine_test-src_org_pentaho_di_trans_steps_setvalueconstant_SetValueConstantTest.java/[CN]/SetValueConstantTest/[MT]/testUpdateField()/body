{
  SetValueConstant step=new SetValueConstant(smh.stepMeta,smh.stepDataInterface,0,smh.transMeta,smh.trans);
  ValueMetaInterface valueMeta=new ValueMetaString("Field1");
  valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_BINARY_STRING);
  RowMeta rowMeta=new RowMeta();
  rowMeta.addValueMeta(valueMeta);
  doReturn(new String[]{null}).when(smh.initStepMetaInterface).getReplaceMask();
  doReturn(rowMeta).when(smh.initStepDataInterface).getConvertRowMeta();
  doReturn(rowMeta).when(smh.initStepDataInterface).getOutputRowMeta();
  doReturn(1).when(smh.initStepDataInterface).getFieldnr();
  doReturn(new int[]{0}).when(smh.initStepDataInterface).getFieldnrs();
  doReturn(new String[]{"foo"}).when(smh.initStepDataInterface).getRealReplaceByValues();
  step.init(smh.initStepMetaInterface,smh.initStepDataInterface);
  Method m=SetValueConstant.class.getDeclaredMethod("updateField",Object[].class);
  m.setAccessible(true);
  Object[] row=new Object[]{null};
  m.invoke(step,new Object[]{row});
  Assert.assertEquals("foo",valueMeta.getString(row[0]));
}
