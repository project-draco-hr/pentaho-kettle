{
  Shell parent=getParent();
  display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  shell.setImage(GUIResource.getInstance().getImageStart());
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  backupChanged=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobSpecial.Scheduling.Label"));
  int margin=Const.MARGIN;
  wRepeat=new Button(shell,SWT.CHECK);
  wRepeat.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      enableDisableControls();
    }
  }
);
  placeControl(shell,Messages.getString("JobSpecial.Repeat.Label"),wRepeat,null);
  wType=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wType.addModifyListener(lsMod);
  wType.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      enableDisableControls();
    }
  }
);
  wType.add(NOSCHEDULING);
  wType.add(INTERVAL);
  wType.add(DAILY);
  wType.add(WEEKLY);
  wType.add(MONTHLY);
  wType.setEditable(false);
  wType.setVisibleItemCount(wType.getItemCount());
  placeControl(shell,Messages.getString("JobSpecial.Type.Label"),wType,wRepeat);
  wIntervalSeconds=new Spinner(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wIntervalSeconds.setMinimum(0);
  wIntervalSeconds.setMaximum(Integer.MAX_VALUE);
  placeControl(shell,Messages.getString("JobSpecial.IntervalSeconds.Label"),wIntervalSeconds,wType);
  wIntervalMinutes=new Spinner(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wIntervalMinutes.setMinimum(0);
  wIntervalMinutes.setMaximum(Integer.MAX_VALUE);
  placeControl(shell,Messages.getString("JobSpecial.IntervalMinutes.Label"),wIntervalMinutes,wIntervalSeconds);
  Composite time=new Composite(shell,SWT.NONE);
  time.setLayout(new FillLayout());
  wHour=new Spinner(time,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wHour.setMinimum(0);
  wHour.setMaximum(23);
  wMinutes=new Spinner(time,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wMinutes.setMinimum(0);
  wMinutes.setMaximum(59);
  placeControl(shell,Messages.getString("JobSpecial.TimeOfDay.Label"),time,wIntervalMinutes);
  wDayOfWeek=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wDayOfWeek.addModifyListener(lsMod);
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Sunday"));
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Monday"));
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Tuesday"));
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Wednesday"));
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Thursday"));
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Friday"));
  wDayOfWeek.add(Messages.getString("JobSpecial.DayOfWeek.Saturday"));
  wDayOfWeek.setEditable(false);
  wDayOfWeek.setVisibleItemCount(wDayOfWeek.getItemCount());
  placeControl(shell,Messages.getString("JobSpecial.DayOfWeek.Label"),wDayOfWeek,time);
  wDayOfMonth=new Spinner(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wDayOfMonth.addModifyListener(lsMod);
  wDayOfMonth.setMinimum(1);
  wDayOfMonth.setMaximum(30);
  placeControl(shell,Messages.getString("JobSpecial.DayOfMonth.Label"),wDayOfMonth,wDayOfWeek);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wDayOfMonth);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wType.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  enableDisableControls();
  BaseStepDialog.setSize(shell,350,200,true);
  shell.open();
  props.setDialogSize(shell,"JobSpecialDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
