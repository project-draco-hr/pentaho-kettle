{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlResult=new Label(shell,SWT.RIGHT);
  wlResult.setText(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Result.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(wStepname,2 * margin);
  wlResult.setLayoutData(fdlResult);
  wResult=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(wStepname,2 * margin);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  wlStart=new Label(shell,SWT.RIGHT);
  wlStart.setText(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Start.Label"));
  props.setLook(wlStart);
  fdlStart=new FormData();
  fdlStart.left=new FormAttachment(0,0);
  fdlStart.right=new FormAttachment(middle,-margin);
  fdlStart.top=new FormAttachment(wResult,margin);
  wlStart.setLayoutData(fdlStart);
  wStart=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wStart);
  fdStart=new FormData();
  fdStart.left=new FormAttachment(middle,0);
  fdStart.top=new FormAttachment(wResult,margin);
  fdStart.right=new FormAttachment(100,0);
  wStart.setLayoutData(fdStart);
  wlIncrement=new Label(shell,SWT.RIGHT);
  wlIncrement.setText(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Increment.Label"));
  props.setLook(wlIncrement);
  fdlIncrement=new FormData();
  fdlIncrement.left=new FormAttachment(0,0);
  fdlIncrement.right=new FormAttachment(middle,-margin);
  fdlIncrement.top=new FormAttachment(wStart,margin);
  wlIncrement.setLayoutData(fdlIncrement);
  wIncrement=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wIncrement);
  fdIncrement=new FormData();
  fdIncrement.left=new FormAttachment(middle,0);
  fdIncrement.top=new FormAttachment(wStart,margin);
  fdIncrement.right=new FormAttachment(100,0);
  wIncrement.setLayoutData(fdIncrement);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"System.Button.GetFields"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,null);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wIncrement,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsCols=1;
  final int FieldsRows=input.getFieldName().length;
  colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.Fieldname.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wOK,-2 * margin);
  wFields.setLayoutData(fdFields);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          if (row != null) {
            for (int i=0; i < row.size(); i++) {
              inputFields.put(row.getValueMeta(i).getName(),new Integer(i));
            }
            setComboBoxes();
          }
          Display.getDefault().asyncExec(new Runnable(){
            public void run(){
              if (!wFields.isDisposed()) {
                for (int i=0; i < wFields.table.getItemCount(); i++) {
                  TableItem it=wFields.table.getItem(i);
                  if (!Utils.isEmpty(it.getText(1))) {
                    if (!inputFields.containsKey(it.getText(1))) {
                      it.setBackground(GUIResource.getInstance().getColorRed());
                    }
                  }
                }
              }
            }
          }
);
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"FieldsChangeSequenceDialog.ErrorGettingPreviousFields",e.getMessage()));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
