{
  try {
    StringBuilder newSql=new StringBuilder(sql);
    for (int i=placeholderIndexes.size() - 1; i >= 0; i--) {
      int index=placeholderIndexes.get(i);
      ValueMetaInterface valueMeta=paramMeta[i];
      if (valueMeta == null) {
        throw new SQLException("Parameter " + (i + 1) + " was not specified");
      }
      String replacement=null;
      if (valueMeta.isNull(paramData[i])) {
        replacement="NULL";
      }
switch (valueMeta.getType()) {
case ValueMetaInterface.TYPE_STRING:
        replacement="'" + valueMeta.getString(paramData[i]) + "'";
      break;
case ValueMetaInterface.TYPE_NUMBER:
    double d=valueMeta.getNumber(paramData[i]);
  replacement=Double.toString(d);
break;
case ValueMetaInterface.TYPE_INTEGER:
long l=valueMeta.getInteger(paramData[i]);
replacement=Long.toString(l);
break;
case ValueMetaInterface.TYPE_DATE:
java.util.Date date=valueMeta.getDate(paramData[i]);
replacement=new SimpleDateFormat("'['yyyy/MM/dd HH:mm:ss.SSS']'").format(date);
break;
case ValueMetaInterface.TYPE_BIGNUMBER:
BigDecimal bd=valueMeta.getBigNumber(paramData[i]);
replacement=bd.toString();
break;
case ValueMetaInterface.TYPE_BOOLEAN:
boolean b=valueMeta.getBoolean(paramData[i]);
replacement=b ? "TRUE" : "FALSE";
break;
}
if (replacement == null) {
throw new KettleSQLException("Unhandled data type: " + valueMeta.getTypeDesc() + " replacing parameter "+ (i + 1));
}
newSql.replace(index,index + 1,replacement);
}
return newSql.toString();
}
 catch (Exception e) {
throw new SQLException("Unexpected enhancing SQL to include specified parameters",e);
}
}
