{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  ModifyListener lsTableMod=new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  SelectionListener lsSelection=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"UpdateDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"UpdateDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1) {
    wConnection.select(0);
  }
  wConnection.addModifyListener(lsMod);
  wConnection.addSelectionListener(lsSelection);
  wlSchema=new Label(shell,SWT.RIGHT);
  wlSchema.setText(BaseMessages.getString(PKG,"UpdateDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin * 2);
  wlSchema.setLayoutData(fdlSchema);
  wbSchema=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSchema);
  wbSchema.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbSchema=new FormData();
  fdbSchema.top=new FormAttachment(wConnection,2 * margin);
  fdbSchema.right=new FormAttachment(100,0);
  wbSchema.setLayoutData(fdbSchema);
  wSchema=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsTableMod);
  fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin * 2);
  fdSchema.right=new FormAttachment(wbSchema,-margin);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(BaseMessages.getString(PKG,"UpdateDialog.TargetTable.Label"));
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wbSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"UpdateDialog.Browse.Button"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wbSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsTableMod);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wbSchema,margin);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText(BaseMessages.getString(PKG,"UpdateDialog..Commit.Label"));
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.top=new FormAttachment(wTable,margin);
  fdlCommit.right=new FormAttachment(middle,-margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlBatch=new Label(shell,SWT.RIGHT);
  wlBatch.setText(BaseMessages.getString(PKG,"UpdateDialog.Batch.Label"));
  props.setLook(wlBatch);
  fdlBatch=new FormData();
  fdlBatch.left=new FormAttachment(0,0);
  fdlBatch.top=new FormAttachment(wCommit,margin);
  fdlBatch.right=new FormAttachment(middle,-margin);
  wlBatch.setLayoutData(fdlBatch);
  wBatch=new Button(shell,SWT.CHECK);
  props.setLook(wBatch);
  fdBatch=new FormData();
  fdBatch.left=new FormAttachment(middle,0);
  fdBatch.top=new FormAttachment(wCommit,margin);
  fdBatch.right=new FormAttachment(100,0);
  wBatch.setLayoutData(fdBatch);
  wBatch.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlSkipLookup=new Label(shell,SWT.RIGHT);
  wlSkipLookup.setText(BaseMessages.getString(PKG,"UpdateDialog.SkipLookup.Label"));
  props.setLook(wlSkipLookup);
  fdlSkipLookup=new FormData();
  fdlSkipLookup.left=new FormAttachment(0,0);
  fdlSkipLookup.top=new FormAttachment(wBatch,margin);
  fdlSkipLookup.right=new FormAttachment(middle,-margin);
  wlSkipLookup.setLayoutData(fdlSkipLookup);
  wSkipLookup=new Button(shell,SWT.CHECK);
  wSkipLookup.setToolTipText(BaseMessages.getString(PKG,"UpdateDialog.SkipLookup.Tooltip"));
  props.setLook(wSkipLookup);
  fdSkipLookup=new FormData();
  fdSkipLookup.left=new FormAttachment(middle,0);
  fdSkipLookup.top=new FormAttachment(wBatch,margin);
  fdSkipLookup.right=new FormAttachment(100,0);
  wSkipLookup.setLayoutData(fdSkipLookup);
  wSkipLookup.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setActiveIgnoreLookup();
    }
  }
);
  wlErrorIgnored=new Label(shell,SWT.RIGHT);
  wlErrorIgnored.setText(BaseMessages.getString(PKG,"UpdateDialog.ErrorIgnored.Label"));
  props.setLook(wlErrorIgnored);
  fdlErrorIgnored=new FormData();
  fdlErrorIgnored.left=new FormAttachment(0,0);
  fdlErrorIgnored.top=new FormAttachment(wSkipLookup,margin);
  fdlErrorIgnored.right=new FormAttachment(middle,-margin);
  wlErrorIgnored.setLayoutData(fdlErrorIgnored);
  wErrorIgnored=new Button(shell,SWT.CHECK);
  props.setLook(wErrorIgnored);
  wErrorIgnored.setToolTipText(BaseMessages.getString(PKG,"UpdateDialog.ErrorIgnored.ToolTip"));
  fdErrorIgnored=new FormData();
  fdErrorIgnored.left=new FormAttachment(middle,0);
  fdErrorIgnored.top=new FormAttachment(wSkipLookup,margin);
  wErrorIgnored.setLayoutData(fdErrorIgnored);
  wErrorIgnored.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setFlags();
    }
  }
);
  wlIgnoreFlagField=new Label(shell,SWT.LEFT);
  wlIgnoreFlagField.setText(BaseMessages.getString(PKG,"UpdateDialog.FlagField.Label"));
  props.setLook(wlIgnoreFlagField);
  fdlIgnoreFlagField=new FormData();
  fdlIgnoreFlagField.left=new FormAttachment(wErrorIgnored,margin);
  fdlIgnoreFlagField.top=new FormAttachment(wSkipLookup,margin);
  wlIgnoreFlagField.setLayoutData(fdlIgnoreFlagField);
  wIgnoreFlagField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wIgnoreFlagField);
  wIgnoreFlagField.addModifyListener(lsMod);
  fdIgnoreFlagField=new FormData();
  fdIgnoreFlagField.left=new FormAttachment(wlIgnoreFlagField,margin);
  fdIgnoreFlagField.top=new FormAttachment(wSkipLookup,margin);
  fdIgnoreFlagField.right=new FormAttachment(100,0);
  wIgnoreFlagField.setLayoutData(fdIgnoreFlagField);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText(BaseMessages.getString(PKG,"UpdateDialog.Key.Label"));
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wIgnoreFlagField,margin);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=4;
  int nrKeyRows=(input.getKeyStream() != null ? input.getKeyStream().length : 1);
  ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo(BaseMessages.getString(PKG,"UpdateDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[1]=new ColumnInfo(BaseMessages.getString(PKG,"UpdateDialog.ColumnInfo.Comparator"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"=","= ~NULL","<>","<","<=",">",">=","LIKE","BETWEEN","IS NULL","IS NOT NULL"});
  ciKey[2]=new ColumnInfo(BaseMessages.getString(PKG,"UpdateDialog.ColumnInfo.StreamField1"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[3]=new ColumnInfo(BaseMessages.getString(PKG,"UpdateDialog.ColumnInfo.StreamField2"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  tableFieldColumns.add(ciKey[0]);
  wKey=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"UpdateDialog.GetFields.Button"));
  fdGet=new FormData();
  fdGet.right=new FormAttachment(100,0);
  fdGet.top=new FormAttachment(wlKey,margin);
  wGet.setLayoutData(fdGet);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(wGet,-margin);
  fdKey.bottom=new FormAttachment(wlKey,190);
  wKey.setLayoutData(fdKey);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(BaseMessages.getString(PKG,"UpdateDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wSQL},margin,null);
  wlReturn=new Label(shell,SWT.NONE);
  wlReturn.setText(BaseMessages.getString(PKG,"UpdateDialog.Return.Label"));
  props.setLook(wlReturn);
  fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(wKey,margin);
  wlReturn.setLayoutData(fdlReturn);
  int UpInsCols=2;
  int UpInsRows=(input.getUpdateLookup() != null ? input.getUpdateLookup().length : 1);
  ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo(BaseMessages.getString(PKG,"UpdateDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciReturn[1]=new ColumnInfo(BaseMessages.getString(PKG,"UpdateDialog.ColumnInfo.StreamField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  tableFieldColumns.add(ciReturn[0]);
  wReturn=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  wGetLU=new Button(shell,SWT.PUSH);
  wGetLU.setText(BaseMessages.getString(PKG,"UpdateDialog.GetAndUpdateFields"));
  fdGetLU=new FormData();
  fdGetLU.top=new FormAttachment(wlReturn,margin);
  fdGetLU.right=new FormAttachment(100,0);
  wGetLU.setLayoutData(fdGetLU);
  fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlReturn,margin);
  fdReturn.right=new FormAttachment(wGetLU,-margin);
  fdReturn.bottom=new FormAttachment(wOK,-2 * margin);
  wReturn.setLayoutData(fdReturn);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),i);
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getUpdate();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wCommit.addSelectionListener(lsDef);
  wIgnoreFlagField.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbSchema.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getSchemaNames();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  setActiveIgnoreLookup();
  setTableFieldCombo();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
