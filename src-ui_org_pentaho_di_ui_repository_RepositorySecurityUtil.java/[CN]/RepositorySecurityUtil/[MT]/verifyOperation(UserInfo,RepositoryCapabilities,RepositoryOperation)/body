{
  if (!capabilities.supportsUsers())   return;
  if (user == null) {
    throw new KettleException("A valid user is needed to use this repository");
  }
  if (user.isAdministrator()) {
    return;
  }
  if (!user.isEnabled()) {
    throw new KettleException("The user is not enabled");
  }
  for (  RepositoryOperation operation : operations) {
switch (operation) {
case READ_TRANSFORMATION:
      if (!user.useTransformations())       throw new KettleException(operation + " : user can't use transformations");
    break;
case MODIFY_TRANSFORMATION:
  if (user.isReadOnly())   throw new KettleException(operation + " : user is read-only");
if (capabilities.isReadOnly()) throw new KettleException(operation + " : repository is read-only");
if (!user.useTransformations()) throw new KettleException(operation + " : user can't use transformations");
break;
case DELETE_TRANSFORMATION:
if (user.isReadOnly()) throw new KettleException(operation + " : user is read-only");
if (capabilities.isReadOnly()) throw new KettleException(operation + " : repository is read-only");
if (!user.useTransformations()) throw new KettleException(operation + " : user can't use transformations");
break;
case EXECUTE_TRANSFORMATION:
if (!user.useTransformations()) throw new KettleException(operation + " : user can't use transformations");
break;
case READ_JOB:
if (!user.useJobs()) throw new KettleException(operation + " : user can't use jobs");
break;
case MODIFY_JOB:
if (user.isReadOnly()) throw new KettleException(operation + " : user is read-only");
if (capabilities.isReadOnly()) throw new KettleException(operation + " : repository is read-only");
if (!user.useJobs()) throw new KettleException(operation + " : user can't use jobs");
break;
case DELETE_JOB:
if (user.isReadOnly()) throw new KettleException(operation + " : user is read-only");
if (capabilities.isReadOnly()) throw new KettleException(operation + " : repository is read-only");
if (!user.useJobs()) throw new KettleException(operation + " : user can't use jobs");
break;
case EXECUTE_JOB:
if (!user.useJobs()) throw new KettleException(operation + " : user can't use jobs");
break;
case MODIFY_DATABASE:
if (user.isReadOnly()) throw new KettleException(operation + " : user is read-only");
if (capabilities.isReadOnly()) throw new KettleException(operation + " : repository is read-only");
if (!user.useDatabases()) throw new KettleException(operation + " : user can't use databases");
break;
case DELETE_DATABASE:
if (user.isReadOnly()) throw new KettleException(operation + " : user is read-only");
if (capabilities.isReadOnly()) throw new KettleException(operation + " : repository is read-only");
if (!user.useDatabases()) throw new KettleException(operation + " : user can't use databases");
break;
case EXPLORE_DATABASE:
if (!user.exploreDatabases()) throw new KettleException(operation + " : user can't explore databases");
break;
}
}
}
