{
  if (data.firstmetadata) {
    data.firstmetadata=false;
    data.metanrs=new int[meta.getMeta().length];
    for (int i=0; i < data.metanrs.length; i++) {
      data.metanrs[i]=rowMeta.indexOfValue(meta.getMeta()[i].getName());
      if (data.metanrs[i] < 0) {
        logError(BaseMessages.getString(PKG,"SelectValues.Log.CouldNotFindField",meta.getMeta()[i].getName()));
        setErrors(1);
        stopAll();
        return null;
      }
    }
    int[] cnt=new int[meta.getMeta().length];
    for (int i=0; i < meta.getMeta().length; i++) {
      cnt[i]=0;
      for (int j=0; j < meta.getMeta().length; j++) {
        if (meta.getMeta()[i].getName().equals(meta.getMeta()[j].getName())) {
          cnt[i]++;
        }
        if (cnt[i] > 1) {
          logError(BaseMessages.getString(PKG,"SelectValues.Log.FieldCouldNotSpecifiedMoreThanTwice2",meta.getMeta()[i].getName()));
          setErrors(1);
          stopAll();
          return null;
        }
      }
    }
    for (int i=0; i < data.metanrs.length; i++) {
      SelectMetadataChange change=meta.getMeta()[i];
      ValueMetaInterface valueMeta=rowMeta.getValueMeta(data.metanrs[i]);
      if (!Const.isEmpty(change.getConversionMask())) {
        valueMeta.setConversionMask(change.getConversionMask());
      }
      valueMeta.setDateFormatLenient(change.isDateFormatLenient());
      valueMeta.setDateFormatLocale(EnvUtil.createLocale(change.getDateFormatLocale()));
      valueMeta.setDateFormatTimeZone(EnvUtil.createTimeZone(change.getDateFormatTimeZone()));
      valueMeta.setLenientStringToNumber(change.isLenientStringToNumber());
      if (!Const.isEmpty(change.getEncoding())) {
        valueMeta.setStringEncoding(change.getEncoding());
      }
      if (!Const.isEmpty(change.getDecimalSymbol())) {
        valueMeta.setDecimalSymbol(change.getDecimalSymbol());
      }
      if (!Const.isEmpty(change.getGroupingSymbol())) {
        valueMeta.setGroupingSymbol(change.getGroupingSymbol());
      }
      if (!Const.isEmpty(change.getCurrencySymbol())) {
        valueMeta.setCurrencySymbol(change.getCurrencySymbol());
      }
    }
  }
  for (int i=0; i < data.metanrs.length; i++) {
    int index=data.metanrs[i];
    ValueMetaInterface fromMeta=rowMeta.getValueMeta(index);
    ValueMetaInterface toMeta=data.metadataRowMeta.getValueMeta(index);
    try {
      if (fromMeta.isStorageBinaryString() && meta.getMeta()[i].getStorageType() == ValueMetaInterface.STORAGE_TYPE_NORMAL) {
        rowData[index]=fromMeta.convertBinaryStringToNativeType((byte[])rowData[index]);
      }
      if (meta.getMeta()[i].getType() != ValueMetaInterface.TYPE_NONE && fromMeta.getType() != toMeta.getType()) {
        rowData[index]=toMeta.convertData(fromMeta,rowData[index]);
      }
    }
 catch (    KettleValueException e) {
      throw new KettleConversionException(e.getMessage(),Collections.<Exception>singletonList(e),Collections.singletonList(toMeta),rowData);
    }
  }
  return rowData;
}
