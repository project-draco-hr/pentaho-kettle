{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"id_connection",databaseMeta == null ? -1 : databaseMeta.getID());
    rep.saveStepAttribute(id_transformation,id_step,"schema",schemaName);
    rep.saveStepAttribute(id_transformation,id_step,"table",tableName);
    rep.saveStepAttribute(id_transformation,id_step,"encoding",encoding);
    rep.saveStepAttribute(id_transformation,id_step,"enclosure",enclosure);
    rep.saveStepAttribute(id_transformation,id_step,"delimiter",delimiter);
    rep.saveStepAttribute(id_transformation,id_step,"escape_char",escapeChar);
    rep.saveStepAttribute(id_transformation,id_step,"fifo_file_name",fifoFileName);
    rep.saveStepAttribute(id_transformation,id_step,"replace",replacingData);
    rep.saveStepAttribute(id_transformation,id_step,"ignore",ignoringErrors);
    rep.saveStepAttribute(id_transformation,id_step,"bulk_size",bulkSize);
    for (int i=0; i < fieldTable.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"stream_name",fieldTable[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",fieldStream[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format_ok",getFieldFormatTypeCode(fieldFormatType[i]));
    }
    if (databaseMeta != null)     rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getID());
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("MySQLBulkLoaderMeta.Exception.UnableToSaveStepInfoToRepository") + id_step,e);
  }
}
