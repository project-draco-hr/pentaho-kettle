{
  try {
    long id_connection=rep.getStepAttributeInteger(id_step,"id_connection");
    databaseMeta=DatabaseMeta.findDatabase(databases,id_connection);
    schemaName=rep.getStepAttributeString(id_step,"schema");
    tableName=rep.getStepAttributeString(id_step,"table");
    encoding=rep.getStepAttributeString(id_step,"encoding");
    enclosure=rep.getStepAttributeString(id_step,"enclosure");
    delimiter=rep.getStepAttributeString(id_step,"delimiter");
    escapeChar=rep.getStepAttributeString(id_step,"escape_char");
    fifoFileName=rep.getStepAttributeString(id_step,"fifo_file_name");
    replacingData=rep.getStepAttributeBoolean(id_step,"replace");
    ignoringErrors=rep.getStepAttributeBoolean(id_step,"ignore");
    bulkSize=rep.getStepAttributeString(id_step,"bulk_size");
    int nrvalues=rep.countNrStepAttributes(id_step,"stream_name");
    allocate(nrvalues);
    for (int i=0; i < nrvalues; i++) {
      fieldTable[i]=rep.getStepAttributeString(id_step,i,"stream_name");
      fieldStream[i]=rep.getStepAttributeString(id_step,i,"field_name");
      if (fieldStream[i] == null)       fieldStream[i]=fieldTable[i];
      fieldFormatType[i]=getFieldFormatType(rep.getStepAttributeString(id_step,i,"field_format_type"));
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"MySQLBulkLoaderMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository"),e);
  }
}
