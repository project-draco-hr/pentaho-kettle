{
  SQLStatement retval=new SQLStatement(stepMeta.getName(),databaseMeta,null);
  if (databaseMeta != null) {
    if (prev != null && prev.size() > 0) {
      RowMetaInterface tableFields;
      if (autoSchema) {
        tableFields=updateFields(prev,data);
      }
 else {
        tableFields=new RowMeta();
        for (int i=0; i < fieldTable.length; i++) {
          ValueMetaInterface v=prev.searchValueMeta(fieldStream[i]);
          if (v != null) {
            ValueMetaInterface tableField=v.clone();
            tableField.setName(fieldTable[i]);
            tableFields.addValueMeta(tableField);
          }
        }
      }
      if (!Const.isEmpty(tableName)) {
        Database db=new Database(loggingObject,databaseMeta);
        db.shareVariablesWith(transMeta);
        try {
          db.connect();
          String schemaTable=databaseMeta.getQuotedSchemaTableCombination(transMeta.environmentSubstitute(schemaName),transMeta.environmentSubstitute(tableName));
          MonetDBDatabaseMeta.safeModeLocal.set(safeMode);
          String cr_table=db.getDDL(schemaTable,tableFields,null,false,null,true);
          String sql=cr_table;
          if (sql.length() == 0)           retval.setSQL(null);
 else           retval.setSQL(sql);
        }
 catch (        KettleException e) {
          retval.setError(BaseMessages.getString(PKG,"MonetDBBulkLoaderMeta.GetSQL.ErrorOccurred") + e.getMessage());
        }
 finally {
          db.disconnect();
          MonetDBDatabaseMeta.safeModeLocal.remove();
        }
      }
 else {
        retval.setError(BaseMessages.getString(PKG,"MonetDBBulkLoaderMeta.GetSQL.NoTableDefinedOnConnection"));
      }
    }
 else {
      retval.setError(BaseMessages.getString(PKG,"MonetDBBulkLoaderMeta.GetSQL.NotReceivingAnyFields"));
    }
  }
 else {
    retval.setError(BaseMessages.getString(PKG,"MonetDBBulkLoaderMeta.GetSQL.NoConnectionDefined"));
  }
  return retval;
}
