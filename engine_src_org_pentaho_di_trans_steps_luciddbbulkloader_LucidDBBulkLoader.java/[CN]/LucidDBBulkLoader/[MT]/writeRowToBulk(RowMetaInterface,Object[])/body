{
  try {
    for (int i=0; i < data.keynrs.length; i++) {
      if (i > 0) {
        data.fifoStream.write(data.separator);
      }
      int index=data.keynrs[i];
      ValueMetaInterface valueMeta=rowMeta.getValueMeta(index);
      Object valueData=r[index];
      if (valueData != null) {
switch (valueMeta.getType()) {
case ValueMetaInterface.TYPE_STRING:
          data.fifoStream.write(data.quote);
        if (valueMeta.isStorageBinaryString() && meta.getFieldFormatOk()[i]) {
          data.fifoStream.write((byte[])valueData);
        }
 else {
          data.fifoStream.write(valueMeta.getString(valueData).getBytes());
        }
      data.fifoStream.write(data.quote);
    break;
case ValueMetaInterface.TYPE_INTEGER:
  if (valueMeta.isStorageBinaryString() && meta.getFieldFormatOk()[i]) {
    data.fifoStream.write((byte[])valueData);
  }
 else {
    data.fifoStream.write(Long.toString(valueMeta.getInteger(valueData)).getBytes());
  }
break;
case ValueMetaInterface.TYPE_DATE:
Date date=valueMeta.getDate(valueData);
data.fifoStream.write(data.bulkFormatMeta[i].getString(date).getBytes());
break;
case ValueMetaInterface.TYPE_BOOLEAN:
if (valueMeta.isStorageBinaryString() && meta.getFieldFormatOk()[i]) {
data.fifoStream.write((byte[])valueData);
}
 else {
data.fifoStream.write(Boolean.toString(valueMeta.getBoolean(valueData)).getBytes());
}
break;
case ValueMetaInterface.TYPE_NUMBER:
if (valueMeta.isStorageBinaryString() && meta.getFieldFormatOk()[i]) {
data.fifoStream.write((byte[])valueData);
}
 else {
data.fifoStream.write(Double.toString(valueMeta.getNumber(valueData)).getBytes());
}
break;
case ValueMetaInterface.TYPE_BIGNUMBER:
if (valueMeta.isStorageBinaryString() && meta.getFieldFormatOk()[i]) {
data.fifoStream.write((byte[])valueData);
}
 else {
data.fifoStream.write(valueMeta.getString(valueData).getBytes());
}
break;
default :
break;
}
}
}
data.fifoStream.write(data.newline);
}
 catch (Exception e) {
throw new KettleException("Error serializing rows of data to the fifo file",e);
}
}
