{
  try {
    int nrkeys;
    Node lookup=XMLHandler.getSubNode(stepnode,"fields");
    nrkeys=XMLHandler.countNodes(lookup,"field");
    allocate(nrkeys);
    for (int i=0; i < nrkeys; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(lookup,"field",i);
      fieldInStream[i]=Const.NVL(XMLHandler.getTagValue(fnode,"in_stream_name"),"");
      fieldOutStream[i]=Const.NVL(XMLHandler.getTagValue(fnode,"out_stream_name"),"");
      trimType[i]=getTrimTypeByCode(Const.NVL(XMLHandler.getTagValue(fnode,"trim_type"),""));
      lowerUpper[i]=getLowerUpperByCode(Const.NVL(XMLHandler.getTagValue(fnode,"lower_upper"),""));
      padding_type[i]=getPaddingByCode(Const.NVL(XMLHandler.getTagValue(fnode,"padding_type"),""));
      padChar[i]=Const.NVL(XMLHandler.getTagValue(fnode,"pad_char"),"");
      padLen[i]=Const.NVL(XMLHandler.getTagValue(fnode,"pad_len"),"");
      initCap[i]=getInitCapByCode(Const.NVL(XMLHandler.getTagValue(fnode,"init_cap"),""));
      maskXML[i]=getMaskXMLByCode(Const.NVL(XMLHandler.getTagValue(fnode,"mask_xml"),""));
      digits[i]=getDigitsByCode(Const.NVL(XMLHandler.getTagValue(fnode,"digits"),""));
      remove_special_characters[i]=getRemoveSpecialCharactersByCode(Const.NVL(XMLHandler.getTagValue(fnode,"remove_special_characters"),""));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"StringOperationsMeta.Exception.UnableToReadStepInfoFromXML"),e);
  }
}
