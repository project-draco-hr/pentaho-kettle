{
  stepname=textStepName.getText();
  List<DimensionField> fields=new ArrayList<DimensionField>();
  if (this.updateOptions.getCode(comboUpdateMode.getText()) == "ADD" && this.splashOptions.getCode(comboSplashMode.getText()) == "SET") {
    throw new KettleException(BaseMessages.getString(PKG,"PaloCellOutputDialog.UpdateSplashError",BaseMessages.getString(PKG,"PaloCellOutputDialog.UpdateMode"),comboUpdateMode.getText(),BaseMessages.getString(PKG,"PaloCellOutputDialog.SplashMode"),comboSplashMode.getText()));
  }
  try {
    Integer.parseInt(this.textCommitSize.getText());
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"PaloCellOutputDialog.CommitSizeErrorMessage"));
  }
  for (int i=0; i < tableViewFields.table.getItemCount(); i++) {
    DimensionField field=new DimensionField(tableViewFields.table.getItem(i).getText(1),tableViewFields.table.getItem(i).getText(2),"");
    if (i != tableViewFields.table.getItemCount() - 1) {
      fields.add(field);
    }
 else {
      myMeta.setMeasureField(field);
    }
  }
  myMeta.setCube(this.comboCube.getText());
  myMeta.setMeasureType(this.comboMeasureType.getText());
  myMeta.setUpdateMode(this.updateOptions.getCode(comboUpdateMode.getText()));
  myMeta.setSplashMode(this.splashOptions.getCode(comboSplashMode.getText()));
  myMeta.setLevels(fields);
  myMeta.setClearCube(this.buttonClearCube.getSelection());
  myMeta.setDatabaseMeta(transMeta.findDatabase(addConnectionLine.getText()));
  myMeta.setCommitSize(Integer.parseInt(this.textCommitSize.getText()));
  myMeta.setEnableDimensionCache(this.buttonEnableDimensionCache.getSelection());
  if (this.buttonEnableDimensionCache.getSelection()) {
    myMeta.setPreloadDimensionCache(this.buttonPreloadDimensionCache.getSelection());
  }
 else {
    myMeta.setPreloadDimensionCache(false);
  }
  myMeta.setChanged(true);
}
