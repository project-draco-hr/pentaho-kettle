{
  this();
  name=XMLHandler.getTagValue(calcnode,"name");
  maximumLength=Const.toInt(XMLHandler.getTagValue(calcnode,"max_length"),-1);
  limitingToMaximum="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"max_limit"));
  minimumLength=Const.toInt(XMLHandler.getTagValue(calcnode,"min_length"),-1);
  paddedToMinimum="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"min_pad"));
  paddingString=XMLHandler.getTagValue(calcnode,"pad_string");
  nullAllowed="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"null_allowed"));
  dataType=ValueMeta.getType(XMLHandler.getTagValue(calcnode,"data_type"));
  dataTypeVerified="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"data_type_verified"));
  conversionMask=XMLHandler.getTagValue(calcnode,"conversion_mask");
  decimalSymbol=XMLHandler.getTagValue(calcnode,"decimal_symbol");
  groupingSymbol=XMLHandler.getTagValue(calcnode,"grouping_symbol");
  minimumValue=XMLHandler.getTagValue(calcnode,"min_value");
  maximumValue=XMLHandler.getTagValue(calcnode,"max_value");
  Node allowedValuesNode=XMLHandler.getSubNode(calcnode,XML_TAG_ALLOWED);
  int nrValues=XMLHandler.countNodes(calcnode,"value");
  allowedValues=new String[nrValues];
  for (int i=0; i < nrValues; i++) {
    Node allowedNode=XMLHandler.getSubNodeByNr(allowedValuesNode,"value",i);
    allowedValues[i]=XMLHandler.getNodeValue(allowedNode);
  }
}
