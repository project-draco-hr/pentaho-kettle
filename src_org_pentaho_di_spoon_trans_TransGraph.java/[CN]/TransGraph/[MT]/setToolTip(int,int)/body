{
  String newTip=null;
  final StepMeta stepMeta=transMeta.getStep(x,y,iconsize);
  if (stepMeta != null) {
    if (stepMeta.getDescription() != null) {
      String desc=stepMeta.getDescription();
      int le=desc.length() >= 200 ? 200 : desc.length();
      newTip=desc.substring(0,le);
    }
 else {
      newTip=stepMeta.getName();
    }
    StepPlugin stepPlugin=StepLoader.getInstance().getStepPlugin(stepMeta.getStepMetaInterface());
    if (stepPlugin != null) {
      newTip+=Const.CR + Const.CR + stepPlugin.getTooltip(LanguageChoice.getInstance().getDefaultLocale().toString());
    }
  }
 else {
    final TransHopMeta hi=findHop(x,y);
    if (hi != null) {
      newTip=hi.toString();
    }
 else {
      StringBuffer tip=new StringBuffer();
      for (      AreaOwner areaOwner : areaOwners) {
        if (areaOwner.contains(x,y)) {
          if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals("RemoteInputSteps")) {
            StepMeta step=(StepMeta)areaOwner.getParent();
            if (tip.length() == 0)             tip.append("Remote input steps:").append(Const.CR).append("-----------------------").append(Const.CR);
            for (            RemoteStep remoteStep : step.getRemoteInputSteps()) {
              tip.append(remoteStep.toString()).append(Const.CR);
            }
          }
          if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals("RemoteOutputSteps")) {
            StepMeta step=(StepMeta)areaOwner.getParent();
            if (tip.length() == 0)             tip.append("Remote output steps:").append(Const.CR).append("-----------------------").append(Const.CR);
            for (            RemoteStep remoteStep : step.getRemoteOutputSteps()) {
              tip.append(remoteStep.toString()).append(Const.CR);
            }
          }
        }
      }
      if (tip.length() == 0) {
        newTip=null;
      }
 else {
        newTip=tip.toString();
      }
    }
  }
  if (newTip == null || !newTip.equalsIgnoreCase(getToolTipText())) {
    canvas.setToolTipText(newTip);
  }
}
