{
  String[] remarks=dbinfo.checkParameters();
  if (remarks.length == 0) {
    StringBuffer report=new StringBuffer();
    Database db=new Database(dbinfo);
    if (dbinfo.isPartitioned()) {
      PartitionDatabaseMeta[] partitioningInformation=dbinfo.getPartitioningInformation();
      for (int i=0; i < partitioningInformation.length; i++) {
        try {
          db.connect(partitioningInformation[i].getPartitionId());
          report.append(Messages.getString("DatabaseDialog.report.ConnectionWithPartOk",dbinfo.getName(),partitioningInformation[i].getPartitionId()) + Const.CR);
        }
 catch (        KettleException e) {
          report.append(Messages.getString("DatabaseDialog.report.ConnectionWithPartError",dbinfo.getName(),partitioningInformation[i].getPartitionId(),e.toString()) + Const.CR);
          report.append(Const.getStackTracker(e) + Const.CR);
        }
 finally {
          db.disconnect();
        }
        appendConnectionInfo(report,db.environmentSubstitute(partitioningInformation[i].getHostname()),db.environmentSubstitute(partitioningInformation[i].getPort()),db.environmentSubstitute(partitioningInformation[i].getDatabaseName()));
        report.append(Const.CR);
      }
    }
 else {
      try {
        db.connect();
        report.append(Messages.getString("DatabaseDialog.report.ConnectionOk",dbinfo.getName()) + Const.CR);
      }
 catch (      KettleException e) {
        report.append(Messages.getString("DatabaseDialog.report.ConnectionError",dbinfo.getName()) + e.toString() + Const.CR);
        report.append(Const.getStackTracker(e) + Const.CR);
      }
 finally {
        db.disconnect();
      }
      appendConnectionInfo(report,db.environmentSubstitute(dbinfo.getHostname()),db.environmentSubstitute(dbinfo.getDatabasePortNumberString()),db.environmentSubstitute(dbinfo.getDatabaseName()));
      report.append(Const.CR);
    }
    EnterTextDialog dialog=new EnterTextDialog(shell,Messages.getString("DatabaseDialog.ConnectionReport.title"),Messages.getString("DatabaseDialog.ConnectionReport.description"),report.toString());
    dialog.setReadOnly();
    dialog.setFixed(true);
    dialog.open();
  }
 else {
    String message="";
    for (int i=0; i < remarks.length; i++)     message+="    * " + remarks[i] + Const.CR;
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setText(Messages.getString("DatabaseDialog.ErrorParameters2.title"));
    mb.setMessage(Messages.getString("DatabaseDialog.ErrorParameters2.description",message));
    mb.open();
  }
}
