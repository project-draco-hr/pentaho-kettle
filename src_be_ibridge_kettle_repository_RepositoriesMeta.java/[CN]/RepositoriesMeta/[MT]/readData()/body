{
  File file=new File(Const.getKettleLocalRepositoriesFile());
  if (!file.exists() || !file.isFile()) {
    log.logDetailed(toString(),"No repositories file found in the local directory: " + file.getAbsolutePath());
    file=new File(Const.getKettleUserRepositoriesFile());
  }
  log.logBasic(toString(),"Reading repositories XML file: " + file.getAbsoluteFile());
  DocumentBuilderFactory dbf;
  DocumentBuilder db;
  Document doc;
  try {
    dbf=DocumentBuilderFactory.newInstance();
    db=dbf.newDocumentBuilder();
    try {
      doc=db.parse(file);
    }
 catch (    FileNotFoundException ef) {
      InputStream is=getClass().getResourceAsStream("/be/ibridge/kettle/repository/repositories.xml");
      if (is != null) {
        doc=db.parse(is);
      }
 else {
        log.logError(toString(),"Error opening file: " + file.getAbsoluteFile() + " : "+ ef.toString());
        return false;
      }
    }
    clear();
    Node repsnode=XMLHandler.getSubNode(doc,"repositories");
    int nrconn=XMLHandler.countNodes(repsnode,"connection");
    log.logDebug(toString(),"We have " + nrconn + " connections...");
    for (int i=0; i < nrconn; i++) {
      log.logDebug(toString(),"Looking at connection #" + i);
      Node dbnode=XMLHandler.getSubNodeByNr(repsnode,"connection",i);
      DatabaseMeta dbcon=new DatabaseMeta(dbnode);
      addDatabase(dbcon);
      log.logDebug(toString(),"Read connection : " + dbcon.getName());
    }
    int nrreps=XMLHandler.countNodes(repsnode,"repository");
    log.logDebug(toString(),"We have " + nrreps + " repositories...");
    for (int i=0; i < nrreps; i++) {
      Node repnode=XMLHandler.getSubNodeByNr(repsnode,"repository",i);
      log.logDebug(toString(),"Looking at repository #" + i);
      RepositoryMeta repinfo=new RepositoryMeta();
      if (repinfo.loadXML(repnode,databases)) {
        addRepository(repinfo);
        log.logDebug(toString(),"Read repository : " + repinfo.getName());
      }
    }
  }
 catch (  Exception e) {
    log.logError(toString(),"Error reading information from file : " + e.toString());
    e.printStackTrace();
    clear();
    return false;
  }
  return true;
}
