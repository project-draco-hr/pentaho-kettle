{
  try {
    for (int i=0; i < fieldName.length; i++) {
      if (fieldName[i] != null && fieldName[i].length() != 0) {
        rep.saveStepAttribute(id_transformation,id_step,i,"field_name",fieldName[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_type",fieldType[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_format",fieldFormat[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",currency[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",decimal[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_group",group[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_nullif",value[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_length",fieldLength[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",fieldPrecision[i]);
        rep.saveStepAttribute(id_transformation,id_step,i,"set_empty_string",setEmptyString[i]);
      }
    }
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    rep.saveStepAttribute(id_transformation,id_step,"never_ending",neverEnding);
    rep.saveStepAttribute(id_transformation,id_step,"interval_in_ms",intervalInMs);
    rep.saveStepAttribute(id_transformation,id_step,"row_time_field",rowTimeField);
    rep.saveStepAttribute(id_transformation,id_step,"last_time_field",lastTimeField);
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
