{
  RowMetaInterface fields;
  try {
    if ((inform == null && databaseMeta.getDatabaseInterface() instanceof MSSQLServerDatabaseMeta) || databaseMeta.getDatabaseInterface().supportsResultSetMetadataRetrievalOnly()) {
      sel_stmt=connection.createStatement(ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
      try {
        if (databaseMeta.isFetchSizeSupported() && sel_stmt.getMaxRows() >= 1) {
          if (databaseMeta.getDatabaseInterface() instanceof MySQLDatabaseMeta) {
            sel_stmt.setFetchSize(Integer.MIN_VALUE);
          }
 else {
            sel_stmt.setFetchSize(1);
          }
        }
        if (databaseMeta.supportsSetMaxRows()) {
          sel_stmt.setMaxRows(1);
        }
        ResultSet r=sel_stmt.executeQuery(databaseMeta.stripCR(sql));
        try {
          fields=getRowInfo(r.getMetaData(),false,false);
        }
  finally {
          r.close();
        }
      }
  finally {
        sel_stmt.close();
        sel_stmt=null;
      }
    }
 else {
      PreparedStatement ps=connection.prepareStatement(databaseMeta.stripCR(sql));
      try {
        if (param) {
          RowMetaInterface par=inform;
          if (par == null || par.isEmpty()) {
            par=getParameterMetaData(ps);
          }
          if (par == null || par.isEmpty()) {
            par=getParameterMetaData(sql,inform,data);
          }
          setValues(par,data,ps);
        }
        ResultSet r=ps.executeQuery();
        try {
          ResultSetMetaData metadata=r.getMetaData();
          fields=getRowInfo(metadata,false,false);
        }
  finally {
          r.close();
        }
      }
  finally {
        ps.close();
      }
    }
  }
 catch (  Exception ex) {
    throw new KettleDatabaseException("Couldn't get field info from [" + sql + "]"+ Const.CR,ex);
  }
  return fields;
}
