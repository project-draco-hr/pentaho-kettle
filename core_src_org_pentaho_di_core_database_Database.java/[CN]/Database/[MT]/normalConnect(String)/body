{
  if (databaseMeta == null) {
    throw new KettleDatabaseException("No valid database connection defined!");
  }
  try {
    DataSourceProviderInterface dsp=DataSourceProviderFactory.getDataSourceProviderInterface();
    if (dsp == null) {
      dsp=new DatabaseUtil();
    }
    if (databaseMeta.getAccessType() == DatabaseMeta.TYPE_ACCESS_JNDI) {
      String jndiName=environmentSubstitute(databaseMeta.getDatabaseName());
      try {
        this.connection=dsp.getNamedDataSource(jndiName,DatasourceType.JNDI).getConnection();
      }
 catch (      DataSourceNamingException e) {
        log.logError("Unable to find datasource by JNDI name: " + jndiName,e);
        throw e;
      }
    }
 else {
      if (databaseMeta.isUsingConnectionPool()) {
        String name=databaseMeta.getName();
        try {
          try {
            this.connection=dsp.getNamedDataSource(name,DatasourceType.POOLED).getConnection();
          }
 catch (          UnsupportedOperationException e) {
            this.connection=ConnectionPoolUtil.getConnection(log,databaseMeta,partitionId);
          }
          if (getConnection().getAutoCommit() != isAutoCommit()) {
            setAutoCommit(isAutoCommit());
          }
        }
 catch (        DataSourceNamingException e) {
          log.logError("Unable to find pooled datasource by its name: " + name,e);
          throw e;
        }
      }
 else {
        connectUsingClass(databaseMeta.getDriverClass(),partitionId);
      }
    }
    String sql=environmentSubstitute(databaseMeta.getConnectSQL());
    if (!Utils.isEmpty(sql) && !Const.onlySpaces(sql)) {
      execStatements(sql);
      if (log.isDetailed()) {
        log.logDetailed("Executed connect time SQL statements:" + Const.CR + sql);
      }
    }
  }
 catch (  Exception e) {
    throw new KettleDatabaseException("Error occurred while trying to connect to the database",e);
  }
}
