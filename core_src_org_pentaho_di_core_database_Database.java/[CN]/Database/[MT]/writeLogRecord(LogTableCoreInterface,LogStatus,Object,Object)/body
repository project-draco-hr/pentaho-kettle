{
  try {
    RowMetaAndData logRecord=logTable.getLogRecord(status,subject,parent);
    if (logRecord == null) {
      return;
    }
    boolean update=(logTable.getKeyField() != null) && !status.equals(LogStatus.START);
    String schemaTable=databaseMeta.getQuotedSchemaTableCombination(environmentSubstitute(logTable.getActualSchemaName()),environmentSubstitute(logTable.getActualTableName()));
    RowMetaInterface rowMeta=logRecord.getRowMeta();
    Object[] rowData=logRecord.getData();
    if (update) {
      RowMetaInterface updateRowMeta=new RowMeta();
      Object[] updateRowData=new Object[rowMeta.size()];
      ValueMetaInterface keyValueMeta=rowMeta.getValueMeta(0);
      StringBuilder sqlBuff=new StringBuilder(250);
      sqlBuff.append("UPDATE ").append(schemaTable).append(" SET ");
      for (int i=1; i < rowMeta.size(); i++) {
        ValueMetaInterface valueMeta=rowMeta.getValueMeta(i);
        if (i > 1) {
          sqlBuff.append(", ");
        }
        sqlBuff.append(databaseMeta.quoteField(valueMeta.getName())).append("=? ");
        updateRowMeta.addValueMeta(valueMeta);
        updateRowData[i - 1]=rowData[i];
      }
      sqlBuff.append("WHERE ").append(databaseMeta.quoteField(keyValueMeta.getName())).append("=? ");
      updateRowMeta.addValueMeta(keyValueMeta);
      updateRowData[rowMeta.size() - 1]=rowData[0];
      String sql=sqlBuff.toString();
      execStatement(sql,updateRowMeta,updateRowData);
    }
 else {
      insertRow(environmentSubstitute(logTable.getActualSchemaName()),environmentSubstitute(logTable.getActualTableName()),logRecord.getRowMeta(),logRecord.getData());
    }
  }
 catch (  Exception e) {
    DatabaseLogExceptionFactory.getExceptionStrategy(logTable,e).registerException(log,e,PKG,"Database.Error.WriteLogTable",environmentSubstitute(logTable.getActualTableName()));
  }
}
