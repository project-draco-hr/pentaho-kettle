{
  boolean cleared=false;
  for (  StepInjectionMetaEntry lookFields : all) {
    Entry fieldsEntry=Entry.findEntry(lookFields.getKey());
    if (fieldsEntry != null) {
switch (fieldsEntry) {
case PARAMETERS:
{
          for (          StepInjectionMetaEntry lookField : lookFields.getDetails()) {
            Entry fieldEntry=Entry.findEntry(lookField.getKey());
            if (fieldEntry != null) {
              if (fieldEntry == Entry.PARAMETER) {
                String parameter=null;
                String fieldname=null;
                List<StepInjectionMetaEntry> entries=lookField.getDetails();
                for (                StepInjectionMetaEntry entry : entries) {
                  Entry metaEntry=Entry.findEntry(entry.getKey());
                  if (metaEntry != null) {
                    String value=(String)entry.getValue();
switch (metaEntry) {
case PARAMETER_NAME:
                      parameter=value;
                    break;
case FIELDNAME:
                  fieldname=value;
                break;
            }
          }
        }
        if (!Const.isEmpty(parameter) && !Const.isEmpty(fieldname)) {
          if (!cleared) {
            meta.getParameterFieldMap().clear();
            cleared=true;
          }
          meta.getParameterFieldMap().put(parameter,fieldname);
        }
      }
    }
  }
}
break;
case INPUT_FILE_FIELD:
meta.setInputFileField((String)lookFields.getValue());
break;
case OUTPUT_FILE_FIELD:
meta.setOutputFileField((String)lookFields.getValue());
break;
case OUTPUT_PROCESSOR_TYPE:
meta.setOutputProcessorType(ProcessorType.getProcessorTypeByCode((String)lookFields.getValue()));
break;
}
}
}
}
