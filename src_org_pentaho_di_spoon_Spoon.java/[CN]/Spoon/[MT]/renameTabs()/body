{
  Collection collection=tabMap.values();
  List list=new ArrayList();
  list.addAll(collection);
  for (Iterator iter=list.iterator(); iter.hasNext(); ) {
    TabMapEntry entry=(TabMapEntry)iter.next();
    if (entry.getTabItem().isDisposed()) {
      tabMap.remove(entry.getObjectName());
      continue;
    }
    String before=entry.getTabItem().getText();
    Object managedObject=entry.getObject().getManagedObject();
    if (managedObject != null) {
      if (entry.getObject() instanceof TransGraph) {
        entry.getTabItem().setText(makeTransGraphTabName((TransMeta)managedObject));
        entry.getTabItem().setToolTipText(Messages.getString("Spoon.TabTrans.Tooltip",makeTransGraphTabName((TransMeta)managedObject)));
      }
 else       if (entry.getObject() instanceof TransLog)       entry.getTabItem().setText(makeLogTabName((TransMeta)managedObject));
 else       if (entry.getObject() instanceof TransHistory)       entry.getTabItem().setText(makeHistoryTabName((TransMeta)managedObject));
 else       if (entry.getObject() instanceof JobGraph) {
        entry.getTabItem().setText(makeJobGraphTabName((JobMeta)managedObject));
        entry.getTabItem().setToolTipText(Messages.getString("Spoon.TabJob.Tooltip",makeJobGraphTabName((JobMeta)managedObject)));
      }
 else       if (entry.getObject() instanceof JobLog)       entry.getTabItem().setText(makeJobLogTabName((JobMeta)managedObject));
 else       if (entry.getObject() instanceof JobHistory)       entry.getTabItem().setText(makeJobHistoryTabName((JobMeta)managedObject));
    }
    String after=entry.getTabItem().getText();
    if (!before.equals(after)) {
      entry.setObjectName(after);
      tabMap.remove(before);
      tabMap.put(after,entry);
      if (entry.getObject() instanceof TransGraph) {
        transformationMap.remove(before);
        transformationMap.put(after,entry.getObject().getManagedObject());
      }
      if (entry.getObject() instanceof JobGraph) {
        jobMap.remove(before);
        jobMap.put(after,entry.getObject().getManagedObject());
      }
    }
  }
  setShellText();
}
