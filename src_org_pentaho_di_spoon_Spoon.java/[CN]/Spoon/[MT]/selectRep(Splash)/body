{
  RepositoryMeta repositoryMeta=null;
  UserInfo userinfo=null;
  StringBuffer optionRepname=getCommandLineOption("rep").getArgument();
  StringBuffer optionFilename=getCommandLineOption("file").getArgument();
  if (Const.isEmpty(optionRepname) && Const.isEmpty(optionFilename) && props.showRepositoriesDialogAtStartup()) {
    log.logBasic(APP_NAME,Messages.getString("Spoon.Log.AskingForRepository"));
    int perms[]=new int[]{PermissionMeta.TYPE_PERMISSION_TRANSFORMATION,PermissionMeta.TYPE_PERMISSION_JOB};
    splash.hide();
    RepositoriesDialog rd=new RepositoriesDialog(display,perms,Messages.getString("Spoon.Application.Name"));
    if (rd.open()) {
      repositoryMeta=rd.getRepository();
      userinfo=rd.getUser();
      if (!userinfo.useTransformations()) {
        MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
        mb.setMessage(Messages.getString("Spoon.Dialog.RepositoryUserCannotWork.Message"));
        mb.setText(Messages.getString("Spoon.Dialog.RepositoryUserCannotWork.Title"));
        mb.open();
        userinfo=null;
        repositoryMeta=null;
      }
 else {
        String repName=repositoryMeta.getName();
        RepositoriesMeta repsinfo=new RepositoriesMeta(log);
        if (repsinfo.readData()) {
          repositoryMeta=repsinfo.findRepository(repName);
          if (repositoryMeta != null) {
            setRepository(new Repository(log,repositoryMeta,userinfo));
          }
 else {
            log.logError(APP_NAME,Messages.getString("Spoon.Log.NoRepositoryRrovided"));
          }
        }
 else {
          log.logError(APP_NAME,Messages.getString("Spoon.Log.NoRepositoriesDefined"));
        }
      }
    }
 else {
      if (rd.isCancelled()) {
        return false;
      }
    }
  }
  return true;
}
