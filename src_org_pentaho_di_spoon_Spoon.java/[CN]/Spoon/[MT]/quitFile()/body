{
  log.logDetailed(toString(),Messages.getString("Spoon.Log.QuitApplication"));
  boolean exit=true;
  saveSettings();
  if (props.showExitWarning()) {
    MessageDialogWithToggle md=new MessageDialogWithToggle(shell,Messages.getString("System.Warning"),null,Messages.getString("Spoon.Message.Warning.PromptExit"),MessageDialog.WARNING,new String[]{Messages.getString("Spoon.Message.Warning.Yes"),Messages.getString("Spoon.Message.Warning.No")},1,Messages.getString("Spoon.Message.Warning.NotShowWarning"),!props.showExitWarning());
    int idx=md.open();
    props.setExitWarningShown(!md.getToggleState());
    props.saveProps();
    if ((idx & 0xFF) == 1)     return false;
  }
  List<TabMapEntry> list=new ArrayList<TabMapEntry>();
  list.addAll(tabMap.values());
  for (Iterator iter=list.iterator(); iter.hasNext() && exit; ) {
    TabMapEntry mapEntry=(TabMapEntry)iter.next();
    TabItemInterface itemInterface=mapEntry.getObject();
    if (!itemInterface.canBeClosed()) {
      tabfolder.setSelected(mapEntry.getTabItem());
      int reply=itemInterface.showChangedWarning();
      if (reply == SWT.YES) {
        exit=itemInterface.applyChanges();
      }
 else {
        if (reply == SWT.CANCEL) {
          exit=false;
        }
 else {
          exit=true;
        }
      }
    }
  }
  if (exit) {
    for (Iterator iter=list.iterator(); iter.hasNext() && exit; ) {
      TabMapEntry mapEntry=(TabMapEntry)iter.next();
      if (!mapEntry.getObject().canBeClosed()) {
        if (mapEntry.getObject() instanceof TransGraph) {
          TransMeta transMeta=(TransMeta)mapEntry.getObject().getManagedObject();
          if (transMeta.hasChanged()) {
            mapEntry.getTabItem().dispose();
          }
        }
        if (mapEntry.getObject() instanceof TransLog) {
          TransLog transLog=(TransLog)mapEntry.getObject();
          if (transLog.isRunning()) {
            transLog.stop();
            mapEntry.getTabItem().dispose();
          }
        }
      }
    }
  }
  if (exit)   dispose();
  return exit;
}
