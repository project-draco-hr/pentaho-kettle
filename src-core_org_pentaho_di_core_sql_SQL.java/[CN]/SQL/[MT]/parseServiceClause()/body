{
  if (Const.isEmpty(serviceClause)) {
    serviceName="dual";
    return;
  }
  List<String> parts=ThinUtil.splitClause(serviceClause,' ','"');
  if (parts.size() >= 1) {
    serviceName=parts.get(0);
  }
  if (parts.size() == 2) {
    serviceAlias=parts.get(1);
  }
  if (parts.size() == 3) {
    if (parts.get(1).equalsIgnoreCase("AS")) {
      serviceAlias=parts.get(2);
    }
 else {
      throw new KettleSQLException("AS expected in from clause: " + serviceClause);
    }
  }
  if (parts.size() > 3) {
    throw new KettleSQLException("Found " + parts.size() + " parts for the FROM clause when only a table name and optionally an alias is supported: "+ serviceClause);
  }
  serviceAlias=Const.NVL(serviceAlias,serviceName);
}
