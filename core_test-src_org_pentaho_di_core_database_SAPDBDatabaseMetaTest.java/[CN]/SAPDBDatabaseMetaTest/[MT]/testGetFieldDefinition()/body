{
  assertEquals("FOO TIMESTAMP",nativeMeta.getFieldDefinition(new ValueMetaDate("FOO"),"","",false,true,false));
  assertEquals("TIMESTAMP",nativeMeta.getFieldDefinition(new ValueMetaTimestamp("FOO"),"","",false,false,false));
  assertEquals("CHAR(1)",nativeMeta.getFieldDefinition(new ValueMetaBoolean("FOO"),"","",false,false,false));
  assertEquals("BIGINT NOT NULL PRIMARY KEY",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",10,0),"FOO","",false,false,false));
  assertEquals("BIGINT NOT NULL PRIMARY KEY",nativeMeta.getFieldDefinition(new ValueMetaBigNumber("FOO",10,0),"","FOO",false,false,false));
  assertEquals("DECIMAL(10, 3)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",10,3),"","",false,false,false));
  assertEquals("DECIMAL(19)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",19,0),"","",false,false,false));
  assertEquals("INT64",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",10,0),"","",false,false,false));
  assertEquals("SMALLINT",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",4,0),"","",false,false,false));
  assertEquals("INTEGER",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",5,0),"","",false,false,false));
  assertEquals("DOUBLE",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",-7,-3),"","",false,false,false));
  assertEquals("VARCHAR(32719)",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",32719,0),"","",false,false,false));
  assertEquals("BLOB SUB_TYPE TEXT",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",32720,0),"","",false,false,false));
  assertEquals("VARCHAR(8000)",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",-122,0),"","",false,false,false));
  assertEquals(" UNKNOWN",nativeMeta.getFieldDefinition(new ValueMetaInternetAddress("FOO"),"","",false,false,false));
  assertEquals(" UNKNOWN" + System.getProperty("line.separator"),nativeMeta.getFieldDefinition(new ValueMetaInternetAddress("FOO"),"","",false,false,true));
}
