{
  List<SocketPortAllocation> serverSocketPortsMap=hostServerSocketPortsMap.get(hostname);
  if (serverSocketPortsMap == null) {
    serverSocketPortsMap=new ArrayList<SocketPortAllocation>();
    hostServerSocketPortsMap.put(hostname,serverSocketPortsMap);
  }
  SocketPortAllocation socketPortAllocation=null;
  int maxPort=portRangeStart - 1;
  for (int index=0; index < serverSocketPortsMap.size(); index++) {
    SocketPortAllocation spa=serverSocketPortsMap.get(index);
    if (spa.isAllocated()) {
      if (spa.getSourceSlaveName().equalsIgnoreCase(sourceSlaveName) && spa.getTargetSlaveName().equalsIgnoreCase(targetSlaveName) && spa.getTransformationName().equalsIgnoreCase(transformationName)&& spa.getSourceStepName().equalsIgnoreCase(sourceStepName)&& spa.getSourceStepCopy().equalsIgnoreCase(sourceStepCopy)&& spa.getTargetStepName().equalsIgnoreCase(targetStepName)&& spa.getTargetStepCopy().equalsIgnoreCase(targetStepCopy)) {
        socketPortAllocation=spa;
        break;
      }
    }
 else {
      socketPortAllocation=new SocketPortAllocation(spa.getPort(),new Date(),transformationName,sourceSlaveName,sourceStepName,sourceStepCopy,targetSlaveName,targetStepName,targetStepCopy);
      serverSocketPortsMap.set(index,socketPortAllocation);
    }
    if (spa.getPort() > maxPort) {
      maxPort=spa.getPort();
    }
  }
  if (socketPortAllocation == null) {
    socketPortAllocation=new SocketPortAllocation(maxPort + 1,new Date(),transformationName,sourceSlaveName,sourceStepName,sourceStepCopy,targetSlaveName,targetStepName,targetStepCopy);
    serverSocketPortsMap.add(socketPortAllocation);
  }
  return socketPortAllocation;
}
