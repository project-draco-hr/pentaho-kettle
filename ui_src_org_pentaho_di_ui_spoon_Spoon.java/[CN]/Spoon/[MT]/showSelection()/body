{
  TreeSelection[] objects=getTreeObjects(selectionTree);
  if (objects.length != 1) {
    return;
  }
  TreeSelection object=objects[0];
  final Object selection=object.getSelection();
  final Object parent=object.getParent();
  TransMeta transMeta=null;
  if (selection instanceof TransMeta) {
    transMeta=(TransMeta)selection;
  }
  if (parent instanceof TransMeta) {
    transMeta=(TransMeta)parent;
  }
  if (transMeta != null) {
    TabMapEntry entry=delegates.tabs.findTabMapEntry(transMeta);
    if (entry != null) {
      int current=tabfolder.getSelectedIndex();
      int desired=tabfolder.indexOf(entry.getTabItem());
      if (current != desired) {
        tabfolder.setSelected(desired);
      }
      transMeta.setInternalKettleVariables();
      if (getCoreObjectsState() != STATE_CORE_OBJECTS_SPOON) {
        refreshCoreObjects();
      }
    }
  }
  JobMeta jobMeta=null;
  if (selection instanceof JobMeta) {
    jobMeta=(JobMeta)selection;
  }
  if (parent instanceof JobMeta) {
    jobMeta=(JobMeta)parent;
  }
  if (jobMeta != null) {
    TabMapEntry entry=delegates.tabs.findTabMapEntry(transMeta);
    if (entry != null) {
      int current=tabfolder.getSelectedIndex();
      int desired=tabfolder.indexOf(entry.getTabItem());
      if (current != desired) {
        tabfolder.setSelected(desired);
      }
      jobMeta.setInternalKettleVariables();
      if (getCoreObjectsState() != STATE_CORE_OBJECTS_CHEF) {
        refreshCoreObjects();
      }
    }
  }
}
