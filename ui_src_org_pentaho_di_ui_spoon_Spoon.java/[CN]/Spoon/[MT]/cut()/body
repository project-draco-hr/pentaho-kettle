{
  TransMeta transMeta=getActiveTransformation();
  JobMeta jobMeta=getActiveJob();
  boolean transActive=transMeta != null;
  boolean jobActive=jobMeta != null;
  if (transActive) {
    List<StepMeta> stepMetas=transMeta.getSelectedSteps();
    if (stepMetas != null && stepMetas.size() > 0) {
      copySteps();
      for (      StepMeta stepMeta : stepMetas) {
        delStep(transMeta,stepMeta);
      }
    }
  }
 else   if (jobActive) {
    List<JobEntryCopy> jobEntryCopies=jobMeta.getSelectedEntries();
    if (jobEntryCopies != null && jobEntryCopies.size() > 0) {
      copyJobentries();
      for (      JobEntryCopy jobEntryCopy : jobEntryCopies) {
        deleteJobEntryCopies(jobMeta,jobEntryCopy);
      }
    }
  }
}
