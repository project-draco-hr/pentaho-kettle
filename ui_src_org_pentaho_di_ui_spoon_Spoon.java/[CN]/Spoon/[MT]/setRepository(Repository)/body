{
  this.rep=rep;
  try {
    if (metaStore.getMetaStoreList().size() > 1) {
      metaStore.getMetaStoreList().remove(0);
      metaStore.setActiveMetaStoreName(metaStore.getMetaStoreList().get(0).getName());
    }
    if (rep != null) {
      this.capabilities=rep.getRepositoryMeta().getRepositoryCapabilities();
      IMetaStore repositoryMetaStore=rep.getMetaStore();
      if (repositoryMetaStore != null) {
        metaStore.addMetaStore(0,repositoryMetaStore);
        log.logBasic("Connected to metastore : " + repositoryMetaStore.getName() + ", added to delegating metastore");
      }
 else {
        log.logBasic("No metastore found in the repository : " + rep.getName() + ", connected? "+ rep.isConnected());
      }
    }
  }
 catch (  MetaStoreException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Dialog.ErrorAddingRepositoryMetaStore.Title"),BaseMessages.getString(PKG,"Spoon.Dialog.ErrorReadingSharedObjects.Message"),e);
  }
  UISupportRegistery.getInstance().registerUISupport(RepositorySecurityProvider.class,BaseRepositoryExplorerUISupport.class);
  UISupportRegistery.getInstance().registerUISupport(RepositorySecurityManager.class,ManageUserUISupport.class);
  if (rep != null) {
    SpoonPluginManager.getInstance().notifyLifecycleListeners(SpoonLifeCycleEvent.REPOSITORY_CHANGED);
  }
  delegates.update(this);
  enableMenus();
}
