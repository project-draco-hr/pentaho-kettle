{
  if (log.isDetailed())   log.logDetailed(BaseMessages.getString(PKG,"Spoon.Log.QuitApplication"));
  boolean exit=true;
  saveSettings();
  if (props.showExitWarning() && canCancel) {
    MessageDialogWithToggle md=new MessageDialogWithToggle(shell,BaseMessages.getString(PKG,"System.Warning"),null,BaseMessages.getString(PKG,"Spoon.Message.Warning.PromptExit"),MessageDialog.WARNING,new String[]{BaseMessages.getString(PKG,"Spoon.Message.Warning.Yes"),BaseMessages.getString(PKG,"Spoon.Message.Warning.No")},1,BaseMessages.getString(PKG,"Spoon.Message.Warning.NotShowWarning"),!props.showExitWarning());
    MessageDialogWithToggle.setDefaultImage(GUIResource.getInstance().getImageSpoon());
    int idx=md.open();
    props.setExitWarningShown(!md.getToggleState());
    props.saveProps();
    if ((idx & 0xFF) == 1)     return false;
  }
  if (quitFileCalled) {
    return true;
  }
  quitFileCalled=true;
  List<TabMapEntry> list=delegates.tabs.getTabs();
  for (  TabMapEntry mapEntry : list) {
    TabItemInterface itemInterface=mapEntry.getObject();
    if (!itemInterface.canBeClosed()) {
      tabfolder.setSelected(mapEntry.getTabItem());
      int reply=itemInterface.showChangedWarning();
      if (reply == SWT.YES) {
        exit=itemInterface.applyChanges();
      }
 else {
        if (reply == SWT.CANCEL) {
          exit=false;
        }
 else {
          exit=true;
        }
      }
    }
  }
  if (exit || !canCancel) {
    for (    TabMapEntry mapEntry : list) {
      if (!mapEntry.getObject().canBeClosed()) {
        if (mapEntry.getObject() instanceof TransGraph) {
          TransMeta transMeta=(TransMeta)mapEntry.getObject().getManagedObject();
          if (transMeta.hasChanged()) {
            delegates.tabs.removeTab(mapEntry);
          }
        }
        if (mapEntry.getObject() instanceof TransGraph) {
          TransGraph transGraph=(TransGraph)mapEntry.getObject();
          if (transGraph.isRunning()) {
            transGraph.stop();
            delegates.tabs.removeTab(mapEntry);
          }
        }
      }
    }
  }
  try {
    lifecycleSupport.onExit(this);
  }
 catch (  LifecycleException e) {
    MessageBox box=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
    box.setMessage(e.getMessage());
    box.open();
  }
  if (exit) {
    close();
  }
  return exit;
}
