{
  List<StepMeta> nextSteps=transMeta.findNextSteps(fr);
  int nrNextSteps=nextSteps.size();
  if (nrNextSteps == 2) {
    boolean distributes=fr.getStepMetaInterface().excludeFromCopyDistributeVerification();
    boolean customDistribution=false;
    if (props.showCopyOrDistributeWarning() && !fr.getStepMetaInterface().excludeFromCopyDistributeVerification()) {
      MessageDialogWithToggle md=new MessageDialogWithToggle(shell,BaseMessages.getString(PKG,"System.Warning"),null,BaseMessages.getString(PKG,"Spoon.Dialog.CopyOrDistribute.Message",fr.getName(),Integer.toString(nrNextSteps)),MessageDialog.WARNING,getRowDistributionLabels(),0,BaseMessages.getString(PKG,"Spoon.Message.Warning.NotShowWarning"),!props.showCopyOrDistributeWarning());
      MessageDialogWithToggle.setDefaultImage(GUIResource.getInstance().getImageSpoon());
      int idx=md.open();
      props.setShowCopyOrDistributeWarning(!md.getToggleState());
      props.saveProps();
      distributes=idx == Spoon.MESSAGE_DIALOG_WITH_TOGGLE_YES_BUTTON_ID;
      customDistribution=idx == Spoon.MESSAGE_DIALOG_WITH_TOGGLE_CUSTOM_DISTRIBUTION_BUTTON_ID;
    }
    if (distributes) {
      fr.setDistributes(true);
      fr.setRowDistribution(null);
    }
 else     if (customDistribution) {
      RowDistributionInterface rowDistribution=getActiveTransGraph().askUserForCustomDistributionMethod();
      fr.setDistributes(true);
      fr.setRowDistribution(rowDistribution);
    }
 else {
      fr.setDistributes(false);
      fr.setDistributes(false);
    }
    refreshTree();
    refreshGraph();
  }
}
