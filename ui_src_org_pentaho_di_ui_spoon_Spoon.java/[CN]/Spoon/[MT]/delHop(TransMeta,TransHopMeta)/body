{
  int index=transMeta.indexOfTransHop(transHopMeta);
  addUndoDelete(transMeta,new Object[]{(TransHopMeta)transHopMeta.clone()},new int[]{index});
  transMeta.removeTransHop(index);
  if (transHopMeta.getFromStep().isDoingErrorHandling()) {
    StepErrorMeta stepErrorMeta=transHopMeta.getFromStep().getStepErrorMeta();
    if (stepErrorMeta.getTargetStep() != null && stepErrorMeta.getTargetStep().equals(transHopMeta.getToStep())) {
      StepMeta stepMeta=transHopMeta.getFromStep();
      StepMeta before=(StepMeta)stepMeta.clone();
      stepErrorMeta.setEnabled(false);
      index=transMeta.indexOfStep(stepMeta);
      addUndoChange(transMeta,new Object[]{before},new Object[]{stepMeta},new int[]{index});
    }
  }
  refreshTree();
  refreshGraph();
}
