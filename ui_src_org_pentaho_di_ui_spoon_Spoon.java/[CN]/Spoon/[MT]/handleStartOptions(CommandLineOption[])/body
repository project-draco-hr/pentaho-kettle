{
  StringBuilder optionRepname=getCommandLineOption(options,"rep").getArgument();
  StringBuilder optionFilename=getCommandLineOption(options,"file").getArgument();
  StringBuilder optionDirname=getCommandLineOption(options,"dir").getArgument();
  StringBuilder optionTransname=getCommandLineOption(options,"trans").getArgument();
  StringBuilder optionJobname=getCommandLineOption(options,"job").getArgument();
  try {
    if (!Const.isEmpty(optionRepname) || !Const.isEmpty(optionFilename)) {
      if (!Const.isEmpty(optionRepname)) {
        if (rep != null) {
          if (Const.isEmpty(optionDirname)) {
            optionDirname=new StringBuilder(RepositoryDirectory.DIRECTORY_SEPARATOR);
          }
          int t=(Const.isEmpty(optionFilename) ? 0 : 1) + (Const.isEmpty(optionJobname) ? 0 : 1) + (Const.isEmpty(optionTransname) ? 0 : 1);
          if (t > 1) {
            log.logError(BaseMessages.getString(PKG,"Spoon.Log.MutuallyExcusive"));
          }
 else           if (t == 1) {
            if (!Const.isEmpty(optionFilename)) {
              openFile(optionFilename.toString(),false);
            }
 else {
              RepositoryDirectoryInterface rdi=rep.findDirectory(optionDirname.toString());
              if (rdi == null) {
                log.logError(BaseMessages.getString(PKG,"Spoon.Log.UnableFindDirectory",optionDirname.toString()));
              }
 else {
                if (!Const.isEmpty(optionTransname)) {
                  TransMeta transMeta=rep.loadTransformation(optionTransname.toString(),rdi,null,true,null);
                  transMeta.clearChanged();
                  transMeta.setInternalKettleVariables();
                  addTransGraph(transMeta);
                }
 else {
                  JobMeta jobMeta=rep.loadJob(optionJobname.toString(),rdi,null,null);
                  jobMeta.clearChanged();
                  jobMeta.setInternalKettleVariables();
                  addJobGraph(jobMeta);
                }
              }
            }
          }
        }
 else {
          log.logError(BaseMessages.getString(PKG,"Spoon.Log.NoRepositoriesDefined"));
        }
      }
 else       if (!Const.isEmpty(optionFilename)) {
        openFile(optionFilename.toString(),false);
      }
    }
  }
 catch (  KettleException ke) {
    hideSplash();
    log.logError(BaseMessages.getString(PKG,"Spoon.Log.ErrorOccurred") + Const.CR + ke.getMessage());
    log.logError(Const.getStackTracker(ke));
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Log.ErrorOccurred"),BaseMessages.getString(PKG,"Spoon.Log.ErrorOccurred") + Const.CR + ke.getMessage(),ke);
    rep=null;
  }
}
