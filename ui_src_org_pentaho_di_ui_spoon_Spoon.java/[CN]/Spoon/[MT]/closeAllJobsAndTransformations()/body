{
  if (getActiveMeta() == null) {
    return true;
  }
  boolean createPerms=!RepositorySecurityUI.verifyOperations(shell,rep,false,RepositoryOperation.MODIFY_TRANSFORMATION,RepositoryOperation.MODIFY_JOB);
  boolean executePerms=!RepositorySecurityUI.verifyOperations(shell,rep,false,RepositoryOperation.EXECUTE_TRANSFORMATION,RepositoryOperation.EXECUTE_JOB);
  boolean readPerms=!RepositorySecurityUI.verifyOperations(shell,rep,false,RepositoryOperation.READ_TRANSFORMATION,RepositoryOperation.READ_JOB);
  String warningTitle=BaseMessages.getString(PKG,"Spoon.Dialog.WarnToCloseAllForce.Disconnect.Title");
  String warningText=BaseMessages.getString(PKG,"Spoon.Dialog.WarnToCloseAllForce.Disconnect.Message");
  int buttons=SWT.OK;
  if ((readPerms && createPerms && executePerms) || (readPerms && executePerms)) {
    warningTitle=BaseMessages.getString(PKG,"Spoon.Dialog.WarnToCloseAllOption.Disconnect.Title");
    warningText=BaseMessages.getString(PKG,"Spoon.Dialog.WarnToCloseAllOption.Disconnect.Message");
    buttons=SWT.YES | SWT.NO;
  }
  MessageBox mb=new MessageBox(Spoon.getInstance().getShell(),buttons | SWT.ICON_WARNING);
  mb.setMessage(warningText);
  mb.setText(warningTitle);
  final int isCloseAllFiles=mb.open();
  if (isCloseAllFiles == SWT.YES) {
    return Spoon.getInstance().closeAllFiles();
  }
 else   if ((isCloseAllFiles == SWT.NO) && (executePerms)) {
    return true;
  }
 else {
    return false;
  }
}
