{
  org.pentaho.ui.xul.dom.Document doc=(org.pentaho.ui.xul.dom.Document)mainSpoonContainer.getDocumentRoot();
  JfaceMenupopup recentFilesPopup=(JfaceMenupopup)doc.getElementById("file-open-recent-popup");
  recentFilesPopup.removeChildren();
  List<LastUsedFile> lastUsedFiles=props.getLastUsedFiles();
  for (int i=0; i < lastUsedFiles.size(); i++) {
    final LastUsedFile lastUsedFile=lastUsedFiles.get(i);
    char chr=(char)('1' + i);
    String accessKey="ctrl-" + chr;
    String accessText="CTRL-" + chr;
    String text=lastUsedFile.toString();
    String id="last-file-" + i;
    if (i > 8) {
      accessKey=null;
      accessText=null;
    }
    final String lastFileId=Integer.toString(i);
    Action action=new Action("open-last-file-" + (i + 1),Action.AS_DROP_DOWN_MENU){
      public void run(){
        lastFileSelect(lastFileId);
      }
    }
;
    int targetLength=40;
    if (text.length() > targetLength) {
      int lastSep=text.replace('\\','/').lastIndexOf('/');
      if (lastSep != -1) {
        String fileName="..." + text.substring(lastSep);
        if (fileName.length() < targetLength) {
          int leadSize=targetLength - fileName.length();
          text=text.substring(0,leadSize) + fileName;
        }
 else {
          text=fileName;
        }
      }
    }
    JfaceMenuitem miFileLast=new JfaceMenuitem(null,recentFilesPopup,mainSpoonContainer,text,0,action);
    miFileLast.setLabel(text);
    miFileLast.setId(id);
    if (accessText != null && accessKey != null) {
      miFileLast.setAcceltext(accessText);
      miFileLast.setAccesskey(accessKey);
    }
    if (lastUsedFile.isTransformation()) {
      ((JfaceMenuitem)miFileLast).setImage(GUIResource.getInstance().getImageTransGraph());
    }
 else     if (lastUsedFile.isJob()) {
      ((JfaceMenuitem)miFileLast).setImage(GUIResource.getInstance().getImageJobGraph());
    }
    miFileLast.setCommand("spoon.lastFileSelect('" + i + "')");
  }
}
