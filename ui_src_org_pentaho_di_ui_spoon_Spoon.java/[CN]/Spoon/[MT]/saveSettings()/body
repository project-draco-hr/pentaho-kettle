{
  if (shell.isDisposed()) {
    return;
  }
  WindowProperty windowProperty=new WindowProperty(shell);
  windowProperty.setName(APP_TITLE);
  props.setScreen(windowProperty);
  props.setLogLevel(DefaultLogLevel.getLogLevel().getCode());
  props.setSashWeights(sashform.getWeights());
  props.getOpenTabFiles().clear();
  for (  TabMapEntry entry : delegates.tabs.getTabs()) {
    String fileType=null;
    String filename=null;
    String directory=null;
    int openType=0;
    if (entry.getObjectType() == ObjectType.TRANSFORMATION_GRAPH) {
      fileType=LastUsedFile.FILE_TYPE_TRANSFORMATION;
      TransMeta transMeta=(TransMeta)entry.getObject().getManagedObject();
      filename=rep != null ? transMeta.getName() : transMeta.getFilename();
      directory=transMeta.getRepositoryDirectory().toString();
      openType=LastUsedFile.OPENED_ITEM_TYPE_MASK_GRAPH;
      entry.setObjectName(transMeta.getName());
    }
 else     if (entry.getObjectType() == ObjectType.JOB_GRAPH) {
      fileType=LastUsedFile.FILE_TYPE_JOB;
      JobMeta jobMeta=(JobMeta)entry.getObject().getManagedObject();
      filename=rep != null ? jobMeta.getName() : jobMeta.getFilename();
      directory=jobMeta.getRepositoryDirectory().toString();
      openType=LastUsedFile.OPENED_ITEM_TYPE_MASK_GRAPH;
      entry.setObjectName(jobMeta.getName());
    }
    if (fileType != null) {
      props.addOpenTabFile(fileType,filename,directory,rep != null,rep != null ? rep.getName() : null,openType);
    }
  }
  props.saveProps();
}
