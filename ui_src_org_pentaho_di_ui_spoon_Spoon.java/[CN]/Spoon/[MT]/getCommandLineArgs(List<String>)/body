{
  CommandLineOption[] clOptions=new CommandLineOption[]{new CommandLineOption("rep","Repository name",new StringBuilder()),new CommandLineOption("user","Repository username",new StringBuilder()),new CommandLineOption("pass","Repository password",new StringBuilder()),new CommandLineOption("job","The name of the job to launch",new StringBuilder()),new CommandLineOption("trans","The name of the transformation to launch",new StringBuilder()),new CommandLineOption("dir","The directory (don't forget the leading /)",new StringBuilder()),new CommandLineOption("file","The filename (Transformation in XML) to launch",new StringBuilder()),new CommandLineOption("level","The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)",new StringBuilder()),new CommandLineOption("logfile","The logging file to write to",new StringBuilder()),new CommandLineOption("log","The logging file to write to (deprecated)",new StringBuilder(),false,true),new CommandLineOption("perspective","The perspective to start in",new StringBuilder(),false,true)};
  log=new LogChannel(APP_NAME);
  if (!CommandLineOption.parseArguments(args,clOptions,log)) {
    log.logError("Command line option not understood");
    System.exit(8);
  }
  String kettleRepname=Const.getEnvironmentVariable("KETTLE_REPOSITORY",null);
  String kettleUsername=Const.getEnvironmentVariable("KETTLE_USER",null);
  String kettlePassword=Const.getEnvironmentVariable("KETTLE_PASSWORD",null);
  if (!Utils.isEmpty(kettleRepname)) {
    clOptions[0].setArgument(new StringBuilder(kettleRepname));
  }
  if (!Utils.isEmpty(kettleUsername)) {
    clOptions[1].setArgument(new StringBuilder(kettleUsername));
  }
  if (!Utils.isEmpty(kettlePassword)) {
    clOptions[2].setArgument(new StringBuilder(kettlePassword));
  }
  return clOptions;
}
