{
  int idx=Integer.parseInt(id);
  List<LastUsedFile> lastUsedFiles=props.getLastUsedFiles();
  final LastUsedFile lastUsedFile=lastUsedFiles.get(idx);
  if (lastUsedFile.isSourceRepository() && (rep == null || !rep.getName().equalsIgnoreCase(lastUsedFile.getRepositoryName()))) {
    try {
      ExtensionPointHandler.callExtensionPoint(log,KettleExtensionPoint.OpenRecent.id,lastUsedFile);
    }
 catch (    KettleException ke) {
      log.logError("Failed to call extension point",ke);
    }
  }
 else   if (!lastUsedFile.isSourceRepository()) {
    openFile(lastUsedFile.getFilename(),false);
  }
 else {
    try {
      loadLastUsedFile(lastUsedFile,rep == null ? null : rep.getName());
      addMenuLast();
    }
 catch (    KettleException ke) {
      new ErrorDialog(loginDialog.getShell(),BaseMessages.getString(PKG,"Spoon.Dialog.LoadTransformationError.Title"),BaseMessages.getString(PKG,"Spoon.Dialog.LoadTransformationError.Message"),ke);
    }
  }
}
