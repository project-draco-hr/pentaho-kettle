{
  if (tabComp != null) {
    tabComp.dispose();
  }
  tabComp=new Composite(sashform,SWT.BORDER);
  props.setLook(tabComp);
  tabComp.setLayout(new FillLayout());
  tabfolder=new TabSet(tabComp);
  tabfolder.setChangedFont(GUIResource.getInstance().getFontBold());
  props.setLook(tabfolder.getSwtTabset(),Props.WIDGET_STYLE_TAB);
  final CTabFolder cTabFolder=tabfolder.getSwtTabset();
  cTabFolder.addMenuDetectListener(new MenuDetectListener(){
    @Override public void menuDetected(    MenuDetectEvent event){
      org.eclipse.swt.graphics.Point real=new org.eclipse.swt.graphics.Point(event.x,event.y);
      org.eclipse.swt.graphics.Point point=display.map(null,cTabFolder,real);
      final CTabItem item=cTabFolder.getItem(point);
      if (item != null) {
        Menu menu=new Menu(cTabFolder);
        MenuItem closeItem=new MenuItem(menu,SWT.NONE);
        closeItem.setText(BaseMessages.getString(PKG,"Spoon.Tab.Close"));
        closeItem.addSelectionListener(new SelectionAdapter(){
          @Override public void widgetSelected(          SelectionEvent event){
            int index=tabfolder.getSwtTabset().indexOf(item);
            if (index >= 0) {
              TabMapEntry entry=delegates.tabs.getTabs().get(index);
              tabClose(entry.getTabItem());
            }
          }
        }
);
        MenuItem closeAllItems=new MenuItem(menu,SWT.NONE);
        closeAllItems.setText(BaseMessages.getString(PKG,"Spoon.Tab.CloseAll"));
        closeAllItems.addSelectionListener(new SelectionAdapter(){
          @Override public void widgetSelected(          SelectionEvent event){
            for (            TabMapEntry entry : delegates.tabs.getTabs()) {
              tabClose(entry.getTabItem());
            }
          }
        }
);
        MenuItem closeOtherItems=new MenuItem(menu,SWT.NONE);
        closeOtherItems.setText(BaseMessages.getString(PKG,"Spoon.Tab.CloseOthers"));
        closeOtherItems.addSelectionListener(new SelectionAdapter(){
          @Override public void widgetSelected(          SelectionEvent event){
            int index=tabfolder.getSwtTabset().indexOf(item);
            if (index >= 0) {
              TabMapEntry entry=delegates.tabs.getTabs().get(index);
              for (              TabMapEntry closeEntry : delegates.tabs.getTabs()) {
                if (!closeEntry.equals(entry)) {
                  tabClose(closeEntry.getTabItem());
                }
              }
            }
          }
        }
);
        menu.setLocation(real);
        menu.setVisible(true);
      }
    }
  }
);
  int[] weights=props.getSashWeights();
  sashform.setWeights(weights);
  sashform.setVisible(true);
  Control[] comps=sashform.getChildren();
  for (  Control comp : comps) {
    if (comp instanceof Sash) {
      int limit=10;
      final int SASH_LIMIT=Const.isOSX() ? 150 : limit;
      final Sash sash=(Sash)comp;
      sash.addSelectionListener(new SelectionAdapter(){
        public void widgetSelected(        SelectionEvent event){
          Rectangle rect=sash.getParent().getClientArea();
          event.x=Math.min(Math.max(event.x,SASH_LIMIT),rect.width - SASH_LIMIT);
          if (event.detail != SWT.DRAG) {
            sash.setBounds(event.x,event.y,event.width,event.height);
            sashform.layout();
          }
        }
      }
);
    }
  }
  tabfolder.addListener(this);
}
