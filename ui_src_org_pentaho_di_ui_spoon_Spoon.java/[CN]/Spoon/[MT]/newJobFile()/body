{
  try {
    JobMeta jobMeta=new JobMeta();
    jobMeta.addObserver(this);
    setJobMetaVariables(jobMeta);
    jobMeta.setRepository(rep);
    jobMeta.setMetaStore(metaStore);
    try {
      SharedObjects sharedObjects=rep != null ? rep.readJobMetaSharedObjects(jobMeta) : jobMeta.readSharedObjects();
      sharedObjectsFileMap.put(sharedObjects.getFilename(),sharedObjects);
      jobMeta.importFromMetaStore();
    }
 catch (    Exception e) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Dialog.ErrorReadingSharedObjects.Title"),BaseMessages.getString(PKG,"Spoon.Dialog.ErrorReadingSharedObjects.Message",delegates.tabs.makeTabName(jobMeta,true)),e);
    }
    jobMeta.setRepositoryDirectory(getDefaultSaveLocation(jobMeta));
    int nr=1;
    jobMeta.setName(STRING_JOB + " " + nr);
    while (findJob(delegates.tabs.makeTabName(jobMeta,false)) != null) {
      nr++;
      jobMeta.setName(STRING_JOB + " " + nr);
    }
    jobMeta.clearChanged();
    addJobGraph(jobMeta);
    applyVariables();
    if (setDesignMode()) {
      refreshTree();
    }
    loadPerspective(MainSpoonPerspective.ID);
  }
 catch (  Exception e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Exception.ErrorCreatingNewJob.Title"),BaseMessages.getString(PKG,"Spoon.Exception.ErrorCreatingNewJob.Message"),e);
  }
}
