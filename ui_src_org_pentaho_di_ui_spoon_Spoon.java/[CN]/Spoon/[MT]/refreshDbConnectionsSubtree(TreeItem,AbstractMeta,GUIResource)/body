{
  TreeItem tiDbTitle=createTreeItem(tiRootName,STRING_CONNECTIONS,guiResource.getImageBol());
  String[] dbNames;
  List<DatabaseMeta> dbs;
  try {
    dbNames=pickupDbConnections(meta);
    if (dbNames.length == 0) {
      return;
    }
    if (rep == null) {
      dbs=meta.getDatabases();
    }
 else {
      dbs=rep.readDatabases();
      for (int i=0; i < dbNames.length; i++) {
        String dbName=dbNames[i];
        dbs.get(i).setName(dbName);
      }
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.ErrorDialog.Title"),BaseMessages.getString(PKG,"Spoon.ErrorDialog.ErrorFetchingFromRepo.DbConnections"),e);
    return;
  }
  Arrays.sort(dbNames,String.CASE_INSENSITIVE_ORDER);
  for (  String dbName : dbNames) {
    if (!filterMatch(dbName)) {
      continue;
    }
    DatabaseMeta databaseMeta=meta.findDatabase(dbName);
    if (databaseMeta == null) {
      databaseMeta=findDatabase(dbs,dbName);
    }
    TreeItem tiDb=createTreeItem(tiDbTitle,databaseMeta.getDisplayName(),guiResource.getImageConnection());
    if (databaseMeta.isShared()) {
      tiDb.setFont(guiResource.getFontBold());
    }
  }
}
