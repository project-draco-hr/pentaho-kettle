{
  KettleDatabaseRepositoryMeta repositoryMeta=new KettleDatabaseRepositoryMeta();
  getInfo(repositoryMeta);
  try {
    KettleDatabaseRepository rep=(KettleDatabaseRepository)PluginRegistry.getInstance().loadClass(RepositoryPluginType.getInstance(),repositoryMeta,PluginClassType.MainClassType);
    rep.init(repositoryMeta);
    MessageBox qmb=new MessageBox(shell,SWT.ICON_WARNING | SWT.YES | SWT.NO);
    qmb.setMessage(BaseMessages.getString(PKG,"RepositoryDialog.Dialog.ConfirmRemovalOfRepository.Message"));
    qmb.setText(BaseMessages.getString(PKG,"RepositoryDialog.Dialog.ConfirmRemovalOfRepository.Title"));
    int answer=qmb.open();
    if (answer == SWT.YES) {
      EnterPasswordDialog etd=new EnterPasswordDialog(shell,BaseMessages.getString(PKG,"RepositoryDialog.Dialog.AskAdminPassword.Title"),BaseMessages.getString(PKG,"RepositoryDialog.Dialog.AskAdminPassword.Message"),"");
      String pwd=etd.open();
      if (pwd != null) {
        try {
          rep.connect("admin",pwd);
          try {
            rep.dropRepositorySchema();
            MessageBox mb=new MessageBox(shell,SWT.ICON_INFORMATION | SWT.OK);
            mb.setMessage(BaseMessages.getString(PKG,"RepositoryDialog.Dialog.RemovedRepositoryTables.Message"));
            mb.setText(BaseMessages.getString(PKG,"RepositoryDialog.Dialog.RemovedRepositoryTables.Title"));
            mb.open();
          }
 catch (          KettleDatabaseException dbe) {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage(BaseMessages.getString(PKG,"RepositoryDialog.Dialog.UnableToRemoveRepository.Message") + Const.CR + dbe.getMessage());
            mb.setText(BaseMessages.getString(PKG,"RepositoryDialog.Dialog.UnableToRemoveRepository.Title"));
            mb.open();
          }
        }
 catch (        KettleException e) {
          new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryDialog.Dialog.UnableToVerifyAdminUser.Title"),BaseMessages.getString(PKG,"RepositoryDialog.Dialog.UnableToVerifyAdminUser.Message"),e);
        }
 finally {
          rep.disconnect();
        }
      }
    }
  }
 catch (  KettleException ke) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryDialog.Dialog.NoRepositoryFoundOnConnection.Title"),BaseMessages.getString(PKG,"RepositoryDialog.Dialog.NoRepositoryFoundOnConnection.Message"),ke);
  }
}
