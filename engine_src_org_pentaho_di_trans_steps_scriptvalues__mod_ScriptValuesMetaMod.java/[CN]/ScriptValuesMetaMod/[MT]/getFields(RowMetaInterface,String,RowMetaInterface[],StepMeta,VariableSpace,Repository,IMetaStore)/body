{
  try {
    for (int i=0; i < fieldname.length; i++) {
      if (!Const.isEmpty(fieldname[i])) {
        int valueIndex=-1;
        ValueMetaInterface v;
        if (replace[i]) {
          valueIndex=row.indexOfValue(fieldname[i]);
          if (valueIndex < 0) {
            if (Const.isEmpty(rename[i])) {
              throw new KettleStepException(BaseMessages.getString(PKG,"ScriptValuesMetaMod.Exception.FieldToReplaceNotFound",fieldname[i]));
            }
 else {
              valueIndex=row.indexOfValue(rename[i]);
              if (valueIndex < 0) {
                throw new KettleStepException(BaseMessages.getString(PKG,"ScriptValuesMetaMod.Exception.FieldToReplaceNotFound",rename[i]));
              }
            }
          }
          ValueMetaInterface source=row.getValueMeta(valueIndex);
          v=ValueMetaFactory.cloneValueMeta(source,type[i]);
          row.setValueMeta(valueIndex,v);
        }
 else {
          if (!Const.isEmpty(rename[i])) {
            v=ValueMetaFactory.createValueMeta(rename[i],type[i]);
          }
 else {
            v=ValueMetaFactory.createValueMeta(fieldname[i],type[i]);
          }
        }
        v.setLength(length[i]);
        v.setPrecision(precision[i]);
        v.setOrigin(originStepname);
        if (!replace[i]) {
          row.addValueMeta(v);
        }
      }
    }
  }
 catch (  KettleException e) {
    throw new KettleStepException(e);
  }
}
