{
  EnvUtil.environmentInit();
  Database target=new Database(AllRunTests.getNewTargetDatabase());
  target.connect();
  try {
    target.execStatements("DROP TABLE COMB_NO_HASH;");
  }
 catch (  KettleDatabaseException e) {
  }
  target.execStatements("CREATE TABLE COMB_NO_HASH" + Const.CR + "("+ Const.CR+ "      comb_tk BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1)"+ Const.CR+ "    , stateCode VARCHAR(9)"+ Const.CR+ "    , state VARCHAR(30)"+ Const.CR+ "    )"+ Const.CR+ "    ;"+ Const.CR+ "    CREATE UNIQUE INDEX idx_COMB_NO_HASH_pk"+ Const.CR+ "     ON COMB_NO_HASH"+ Const.CR+ "    ( "+ Const.CR+ "      comb_tk"+ Const.CR+ "    )"+ Const.CR+ "    ;"+ Const.CR+ "    CREATE INDEX idx_COMB_NO_HASH_lookup"+ Const.CR+ "     ON COMB_NO_HASH"+ Const.CR+ "    ( "+ Const.CR+ "      stateCode, state"+ Const.CR+ "    )"+ Const.CR+ "    ;"+ Const.CR);
  try {
    target.execStatements("DROP TABLE COMB_HASH;");
  }
 catch (  KettleDatabaseException e) {
  }
  target.execStatements("CREATE TABLE COMB_HASH" + Const.CR + "("+ Const.CR+ "      comb_tk BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 0, INCREMENT BY 1)"+ Const.CR+ "    , stateCode VARCHAR(9)"+ Const.CR+ "    , state VARCHAR(30)"+ Const.CR+ "    , hashcode BIGINT"+ Const.CR+ "    )"+ Const.CR+ "    ;"+ Const.CR+ "    CREATE UNIQUE INDEX idx_COMB_HASH_pk"+ Const.CR+ "     ON COMB_NO_HASH"+ Const.CR+ "    ( "+ Const.CR+ "      comb_tk"+ Const.CR+ "    )"+ Const.CR+ "    ;"+ Const.CR+ "    CREATE INDEX idx_COMB_HASH_lookup"+ Const.CR+ "     ON COMB_HASH"+ Const.CR+ "    ( "+ Const.CR+ "      hashcode"+ Const.CR+ "    )"+ Const.CR+ "    ;"+ Const.CR);
  target.disconnect();
}
