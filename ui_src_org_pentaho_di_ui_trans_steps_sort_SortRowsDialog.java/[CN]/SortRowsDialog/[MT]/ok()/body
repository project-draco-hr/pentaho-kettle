{
  if (Const.isEmpty(wStepname.getText()))   return;
  stepname=wStepname.getText();
  input.setPrefix(wPrefix.getText());
  input.setDirectory(wSortDir.getText());
  input.setSortSize(wSortSize.getText());
  input.setFreeMemoryLimit(wFreeMemory.getText());
  log.logDetailed("Sort rows","Compression is set to " + wCompress.getSelection());
  input.setCompressFiles(wCompress.getSelection());
  input.setCompressFilesVariable(wCompress.getVariableName());
  input.setOnlyPassingUniqueRows(wUniqueRows.getSelection());
  int nrfields=wFields.nrNonEmpty();
  input.allocate(nrfields);
  for (int i=0; i < nrfields; i++) {
    TableItem ti=wFields.getNonEmpty(i);
    input.getFieldName()[i]=ti.getText(1);
    input.getAscending()[i]=Const.isEmpty(ti.getText(2)) || BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(ti.getText(2));
    input.getCaseSensitive()[i]=BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(ti.getText(3));
    input.getPreSortedField()[i]=BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(ti.getText(4));
  }
  dispose();
}
