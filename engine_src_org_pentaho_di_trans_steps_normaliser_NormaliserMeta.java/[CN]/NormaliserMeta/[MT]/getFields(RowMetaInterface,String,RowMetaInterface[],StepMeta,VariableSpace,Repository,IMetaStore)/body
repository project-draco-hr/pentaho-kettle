{
  List<String> norm_occ=new ArrayList<String>();
  List<String> field_occ=new ArrayList<String>();
  int maxlen=0;
  for (int i=0; i < normaliserFields.length; i++) {
    if (!norm_occ.contains(normaliserFields[i].getNorm())) {
      norm_occ.add(normaliserFields[i].getNorm());
      field_occ.add(normaliserFields[i].getName());
    }
    if (normaliserFields[i].getValue().length() > maxlen) {
      maxlen=normaliserFields[i].getValue().length();
    }
  }
  ValueMetaInterface typefield_value=new ValueMeta(typeField,ValueMetaInterface.TYPE_STRING);
  typefield_value.setOrigin(name);
  typefield_value.setLength(maxlen);
  row.addValueMeta(typefield_value);
  for (int i=0; i < norm_occ.size(); i++) {
    String normname=norm_occ.get(i);
    String fieldname=field_occ.get(i);
    ValueMetaInterface v=row.searchValueMeta(fieldname).clone();
    v.setName(normname);
    v.setOrigin(name);
    row.addValueMeta(v);
  }
  for (int i=0; i < normaliserFields.length; i++) {
    int idx=row.indexOfValue(normaliserFields[i].getName());
    if (idx >= 0) {
      row.removeValueMeta(idx);
    }
  }
}
