{
  if (Utils.isEmpty(wStepname.getText())) {
    return;
  }
  stepname=wStepname.getText();
  int nrfields=wFields.nrNonEmpty();
  int nrremove=wRemove.nrNonEmpty();
  int nrmeta=wMeta.nrNonEmpty();
  input.allocate(nrfields,nrremove,nrmeta);
  for (int i=0; i < nrfields; i++) {
    TableItem item=wFields.getNonEmpty(i);
    input.getSelectFields()[i].setName(item.getText(1));
    input.getSelectFields()[i].setRename(item.getText(2));
    if (input.getSelectFields()[i].getRename() == null || input.getSelectFields()[i].getName().length() == 0) {
      input.getSelectFields()[i].setRename(input.getSelectFields()[i].getName());
    }
    input.getSelectFields()[i].setLength(Const.toInt(item.getText(3),-2));
    input.getSelectFields()[i].setPrecision(Const.toInt(item.getText(4),-2));
    if (input.getSelectFields()[i].getLength() < -2) {
      input.getSelectFields()[i].setLength(-2);
    }
    if (input.getSelectFields()[i].getPrecision() < -2) {
      input.getSelectFields()[i].setPrecision(-2);
    }
  }
  input.setSelectingAndSortingUnspecifiedFields(wUnspecified.getSelection());
  for (int i=0; i < nrremove; i++) {
    TableItem item=wRemove.getNonEmpty(i);
    input.getDeleteName()[i]=item.getText(1);
  }
  for (int i=0; i < nrmeta; i++) {
    SelectMetadataChange change=new SelectMetadataChange(input);
    input.getMeta()[i]=change;
    TableItem item=wMeta.getNonEmpty(i);
    int index=1;
    change.setName(item.getText(index++));
    change.setRename(item.getText(index++));
    if (Utils.isEmpty(change.getRename())) {
      change.setRename(change.getName());
    }
    change.setType(ValueMeta.getType(item.getText(index++)));
    change.setLength(Const.toInt(item.getText(index++),-2));
    change.setPrecision(Const.toInt(item.getText(index++),-2));
    if (change.getLength() < -2) {
      change.setLength(-2);
    }
    if (change.getPrecision() < -2) {
      change.setPrecision(-2);
    }
    if (BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(index++))) {
      change.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
    }
    change.setConversionMask(item.getText(index++));
    change.setDateFormatLenient(item.getText(index++).equalsIgnoreCase(BaseMessages.getString(PKG,"System.Combo.Yes")) ? true : false);
    change.setDateFormatLocale(item.getText(index++));
    change.setDateFormatTimeZone(item.getText(index++));
    change.setLenientStringToNumber(item.getText(index++).equalsIgnoreCase(BaseMessages.getString(PKG,"System.Combo.Yes")) ? true : false);
    change.setEncoding(item.getText(index++));
    change.setDecimalSymbol(item.getText(index++));
    change.setGroupingSymbol(item.getText(index++));
    change.setCurrencySymbol(item.getText(index++));
  }
  dispose();
}
