{
  List<String> jarfiles=plugin.getLibraries();
  URL[] urls=new URL[jarfiles.size()];
  for (int i=0; i < jarfiles.size(); i++) {
    File jarfile=new File(jarfiles.get(i));
    urls[i]=new URL(URLDecoder.decode(jarfile.toURI().toURL().toString(),"UTF-8"));
  }
  ClassLoader classLoader=getClass().getClassLoader();
  String[] patterns=parentClassloaderPatternMap.get(plugin);
  if (patterns != null) {
    return new KettleSelectiveParentFirstClassLoader(urls,classLoader,plugin.getDescription(),patterns);
  }
 else {
    return new KettleURLClassLoader(urls,classLoader,plugin.getDescription());
  }
}
