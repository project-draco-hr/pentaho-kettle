{
  Spoon spoon=((Spoon)SpoonFactory.getInstance());
  final TransMeta transMeta=spoon.getActiveTransformation();
  if (transMeta == null || spoon.getActiveTransGraph() == null) {
    return;
  }
  if (transMeta.hasChanged()) {
    MessageBox box=new MessageBox(spoon.getShell(),SWT.ICON_ERROR | SWT.CLOSE);
    box.setText("Save first...");
    box.setMessage("Please save your transformation first.  To run the profiling job, we need to run the transformation.");
    box.open();
    return;
  }
  StepMeta stepMeta=spoon.getActiveTransGraph().getCurrentStep();
  if (stepMeta == null) {
    return;
  }
  try {
    final String url;
    final String driverClass;
    if (!Const.isEmpty(transMeta.getFilename())) {
      String filename=KettleVFS.getFileObject(transMeta.getFilename()).toString();
      url="jdbc:kettle:" + filename;
      driverClass="org.pentaho.di.jdbc.KettleDriver";
    }
 else {
      MessageBox box=new MessageBox(spoon.getShell(),SWT.ICON_ERROR | SWT.CLOSE);
      box.setText("TODO");
      box.setMessage("Ask the developers to implement profiling a transformation stored in a repository (lazy bunch, you might need to bribe them!).");
      box.open();
      return;
    }
    BootstrapOptions bootstrapOptions=new BootstrapOptions(){
      public Datastore getSingleDatastore(      DatastoreCatalog catalog){
        return new JdbcDatastore(transMeta.getName(),url,driverClass,"","");
      }
      @Override public boolean isSingleDatastoreMode(){
        return true;
      }
      @Override public boolean isCommandLineMode(){
        return false;
      }
      @Override public ExitActionListener getExitActionListener(){
        return null;
      }
      @Override public CliArguments getCommandLineArguments(){
        return null;
      }
    }
;
    Bootstrap bootstrap=new Bootstrap(bootstrapOptions);
    bootstrap.run();
  }
 catch (  Exception e) {
    new ErrorDialog(spoon.getShell(),"Error","Error profiling:",e);
  }
}
