{
  try {
    keyField=rep.getStepAttributeString(id_step,"key_field");
    int groupsize=rep.countNrStepAttributes(id_step,"group_name");
    int nrvalues=rep.countNrStepAttributes(id_step,"field_name");
    allocate(groupsize,nrvalues);
    for (int i=0; i < groupsize; i++) {
      groupField[i]=rep.getStepAttributeString(id_step,i,"group_name");
    }
    for (int i=0; i < nrvalues; i++) {
      denormaliserTargetField[i]=new DenormaliserTargetField();
      denormaliserTargetField[i].setFieldName(rep.getStepAttributeString(id_step,i,"field_name"));
      denormaliserTargetField[i].setKeyValue(rep.getStepAttributeString(id_step,i,"key_value"));
      denormaliserTargetField[i].setTargetName(rep.getStepAttributeString(id_step,i,"target_name"));
      denormaliserTargetField[i].setTargetType(rep.getStepAttributeString(id_step,i,"target_type"));
      denormaliserTargetField[i].setTargetFormat(rep.getStepAttributeString(id_step,i,"target_format"));
      denormaliserTargetField[i].setTargetLength((int)rep.getStepAttributeInteger(id_step,i,"target_length"));
      denormaliserTargetField[i].setTargetPrecision((int)rep.getStepAttributeInteger(id_step,i,"target_precision"));
      denormaliserTargetField[i].setTargetDecimalSymbol(rep.getStepAttributeString(id_step,i,"target_decimal_symbol"));
      denormaliserTargetField[i].setTargetGroupingSymbol(rep.getStepAttributeString(id_step,i,"target_grouping_symbol"));
      denormaliserTargetField[i].setTargetCurrencySymbol(rep.getStepAttributeString(id_step,i,"target_currency_symbol"));
      denormaliserTargetField[i].setTargetNullString(rep.getStepAttributeString(id_step,i,"target_null_string"));
      denormaliserTargetField[i].setTargetAggregationType(rep.getStepAttributeString(id_step,i,"target_aggregation_type"));
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
