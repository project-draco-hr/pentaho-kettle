{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wSash=new SashForm(shell,SWT.VERTICAL);
  wTop=new Composite(wSash,SWT.NONE);
  props.setLook(wTop);
  FormLayout topLayout=new FormLayout();
  topLayout.marginWidth=Const.FORM_MARGIN;
  topLayout.marginHeight=Const.FORM_MARGIN;
  wTop.setLayout(topLayout);
  wlScriptFunctions=new Label(wTop,SWT.NONE);
  wlScriptFunctions.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.JavascriptFunctions.Label"));
  props.setLook(wlScriptFunctions);
  fdlScriptFunctions=new FormData();
  fdlScriptFunctions.left=new FormAttachment(0,0);
  fdlScriptFunctions.top=new FormAttachment(0,0);
  wlScriptFunctions.setLayoutData(fdlScriptFunctions);
  wTree=new Tree(wTop,SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);
  props.setLook(wTree);
  fdlTree=new FormData();
  fdlTree.left=new FormAttachment(0,0);
  fdlTree.top=new FormAttachment(wlScriptFunctions,margin);
  fdlTree.right=new FormAttachment(20,0);
  fdlTree.bottom=new FormAttachment(100,-margin);
  wTree.setLayoutData(fdlTree);
  wlScript=new Label(wTop,SWT.NONE);
  wlScript.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Javascript.Label"));
  props.setLook(wlScript);
  fdlScript=new FormData();
  fdlScript.left=new FormAttachment(wTree,margin);
  fdlScript.top=new FormAttachment(0,0);
  wlScript.setLayoutData(fdlScript);
  folder=new CTabFolder(wTop,SWT.BORDER | SWT.RESIZE);
  folder.setSimple(false);
  folder.setUnselectedImageVisible(true);
  folder.setUnselectedCloseVisible(true);
  fdScript=new FormData();
  fdScript.left=new FormAttachment(wTree,margin);
  fdScript.top=new FormAttachment(wlScript,margin);
  fdScript.right=new FormAttachment(100,-5);
  fdScript.bottom=new FormAttachment(100,-50);
  folder.setLayoutData(fdScript);
  wlPosition=new Label(wTop,SWT.NONE);
  wlPosition.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Position.Label"));
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(wTree,margin);
  fdlPosition.right=new FormAttachment(30,0);
  fdlPosition.top=new FormAttachment(folder,margin);
  wlPosition.setLayoutData(fdlPosition);
  Label wlCompatible=new Label(wTop,SWT.NONE);
  wlCompatible.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Compatible.Label"));
  props.setLook(wlCompatible);
  FormData fdlCompatible=new FormData();
  fdlCompatible.left=new FormAttachment(wTree,margin);
  fdlCompatible.right=new FormAttachment(middle,0);
  fdlCompatible.top=new FormAttachment(wlPosition,margin);
  wlCompatible.setLayoutData(fdlCompatible);
  wCompatible=new Button(wTop,SWT.CHECK);
  wCompatible.setToolTipText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Compatible.Tooltip"));
  props.setLook(wCompatible);
  FormData fdCompatible=new FormData();
  fdCompatible.left=new FormAttachment(wlCompatible,margin);
  fdCompatible.top=new FormAttachment(wlPosition,margin);
  wCompatible.setLayoutData(fdCompatible);
  wCompatible.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setInputOutputFields();
    }
  }
);
  wlHelpLabel=new Text(wTop,SWT.V_SCROLL | SWT.LEFT);
  wlHelpLabel.setEditable(false);
  wlHelpLabel.setText("Hallo");
  props.setLook(wlHelpLabel);
  fdHelpLabel=new FormData();
  fdHelpLabel.left=new FormAttachment(wlPosition,margin);
  fdHelpLabel.top=new FormAttachment(folder,margin);
  fdHelpLabel.right=new FormAttachment(100,-5);
  fdHelpLabel.bottom=new FormAttachment(100,0);
  wlHelpLabel.setLayoutData(fdHelpLabel);
  wlHelpLabel.setVisible(false);
  fdTop=new FormData();
  fdTop.left=new FormAttachment(0,0);
  fdTop.top=new FormAttachment(0,0);
  fdTop.right=new FormAttachment(100,0);
  fdTop.bottom=new FormAttachment(100,0);
  wTop.setLayoutData(fdTop);
  wBottom=new Composite(wSash,SWT.NONE);
  props.setLook(wBottom);
  FormLayout bottomLayout=new FormLayout();
  bottomLayout.marginWidth=Const.FORM_MARGIN;
  bottomLayout.marginHeight=Const.FORM_MARGIN;
  wBottom.setLayout(bottomLayout);
  wSeparator=new Label(wBottom,SWT.SEPARATOR | SWT.HORIZONTAL);
  fdSeparator=new FormData();
  fdSeparator.left=new FormAttachment(0,0);
  fdSeparator.right=new FormAttachment(100,0);
  fdSeparator.top=new FormAttachment(0,-margin + 2);
  wSeparator.setLayoutData(fdSeparator);
  wlFields=new Label(wBottom,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wSeparator,0);
  wlFields.setLayoutData(fdlFields);
  final int FieldsRows=input.getName().length;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ColumnInfo.Filename"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ColumnInfo.RenameTo"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ColumnInfo.Type"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes()),new ColumnInfo(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ColumnInfo.Length"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ColumnInfo.Precision"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ColumnInfo.Replace"),ColumnInfo.COLUMN_TYPE_CCOMBO,YES_NO_COMBO)};
  wFields=new TableView(transMeta,wBottom,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,0);
  wFields.setLayoutData(fdFields);
  fdBottom=new FormData();
  fdBottom.left=new FormAttachment(0,0);
  fdBottom.top=new FormAttachment(0,0);
  fdBottom.right=new FormAttachment(100,0);
  fdBottom.bottom=new FormAttachment(100,0);
  wBottom.setLayoutData(fdBottom);
  fdSash=new FormData();
  fdSash.left=new FormAttachment(0,0);
  fdSash.top=new FormAttachment(wStepname,0);
  fdSash.right=new FormAttachment(100,0);
  fdSash.bottom=new FormAttachment(100,-50);
  wSash.setLayoutData(fdSash);
  wSash.setWeights(new int[]{75,25});
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wVars=new Button(shell,SWT.PUSH);
  wVars.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.GetVariables.Button"));
  wTest=new Button(shell,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.TestScript.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wVars,wTest},margin,null);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      newTest();
    }
  }
;
  lsVars=new Listener(){
    public void handleEvent(    Event e){
      test(true,true);
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsTree=new Listener(){
    public void handleEvent(    Event e){
      treeDblClick(e);
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wTest.addListener(SWT.Selection,lsTest);
  wVars.addListener(SWT.Selection,lsVars);
  wOK.addListener(SWT.Selection,lsOK);
  wTree.addListener(SWT.MouseDoubleClick,lsTree);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  folder.addCTabFolder2Listener(new CTabFolder2Adapter(){
    public void close(    CTabFolderEvent event){
      CTabItem cItem=(CTabItem)event.item;
      event.doit=false;
      if (cItem != null && folder.getItemCount() > 1) {
        MessageBox messageBox=new MessageBox(shell,SWT.ICON_QUESTION | SWT.NO | SWT.YES);
        messageBox.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.DeleteItem.Label"));
        messageBox.setMessage(BaseMessages.getString(PKG,"ScriptValuesDialogMod.ConfirmDeleteItem.Label",cItem.getText()));
switch (messageBox.open()) {
case SWT.YES:
          modifyScriptTree(cItem,DELETE_ITEM);
        event.doit=true;
      break;
  }
}
}
}
);
cMenu=new Menu(shell,SWT.POP_UP);
buildingFolderMenu();
tMenu=new Menu(shell,SWT.POP_UP);
buildingTreeMenu();
wTreeScriptsItem=new TreeItem(wTree,SWT.NULL);
wTreeScriptsItem.setImage(guiresource.getImageBol());
wTreeScriptsItem.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.TransformScript.Label"));
setSize();
getData();
buildSpecialFunctionsTree();
iteminput=new TreeItem(wTree,SWT.NULL);
iteminput.setImage(imageInputFields);
iteminput.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.InputFields.Label"));
itemoutput=new TreeItem(wTree,SWT.NULL);
itemoutput.setImage(imageOutputFields);
itemoutput.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.OutputFields.Label"));
itemWaitFieldsIn=new TreeItem(iteminput,SWT.NULL);
itemWaitFieldsIn.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.GettingFields.Label"));
itemWaitFieldsIn.setForeground(guiresource.getColorDirectory());
iteminput.setExpanded(true);
itemWaitFieldsOut=new TreeItem(itemoutput,SWT.NULL);
itemWaitFieldsOut.setText(BaseMessages.getString(PKG,"ScriptValuesDialogMod.GettingFields.Label"));
itemWaitFieldsOut.setForeground(guiresource.getColorDirectory());
itemoutput.setExpanded(true);
final Runnable runnable=new Runnable(){
public void run(){
StepMeta stepMeta=transMeta.findStep(stepname);
if (stepMeta != null) {
  try {
    rowPrevStepFields=transMeta.getPrevStepFields(stepMeta);
    if (rowPrevStepFields != null) {
      setInputOutputFields();
    }
 else {
      iteminput.removeAll();
      itemoutput.removeAll();
    }
  }
 catch (  KettleException e) {
    log.logError(toString(),BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
  }
}
}
}
;
new Thread(runnable).start();
buildAddClassesListTree();
addRenameTowTreeScriptItems();
input.setChanged(changed);
DragSource ds=new DragSource(wTree,DND.DROP_MOVE);
ds.setTransfer(new Transfer[]{TextTransfer.getInstance()});
ds.addDragListener(new DragSourceAdapter(){
public void dragStart(DragSourceEvent event){
TreeItem item=wTree.getSelection()[0];
if (item != null && item.getParentItem() != null) {
  if (item.getParentItem().equals(wTreeScriptsItem)) {
    event.doit=false;
  }
 else   if (!item.getData().equals("Function")) {
    String strInsert=(String)item.getData();
    if (strInsert.equals("jsFunction"))     event.doit=true;
 else     event.doit=false;
  }
 else {
    event.doit=false;
  }
}
 else {
  event.doit=false;
}
}
public void dragSetData(DragSourceEvent event){
event.data=wTree.getSelection()[0].getText();
}
}
);
shell.open();
while (!shell.isDisposed()) {
if (!display.readAndDispatch()) display.sleep();
}
return stepname;
}
