{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("MappingDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("MappingDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlTransformation=new Label(shell,SWT.RIGHT);
  wlTransformation.setText(Messages.getString("MappingDialog.Transformation.Label"));
  props.setLook(wlTransformation);
  fdlTransformation=new FormData();
  fdlTransformation.left=new FormAttachment(0,0);
  fdlTransformation.right=new FormAttachment(middle,-margin);
  fdlTransformation.top=new FormAttachment(wStepname,margin);
  wlTransformation.setLayoutData(fdlTransformation);
  weTransformation=new Button(shell,SWT.PUSH);
  weTransformation.setText(Messages.getString("MappingDialog.Edit.Button"));
  props.setLook(weTransformation);
  fdeTransformation=new FormData();
  fdeTransformation.right=new FormAttachment(100,0);
  fdeTransformation.top=new FormAttachment(wStepname,margin);
  weTransformation.setLayoutData(fdeTransformation);
  wbTransformation=new Button(shell,SWT.PUSH);
  wbTransformation.setText(Messages.getString("MappingDialog.Select.Button"));
  props.setLook(wbTransformation);
  fdbTransformation=new FormData();
  fdbTransformation.right=new FormAttachment(weTransformation,0);
  fdbTransformation.top=new FormAttachment(wStepname,margin);
  wbTransformation.setLayoutData(fdbTransformation);
  wTransformation=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wTransformation.setEditable(false);
  props.setLook(wTransformation);
  wTransformation.addModifyListener(lsMod);
  fdTransformation=new FormData();
  fdTransformation.left=new FormAttachment(middle,0);
  fdTransformation.right=new FormAttachment(wbTransformation,-margin);
  fdTransformation.top=new FormAttachment(wStepname,margin);
  wTransformation.setLayoutData(fdTransformation);
  wbTransformation.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      selectTrans();
    }
  }
);
  weTransformation.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      editTrans();
    }
  }
);
  ColumnInfo[] colinfo=new ColumnInfo[]{new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.InputField"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.InputMapping"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinfo[1].setToolTip(Messages.getString("MappingDialog.InputMapping.ToolTip"));
  wInputFields=new TableView(shell,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfo,input.getInputField() != null ? input.getInputField().length : 1,lsMod,props);
  props.setLook(wInputFields);
  fdInputFields=new FormData();
  fdInputFields.left=new FormAttachment(0,0);
  fdInputFields.right=new FormAttachment(50,-margin);
  fdInputFields.top=new FormAttachment(wbTransformation,margin);
  fdInputFields.bottom=new FormAttachment(100,-75);
  wInputFields.setLayoutData(fdInputFields);
  wbInput=new Button(shell,SWT.PUSH);
  wbInput.setText(Messages.getString("MappingDialog.GetFromMapping.Button"));
  fdbInput=new FormData();
  fdbInput.left=new FormAttachment(0,0);
  fdbInput.right=new FormAttachment(50,-margin);
  fdbInput.top=new FormAttachment(wInputFields,margin);
  wbInput.setLayoutData(fdbInput);
  wbInput.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getInput();
    }
  }
);
  ColumnInfo[] colinfoOutput=new ColumnInfo[]{new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.OutputMapping"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.OutputField"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wOutputFields=new TableView(shell,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfoOutput,input.getOutputField() != null ? input.getOutputField().length : 1,lsMod,props);
  props.setLook(wOutputFields);
  fdOutputFields=new FormData();
  fdOutputFields.left=new FormAttachment(50,0);
  fdOutputFields.right=new FormAttachment(100,0);
  fdOutputFields.top=new FormAttachment(wbTransformation,margin);
  fdOutputFields.bottom=new FormAttachment(100,-75);
  wOutputFields.setLayoutData(fdOutputFields);
  wbOutput=new Button(shell,SWT.PUSH);
  wbOutput.setText(Messages.getString("MappingDialog.GetFromMapping.Button"));
  fdbOutput=new FormData();
  fdbOutput.left=new FormAttachment(50,0);
  fdbOutput.right=new FormAttachment(100,0);
  fdbOutput.top=new FormAttachment(wOutputFields,margin);
  wbOutput.setLayoutData(fdbOutput);
  wbOutput.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getOutput();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("MappingDialog.OK.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("MappingDialog.Cancel.Button"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wbInput);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
