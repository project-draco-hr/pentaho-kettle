{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("MappingDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("MappingDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  gTransGroup=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gTransGroup.setText(Messages.getString("MappingDialog.TransGroup.Label"));
  gTransGroup.setBackground(shell.getBackground());
  FormLayout transGroupLayout=new FormLayout();
  transGroupLayout.marginLeft=margin * 2;
  transGroupLayout.marginTop=margin * 2;
  transGroupLayout.marginRight=margin * 2;
  transGroupLayout.marginBottom=margin * 2;
  gTransGroup.setLayout(transGroupLayout);
  wFileRadio=new Button(gTransGroup,SWT.RADIO);
  props.setLook(wFileRadio);
  wFileRadio.setSelection(false);
  wFileRadio.setText(Messages.getString("MappingDialog.RadioFile.Label"));
  wFileRadio.setToolTipText(Messages.getString("MappingDialog.RadioFile.Tooltip",Const.CR));
  fdFileRadio=new FormData();
  fdFileRadio.left=new FormAttachment(0,0);
  fdFileRadio.right=new FormAttachment(100,0);
  fdFileRadio.top=new FormAttachment(0,0);
  wFileRadio.setLayoutData(fdFileRadio);
  wbbFilename=new Button(gTransGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbFilename);
  wbbFilename.setText(Messages.getString("System.Button.Browse"));
  wbbFilename.setToolTipText(Messages.getString("System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wFileRadio,margin);
  wbbFilename.setLayoutData(fdbFilename);
  wbbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      selectFileTrans();
    }
  }
);
  wbvFilename=new Button(gTransGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbvFilename);
  wbvFilename.setText(Messages.getString("System.Button.Variable"));
  wbvFilename.setToolTipText(Messages.getString("System.Tooltip.VariableToFileOrDir"));
  fdbvFilename=new FormData();
  fdbvFilename.right=new FormAttachment(wbbFilename,-margin);
  fdbvFilename.top=new FormAttachment(wFileRadio,margin);
  wbvFilename.setLayoutData(fdbvFilename);
  wFilename=new Text(gTransGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(0,25);
  fdFilename.right=new FormAttachment(wbvFilename,-margin);
  fdFilename.top=new FormAttachment(wbvFilename,0,SWT.CENTER);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFileRadio.setSelection(true);
      wRepRadio.setSelection(false);
    }
  }
);
  wbvFilename.addSelectionListener(VariableButtonListenerFactory.getSelectionAdapter(shell,wFilename));
  wFilename.addModifyListener(getModifyListenerTooltipText(wFilename));
  wRepRadio=new Button(gTransGroup,SWT.RADIO);
  props.setLook(wRepRadio);
  wRepRadio.setSelection(false);
  wRepRadio.setText(Messages.getString("MappingDialog.RadioRep.Label"));
  wRepRadio.setToolTipText(Messages.getString("MappingDialog.RadioRep.Tooltip",Const.CR));
  fdRepRadio=new FormData();
  fdRepRadio.left=new FormAttachment(0,0);
  fdRepRadio.right=new FormAttachment(100,0);
  fdRepRadio.top=new FormAttachment(wbvFilename,2 * margin);
  wRepRadio.setLayoutData(fdRepRadio);
  wbTrans=new Button(gTransGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTrans);
  wbTrans.setText(Messages.getString("MappingDialog.Select.Button"));
  wbTrans.setToolTipText(Messages.getString("System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdbTrans=new FormData();
  fdbTrans.right=new FormAttachment(100,0);
  fdbTrans.top=new FormAttachment(wRepRadio,2 * margin);
  wbTrans.setLayoutData(fdbTrans);
  wbTrans.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      selectRepositoryTrans();
    }
  }
);
  wvTrans=new Button(gTransGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wvTrans);
  wvTrans.setText(Messages.getString("System.Button.Variable"));
  wvTrans.setToolTipText(Messages.getString("System.Tooltip.VariableToFileOrDir"));
  fdvTrans=new FormData();
  fdvTrans.right=new FormAttachment(wbTrans,-margin);
  fdvTrans.top=new FormAttachment(wRepRadio,2 * margin);
  wvTrans.setLayoutData(fdvTrans);
  wTransDir=new Text(gTransGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTransDir);
  wTransDir.addModifyListener(lsMod);
  fdTransDir=new FormData();
  fdTransDir.left=new FormAttachment(middle + (100 - middle) / 2,0);
  fdTransDir.right=new FormAttachment(wvTrans,-margin);
  fdTransDir.top=new FormAttachment(wvTrans,0,SWT.CENTER);
  wTransDir.setLayoutData(fdTransDir);
  wTransName=new Text(gTransGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTransName);
  wTransName.addModifyListener(lsMod);
  fdTransName=new FormData();
  fdTransName.left=new FormAttachment(0,25);
  fdTransName.right=new FormAttachment(wTransDir,-margin);
  fdTransName.top=new FormAttachment(wvTrans,0,SWT.CENTER);
  wTransName.setLayoutData(fdTransName);
  wvTrans.addSelectionListener(VariableButtonListenerFactory.getSelectionAdapter(shell,wTransName));
  wTransName.addModifyListener(getModifyListenerTooltipText(wTransName));
  wTransDir.addModifyListener(getModifyListenerTooltipText(wTransDir));
  wEditTrans=new Button(gTransGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wEditTrans);
  wEditTrans.setText(Messages.getString("MappingDialog.Edit.Button"));
  wEditTrans.setToolTipText(Messages.getString("System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdEditTrans=new FormData();
  fdEditTrans.left=new FormAttachment(0,0);
  fdEditTrans.right=new FormAttachment(100,0);
  fdEditTrans.top=new FormAttachment(wTransName,3 * margin);
  wEditTrans.setLayoutData(fdEditTrans);
  wEditTrans.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      editTrans();
    }
  }
);
  fdTransGroup=new FormData();
  fdTransGroup.left=new FormAttachment(0,0);
  fdTransGroup.top=new FormAttachment(wStepname,2 * margin);
  fdTransGroup.right=new FormAttachment(100,0);
  gTransGroup.setLayoutData(fdTransGroup);
  ColumnInfo[] colinfo=new ColumnInfo[]{new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.InputField"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.InputMapping"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinfo[1].setToolTip(Messages.getString("MappingDialog.InputMapping.ToolTip"));
  wInputFields=new TableView(shell,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfo,input.getInputField() != null ? input.getInputField().length : 1,lsMod,props);
  props.setLook(wInputFields);
  fdInputFields=new FormData();
  fdInputFields.left=new FormAttachment(0,0);
  fdInputFields.right=new FormAttachment(50,-margin);
  fdInputFields.top=new FormAttachment(gTransGroup,margin * 2);
  fdInputFields.bottom=new FormAttachment(100,-75);
  wInputFields.setLayoutData(fdInputFields);
  wbInput=new Button(shell,SWT.PUSH);
  wbInput.setText(Messages.getString("MappingDialog.GetFromMapping.Button"));
  fdbInput=new FormData();
  fdbInput.left=new FormAttachment(0,0);
  fdbInput.right=new FormAttachment(50,-margin);
  fdbInput.top=new FormAttachment(wInputFields,margin);
  wbInput.setLayoutData(fdbInput);
  wbInput.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getInput();
    }
  }
);
  ColumnInfo[] colinfoOutput=new ColumnInfo[]{new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.OutputMapping"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("MappingDialog.ColumnInfo.OutputField"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wOutputFields=new TableView(shell,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfoOutput,input.getOutputField() != null ? input.getOutputField().length : 1,lsMod,props);
  props.setLook(wOutputFields);
  fdOutputFields=new FormData();
  fdOutputFields.left=new FormAttachment(50,0);
  fdOutputFields.right=new FormAttachment(100,0);
  fdOutputFields.top=new FormAttachment(gTransGroup,margin * 2);
  fdOutputFields.bottom=new FormAttachment(100,-75);
  wOutputFields.setLayoutData(fdOutputFields);
  wbOutput=new Button(shell,SWT.PUSH);
  wbOutput.setText(Messages.getString("MappingDialog.GetFromMapping.Button"));
  fdbOutput=new FormData();
  fdbOutput.left=new FormAttachment(50,0);
  fdbOutput.right=new FormAttachment(100,0);
  fdbOutput.top=new FormAttachment(wOutputFields,margin);
  wbOutput.setLayoutData(fdbOutput);
  wbOutput.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getOutput();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,null);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
