{
  if (mappingTransMeta != null) {
    StepMeta inputStepMeta=mappingTransMeta.getMappingInputStep();
    if (inputStepMeta != null) {
      MappingInputMeta mappingInputMeta=(MappingInputMeta)inputStepMeta.getStepMetaInterface();
      String[] source=mappingInputMeta.getFieldName();
      Row prev=null;
      try {
        prev=transMeta.getPrevStepFields(stepname);
      }
 catch (      KettleException e) {
        new ErrorDialog(shell,props,"Error getting previous fields","There was an error getting the fields entering this step",e);
      }
      if (prev != null) {
        String[] target=prev.getFieldNames();
        EnterMappingDialog dialog=new EnterMappingDialog(shell,source,target);
        List mappings=dialog.open();
        if (mappings != null) {
          for (int i=0; i < mappings.size(); i++) {
            TableItem item=new TableItem(wInputFields.table,SWT.NONE);
            SourceToTargetMapping mapping=(SourceToTargetMapping)mappings.get(i);
            item.setText(2,mapping.getSourceString(source));
            item.setText(1,mapping.getTargetString(target));
          }
        }
      }
 else {
        log.logDetailed(stepname,"Getting input fields... (" + source.length + ")");
        for (int i=0; i < source.length; i++) {
          TableItem item=new TableItem(wInputFields.table,SWT.NONE);
          item.setText(2,source[i]);
        }
      }
      wInputFields.removeEmptyRows();
      wInputFields.setRowNums();
      wInputFields.optWidth(true);
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
      mb.setMessage("You need to add a MappingInput step to the selected mapping (sub-transformation)!");
      mb.setText("Sorry");
      mb.open();
    }
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setMessage("Sorry, no mapping is specified, I can't get the input fields!");
    mb.setText("Sorry");
    mb.open();
  }
}
