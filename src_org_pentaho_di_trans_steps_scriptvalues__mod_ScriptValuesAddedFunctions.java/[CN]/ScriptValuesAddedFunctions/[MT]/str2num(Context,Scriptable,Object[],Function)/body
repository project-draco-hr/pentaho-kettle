{
  double dRC=0.00;
switch (ArgList.length) {
case 0:
    throw Context.reportRuntimeError("The function call str2num requires at least 1 argument.");
case 1:
  try {
    if (isNull(ArgList[0]))     return new Double(Double.NaN);
 else     if (isUndefined(ArgList[0]))     return Context.getUndefinedValue();
    if (ArgList[0].equals(null))     return null;
    String sArg1=Context.toString(ArgList[0]);
    DecimalFormat formatter=new DecimalFormat();
    dRC=(formatter.parse(sArg1)).doubleValue();
  }
 catch (  Exception e) {
    throw Context.reportRuntimeError("Could not convert the given String : " + e.getMessage());
  }
break;
case 2:
try {
if (isNull(ArgList,new int[]{0,1})) return new Double(Double.NaN);
 else if (isUndefined(ArgList,new int[]{0,1})) return Context.getUndefinedValue();
String sArg1=Context.toString(ArgList[0]);
String sArg2=Context.toString(ArgList[1]);
if (sArg1.equals("null") || sArg2.equals("null")) return null;
DecimalFormat formatter=new DecimalFormat(sArg2);
dRC=(formatter.parse(sArg1)).doubleValue();
return new Double(dRC);
}
 catch (Exception e) {
throw Context.reportRuntimeError("Could not convert the String with the given format :" + e.getMessage());
}
case 3:
try {
if (isNull(ArgList,new int[]{0,1,2})) return new Double(Double.NaN);
 else if (isUndefined(ArgList,new int[]{0,1,2})) return Context.getUndefinedValue();
String sArg1=Context.toString(ArgList[0]);
String sArg2=Context.toString(ArgList[1]);
String sArg3=Context.toString(ArgList[2]);
if (sArg3.length() == 2) {
DecimalFormatSymbols dfs=new DecimalFormatSymbols(new Locale(sArg3.toLowerCase()));
DecimalFormat formatter=new DecimalFormat(sArg2,dfs);
dRC=(formatter.parse(sArg1)).doubleValue();
return new Double(dRC);
}
}
 catch (Exception e) {
throw Context.reportRuntimeError(e.getMessage());
}
break;
default :
throw Context.reportRuntimeError("The function call str2num requires 1, 2, or 3 arguments.");
}
return new Double(dRC);
}
