{
  if (ArgList.length == 2) {
    try {
      if (isNull(ArgList))       return null;
 else       if (isUndefined(ArgList))       return Context.getUndefinedValue();
      java.util.Date dIn=(java.util.Date)Context.jsToJava(ArgList[0],java.util.Date.class);
      Calendar startDate=Calendar.getInstance();
      Calendar fisStartDate=Calendar.getInstance();
      Calendar fisOffsetDate=Calendar.getInstance();
      startDate.setTime(dIn);
      Format dfFormatter=new SimpleDateFormat("dd.MM.yyyy");
      String strOffsetDate=Context.toString(ArgList[1]) + String.valueOf(startDate.get(Calendar.YEAR));
      java.util.Date dOffset=(java.util.Date)dfFormatter.parseObject(strOffsetDate);
      fisOffsetDate.setTime(dOffset);
      String strFisStartDate="01.01." + String.valueOf(startDate.get(Calendar.YEAR) + 1);
      fisStartDate.setTime((java.util.Date)dfFormatter.parseObject(strFisStartDate));
      int iDaysToAdd=(int)((startDate.getTimeInMillis() - fisOffsetDate.getTimeInMillis()) / 86400000);
      fisStartDate.add(Calendar.DATE,iDaysToAdd);
      return fisStartDate.getTime();
    }
 catch (    Exception e) {
      throw Context.reportRuntimeError(e.toString());
    }
  }
 else {
    throw Context.reportRuntimeError("The function call getFiscalDate is not valid.");
  }
}
