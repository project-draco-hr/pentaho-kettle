{
  kettleLifecycleListeners=LifecycleSupport.loadPlugins(KettleLifecyclePluginType.class,KettleLifecycleListener.class);
  final PluginRegistry registry=PluginRegistry.getInstance();
  registry.addPluginListener(KettleLifecyclePluginType.class,new PluginTypeListener(){
    @Override public void pluginAdded(    Object serviceObject){
      KettleLifecycleListener listener=null;
      try {
        listener=(KettleLifecycleListener)registry.loadClass((PluginInterface)serviceObject);
      }
 catch (      KettlePluginException e) {
        e.printStackTrace();
        return;
      }
      kettleLifecycleListeners.add(listener);
      if (KettleEnvironment.isInitialized()) {
        try {
          listener.onEnvironmentInit();
        }
 catch (        LifecycleException ex) {
          String message=BaseMessages.getString(PKG,"LifecycleSupport.ErrorInvokingKettleLifecycleListener",listener);
          LogChannel.GENERAL.logError(message,ex);
        }
      }
    }
    @Override public void pluginRemoved(    Object serviceObject){
      kettleLifecycleListeners.remove(serviceObject);
    }
    @Override public void pluginChanged(    Object serviceObject){
    }
  }
);
}
