{
  if (Const.isEmpty(wStepname.getText()))   return;
  stepname=wStepname.getText();
  input.setDestination(wDestination.getText());
  input.setDestinationCc(wDestinationCc.getText());
  input.setDestinationBCc(wDestinationBCc.getText());
  input.setServer(wServer.getText());
  input.setPort(wPort.getText());
  input.setReplyAddress(wReply.getText());
  input.setReplyName(wReplyName.getText());
  input.setSubject(wSubject.getText());
  input.setContactPerson(wPerson.getText());
  input.setContactPhone(wPhone.getText());
  input.setComment(wComment.getText());
  input.setIncludeSubFolders(wincludeSubFolders.getSelection());
  input.setIncludeDate(wAddDate.getSelection());
  input.setisDynamicFilename(wisFileDynamic.getSelection());
  input.setDynamicFieldname(wDynamicFilenameField.getText());
  input.setDynamicWildcard(wDynamicWildcardField.getText());
  input.setDynamicZipFilenameField(wDynamicZipFileField.getText());
  input.setSourceFileFoldername(wSourceFileFoldername.getText());
  input.setSourceWildcard(wWildcard.getText());
  input.setZipLimitSize(wZipSizeCondition.getText());
  input.setZipFilenameDynamic(wisZipFileDynamic.getSelection());
  input.setZipFilename(wZipFilename.getText());
  input.setZipFiles(wZipFiles.getSelection());
  input.setAuthenticationUser(wAuthUser.getText());
  input.setAuthenticationPassword(wAuthPass.getText());
  input.setUsingAuthentication(wUseAuth.getSelection());
  input.setUsingSecureAuthentication(wUseSecAuth.getSelection());
  input.setOnlySendComment(wOnlyComment.getSelection());
  input.setUseHTML(wUseHTML.getSelection());
  input.setUsePriority(wUsePriority.getSelection());
  input.setEncoding(wEncoding.getText());
  input.setPriority(wPriority.getText());
  if (wPriority.getSelectionIndex() == 0) {
    input.setPriority("low");
  }
 else   if (wPriority.getSelectionIndex() == 1) {
    input.setPriority("normal");
  }
 else {
    input.setPriority("high");
  }
  if (wImportance.getSelectionIndex() == 0) {
    input.setImportance("low");
  }
 else   if (wImportance.getSelectionIndex() == 1) {
    input.setImportance("normal");
  }
 else {
    input.setImportance("high");
  }
  if (wSensitivity.getSelectionIndex() == 1) {
    input.setSensitivity("personal");
  }
 else   if (wSensitivity.getSelectionIndex() == 2) {
    input.setSensitivity("private");
  }
 else   if (wSensitivity.getSelectionIndex() == 3) {
    input.setSensitivity("company-confidential");
  }
 else {
    input.setSensitivity("normal");
  }
  input.setSecureConnectionType(wSecureConnectionType.getText());
  input.setReplyToAddresses(wReplyToAddresses.getText());
  int nritems=wFields.nrNonEmpty();
  int nr=0;
  for (int i=0; i < nritems; i++) {
    String arg=wFields.getNonEmpty(i).getText(1);
    if (arg != null && arg.length() != 0)     nr++;
  }
  input.allocate(nr);
  nr=0;
  for (int i=0; i < nritems; i++) {
    String image=wFields.getNonEmpty(i).getText(1);
    String id=wFields.getNonEmpty(i).getText(2);
    input.setEmbeddedImage(i,image);
    input.setContentIds(i,id);
    nr++;
  }
  dispose();
}
