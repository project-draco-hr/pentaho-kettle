{
  try {
    if (comboCube.getText() != null && comboCube.getText() != "") {
      if (addConnectionLine.getText() != null) {
        DatabaseMeta dbMeta=transMeta.findDatabase(addConnectionLine.getText());
        if (dbMeta != null) {
          PaloCellInputData data=new PaloCellInputData(dbMeta);
          data.helper.connect();
          List<String> cubeDimensions=data.helper.getCubeDimensions(comboCube.getText());
          tableViewFields.table.removeAll();
          for (int i=0; i < cubeDimensions.size(); i++) {
            final TableItem item=new TableItem(tableViewFields.table,SWT.NONE);
            item.setText(1,cubeDimensions.get(i));
            item.setText(2,cubeDimensions.get(i));
          }
          tableViewFields.removeEmptyRows();
          tableViewFields.setRowNums();
          tableViewFields.optWidth(true);
          tableViewFields.setReadonly(true);
          data.helper.disconnect();
        }
      }
    }
 else {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Title"),BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"),new Exception(BaseMessages.getString(PKG,"PaloCellInputDialog.SelectCubeFirstError")));
    }
  }
 catch (  KettleException ke) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Title"),BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"),ke);
  }
}
