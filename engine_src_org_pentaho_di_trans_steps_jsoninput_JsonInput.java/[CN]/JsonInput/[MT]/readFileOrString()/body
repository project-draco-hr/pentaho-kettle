{
  if (data.file != null) {
    data.filename=KettleVFS.getFilename(data.file);
    if (meta.getShortFileNameField() != null && meta.getShortFileNameField().length() > 0) {
      data.shortFilename=data.file.getName().getBaseName();
    }
    if (meta.getPathField() != null && meta.getPathField().length() > 0) {
      data.path=KettleVFS.getFilename(data.file.getParent());
    }
    if (meta.isHiddenField() != null && meta.isHiddenField().length() > 0) {
      data.hidden=data.file.isHidden();
    }
    if (meta.getExtensionField() != null && meta.getExtensionField().length() > 0) {
      data.extension=data.file.getName().getExtension();
    }
    if (meta.getLastModificationDateField() != null && meta.getLastModificationDateField().length() > 0) {
      data.lastModificationDateTime=new Date(data.file.getContent().getLastModifiedTime());
    }
    if (meta.getUriField() != null && meta.getUriField().length() > 0) {
      data.uriName=data.file.getName().getURI();
    }
    if (meta.getRootUriField() != null && meta.getRootUriField().length() > 0) {
      data.rootUriName=data.file.getName().getRootURI();
    }
    long fileSize=data.file.getContent().getSize();
    if (meta.getSizeField() != null && meta.getSizeField().length() > 0) {
      data.size=fileSize;
    }
    data.filenr++;
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"JsonInput.Log.OpeningFile",data.file.toString()));
    addFileToResultFilesname(data.file);
  }
  parseJson();
}
