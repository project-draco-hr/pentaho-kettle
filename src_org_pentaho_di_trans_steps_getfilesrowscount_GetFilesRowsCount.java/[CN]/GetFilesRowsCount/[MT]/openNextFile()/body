{
  if (data.last_file)   return false;
  try {
    if (!meta.isFileField()) {
      if (data.filenr >= data.files.nrOfFiles()) {
        if (log.isDetailed())         logDetailed(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.FinishedProcessing"));
        return false;
      }
      data.last_file=(data.filenr == data.files.nrOfFiles() - 1);
      data.file=(FileObject)data.files.getFile((int)data.filenr);
    }
 else {
      data.readrow=getRow();
      if (data.readrow == null) {
        if (log.isDetailed())         logDetailed(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.FinishedProcessing"));
        return false;
      }
      if (first) {
        first=false;
        data.inputRowMeta=getInputRowMeta();
        data.outputRowMeta=data.inputRowMeta.clone();
        meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
        data.totalpreviousfields=data.inputRowMeta.size();
        if (Const.isEmpty(meta.setOutputFilenameField())) {
          logError(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.NoField"));
          throw new KettleException(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.NoField"));
        }
        if (data.indexOfFilenameField < 0) {
          data.indexOfFilenameField=getInputRowMeta().indexOfValue(meta.setOutputFilenameField());
          if (data.indexOfFilenameField < 0) {
            logError(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.ErrorFindingField",meta.setOutputFilenameField()));
            throw new KettleException(BaseMessages.getString(PKG,"GetFilesRowsCount.Exception.CouldnotFindField",meta.setOutputFilenameField()));
          }
        }
      }
      String filename=getInputRowMeta().getString(data.readrow,data.indexOfFilenameField);
      if (log.isDetailed())       logDetailed(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.FilenameInStream",meta.setOutputFilenameField(),filename));
      data.file=KettleVFS.getFileObject(filename);
      if (meta.isFileField())       data.rownr=0;
    }
    data.filenr++;
    if (meta.isAddResultFile()) {
      ResultFile resultFile=new ResultFile(ResultFile.FILE_TYPE_GENERAL,data.file,getTransMeta().getName(),getStepname());
      resultFile.setComment(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.FileAddedResult"));
      addResultFile(resultFile);
    }
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.OpeningFile",data.file.toString()));
    getRowNumber();
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.FileOpened",data.file.toString()));
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"GetFilesRowsCount.Log.UnableToOpenFile","" + data.filenr,data.file.toString(),e.toString()));
    stopAll();
    setErrors(1);
    return false;
  }
  return true;
}
