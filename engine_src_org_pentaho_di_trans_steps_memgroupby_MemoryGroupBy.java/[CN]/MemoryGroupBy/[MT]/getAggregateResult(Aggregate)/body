{
  Object[] result=new Object[data.subjectnrs.length];
  if (data.subjectnrs != null) {
    for (int i=0; i < data.subjectnrs.length; i++) {
      Object ag=aggregate.agg[i];
switch (meta.getAggregateType()[i]) {
case MemoryGroupByMeta.TYPE_GROUP_SUM:
        break;
case MemoryGroupByMeta.TYPE_GROUP_AVERAGE:
      ag=ValueDataUtil.divide(data.aggMeta.getValueMeta(i),ag,new ValueMeta("c",ValueMetaInterface.TYPE_INTEGER),new Long(aggregate.counts[i]));
    break;
case MemoryGroupByMeta.TYPE_GROUP_MEDIAN:
case MemoryGroupByMeta.TYPE_GROUP_PERCENTILE:
  double percentile=50.0;
if (meta.getAggregateType()[i] == MemoryGroupByMeta.TYPE_GROUP_PERCENTILE) {
  percentile=Double.parseDouble(meta.getValueField()[i]);
}
@SuppressWarnings("unchecked") List<Double> valuesList=(List<Double>)aggregate.agg[i];
double[] values=new double[valuesList.size()];
for (int v=0; v < values.length; v++) values[v]=valuesList.get(v);
ag=new Percentile().evaluate(values,percentile);
break;
case MemoryGroupByMeta.TYPE_GROUP_COUNT_ANY:
case MemoryGroupByMeta.TYPE_GROUP_COUNT_ALL:
ag=new Long(aggregate.counts[i]);
break;
case MemoryGroupByMeta.TYPE_GROUP_COUNT_DISTINCT:
break;
case MemoryGroupByMeta.TYPE_GROUP_MIN:
break;
case MemoryGroupByMeta.TYPE_GROUP_MAX:
break;
case MemoryGroupByMeta.TYPE_GROUP_STANDARD_DEVIATION:
double sum=(Double)ag / aggregate.counts[i];
ag=Double.valueOf(Math.sqrt(sum));
break;
case MemoryGroupByMeta.TYPE_GROUP_CONCAT_COMMA:
case MemoryGroupByMeta.TYPE_GROUP_CONCAT_STRING:
ag=((StringBuilder)ag).toString();
break;
default :
break;
}
result[i]=ag;
}
}
return result;
}
