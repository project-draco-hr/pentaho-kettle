{
  boolean resultat=false;
  String fil_name=null;
  try {
    if (info.getFile().getType() == FileType.FILE) {
      if (info.getFile().getName().getBaseName().equals(filename) && (info.getFile().getParent().toString().equals(foldername))) {
        fil_name=destfolder + Const.FILE_SEPARATOR + filename;
        if (KettleVFS.getFileObject(fil_name,JobEntryCopyFiles.this).exists()) {
          if (log.isDetailed())           log.logDetailed("      " + BaseMessages.getString(PKG,"JobCopyFiles.Log.FileExistsInfos"),BaseMessages.getString(PKG,"JobCopyFiles.Log.FileExists",fil_name));
          if (overwrite_files) {
            if (log.isDetailed())             log.logDetailed("      " + BaseMessages.getString(PKG,"JobCopyFiles.Log.FileOverwriteInfos"),BaseMessages.getString(PKG,"JobCopyFiles.Log.FileOverwrite",info.getFile().toString(),fil_name));
            resultat=true;
          }
        }
 else {
          if (log.isDetailed())           log.logDetailed("      " + BaseMessages.getString(PKG,"JobCopyFiles.Log.FileCopiedInfos"),BaseMessages.getString(PKG,"JobCopyFiles.Log.FileCopied",info.getFile().toString(),fil_name));
          resultat=true;
        }
      }
      if (resultat && remove_source_files) {
        list_files_remove.add(info.getFile().toString());
      }
      if (resultat && add_result_filesname) {
        list_add_result.add(KettleVFS.getFileObject(fil_name,JobEntryCopyFiles.this).toString());
      }
    }
  }
 catch (  Exception e) {
    log.logError(BaseMessages.getString(PKG,"JobCopyFiles.Error.Exception.CopyProcessError"),BaseMessages.getString(PKG,"JobCopyFiles.Error.Exception.CopyProcess",info.getFile().toString(),fil_name,e.getMessage()));
    resultat=false;
  }
  return resultat;
}
