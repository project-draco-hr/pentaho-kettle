{
  boolean resultat=false;
  String fil_name=null;
  try {
    if (destfile.exists()) {
      if (log.isDetailed())       log.logDetailed("      " + BaseMessages.getString(PKG,"JobCopyFiles.Log.FileExistsInfos"),BaseMessages.getString(PKG,"JobCopyFiles.Log.FileExists",destfile.toString()));
      if (overwrite_files) {
        if (log.isDetailed())         log.logDetailed("      " + BaseMessages.getString(PKG,"JobCopyFiles.Log.FileOverwriteInfos"),BaseMessages.getString(PKG,"JobCopyFiles.Log.FileOverwrite",destfile.toString()));
        resultat=true;
      }
    }
 else {
      if (log.isDetailed())       log.logDetailed("      " + BaseMessages.getString(PKG,"JobCopyFiles.Log.FileCopiedInfos"),BaseMessages.getString(PKG,"JobCopyFiles.Log.FileCopied",info.getFile().toString(),destfile.toString()));
      resultat=true;
    }
    if (resultat && remove_source_files) {
      list_files_remove.add(info.getFile().toString());
    }
    if (resultat && add_result_filesname) {
      list_add_result.add(destfile.toString());
    }
  }
 catch (  Exception e) {
    log.logError(toString(),BaseMessages.getString(PKG,"JobCopyFiles.Error.Exception.CopyProcess",info.getFile().toString(),fil_name,e.getMessage()));
  }
  return resultat;
}
