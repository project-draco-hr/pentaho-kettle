{
  String username=environmentSubstitute(meta.getUserName());
  String password=environmentSubstitute(meta.getPassword());
  String module=environmentSubstitute(meta.getModule());
  String condition=environmentSubstitute(meta.getCondition());
  String timeout=environmentSubstitute(meta.getTimeOut());
  data.binding=getBinding(data.URL,username,password,module,condition,timeout);
  if (data.binding == null)   throw new KettleException(BaseMessages.getString(PKG,"SalesforceInput.Exception.CanNotGetBiding"));
  try {
    DescribeSObjectResult describeSObjectResult=data.binding.describeSObject(module);
    if (describeSObjectResult == null)     throw new KettleException(BaseMessages.getString(PKG,"SalesforceInput.ErrorGettingObject"));
    if (!describeSObjectResult.isQueryable())     throw new KettleException(BaseMessages.getString(PKG,"SalesforceInputDialog.ObjectNotQueryable",module));
    String SQLString=BuiltSQl();
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"SalesforceInput.Log.SQLString") + " : " + SQLString);
    if (meta.includeSQL())     data.SQL=SQLString;
    if (meta.includeTimestamp())     data.Timestamp=data.binding.getServerTimestamp().toString();
    if (log.isDebug())     BaseMessages.getString(PKG,"SalesforceInput.Log.ServerTimestamp","" + data.binding.getServerTimestamp());
    data.qr=data.binding.query(SQLString);
    data.limitReached=true;
    data.recordcount=data.qr.getSize();
    if (data.recordcount > 0) {
      data.limitReached=false;
      data.nrRecords=data.qr.getRecords().length;
    }
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"SalesforceInput.Log.RecordCount") + " : " + data.recordcount);
  }
 catch (  Exception e) {
    throw new KettleException(e);
  }
}
