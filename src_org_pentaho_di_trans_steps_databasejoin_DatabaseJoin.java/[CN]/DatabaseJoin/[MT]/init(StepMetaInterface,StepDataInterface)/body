{
  meta=(DatabaseJoinMeta)smi;
  data=(DatabaseJoinData)sdi;
  if (super.init(smi,sdi)) {
    if (meta.getDatabaseMeta() == null) {
      logError(BaseMessages.getString(PKG,"DatabaseJoin.Init.ConnectionMissing",getStepname()));
      return false;
    }
    data.db=new Database(this,meta.getDatabaseMeta());
    data.db.shareVariablesWith(this);
    try {
      if (getTransMeta().isUsingUniqueConnections()) {
synchronized (getTrans()) {
          data.db.connect(getTrans().getTransactionId(),getPartitionID());
        }
      }
 else {
        data.db.connect(getPartitionID());
      }
      if (log.isDetailed())       logDetailed(BaseMessages.getString(PKG,"DatabaseJoin.Log.ConnectedToDB"));
      String sql=meta.getSql();
      if (meta.isVariableReplace())       sql=environmentSubstitute(sql);
      data.pstmt=data.db.prepareSQL(sql);
      if (log.isDebug())       logDebug(BaseMessages.getString(PKG,"DatabaseJoin.Log.SQLStatement",sql));
      data.db.setQueryLimit(meta.getRowLimit());
      return true;
    }
 catch (    KettleException e) {
      logError(BaseMessages.getString(PKG,"DatabaseJoin.Log.DatabaseError") + e.getMessage(),e);
      if (data.db != null) {
        data.db.disconnect();
      }
    }
  }
  return false;
}
