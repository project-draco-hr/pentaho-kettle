{
  RepositoryMeta repinfo=new RepositoryMeta();
  getInfo(repinfo);
  Repository rep=new Repository(log,repinfo,null);
  if (rep.connect(getClass().getName())) {
    MessageBox qmb=new MessageBox(shell,SWT.ICON_WARNING | SWT.YES | SWT.NO);
    qmb.setMessage("Are you sure you want to remove all repository tables on this connection?");
    qmb.setText("OK");
    int answer=qmb.open();
    if (answer == SWT.YES) {
      EnterPasswordDialog etd=new EnterPasswordDialog(shell,props,"Confirm the password","Give the password of the admin user!","");
      String pwd=etd.open();
      if (pwd != null) {
        try {
          UserInfo ui=new UserInfo(rep,"admin");
          if (pwd.equalsIgnoreCase(ui.getPassword())) {
            try {
              rep.dropRepositorySchema();
              MessageBox mb=new MessageBox(shell,SWT.ICON_INFORMATION | SWT.OK);
              mb.setMessage("Kettle removed all repository tables on this connection.");
              mb.setText("OK");
              mb.open();
            }
 catch (            KettleDatabaseException dbe) {
              MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
              mb.setMessage("Kettle couldn't remove the repository tables on this connection.:" + Const.CR + dbe.getMessage());
              mb.setText("ERROR");
              mb.open();
            }
          }
 else {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage("Kettle couldn't remove the repository tables on this connection.  The password was not correct.");
            mb.setText("ERROR");
            mb.open();
          }
        }
 catch (        KettleException e) {
          new ErrorDialog(shell,props,"ERROR","Kettle couldn't verify the administrator user!",e);
        }
      }
    }
    rep.disconnect();
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
    mb.setMessage("Kettle didn't find a repository on this connection.");
    mb.setText("ERROR");
    mb.open();
  }
}
