{
  RepositoryMeta repinfo=new RepositoryMeta();
  getInfo(repinfo);
  Repository rep=new Repository(log,repinfo,null);
  try {
    rep.connect(getClass().getName());
    MessageBox qmb=new MessageBox(shell,SWT.ICON_WARNING | SWT.YES | SWT.NO);
    qmb.setMessage(Messages.getString("RepositoryDialog.Dialog.ConfirmRemovalOfRepository.Message"));
    qmb.setText(Messages.getString("RepositoryDialog.Dialog.ConfirmRemovalOfRepository.Title"));
    int answer=qmb.open();
    if (answer == SWT.YES) {
      EnterPasswordDialog etd=new EnterPasswordDialog(shell,props,Messages.getString("RepositoryDialog.Dialog.AskAdminPassword.Title"),Messages.getString("RepositoryDialog.Dialog.AskAdminPassword.Message"),"");
      String pwd=etd.open();
      if (pwd != null) {
        try {
          UserInfo ui=new UserInfo(rep,"admin");
          if (pwd.equalsIgnoreCase(ui.getPassword())) {
            try {
              rep.dropRepositorySchema();
              MessageBox mb=new MessageBox(shell,SWT.ICON_INFORMATION | SWT.OK);
              mb.setMessage(Messages.getString("RepositoryDialog.Dialog.RemovedRepositoryTables.Message"));
              mb.setText(Messages.getString("RepositoryDialog.Dialog.RemovedRepositoryTables.Title"));
              mb.open();
            }
 catch (            KettleDatabaseException dbe) {
              MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
              mb.setMessage(Messages.getString("RepositoryDialog.Dialog.UnableToRemoveRepository.Message") + Const.CR + dbe.getMessage());
              mb.setText(Messages.getString("RepositoryDialog.Dialog.UnableToRemoveRepository.Title"));
              mb.open();
            }
          }
 else {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage(Messages.getString("RepositoryDialog.Dialog.UnableToRemoveRepositoryPwdIncorrect.Message"));
            mb.setText(Messages.getString("RepositoryDialog.Dialog.UnableToRemoveRepositoryPwdIncorrect.Title"));
            mb.open();
          }
        }
 catch (        KettleException e) {
          new ErrorDialog(shell,Messages.getString("RepositoryDialog.Dialog.UnableToVerifyAdminUser.Title"),Messages.getString("RepositoryDialog.Dialog.UnableToVerifyAdminUser.Message"),e);
        }
      }
    }
    rep.disconnect();
  }
 catch (  KettleException ke) {
    new ErrorDialog(shell,Messages.getString("RepositoryDialog.Dialog.NoRepositoryFoundOnConnection.Title"),Messages.getString("RepositoryDialog.Dialog.NoRepositoryFoundOnConnection.Message"),ke);
  }
}
