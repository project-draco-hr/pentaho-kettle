{
  Row row;
  if (r == null)   row=new Row();
 else   row=r;
  int i;
  for (i=0; i < inputFields.length; i++) {
    TextFileInputField field=inputFields[i];
    int type=field.getType();
    if (type == Value.VALUE_TYPE_NONE)     type=Value.VALUE_TYPE_STRING;
    Value v=new Value(field.getName(),type);
    v.setLength(field.getLength(),field.getPrecision());
    v.setOrigin(name);
    row.addValue(v);
  }
  if (errorIgnored) {
    if (errorCountField != null && errorCountField.length() > 0) {
      Value v=new Value(errorCountField,Value.VALUE_TYPE_INTEGER);
      v.setOrigin(name);
      row.addValue(v);
    }
    if (errorFieldsField != null && errorFieldsField.length() > 0) {
      Value v=new Value(errorFieldsField,Value.VALUE_TYPE_STRING);
      v.setOrigin(name);
      row.addValue(v);
    }
    if (errorTextField != null && errorTextField.length() > 0) {
      Value v=new Value(errorTextField,Value.VALUE_TYPE_STRING);
      v.setOrigin(name);
      row.addValue(v);
    }
  }
  if (includeFilename) {
    Value v=new Value(filenameField,Value.VALUE_TYPE_STRING);
    v.setLength(100,-1);
    v.setOrigin(name);
    row.addValue(v);
  }
  if (includeRowNumber) {
    Value v=new Value(rowNumberField,Value.VALUE_TYPE_NUMBER);
    v.setLength(7,0);
    v.setOrigin(name);
    row.addValue(v);
  }
  return row;
}
