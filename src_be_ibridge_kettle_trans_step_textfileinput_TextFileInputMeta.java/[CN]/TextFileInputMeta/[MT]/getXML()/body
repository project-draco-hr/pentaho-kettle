{
  String retval="";
  retval+="    " + XMLHandler.addTagValue("separator",separator);
  retval+="    " + XMLHandler.addTagValue("enclosure",enclosure);
  retval+="    " + XMLHandler.addTagValue("enclosure_breaks",breakInEnclosureAllowed);
  retval+="    " + XMLHandler.addTagValue("escapechar",escapeCharacter);
  retval+="    " + XMLHandler.addTagValue("header",header);
  retval+="    " + XMLHandler.addTagValue("nr_headerlines",nrHeaderLines);
  retval+="    " + XMLHandler.addTagValue("footer",footer);
  retval+="    " + XMLHandler.addTagValue("nr_footerlines",nrFooterLines);
  retval+="    " + XMLHandler.addTagValue("line_wrapped",lineWrapped);
  retval+="    " + XMLHandler.addTagValue("nr_wraps",nrWraps);
  retval+="    " + XMLHandler.addTagValue("layout_paged",layoutPaged);
  retval+="    " + XMLHandler.addTagValue("nr_lines_per_page",nrLinesPerPage);
  retval+="    " + XMLHandler.addTagValue("nr_lines_doc_header",nrLinesDocHeader);
  retval+="    " + XMLHandler.addTagValue("noempty",noEmptyLines);
  retval+="    " + XMLHandler.addTagValue("include",includeFilename);
  retval+="    " + XMLHandler.addTagValue("include_field",filenameField);
  retval+="    " + XMLHandler.addTagValue("rownum",includeRowNumber);
  retval+="    " + XMLHandler.addTagValue("rownum_field",rowNumberField);
  retval+="    " + XMLHandler.addTagValue("format",fileFormat);
  retval+="    " + XMLHandler.addTagValue("encoding",encoding);
  retval+="    <file>" + Const.CR;
  for (int i=0; i < fileName.length; i++) {
    retval+="      " + XMLHandler.addTagValue("name",fileName[i]);
    retval+="      " + XMLHandler.addTagValue("filemask",fileMask[i]);
  }
  retval+="      " + XMLHandler.addTagValue("type",fileType);
  retval+="      " + XMLHandler.addTagValue("zipped",zipped);
  retval+="      </file>" + Const.CR;
  retval+="    <filters>" + Const.CR;
  for (int i=0; i < filter.length; i++) {
    retval+="      <filter>" + Const.CR;
    retval+="        " + XMLHandler.addTagValue("filter_string",filter[i].getFilterString(),false);
    retval+="        " + XMLHandler.addTagValue("filter_position",filter[i].getFilterPosition(),false);
    retval+="        " + XMLHandler.addTagValue("filter_is_last_line",filter[i].isFilterLastLine(),false);
    retval+="      <filter>" + Const.CR;
  }
  retval+="      </filters>" + Const.CR;
  retval+="    <fields>" + Const.CR;
  for (int i=0; i < inputFields.length; i++) {
    TextFileInputField field=inputFields[i];
    retval+="      <field>" + Const.CR;
    retval+="        " + XMLHandler.addTagValue("name",field.getName());
    retval+="        " + XMLHandler.addTagValue("type",field.getTypeDesc());
    retval+="        " + XMLHandler.addTagValue("format",field.getFormat());
    retval+="        " + XMLHandler.addTagValue("currency",field.getCurrencySymbol());
    retval+="        " + XMLHandler.addTagValue("decimal",field.getDecimalSymbol());
    retval+="        " + XMLHandler.addTagValue("group",field.getGroupSymbol());
    retval+="        " + XMLHandler.addTagValue("nullif",field.getNullString());
    retval+="        " + XMLHandler.addTagValue("position",field.getPosition());
    retval+="        " + XMLHandler.addTagValue("length",field.getLength());
    retval+="        " + XMLHandler.addTagValue("precision",field.getPrecision());
    retval+="        " + XMLHandler.addTagValue("trim_type",field.getTrimTypeDesc());
    retval+="        " + XMLHandler.addTagValue("repeat",field.isRepeated());
    retval+="        </field>" + Const.CR;
  }
  retval+="      </fields>" + Const.CR;
  retval+="    " + XMLHandler.addTagValue("limit",rowLimit);
  retval+="    " + XMLHandler.addTagValue("error_ignored",errorIgnored);
  retval+="    " + XMLHandler.addTagValue("error_count_field",errorCountField);
  retval+="    " + XMLHandler.addTagValue("error_fields_field",errorFieldsField);
  retval+="    " + XMLHandler.addTagValue("error_text_field",errorTextField);
  retval+="    " + XMLHandler.addTagValue("bad_line_files_destination_directory",badLineFilesDestinationDirectory);
  retval+="    " + XMLHandler.addTagValue("bad_line_files_extension",badLineFilesExtension);
  retval+="    " + XMLHandler.addTagValue("error_line_files_destination_directory",errorLineFilesDestinationDirectory);
  retval+="    " + XMLHandler.addTagValue("error_line_files_extension",errorLineFilesExtension);
  retval+="    " + XMLHandler.addTagValue("data_error_line_files_destination_directory",dataErrorLineFilesDestinationDirectory);
  retval+="    " + XMLHandler.addTagValue("data_error_line_files_extension",dataErrorLineFilesExtension);
  retval+="    " + XMLHandler.addTagValue("line_number_files_destination_directory",lineNumberFilesDestinationDirectory);
  retval+="    " + XMLHandler.addTagValue("line_number_files_extension",lineNumberFilesExtension);
  return retval;
}
