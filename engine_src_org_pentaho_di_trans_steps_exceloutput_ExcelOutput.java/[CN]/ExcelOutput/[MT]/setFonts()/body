{
  int headerFontSize=Const.toInt(environmentSubstitute(meta.getHeaderFontSize()),ExcelOutputMeta.DEFAULT_FONT_SIZE);
  FontName headerFontName=ExcelFontMap.getFontName(meta.getHeaderFontName());
  UnderlineStyle underline=ExcelFontMap.getUnderlineStyle(meta.getHeaderFontUnderline());
  WritableFont writableHeaderFont=null;
  if (meta.isHeaderFontBold())   writableHeaderFont=new WritableFont(headerFontName,headerFontSize,WritableFont.BOLD,meta.isHeaderFontItalic(),underline);
 else   writableHeaderFont=new WritableFont(headerFontName,headerFontSize,WritableFont.NO_BOLD,meta.isHeaderFontItalic(),underline);
  Colour fontHeaderColour=ExcelFontMap.getColour(meta.getHeaderFontColor(),Colour.BLACK);
  if (!fontHeaderColour.equals(Colour.BLACK))   writableHeaderFont.setColour(fontHeaderColour);
  data.headerCellFormat=new WritableCellFormat(writableHeaderFont);
  if (meta.getHeaderBackGroundColor() != ExcelOutputMeta.FONT_COLOR_NONE)   data.headerCellFormat.setBackground(ExcelFontMap.getColour(meta.getHeaderBackGroundColor(),null));
  data.headerCellFormat=ExcelFontMap.getAlignment(meta.getHeaderAlignment(),data.headerCellFormat);
  data.headerCellFormat=ExcelFontMap.getOrientation(meta.getHeaderFontOrientation(),data.headerCellFormat);
  if (!Const.isEmpty(data.realHeaderImage)) {
    FileObject imageFile=null;
    try {
      imageFile=KettleVFS.getFileObject(data.realHeaderImage);
      if (!imageFile.exists())       throw new KettleException(BaseMessages.getString(PKG,"ExcelInputLog.ImageFileNotExists",data.realHeaderImage));
      data.realHeaderImage=KettleVFS.getFilename(imageFile);
      Dimension m=ExcelFontMap.getImageDimension(data.realHeaderImage);
      data.headerImageWidth=m.getWidth() * 0.016;
      data.headerImageHeight=m.getHeight() * 0.0625;
      byte[] imageData=new byte[(int)imageFile.getContent().getSize()];
      KettleVFS.getInputStream(imageFile).read(imageData);
      data.headerImage=new WritableImage(0,0,data.headerImageWidth,data.headerImageHeight,imageData);
      imageData=null;
    }
 catch (    Exception e) {
      throw new KettleException(e);
    }
 finally {
      if (imageFile != null) {
        try {
          imageFile.close();
          imageFile=null;
        }
 catch (        Exception e) {
        }
      }
    }
  }
  int rowFontSize=Const.toInt(environmentSubstitute(meta.getRowFontSize()),ExcelOutputMeta.DEFAULT_FONT_SIZE);
  FontName rowFontName=ExcelFontMap.getFontName(meta.getRowFontName());
  data.writableFont=new WritableFont(rowFontName,rowFontSize,WritableFont.NO_BOLD,false,UnderlineStyle.NO_UNDERLINE);
  Colour rowFontColour=ExcelFontMap.getColour(meta.getRowFontColor(),Colour.BLACK);
  if (!fontHeaderColour.equals(Colour.BLACK))   data.writableFont.setColour(rowFontColour);
  if (meta.getRowBackGroundColor() != ExcelOutputMeta.FONT_COLOR_NONE)   data.rowFontBackgoundColour=ExcelFontMap.getColour(meta.getRowBackGroundColor(),null);
}
