{
  Result result=previousResult;
  result.setNrErrors(1);
  result.setResult(false);
  LogWriter log=LogWriter.getInstance();
  if (rep == null) {
    logError(BaseMessages.getString(PKG,"JobEntryConnectedToRepository.Log.NotConnected"));
    return result;
  }
  if (isspecificrep) {
    if (Const.isEmpty(repname)) {
      logError(BaseMessages.getString(PKG,"JobEntryConnectedToRepository.Error.NoRep"));
      return result;
    }
    String Reponame=environmentSubstitute(repname);
    if (!Reponame.equals(rep.getName())) {
      logError(BaseMessages.getString(PKG,"JobEntryConnectedToRepository.Error.DiffRep",rep.getName(),Reponame));
      return result;
    }
  }
  if (isspecificuser) {
    if (Const.isEmpty(username)) {
      logError(BaseMessages.getString(PKG,"JobEntryConnectedToRepository.Error.NoUser"));
      return result;
    }
    String Username=environmentSubstitute(username);
    if (!Username.equals(rep.getSecurityProvider().getUserInfo().getLogin())) {
      logError(BaseMessages.getString(PKG,"JobEntryConnectedToRepository.Error.DiffUser",rep.getUserInfo().getLogin(),Username));
      return result;
    }
  }
  if (log.isDetailed())   logDetailed(BaseMessages.getString(PKG,"JobEntryConnectedToRepository.Log.Connected",rep.getName(),rep.getUserInfo().getLogin()));
  result.setResult(true);
  result.setNrErrors(0);
  return result;
}
