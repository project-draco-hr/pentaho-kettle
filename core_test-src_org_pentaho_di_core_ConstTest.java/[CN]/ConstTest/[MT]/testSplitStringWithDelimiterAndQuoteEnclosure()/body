{
  String[] result=Const.splitString("\"Hello, world\"",",","\"");
  assertNotNull(result);
  assertEquals(1,result.length);
  assertEquals("\"Hello, world\"",result[0]);
  result=Const.splitString("\"Hello, world\"",",","\"",true);
  assertNotNull(result);
  assertEquals(1,result.length);
  assertEquals("Hello, world",result[0]);
  result=Const.splitString("\"Hello, world\",\"I\",\"am\",\"here\"",",","\"");
  assertNotNull(result);
  assertEquals(4,result.length);
  assertEquals("\"Hello, world\"",result[0]);
  assertEquals("\"I\"",result[1]);
  assertEquals("\"am\"",result[2]);
  assertEquals("\"here\"",result[3]);
  result=Const.splitString("\"Hello, world\",\"I\",\"am\",\"here\"",",","\"",true);
  assertNotNull(result);
  assertEquals(4,result.length);
  assertEquals("Hello, world",result[0]);
  assertEquals("I",result[1]);
  assertEquals("am",result[2]);
  assertEquals("here",result[3]);
  result=Const.splitString("\"Hello, world\",\"I,\",\"am,,\",\", here\"",",","\"");
  assertNotNull(result);
  assertEquals(4,result.length);
  assertEquals("\"Hello, world\"",result[0]);
  assertEquals("\"I,\"",result[1]);
  assertEquals("\"am,,\"",result[2]);
  assertEquals("\", here\"",result[3]);
  result=Const.splitString("\"Hello, world\",\"I,\",\"am,,\",\", here\"",",","\"",true);
  assertNotNull(result);
  assertEquals(4,result.length);
  assertEquals("Hello, world",result[0]);
  assertEquals("I,",result[1]);
  assertEquals("am,,",result[2]);
  assertEquals(", here",result[3]);
}
