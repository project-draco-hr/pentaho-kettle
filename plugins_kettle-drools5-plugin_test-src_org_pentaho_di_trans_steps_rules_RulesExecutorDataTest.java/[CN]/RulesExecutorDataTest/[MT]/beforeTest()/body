{
  data=spy(new RulesExecutorData());
  ValueMetaInterface c1=mock(ValueMetaInterface.class);
  when(c1.getName()).thenReturn("c1");
  ValueMetaInterface c2=mock(ValueMetaInterface.class);
  when(c2.getName()).thenReturn("c2");
  List<ValueMetaInterface> initColumns=Arrays.asList(c1,c2);
  Rules.Column fc1=new Rules.Column();
  fc1.setName("c1");
  List<Rules.Column> fetchedColumns=new ArrayList<Rules.Column>(Arrays.asList(fc1));
  List<Rules.Column> fetchedColumnsSpy=spy(fetchedColumns);
  StatefulKnowledgeSession session=mock(StatefulKnowledgeSession.class);
  doReturn(session).when(data).initNewKnowledgeSession();
  doReturn(fetchedColumnsSpy).when(data).fetchColumns(session);
  RowMetaInterface rowMeta=mock(RowMetaInterface.class);
  when(rowMeta.getValueMetaList()).thenReturn(initColumns);
  data.initializeColumns(rowMeta);
}
