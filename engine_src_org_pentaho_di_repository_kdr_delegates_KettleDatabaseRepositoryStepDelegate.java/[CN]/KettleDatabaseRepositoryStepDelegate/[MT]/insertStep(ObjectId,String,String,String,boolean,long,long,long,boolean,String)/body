{
  ObjectId id=repository.connectionDelegate.getNextStepID();
  ObjectId id_step_type=getStepTypeID(steptype);
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_STEP_ID_STEP),id);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_STEP_ID_TRANSFORMATION),id_transformation);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_STEP_NAME),name);
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_STEP_DESCRIPTION),description);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_STEP_ID_STEP_TYPE),id_step_type);
  table.addValue(new ValueMetaBoolean(KettleDatabaseRepository.FIELD_STEP_DISTRIBUTE),Boolean.valueOf(distribute));
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_STEP_COPIES),new Long(copies));
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_STEP_GUI_LOCATION_X),new Long(gui_location_x));
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_STEP_GUI_LOCATION_Y),new Long(gui_location_y));
  table.addValue(new ValueMetaBoolean(KettleDatabaseRepository.FIELD_STEP_GUI_DRAW),Boolean.valueOf(gui_draw));
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_STEP_COPIES_STRING),copiesString);
  repository.connectionDelegate.getDatabase().prepareInsert(table.getRowMeta(),KettleDatabaseRepository.TABLE_R_STEP);
  repository.connectionDelegate.getDatabase().setValuesInsert(table);
  repository.connectionDelegate.getDatabase().insertRow();
  repository.connectionDelegate.getDatabase().closeInsert();
  return id;
}
