{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SelectValuesMeta.CheckResult.StepReceivingFields",prev.size() + ""),stepMeta);
    remarks.add(cr);
    String error_message="";
    boolean error_found=false;
    for (int i=0; i < this.selectName.length; i++) {
      int idx=prev.indexOfValue(selectName[i]);
      if (idx < 0) {
        error_message+="\t\t" + selectName[i] + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message=Messages.getString("SelectValuesMeta.CheckResult.SelectedFieldsNotFound") + Const.CR + Const.CR+ error_message;
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SelectValuesMeta.CheckResult.AllSelectedFieldsFound"),stepMeta);
      remarks.add(cr);
    }
    if (this.selectName.length > 0) {
      for (int i=0; i < prev.size(); i++) {
        ValueMetaInterface pv=prev.getValueMeta(i);
        int idx=Const.indexOfString(pv.getName(),selectName);
        if (idx < 0) {
          error_message+="\t\t" + pv.getName() + " ("+ pv.getTypeDesc()+ ")"+ Const.CR;
          error_found=true;
        }
      }
      if (error_found) {
        error_message=Messages.getString("SelectValuesMeta.CheckResult.FieldsNotFound") + Const.CR + Const.CR+ error_message;
        cr=new CheckResult(CheckResult.TYPE_RESULT_COMMENT,error_message,stepMeta);
        remarks.add(cr);
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SelectValuesMeta.CheckResult.AllSelectedFieldsFound2"),stepMeta);
        remarks.add(cr);
      }
    }
    error_message="";
    error_found=false;
    for (int i=0; i < this.deleteName.length; i++) {
      int idx=prev.indexOfValue(deleteName[i]);
      if (idx < 0) {
        error_message+="\t\t" + deleteName[i] + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message=Messages.getString("SelectValuesMeta.CheckResult.DeSelectedFieldsNotFound") + Const.CR + Const.CR+ error_message;
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SelectValuesMeta.CheckResult.AllDeSelectedFieldsFound"),stepMeta);
      remarks.add(cr);
    }
    error_message="";
    error_found=false;
    for (int i=0; i < this.metaName.length; i++) {
      int idx=prev.indexOfValue(metaName[i]);
      if (idx < 0) {
        error_message+="\t\t" + metaName[i] + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message=Messages.getString("SelectValuesMeta.CheckResult.MetadataFieldsNotFound") + Const.CR + Const.CR+ error_message;
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SelectValuesMeta.CheckResult.AllMetadataFieldsFound"),stepMeta);
      remarks.add(cr);
    }
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("SelectValuesMeta.CheckResult.FieldsNotFound2"),stepMeta);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SelectValuesMeta.CheckResult.StepReceivingInfoFromOtherSteps"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("SelectValuesMeta.CheckResult.NoInputReceivedError"),stepMeta);
    remarks.add(cr);
  }
  int cnt[]=new int[selectName.length];
  boolean error_found=false;
  String error_message="";
  for (int i=0; i < selectName.length; i++) {
    cnt[i]=0;
    for (int j=0; j < selectName.length; j++) {
      if (selectName[i].equals(selectName[j]))       cnt[i]++;
    }
    if (cnt[i] > 1) {
      if (!error_found) {
        error_message=Messages.getString("SelectValuesMeta.CheckResult.DuplicateFieldsSpecified") + Const.CR;
      }
 else {
        error_found=true;
      }
      error_message+=Messages.getString("SelectValuesMeta.CheckResult.OccurentRow",i + " : " + selectName[i]+ "  ("+ cnt[i]) + Const.CR;
      error_found=true;
    }
  }
  if (error_found) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
    remarks.add(cr);
  }
}
