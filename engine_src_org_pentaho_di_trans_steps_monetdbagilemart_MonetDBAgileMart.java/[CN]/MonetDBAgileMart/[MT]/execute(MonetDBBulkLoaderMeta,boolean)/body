{
  rowLimit=((MonetDBAgileMartMeta)meta).getRowLimit();
  rowsWritten=0;
  MonetDBBulkLoaderData data=getData();
  bufferLimit=data.bufferSize;
  if (rowLimit < bufferLimit) {
    bufferLimit=rowLimit;
  }
  if (log.isDetailed()) {
    logDetailed("MonetDBAgileMart Truncate flag: " + meta.isTruncate());
  }
  if (log.isDetailed()) {
    logDetailed("MonetDBAgileMart Auto Adjust Schema flag: " + meta.isAutoSchema());
  }
  if (log.isDetailed()) {
    logDetailed("MonetDBAgileMart Auto String Length flag: " + meta.isAutoStringWidths());
  }
  if (log.isDetailed()) {
    logDetailed("Creating commands");
  }
  if (meta.isAutoSchema() || meta.isTruncate()) {
    try {
      if (meta.isAutoSchema()) {
        autoAdjustSchema(meta);
      }
 else {
        if (meta.isTruncate()) {
          truncateTable();
        }
      }
    }
 catch (    Exception ex) {
      throw new KettleException("Error while generating MonetDB commands",ex);
    }
  }
  if (!meta.isAutoSchema()) {
    meta.updateFields(getTransMeta(),getStepname(),data);
  }
  return super.execute(meta,wait);
}
