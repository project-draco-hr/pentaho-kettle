{
  try {
    LDIFInputMeta meta=new LDIFInputMeta();
    getInfo(meta);
    FileInputList inputList=meta.getFiles();
    wFields.removeAll();
    if (inputList.getFiles().size() > 0) {
      LDIF InputLDIF=new LDIF(KettleVFS.getFilename(inputList.getFile(0)));
      for (LDIFRecord recordLDIF=InputLDIF.nextRecord(); recordLDIF != null; recordLDIF=InputLDIF.nextRecord()) {
        LDIFContent contentLDIF=recordLDIF.getContent();
        if (contentLDIF.getType() == LDIFContent.ATTRIBUTE_CONTENT) {
          LDIFAttributeContent attrContentLDIF=(LDIFAttributeContent)contentLDIF;
          LDAPAttribute[] attributes_LDIF=attrContentLDIF.getAttributes();
          for (int j=0; j < attributes_LDIF.length; j++) {
            LDAPAttribute attribute_DIF=attributes_LDIF[j];
            TableItem item=new TableItem(wFields.table,SWT.NONE);
            item.setText(1,attribute_DIF.getName());
            item.setText(2,attribute_DIF.getName());
            String attributeValue=GetValue(attributes_LDIF,attribute_DIF.getName());
            if (IsDate(attributeValue)) {
              item.setText(3,"Date");
            }
 else             if (IsInteger(attributeValue)) {
              item.setText(3,"Integer");
            }
 else             if (IsNumber(attributeValue)) {
              item.setText(3,"Number");
            }
 else {
              item.setText(3,"String");
            }
          }
        }
      }
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,Messages.getString("LDIFInputMeta.ErrorRetrieveData.DialogTitle"),Messages.getString("LDIFInputMeta.ErrorRetrieveData.DialogMessage"),e);
  }
catch (  Exception e) {
    new ErrorDialog(shell,Messages.getString("LDIFInputMeta.ErrorRetrieveData.DialogTitle"),Messages.getString("LDIFInputMeta.ErrorRetrieveData.DialogMessage"),e);
  }
}
