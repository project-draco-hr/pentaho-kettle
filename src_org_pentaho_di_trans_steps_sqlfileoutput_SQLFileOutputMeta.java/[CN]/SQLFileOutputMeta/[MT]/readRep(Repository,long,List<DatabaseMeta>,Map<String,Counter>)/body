{
  try {
    long id_connection=rep.getStepAttributeInteger(id_step,"id_connection");
    databaseMeta=DatabaseMeta.findDatabase(databases,id_connection);
    schemaName=rep.getStepAttributeString(id_step,"schema");
    tablename=rep.getStepAttributeString(id_step,"table");
    truncateTable=rep.getStepAttributeBoolean(id_step,"truncate");
    createTable=rep.getStepAttributeBoolean(id_step,"create");
    encoding=rep.getStepAttributeString(id_step,"encoding");
    dateformat=rep.getStepAttributeString(id_step,"dateformat");
    AddToResult=rep.getStepAttributeBoolean(id_step,"addtoresult");
    StartNewLine=rep.getStepAttributeBoolean(id_step,"startnewline");
    fileName=rep.getStepAttributeString(id_step,"file_name");
    extension=rep.getStepAttributeString(id_step,"file_extention");
    fileAppended=rep.getStepAttributeBoolean(id_step,"file_append");
    splitEvery=(int)rep.getStepAttributeInteger(id_step,"file_split");
    stepNrInFilename=rep.getStepAttributeBoolean(id_step,"file_add_stepnr");
    partNrInFilename=rep.getStepAttributeBoolean(id_step,"file_add_partnr");
    dateInFilename=rep.getStepAttributeBoolean(id_step,"file_add_date");
    timeInFilename=rep.getStepAttributeBoolean(id_step,"file_add_time");
    createparentfolder=rep.getStepAttributeBoolean(id_step,"create_parent_folder");
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
