{
  wClearLog=new Button(gDetails,SWT.CHECK);
  wClearLog.setText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.ClearLog.Label"));
  wClearLog.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.ClearLog.Tooltip"));
  props.setLook(wClearLog);
  FormData fdClearLog=new FormData();
  fdClearLog.top=new FormAttachment(0,10);
  fdClearLog.left=new FormAttachment(0,10);
  wClearLog.setLayoutData(fdClearLog);
  wSafeMode=new Button(gDetails,SWT.CHECK);
  wSafeMode.setText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.SafeMode.Label"));
  wSafeMode.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.SafeMode.Tooltip"));
  props.setLook(wSafeMode);
  FormData fdSafeMode=new FormData();
  fdSafeMode.top=new FormAttachment(wClearLog,7);
  fdSafeMode.left=new FormAttachment(0,10);
  wSafeMode.setLayoutData(fdSafeMode);
  wGatherMetrics=new Button(gDetails,SWT.CHECK);
  wGatherMetrics.setText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.GatherMetrics.Label"));
  wGatherMetrics.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.GatherMetrics.Tooltip"));
  props.setLook(wGatherMetrics);
  FormData fdGatherMetrics=new FormData();
  fdGatherMetrics.top=new FormAttachment(wSafeMode,7);
  fdGatherMetrics.left=new FormAttachment(0,10);
  fdGatherMetrics.bottom=new FormAttachment(100,-10);
  wGatherMetrics.setLayoutData(fdGatherMetrics);
  wlLogLevel=new Label(gDetails,SWT.RIGHT);
  wlLogLevel.setText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.LogLevel.Label"));
  wlLogLevel.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.LogLevel.Tooltip"));
  props.setLook(wlLogLevel);
  FormData fdlLogLevel=new FormData();
  fdlLogLevel.top=new FormAttachment(0,10);
  fdlLogLevel.left=new FormAttachment(45,0);
  wlLogLevel.setLayoutData(fdlLogLevel);
  wLogLevel=new CCombo(gDetails,SWT.READ_ONLY | SWT.BORDER);
  wLogLevel.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.LogLevel.Tooltip"));
  props.setLook(wLogLevel);
  FormData fdLogLevel=new FormData();
  fdLogLevel.top=new FormAttachment(wlLogLevel,-2,SWT.TOP);
  fdLogLevel.width=180;
  fdLogLevel.left=new FormAttachment(wlLogLevel,6);
  wLogLevel.setLayoutData(fdLogLevel);
  wLogLevel.setItems(LogLevel.getLogLevelDescriptions());
  Label lblStartJob=new Label(gDetails,SWT.RIGHT);
  lblStartJob.setText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.StartCopy.Label"));
  lblStartJob.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.StartCopy.Tooltip"));
  props.setLook(lblStartJob);
  FormData fd_lblStartJob=new FormData();
  fd_lblStartJob.top=new FormAttachment(wlLogLevel,18);
  fd_lblStartJob.right=new FormAttachment(wlLogLevel,0,SWT.RIGHT);
  lblStartJob.setLayoutData(fd_lblStartJob);
  wStartCopy=new CCombo(gDetails,SWT.READ_ONLY | SWT.BORDER);
  wStartCopy.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.StartCopy.Tooltip"));
  props.setLook(wStartCopy);
  FormData fd_startJobCombo=new FormData();
  fd_startJobCombo.top=new FormAttachment(lblStartJob,-2,SWT.TOP);
  fd_startJobCombo.width=180;
  fd_startJobCombo.left=new FormAttachment(lblStartJob,6);
  wStartCopy.setLayoutData(fd_startJobCombo);
  JobMeta jobMeta=(JobMeta)super.abstractMeta;
  String[] names=new String[jobMeta.getJobCopies().size()];
  for (int i=0; i < names.length; i++) {
    JobEntryCopy copy=jobMeta.getJobCopies().get(i);
    names[i]=getJobEntryCopyName(copy);
  }
  wStartCopy.setItems(names);
}
