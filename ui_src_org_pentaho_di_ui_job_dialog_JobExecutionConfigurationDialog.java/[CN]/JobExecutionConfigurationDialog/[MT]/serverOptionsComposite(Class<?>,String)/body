{
  wlRemoteHost=new Label(serverOptionsComposite,SWT.NONE);
  props.setLook(wlRemoteHost);
  wlRemoteHost.setText(BaseMessages.getString(PKG,prefix + ".RemoteHost.Label"));
  wlRemoteHost.setToolTipText(BaseMessages.getString(PKG,prefix + ".RemoteHost.Tooltip"));
  FormData fdlRemoteHost=new FormData();
  if (Const.isLinux()) {
    fdlRemoteHost.top=new FormAttachment(0,10);
  }
  if (Const.isOSX()) {
    fdlRemoteHost.top=new FormAttachment(0,10);
  }
  if (Const.isWindows()) {
    fdlRemoteHost.top=new FormAttachment(0,5);
  }
  fdlRemoteHost.left=new FormAttachment(environmentSeparator,5);
  wlRemoteHost.setLayoutData(fdlRemoteHost);
  wRemoteHost=new CCombo(serverOptionsComposite,SWT.BORDER);
  wRemoteHost.setToolTipText(BaseMessages.getString(PKG,prefix + ".RemoteHost.Tooltip"));
  props.setLook(wRemoteHost);
  FormData fdRemoteHost=new FormData();
  fdRemoteHost.left=new FormAttachment(wlRemoteHost,0,SWT.LEFT);
  fdRemoteHost.right=new FormAttachment(100,-293);
  if (Const.isLinux()) {
    fdRemoteHost.top=new FormAttachment(wlRemoteHost,8);
  }
  if (Const.isOSX()) {
    fdRemoteHost.top=new FormAttachment(wlRemoteHost,10);
  }
  if (Const.isWindows()) {
    fdRemoteHost.top=new FormAttachment(wlRemoteHost,5);
  }
  wRemoteHost.setLayoutData(fdRemoteHost);
  for (int i=0; i < abstractMeta.getSlaveServers().size(); i++) {
    SlaveServer slaveServer=abstractMeta.getSlaveServers().get(i);
    wRemoteHost.add(slaveServer.toString());
  }
  wPassExport=new Button(serverOptionsComposite,SWT.CHECK);
  wPassExport.setText(BaseMessages.getString(PKG,prefix + ".PassExport.Label"));
  wPassExport.setToolTipText(BaseMessages.getString(PKG,prefix + ".PassExport.Tooltip"));
  props.setLook(wPassExport);
  FormData fdPassExport=new FormData();
  fdPassExport.left=new FormAttachment(wRemoteHost,0,SWT.LEFT);
  if (Const.isLinux()) {
    fdPassExport.top=new FormAttachment(wRemoteHost,8);
  }
  if (Const.isOSX()) {
    fdPassExport.top=new FormAttachment(wRemoteHost,10);
  }
  if (Const.isWindows()) {
    fdPassExport.top=new FormAttachment(wRemoteHost,5);
  }
  wPassExport.setLayoutData(fdPassExport);
  wExpandRemote=new Button(serverOptionsComposite,SWT.CHECK);
  wExpandRemote.setText(BaseMessages.getString(PKG,prefix + ".ExpandRemote.Label"));
  wExpandRemote.setToolTipText(BaseMessages.getString(PKG,"JobExecutionConfigurationDialog.ExpandRemote.Tooltip"));
  props.setLook(wExpandRemote);
  FormData fd_expandCheckButton=new FormData();
  fd_expandCheckButton.bottom=new FormAttachment(wPassExport,0,SWT.BOTTOM);
  fd_expandCheckButton.left=new FormAttachment(wPassExport,45);
  wExpandRemote.setLayoutData(fd_expandCheckButton);
}
