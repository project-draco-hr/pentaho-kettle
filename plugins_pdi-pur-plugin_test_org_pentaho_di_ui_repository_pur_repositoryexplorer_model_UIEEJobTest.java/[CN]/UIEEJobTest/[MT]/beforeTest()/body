{
  mockObjectId=mock(ObjectId.class);
  when(mockObjectId.getId()).thenReturn(JOB_ID);
  mockEERepositoryObject=mock(EERepositoryObject.class);
  when(mockEERepositoryObject.getObjectId()).thenReturn(mockObjectId);
  mockParent=mock(UIRepositoryDirectory.class);
  mockLockService=mock(ILockService.class);
  mockRevisionService=mock(IRevisionService.class);
  mockAclService=mock(IAclService.class);
  mockRepository=mock(Repository.class);
  when(mockRepository.hasService(ILockService.class)).thenReturn(true);
  when(mockRepository.getService(ILockService.class)).thenReturn(mockLockService);
  when(mockRepository.hasService(IRevisionService.class)).thenReturn(true);
  when(mockRepository.getService(IRevisionService.class)).thenReturn(mockRevisionService);
  when(mockRepository.hasService(IAclService.class)).thenReturn(true);
  when(mockRepository.getService(IAclService.class)).thenReturn(mockAclService);
  uiJob=new UIEEJob(mockEERepositoryObject,mockParent,mockRepository);
  mockRepositoryLock=mock(RepositoryLock.class);
}
