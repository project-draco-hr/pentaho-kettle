{
  final String revisionName="revisionName";
  final String commitMessage="commitMessage";
  ObjectRevision mockObjectRevision=mock(ObjectRevision.class);
  when(mockObjectRevision.getName()).thenReturn(revisionName);
  List<ObjectRevision> mockRevisions=Arrays.asList(new ObjectRevision[]{mockObjectRevision});
  when(mockRevisionService.getRevisions(any(ObjectId.class))).thenReturn(mockRevisions);
  uiJob.refreshRevisions();
  verify(mockRevisionService,times(1)).getRevisions(mockObjectId);
  UIRepositoryObjectRevisions revisions=uiJob.getRevisions();
  assertEquals(1,revisions.size());
  assertEquals("revisionName",revisions.get(0).getName());
  verify(mockRevisionService,times(1)).getRevisions(mockObjectId);
  uiJob.restoreRevision(revisions.get(0),commitMessage);
  verify(mockRevisionService).restoreJob(mockObjectId,revisionName,commitMessage);
  verify(mockParent,times(1)).fireCollectionChanged();
}
