{
  Object[] row=new Object[data.outputRowMeta.size()];
  for (int i=0; i < inputRowMeta.size(); i++) {
    row[i]=inputRowData[i];
  }
  for (int i=0, index=inputRowMeta.size(); i < meta.getFieldName().length; i++, index++) {
    Calendar cal;
    int argnr=0;
switch (meta.getFieldType()[i]) {
case SystemDataMeta.TYPE_SYSTEM_INFO_SYSTEM_START:
      row[index]=getTrans().getCurrentDate();
    break;
case SystemDataMeta.TYPE_SYSTEM_INFO_SYSTEM_DATE:
  row[index]=new Date();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_TRANS_DATE_FROM:
row[index]=getTrans().getStartDate();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_TRANS_DATE_TO:
row[index]=getTrans().getEndDate();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_JOB_DATE_FROM:
row[index]=getTrans().getJobStartDate();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_JOB_DATE_TO:
row[index]=getTrans().getJobEndDate();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_PREV_DAY_START:
cal=Calendar.getInstance();
cal.add(Calendar.DAY_OF_MONTH,-1);
cal.set(Calendar.HOUR_OF_DAY,0);
cal.set(Calendar.MINUTE,0);
cal.set(Calendar.SECOND,0);
cal.set(Calendar.MILLISECOND,0);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_PREV_DAY_END:
cal=Calendar.getInstance();
cal.add(Calendar.DAY_OF_MONTH,-1);
cal.set(Calendar.HOUR_OF_DAY,23);
cal.set(Calendar.MINUTE,59);
cal.set(Calendar.SECOND,59);
cal.set(Calendar.MILLISECOND,999);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_THIS_DAY_START:
cal=Calendar.getInstance();
cal.set(Calendar.HOUR_OF_DAY,0);
cal.set(Calendar.MINUTE,0);
cal.set(Calendar.SECOND,0);
cal.set(Calendar.MILLISECOND,0);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_THIS_DAY_END:
cal=Calendar.getInstance();
cal.set(Calendar.HOUR_OF_DAY,23);
cal.set(Calendar.MINUTE,59);
cal.set(Calendar.SECOND,59);
cal.set(Calendar.MILLISECOND,999);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_NEXT_DAY_START:
cal=Calendar.getInstance();
cal.add(Calendar.DAY_OF_MONTH,1);
cal.set(Calendar.HOUR_OF_DAY,0);
cal.set(Calendar.MINUTE,0);
cal.set(Calendar.SECOND,0);
cal.set(Calendar.MILLISECOND,0);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_NEXT_DAY_END:
cal=Calendar.getInstance();
cal.add(Calendar.DAY_OF_MONTH,1);
cal.set(Calendar.HOUR_OF_DAY,23);
cal.set(Calendar.MINUTE,59);
cal.set(Calendar.SECOND,59);
cal.set(Calendar.MILLISECOND,999);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_PREV_MONTH_START:
cal=Calendar.getInstance();
cal.add(Calendar.MONTH,-1);
cal.set(Calendar.DAY_OF_MONTH,1);
cal.set(Calendar.HOUR_OF_DAY,0);
cal.set(Calendar.MINUTE,0);
cal.set(Calendar.SECOND,0);
cal.set(Calendar.MILLISECOND,0);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_PREV_MONTH_END:
cal=Calendar.getInstance();
cal.add(Calendar.MONTH,-1);
cal.set(Calendar.DAY_OF_MONTH,cal.getActualMaximum(Calendar.DAY_OF_MONTH));
cal.set(Calendar.HOUR_OF_DAY,23);
cal.set(Calendar.MINUTE,59);
cal.set(Calendar.SECOND,59);
cal.set(Calendar.MILLISECOND,999);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_THIS_MONTH_START:
cal=Calendar.getInstance();
cal.set(Calendar.DAY_OF_MONTH,1);
cal.set(Calendar.HOUR_OF_DAY,0);
cal.set(Calendar.MINUTE,0);
cal.set(Calendar.SECOND,0);
cal.set(Calendar.MILLISECOND,0);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_THIS_MONTH_END:
cal=Calendar.getInstance();
cal.set(Calendar.DAY_OF_MONTH,cal.getActualMaximum(Calendar.DAY_OF_MONTH));
cal.set(Calendar.HOUR_OF_DAY,23);
cal.set(Calendar.MINUTE,59);
cal.set(Calendar.SECOND,59);
cal.set(Calendar.MILLISECOND,999);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_NEXT_MONTH_START:
cal=Calendar.getInstance();
cal.add(Calendar.MONTH,1);
cal.set(Calendar.DAY_OF_MONTH,1);
cal.set(Calendar.HOUR_OF_DAY,0);
cal.set(Calendar.MINUTE,0);
cal.set(Calendar.SECOND,0);
cal.set(Calendar.MILLISECOND,0);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_NEXT_MONTH_END:
cal=Calendar.getInstance();
cal.add(Calendar.MONTH,1);
cal.set(Calendar.DAY_OF_MONTH,cal.getActualMaximum(Calendar.DAY_OF_MONTH));
cal.set(Calendar.HOUR_OF_DAY,23);
cal.set(Calendar.MINUTE,59);
cal.set(Calendar.SECOND,59);
cal.set(Calendar.MILLISECOND,999);
row[index]=cal.getTime();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_COPYNR:
row[index]=new Long(getCopy());
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_TRANS_NAME:
row[index]=getTransMeta().getName();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_MODIFIED_USER:
row[index]=getTransMeta().getModifiedUser();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_MODIFIED_DATE:
row[index]=getTransMeta().getModifiedDate();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_TRANS_BATCH_ID:
row[index]=new Long(getTrans().getBatchId());
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_JOB_BATCH_ID:
row[index]=new Long(getTrans().getPassedBatchId());
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_HOSTNAME:
row[index]=Const.getHostname();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_IP_ADDRESS:
row[index]=Const.getIPAddress();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_FILENAME:
row[index]=getTransMeta().getFilename();
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_01:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_02:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_03:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_04:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_05:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_06:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_07:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_08:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_09:
case SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_10:
argnr=meta.getFieldType()[i] - SystemDataMeta.TYPE_SYSTEM_INFO_ARGUMENT_01;
if (argnr < getTransMeta().getArguments().length) {
row[index]=getTransMeta().getArguments()[argnr];
}
 else {
row[index]=null;
}
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_KETTLE_VERSION:
row[index]=Const.VERSION;
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_KETTLE_BUILD_VERSION:
row[index]=new Long(BuildVersion.getInstance().getVersion());
break;
case SystemDataMeta.TYPE_SYSTEM_INFO_KETTLE_BUILD_DATE:
row[index]=BuildVersion.getInstance().getBuildDate();
break;
default :
break;
}
}
return row;
}
