{
  if (!super.init(smi,sdi)) {
    return false;
  }
  meta=(SalesforceStepMeta)smi;
  data=(SalesforceStepData)sdi;
  String realUrl=environmentSubstitute(meta.getTargetURL());
  String realUsername=environmentSubstitute(meta.getUsername());
  String realPassword=environmentSubstitute(meta.getPassword());
  String realModule=environmentSubstitute(meta.getModule());
  if (Utils.isEmpty(realUrl)) {
    log.logError(BaseMessages.getString(PKG,"SalesforceStep.TargetURLMissing.Error"));
    return false;
  }
  if (Utils.isEmpty(realUsername)) {
    log.logError(BaseMessages.getString(PKG,"SalesforceInput.UsernameMissing.Error"));
    return false;
  }
  if (Utils.isEmpty(realPassword)) {
    log.logError(BaseMessages.getString(PKG,"SalesforceInput.PasswordMissing.Error"));
    return false;
  }
  if (Utils.isEmpty(realModule)) {
    log.logError(BaseMessages.getString(PKG,"SalesforceInputDialog.ModuleMissing.DialogMessage"));
    return false;
  }
  try {
    data.connection=new SalesforceConnection(log,realUrl,realUsername,realPassword);
    data.connection.setModule(realModule);
    data.connection.setTimeOut(Const.toInt(environmentSubstitute(meta.getTimeout()),0));
    data.connection.setUsingCompression(meta.isCompression());
  }
 catch (  KettleException ke) {
    logError(BaseMessages.getString(PKG,"SalesforceInput.Log.ErrorOccurredDuringStepInitialize") + ke.getMessage());
    return false;
  }
  return true;
}
