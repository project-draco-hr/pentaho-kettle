{
  setId(rep.getClusterID(name));
  if (getId() < 0) {
    setId(rep.insertCluster(this));
  }
 else {
    rep.delClusterSlaves(getId());
  }
  for (int i=0; i < slaveServers.size(); i++) {
    SlaveServer slaveServer=slaveServers.get(i);
    if (slaveServer.getId() < 0) {
      slaveServer.saveRep(rep,id_transformation,isUsedByTransformation);
    }
    rep.insertClusterSlave(this,slaveServer);
  }
  if (isUsedByTransformation) {
    rep.insertTransformationCluster(id_transformation,getId());
  }
}
