{
  this();
  setId(id_cluster_schema);
  RowMetaAndData row=rep.getClusterSchema(id_cluster_schema);
  name=row.getString(Repository.FIELD_CLUSTER_NAME,null);
  basePort=row.getString(Repository.FIELD_CLUSTER_BASE_PORT,null);
  socketsBufferSize=row.getString(Repository.FIELD_CLUSTER_SOCKETS_BUFFER_SIZE,null);
  socketsFlushInterval=row.getString(Repository.FIELD_CLUSTER_SOCKETS_FLUSH_INTERVAL,null);
  socketsCompressed=row.getBoolean(Repository.FIELD_CLUSTER_SOCKETS_COMPRESSED,true);
  dynamic=row.getBoolean(Repository.FIELD_CLUSTER_DYNAMIC,true);
  long[] pids=rep.getSlaveIDs(id_cluster_schema);
  for (int i=0; i < pids.length; i++) {
    SlaveServer slaveServer=new SlaveServer(rep,pids[i]);
    SlaveServer reference=SlaveServer.findSlaveServer(slaveServers,slaveServer.getName());
    if (reference != null)     this.slaveServers.add(reference);
 else     this.slaveServers.add(slaveServer);
  }
}
