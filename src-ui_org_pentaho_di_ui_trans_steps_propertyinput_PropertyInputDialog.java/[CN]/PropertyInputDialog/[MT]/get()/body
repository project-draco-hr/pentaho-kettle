{
  RowMetaInterface fields=new RowMeta();
  try {
    PropertyInputMeta meta=new PropertyInputMeta();
    getInfo(meta);
    FileInputList inputList=meta.getFiles(transMeta);
    if (inputList.getFiles().size() > 0) {
      ValueMetaInterface field=new ValueMeta(PropertyInputField.getColumnDesc(0),ValueMetaInterface.TYPE_STRING);
      fields.addValueMeta(field);
      field=new ValueMeta(PropertyInputField.getColumnDesc(1),ValueMetaInterface.TYPE_STRING);
      fields.addValueMeta(field);
    }
  }
 catch (  Exception e) {
    new ErrorDialog(shell,Messages.getString("System.Dialog.Error.Title"),Messages.getString("PropertyInputDialog.ErrorReadingFile.DialogMessage",e.toString()),e);
  }
  if (fields.size() > 0) {
    wFields.removeAll();
    for (int j=0; j < fields.size(); j++) {
      ValueMetaInterface field=fields.getValueMeta(j);
      wFields.add(new String[]{field.getName(),field.getName(),field.getTypeDesc(),"","-1","","","","","none","N"});
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
    mb.setMessage(Messages.getString("PropertyInputDialog.UnableToFindFields.DialogTitle"));
    mb.setText(Messages.getString("PropertyInputDialog.UnableToFindFields.DialogMessage"));
    mb.open();
  }
}
