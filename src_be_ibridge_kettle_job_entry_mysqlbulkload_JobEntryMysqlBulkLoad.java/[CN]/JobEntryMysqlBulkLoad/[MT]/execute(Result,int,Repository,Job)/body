{
  String ReplaceIgnore;
  String IgnoreNbrLignes;
  String ListOfColumn="";
  String LocalExec="";
  LogWriter log=LogWriter.getInstance();
  Result result=new Result(nr);
  result.setResult(false);
  if (filename != null) {
    String realFilename=getRealFilename();
    File file=new File(realFilename);
    if ((file.exists() && file.canRead()) || isLocalInfile() == false) {
      log.logDetailed(toString(),"File [" + realFilename + "] exists.");
      if (connection != null) {
        Database db=new Database(connection);
        try {
          db.connect();
          String realTablename=StringUtil.environmentSubstitute(tablename);
          if (db.checkTableExists(realTablename)) {
            log.logDetailed(toString(),"Table [" + realTablename + "] exists.");
            if (isReplacedata()) {
              ReplaceIgnore="REPLACE";
            }
 else {
              ReplaceIgnore="IGNORE";
            }
            if (Const.toInt(getRealIgnorelines(),0) > 0) {
              IgnoreNbrLignes=" IGNORE " + getRealIgnorelines() + " LINES ";
            }
 else {
              IgnoreNbrLignes=" ";
            }
            if (getRealListattribut() != null) {
              ListOfColumn="(" + getRealListattribut() + ")";
            }
            if (isLocalInfile()) {
              LocalExec=" LOCAL ";
            }
            String SQLBULKLOAD="LOAD DATA " + LocalExec + " INFILE '"+ realFilename+ "' "+ ReplaceIgnore+ " INTO TABLE "+ realTablename+ " FIELDS TERMINATED BY  '"+ getRealSeparator()+ "' "+ IgnoreNbrLignes+ " "+ ListOfColumn+ ";";
            try {
              db.execStatements(SQLBULKLOAD);
              db.disconnect();
              result.setResult(true);
            }
 catch (            KettleDatabaseException je) {
              db.disconnect();
              result.setNrErrors(1);
              log.logError(toString(),"An error occurred executing this job entry : " + je.getMessage());
            }
          }
 else {
            db.disconnect();
            result.setNrErrors(1);
            log.logDetailed(toString(),"Table [" + realTablename + "] doesn't exist!");
          }
        }
 catch (        KettleDatabaseException dbe) {
          db.disconnect();
          result.setNrErrors(1);
          log.logError(toString(),"An error occurred executing this entry: " + dbe.getMessage());
        }
      }
 else {
        result.setNrErrors(1);
        log.logError(toString(),Messages.getString("JobMysqlBulkLoad.Nodatabase.Label"));
      }
    }
 else {
      result.setNrErrors(1);
      log.logDetailed(toString(),"File [" + realFilename + "] doesn't exist!");
    }
  }
 else {
    result.setNrErrors(1);
    log.logError(toString(),Messages.getString("JobMysqlBulkLoad.Nofilename.Label"));
  }
  return result;
}
