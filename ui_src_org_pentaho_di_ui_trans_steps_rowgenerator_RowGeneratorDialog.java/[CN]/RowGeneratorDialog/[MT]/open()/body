{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  Control lastControl=wStepname;
  wlLimit=new Label(shell,SWT.RIGHT);
  wlLimit.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.Limit.Label"));
  props.setLook(wlLimit);
  FormData fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,0);
  fdlLimit.right=new FormAttachment(middle,-margin);
  fdlLimit.top=new FormAttachment(lastControl,margin);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  FormData fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,0);
  fdLimit.top=new FormAttachment(lastControl,margin);
  fdLimit.right=new FormAttachment(100,0);
  wLimit.setLayoutData(fdLimit);
  lastControl=wLimit;
  wlNeverEnding=new Label(shell,SWT.RIGHT);
  wlNeverEnding.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.NeverEnding.Label"));
  props.setLook(wlNeverEnding);
  FormData fdlNeverEnding=new FormData();
  fdlNeverEnding.left=new FormAttachment(0,0);
  fdlNeverEnding.right=new FormAttachment(middle,-margin);
  fdlNeverEnding.top=new FormAttachment(lastControl,margin);
  wlNeverEnding.setLayoutData(fdlNeverEnding);
  wNeverEnding=new Button(shell,SWT.CHECK);
  props.setLook(wNeverEnding);
  wNeverEnding.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      setActive();
    }
  }
);
  FormData fdNeverEnding=new FormData();
  fdNeverEnding.left=new FormAttachment(middle,0);
  fdNeverEnding.top=new FormAttachment(lastControl,margin);
  fdNeverEnding.right=new FormAttachment(100,0);
  wNeverEnding.setLayoutData(fdNeverEnding);
  lastControl=wNeverEnding;
  wlInterval=new Label(shell,SWT.RIGHT);
  wlInterval.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.Interval.Label"));
  props.setLook(wlInterval);
  FormData fdlInterval=new FormData();
  fdlInterval.left=new FormAttachment(0,0);
  fdlInterval.right=new FormAttachment(middle,-margin);
  fdlInterval.top=new FormAttachment(lastControl,margin);
  wlInterval.setLayoutData(fdlInterval);
  wInterval=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInterval);
  wInterval.addModifyListener(lsMod);
  FormData fdInterval=new FormData();
  fdInterval.left=new FormAttachment(middle,0);
  fdInterval.top=new FormAttachment(lastControl,margin);
  fdInterval.right=new FormAttachment(100,0);
  wInterval.setLayoutData(fdInterval);
  lastControl=wInterval;
  wlRowTimeField=new Label(shell,SWT.RIGHT);
  wlRowTimeField.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.RowTimeField.Label"));
  props.setLook(wlRowTimeField);
  FormData fdlRowTimeField=new FormData();
  fdlRowTimeField.left=new FormAttachment(0,0);
  fdlRowTimeField.right=new FormAttachment(middle,-margin);
  fdlRowTimeField.top=new FormAttachment(lastControl,margin);
  wlRowTimeField.setLayoutData(fdlRowTimeField);
  wRowTimeField=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wRowTimeField);
  wRowTimeField.addModifyListener(lsMod);
  FormData fdRowTimeField=new FormData();
  fdRowTimeField.left=new FormAttachment(middle,0);
  fdRowTimeField.top=new FormAttachment(lastControl,margin);
  fdRowTimeField.right=new FormAttachment(100,0);
  wRowTimeField.setLayoutData(fdRowTimeField);
  lastControl=wRowTimeField;
  wlLastTimeField=new Label(shell,SWT.RIGHT);
  wlLastTimeField.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.LastTimeField.Label"));
  props.setLook(wlLastTimeField);
  FormData fdlLastTimeField=new FormData();
  fdlLastTimeField.left=new FormAttachment(0,0);
  fdlLastTimeField.right=new FormAttachment(middle,-margin);
  fdlLastTimeField.top=new FormAttachment(lastControl,margin);
  wlLastTimeField.setLayoutData(fdlLastTimeField);
  wLastTimeField=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLastTimeField);
  wLastTimeField.addModifyListener(lsMod);
  FormData fdLastTimeField=new FormData();
  fdLastTimeField.left=new FormAttachment(middle,0);
  fdLastTimeField.top=new FormAttachment(lastControl,margin);
  fdLastTimeField.right=new FormAttachment(100,0);
  wLastTimeField.setLayoutData(fdLastTimeField);
  lastControl=wLastTimeField;
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"RowGeneratorDialog.Fields.Label"));
  props.setLook(wlFields);
  FormData fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(lastControl,margin);
  wlFields.setLayoutData(fdlFields);
  lastControl=wlFields;
  final int FieldsRows=input.getFieldName().length;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Name"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Type"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes()),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Format"),ColumnInfo.COLUMN_TYPE_FORMAT,2),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Length"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Precision"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Currency"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Decimal"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Group"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.Value"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"System.Column.SetEmptyString"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{BaseMessages.getString(PKG,"System.Combo.Yes"),BaseMessages.getString(PKG,"System.Combo.No")})};
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  FormData fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(lastControl,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"System.Button.Preview"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,null);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wPreview.addListener(SWT.Selection,lsPreview);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wLimit.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
