{
  try {
    if (first) {
      first=false;
      if (!meta.isFileAppended() && (meta.isHeaderEnabled() || meta.isFooterEnabled())) {
        if (meta.isHeaderEnabled() && data.outputRowMeta != null) {
          if (writeHeader()) {
            return false;
          }
        }
      }
      data.fieldnrs=new int[meta.getOutputFields().length];
      for (int i=0; i < meta.getOutputFields().length; i++) {
        data.fieldnrs[i]=rowMeta.indexOfValue(meta.getOutputFields()[i].getName());
        if (data.fieldnrs[i] < 0) {
          logError("Field [" + meta.getOutputFields()[i].getName() + "] couldn't be found in the input stream!");
          setErrors(1);
          stopAll();
          return false;
        }
      }
    }
    if (meta.getOutputFields() == null || meta.getOutputFields().length == 0) {
      for (int i=0; i < rowMeta.size(); i++) {
        if (i > 0 && meta.getSeparator() != null && meta.getSeparator().length() > 0) {
          data.writer.write(meta.getSeparator().toCharArray());
        }
        ValueMetaInterface v=rowMeta.getValueMeta(i);
        Object valueData=r[i];
        if (!writeField(v,valueData,-1))         return false;
      }
      data.writer.write(meta.getNewline().toCharArray());
    }
 else {
      for (int i=0; i < meta.getOutputFields().length; i++) {
        if (i > 0 && meta.getSeparator() != null && meta.getSeparator().length() > 0)         data.writer.write(meta.getSeparator().toCharArray());
        ValueMetaInterface v=rowMeta.getValueMeta(data.fieldnrs[i]);
        Object valueData=r[i];
        if (!writeField(v,valueData,i))         return false;
      }
      data.writer.write(meta.getNewline().toCharArray());
    }
    linesOutput++;
  }
 catch (  Exception e) {
    logError("Error writing line :" + e.toString());
    return false;
  }
  return true;
}
