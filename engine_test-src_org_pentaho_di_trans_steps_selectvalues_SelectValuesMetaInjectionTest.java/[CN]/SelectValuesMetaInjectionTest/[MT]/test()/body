{
  check("SELECT_UNSPECIFIED",new BooleanGetter(){
    public boolean get(){
      return meta.isSelectingAndSortingUnspecifiedFields();
    }
  }
);
  check("FIELD_NAME",new StringGetter(){
    public String get(){
      return meta.getSelectName()[0];
    }
  }
);
  check("FIELD_RENAME",new StringGetter(){
    public String get(){
      return meta.getSelectRename()[0];
    }
  }
);
  check("FIELD_LENGTH",new IntGetter(){
    public int get(){
      return meta.getSelectLength()[0];
    }
  }
);
  check("FIELD_PRECISION",new IntGetter(){
    public int get(){
      return meta.getSelectPrecision()[0];
    }
  }
);
  check("REMOVE_NAME",new StringGetter(){
    public String get(){
      return meta.getDeleteName()[0];
    }
  }
);
  check("META_NAME",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getName();
    }
  }
);
  check("META_RENAME",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getRename();
    }
  }
);
  check("META_LENGTH",new IntGetter(){
    public int get(){
      return meta.getMeta()[0].getLength();
    }
  }
);
  check("META_PRECISION",new IntGetter(){
    public int get(){
      return meta.getMeta()[0].getPrecision();
    }
  }
);
  check("META_CONVERSION_MASK",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getConversionMask();
    }
  }
);
  check("META_DATE_FORMAT_LENIENT",new BooleanGetter(){
    public boolean get(){
      return meta.getMeta()[0].isDateFormatLenient();
    }
  }
);
  check("META_DATE_FORMAT_LOCALE",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getDateFormatLocale();
    }
  }
);
  check("META_DATE_FORMAT_TIMEZONE",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getDateFormatTimeZone();
    }
  }
);
  check("META_LENIENT_STRING_TO_NUMBER",new BooleanGetter(){
    public boolean get(){
      return meta.getMeta()[0].isLenientStringToNumber();
    }
  }
);
  check("META_DECIMAL",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getDecimalSymbol();
    }
  }
);
  check("META_GROUPING",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getGroupingSymbol();
    }
  }
);
  check("META_CURRENCY",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getCurrencySymbol();
    }
  }
);
  check("META_ENCODING",new StringGetter(){
    public String get(){
      return meta.getMeta()[0].getEncoding();
    }
  }
);
  ValueMetaInterface mftt=new ValueMetaString("f");
  injector.setProperty(meta,"META_STORAGE_TYPE",setValue(mftt,"normal"),"f");
  assertEquals(0,meta.getMeta()[0].getStorageType());
  injector.setProperty(meta,"META_STORAGE_TYPE",setValue(mftt,"binary-string"),"f");
  assertEquals(1,meta.getMeta()[0].getStorageType());
  injector.setProperty(meta,"META_STORAGE_TYPE",setValue(mftt,"indexed"),"f");
  assertEquals(2,meta.getMeta()[0].getStorageType());
  skipPropertyTest("META_STORAGE_TYPE");
  skipPropertyTest("META_TYPE");
}
