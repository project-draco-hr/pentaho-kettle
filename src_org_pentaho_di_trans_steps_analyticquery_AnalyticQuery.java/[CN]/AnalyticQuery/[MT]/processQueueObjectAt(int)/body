{
  int index=i - 1;
  Object[] rows=data.data.toArray();
  Object[] fields=new Object[meta.getNumberOfFields()];
  for (int j=0; j < meta.getNumberOfFields(); j++) {
    int field_index=data.inputRowMeta.indexOfValue(meta.getSubjectField()[j]);
    int row_index=0;
switch (meta.getAggregateType()[j]) {
case AnalyticQueryMeta.TYPE_FUNCT_LAG:
      row_index=index - meta.getValueField()[j];
    break;
case AnalyticQueryMeta.TYPE_FUNCT_LEAD:
  row_index=index + meta.getValueField()[j];
break;
default :
break;
}
if (row_index < rows.length && row_index >= 0) {
Object[] singleRow=(Object[])rows[row_index];
if (singleRow != null && singleRow[field_index] != null) {
fields[j]=((Object[])rows[row_index])[field_index];
}
 else {
fields[j]=null;
}
}
 else {
fields[j]=null;
}
}
Object[] newRow=RowDataUtil.addRowData((Object[])rows[index],data.inputRowMeta.size(),fields);
putRow(data.outputRowMeta,newRow);
}
