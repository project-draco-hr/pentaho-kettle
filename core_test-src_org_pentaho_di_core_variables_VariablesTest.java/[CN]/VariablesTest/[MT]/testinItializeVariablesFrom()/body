{
  final Variables variablesMock=mock(Variables.class);
  doCallRealMethod().when(variablesMock).initializeVariablesFrom(any(VariableSpace.class));
  @SuppressWarnings("unchecked") final Map<String,String> propertiesMock=mock(Map.class);
  when(variablesMock.getProperties()).thenReturn(propertiesMock);
  doAnswer(new Answer<Map<String,String>>(){
    final String keyStub="key";
    @Override public Map<String,String> answer(    InvocationOnMock invocation) throws Throwable {
      if (System.getProperty(keyStub) == null) {
        modifySystemproperties();
      }
      if (invocation.getArguments()[1] != null) {
        propertiesMock.put((String)invocation.getArguments()[0],System.getProperties().getProperty((String)invocation.getArguments()[1]));
      }
      return propertiesMock;
    }
  }
).when(propertiesMock).put(anyString(),anyString());
  variablesMock.initializeVariablesFrom(null);
}
