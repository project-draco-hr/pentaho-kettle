{
  super.saveRep(rep,metaStore,id_transformation,id_step);
  try {
    rep.saveStepAttribute(id_transformation,id_step,"condition",getCondition());
    rep.saveStepAttribute(id_transformation,id_step,"query",getQuery());
    rep.saveStepAttribute(id_transformation,id_step,"specifyQuery",isSpecifyQuery());
    rep.saveStepAttribute(id_transformation,id_step,"include_targeturl",includeTargetURL());
    rep.saveStepAttribute(id_transformation,id_step,"targeturl_field",getTargetURLField());
    rep.saveStepAttribute(id_transformation,id_step,"include_module",includeModule());
    rep.saveStepAttribute(id_transformation,id_step,"module_field",getModuleField());
    rep.saveStepAttribute(id_transformation,id_step,"include_rownum",includeRowNumber());
    rep.saveStepAttribute(id_transformation,id_step,"include_deletion_date",includeDeletionDate());
    rep.saveStepAttribute(id_transformation,id_step,"include_sql",includeSQL());
    rep.saveStepAttribute(id_transformation,id_step,"sql_field",getSQLField());
    rep.saveStepAttribute(id_transformation,id_step,"include_Timestamp",includeTimestamp());
    rep.saveStepAttribute(id_transformation,id_step,"timestamp_field",getTimestampField());
    rep.saveStepAttribute(id_transformation,id_step,"rownum_field",getRowNumberField());
    rep.saveStepAttribute(id_transformation,id_step,"deletion_date_field",getDeletionDateField());
    rep.saveStepAttribute(id_transformation,id_step,"limit",getRowLimit());
    rep.saveStepAttribute(id_transformation,id_step,"read_from",getReadFrom());
    rep.saveStepAttribute(id_transformation,id_step,"read_to",getReadTo());
    rep.saveStepAttribute(id_transformation,id_step,"records_filter",SalesforceConnectionUtils.getRecordsFilterCode(getRecordsFilter()));
    rep.saveStepAttribute(id_transformation,id_step,"queryAll",isQueryAll());
    for (int i=0; i < inputFields.length; i++) {
      SalesforceInputField field=inputFields[i];
      field.saveRep(rep,metaStore,id_transformation,id_step,i);
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceInputMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
