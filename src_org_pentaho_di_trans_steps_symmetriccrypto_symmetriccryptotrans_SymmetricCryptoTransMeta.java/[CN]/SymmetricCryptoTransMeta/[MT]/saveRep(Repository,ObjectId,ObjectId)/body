{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"operation_type",getOperationTypeCode(operationType));
    rep.saveStepAttribute(id_transformation,id_step,"algorithm",algorithm);
    rep.saveStepAttribute(id_transformation,id_step,"schema",schema);
    rep.saveStepAttribute(id_transformation,id_step,"secretKeyField",secretKeyField);
    rep.saveStepAttribute(id_transformation,id_step,"messageField",messageField);
    rep.saveStepAttribute(id_transformation,id_step,"resultfieldname",resultfieldname);
    rep.saveStepAttribute(id_transformation,id_step,"secretKey",Encr.encryptPasswordIfNotUsingVariables(secretKey));
    rep.saveStepAttribute(id_transformation,id_step,"secretKeyInField",secretKeyInField);
    rep.saveStepAttribute(id_transformation,id_step,"readKeyAsBinary",readKeyAsBinary);
    rep.saveStepAttribute(id_transformation,id_step,"outputResultAsBinary",outputResultAsBinary);
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SymmetricCryptoTransMeta.Exception.UnableToSaveStepInfo") + id_step,e);
  }
}
