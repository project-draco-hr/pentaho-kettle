{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  FocusListener lsFocusLost=new FocusAdapter(){
    public void focusLost(    FocusEvent arg0){
      setComboBoxesLookup();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("StreamLookupDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("StreamLookupDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlStep=new Label(shell,SWT.RIGHT);
  wlStep.setText(Messages.getString("StreamLookupDialog.LookupStep.Label"));
  props.setLook(wlStep);
  fdlStep=new FormData();
  fdlStep.left=new FormAttachment(0,0);
  fdlStep.right=new FormAttachment(middle,-margin);
  fdlStep.top=new FormAttachment(wStepname,margin * 2);
  wlStep.setLayoutData(fdlStep);
  wStep=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wStep);
  for (int i=0; i < transMeta.findNrPrevSteps(stepname,true); i++) {
    StepMeta stepMeta=transMeta.findPrevStep(stepname,i,true);
    wStep.add(stepMeta.getName());
  }
  wStep.addModifyListener(lsMod);
  wStep.addFocusListener(lsFocusLost);
  fdStep=new FormData();
  fdStep.left=new FormAttachment(middle,0);
  fdStep.top=new FormAttachment(wStepname,margin * 2);
  fdStep.right=new FormAttachment(100,0);
  wStep.setLayoutData(fdStep);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText(Messages.getString("StreamLookupDialog.Key.Label"));
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wStep,margin);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=2;
  int nrKeyRows=(input.getKeystream() != null ? input.getKeystream().length : 1);
  ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo(Messages.getString("StreamLookupDialog.ColumnInfo.Field"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[1]=new ColumnInfo(Messages.getString("StreamLookupDialog.ColumnInfo.LookupField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  wKey=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(100,0);
  fdKey.bottom=new FormAttachment(wlKey,180);
  wKey.setLayoutData(fdKey);
  wlReturn=new Label(shell,SWT.NONE);
  wlReturn.setText(Messages.getString("StreamLookupDialog.ReturnFields.Label"));
  props.setLook(wlReturn);
  fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(wKey,margin);
  wlReturn.setLayoutData(fdlReturn);
  int UpInsCols=4;
  int UpInsRows=(input.getValue() != null ? input.getValue().length : 1);
  ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo(Messages.getString("StreamLookupDialog.ColumnInfo.FieldReturn"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciReturn[1]=new ColumnInfo(Messages.getString("StreamLookupDialog.ColumnInfo.NewName"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[2]=new ColumnInfo(Messages.getString("StreamLookupDialog.ColumnInfo.Default"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[3]=new ColumnInfo(Messages.getString("StreamLookupDialog.ColumnInfo.Type"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes());
  wReturn=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlReturn,margin);
  fdReturn.right=new FormAttachment(100,0);
  fdReturn.bottom=new FormAttachment(100,-125);
  wReturn.setLayoutData(fdReturn);
  wlPreserveMemory=new Label(shell,SWT.RIGHT);
  wlPreserveMemory.setText(Messages.getString("StreamLookupDialog.PreserveMemory.Label"));
  props.setLook(wlPreserveMemory);
  fdlPreserveMemory=new FormData();
  fdlPreserveMemory.left=new FormAttachment(0,0);
  fdlPreserveMemory.top=new FormAttachment(wReturn,margin);
  fdlPreserveMemory.right=new FormAttachment(middle,-margin);
  wlPreserveMemory.setLayoutData(fdlPreserveMemory);
  wPreserveMemory=new Button(shell,SWT.CHECK);
  props.setLook(wPreserveMemory);
  fdPreserveMemory=new FormData();
  fdPreserveMemory.left=new FormAttachment(middle,0);
  fdPreserveMemory.top=new FormAttachment(wReturn,margin);
  fdPreserveMemory.right=new FormAttachment(100,0);
  wPreserveMemory.setLayoutData(fdPreserveMemory);
  wPreserveMemory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlIntegerPair=new Label(shell,SWT.RIGHT);
  wlIntegerPair.setText(Messages.getString("StreamLookupDialog.IntegerPair.Label"));
  props.setLook(wlIntegerPair);
  fdlIntegerPair=new FormData();
  fdlIntegerPair.left=new FormAttachment(0,0);
  fdlIntegerPair.top=new FormAttachment(wPreserveMemory,margin);
  fdlIntegerPair.right=new FormAttachment(middle,-margin);
  wlIntegerPair.setLayoutData(fdlIntegerPair);
  wIntegerPair=new Button(shell,SWT.CHECK);
  props.setLook(wIntegerPair);
  fdIntegerPair=new FormData();
  fdIntegerPair.left=new FormAttachment(middle,0);
  fdIntegerPair.top=new FormAttachment(wPreserveMemory,margin);
  fdIntegerPair.right=new FormAttachment(100,0);
  wIntegerPair.setLayoutData(fdIntegerPair);
  wIntegerPair.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlSortedList=new Label(shell,SWT.RIGHT);
  wlSortedList.setText(Messages.getString("StreamLookupDialog.SortedList.Label"));
  props.setLook(wlSortedList);
  fdlSortedList=new FormData();
  fdlSortedList.left=new FormAttachment(0,0);
  fdlSortedList.top=new FormAttachment(wIntegerPair,margin);
  fdlSortedList.right=new FormAttachment(middle,-margin);
  wlSortedList.setLayoutData(fdlSortedList);
  wSortedList=new Button(shell,SWT.CHECK);
  props.setLook(wSortedList);
  fdSortedList=new FormData();
  fdSortedList.left=new FormAttachment(middle,0);
  fdSortedList.top=new FormAttachment(wIntegerPair,margin);
  fdSortedList.right=new FormAttachment(100,0);
  wSortedList.setLayoutData(fdSortedList);
  wSortedList.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(Messages.getString("StreamLookupDialog.GetFields.Button"));
  wGetLU=new Button(shell,SWT.PUSH);
  wGetLU.setText(Messages.getString("StreamLookupDialog.GetLookupFields.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wGet,wGetLU},margin,null);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getlookup();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  lookupStep=wStep.getText();
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta lookupStepMeta=transMeta.findStep(lookupStep);
      if (lookupStepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getStepFields(lookupStepMeta);
          for (int i=0; i < row.size(); i++) {
            lookupFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxesLookup();
        }
 catch (        KettleException e) {
          log.logError(toString(),"It was not possible to retrieve the list of fields for step [" + lookupStep + "]!");
        }
      }
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            prevFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          log.logError(toString(),Messages.getString("System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
