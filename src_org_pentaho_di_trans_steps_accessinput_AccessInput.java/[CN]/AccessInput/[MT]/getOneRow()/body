{
  try {
    if (meta.isFileField()) {
      while ((data.readrow == null || ((data.rw=data.t.getNextRow()) == null))) {
        if (!openNextFile())         return null;
      }
    }
 else {
      while ((data.file == null || ((data.rw=data.t.getNextRow()) == null))) {
        if (!openNextFile())         return null;
      }
    }
  }
 catch (  Exception IO) {
    return null;
  }
  Object[] r=buildEmptyRow();
  if (meta.isFileField())   System.arraycopy(data.readrow,0,r,0,data.readrow.length);
  try {
    for (int i=0; i < meta.getInputFields().length; i++) {
      AccessInputField field=meta.getInputFields()[i];
      Object obj=data.rw.get(field.getColumn());
      String value;
      if (obj == null) {
        value=null;
      }
 else {
        value=String.valueOf(obj);
      }
      if (obj instanceof Date && field.getType() == ValueMetaInterface.TYPE_DATE) {
        r[data.totalpreviousfields + i]=obj;
      }
 else {
switch (field.getTrimType()) {
case AccessInputField.TYPE_TRIM_LEFT:
          value=Const.ltrim(value);
        break;
case AccessInputField.TYPE_TRIM_RIGHT:
      value=Const.rtrim(value);
    break;
case AccessInputField.TYPE_TRIM_BOTH:
  value=Const.trim(value);
break;
default :
break;
}
ValueMetaInterface targetValueMeta=data.outputRowMeta.getValueMeta(data.totalpreviousfields + i);
ValueMetaInterface sourceValueMeta=data.convertRowMeta.getValueMeta(data.totalpreviousfields + i);
r[data.totalpreviousfields + i]=targetValueMeta.convertData(sourceValueMeta,value);
}
if (field.isRepeated()) {
if (data.previousRow != null && Const.isEmpty(value)) {
r[data.totalpreviousfields + i]=data.previousRow[data.totalpreviousfields + i];
}
}
}
int rowIndex=meta.getInputFields().length;
if (meta.includeFilename() && !Const.isEmpty(meta.getFilenameField())) {
r[data.totalpreviousfields + rowIndex++]=AccessInputMeta.getFilename(data.file);
}
if (meta.includeTablename() && !Const.isEmpty(data.t.getName())) {
r[data.totalpreviousfields + rowIndex++]=data.t.getName();
}
if (meta.includeRowNumber() && !Const.isEmpty(meta.getRowNumberField())) {
r[data.totalpreviousfields + rowIndex++]=new Long(data.rownr);
}
RowMetaInterface irow=getInputRowMeta();
data.previousRow=irow == null ? r : (Object[])irow.cloneRow(r);
incrementLinesInput();
data.rownr++;
}
 catch (Exception e) {
throw new KettleException(Messages.getString("AccessInput.Error.ErrorReadingFile"),e);
}
return r;
}
