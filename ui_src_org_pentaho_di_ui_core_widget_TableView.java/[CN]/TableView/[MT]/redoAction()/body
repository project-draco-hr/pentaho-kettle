{
  TransAction ta=nextUndo();
  if (ta == null) {
    return;
  }
  int rownr=getCurrentRownr();
  setUndoMenu();
switch (ta.getType()) {
case TransAction.TYPE_ACTION_NEW_TABLEITEM:
{
      int[] idx=ta.getCurrentIndex();
      String[][] str=(String[][])ta.getCurrent();
      for (int i=0; i < idx.length; i++) {
        addItem(idx[i],str[i]);
        if (idx[i] <= rownr) {
          rownr++;
        }
      }
      setRowNums();
    }
  break;
case TransAction.TYPE_ACTION_DELETE_TABLEITEM:
{
  int[] idx=ta.getCurrentIndex();
  table.remove(idx);
  for (int i=0; i < idx.length; i++) {
    if (idx[i] < rownr) {
      rownr--;
    }
  }
  if (table.getItemCount() == 0) {
    undoAction();
  }
  setRowNums();
}
break;
case TransAction.TYPE_ACTION_CHANGE_TABLEITEM:
{
int[] idx=ta.getCurrentIndex();
String[][] curr=(String[][])ta.getCurrent();
for (int x=0; x < idx.length; x++) {
TableItem item=table.getItem(idx[x]);
for (int i=0; i < curr[x].length; i++) {
  item.setText(i + 1,curr[x][i]);
}
}
}
break;
case TransAction.TYPE_ACTION_POSITION_TABLEITEM:
{
int[] curr=ta.getCurrentIndex();
int[] prev=ta.getPreviousIndex();
for (int i=0; i < curr.length; i++) {
moveRow(curr[i],prev[i]);
}
setRowNums();
}
break;
default :
break;
}
if (rownr >= table.getItemCount()) {
rownr=table.getItemCount() - 1;
}
if (rownr < 0) {
rownr=0;
}
selectRows(rownr,rownr);
}
