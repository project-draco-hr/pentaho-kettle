{
  assertEquals("FOO date",nativeMeta.getFieldDefinition(new ValueMetaDate("FOO"),null,null,false,true,false));
  assertEquals("boolean",nativeMeta.getFieldDefinition(new ValueMetaBoolean("FOO"),null,null,false,false,false));
  assertEquals("",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",0,0),null,null,false,false,false));
  assertEquals("byteint",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",1,0),null,null,false,false,false));
  assertEquals("byteint",nativeMeta.getFieldDefinition(new ValueMetaBigNumber("FOO",2,0),null,null,false,false,false));
  assertEquals("smallint",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",3,0),null,null,false,false,false));
  assertEquals("smallint",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",4,0),null,null,false,false,false));
  for (int i=5; i < 10; i++) {
    assertEquals("integer",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",i,0),null,null,false,false,false));
  }
  assertEquals("bigint",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",10,0),null,null,false,false,false));
  assertEquals("",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",-22,3),null,null,false,false,false));
  assertEquals("",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",0,3),null,null,false,false,false));
  assertEquals("real",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",1,3),null,null,false,false,false));
  assertEquals("real",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",2,3),null,null,false,false,false));
  for (int i=3; i < 9; i++) {
    assertEquals("real",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",i,3),null,null,false,false,false));
  }
  for (int i=10; i < 18; i++) {
    assertEquals("double",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",i,3),null,null,false,false,false));
  }
  assertEquals("numeric(18, 3)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",18,3),null,null,false,false,false));
  assertEquals("numeric(19)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",19,-12),null,null,false,false,false));
  assertEquals("varchar(32767)",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",(NetezzaDatabaseMeta.MAX_CHAR_LEN + 2),0),null,null,false,false,false));
  assertEquals("varchar(10)",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",10,0),null,null,false,false,false));
  assertEquals(" UNKNOWN",nativeMeta.getFieldDefinition(new ValueMetaBinary("FOO",10,0),null,null,false,false,false));
  String lineSep=System.getProperty("line.separator");
  assertEquals(" UNKNOWN" + lineSep,nativeMeta.getFieldDefinition(new ValueMetaBinary("FOO",10,0),null,null,false,false,true));
}
