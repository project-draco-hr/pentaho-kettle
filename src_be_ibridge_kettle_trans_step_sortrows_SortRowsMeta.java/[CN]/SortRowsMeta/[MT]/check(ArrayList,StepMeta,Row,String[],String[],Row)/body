{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SortRowsMeta.CheckResult.FieldsReceived","" + prev.size()),stepMeta);
    remarks.add(cr);
    String error_message="";
    boolean error_found=false;
    for (int i=0; i < fieldName.length; i++) {
      int idx=prev.searchValueIndex(fieldName[i]);
      if (idx < 0) {
        error_message+="\t\t" + fieldName[i] + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message=Messages.getString("SortRowsMeta.CheckResult.SortKeysNotFound",error_message);
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      if (fieldName.length > 0) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SortRowsMeta.CheckResult.AllSortKeysFound"),stepMeta);
        remarks.add(cr);
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("SortRowsMeta.CheckResult.NoSortKeysEntered"),stepMeta);
        remarks.add(cr);
      }
    }
    File f=new File(Const.replEnv(directory));
    if (f.exists()) {
      if (f.isDirectory()) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("SortRowsMeta.CheckResult.DirectoryExists",directory),stepMeta);
        remarks.add(cr);
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("SortRowsMeta.CheckResult.ExistsButNoDirectory",directory),stepMeta);
        remarks.add(cr);
      }
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("SortRowsMeta.CheckResult.DirectoryNotExists",directory),stepMeta);
      remarks.add(cr);
    }
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("SortRowsMeta.CheckResult.NoFields"),stepMeta);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("XMLOutputMeta.CheckResult.ExpectedInputOk"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("XMLOutputMeta.CheckResult.ExpectedInputError"),stepMeta);
    remarks.add(cr);
  }
}
