{
  connectDropdown=new ToolItem(toolBar,SWT.DROP_DOWN,toolBar.getItems().length);
  connectDropdown.setText(BaseMessages.getString(PKG,"RepositoryConnectMenu.Connect"));
  connectDropdown.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent event){
      final Menu connectionMenu=new Menu(toolBar.getShell());
      if (repositoriesMeta != null) {
        for (int i=0; i < repositoriesMeta.nrRepositories(); i++) {
          MenuItem item=new MenuItem(connectionMenu,SWT.CHECK);
          if (spoon.rep != null && spoon.rep.getName().equals(repositoriesMeta.getRepository(i).getName())) {
            item.setSelection(true);
          }
          item.setText(repositoriesMeta.getRepository(i).getName());
          item.addSelectionListener(new SelectionAdapter(){
            @Override public void widgetSelected(            SelectionEvent selectionEvent){
              String repoName=((MenuItem)selectionEvent.widget).getText();
              RepositoryMeta repositoryMeta=repositoriesMeta.findRepository(repoName);
              if (repositoryMeta != null) {
                if (repositoryMeta.getId().equals("KettleFileRepository")) {
                  repoConnectController.connectToRepository(repositoryMeta);
                }
 else {
                  new RepositoryDialog(spoon.getShell(),repoConnectController).openLogin(repositoryMeta);
                }
                renderAndUpdate();
              }
            }
          }
);
        }
      }
      new MenuItem(connectionMenu,SWT.SEPARATOR);
      MenuItem managerItem=new MenuItem(connectionMenu,SWT.NONE);
      managerItem.setText(BaseMessages.getString(PKG,"RepositoryConnectMenu.RepositoryManager"));
      managerItem.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent selectionEvent){
          new RepositoryDialog(spoon.getShell(),repoConnectController).openManager();
          renderAndUpdate();
        }
      }
);
      new MenuItem(connectionMenu,SWT.SEPARATOR);
      MenuItem disconnectItem=new MenuItem(connectionMenu,SWT.NONE);
      disconnectItem.setEnabled(spoon.rep != null);
      disconnectItem.setText(BaseMessages.getString(PKG,"RepositoryConnectMenu.Disconnect"));
      disconnectItem.addSelectionListener(new SelectionAdapter(){
        @Override public void widgetSelected(        SelectionEvent selectionEvent){
          spoon.closeRepository();
          renderAndUpdate();
        }
      }
);
      ToolItem item=(ToolItem)event.widget;
      Rectangle rect=item.getBounds();
      org.eclipse.swt.graphics.Point pt=item.getParent().toDisplay(new org.eclipse.swt.graphics.Point(rect.x,rect.y + rect.height));
      connectionMenu.setLocation(pt.x,pt.y);
      connectionMenu.setVisible(true);
    }
  }
);
}
