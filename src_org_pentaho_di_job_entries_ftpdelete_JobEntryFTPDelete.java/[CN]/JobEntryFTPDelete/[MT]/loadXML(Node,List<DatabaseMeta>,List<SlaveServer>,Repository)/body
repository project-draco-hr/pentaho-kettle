{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    protocol=XMLHandler.getTagValue(entrynode,"protocol");
    port=XMLHandler.getTagValue(entrynode,"port");
    serverName=XMLHandler.getTagValue(entrynode,"servername");
    userName=XMLHandler.getTagValue(entrynode,"username");
    password=XMLHandler.getTagValue(entrynode,"password");
    ftpDirectory=XMLHandler.getTagValue(entrynode,"ftpdirectory");
    wildcard=XMLHandler.getTagValue(entrynode,"wildcard");
    timeout=Const.toInt(XMLHandler.getTagValue(entrynode,"timeout"),10000);
    activeConnection="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"active"));
    useproxy="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"useproxy"));
    proxyHost=XMLHandler.getTagValue(entrynode,"proxy_host");
    proxyPort=XMLHandler.getTagValue(entrynode,"proxy_port");
    proxyUsername=XMLHandler.getTagValue(entrynode,"proxy_username");
    proxyPassword=XMLHandler.getTagValue(entrynode,"proxy_password");
    publicpublickey="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"publicpublickey"));
    keyFilename=XMLHandler.getTagValue(entrynode,"keyfilename");
    keyFilePass=XMLHandler.getTagValue(entrynode,"keyfilepass");
    nr_limit_success=XMLHandler.getTagValue(entrynode,"nr_limit_success");
    success_condition=XMLHandler.getTagValue(entrynode,"success_condition");
    copyprevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"copyprevious"));
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException("Unable to load job entry of type 'ftp' from XML node",xe);
  }
}
