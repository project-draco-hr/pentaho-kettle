{
  try {
    rep.saveJobEntryAttribute(id_job,getObjectId(),"protocol",protocol);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"port",port);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"servername",serverName);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"username",userName);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"ftpdirectory",ftpDirectory);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"wildcard",wildcard);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"timeout",timeout);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"active",activeConnection);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"copyprevious",copyprevious);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"useproxy",useproxy);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"publicpublickey",publicpublickey);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"keyfilename",keyFilename);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"keyfilepass",keyFilePass);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxy_host",proxyHost);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxy_port",proxyPort);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxy_username",proxyUsername);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"proxy_password",Encr.encryptPasswordIfNotUsingVariables(proxyPassword));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"nr_limit_success",nr_limit_success);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"success_condition",success_condition);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"ftps_connection_type",FTPSConnection.getConnectionType(FTPSConnectionType));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"socksproxy_host",socksProxyHost);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"socksproxy_port",socksProxyPort);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"socksproxy_username",socksProxyUsername);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"socksproxy_password",Encr.encryptPasswordIfNotUsingVariables(socksProxyPassword));
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException("Unable to save job entry of type 'ftp' to the repository for id_job=" + id_job,dbe);
  }
}
