{
  TransMeta slave=getSlaveTransformation(clusterSchema,slaveServer);
  StepPartitioningMeta partitioningMeta=stepMeta.getStepPartitioningMeta();
  if (partitioningMeta != null && partitioningMeta.getMethod() != StepPartitioningMeta.PARTITIONING_METHOD_NONE && partitioningMeta.getPartitionSchema() != null) {
    Map schemaPartitionsMap=(Map)slaveServerPartitionsMap.get(slaveServer);
    if (schemaPartitionsMap != null) {
      PartitionSchema partitionSchema=partitioningMeta.getPartitionSchema();
      List partitionsList=(List)schemaPartitionsMap.get(partitionSchema.getName());
      if (partitionsList != null) {
        String partIds[]=(String[])partitionsList.toArray(new String[partitionsList.size()]);
        String targetSchemaName=partitionSchema.getName() + " (slave)";
        PartitionSchema targetSchema=slave.findPartitionSchema(targetSchemaName);
        if (targetSchema == null) {
          targetSchema=new PartitionSchema(targetSchemaName,partIds);
          slave.getPartitionSchemas().add(targetSchema);
        }
        StepPartitioningMeta targetPartitioningMeta=new StepPartitioningMeta(partitioningMeta.getMethod(),partitioningMeta.getFieldName(),targetSchema);
        stepMeta.setStepPartitioningMeta(targetPartitioningMeta);
      }
    }
  }
}
