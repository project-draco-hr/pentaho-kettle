{
  StepMetaInterface fsii=fs.getStepMetaInterface();
  StepMetaInterface tsii=ts.getStepMetaInterface();
  int line[]=getLine(fs,ts);
  Color col;
  int linestyle=SWT.LINE_SOLID;
  int activeLinewidth=linewidth;
  if (is_candidate) {
    col=blue;
  }
 else {
    if (hi.isEnabled()) {
      String[] targetSteps=fsii.getTargetSteps();
      String[] infoSteps=tsii.getInfoSteps();
      if (fs.isSendingErrorRowsToStep(ts)) {
        col=red;
        linestyle=SWT.LINE_DOT;
        activeLinewidth=linewidth + 2;
      }
 else {
        if (targetSteps == null) {
          boolean distributes=fs.isDistributes();
          if (ts.getStepPartitioningMeta().isMethodMirror())           distributes=false;
          if (Const.indexOfString(fs.getName(),infoSteps) >= 0) {
            if (distributes)             col=yellow;
 else             col=magenta;
          }
 else {
            if (distributes)             col=green;
 else             col=red;
          }
        }
 else {
          if (Const.indexOfString(ts.getName(),fsii.getTargetSteps()) >= 0) {
            col=black;
          }
 else {
            linestyle=SWT.LINE_DOT;
            col=orange;
          }
        }
      }
    }
 else {
      col=gray;
    }
  }
  if (hi.split)   activeLinewidth=linewidth + 2;
  gc.setForeground(col);
  gc.setLineStyle(linestyle);
  gc.setLineWidth(activeLinewidth);
  drawArrow(gc,line);
  if (hi.split)   gc.setLineWidth(linewidth);
  gc.setForeground(black);
  gc.setBackground(background);
  gc.setLineStyle(SWT.LINE_SOLID);
}
