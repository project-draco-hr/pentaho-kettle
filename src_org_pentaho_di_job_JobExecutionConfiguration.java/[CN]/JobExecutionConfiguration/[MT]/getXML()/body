{
  StringBuffer xml=new StringBuffer(160);
  xml.append("  <" + XML_TAG + ">").append(Const.CR);
  xml.append("    ").append(XMLHandler.addTagValue("exec_local",executingLocally));
  xml.append("    ").append(XMLHandler.addTagValue("exec_remote",executingRemotely));
  if (remoteServer != null) {
    xml.append("    ").append(remoteServer.getXML()).append(Const.CR);
  }
  xml.append("    <variables>").append(Const.CR);
  List<String> variableNames=new ArrayList<String>(variables.keySet());
  Collections.sort(variableNames);
  for (  String name : variableNames) {
    String value=variables.get(name);
    xml.append("    <variable>");
    xml.append(XMLHandler.addTagValue("name",name,false));
    xml.append(XMLHandler.addTagValue("value",value,false));
    xml.append("</variable>").append(Const.CR);
  }
  xml.append("    </variables>").append(Const.CR);
  xml.append("    <arguments>").append(Const.CR);
  List<String> argumentNames=new ArrayList<String>(arguments.keySet());
  Collections.sort(argumentNames);
  for (  String name : argumentNames) {
    String value=arguments.get(name);
    xml.append("    <argument>");
    xml.append(XMLHandler.addTagValue("name",name,false));
    xml.append(XMLHandler.addTagValue("value",value,false));
    xml.append("</argument>").append(Const.CR);
  }
  xml.append("    </arguments>").append(Const.CR);
  xml.append("    ").append(XMLHandler.addTagValue("replay_date",replayDate));
  xml.append("    ").append(XMLHandler.addTagValue("safe_mode",safeModeEnabled));
  xml.append("    ").append(XMLHandler.addTagValue("log_level",LogWriter.getLogLevelDesc(logLevel)));
  if (sourceRows.size() > 0) {
    xml.append("    <source_rows>").append(Const.CR);
    xml.append(sourceRows.get(0).getRowMeta().getMetaXML()).append(Const.CR);
    for (    RowMetaAndData row : sourceRows) {
      xml.append(row.getRowMeta().getDataXML(row.getData())).append(Const.CR);
    }
    xml.append("    </source_rows>").append(Const.CR);
  }
  xml.append("</" + XML_TAG + ">").append(Const.CR);
  return xml.toString();
}
