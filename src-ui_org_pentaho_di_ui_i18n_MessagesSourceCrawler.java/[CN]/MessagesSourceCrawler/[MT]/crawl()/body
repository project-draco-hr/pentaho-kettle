{
  String[] dirs=new String[sourceDirectories.size()];
  String[] masks=new String[sourceDirectories.size()];
  String[] req=new String[sourceDirectories.size()];
  boolean[] subdirs=new boolean[sourceDirectories.size()];
  for (int i=0; i < masks.length; i++) {
    dirs[i]=sourceDirectories.get(i);
    masks[i]=".*\\.java$";
    req[i]="N";
    subdirs[i]=true;
  }
  FileInputList fileInputList=FileInputList.createFileList(new Variables(),dirs,masks,req,subdirs);
  for (  FileObject fileObject : new ArrayList<FileObject>(fileInputList.getFiles())) {
    for (    String filename : filesToAvoid) {
      if (fileObject.getName().getBaseName().equals(filename)) {
        fileInputList.getFiles().remove(fileObject);
      }
    }
  }
  for (  FileObject fileObject : fileInputList.getFiles()) {
    lookForOccurrencesInFile(fileObject);
  }
  String[] xulMasks=new String[xulDirectories.length];
  String[] xulReq=new String[xulDirectories.length];
  boolean[] xulSubdirs=new boolean[xulDirectories.length];
  for (int i=0; i < xulMasks.length; i++) {
    xulMasks[i]=".*\\.xul$";
    xulReq[i]="N";
    xulSubdirs[i]=true;
  }
  FileInputList xulFileInputList=FileInputList.createFileList(new Variables(),xulDirectories,xulMasks,xulReq,xulSubdirs);
  for (  FileObject fileObject : xulFileInputList.getFiles()) {
    try {
      Document doc=XMLHandler.loadXMLFile(fileObject);
      addLabelOccurrences(fileObject,doc.getElementsByTagName("menu"));
      addLabelOccurrences(fileObject,doc.getElementsByTagName("menuitem"));
      addLabelOccurrences(fileObject,doc.getElementsByTagName("toolbar"));
      addLabelOccurrences(fileObject,doc.getElementsByTagName("toolbarbutton"));
    }
 catch (    KettleXMLException e) {
      LogWriter.getInstance().logError(toString(),"Unable to open XUL / XML document: " + fileObject);
    }
  }
}
