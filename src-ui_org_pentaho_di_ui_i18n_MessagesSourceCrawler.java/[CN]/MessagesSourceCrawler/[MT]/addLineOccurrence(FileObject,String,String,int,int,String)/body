{
  int column=index + scanPhrase.length();
  String arguments="";
  int startKeyIndex=line.indexOf('"',column) + 1;
  int endKeyIndex=line.indexOf('"',startKeyIndex);
  String key;
  if (endKeyIndex >= 0) {
    key=line.substring(startKeyIndex,endKeyIndex);
    int bracketIndex=endKeyIndex;
    int nrOpen=1;
    while (bracketIndex < line.length() && nrOpen != 0) {
      int c=line.charAt(bracketIndex);
      if (c == '(')       nrOpen++;
      if (c == ')')       nrOpen--;
      bracketIndex++;
    }
    if (bracketIndex + 1 < line.length()) {
      arguments=line.substring(endKeyIndex + 1,bracketIndex);
    }
 else {
      arguments=line.substring(endKeyIndex + 1);
    }
  }
 else {
    key=line.substring(startKeyIndex);
  }
  if (key.contains("\t") || key.contains(" ")) {
    System.out.println("Suspect key found: [" + key + "] in file ["+ fileObject+ "]");
  }
  if (key.startsWith("System.")) {
    String i18nPackage=BaseMessages.class.getPackage().getName();
    KeyOccurrence keyOccurrence=new KeyOccurrence(fileObject,i18nPackage,row,column,key,arguments,line);
    KeyOccurrence lookup=getKeyOccurrence(key,i18nPackage);
    if (lookup == null) {
      addKeyOccurrence(keyOccurrence);
    }
 else {
      lookup.setSourceLine(lookup.getSourceLine() + Const.CR + keyOccurrence.getSourceLine());
      lookup.incrementOccurrences();
    }
  }
 else {
    KeyOccurrence keyOccurrence=new KeyOccurrence(fileObject,messagesPackage,row,column,key,arguments,line);
    addKeyOccurrence(keyOccurrence);
  }
}
