{
  String realTableName=space.environmentSubstitute(tablename);
  String realSchemaName=space.environmentSubstitute(schemaName);
  if (databaseMeta != null) {
    Database db=new Database(databaseMeta);
    try {
      db.connect();
      if (!Const.isEmpty(realTableName)) {
        String schemaTable=databaseMeta.getQuotedSchemaTableCombination(realSchemaName,realTableName);
        if (db.checkTableExists(schemaTable)) {
          return db.getTableFields(schemaTable);
        }
 else {
          throw new KettleException(BaseMessages.getString(PKG,"TableOutputMeta.Exception.TableNotFound"));
        }
      }
 else {
        throw new KettleException(BaseMessages.getString(PKG,"TableOutputMeta.Exception.TableNotSpecified"));
      }
    }
 catch (    Exception e) {
      throw new KettleException(BaseMessages.getString(PKG,"TableOutputMeta.Exception.ErrorGettingFields"),e);
    }
 finally {
      db.disconnect();
    }
  }
 else {
    throw new KettleException(BaseMessages.getString(PKG,"TableOutputMeta.Exception.ConnectionNotDefined"));
  }
}
