{
  try {
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    rep.saveStepAttribute(id_transformation,id_step,"schema",schemaName);
    rep.saveStepAttribute(id_transformation,id_step,"table",tablename);
    rep.saveStepAttribute(id_transformation,id_step,"commit",commitSize);
    rep.saveStepAttribute(id_transformation,id_step,"truncate",truncateTable);
    rep.saveStepAttribute(id_transformation,id_step,"ignore_errors",ignoreErrors);
    rep.saveStepAttribute(id_transformation,id_step,"use_batch",useBatchUpdate);
    rep.saveStepAttribute(id_transformation,id_step,"specify_fields",specifyFields);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_enabled",partitioningEnabled);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_field",partitioningField);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_daily",partitioningDaily);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_monthly",partitioningMonthly);
    rep.saveStepAttribute(id_transformation,id_step,"tablename_in_field",tableNameInField);
    rep.saveStepAttribute(id_transformation,id_step,"tablename_field",tableNameField);
    rep.saveStepAttribute(id_transformation,id_step,"tablename_in_table",tableNameInTable);
    rep.saveStepAttribute(id_transformation,id_step,"return_keys",returningGeneratedKeys);
    rep.saveStepAttribute(id_transformation,id_step,"return_field",generatedKeyField);
    int nrRows=(fieldDatabase.length < fieldStream.length ? fieldStream.length : fieldDatabase.length);
    for (int idx=0; idx < nrRows; idx++) {
      String columnName=(idx < fieldDatabase.length ? fieldDatabase[idx] : "");
      String streamName=(idx < fieldStream.length ? fieldStream[idx] : "");
      rep.saveStepAttribute(id_transformation,id_step,idx,"column_name",columnName);
      rep.saveStepAttribute(id_transformation,id_step,idx,"stream_name",streamName);
    }
    if (databaseMeta != null) {
      rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getObjectId());
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
