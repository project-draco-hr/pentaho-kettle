{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"id_connection",databaseMeta == null ? -1 : databaseMeta.getID());
    rep.saveStepAttribute(id_transformation,id_step,"schema",schemaName);
    rep.saveStepAttribute(id_transformation,id_step,"table",tablename);
    rep.saveStepAttribute(id_transformation,id_step,"commit",commitSize);
    rep.saveStepAttribute(id_transformation,id_step,"truncate",truncateTable);
    rep.saveStepAttribute(id_transformation,id_step,"ignore_errors",ignoreErrors);
    rep.saveStepAttribute(id_transformation,id_step,"use_batch",useBatchUpdate);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_enabled",partitioningEnabled);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_field",partitioningField);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_daily",partitioningDaily);
    rep.saveStepAttribute(id_transformation,id_step,"partitioning_monthly",partitioningMonthly);
    rep.saveStepAttribute(id_transformation,id_step,"tablename_in_field",tableNameInField);
    rep.saveStepAttribute(id_transformation,id_step,"tablename_field",tableNameField);
    rep.saveStepAttribute(id_transformation,id_step,"tablename_in_table",tableNameInTable);
    rep.saveStepAttribute(id_transformation,id_step,"return_keys",returningGeneratedKeys);
    rep.saveStepAttribute(id_transformation,id_step,"return_field",generatedKeyField);
    if (databaseMeta != null)     rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getID());
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
