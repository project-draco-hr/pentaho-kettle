{
  SalesforceConnection connection=null;
  try {
    SalesforceInputMeta meta=new SalesforceInputMeta();
    getInfo(meta);
    wFields.removeAll();
    String realModule=transMeta.environmentSubstitute(meta.getModule());
    String realURL=transMeta.environmentSubstitute(meta.getTargetURL());
    String realUsername=transMeta.environmentSubstitute(meta.getUsername());
    String realPassword=Utils.resolvePassword(transMeta,meta.getPassword());
    int realTimeOut=Const.toInt(transMeta.environmentSubstitute(meta.getTimeout()),0);
    connection=new SalesforceConnection(log,realURL,realUsername,realPassword);
    connection.setTimeOut(realTimeOut);
    String[] fieldsName=null;
    if (meta.isSpecifyQuery()) {
      String realQuery=transMeta.environmentSubstitute(meta.getQuery());
      connection.setSQL(realQuery);
      connection.connect();
      XmlObject[] fields=connection.getElements();
      int nrFields=fields.length;
      List<String> fieldNames=new ArrayList<String>();
      for (int i=0; i < nrFields; i++) {
        addFields("",fieldNames,fields[i]);
      }
      fieldsName=fieldNames.toArray(new String[fieldNames.size()]);
    }
 else {
      connection.connect();
      Field[] fields=connection.getObjectFields(realModule);
      fieldsName=new String[fields.length];
      for (int i=0; i < fields.length; i++) {
        Field field=fields[i];
        fieldsName[i]=field.getName();
        addField(field);
      }
    }
    if (fieldsName != null) {
      colinf[1].setComboValues(fieldsName);
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"SalesforceInputMeta.ErrorRetrieveData.DialogTitle"),BaseMessages.getString(PKG,"SalesforceInputMeta.ErrorRetrieveData.DialogMessage"),e);
  }
catch (  Exception e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"SalesforceInputMeta.ErrorRetrieveData.DialogTitle"),BaseMessages.getString(PKG,"SalesforceInputMeta.ErrorRetrieveData.DialogMessage"),e);
  }
 finally {
    if (connection != null) {
      try {
        connection.close();
      }
 catch (      Exception e) {
      }
    }
  }
}
