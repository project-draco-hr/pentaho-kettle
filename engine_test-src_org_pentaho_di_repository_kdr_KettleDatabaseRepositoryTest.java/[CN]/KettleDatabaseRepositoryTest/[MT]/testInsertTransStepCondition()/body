{
  ArgumentCaptor<String> argumentTableName=ArgumentCaptor.forClass(String.class);
  ArgumentCaptor<RowMetaAndData> argumentTableData=ArgumentCaptor.forClass(RowMetaAndData.class);
  doNothing().when(repo.connectionDelegate).insertTableRow(argumentTableName.capture(),argumentTableData.capture());
  repo.insertTransStepCondition(new LongObjectId(234),new LongObjectId(567),new LongObjectId(468));
  RowMetaAndData insertRecord=argumentTableData.getValue();
  assertEquals(KettleDatabaseRepository.TABLE_R_TRANS_STEP_CONDITION,argumentTableName.getValue());
  assertEquals(3,insertRecord.size());
  assertEquals(ValueMetaInterface.TYPE_INTEGER,insertRecord.getValueMeta(0).getType());
  assertEquals(KettleDatabaseRepository.FIELD_TRANS_STEP_CONDITION_ID_TRANSFORMATION,insertRecord.getValueMeta(0).getName());
  assertEquals(Long.valueOf(234),insertRecord.getInteger(0));
  assertEquals(ValueMetaInterface.TYPE_INTEGER,insertRecord.getValueMeta(1).getType());
  assertEquals(KettleDatabaseRepository.FIELD_TRANS_STEP_CONDITION_ID_STEP,insertRecord.getValueMeta(1).getName());
  assertEquals(Long.valueOf(567),insertRecord.getInteger(1));
  assertEquals(ValueMetaInterface.TYPE_INTEGER,insertRecord.getValueMeta(2).getType());
  assertEquals(KettleDatabaseRepository.FIELD_TRANS_STEP_CONDITION_ID_CONDITION,insertRecord.getValueMeta(2).getName());
  assertEquals(Long.valueOf(468),insertRecord.getInteger(2));
}
