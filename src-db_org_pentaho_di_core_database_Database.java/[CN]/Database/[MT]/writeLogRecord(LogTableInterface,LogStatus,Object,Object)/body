{
  try {
    RowMetaAndData logRecord=logTable.getLogRecord(status,subject,parent);
    if (logRecord == null)     return;
    boolean update=(logTable.getKeyField() != null) && !status.equals(LogStatus.START);
    String schemaTable=databaseMeta.getQuotedSchemaTableCombination(environmentSubstitute(logTable.getActualSchemaName()),environmentSubstitute(logTable.getActualTableName()));
    RowMetaInterface rowMeta=logRecord.getRowMeta();
    Object[] rowData=logRecord.getData();
    if (update) {
      RowMetaInterface updateRowMeta=new RowMeta();
      Object[] updateRowData=new Object[rowMeta.size()];
      ValueMetaInterface keyValueMeta=rowMeta.getValueMeta(0);
      VariableSpace subjectSpace=null;
      StringBuffer sqlBuff=null;
      String sql=null;
      if (subject instanceof VariableSpace) {
        subjectSpace=(VariableSpace)subject;
        sql=subjectSpace.getVariable("LogRecordSQL",null);
      }
      if (sql == null) {
        sqlBuff=new StringBuffer(100);
        sqlBuff.append("UPDATE ").append(schemaTable).append(" SET ");
      }
      for (int i=1; i < rowMeta.size(); i++) {
        ValueMetaInterface valueMeta=rowMeta.getValueMeta(i);
        if (sql == null && i > 1) {
          sqlBuff.append(", ");
        }
        sqlBuff.append(databaseMeta.quoteField(valueMeta.getName())).append("=? ");
        updateRowMeta.addValueMeta(valueMeta);
        updateRowData[i - 1]=rowData[i];
      }
      if (sql == null) {
        sqlBuff.append("WHERE ").append(databaseMeta.quoteField(keyValueMeta.getName())).append("=? ");
      }
      updateRowMeta.addValueMeta(keyValueMeta);
      updateRowData[rowMeta.size() - 1]=rowData[0];
      if (sql == null) {
        sql=sqlBuff.toString();
        if (subjectSpace != null) {
          subjectSpace.setVariable("LogRecordSQL",sql);
        }
      }
      execStatement(sql,updateRowMeta,updateRowData);
    }
 else {
      insertRow(environmentSubstitute(logTable.getActualSchemaName()),environmentSubstitute(logTable.getActualTableName()),logRecord.getRowMeta(),logRecord.getData());
    }
  }
 catch (  Exception e) {
    throw new KettleDatabaseException("Unable to write log record to log table " + logTable.getActualTableName(),e);
  }
}
