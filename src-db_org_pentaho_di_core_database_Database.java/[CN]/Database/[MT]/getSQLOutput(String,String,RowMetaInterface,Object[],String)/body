{
  StringBuffer ins=new StringBuffer(128);
  try {
    String schemaTable=databaseMeta.getQuotedSchemaTableCombination(schemaName,tableName);
    ins.append("INSERT INTO ").append(schemaTable).append('(');
    for (int i=0; i < fields.size(); i++) {
      if (i > 0)       ins.append(", ");
      String name=fields.getValueMeta(i).getName();
      ins.append(databaseMeta.quoteField(name));
    }
    ins.append(") VALUES (");
    for (int i=0; i < fields.size(); i++) {
      if (i > 0)       ins.append(",");
{
switch (fields.getValueMeta(i).getType()) {
case ValueMetaInterface.TYPE_BOOLEAN:
case ValueMetaInterface.TYPE_STRING:
          ins.append("'" + fields.getString(r,i) + "'");
        break;
case ValueMetaInterface.TYPE_DATE:
      if (Const.isEmpty(dateFormat))       ins.append("'" + fields.getString(r,i) + "'");
 else {
        try {
          java.text.SimpleDateFormat formatter=new java.text.SimpleDateFormat(dateFormat);
          ins.append("'" + formatter.format(fields.getDate(r,i)) + "'");
        }
 catch (        Exception e) {
          throw new KettleDatabaseException("Error : ",e);
        }
      }
    break;
default :
  ins.append(fields.getString(r,i));
break;
}
}
}
ins.append(')');
}
 catch (Exception e) {
throw new KettleDatabaseException(e);
}
return ins.toString();
}
