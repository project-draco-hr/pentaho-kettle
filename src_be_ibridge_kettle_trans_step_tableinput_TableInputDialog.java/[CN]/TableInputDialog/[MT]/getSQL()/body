{
  DatabaseMeta inf=transMeta.findDatabase(wConnection.getText());
  if (inf != null) {
    DatabaseExplorerDialog std=new DatabaseExplorerDialog(shell,props,SWT.NONE,inf,transMeta.getDatabases());
    String tableName=(String)std.open();
    if (tableName != null) {
      String sql="SELECT *" + Const.CR + "FROM "+ tableName+ Const.CR;
      wSQL.setText(sql);
      MessageBox yn=new MessageBox(shell,SWT.YES | SWT.NO | SWT.CANCEL| SWT.ICON_QUESTION);
      yn.setMessage("Do you want to include the field-names in the SQL?");
      yn.setText("Question?");
      int id=yn.open();
switch (id) {
case SWT.CANCEL:
        break;
case SWT.NO:
      wSQL.setText(sql);
    break;
case SWT.YES:
  Database db=new Database(inf);
try {
  db.connect();
  Row fields=db.getQueryFields(sql,false);
  if (fields != null) {
    sql="SELECT" + Const.CR;
    for (int i=0; i < fields.size(); i++) {
      Value field=fields.getValue(i);
      if (i == 0)       sql+="  ";
 else       sql+=", ";
      sql+=field.getName() + Const.CR;
    }
    sql+="FROM " + tableName + Const.CR;
    wSQL.setText(sql);
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setMessage("Sorry, I couldn't retrieve the fields!" + Const.CR + "Perhaps you don't have the right permissions?");
    mb.setText("ERROR");
    mb.open();
  }
}
 catch (KettleException e) {
  MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
  mb.setText("ERROR!");
  mb.setMessage("An error occurred: " + Const.CR + e.getMessage());
  mb.open();
}
 finally {
  db.disconnect();
}
break;
}
}
}
 else {
MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
mb.setMessage("This database connection is no longer available!");
mb.setText("ERROR");
mb.open();
}
}
