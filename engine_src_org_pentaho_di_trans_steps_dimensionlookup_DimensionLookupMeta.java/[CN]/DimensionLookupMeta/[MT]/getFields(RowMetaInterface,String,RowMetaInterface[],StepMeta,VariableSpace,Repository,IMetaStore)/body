{
  for (  ValueMetaInterface valueMeta : row.getValueMetaList()) {
    valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
    valueMeta.setTrimType(ValueMetaInterface.TRIM_TYPE_NONE);
  }
  if (Const.isEmpty(keyField)) {
    String message=BaseMessages.getString(PKG,"DimensionLookupMeta.Error.NoTechnicalKeySpecified");
    logError(message);
    throw new KettleStepException(message);
  }
  ValueMetaInterface v=new ValueMeta(keyField,ValueMetaInterface.TYPE_INTEGER);
  if (keyRename != null && keyRename.length() > 0) {
    v.setName(keyRename);
  }
  v.setLength(9);
  v.setPrecision(0);
  v.setOrigin(name);
  row.addValueMeta(v);
  if (!update && fieldLookup.length > 0) {
    Database db=null;
    try {
      if (databaseMeta != null) {
        db=createDatabaseObject();
        RowMetaInterface extraFields=getDatabaseTableFields(db,schemaName,tableName);
        for (int i=0; i < fieldLookup.length; i++) {
          v=extraFields.searchValueMeta(fieldLookup[i]);
          if (v == null) {
            String message=BaseMessages.getString(PKG,"DimensionLookupMeta.Exception.UnableToFindReturnField",fieldLookup[i]);
            logError(message);
            throw new KettleStepException(message);
          }
          if (fieldStream[i] != null && fieldStream[i].length() > 0) {
            v.setName(fieldStream[i]);
          }
          v.setOrigin(name);
          row.addValueMeta(v);
        }
      }
 else {
        String message=BaseMessages.getString(PKG,"DimensionLookupMeta.Exception.UnableToRetrieveDataTypeOfReturnField");
        logError(message);
        throw new KettleStepException(message);
      }
    }
 catch (    Exception e) {
      String message=BaseMessages.getString(PKG,"DimensionLookupMeta.Exception.UnableToRetrieveDataTypeOfReturnField2");
      logError(message);
      throw new KettleStepException(message,e);
    }
 finally {
      if (db != null) {
        db.disconnect();
      }
    }
  }
}
