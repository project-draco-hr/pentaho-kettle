{
  SwtXulLoader swtXulLoader=new SwtXulLoader();
  swtXulLoader.registerClassLoader(getClass().getClassLoader());
  container=swtXulLoader.loadXul("org/pentaho/di/ui/repository/repositoryexplorer/xul/explorer-layout.xul",resourceBundle);
  SpoonPluginManager.getInstance().applyPluginsForContainer("repository-explorer",container);
  final XulRunner runner=new SwtXulRunner();
  runner.addContainer(container);
  mainController.setRepository(rep);
  mainController.setCallback(callback);
  container.addEventHandler(mainController);
  List<IRepositoryExplorerUISupport> uiSupportList=new ArrayList<IRepositoryExplorerUISupport>();
  try {
    for (    Class<? extends IRepositoryService> sevice : rep.getServiceInterfaces()) {
      IRepositoryExplorerUISupport uiSupport=UISupportRegistery.getInstance().createUISupport(sevice);
      if (uiSupport != null) {
        uiSupportList.add(uiSupport);
        uiSupport.apply(container);
      }
    }
  }
 catch (  Exception e) {
    log.error(resourceBundle.getString("RepositoryExplorer.ErrorStartingXulApplication"),e);
    new ErrorDialog(((Spoon)SpoonFactory.getInstance()).getShell(),BaseMessages.getString(Spoon.class,"Spoon.Error"),e.getMessage(),e);
  }
  for (  IRepositoryExplorerUISupport uiSupport : uiSupportList) {
    try {
      uiSupport.initControllers(rep);
    }
 catch (    ControllerInitializationException e) {
      log.error(resourceBundle.getString("RepositoryExplorer.ErrorStartingXulApplication"),e);
      new ErrorDialog(((Spoon)SpoonFactory.getInstance()).getShell(),BaseMessages.getString(Spoon.class,"Spoon.Error"),e.getMessage(),e);
    }
  }
  try {
    runner.initialize();
  }
 catch (  XulException e) {
    log.error(resourceBundle.getString("RepositoryExplorer.ErrorStartingXulApplication"),e);
    new ErrorDialog(((Spoon)SpoonFactory.getInstance()).getShell(),BaseMessages.getString(Spoon.class,"Spoon.Error"),e.getMessage(),e);
  }
}
