{
  repositoryDirectory=rd;
  try {
    container=new SwtXulLoader().loadXul("org/pentaho/di/ui/repository/repositoryexplorer/xul/explorer-layout.xul");
    final XulRunner runner=new SwtXulRunner();
    runner.addContainer(container);
    BindingFactory bf=new DefaultBindingFactory();
    bf.setDocument(container.getDocumentRoot());
    mainController.setRepository(rep);
    mainController.setBindingFactory(bf);
    container.addEventHandler(mainController);
    boolean versionsEnabled=rep.getRepositoryMeta().getRepositoryCapabilities().supportsRevisions();
    loadVersionOverlay(versionsEnabled);
    browseController.setBindingFactory(bf);
    container.addEventHandler(browseController);
    browseController.setRepositoryDirectory(new UIRepositoryDirectory(repositoryDirectory,rep));
    browseController.setCallback(callback);
    connectionsController.setRepository(rep);
    connectionsController.setBindingFactory(bf);
    container.addEventHandler(connectionsController);
    slavesController.setRepository(rep);
    slavesController.setBindingFactory(bf);
    container.addEventHandler(slavesController);
    partitionsController.setRepository(rep);
    partitionsController.setVariableSpace(variableSpace);
    partitionsController.setBindingFactory(bf);
    container.addEventHandler(partitionsController);
    clustersController.setRepository(rep);
    clustersController.setBindingFactory(bf);
    container.addEventHandler(clustersController);
    boolean securityEnabled=rep.getRepositoryMeta().getRepositoryCapabilities().managesUsers();
    loadSecurityOverlay(securityEnabled);
    container.addEventHandler(securityController);
    if (securityEnabled) {
      securityController.setBindingFactory(bf);
      securityController.setRepositoryUserInterface(rep.getSecurityProvider());
    }
    try {
      runner.initialize();
    }
 catch (    XulException e) {
      log.error("error starting Xul application",e);
    }
  }
 catch (  XulException e) {
    log.error("error loading Xul application",e);
  }
}
