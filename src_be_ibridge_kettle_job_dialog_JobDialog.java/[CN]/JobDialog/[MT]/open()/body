{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobMeta.setChanged();
    }
  }
;
  changed=jobMeta.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("Job properties");
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlJobname=new Label(shell,SWT.NONE);
  wlJobname.setText("Job name :");
  props.setLook(wlJobname);
  fdlJobname=new FormData();
  fdlJobname.left=new FormAttachment(0,0);
  fdlJobname.top=new FormAttachment(0,margin);
  wlJobname.setLayoutData(fdlJobname);
  wJobname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wJobname);
  wJobname.addModifyListener(lsMod);
  fdJobname=new FormData();
  fdJobname.left=new FormAttachment(middle,0);
  fdJobname.top=new FormAttachment(0,margin);
  fdJobname.right=new FormAttachment(100,0);
  wJobname.setLayoutData(fdJobname);
  wlDirectory=new Label(shell,SWT.RIGHT);
  wlDirectory.setText("Directory :");
  props.setLook(wlDirectory);
  fdlDirectory=new FormData();
  fdlDirectory.left=new FormAttachment(0,0);
  fdlDirectory.right=new FormAttachment(middle,-margin);
  fdlDirectory.top=new FormAttachment(wJobname,margin);
  wlDirectory.setLayoutData(fdlDirectory);
  wbDirectory=new Button(shell,SWT.PUSH);
  wbDirectory.setText("...");
  props.setLook(wbDirectory);
  fdbDirectory=new FormData();
  fdbDirectory.top=new FormAttachment(wJobname,margin);
  fdbDirectory.right=new FormAttachment(100,0);
  wbDirectory.setLayoutData(fdbDirectory);
  wbDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      RepositoryDirectory directory_from=jobMeta.getDirectory();
      long id_directory_from=directory_from.getID();
      SelectDirectoryDialog sdd=new SelectDirectoryDialog(shell,SWT.NONE,rep);
      RepositoryDirectory rd=sdd.open();
      if (rd != null) {
        if (id_directory_from != rd.getID()) {
          try {
            rep.moveJob(jobMeta.getName(),id_directory_from,rd.getID());
            log.logDetailed(getClass().getName(),"Moved directory to [" + rd.getPath() + "]");
            jobMeta.setDirectory(rd);
            wDirectory.setText(jobMeta.getDirectory().getPath());
          }
 catch (          KettleDatabaseException dbe) {
            jobMeta.setDirectory(directory_from);
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setText("Error!");
            mb.setMessage("There was an error moving the jobMeta to another directory!");
            mb.open();
          }
        }
 else {
        }
      }
    }
  }
);
  wDirectory=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDirectory);
  wDirectory.setEditable(false);
  fdDirectory=new FormData();
  fdDirectory.top=new FormAttachment(wJobname,margin);
  fdDirectory.left=new FormAttachment(middle,0);
  fdDirectory.right=new FormAttachment(wbDirectory,0);
  wDirectory.setLayoutData(fdDirectory);
  wlLogconnection=new Label(shell,SWT.NONE);
  wlLogconnection.setText("Log Connection: ");
  props.setLook(wlLogconnection);
  fdlLogconnection=new FormData();
  fdlLogconnection.top=new FormAttachment(wDirectory,margin * 4);
  fdlLogconnection.left=new FormAttachment(0,0);
  wlLogconnection.setLayoutData(fdlLogconnection);
  wbLogconnection=new Button(shell,SWT.PUSH);
  wbLogconnection.setText("&Edit...");
  wbLogconnection.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DatabaseMeta ci=jobMeta.getLogConnection();
      if (ci == null)       ci=new DatabaseMeta();
      DatabaseDialog cid=new DatabaseDialog(shell,SWT.NONE,log,ci,props);
      if (cid.open() != null) {
        jobMeta.setLogConnection(ci);
        wLogconnection.setText(ci.getName());
      }
    }
  }
);
  fdbLogconnection=new FormData();
  fdbLogconnection.top=new FormAttachment(wDirectory,margin * 4);
  fdbLogconnection.right=new FormAttachment(100,0);
  wbLogconnection.setLayoutData(fdbLogconnection);
  wLogconnection=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogconnection);
  wLogconnection.addModifyListener(lsMod);
  wLogconnection.setEnabled(false);
  fdLogconnection=new FormData();
  fdLogconnection.top=new FormAttachment(wDirectory,margin * 4);
  fdLogconnection.left=new FormAttachment(middle,0);
  fdLogconnection.right=new FormAttachment(wbLogconnection,-margin);
  wLogconnection.setLayoutData(fdLogconnection);
  wlLogtable=new Label(shell,SWT.NONE);
  wlLogtable.setText("Log table:");
  props.setLook(wlLogtable);
  fdlLogtable=new FormData();
  fdlLogtable.left=new FormAttachment(0,0);
  fdlLogtable.top=new FormAttachment(wLogconnection,margin);
  wlLogtable.setLayoutData(fdlLogtable);
  wLogtable=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogtable);
  wLogtable.addModifyListener(lsMod);
  fdLogtable=new FormData();
  fdLogtable.left=new FormAttachment(middle,0);
  fdLogtable.top=new FormAttachment(wLogconnection,margin);
  fdLogtable.right=new FormAttachment(100,0);
  wLogtable.setLayoutData(fdLogtable);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(" &SQL ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  fdOK=new FormData();
  fdOK.left=new FormAttachment(25,0);
  fdOK.top=new FormAttachment(wLogtable,margin * 4);
  wOK.setLayoutData(fdOK);
  fdSQL=new FormData();
  fdSQL.left=new FormAttachment(wOK,10);
  fdSQL.top=new FormAttachment(wLogtable,margin * 4);
  wSQL.setLayoutData(fdSQL);
  fdCancel=new FormData();
  fdCancel.left=new FormAttachment(wSQL,10);
  fdCancel.top=new FormAttachment(wLogtable,margin * 4);
  wCancel.setLayoutData(fdCancel);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      sql();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wJobname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  WindowProperty winprop=props.getScreen(shell.getText());
  if (winprop != null)   winprop.setShell(shell);
 else   shell.pack();
  getData();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobMeta;
}
