{
  TreeItem items[]=wTree.getSelection();
  boolean error=false;
  MessageBox mb=new MessageBox(shell,SWT.ICON_WARNING | SWT.YES | SWT.NO);
  mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.Confirm.Message1") + (items.length > 1 ? BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.Confirm.Message2") + items.length + BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.Confirm.Message3") : BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.Confirm.Message4")));
  mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.Confirm.Title"));
  int answer=mb.open();
  if (answer != SWT.YES) {
    return false;
  }
  for (int i=0; i < items.length; i++) {
    final RepositoryObject repositoryObject=objectMap.get(ConstUI.getTreePath(items[i],0));
    if (repositoryObject != null) {
      try {
switch (repositoryObject.getObjectType()) {
case TRANSFORMATION:
          rep.deleteTransformation(repositoryObject.getObjectId());
        break;
case JOB:
      rep.deleteJob(repositoryObject.getObjectId());
    break;
default :
  break;
}
}
 catch (Exception e) {
new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.ErrorRemoving.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Trans.Delete.ErrorRemoving.Message") + repositoryObject.getName() + "]",e);
error=true;
}
}
}
refreshTree();
return !error;
}
