{
  try {
    long id=rep.getPartitionSchemaID(partitionSchemaName);
    PartitionSchema partitionSchema=rep.loadPartitionSchema(id);
    PartitionSchemaDialog dd=new PartitionSchemaDialog(shell,partitionSchema,rep.readDatabases(),variableSpace);
    if (dd.open()) {
      rep.lockRepository();
      rep.insertLogEntry("Updating partition schema '" + partitionSchema.getName() + "'");
      rep.savePartitionSchema(partitionSchema);
      if (!partitionSchemaName.equalsIgnoreCase(partitionSchema.getName()))       refreshTree();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.PartitionSchema.Edit.UnexpectedError.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.PartitionSchema.Edit.UnexpectedError.Message") + partitionSchemaName + "]",e);
  }
 finally {
    try {
      rep.unlockRepository();
    }
 catch (    KettleException e) {
      new ErrorDialog(shell,"Error","Unexpected error unlocking the repository database",e);
    }
  }
}
