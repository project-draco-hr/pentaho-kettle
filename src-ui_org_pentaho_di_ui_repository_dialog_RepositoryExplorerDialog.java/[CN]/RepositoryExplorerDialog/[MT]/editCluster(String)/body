{
  try {
    long id=rep.clusterSchemaDelegate.getClusterID(clusterName);
    ClusterSchema cluster=rep.loadClusterSchema(id,rep.getSlaveServers());
    ClusterSchemaDialog dd=new ClusterSchemaDialog(shell,cluster,rep.getSlaveServers());
    if (dd.open()) {
      rep.lockRepository();
      rep.insertLogEntry("Updating cluster '" + cluster.getName() + "'");
      rep.saveClusterSchema(cluster);
      if (!clusterName.equalsIgnoreCase(cluster.getName()))       refreshTree();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Edit.UnexpectedError.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Cluster.Edit.UnexpectedError.Message") + clusterName + "]",e);
  }
 finally {
    try {
      rep.unlockRepository();
    }
 catch (    KettleException e) {
      new ErrorDialog(shell,"Error","Unexpected error unlocking the repository database",e);
    }
  }
}
