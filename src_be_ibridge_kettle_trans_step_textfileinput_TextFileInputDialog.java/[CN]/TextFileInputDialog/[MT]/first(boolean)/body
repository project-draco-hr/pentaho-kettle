{
  TextFileInputMeta info=new TextFileInputMeta();
  getInfo(info);
  try {
    if (info.getTextFileList().nrOfFiles() > 0) {
      String shellText="Nr of lines to view.  0 means all lines.";
      String lineText="Number of lines (0=all lines)";
      EnterNumberDialog end=new EnterNumberDialog(shell,props,100,shellText,lineText);
      int nrLines=end.open();
      if (nrLines >= 0) {
        ArrayList linesList=getFirst(nrLines,skipHeaders);
        if (linesList != null && linesList.size() > 0) {
          String firstlines="";
          for (int i=0; i < linesList.size(); i++) {
            firstlines+=(String)linesList.get(i) + Const.CR;
          }
          EnterTextDialog etd=new EnterTextDialog(shell,"Content of first file",(nrLines == 0 ? "All" : "" + nrLines) + " lines:",firstlines,true);
          etd.setReadOnly();
          etd.open();
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setMessage("I couldn't read any lines from the specified files.");
          mb.setText("Sorry");
          mb.open();
        }
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
      mb.setMessage("I couldn't find a valid file to work with.  Please check the files, directories & expressions.");
      mb.setText("ERROR");
      mb.open();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,props,"Error","Error getting data from file",e);
  }
}
