{
  final TextFileInputMeta in=meta;
  wAccFilenames.setSelection(meta.isAcceptingFilenames());
  if (meta.getAcceptingField() != null)   wAccField.setText(meta.getAcceptingField());
  if (meta.getAcceptingStep() != null)   wAccStep.setText(meta.getAcceptingStep().getName());
  if (in.getFileName() != null) {
    wFilenameList.removeAll();
    for (int i=0; i < in.getFileName().length; i++) {
      wFilenameList.add(new String[]{in.getFileName()[i],in.getFileMask()[i],in.getFileRequired()[i]});
    }
    wFilenameList.removeEmptyRows();
    wFilenameList.setRowNums();
    wFilenameList.optWidth(true);
  }
  if (in.getFileType() != null)   wFiletype.setText(in.getFileType());
  if (in.getSeparator() != null)   wSeparator.setText(in.getSeparator());
  if (in.getEnclosure() != null)   wEnclosure.setText(in.getEnclosure());
  if (in.getEscapeCharacter() != null)   wEscape.setText(in.getEscapeCharacter());
  wAccFilenames.setSelection(in.isAcceptingFilenames());
  wHeader.setSelection(in.hasHeader());
  wNrHeader.setText("" + in.getNrHeaderLines());
  wFooter.setSelection(in.hasFooter());
  wNrFooter.setText("" + in.getNrFooterLines());
  wWraps.setSelection(in.isLineWrapped());
  wNrWraps.setText("" + in.getNrWraps());
  wLayoutPaged.setSelection(in.isLayoutPaged());
  wNrLinesPerPage.setText("" + in.getNrLinesPerPage());
  wNrLinesDocHeader.setText("" + in.getNrLinesDocHeader());
  wZipped.setSelection(in.isZipped());
  wNoempty.setSelection(in.noEmptyLines());
  wInclFilename.setSelection(in.includeFilename());
  wInclRownum.setSelection(in.includeRowNumber());
  wDateLenient.setSelection(in.isDateFormatLenient());
  if (in.getFilenameField() != null)   wInclFilenameField.setText(in.getFilenameField());
  if (in.getRowNumberField() != null)   wInclRownumField.setText(in.getRowNumberField());
  if (in.getFileFormat() != null)   wFormat.setText(in.getFileFormat());
  wLimit.setText("" + in.getRowLimit());
  log.logDebug(toString(),"getting fields info...");
  for (int i=0; i < in.getInputFields().length; i++) {
    TextFileInputField field=in.getInputFields()[i];
    TableItem item=wFields.table.getItem(i);
    item.setText(1,field.getName());
    String type=field.getTypeDesc();
    String format=field.getFormat();
    String position="" + field.getPosition();
    String length="" + field.getLength();
    String prec="" + field.getPrecision();
    String curr=field.getCurrencySymbol();
    String group=field.getGroupSymbol();
    String decim=field.getDecimalSymbol();
    String def=field.getNullString();
    String ifNull=field.getIfNullValue();
    String trim=field.getTrimTypeDesc();
    String rep=field.isRepeated() ? Messages.getString("System.Combo.Yes") : Messages.getString("System.Button.No");
    if (type != null)     item.setText(2,type);
    if (format != null)     item.setText(3,format);
    if (position != null && !"-1".equals(position))     item.setText(4,position);
    if (length != null && !"-1".equals(length))     item.setText(5,length);
    if (prec != null && !"-1".equals(prec))     item.setText(6,prec);
    if (curr != null)     item.setText(7,curr);
    if (decim != null)     item.setText(8,decim);
    if (group != null)     item.setText(9,group);
    if (def != null)     item.setText(10,def);
    if (ifNull != null)     item.setText(11,ifNull);
    if (trim != null)     item.setText(12,trim);
    if (rep != null)     item.setText(13,rep);
  }
  if (in.getEncoding() != null)   wEncoding.setText(in.getEncoding());
  wErrorIgnored.setSelection(in.isErrorIgnored());
  wSkipErrorLines.setSelection(in.isErrorLineSkipped());
  if (in.getErrorCountField() != null)   wErrorCount.setText(in.getErrorCountField());
  if (in.getErrorFieldsField() != null)   wErrorFields.setText(in.getErrorFieldsField());
  if (in.getErrorTextField() != null)   wErrorText.setText(in.getErrorTextField());
  if (in.getWarningFilesDestinationDirectory() != null)   wWarnDestDir.setText(in.getWarningFilesDestinationDirectory());
  if (in.getWarningFilesExtension() != null)   wWarnExt.setText(in.getWarningFilesExtension());
  if (in.getErrorFilesDestinationDirectory() != null)   wErrorDestDir.setText(in.getErrorFilesDestinationDirectory());
  if (in.getErrorLineFilesExtension() != null)   wErrorExt.setText(in.getErrorLineFilesExtension());
  if (in.getLineNumberFilesDestinationDirectory() != null)   wLineNrDestDir.setText(in.getLineNumberFilesDestinationDirectory());
  if (in.getLineNumberFilesExtension() != null)   wLineNrExt.setText(in.getLineNumberFilesExtension());
  for (int i=0; i < in.getFilter().length; i++) {
    TableItem item=wFilter.table.getItem(i);
    TextFileFilter filter=in.getFilter()[i];
    if (filter.getFilterString() != null)     item.setText(1,filter.getFilterString());
    if (filter.getFilterPosition() >= 0)     item.setText(2,"" + filter.getFilterPosition());
    item.setText(3,filter.isFilterLastLine() ? Messages.getString("System.Button.Yes") : Messages.getString("System.Button.No"));
  }
  wDateLocale.setText(in.getDateFormatLocale().toString());
  wFields.removeEmptyRows();
  wFields.setRowNums();
  wFields.optWidth(true);
  wFilter.removeEmptyRows();
  wFilter.setRowNums();
  wFilter.optWidth(true);
  setFlags();
  wStepname.selectAll();
}
