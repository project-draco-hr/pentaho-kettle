{
  TextFileInputMeta info=new TextFileInputMeta();
  getInfo(info);
  FileInputList textFileList=info.getTextFileList();
  FileInputStream fi=null;
  ZipInputStream zi=null;
  InputStream f=null;
  ArrayList retval=new ArrayList();
  if (textFileList.nrOfFiles() > 0) {
    File file=textFileList.getFile(0);
    try {
      fi=new FileInputStream(file);
      if (info.isZipped()) {
        zi=new ZipInputStream(fi);
        zi.getNextEntry();
        f=zi;
      }
 else {
        f=fi;
      }
      InputStreamReader reader;
      if (info.getEncoding() != null && info.getEncoding().length() > 0) {
        reader=new InputStreamReader(f,info.getEncoding());
      }
 else {
        reader=new InputStreamReader(f);
      }
      String firstlines="";
      int linenr=0;
      int maxnr=nrlines + (info.hasHeader() ? info.getNrHeaderLines() : 0);
      if (skipHeaders) {
        if (info.isLayoutPaged() && info.getNrLinesDocHeader() > 0) {
          int skipped=0;
          String line=TextFileInput.getLine(log,reader,wFormat.getText());
          while (line != null && skipped < info.getNrLinesDocHeader() - 1) {
            skipped++;
            line=TextFileInput.getLine(log,reader,wFormat.getText());
          }
        }
        if (info.hasHeader() && info.getNrHeaderLines() > 0) {
          int skipped=0;
          String line=TextFileInput.getLine(log,reader,wFormat.getText());
          while (line != null && skipped < info.getNrHeaderLines() - 1) {
            skipped++;
            line=TextFileInput.getLine(log,reader,wFormat.getText());
          }
        }
      }
      String line=TextFileInput.getLine(log,reader,wFormat.getText());
      while (line != null && (linenr < maxnr || nrlines == 0)) {
        retval.add(line);
        firstlines+=line + Const.CR;
        linenr++;
        line=TextFileInput.getLine(log,reader,wFormat.getText());
      }
    }
 catch (    Exception e) {
      throw new KettleException("Error getting first " + nrlines + " from file "+ file.getPath(),e);
    }
 finally {
      try {
        if (info.isZipped() && zi != null) {
          zi.closeEntry();
          zi.close();
        }
        f.close();
      }
 catch (      Exception e) {
      }
    }
  }
  return retval;
}
