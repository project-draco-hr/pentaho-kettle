{
  stepname=wStepname.getText();
  in.setFileType(wFiletype.getText());
  in.setFileFormat(wFormat.getText());
  in.setSeparator(wSeparator.getText());
  in.setEnclosure(wEnclosure.getText());
  in.setEscapeCharacter(wEscape.getText());
  in.setRowLimit(Const.toLong(wLimit.getText(),0L));
  in.setFilenameField(wInclFilenameField.getText());
  in.setRowNumberField(wInclRownumField.getText());
  in.setIncludeFilename(wInclFilename.getSelection());
  in.setIncludeRowNumber(wInclRownum.getSelection());
  in.setHeader(wHeader.getSelection());
  in.setNrHeaderLines(Const.toInt(wNrHeader.getText(),1));
  in.setFooter(wFooter.getSelection());
  in.setNrFooterLines(Const.toInt(wNrFooter.getText(),1));
  in.setLineWrapped(wWraps.getSelection());
  in.setNrWraps(Const.toInt(wNrWraps.getText(),1));
  in.setLayoutPaged(wLayoutPaged.getSelection());
  in.setNrLinesPerPage(Const.toInt(wNrLinesPerPage.getText(),80));
  in.setNrLinesDocHeader(Const.toInt(wNrLinesDocHeader.getText(),0));
  in.setZipped(wZipped.getSelection());
  in.setDateFormatLenient(wDateLenient.getSelection());
  in.setNoEmptyLines(wNoempty.getSelection());
  String encoding=wEncoding.getText();
  if (encoding.length() > 0) {
    in.setEncoding(encoding);
  }
  int nrfiles=wFilenameList.getItemCount();
  int nrfields=wFields.nrNonEmpty();
  int nrfilters=wFilter.nrNonEmpty();
  in.allocate(nrfiles,nrfields,nrfilters);
  in.setFileName(wFilenameList.getItems(0));
  in.setFileMask(wFilenameList.getItems(1));
  for (int i=0; i < nrfields; i++) {
    TextFileInputField field=new TextFileInputField();
    TableItem item=wFields.getNonEmpty(i);
    field.setName(item.getText(1));
    field.setType(Value.getType(item.getText(2)));
    field.setFormat(item.getText(3));
    field.setPosition(Const.toInt(item.getText(4),-1));
    field.setLength(Const.toInt(item.getText(5),-1));
    field.setPrecision(Const.toInt(item.getText(6),-1));
    field.setCurrencySymbol(item.getText(7));
    field.setDecimalSymbol(item.getText(8));
    field.setGroupSymbol(item.getText(9));
    field.setNullString(item.getText(10));
    field.setTrimType(TextFileInputMeta.getTrimType(item.getText(11)));
    field.setRepeated("Y".equalsIgnoreCase(item.getText(12)));
    in.getInputFields()[i]=field;
  }
  for (int i=0; i < nrfilters; i++) {
    TableItem item=wFilter.getNonEmpty(i);
    TextFileFilter filter=new TextFileFilter();
    in.getFilter()[i]=filter;
    filter.setFilterString(item.getText(1));
    filter.setFilterPosition(Const.toInt(item.getText(2),-1));
    filter.setFilterLastLine("Y".equalsIgnoreCase(item.getText(3)));
  }
  in.setErrorIgnored(wErrorIgnored.getSelection());
  in.setErrorCountField(wErrorCount.getText());
  in.setErrorFieldsField(wErrorFields.getText());
  in.setErrorTextField(wErrorText.getText());
  in.setBadLineFilesDestinationDirectory(wBadDestDir.getText());
  in.setBadLineFilesExtension(wBadExt.getText());
  in.setErrorLineFilesDestinationDirectory(wErrorDestDir.getText());
  in.setErrorLineFilesExtension(wErrorExt.getText());
  in.setDataErrorLineFilesDestinationDirectory(wDataErrorDestDir.getText());
  in.setDataErrorLineFilesExtension(wDataErrorExt.getText());
  in.setLineNumberFilesDestinationDirectory(wLineNrDestDir.getText());
  in.setLineNumberFilesExtension(wLineNrExt.getText());
}
