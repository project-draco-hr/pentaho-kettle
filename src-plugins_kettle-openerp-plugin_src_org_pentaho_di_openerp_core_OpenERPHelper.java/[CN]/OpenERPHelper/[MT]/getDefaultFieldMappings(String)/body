{
  ArrayList<FieldMapping> mappings=new ArrayList<FieldMapping>();
  ObjectAdapter adapter=new ObjectAdapter(openERPConnection,model);
  FieldCollection fields=adapter.getFields();
  FieldMapping fieldMap=new FieldMapping();
  fieldMap.source_model=model;
  fieldMap.source_field="id";
  fieldMap.source_index=-1;
  fieldMap.target_model=model;
  fieldMap.target_field="id";
  fieldMap.target_field_label="Database ID";
  fieldMap.target_field_type=ValueMetaInterface.TYPE_INTEGER;
  mappings.add(fieldMap);
  for (  Field field : fields) {
    fieldMap=new FieldMapping();
    String fieldName=field.getName();
    fieldMap.source_model=model;
    fieldMap.source_field=fieldName;
    fieldMap.source_index=-1;
    fieldMap.target_model=model;
    fieldMap.target_field=fieldName;
    fieldMap.target_field_label=field.getDescription();
    Field.FieldType fieldType=field.getType();
switch (fieldType) {
case CHAR:
case TEXT:
case BINARY:
      fieldMap.target_field_type=ValueMetaInterface.TYPE_STRING;
    mappings.add(fieldMap);
  break;
case BOOLEAN:
fieldMap.target_field_type=ValueMetaInterface.TYPE_BOOLEAN;
mappings.add(fieldMap);
break;
case FLOAT:
fieldMap.target_field_type=ValueMetaInterface.TYPE_NUMBER;
mappings.add(fieldMap);
break;
case DATETIME:
case DATE:
fieldMap.target_field_type=ValueMetaInterface.TYPE_DATE;
mappings.add(fieldMap);
break;
case MANY2ONE:
FieldMapping newFieldMap=fieldMap.Clone();
newFieldMap.source_index=0;
newFieldMap.target_model=field.getRelation();
newFieldMap.target_field=fieldName + "_id";
newFieldMap.target_field_label=field.getDescription() + "/Id";
newFieldMap.target_field_type=ValueMetaInterface.TYPE_INTEGER;
mappings.add(newFieldMap);
newFieldMap=fieldMap.Clone();
newFieldMap.source_index=1;
newFieldMap.target_model=field.getRelation();
;
newFieldMap.target_field=fieldName + "_name";
newFieldMap.target_field_label=field.getDescription() + "/Name";
newFieldMap.target_field_type=ValueMetaInterface.TYPE_STRING;
mappings.add(newFieldMap);
break;
case ONE2MANY:
case MANY2MANY:
default :
fieldMap.target_field_type=ValueMetaInterface.TYPE_STRING;
mappings.add(fieldMap);
break;
}
}
return mappings;
}
