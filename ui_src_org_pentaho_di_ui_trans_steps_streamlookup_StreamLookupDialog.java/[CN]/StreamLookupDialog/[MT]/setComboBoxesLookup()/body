{
  Runnable fieldLoader=new Runnable(){
    public void run(){
      StepMeta lookupStepMeta=transMeta.findStep(wStep.getText());
      if (lookupStepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getStepFields(lookupStepMeta);
          Map<String,Integer> lookupFields=new HashMap<String,Integer>();
          for (int i=0; i < row.size(); i++) {
            lookupFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          final Map<String,Integer> fields=new HashMap<String,Integer>();
          fields.putAll(lookupFields);
          Set<String> keySet=fields.keySet();
          List<String> entries=new ArrayList<String>(keySet);
          String[] fieldNames=(String[])entries.toArray(new String[entries.size()]);
          Const.sortStrings(fieldNames);
          ciReturn[0].setComboValues(fieldNames);
          ciKey[1].setComboValues(fieldNames);
        }
 catch (        KettleException e) {
          logError("It was not possible to retrieve the list of fields for step [" + wStep.getText() + "]!");
        }
      }
    }
  }
;
  shell.getDisplay().asyncExec(fieldLoader);
}
