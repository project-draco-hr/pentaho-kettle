{
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"StreamLookupDialog.Log.GettingKeyInfo"));
  }
  if (input.getKeystream() != null) {
    for (int i=0; i < input.getKeystream().length; i++) {
      TableItem item=wKey.table.getItem(i);
      if (input.getKeystream()[i] != null) {
        item.setText(1,input.getKeystream()[i]);
      }
      if (input.getKeylookup()[i] != null) {
        item.setText(2,input.getKeylookup()[i]);
      }
    }
  }
  if (input.getValue() != null) {
    for (int i=0; i < input.getValue().length; i++) {
      TableItem item=wReturn.table.getItem(i);
      if (input.getValue()[i] != null) {
        item.setText(1,input.getValue()[i]);
      }
      if (input.getValueName()[i] != null && !input.getValueName()[i].equals(input.getValue()[i])) {
        item.setText(2,input.getValueName()[i]);
      }
      if (input.getValueDefault()[i] != null) {
        item.setText(3,input.getValueDefault()[i]);
      }
      item.setText(4,ValueMeta.getTypeDesc(input.getValueDefaultType()[i]));
    }
  }
  StreamInterface infoStream=input.getStepIOMeta().getInfoStreams().get(0);
  wStep.setText(Const.NVL(infoStream.getStepname(),""));
  boolean isPreserveMemory=input.isMemoryPreservationActive();
  wPreserveMemory.setSelection(isPreserveMemory);
  if (isPreserveMemory) {
    wSortedList.setEnabled(true);
    wIntegerPair.setEnabled(true);
  }
  wSortedList.setSelection(input.isUsingSortedList());
  wIntegerPair.setSelection(input.isUsingIntegerPair());
  wKey.setRowNums();
  wKey.optWidth(true);
  wReturn.setRowNums();
  wReturn.optWidth(true);
  wStepname.selectAll();
  wStepname.setFocus();
}
