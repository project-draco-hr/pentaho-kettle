{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      changedInDialog=false;
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"TableInputDialog.TableInput"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"TableInputDialog.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"System.Button.Preview"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,null);
  wlLimit=new Label(shell,SWT.RIGHT);
  wlLimit.setText(BaseMessages.getString(PKG,"TableInputDialog.LimitSize"));
  props.setLook(wlLimit);
  fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,0);
  fdlLimit.right=new FormAttachment(middle,-margin);
  fdlLimit.bottom=new FormAttachment(wOK,-2 * margin);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,0);
  fdLimit.right=new FormAttachment(100,0);
  fdLimit.bottom=new FormAttachment(wOK,-2 * margin);
  wLimit.setLayoutData(fdLimit);
  wlEachRow=new Label(shell,SWT.RIGHT);
  wlEachRow.setText(BaseMessages.getString(PKG,"TableInputDialog.ExecuteForEachRow"));
  props.setLook(wlEachRow);
  fdlEachRow=new FormData();
  fdlEachRow.left=new FormAttachment(0,0);
  fdlEachRow.right=new FormAttachment(middle,-margin);
  fdlEachRow.bottom=new FormAttachment(wLimit,-margin);
  wlEachRow.setLayoutData(fdlEachRow);
  wEachRow=new Button(shell,SWT.CHECK);
  props.setLook(wEachRow);
  fdEachRow=new FormData();
  fdEachRow.left=new FormAttachment(middle,0);
  fdEachRow.right=new FormAttachment(100,0);
  fdEachRow.bottom=new FormAttachment(wLimit,-margin);
  wEachRow.setLayoutData(fdEachRow);
  SelectionAdapter lsSelMod=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wEachRow.addSelectionListener(lsSelMod);
  wlDatefrom=new Label(shell,SWT.RIGHT);
  wlDatefrom.setText(BaseMessages.getString(PKG,"TableInputDialog.InsertDataFromStep"));
  props.setLook(wlDatefrom);
  fdlDatefrom=new FormData();
  fdlDatefrom.left=new FormAttachment(0,0);
  fdlDatefrom.right=new FormAttachment(middle,-margin);
  fdlDatefrom.bottom=new FormAttachment(wEachRow,-margin);
  wlDatefrom.setLayoutData(fdlDatefrom);
  wDatefrom=new CCombo(shell,SWT.BORDER);
  props.setLook(wDatefrom);
  List<StepMeta> previousSteps=transMeta.findPreviousSteps(transMeta.findStep(stepname));
  for (  StepMeta stepMeta : previousSteps) {
    wDatefrom.add(stepMeta.getName());
  }
  wDatefrom.addModifyListener(lsMod);
  fdDatefrom=new FormData();
  fdDatefrom.left=new FormAttachment(middle,0);
  fdDatefrom.right=new FormAttachment(100,0);
  fdDatefrom.bottom=new FormAttachment(wEachRow,-margin);
  wDatefrom.setLayoutData(fdDatefrom);
  wlVariables=new Label(shell,SWT.RIGHT);
  wlVariables.setText(BaseMessages.getString(PKG,"TableInputDialog.ReplaceVariables"));
  props.setLook(wlVariables);
  fdlVariables=new FormData();
  fdlVariables.left=new FormAttachment(0,0);
  fdlVariables.right=new FormAttachment(middle,-margin);
  fdlVariables.bottom=new FormAttachment(wDatefrom,-margin);
  wlVariables.setLayoutData(fdlVariables);
  wVariables=new Button(shell,SWT.CHECK);
  props.setLook(wVariables);
  fdVariables=new FormData();
  fdVariables.left=new FormAttachment(middle,0);
  fdVariables.right=new FormAttachment(100,0);
  fdVariables.bottom=new FormAttachment(wDatefrom,-margin);
  wVariables.setLayoutData(fdVariables);
  wVariables.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
      setSQLToolTip();
    }
  }
);
  wlLazyConversion=new Label(shell,SWT.RIGHT);
  wlLazyConversion.setText(BaseMessages.getString(PKG,"TableInputDialog.LazyConversion"));
  props.setLook(wlLazyConversion);
  fdlLazyConversion=new FormData();
  fdlLazyConversion.left=new FormAttachment(0,0);
  fdlLazyConversion.right=new FormAttachment(middle,-margin);
  fdlLazyConversion.bottom=new FormAttachment(wVariables,-margin);
  wlLazyConversion.setLayoutData(fdlLazyConversion);
  wLazyConversion=new Button(shell,SWT.CHECK);
  props.setLook(wLazyConversion);
  fdLazyConversion=new FormData();
  fdLazyConversion.left=new FormAttachment(middle,0);
  fdLazyConversion.right=new FormAttachment(100,0);
  fdLazyConversion.bottom=new FormAttachment(wVariables,-margin);
  wLazyConversion.setLayoutData(fdLazyConversion);
  wLazyConversion.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
      setSQLToolTip();
    }
  }
);
  wlPosition=new Label(shell,SWT.NONE);
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(0,0);
  fdlPosition.right=new FormAttachment(100,0);
  fdlPosition.bottom=new FormAttachment(wLazyConversion,-margin);
  wlPosition.setLayoutData(fdlPosition);
  wlSQL=new Label(shell,SWT.NONE);
  wlSQL.setText(BaseMessages.getString(PKG,"TableInputDialog.SQL"));
  props.setLook(wlSQL);
  fdlSQL=new FormData();
  fdlSQL.left=new FormAttachment(0,0);
  fdlSQL.top=new FormAttachment(wConnection,margin * 2);
  wlSQL.setLayoutData(fdlSQL);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"TableInputDialog.GetSQLAndSelectStatement"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wConnection,margin * 2);
  wbTable.setLayoutData(fdbTable);
  wSQL=new StyledTextComp(shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wSQL,Props.WIDGET_STYLE_FIXED);
  wSQL.addModifyListener(lsMod);
  fdSQL=new FormData();
  fdSQL.left=new FormAttachment(0,0);
  fdSQL.top=new FormAttachment(wbTable,margin);
  fdSQL.right=new FormAttachment(100,0);
  fdSQL.bottom=new FormAttachment(wlPosition,-margin);
  wSQL.setLayoutData(fdSQL);
  wSQL.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setSQLToolTip();
      setPosition();
    }
  }
);
  wSQL.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      setPosition();
    }
    public void keyReleased(    KeyEvent e){
      setPosition();
    }
  }
);
  wSQL.addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      setPosition();
    }
    public void focusLost(    FocusEvent e){
      setPosition();
    }
  }
);
  wSQL.addMouseListener(new MouseAdapter(){
    public void mouseDoubleClick(    MouseEvent e){
      setPosition();
    }
    public void mouseDown(    MouseEvent e){
      setPosition();
    }
    public void mouseUp(    MouseEvent e){
      setPosition();
    }
  }
);
  lineStyler=new SQLValuesHighlight();
  wSQL.addLineStyleListener(lineStyler);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsbTable=new Listener(){
    public void handleEvent(    Event e){
      getSQL();
    }
  }
;
  lsDateform=new Listener(){
    public void handleEvent(    Event e){
      setFags();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wPreview.addListener(SWT.Selection,lsPreview);
  wOK.addListener(SWT.Selection,lsOK);
  wbTable.addListener(SWT.Selection,lsbTable);
  wDatefrom.addListener(SWT.Selection,lsDateform);
  wDatefrom.addListener(SWT.FocusOut,lsDateform);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wLimit.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      checkCancel(e);
    }
  }
);
  getData();
  changedInDialog=false;
  input.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
