{
  try {
    SlaveServer slaveServer=new SlaveServer();
    SlaveServerDialog ssd=new SlaveServerDialog(shell,slaveServer);
    if (ssd.open()) {
      ObjectId slaveId=repository.getSlaveID(slaveServer.getName());
      if (slaveId != null) {
        MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
        mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.AlreadyExists.Message"));
        mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Create.Title"));
        mb.open();
      }
 else {
        if (slaveServer.getName() != null && !slaveServer.getName().equals("")) {
          repository.insertLogEntry("Creating new slave server '" + slaveServer.getName() + "'");
          repository.save(slaveServer,Const.VERSION_COMMENT_INITIAL_VERSION,null);
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
          mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Edit.InvalidName.Message"));
          mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Create.Title"));
          mb.open();
        }
      }
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Create.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Create.UnexpectedError.Message"),e);
  }
 finally {
    refreshSlaves();
  }
}
