{
  String slaveServerName="";
  try {
    Collection<UISlave> slaves=slavesTable.getSelectedItems();
    if (slaves != null && !slaves.isEmpty()) {
      SlaveServer slaveServer=((UISlave)slaves.toArray()[0]).getSlaveServer();
      slaveServerName=slaveServer.getName();
      ObjectId slaveId=repository.getSlaveID(slaveServer.getName());
      if (slaveId == null) {
        MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
        mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.DoesNotExists.Message"));
        mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.Title"));
        mb.open();
      }
 else {
        repository.deleteSlave(slaveId);
        refreshSlaves();
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
      mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.NoItemSelected.Message"));
      mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.UnexpectedError.Message") + slaveServerName + "]",e);
  }
}
