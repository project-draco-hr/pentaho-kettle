{
  boolean stopEnabled=false;
  TreeItem ti[]=wTree.getSelection();
  if (ti.length == 1) {
    TreeItem treeItem=ti[0];
    while (treeItem.getParentItem() != null)     treeItem=treeItem.getParentItem();
    int index=wTree.indexOf(treeItem);
    if (index < 0)     return;
    if (index < slaveServerStatus.getTransStatusList().size()) {
      SlaveServerTransStatus transStatus=slaveServerStatus.getTransStatusList().get(index);
      stopEnabled=transStatus.isRunning();
      StringBuffer message=new StringBuffer();
      String errorDescription=transStatus.getErrorDescription();
      if (!Const.isEmpty(errorDescription)) {
        message.append(errorDescription).append(Const.CR).append(Const.CR);
      }
      if (!Const.isEmpty(transStatus.getLoggingString())) {
        message.append(transStatus.getLoggingString()).append(Const.CR);
      }
      wText.setText(message.toString());
      wText.setTopIndex(wText.getLineCount());
    }
 else {
      index-=slaveServerStatus.getTransStatusList().size();
      SlaveServerJobStatus jobStatus=slaveServerStatus.getJobStatusList().get(index);
      stopEnabled=jobStatus.isRunning();
      StringBuffer message=new StringBuffer();
      String errorDescription=jobStatus.getErrorDescription();
      if (!Const.isEmpty(errorDescription)) {
        message.append(errorDescription).append(Const.CR).append(Const.CR);
      }
      if (!Const.isEmpty(jobStatus.getLoggingString())) {
        message.append(jobStatus.getLoggingString()).append(Const.CR);
      }
      wText.setText(message.toString());
      wText.setTopIndex(wText.getLineCount());
    }
  }
  wStop.setEnabled(stopEnabled);
  wStart.setEnabled(!stopEnabled);
}
