{
  if (wTree.isDisposed())   return;
  if (refreshBusy)   return;
  refreshBusy=true;
  log.logDetailed("Refresh");
  transParentItem.removeAll();
  jobParentItem.removeAll();
  try {
    slaveServerStatus=slaveServer.getStatus();
  }
 catch (  Exception e) {
    slaveServerStatus=new SlaveServerStatus("Error contacting server");
    slaveServerStatus.setErrorDescription(Const.getStackTracker(e));
    wText.setText(slaveServerStatus.getErrorDescription());
  }
  for (int i=0; i < slaveServerStatus.getTransStatusList().size(); i++) {
    SlaveServerTransStatus transStatus=slaveServerStatus.getTransStatusList().get(i);
    TreeItem transItem=new TreeItem(transParentItem,SWT.NONE);
    transItem.setText(0,transStatus.getTransName());
    transItem.setText(9,transStatus.getStatusDescription());
    transItem.setImage(GUIResource.getInstance().getImageTransGraph());
    try {
      log.logDetailed("Getting transformation status for [{0}] on server [{1}]",transStatus.getTransName(),slaveServer);
      SlaveServerTransStatus ts=slaveServer.getTransStatus(transStatus.getTransName());
      log.logDetailed("Finished receiving transformation status for [{0}] from server [{1}]",transStatus.getTransName(),slaveServer);
      List<StepStatus> stepStatusList=ts.getStepStatusList();
      transStatus.setStepStatusList(stepStatusList);
      transStatus.setLoggingString(ts.getLoggingString());
      for (int s=0; s < stepStatusList.size(); s++) {
        StepStatus stepStatus=stepStatusList.get(s);
        TreeItem stepItem=new TreeItem(transItem,SWT.NONE);
        stepItem.setText(stepStatus.getSpoonSlaveLogFields());
      }
    }
 catch (    Exception e) {
      transStatus.setErrorDescription("Unable to access transformation details : " + Const.CR + Const.getStackTracker(e));
    }
  }
  for (int i=0; i < slaveServerStatus.getJobStatusList().size(); i++) {
    SlaveServerJobStatus jobStatus=slaveServerStatus.getJobStatusList().get(i);
    TreeItem jobItem=new TreeItem(jobParentItem,SWT.NONE);
    jobItem.setText(0,jobStatus.getJobName());
    jobItem.setText(9,jobStatus.getStatusDescription());
    jobItem.setImage(GUIResource.getInstance().getImageJobGraph());
    try {
      log.logDetailed("Getting job status for [{0}] on server [{1}]",jobStatus.getJobName(),slaveServer);
      SlaveServerJobStatus ts=slaveServer.getJobStatus(jobStatus.getJobName());
      log.logDetailed("Finished receiving job status for [{0}] from server [{1}]",jobStatus.getJobName(),slaveServer);
      jobStatus.setLoggingString(ts.getLoggingString());
      Result result=ts.getResult();
      if (result != null) {
        jobItem.setText(2,"" + result.getNrLinesRead());
        jobItem.setText(3,"" + result.getNrLinesWritten());
        jobItem.setText(4,"" + result.getNrLinesInput());
        jobItem.setText(5,"" + result.getNrLinesOutput());
        jobItem.setText(6,"" + result.getNrLinesUpdated());
        jobItem.setText(7,"" + result.getNrLinesRejected());
        jobItem.setText(8,"" + result.getNrErrors());
      }
    }
 catch (    Exception e) {
      jobStatus.setErrorDescription("Unable to access transformation details : " + Const.CR + Const.getStackTracker(e));
    }
  }
  TreeMemory.setExpandedFromMemory(wTree,STRING_SLAVE_LOG_TREE_NAME + slaveServer.toString());
  TreeUtil.setOptimalWidthOnColumns(wTree);
  refreshBusy=false;
}
