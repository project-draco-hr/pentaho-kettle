{
  if (wTree.isDisposed())   return;
  if (refreshBusy)   return;
  refreshBusy=true;
  if (log.isDetailed())   log.logDetailed("Refresh");
  transParentItem.removeAll();
  jobParentItem.removeAll();
  try {
    slaveServerStatus=slaveServer.getStatus();
  }
 catch (  Exception e) {
    slaveServerStatus=new SlaveServerStatus("Error contacting server");
    slaveServerStatus.setErrorDescription(Const.getStackTracker(e));
    wText.setText(slaveServerStatus.getErrorDescription());
  }
  List<SlaveServerTransStatus> transStatusList=slaveServerStatus.getTransStatusList();
  for (int i=0; i < transStatusList.size(); i++) {
    SlaveServerTransStatus transStatus=transStatusList.get(i);
    TreeItem transItem=new TreeItem(transParentItem,SWT.NONE);
    transItem.setText(0,transStatus.getTransName());
    transItem.setText(9,transStatus.getStatusDescription());
    transItem.setText(13,Const.NVL(transStatus.getId(),""));
    transItem.setImage(GUIResource.getInstance().getImageTransGraph());
    transItem.setData("transStatus",transStatus);
  }
  for (int i=0; i < slaveServerStatus.getJobStatusList().size(); i++) {
    SlaveServerJobStatus jobStatus=slaveServerStatus.getJobStatusList().get(i);
    TreeItem jobItem=new TreeItem(jobParentItem,SWT.NONE);
    jobItem.setText(0,jobStatus.getJobName());
    jobItem.setText(9,jobStatus.getStatusDescription());
    jobItem.setText(13,Const.NVL(jobStatus.getId(),""));
    jobItem.setImage(GUIResource.getInstance().getImageJobGraph());
    jobItem.setData("jobStatus",jobStatus);
  }
  TreeMemory.setExpandedFromMemory(wTree,STRING_SLAVE_LOG_TREE_NAME + slaveServer.toString());
  TreeUtil.setOptimalWidthOnColumns(wTree);
  refreshBusy=false;
}
