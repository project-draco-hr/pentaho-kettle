{
  super(parent,style);
  this.shell=parent.getShell();
  this.display=shell.getDisplay();
  this.spoon=spoon;
  this.slaveServer=slaveServer;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  setLayout(formLayout);
  setVisible(true);
  spoon.props.setLook(this);
  SashForm sash=new SashForm(this,SWT.VERTICAL);
  spoon.props.setLook(sash);
  sash.setLayout(new FillLayout());
  colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("SpoonSlave.Column.Stepname"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Copynr"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Read"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Written"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Input"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Output"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Updated"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Rejected"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Errors"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Active"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Time"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.Speed"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("SpoonSlave.Column.PriorityBufferSizes"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  colinf[1].setAllignement(SWT.RIGHT);
  colinf[2].setAllignement(SWT.RIGHT);
  colinf[3].setAllignement(SWT.RIGHT);
  colinf[4].setAllignement(SWT.RIGHT);
  colinf[5].setAllignement(SWT.RIGHT);
  colinf[6].setAllignement(SWT.RIGHT);
  colinf[7].setAllignement(SWT.RIGHT);
  colinf[8].setAllignement(SWT.RIGHT);
  colinf[9].setAllignement(SWT.RIGHT);
  colinf[10].setAllignement(SWT.RIGHT);
  colinf[11].setAllignement(SWT.RIGHT);
  colinf[12].setAllignement(SWT.RIGHT);
  wTree=new Tree(sash,SWT.SINGLE | SWT.V_SCROLL | SWT.H_SCROLL);
  wTree.setHeaderVisible(true);
  TreeMemory.addTreeListener(wTree,STRING_SLAVE_LOG_TREE_NAME + slaveServer.toString());
  Rectangle bounds=spoon.tabfolder.getSwtTabset().getBounds();
  for (int i=0; i < colinf.length; i++) {
    ColumnInfo columnInfo=colinf[i];
    TreeColumn treeColumn=new TreeColumn(wTree,columnInfo.getAllignement());
    treeColumn.setText(columnInfo.getName());
    treeColumn.setWidth(bounds.width / colinf.length);
  }
  wTree.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      showLog();
    }
  }
);
  wText=new Text(sash,SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL| SWT.READ_ONLY| SWT.BORDER);
  spoon.props.setLook(wText);
  wText.setVisible(true);
  wRefresh=new Button(this,SWT.PUSH);
  wRefresh.setText(Messages.getString("SpoonSlave.Button.Refresh"));
  wRefresh.setEnabled(true);
  wRefresh.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      refreshViewAndLog();
    }
  }
);
  wError=new Button(this,SWT.PUSH);
  wError.setText(Messages.getString("SpoonSlave.Button.ShowErrorLines"));
  wError.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      showErrors();
    }
  }
);
  wStart=new Button(this,SWT.PUSH);
  wStart.setText(Messages.getString("SpoonSlave.Button.Start"));
  wStart.setEnabled(false);
  wStart.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      start();
    }
  }
);
  wStop=new Button(this,SWT.PUSH);
  wStop.setText(Messages.getString("SpoonSlave.Button.Stop"));
  wStop.setEnabled(false);
  wStop.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      stop();
    }
  }
);
  BaseStepDialog.positionBottomButtons(this,new Button[]{wRefresh,wStart,wStop,wError},Const.MARGIN,null);
  fdTree=new FormData();
  fdTree.left=new FormAttachment(0,0);
  fdTree.top=new FormAttachment(0,0);
  fdTree.right=new FormAttachment(100,0);
  fdTree.bottom=new FormAttachment(100,0);
  wTree.setLayoutData(fdTree);
  fdText=new FormData();
  fdText.left=new FormAttachment(0,0);
  fdText.top=new FormAttachment(0,0);
  fdText.right=new FormAttachment(100,0);
  fdText.bottom=new FormAttachment(100,0);
  wText.setLayoutData(fdText);
  fdSash=new FormData();
  fdSash.left=new FormAttachment(0,0);
  fdSash.top=new FormAttachment(0,0);
  fdSash.right=new FormAttachment(100,0);
  fdSash.bottom=new FormAttachment(wRefresh,-5);
  sash.setLayoutData(fdSash);
  pack();
  timer=new Timer("SpoonSlave: " + getMeta().getName());
  timerTask=new TimerTask(){
    public void run(){
      if (display != null && !display.isDisposed()) {
        display.asyncExec(new Runnable(){
          public void run(){
            refreshViewAndLog();
          }
        }
);
      }
    }
  }
;
  timer.schedule(timerTask,0L,UPDATE_TIME_VIEW);
  addDisposeListener(new DisposeListener(){
    public void widgetDisposed(    DisposeEvent e){
      timer.cancel();
    }
  }
);
}
