{
  try {
    rep.saveDatabaseMetaStepAttribute(idTransformation,idStep,"connection",this.databaseMeta);
    rep.saveStepAttribute(idTransformation,idStep,"objectName",this.objectName);
    rep.saveStepAttribute(idTransformation,idStep,"readBatchSize",this.readBatchSize);
    for (int i=0; i < getMappings().size(); i++) {
      FieldMapping map=this.getMappings().get(i);
      rep.saveStepAttribute(idTransformation,idStep,i,"source_object",map.source_object);
      rep.saveStepAttribute(idTransformation,idStep,i,"source_field",map.source_field);
      rep.saveStepAttribute(idTransformation,idStep,i,"source_index",map.source_index);
      rep.saveStepAttribute(idTransformation,idStep,i,"target_object_name",map.target_object_name);
      rep.saveStepAttribute(idTransformation,idStep,i,"target_field_name",map.target_field_name);
      rep.saveStepAttribute(idTransformation,idStep,i,"target_field_label",map.target_field_label);
      rep.saveStepAttribute(idTransformation,idStep,i,"target_field_type",map.target_field_type);
    }
    for (int i=0; i < getFilterList().size(); i++) {
      ReadFilter filter=this.getFilterList().get(i);
      rep.saveStepAttribute(idTransformation,idStep,i,"field_name",filter.field_name);
      rep.saveStepAttribute(idTransformation,idStep,i,"operator",filter.operator);
      rep.saveStepAttribute(idTransformation,idStep,i,"value",filter.value);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for idStep=" + idStep,e);
  }
}
