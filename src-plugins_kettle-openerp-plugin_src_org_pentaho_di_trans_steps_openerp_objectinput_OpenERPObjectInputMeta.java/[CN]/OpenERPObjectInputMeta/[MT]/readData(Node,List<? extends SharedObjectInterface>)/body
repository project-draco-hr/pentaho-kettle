{
  try {
    this.databaseMeta=DatabaseMeta.findDatabase(databases,XMLHandler.getTagValue(stepnode,"connection"));
    this.modelName=XMLHandler.getTagValue(stepnode,"modelName");
    this.readBatchSize=Integer.parseInt(XMLHandler.getTagValue(stepnode,"readBatchSize"));
    this.setMappings(new ArrayList<FieldMapping>());
    Node mappings=XMLHandler.getSubNode(stepnode,"mappings");
    int nrLevels=XMLHandler.countNodes(mappings,"mapping");
    for (int i=0; i < nrLevels; i++) {
      FieldMapping map=new FieldMapping();
      Node fnode=XMLHandler.getSubNodeByNr(mappings,"mapping",i);
      map.source_model=XMLHandler.getTagValue(fnode,"source_model");
      map.source_field=XMLHandler.getTagValue(fnode,"source_field");
      map.source_index=Integer.parseInt(XMLHandler.getTagValue(fnode,"source_index"));
      map.target_model=XMLHandler.getTagValue(fnode,"target_model");
      map.target_field=XMLHandler.getTagValue(fnode,"target_field");
      map.target_field_label=XMLHandler.getTagValue(fnode,"target_field_label");
      map.target_field_type=Integer.parseInt(XMLHandler.getTagValue(fnode,"target_field_type"));
      this.getMappings().add(map);
    }
    Node filters=XMLHandler.getSubNode(stepnode,"filters");
    int nrFilters=XMLHandler.countNodes(filters,"filter");
    for (int i=0; i < nrFilters; i++) {
      ReadFilter filter=new ReadFilter();
      Node fnode=XMLHandler.getSubNodeByNr(filters,"filter",i);
      filter.setOperator(XMLHandler.getTagValue(fnode,"operator"));
      filter.setFieldName(XMLHandler.getTagValue(fnode,"field_name"));
      filter.setComparator(XMLHandler.getTagValue(fnode,"comparator"));
      filter.setValue(XMLHandler.getTagValue(fnode,"value"));
      this.getFilterList().add(filter);
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
