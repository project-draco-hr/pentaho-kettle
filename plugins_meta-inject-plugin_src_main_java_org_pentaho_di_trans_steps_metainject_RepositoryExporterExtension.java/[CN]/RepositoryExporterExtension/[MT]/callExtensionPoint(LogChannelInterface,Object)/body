{
  Object[] metaInjectObjectArray=(Object[])object;
  TransMeta transMeta=(TransMeta)metaInjectObjectArray[0];
  Class<?> PKG=(Class<?>)metaInjectObjectArray[1];
  KettleFileRepository fileRep=(KettleFileRepository)metaInjectObjectArray[2];
  StepMeta stepMeta=(StepMeta)metaInjectObjectArray[3];
  if (stepMeta.isEtlMetaInject()) {
    MetaInjectMeta metaInjectMeta=(MetaInjectMeta)stepMeta.getStepMetaInterface();
    if (metaInjectMeta.getSpecificationMethod() == ObjectLocationSpecificationMethod.FILENAME) {
      try {
        TransMeta meta=MetaInjectMeta.loadTransformationMeta(metaInjectMeta,fileRep,fileRep.metaStore,transMeta);
        FileObject fileObject=KettleVFS.getFileObject(meta.getFilename());
        metaInjectMeta.setSpecificationMethod(ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME);
        metaInjectMeta.setFileName(null);
        metaInjectMeta.setTransName(meta.getName());
        metaInjectMeta.setDirectoryPath(Const.NVL(calcRepositoryDirectory(fileRep,fileObject),"/"));
      }
 catch (      Exception e) {
        log.logError(BaseMessages.getString(PKG,"Repository.Exporter.Log.UnableToLoadTransInMDI",metaInjectMeta.getName()),e);
      }
    }
  }
}
