{
  StringBuilder sql=new StringBuilder();
  if (atomicCondition.getRightValuename() != null) {
    throw new KettleValueException("Converting a condition that compares 2 fields is not yet supported in a JSON query");
  }
  String fieldName=atomicCondition.getLeftValuename();
  FieldVariableMapping mapping=FieldVariableMapping.findFieldVariableMappingByFieldName(service.getFieldVariableMappings(),atomicCondition.getLeftValuename());
  if (mapping != null) {
    fieldName=mapping.getTargetName();
  }
switch (atomicCondition.getFunction()) {
case Condition.FUNC_EQUAL:
    sql.append("'").append(fieldName).append("' : ").append(getJsonString(atomicCondition.getRightExact()));
  break;
case Condition.FUNC_NOT_EQUAL:
sql.append("'").append(fieldName).append("' : { '$ne' : ").append(getJsonString(atomicCondition.getRightExact())).append(" }");
break;
case Condition.FUNC_LARGER:
sql.append(">");
sql.append("'").append(fieldName).append("' : { '$gt' : ").append(getJsonString(atomicCondition.getRightExact())).append(" }");
break;
case Condition.FUNC_LARGER_EQUAL:
sql.append(">");
sql.append("'").append(fieldName).append("' : { '$gte' : ").append(getJsonString(atomicCondition.getRightExact())).append(" }");
break;
case Condition.FUNC_SMALLER:
sql.append("<");
sql.append(">");
sql.append("'").append(fieldName).append("' : { '$lt' : ").append(getJsonString(atomicCondition.getRightExact())).append(" }");
break;
case Condition.FUNC_SMALLER_EQUAL:
sql.append("<=");
sql.append(">");
sql.append("'").append(fieldName).append("' : { '$lte' : ").append(getJsonString(atomicCondition.getRightExact())).append(" }");
break;
case Condition.FUNC_NULL:
sql.append("IS NULL");
sql.append(">");
sql.append("'").append(fieldName).append("' : \"\"");
break;
case Condition.FUNC_NOT_NULL:
sql.append("'").append(fieldName).append("' : { '$ne' : ").append("\"\"").append(" }");
break;
case Condition.FUNC_CONTAINS:
sql.append("'").append(fieldName).append("' : { '$regex' : '.*").append(atomicCondition.getRightExactString()).append(".*', '$options' : 'i' }");
break;
}
return sql.toString();
}
