{
  for (  RepositoryOperation operation : operations) {
switch (operation) {
case READ_TRANSFORMATION:
      break;
case MODIFY_TRANSFORMATION:
    if (capabilities.isReadOnly()) {
      throw new KettleException(operation + " : repository is read-only");
    }
  break;
case DELETE_TRANSFORMATION:
if (capabilities.isReadOnly()) {
  throw new KettleException(operation + " : repository is read-only");
}
break;
case EXECUTE_TRANSFORMATION:
break;
case LOCK_TRANSFORMATION:
break;
case READ_JOB:
break;
case MODIFY_JOB:
if (capabilities.isReadOnly()) {
throw new KettleException(operation + " : repository is read-only");
}
break;
case DELETE_JOB:
if (capabilities.isReadOnly()) {
throw new KettleException(operation + " : repository is read-only");
}
break;
case EXECUTE_JOB:
break;
case LOCK_JOB:
break;
case MODIFY_DATABASE:
if (capabilities.isReadOnly()) {
throw new KettleException(operation + " : repository is read-only");
}
break;
case DELETE_DATABASE:
if (capabilities.isReadOnly()) {
throw new KettleException(operation + " : repository is read-only");
}
break;
case EXPLORE_DATABASE:
break;
case MODIFY_SLAVE_SERVER:
case MODIFY_CLUSTER_SCHEMA:
case MODIFY_PARTITION_SCHEMA:
if (capabilities.isReadOnly()) {
throw new KettleException(operation + " : repository is read-only");
}
break;
case DELETE_SLAVE_SERVER:
case DELETE_CLUSTER_SCHEMA:
case DELETE_PARTITION_SCHEMA:
if (capabilities.isReadOnly()) {
throw new KettleException(operation + " : repository is read-only");
}
break;
default :
throw new KettleException("Operation [" + operation + "] is unknown to the security handler.");
}
}
}
