{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobPing.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobPing.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlHostname=new Label(shell,SWT.RIGHT);
  wlHostname.setText(BaseMessages.getString(PKG,"JobPing.Hostname.Label"));
  props.setLook(wlHostname);
  fdlHostname=new FormData();
  fdlHostname.left=new FormAttachment(0,0);
  fdlHostname.top=new FormAttachment(wName,margin);
  fdlHostname.right=new FormAttachment(middle,0);
  wlHostname.setLayoutData(fdlHostname);
  wHostname=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wHostname);
  wHostname.addModifyListener(lsMod);
  fdHostname=new FormData();
  fdHostname.left=new FormAttachment(middle,0);
  fdHostname.top=new FormAttachment(wName,margin);
  fdHostname.right=new FormAttachment(100,0);
  wHostname.setLayoutData(fdHostname);
  wHostname.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wHostname.setToolTipText(jobMeta.environmentSubstitute(wHostname.getText()));
    }
  }
);
  wlPingType=new Label(shell,SWT.RIGHT);
  wlPingType.setText(BaseMessages.getString(PKG,"JobPing.PingType.Label"));
  props.setLook(wlPingType);
  fdlPingType=new FormData();
  fdlPingType.left=new FormAttachment(0,0);
  fdlPingType.right=new FormAttachment(middle,0);
  fdlPingType.top=new FormAttachment(wHostname,margin);
  wlPingType.setLayoutData(fdlPingType);
  wPingType=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wPingType.add(BaseMessages.getString(PKG,"JobPing.ClassicPing.Label"));
  wPingType.add(BaseMessages.getString(PKG,"JobPing.SystemPing.Label"));
  wPingType.add(BaseMessages.getString(PKG,"JobPing.BothPings.Label"));
  wPingType.select(1);
  props.setLook(wPingType);
  fdPingType=new FormData();
  fdPingType.left=new FormAttachment(middle,0);
  fdPingType.top=new FormAttachment(wHostname,margin);
  fdPingType.right=new FormAttachment(100,0);
  wPingType.setLayoutData(fdPingType);
  wPingType.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setPingType();
      jobEntry.setChanged();
    }
  }
);
  wlTimeOut=new Label(shell,SWT.RIGHT);
  wlTimeOut.setText(BaseMessages.getString(PKG,"JobPing.TimeOut.Label"));
  props.setLook(wlTimeOut);
  fdlTimeOut=new FormData();
  fdlTimeOut.left=new FormAttachment(0,0);
  fdlTimeOut.right=new FormAttachment(middle,0);
  fdlTimeOut.top=new FormAttachment(wPingType,margin);
  wlTimeOut.setLayoutData(fdlTimeOut);
  wTimeOut=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wlTimeOut.setToolTipText(BaseMessages.getString(PKG,"JobPing.TimeOut.Tooltip"));
  props.setLook(wTimeOut);
  wTimeOut.addModifyListener(lsMod);
  fdTimeOut=new FormData();
  fdTimeOut.left=new FormAttachment(middle,0);
  fdTimeOut.top=new FormAttachment(wPingType,margin);
  fdTimeOut.right=new FormAttachment(100,0);
  wTimeOut.setLayoutData(fdTimeOut);
  wlNbrPackets=new Label(shell,SWT.RIGHT);
  wlNbrPackets.setText(BaseMessages.getString(PKG,"JobPing.NrPackets.Label"));
  props.setLook(wlNbrPackets);
  fdlNbrPackets=new FormData();
  fdlNbrPackets.left=new FormAttachment(0,0);
  fdlNbrPackets.right=new FormAttachment(middle,0);
  fdlNbrPackets.top=new FormAttachment(wTimeOut,margin);
  wlNbrPackets.setLayoutData(fdlNbrPackets);
  wNbrPackets=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wNbrPackets);
  wNbrPackets.addModifyListener(lsMod);
  fdNbrPackets=new FormData();
  fdNbrPackets.left=new FormAttachment(middle,0);
  fdNbrPackets.top=new FormAttachment(wTimeOut,margin);
  fdNbrPackets.right=new FormAttachment(100,0);
  wNbrPackets.setLayoutData(fdNbrPackets);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  FormData fd=new FormData();
  fd.right=new FormAttachment(50,-10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wOK.setLayoutData(fd);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  fd=new FormData();
  fd.left=new FormAttachment(50,10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wCancel.setLayoutData(fd);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wHostname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setPingType();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobPingDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
