{
  List<JobMeta> jobs=new ArrayList<JobMeta>(files.size());
  List<NodeRepositoryFileData> filesData=pur.getDataForReadInBatch(files,NodeRepositoryFileData.class);
  List<VersionSummary> versions=pur.getVersionSummaryInBatch(files);
  Iterator<RepositoryFile> filesIter=files.iterator();
  Iterator<NodeRepositoryFileData> filesDataIter=filesData.iterator();
  Iterator<VersionSummary> versionsIter=versions.iterator();
  while ((monitor == null || !monitor.isCanceled()) && filesIter.hasNext()) {
    RepositoryFile file=filesIter.next();
    NodeRepositoryFileData fileData=filesDataIter.next();
    VersionSummary version=versionsIter.next();
    try {
      String dirPath=file.getPath().substring(0,file.getPath().lastIndexOf(RepositoryDirectory.DIRECTORY_SEPARATOR));
      log.logDetailed("Loading/Exporting job [{0} : {1}]  ({2})",dirPath,file.getTitle(),file.getPath());
      if (monitor != null) {
        monitor.subTask("Exporting job [" + file.getPath() + "]");
      }
      JobMeta jobMeta=buildJobMeta(file,findDirectory(dirPath),fileData,createObjectRevision(version));
      ExtensionPointHandler.callExtensionPoint(log,KettleExtensionPoint.JobMetaLoaded.id,jobMeta);
      jobs.add(jobMeta);
    }
 catch (    Exception ex) {
      log.logError("Unable to load job [" + file.getPath() + "]",ex);
    }
  }
  return jobs;
}
