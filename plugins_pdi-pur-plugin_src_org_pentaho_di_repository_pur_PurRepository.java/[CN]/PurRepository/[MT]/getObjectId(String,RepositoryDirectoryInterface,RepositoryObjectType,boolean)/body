{
  final String absPath=getPath(name,dir,objectType);
  RepositoryFile file=pur.getFile(absPath);
  if (file != null) {
    return new StringObjectId(file.getId().toString());
  }
 else   if (includedDeleteFiles) {
switch (objectType) {
case DATABASE:
{
        List<RepositoryFile> deletedChildren=pur.getDeletedFiles(getDatabaseMetaParentFolderPath(),name + RepositoryObjectType.DATABASE.getExtension());
        if (!deletedChildren.isEmpty()) {
          return new StringObjectId(deletedChildren.get(0).getId().toString());
        }
 else {
          return null;
        }
      }
case TRANSFORMATION:
{
      List<RepositoryFile> deletedChildren=pur.getDeletedFiles(dir.getObjectId().getId(),name + RepositoryObjectType.TRANSFORMATION.getExtension());
      if (!deletedChildren.isEmpty()) {
        return new StringObjectId(deletedChildren.get(0).getId().toString());
      }
 else {
        return null;
      }
    }
case PARTITION_SCHEMA:
{
    List<RepositoryFile> deletedChildren=pur.getDeletedFiles(getPartitionSchemaParentFolderPath(),name + RepositoryObjectType.PARTITION_SCHEMA.getExtension());
    if (!deletedChildren.isEmpty()) {
      return new StringObjectId(deletedChildren.get(0).getId().toString());
    }
 else {
      return null;
    }
  }
case SLAVE_SERVER:
{
  List<RepositoryFile> deletedChildren=pur.getDeletedFiles(getSlaveServerParentFolderPath(),name + RepositoryObjectType.SLAVE_SERVER.getExtension());
  if (!deletedChildren.isEmpty()) {
    return new StringObjectId(deletedChildren.get(0).getId().toString());
  }
 else {
    return null;
  }
}
case CLUSTER_SCHEMA:
{
List<RepositoryFile> deletedChildren=pur.getDeletedFiles(getClusterSchemaParentFolderPath(),name + RepositoryObjectType.CLUSTER_SCHEMA.getExtension());
if (!deletedChildren.isEmpty()) {
  return new StringObjectId(deletedChildren.get(0).getId().toString());
}
 else {
  return null;
}
}
case JOB:
{
List<RepositoryFile> deletedChildren=pur.getDeletedFiles(dir.getObjectId().getId(),name + RepositoryObjectType.JOB.getExtension());
if (!deletedChildren.isEmpty()) {
return new StringObjectId(deletedChildren.get(0).getId().toString());
}
 else {
return null;
}
}
default :
{
throw new UnsupportedOperationException("not implemented");
}
}
}
 else {
return null;
}
}
