{
  try {
    List<RepositoryElementMetaInterface> fileChildren=new ArrayList<RepositoryElementMetaInterface>();
    List<RepositoryFileTree> children=treeNode.getChildren();
    if (children != null) {
      for (      RepositoryFileTree child : children) {
        if (child.getFile().isFolder()) {
          RepositoryDirectory dir=new RepositoryDirectory(parentDir,child.getFile().getName());
          dir.setObjectId(new StringObjectId(child.getFile().getId().toString()));
          parentDir.addSubdirectory(dir);
          loadRepositoryDirectory(dir,child.getFile(),child);
        }
 else {
          RepositoryLock lock=unifiedRepositoryLockService.getLock(child.getFile());
          RepositoryObjectType objectType=getObjectType(child.getFile().getName());
          fileChildren.add(new EERepositoryObject(child,parentDir,null,objectType,null,lock,false));
        }
      }
      parentDir.setRepositoryObjects(fileChildren);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to load directory structure from repository",e);
  }
}
