{
  String path=null;
  if (repositoryDirectory != null && repositoryDirectory.getObjectId() != null) {
    path=repositoryDirectory.getPath();
  }
  if (objectType == null) {
    return path;
  }
  String sanitizedName=checkAndSanitize(name);
switch (objectType) {
case DATABASE:
{
      return getDatabaseMetaParentFolderPath() + RepositoryFile.SEPARATOR + sanitizedName+ RepositoryObjectType.DATABASE.getExtension();
    }
case TRANSFORMATION:
{
    if (path == null) {
      return null;
    }
 else {
      return path + (path.endsWith(RepositoryFile.SEPARATOR) ? "" : RepositoryFile.SEPARATOR) + sanitizedName+ RepositoryObjectType.TRANSFORMATION.getExtension();
    }
  }
case PARTITION_SCHEMA:
{
  return getPartitionSchemaParentFolderPath() + RepositoryFile.SEPARATOR + sanitizedName+ RepositoryObjectType.PARTITION_SCHEMA.getExtension();
}
case SLAVE_SERVER:
{
return getSlaveServerParentFolderPath() + RepositoryFile.SEPARATOR + sanitizedName+ RepositoryObjectType.SLAVE_SERVER.getExtension();
}
case CLUSTER_SCHEMA:
{
return getClusterSchemaParentFolderPath() + RepositoryFile.SEPARATOR + sanitizedName+ RepositoryObjectType.CLUSTER_SCHEMA.getExtension();
}
case JOB:
{
if (path == null) {
return null;
}
 else {
return path + (path.endsWith(RepositoryFile.SEPARATOR) ? "" : RepositoryFile.SEPARATOR) + sanitizedName+ RepositoryObjectType.JOB.getExtension();
}
}
default :
{
throw new UnsupportedOperationException("not implemented");
}
}
}
