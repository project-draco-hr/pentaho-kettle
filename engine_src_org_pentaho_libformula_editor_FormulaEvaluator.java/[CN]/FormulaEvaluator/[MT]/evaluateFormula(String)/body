{
  Map<String,FormulaMessage> messages=new HashMap<String,FormulaMessage>();
  if (expression == null || expression.trim().equals("")) {
    return messages;
  }
  try {
    LValue lValue=formulaParser.parse(expression.trim());
    if (lValue != null) {
      try {
        verifyLValue(lValue,messages);
      }
 catch (      Exception e) {
        FormulaMessage message=new FormulaMessage(FormulaMessage.TYPE_ERROR,"Parse Exception","Parsing error in formula : " + e.getMessage());
        messages.put(message.toString(),message);
      }
    }
  }
 catch (  ParseException parseException) {
    Token token=parseException.currentToken;
    boolean handled=false;
    if (token != null) {
      String problem=token.toString();
      if (problem != null) {
        FormulaMessage message=new FormulaMessage(FormulaMessage.TYPE_ERROR,new ParsePosition(token.beginLine,token.beginColumn,token.endLine,token.endColumn),"Parse Exception","Parse exception near '" + problem + "' on line "+ token.beginLine+ ", column "+ token.beginColumn+ "\n\n"+ parseException.getMessage());
        messages.put(message.toString(),message);
        handled=true;
      }
    }
    if (!handled) {
      if (parseException.getMessage() != null) {
        FormulaMessage message=new FormulaMessage(FormulaMessage.TYPE_ERROR,"Parse Exception","Parsing error in formula : " + parseException.getMessage());
        messages.put(message.toString(),message);
      }
 else {
        FormulaMessage message=new FormulaMessage(FormulaMessage.TYPE_ERROR,"Parse Exception","Parsing error in formula : " + parseException.toString());
        messages.put(message.toString(),message);
      }
    }
  }
catch (  Throwable e) {
    if (e.getMessage() != null) {
      FormulaMessage message=new FormulaMessage(FormulaMessage.TYPE_ERROR,"Parse Exception","Parsing error in formula : " + e.getMessage());
      messages.put(message.toString(),message);
    }
 else {
      FormulaMessage message=new FormulaMessage(FormulaMessage.TYPE_ERROR,"Parse Exception","Parsing error in formula : " + e.toString());
      messages.put(message.toString(),message);
    }
  }
  return messages;
}
