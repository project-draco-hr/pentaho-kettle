{
  JobHopMeta jobHopMeta=new JobHopMeta();
  try {
    RowMetaAndData r=getJobHop(id_job_hop);
    if (r != null) {
      long id_jobentry_copy_from=r.getInteger("ID_JOBENTRY_COPY_FROM",-1L);
      long id_jobentry_copy_to=r.getInteger("ID_JOBENTRY_COPY_TO",-1L);
      jobHopMeta.setEnabled(r.getBoolean("ENABLED",true));
      jobHopMeta.setEvaluation(r.getBoolean("EVALUATION",true));
      jobHopMeta.setConditional();
      if (r.getBoolean("UNCONDITIONAL",!jobHopMeta.getEvaluation())) {
        jobHopMeta.setUnconditional();
      }
      jobHopMeta.setFromEntry(JobMeta.findJobEntryCopy(jobcopies,new LongObjectId(id_jobentry_copy_from)));
      jobHopMeta.setToEntry(JobMeta.findJobEntryCopy(jobcopies,new LongObjectId(id_jobentry_copy_to)));
      return jobHopMeta;
    }
 else {
      throw new KettleException("Unable to find job hop with ID : " + id_job_hop);
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobHopMeta.Exception.UnableToLoadHopInfoRep","" + id_job_hop),dbe);
  }
}
