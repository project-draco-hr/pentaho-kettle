{
  boolean compatibilityMode=ValueMetaBase.convertStringToBoolean(space.getVariable(Const.KETTLE_COMPATIBILITY_MEMORY_GROUP_BY_SUM_AVERAGE_RETURN_NUMBER_TYPE,"N"));
  RowMetaInterface fields=new RowMeta();
  for (int i=0; i < groupField.length; i++) {
    ValueMetaInterface valueMeta=r.searchValueMeta(groupField[i]);
    if (valueMeta != null) {
      valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
      fields.addValueMeta(valueMeta);
    }
  }
  for (int i=0; i < subjectField.length; i++) {
    ValueMetaInterface subj=r.searchValueMeta(subjectField[i]);
    if (subj != null || aggregateType[i] == TYPE_GROUP_COUNT_ANY) {
      String value_name=aggregateField[i];
      int value_type=ValueMetaInterface.TYPE_NONE;
      int length=-1;
      int precision=-1;
switch (aggregateType[i]) {
case TYPE_GROUP_FIRST:
case TYPE_GROUP_LAST:
case TYPE_GROUP_FIRST_INCL_NULL:
case TYPE_GROUP_LAST_INCL_NULL:
case TYPE_GROUP_MIN:
case TYPE_GROUP_MAX:
        value_type=subj.getType();
      break;
case TYPE_GROUP_COUNT_DISTINCT:
case TYPE_GROUP_COUNT_ALL:
case TYPE_GROUP_COUNT_ANY:
    value_type=ValueMetaInterface.TYPE_INTEGER;
  break;
case TYPE_GROUP_CONCAT_COMMA:
value_type=ValueMetaInterface.TYPE_STRING;
break;
case TYPE_GROUP_SUM:
case TYPE_GROUP_AVERAGE:
if (!compatibilityMode && subj.isNumeric()) {
value_type=subj.getType();
}
 else {
value_type=ValueMetaInterface.TYPE_NUMBER;
}
break;
case TYPE_GROUP_MEDIAN:
case TYPE_GROUP_PERCENTILE:
case TYPE_GROUP_STANDARD_DEVIATION:
value_type=ValueMetaInterface.TYPE_NUMBER;
break;
case TYPE_GROUP_CONCAT_STRING:
value_type=ValueMetaInterface.TYPE_STRING;
break;
default :
break;
}
if (aggregateType[i] == TYPE_GROUP_COUNT_ALL || aggregateType[i] == TYPE_GROUP_COUNT_DISTINCT || aggregateType[i] == TYPE_GROUP_COUNT_ANY) {
length=ValueMetaInterface.DEFAULT_INTEGER_LENGTH;
precision=0;
}
 else if (aggregateType[i] == TYPE_GROUP_SUM && value_type != ValueMetaInterface.TYPE_INTEGER && value_type != ValueMetaInterface.TYPE_NUMBER && value_type != ValueMetaInterface.TYPE_BIGNUMBER) {
value_type=ValueMetaInterface.TYPE_NUMBER;
precision=-1;
length=-1;
}
if (value_type != ValueMetaInterface.TYPE_NONE) {
ValueMetaInterface v;
try {
v=ValueMetaFactory.createValueMeta(value_name,value_type);
}
 catch (KettlePluginException e) {
log.logError(BaseMessages.getString(PKG,"MemoryGroupByMeta.Exception.UnknownValueMetaType"),value_type,e);
v=new ValueMetaNone(value_name);
}
v.setOrigin(origin);
v.setLength(length,precision);
fields.addValueMeta(v);
}
}
}
r.clear();
r.addRowMeta(fields);
}
