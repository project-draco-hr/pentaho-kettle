{
  String metaClassName=stepClassname + "Meta";
  StringBuffer sourceBuffer=new StringBuffer(String.format("public %s() {\n\tsuper();\n",metaClassName));
  sourceBuffer.append("\tUsageParameter usageParameter;\n\n");
  for (  UsageParameter up : udjcm.getUsageParameters()) {
    sourceBuffer.append("\tusageParameter = new UsageParameter();\n");
    sourceBuffer.append(String.format("\tusageParameter.tag = \"%s\";\n",up.tag));
    sourceBuffer.append(String.format("\tusageParameter.value = \"%s\";\n",up.value));
    sourceBuffer.append(String.format("\tusageParameter.description = \"%s\";\n",up.description));
    sourceBuffer.append("\tusageParameters.add(usageParameter);\n\n");
  }
  for (  UserDefinedJavaClassDef def : udjcm.getDefinitions()) {
    sourceBuffer.append(String.format("\tdefinitions.add(new UDJCStepDef(UDJCStepDef.ClassType.%s, \"%s\",\"%s\"));\n",def.getClassType(),def.getClassName(),StringEscapeUtils.escapeJava(def.getSource())));
  }
  for (  org.pentaho.di.trans.steps.userdefinedjavaclass.StepDefinition sd : udjcm.getInfoStepDefinitions()) {
    sourceBuffer.append(String.format("\tinfoStepDefinitions.add(new StepDefinition(\"%s\", \"%s\", %s, \"%s\"));\n",sd.tag,sd.stepName,"null",sd.description));
  }
  for (  org.pentaho.di.trans.steps.userdefinedjavaclass.StepDefinition sd : udjcm.getTargetStepDefinitions()) {
    sourceBuffer.append(String.format("\ttargetStepDefinitions.add(new StepDefinition(\"%s\", \"%s\", %s, \"%s\"));\n",sd.tag,sd.stepName,"null",sd.description));
  }
  sourceBuffer.append("}\n");
  sourceBuffer.append("public StepInterface getStep(StepMeta stepMeta,StepDataInterface stepDataInterface, int copyNr,TransMeta transMeta, Trans trans) {\n");
  sourceBuffer.append(String.format("return new %s(stepMeta,stepDataInterface,copyNr,transMeta,trans);\n}\n",stepClassname));
  sourceBuffer.append("public StepDataInterface getStepData() { return new UserDefinedJavaClassData(); }\n");
  sourceBuffer.append("public void getFields(RowMetaInterface row, String originStepname, RowMetaInterface[] info, StepMeta nextStep, VariableSpace space) throws KettleStepException {\n");
  sourceBuffer.append("\ttry {\n");
  sourceBuffer.append(String.format("\t\tClass clazz = %s.class;\n",stepClassname));
  sourceBuffer.append("\t\tMethod getFieldsMethod = clazz.getMethod(\"getFields\", new Class[] {boolean.class, RowMetaInterface.class, String.class, RowMetaInterface[].class, StepMeta.class, VariableSpace.class, List.class});\n");
  sourceBuffer.append("\t\tgetFieldsMethod.invoke(null, new Object[] {isClearingResultFields(), row, originStepname, info, nextStep, space, getFieldInfo()});\n");
  sourceBuffer.append("\t} catch (Exception e) {\n");
  sourceBuffer.append(String.format("\t\tthrow new KettleStepException(\"Error executing %s.getFields(): \", e);\n",stepClassname));
  sourceBuffer.append("\t}\n}");
  String source=sourceBuffer.toString();
  ClassBodyEvaluator cbe=new ClassBodyEvaluator();
  cbe.setParentClassLoader(parentClassLoader);
  cbe.setClassName(metaClassName);
  StringReader sr;
  cbe.setExtendedType(UDJCStepMetaBase.class);
  sr=new StringReader(source);
  cbe.setDefaultImports(new String[]{"java.lang.reflect.*","java.util.*","org.pentaho.di.trans.*","org.pentaho.di.trans.steps.userdefinedjavaclass.*","org.pentaho.di.trans.steps.udjcstep.*","org.pentaho.di.trans.step.*","org.pentaho.di.core.row.*","org.pentaho.di.core.*","org.pentaho.di.core.exception.*","org.pentaho.di.core.variables.VariableSpace",stepClassname});
  cbe.cook(new Scanner(null,sr));
  return cbe.getClazz();
}
