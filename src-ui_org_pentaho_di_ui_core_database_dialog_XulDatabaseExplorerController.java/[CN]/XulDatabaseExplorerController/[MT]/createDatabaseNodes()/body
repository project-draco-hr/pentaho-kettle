{
  try {
    Database theDatabase=new Database(null,this.model.getDatabaseMeta());
    theDatabase.connect();
    GetDatabaseInfoProgressDialog gdipd=new GetDatabaseInfoProgressDialog((Shell)this.dbExplorerDialog.getRootObject(),this.model.getDatabaseMeta());
    DatabaseMetaInformation dmi=gdipd.open();
    DatabaseExplorerNode theDatabaseNode=new DatabaseExplorerNode();
    theDatabaseNode.setName(this.model.getDatabaseMeta().getName());
    theDatabaseNode.setImage(DATABASE_IMAGE);
    this.model.getDatabase().add(theDatabaseNode);
    DatabaseExplorerNode theSchemasNode=new DatabaseExplorerNode();
    theSchemasNode.setName(STRING_SCHEMAS);
    theSchemasNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theSchemasNode);
    DatabaseExplorerNode theTablesNode=new DatabaseExplorerNode();
    theTablesNode.setName(STRING_TABLES);
    theTablesNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theTablesNode);
    DatabaseExplorerNode theViewsNode=new DatabaseExplorerNode();
    theViewsNode.setName(STRING_VIEWS);
    theViewsNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theViewsNode);
    DatabaseExplorerNode theSynonymsNode=new DatabaseExplorerNode();
    theSynonymsNode.setName(STRING_SYNONYMS);
    theSynonymsNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theSynonymsNode);
    Schema[] schemas=dmi.getSchemas();
    if (schemas != null) {
      DatabaseExplorerNode theSchemaNode=null;
      for (int i=0; i < schemas.length; i++) {
        theSchemaNode=new DatabaseExplorerNode();
        theSchemaNode.setName(schemas[i].getSchemaName());
        theSchemaNode.setImage(SCHEMA_IMAGE);
        theSchemaNode.setIsSchema(true);
        theSchemasNode.add(theSchemaNode);
        String[] theTableNames=schemas[i].getItems();
        if (theTableNames != null) {
          for (int i2=0; i2 < theTableNames.length; i2++) {
            DatabaseExplorerNode theTableNode=new DatabaseExplorerNode();
            theTableNode.setIsTable(true);
            theTableNode.setSchema(schemas[i].getSchemaName());
            theTableNode.setName(theTableNames[i2]);
            theTableNode.setImage(TABLE_IMAGE);
            theSchemaNode.add(theTableNode);
            theTableNode.setParent(theSchemaNode);
          }
        }
      }
    }
    String[] theTableNames=theDatabase.getTablenames(false);
    DatabaseExplorerNode theTableNode=null;
    if (theTableNames != null) {
      for (int i=0; i < theTableNames.length; i++) {
        theTableNode=new DatabaseExplorerNode();
        theTableNode.setIsTable(true);
        theTableNode.setName(theTableNames[i]);
        theTableNode.setImage(TABLE_IMAGE);
        theTablesNode.add(theTableNode);
      }
    }
    String[] theViewNames=dmi.getViews();
    DatabaseExplorerNode theViewNode=null;
    if (theViewNames != null) {
      for (int i=0; i < theViewNames.length; i++) {
        theViewNode=new DatabaseExplorerNode();
        theViewNode.setIsTable(true);
        theViewNode.setName(theViewNames[i]);
        theViewNode.setImage(TABLE_IMAGE);
        theViewsNode.add(theViewNode);
      }
    }
    String[] theSynonymsNames=dmi.getSynonyms();
    DatabaseExplorerNode theSynonymNode=null;
    if (theViewNames != null) {
      for (int i=0; i < theViewNames.length; i++) {
        theSynonymNode=new DatabaseExplorerNode();
        theSynonymNode.setIsTable(true);
        theSynonymNode.setName(theViewNames[i]);
        theSynonymNode.setImage(TABLE_IMAGE);
        theSynonymsNode.add(theViewNode);
      }
    }
  }
 catch (  Exception e) {
    logger.info(e);
    e.printStackTrace();
  }
}
