{
  String retval="";
  if (isAtomic()) {
    for (int i=0; i < level; i++)     retval+="  ";
    if (show_operator && getOperator() != OPERATOR_NONE) {
      retval+=getOperatorDesc() + " ";
    }
 else {
      retval+="        ";
    }
    if (isNegated() && (show_negate || level > 0)) {
      retval+="NOT ( ";
    }
 else {
      retval+="      ";
    }
    if (function == FUNC_TRUE) {
      retval+=" TRUE";
    }
 else {
      retval+=left_valuename + " " + getFunctionDesc();
      if (function != FUNC_NULL && function != FUNC_NOT_NULL) {
        if (right_valuename != null) {
          retval+=" " + right_valuename;
        }
 else {
          retval+=" [" + (getRightExactString() == null ? "" : getRightExactString()) + "]";
        }
      }
    }
    if (isNegated() && (show_negate || level > 0))     retval+=" )";
    retval+=Const.CR;
  }
 else {
    if (isNegated() && (show_negate || level > 0)) {
      for (int i=0; i < level; i++)       retval+="  ";
      retval+="NOT" + Const.CR;
    }
    if (getOperator() != OPERATOR_NONE && (show_operator || level > 0)) {
      for (int i=0; i < level; i++)       retval+="  ";
      retval+=getOperatorDesc() + Const.CR;
    }
    for (int i=0; i < level; i++)     retval+="  ";
    retval+="(" + Const.CR;
    for (int i=0; i < list.size(); i++) {
      Condition cb=list.get(i);
      retval+=cb.toString(level + 1,true,i > 0);
    }
    for (int i=0; i < level; i++)     retval+="  ";
    retval+=")" + Const.CR;
  }
  return retval;
}
