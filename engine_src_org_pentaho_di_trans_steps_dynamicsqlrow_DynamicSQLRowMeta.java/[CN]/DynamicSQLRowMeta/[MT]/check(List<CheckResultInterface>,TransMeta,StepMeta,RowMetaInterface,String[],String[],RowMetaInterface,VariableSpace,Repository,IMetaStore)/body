{
  CheckResult cr;
  String error_message="";
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.ReceivingInfo"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.NoInputReceived"),stepMeta);
    remarks.add(cr);
  }
  if (Const.isEmpty(sqlfieldname)) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.SQLFieldNameMissing"),stepMeta);
    remarks.add(cr);
  }
 else {
    ValueMetaInterface vfield=prev.searchValueMeta(sqlfieldname);
    if (vfield == null)     cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.SQLFieldNotFound",sqlfieldname),stepMeta);
 else     cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.SQLFieldFound",sqlfieldname,vfield.getOrigin()),stepMeta);
    remarks.add(cr);
  }
  if (databaseMeta != null) {
    Database db=new Database(loggingObject,databaseMeta);
    databases=new Database[]{db};
    try {
      db.connect();
      if (sql != null && sql.length() != 0) {
        error_message="";
        RowMetaInterface r=db.getQueryFields(sql,true);
        if (r != null) {
          cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.QueryOK"),stepMeta);
          remarks.add(cr);
        }
 else {
          error_message=BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.InvalidDBQuery");
          cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
          remarks.add(cr);
        }
      }
    }
 catch (    KettleException e) {
      error_message=BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.ErrorOccurred") + e.getMessage();
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 finally {
      db.disconnect();
    }
  }
 else {
    error_message=BaseMessages.getString(PKG,"DynamicSQLRowMeta.CheckResult.InvalidConnection");
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
    remarks.add(cr);
  }
}
