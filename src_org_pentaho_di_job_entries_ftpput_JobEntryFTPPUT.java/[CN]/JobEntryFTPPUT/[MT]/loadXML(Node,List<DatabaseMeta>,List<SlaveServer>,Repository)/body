{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    serverName=XMLHandler.getTagValue(entrynode,"servername");
    serverPort=XMLHandler.getTagValue(entrynode,"serverport");
    userName=XMLHandler.getTagValue(entrynode,"username");
    password=XMLHandler.getTagValue(entrynode,"password");
    remoteDirectory=XMLHandler.getTagValue(entrynode,"remoteDirectory");
    localDirectory=XMLHandler.getTagValue(entrynode,"localDirectory");
    wildcard=XMLHandler.getTagValue(entrynode,"wildcard");
    binaryMode="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"binary"));
    timeout=Const.toInt(XMLHandler.getTagValue(entrynode,"timeout"),10000);
    remove="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"remove"));
    onlyPuttingNewFiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"only_new"));
    activeConnection="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"active"));
    controlEncoding=XMLHandler.getTagValue(entrynode,"control_encoding");
    if (controlEncoding == null) {
      controlEncoding=LEGACY_CONTROL_ENCODING;
    }
    ;
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException(Messages.getString("JobFTPPUT.Log.UnableToLoadFromXml"),xe);
  }
}
