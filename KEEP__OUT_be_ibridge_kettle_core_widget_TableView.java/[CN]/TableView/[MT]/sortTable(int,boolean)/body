{
  this.sortfield=sortField;
  this.sortingDescending=sortingDescending;
  try {
    table.setSortColumn(table.getColumn(sortfield));
    table.setSortDirection(sortingDescending ? SWT.DOWN : SWT.UP);
    TableItem[] items=table.getItems();
    Vector v=new Vector();
    for (int i=0; i < items.length; i++) {
      TableItem item=items[i];
      Row r=new Row();
      Color bg=item.getBackground();
      Value colorValue;
      if (bg.equals(defaultBackgroundColor)) {
        colorValue=new Value("bg");
        colorValue.setNull();
      }
 else {
        colorValue=new Value("bg " + bg.toString(),(long)((bg.getRed() << 16) + (bg.getGreen() << 8) + (bg.getBlue())));
        usedColors.put(colorValue.getName(),bg);
      }
      r.addValue(colorValue);
      for (int j=0; j < table.getColumnCount(); j++) {
        ColumnInfo colInfo;
        if (j > 0)         colInfo=columns[j - 1];
 else         colInfo=numberColumn;
        Value value=new Value("Col#" + j,item.getText(j));
        value.setType(colInfo.getValueType());
        r.addValue(value);
      }
      v.addElement(r);
    }
    quickSort(v);
    table.removeAll();
    Enumeration en=v.elements();
    while (en.hasMoreElements()) {
      Row r=(Row)en.nextElement();
      TableItem item=new TableItem(table,SWT.NONE);
      Value colorValue=r.getValue(0);
      if (!colorValue.isNull()) {
        Color bg=(Color)usedColors.get(colorValue.getName());
        if (bg != null) {
          item.setBackground(bg);
        }
      }
      for (int i=1; i < r.size(); i++) {
        Value value=r.getValue(i);
        if (value.getString() != null)         item.setText(i - 1,value.getString());
      }
    }
  }
 catch (  Exception e) {
    new ErrorDialog(this.getShell(),Messages.getString("TableView.ErrorDialog.title"),Messages.getString("TableView.ErrorDialog.description"),e);
  }
}
