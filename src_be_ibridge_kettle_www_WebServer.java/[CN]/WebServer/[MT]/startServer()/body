{
  server=new Server();
  server.addUserRealm(userRealm);
  Constraint constraint=new Constraint();
  constraint.setName(Constraint.__BASIC_AUTH);
  ;
  constraint.setRoles(new String[]{Constraint.ANY_ROLE});
  constraint.setAuthenticate(true);
  ConstraintMapping constraintMapping=new ConstraintMapping();
  constraintMapping.setConstraint(constraint);
  constraintMapping.setPathSpec("/*");
  SecurityHandler securityHandler=new SecurityHandler();
  securityHandler.setUserRealm(userRealm);
  securityHandler.setConstraintMappings(new ConstraintMapping[]{constraintMapping});
  ContextHandlerCollection contexts=new ContextHandlerCollection();
  server.setHandler(contexts);
  new ContextHandler(contexts,"/*").addHandler(securityHandler);
  new Context(contexts,AddTransServlet.CONTEXT_PATH,Context.SESSIONS).addServlet(new ServletHolder(new AddTransServlet(transformationMap)),"/*");
  new ContextHandler(contexts,GetRootHandler.CONTEXT_PATH).addHandler(new GetRootHandler());
  new ContextHandler(contexts,GetStatusHandler.CONTEXT_PATH).addHandler(new GetStatusHandler(transformationMap));
  new ContextHandler(contexts,GetTransStatusHandler.CONTEXT_PATH).addHandler(new GetTransStatusHandler(transformationMap));
  new ContextHandler(contexts,StartTransHandler.CONTEXT_PATH).addHandler(new StartTransHandler(transformationMap));
  new ContextHandler(contexts,StopTransHandler.CONTEXT_PATH).addHandler(new StopTransHandler(transformationMap));
  new ContextHandler(contexts,PrepareExecutionTransHandler.CONTEXT_PATH).addHandler(new PrepareExecutionTransHandler(transformationMap));
  new ContextHandler(contexts,StartExecutionTransHandler.CONTEXT_PATH).addHandler(new StartExecutionTransHandler(transformationMap));
  createListeners();
  server.start();
  server.join();
}
