{
  String rcode=string;
  if (!Utils.isEmpty(rcode)) {
switch (trimType) {
case StringOperationsMeta.TRIM_RIGHT:
      rcode=Const.rtrim(rcode);
    break;
case StringOperationsMeta.TRIM_LEFT:
  rcode=Const.ltrim(rcode);
break;
case StringOperationsMeta.TRIM_BOTH:
rcode=Const.trim(rcode);
break;
default :
break;
}
}
if (!Utils.isEmpty(rcode)) {
switch (lowerUpper) {
case StringOperationsMeta.LOWER_UPPER_LOWER:
rcode=rcode.toLowerCase();
break;
case StringOperationsMeta.LOWER_UPPER_UPPER:
rcode=rcode.toUpperCase();
break;
default :
break;
}
}
if (!Utils.isEmpty(rcode)) {
switch (padType) {
case StringOperationsMeta.PADDING_LEFT:
rcode=Const.Lpad(rcode,padChar,padLen);
break;
case StringOperationsMeta.PADDING_RIGHT:
rcode=Const.Rpad(rcode,padChar,padLen);
break;
default :
break;
}
}
if (!Utils.isEmpty(rcode)) {
switch (iniCap) {
case StringOperationsMeta.INIT_CAP_NO:
break;
case StringOperationsMeta.INIT_CAP_YES:
rcode=Const.initCap(rcode);
break;
default :
break;
}
}
if (!Utils.isEmpty(rcode)) {
switch (maskHTML) {
case StringOperationsMeta.MASK_ESCAPE_XML:
rcode=Const.escapeXml(rcode);
break;
case StringOperationsMeta.MASK_CDATA:
rcode=Const.protectXMLCDATA(rcode);
break;
case StringOperationsMeta.MASK_UNESCAPE_XML:
rcode=Const.unEscapeXml(rcode);
break;
case StringOperationsMeta.MASK_ESCAPE_HTML:
rcode=Const.escapeHtml(rcode);
break;
case StringOperationsMeta.MASK_UNESCAPE_HTML:
rcode=Const.unEscapeHtml(rcode);
break;
case StringOperationsMeta.MASK_ESCAPE_SQL:
rcode=Const.escapeSQL(rcode);
break;
default :
break;
}
}
if (!Utils.isEmpty(rcode)) {
switch (digits) {
case StringOperationsMeta.DIGITS_NONE:
break;
case StringOperationsMeta.DIGITS_ONLY:
rcode=Const.getDigitsOnly(rcode);
break;
case StringOperationsMeta.DIGITS_REMOVE:
rcode=Const.removeDigits(rcode);
break;
default :
break;
}
}
if (!Utils.isEmpty(rcode)) {
switch (removeSpecialCharacters) {
case StringOperationsMeta.REMOVE_SPECIAL_CHARACTERS_NONE:
break;
case StringOperationsMeta.REMOVE_SPECIAL_CHARACTERS_CR:
rcode=Const.removeCR(rcode);
break;
case StringOperationsMeta.REMOVE_SPECIAL_CHARACTERS_LF:
rcode=Const.removeLF(rcode);
break;
case StringOperationsMeta.REMOVE_SPECIAL_CHARACTERS_CRLF:
rcode=Const.removeCRLF(rcode);
break;
case StringOperationsMeta.REMOVE_SPECIAL_CHARACTERS_TAB:
rcode=Const.removeTAB(rcode);
break;
case StringOperationsMeta.REMOVE_SPECIAL_CHARACTERS_ESPACE:
rcode=rcode.replace(" ","");
break;
default :
break;
}
}
return rcode;
}
