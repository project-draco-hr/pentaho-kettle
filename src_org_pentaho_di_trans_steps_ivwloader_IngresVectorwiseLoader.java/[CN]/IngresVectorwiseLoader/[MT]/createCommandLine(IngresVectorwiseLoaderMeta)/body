{
  StringBuffer sb=new StringBuffer(300);
  if (!Const.isEmpty(meta.getSqlPath())) {
    try {
      FileObject fileObject=KettleVFS.getFileObject(environmentSubstitute(meta.getSqlPath()),getTransMeta());
      String sqlexec=Const.optionallyQuoteStringByOS(KettleVFS.getFilename(fileObject));
      sb.append(sqlexec);
    }
 catch (    KettleFileException ex) {
      throw new KettleException("Error retrieving 'sql' command string",ex);
    }
  }
 else {
    if (isDetailed())     logDetailed("sql defaults to system path");
    sb.append("sql");
  }
  DatabaseMeta dm=meta.getDatabaseMeta();
  if (dm != null) {
    if (meta.isUseDynamicVNode()) {
      String port=environmentSubstitute(Const.NVL(dm.getDatabasePortNumberString(),"")).replace("7","");
      String userName=environmentSubstitute(Const.NVL(dm.getDatabaseInterface().getUsername(),""));
      String passWord=Encr.decryptPasswordOptionallyEncrypted(environmentSubstitute(Const.NVL(dm.getDatabaseInterface().getPassword(),"")));
      String hostName=environmentSubstitute(Const.NVL(dm.getDatabaseInterface().getHostname(),""));
      String dnName=environmentSubstitute(Const.NVL(dm.getDatabaseName(),""));
      sb.append(" @").append(hostName).append(",").append(port).append("[").append(userName).append(",").append(passWord).append("]::").append(dnName);
    }
 else {
      String dnName=environmentSubstitute(Const.NVL(dm.getDatabaseName(),""));
      sb.append(" ").append(dnName);
    }
  }
 else {
    throw new KettleException("No connection specified");
  }
  return sb.toString();
}
