{
  Properties sp=new Properties();
  KettleVariables kettleVariables=KettleVariables.getInstance();
  sp.putAll(kettleVariables.getProperties());
  sp.putAll(System.getProperties());
  List list=jobMeta.getUsedVariables();
  for (int i=0; i < list.size(); i++) {
    String varName=(String)list.get(i);
    String varValue=sp.getProperty(varName,"");
    System.out.println("variable [" + varName + "] is defined as : "+ varValue);
    if (variables.getRowMeta().indexOfValue(varName) < 0 && !varName.startsWith(Const.INTERNAL_VARIABLE_PREFIX)) {
      variables.addValue(new ValueMeta(varName,ValueMetaInterface.TYPE_STRING),varValue);
    }
  }
  EnterStringsDialog esd=new EnterStringsDialog(shell,SWT.NONE,variables);
  esd.setTitle(Messages.getString("Chef.Dialog.SetVariables.Title"));
  esd.setMessage(Messages.getString("Chef.Dialog.SetVariables.Message"));
  esd.setReadOnly(false);
  if (esd.open() != null) {
    for (int i=0; i < variables.size(); i++) {
      ValueMetaInterface valueMeta=variables.getValueMeta(i);
      try {
        String varval=variables.getString(i,"");
        if (!Const.isEmpty(varval)) {
          kettleVariables.setVariable(valueMeta.getName(),varval);
          System.out.println("Variable ${" + valueMeta.getName() + "} set to ["+ varval+ "] for thread ["+ Thread.currentThread()+ "]");
        }
      }
 catch (      KettleValueException e) {
      }
    }
  }
}
