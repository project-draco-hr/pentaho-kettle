{
  JobEntryLoader jobLoader=JobEntryLoader.getInstance();
  JobPlugin jobPlugin=null;
  try {
    jobPlugin=jobLoader.findJobEntriesWithDescription(type_desc);
    if (jobPlugin != null) {
      String basename=type_desc;
      int nr=jobMeta.generateJobEntryNameNr(basename);
      String entry_name=basename + " " + nr;
      JobEntryInterface jei=jobLoader.getJobEntryClass(jobPlugin);
      jei.setName(entry_name);
      if (openit) {
        JobEntryDialogInterface d=jei.getDialog(shell,jei,jobMeta,entry_name,rep);
        if (d.open() != null) {
          JobEntryCopy jge=new JobEntryCopy();
          jge.setEntry(jei);
          jge.setLocation(50,50);
          jge.setNr(0);
          jobMeta.addJobEntry(jge);
          addUndoNew(new JobEntryCopy[]{jge},new int[]{jobMeta.indexOfJobEntry(jge)});
          refreshGraph();
          refreshTree();
          return jge;
        }
 else {
          return null;
        }
      }
 else {
        JobEntryCopy jge=new JobEntryCopy();
        jge.setEntry(jei);
        jge.setLocation(50,50);
        jge.setNr(0);
        jobMeta.addJobEntry(jge);
        addUndoNew(new JobEntryCopy[]{jge},new int[]{jobMeta.indexOfJobEntry(jge)});
        refreshGraph();
        refreshTree();
        return jge;
      }
    }
 else {
      return null;
    }
  }
 catch (  Throwable e) {
    new ErrorDialog(shell,Messages.getString("Chef.ErrorDialog.UnexpectedErrorCreatingNewChefGraphEntry.Title"),Messages.getString("Chef.ErrorDialog.UnexpectedErrorCreatingNewChefGraphEntry.Message"),new Exception(e));
    return null;
  }
}
