{
  ResultSet result=thinDbmd.getImportedKeys(randomString(),randomString(),randomString());
  assertTrue(isResultSetEmpty(result));
  ResultSetMetaData resultMetaData=result.getMetaData();
  assertEquals(14,resultMetaData.getColumnCount());
  assertEquals("PKTABLE_CAT",resultMetaData.getColumnName(1));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(1));
  assertEquals("PKTABLE_SCHEM",resultMetaData.getColumnName(2));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(2));
  assertEquals("PKTABLE_NAME",resultMetaData.getColumnName(3));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(3));
  assertEquals("PKCOLUMN_NAME",resultMetaData.getColumnName(4));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(4));
  assertEquals("FKTABLE_CAT",resultMetaData.getColumnName(5));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(5));
  assertEquals("FKTABLE_SCHEM",resultMetaData.getColumnName(6));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(6));
  assertEquals("FKTABLE_NAME",resultMetaData.getColumnName(7));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(7));
  assertEquals("FKCOLUMN_NAME",resultMetaData.getColumnName(8));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(8));
  assertEquals("KEY_SEQ",resultMetaData.getColumnName(9));
  assertEquals(Types.BIGINT,resultMetaData.getColumnType(9));
  assertEquals("UPDATE_RULE",resultMetaData.getColumnName(10));
  assertEquals(Types.BIGINT,resultMetaData.getColumnType(10));
  assertEquals("DELETE_RULE",resultMetaData.getColumnName(11));
  assertEquals(Types.BIGINT,resultMetaData.getColumnType(11));
  assertEquals("FK_NAME",resultMetaData.getColumnName(12));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(12));
  assertEquals("PK_NAME",resultMetaData.getColumnName(13));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(13));
  assertEquals("DEFERRABILITY",resultMetaData.getColumnName(14));
  assertEquals(Types.BIGINT,resultMetaData.getColumnType(14));
}
