{
  doReturn(new ArrayList<ThinServiceInformation>()).when(thinDbmd).getServiceInformation();
  ResultSet result=thinDbmd.getTables(randomString(),randomString(),randomString(),new String[]{randomString()});
  assertTrue(isResultSetEmpty(result));
  ResultSetMetaData resultMetaData=result.getMetaData();
  result=thinDbmd.getTables(randomString(),randomString(),randomString(),null);
  assertTrue(isResultSetEmpty(result));
  resultMetaData=result.getMetaData();
  assertEquals(10,resultMetaData.getColumnCount());
  assertEquals("TABLE_CAT",resultMetaData.getColumnName(1));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(1));
  assertEquals("TABLE_SCHEM",resultMetaData.getColumnName(2));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(2));
  assertEquals("TABLE_NAME",resultMetaData.getColumnName(3));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(3));
  assertEquals("TABLE_TYPE",resultMetaData.getColumnName(4));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(4));
  assertEquals("REMARKS",resultMetaData.getColumnName(5));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(5));
  assertEquals("TYPE_CAT",resultMetaData.getColumnName(6));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(6));
  assertEquals("TYPE_SCHEM",resultMetaData.getColumnName(7));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(7));
  assertEquals("TYPE_NAME",resultMetaData.getColumnName(8));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(8));
  assertEquals("SELF_REFERENCING_COL_NAME",resultMetaData.getColumnName(9));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(9));
  assertEquals("REF_GENERATION",resultMetaData.getColumnName(10));
  assertEquals(Types.VARCHAR,resultMetaData.getColumnType(10));
}
