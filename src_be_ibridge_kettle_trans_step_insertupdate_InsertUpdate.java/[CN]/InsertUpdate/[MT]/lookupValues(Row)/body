{
  Row lu;
  Row add;
  debug=Messages.getString("InsertUpdate.Debug.StartOfLookupValues");
  if (first) {
    debug=Messages.getString("InsertUpdate.Debug.FirstRunInitialize");
    first=false;
    data.dblup.setLookup(meta.getTableName(),meta.getKeyLookup(),meta.getKeyCondition(),meta.getUpdateLookup(),null,null);
    Row ins=new Row();
    for (int i=0; i < meta.getUpdateLookup().length; i++) {
      if (ins.searchValueIndex(meta.getUpdateLookup()[i]) < 0) {
        ins.addValue(new Value(meta.getUpdateLookup()[i]));
      }
    }
    data.dbins.prepareInsert(ins,meta.getTableName());
    if (!meta.isUpdateBypassed()) {
      data.dbupd.prepareUpdate(meta.getTableName(),meta.getKeyLookup(),meta.getKeyCondition(),meta.getUpdateLookup());
    }
    debug=Messages.getString("InsertUpdate.Debug.FirstRunLookupValues");
    if (log.isDetailed())     logDetailed(Messages.getString("InsertUpdate.Log.CheckingRow") + row.toString());
    data.keynrs=new int[meta.getKeyStream().length];
    data.keynrs2=new int[meta.getKeyStream().length];
    for (int i=0; i < meta.getKeyStream().length; i++) {
      data.keynrs[i]=row.searchValueIndex(meta.getKeyStream()[i]);
      if (data.keynrs[i] < 0 && !"IS NULL".equalsIgnoreCase(meta.getKeyCondition()[i]) && !"IS NOT NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(Messages.getString("InsertUpdate.Exception.FieldRequired",meta.getKeyStream()[i]));
      }
      data.keynrs2[i]=row.searchValueIndex(meta.getKeyStream2()[i]);
      if (data.keynrs2[i] < 0 && "BETWEEN".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(Messages.getString("InsertUpdate.Exception.FieldRequired",meta.getKeyStream2()[i]));
      }
      if (log.isDebug())       logDebug(Messages.getString("InsertUpdate.Log.FieldHasDataNumbers",meta.getKeyStream()[i]) + data.keynrs[i]);
    }
    debug=Messages.getString("InsertUpdate.Debug.FirstRunLookupCompareFields");
    data.valuenrs=new int[meta.getUpdateLookup().length];
    for (int i=0; i < meta.getUpdateLookup().length; i++) {
      data.valuenrs[i]=row.searchValueIndex(meta.getUpdateStream()[i]);
      if (data.valuenrs[i] < 0) {
        throw new KettleStepException(Messages.getString("InsertUpdate.Exception.FieldRequired",meta.getUpdateStream()[i]));
      }
      if (log.isDebug())       logDebug(Messages.getString("InsertUpdate.Log.FieldHasDataNumbers",meta.getUpdateStream()[i]) + data.valuenrs[i]);
    }
  }
  lu=new Row();
  for (int i=0; i < meta.getKeyStream().length; i++) {
    if (data.keynrs[i] >= 0) {
      lu.addValue(row.getValue(data.keynrs[i]));
    }
    if (data.keynrs2[i] >= 0) {
      lu.addValue(row.getValue(data.keynrs2[i]));
    }
  }
  debug="setValues()";
  data.dblup.setValuesLookup(lu);
  if (log.isDebug())   logDebug(Messages.getString("InsertUpdate.Log.ValuesSetForLookup") + lu.toString());
  debug="getLookup()";
  add=data.dblup.getLookup();
  linesInput++;
  if (add == null) {
    if (log.isRowLevel())     logRowlevel(Messages.getString("InsertUpdate.InsertRow") + row.toString());
    debug="setValuesInsert()";
    Row ins=new Row();
    for (int i=0; i < data.valuenrs.length; i++) {
      ins.addValue(row.getValue(data.valuenrs[i]));
    }
    data.dbins.setValuesInsert(ins);
    debug="insertRow()";
    data.dbins.insertRow();
    linesOutput++;
  }
 else {
    if (!meta.isUpdateBypassed()) {
      if (log.isRowLevel())       logRowlevel(Messages.getString("InsertUpdate.Log.FoundRowForUpdate") + row.toString());
      debug=Messages.getString("InsertUpdate.Debug.CompareForUpdate");
      boolean update=false;
      for (int i=0; i < data.valuenrs.length; i++) {
        Value rowvalue=row.getValue(data.valuenrs[i]);
        lu.addValue(i,rowvalue);
        Value retvalue=add.getValue(i);
        if (!retvalue.equals(rowvalue)) {
          update=true;
        }
      }
      if (update) {
        if (log.isRowLevel())         logRowlevel(Messages.getString("InsertUpdate.Log.UpdateRow") + lu.toString());
        debug="setValuesUpdate()";
        data.dbupd.setValuesUpdate(lu);
        debug="updateRow()";
        data.dbupd.updateRow();
        linesUpdated++;
      }
 else {
        linesSkipped++;
      }
    }
 else {
      if (log.isRowLevel())       logRowlevel(Messages.getString("InsertUpdate.Log.UpdateBypassed") + row.toString());
      linesSkipped++;
    }
  }
}
