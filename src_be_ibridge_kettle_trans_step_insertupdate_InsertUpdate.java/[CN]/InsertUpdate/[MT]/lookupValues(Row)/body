{
  Row lu;
  Row add;
  debug="Start of lookupValues";
  if (first) {
    debug="first run, initialize";
    first=false;
    data.db.setLookup(meta.getTableName(),meta.getKeyLookup(),meta.getKeyCondition(),meta.getUpdateLookup(),null,null);
    Row ins=new Row();
    for (int i=0; i < meta.getUpdateLookup().length; i++) {
      if (ins.searchValueIndex(meta.getUpdateLookup()[i]) < 0) {
        ins.addValue(new Value(meta.getUpdateLookup()[i]));
      }
    }
    data.db.prepareInsert(ins,meta.getTableName());
    if (!meta.isUpdateBypassed()) {
      List updateColumns=new ArrayList();
      for (int i=0; i < meta.getUpdate().length; i++) {
        if (meta.getUpdate()[i].booleanValue()) {
          updateColumns.add(meta.getUpdateLookup()[i]);
        }
      }
      data.db.prepareUpdate(meta.getTableName(),meta.getKeyLookup(),meta.getKeyCondition(),(String[])updateColumns.toArray(new String[]{}));
    }
    debug="first run, lookup values, field positions, etc.";
    if (log.isDetailed())     logDetailed(Messages.getString("InsertUpdate.Log.CheckingRow") + row.toString());
    data.keynrs=new int[meta.getKeyStream().length];
    data.keynrs2=new int[meta.getKeyStream().length];
    for (int i=0; i < meta.getKeyStream().length; i++) {
      data.keynrs[i]=row.searchValueIndex(meta.getKeyStream()[i]);
      if (data.keynrs[i] < 0 && !"IS NULL".equalsIgnoreCase(meta.getKeyCondition()[i]) && !"IS NOT NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(Messages.getString("InsertUpdate.Exception.FieldRequired",meta.getKeyStream()[i]));
      }
      data.keynrs2[i]=row.searchValueIndex(meta.getKeyStream2()[i]);
      if (data.keynrs2[i] < 0 && "BETWEEN".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(Messages.getString("InsertUpdate.Exception.FieldRequired",meta.getKeyStream2()[i]));
      }
      if (log.isDebug())       logDebug(Messages.getString("InsertUpdate.Log.FieldHasDataNumbers",meta.getKeyStream()[i]) + data.keynrs[i]);
    }
    debug="first run, lookup compare fields, positions, etc.";
    data.valuenrs=new int[meta.getUpdateLookup().length];
    for (int i=0; i < meta.getUpdateLookup().length; i++) {
      data.valuenrs[i]=row.searchValueIndex(meta.getUpdateStream()[i]);
      if (data.valuenrs[i] < 0) {
        throw new KettleStepException(Messages.getString("InsertUpdate.Exception.FieldRequired",meta.getUpdateStream()[i]));
      }
      if (log.isDebug())       logDebug(Messages.getString("InsertUpdate.Log.FieldHasDataNumbers",meta.getUpdateStream()[i]) + data.valuenrs[i]);
    }
  }
  lu=new Row();
  for (int i=0; i < meta.getKeyStream().length; i++) {
    if (data.keynrs[i] >= 0) {
      lu.addValue(row.getValue(data.keynrs[i]));
    }
    if (data.keynrs2[i] >= 0) {
      lu.addValue(row.getValue(data.keynrs2[i]));
    }
  }
  debug="setValues()";
  data.db.setValuesLookup(lu);
  if (log.isDebug())   logDebug(Messages.getString("InsertUpdate.Log.ValuesSetForLookup") + lu.toString());
  debug="getLookup()";
  add=data.db.getLookup();
  linesInput++;
  if (add == null) {
    if (log.isRowLevel())     logRowlevel(Messages.getString("InsertUpdate.InsertRow") + row.toString());
    debug="setValuesInsert()";
    Row ins=new Row();
    for (int i=0; i < data.valuenrs.length; i++) {
      ins.addValue(row.getValue(data.valuenrs[i]));
    }
    data.db.setValuesInsert(ins);
    debug="insertRow()";
    data.db.insertRow();
    linesOutput++;
  }
 else {
    if (!meta.isUpdateBypassed()) {
      if (log.isRowLevel())       logRowlevel(Messages.getString("InsertUpdate.Log.FoundRowForUpdate") + row.toString());
      debug="compare for update";
      boolean update=false;
      int j=0;
      for (int i=0; i < data.valuenrs.length; i++) {
        if (meta.getUpdate()[i].booleanValue()) {
          Value rowvalue=row.getValue(data.valuenrs[i]);
          lu.addValue(j++,rowvalue);
          Value retvalue=add.getValue(i);
          if (!retvalue.equals(rowvalue)) {
            update=true;
          }
        }
      }
      if (update) {
        if (log.isRowLevel())         logRowlevel(Messages.getString("InsertUpdate.Log.UpdateRow") + lu.toString());
        debug="setValuesUpdate()";
        data.db.setValuesUpdate(lu);
        debug="updateRow()";
        data.db.updateRow();
        linesUpdated++;
      }
 else {
        linesSkipped++;
      }
    }
 else {
      if (log.isRowLevel())       logRowlevel(Messages.getString("InsertUpdate.Log.UpdateBypassed") + row.toString());
      linesSkipped++;
    }
  }
}
