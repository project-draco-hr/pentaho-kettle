{
  StepMockHelper<OraBulkLoaderMeta,OraBulkLoaderData> stepMockHelper=new StepMockHelper<OraBulkLoaderMeta,OraBulkLoaderData>("TEST_CREATE_COMMANDLINE",OraBulkLoaderMeta.class,OraBulkLoaderData.class);
  when(stepMockHelper.logChannelInterfaceFactory.create(any(),any(LoggingObjectInterface.class))).thenReturn(stepMockHelper.logChannelInterface);
  when(stepMockHelper.trans.isRunning()).thenReturn(true);
  OraBulkLoader oraBulkLoader=new OraBulkLoader(stepMockHelper.stepMeta,stepMockHelper.stepDataInterface,0,stepMockHelper.transMeta,stepMockHelper.trans);
  File tmp=File.createTempFile("testCreateCOmmandLine","tmp");
  OraBulkLoaderMeta meta=new OraBulkLoaderMeta();
  meta.setSqlldr(tmp.getAbsolutePath());
  meta.setControlFile(tmp.getAbsolutePath());
  DatabaseMeta dm=mock(DatabaseMeta.class);
  when(dm.getUsername()).thenReturn("user");
  when(dm.getPassword()).thenReturn("Encrypted 2be98afc86aa7f2e4cb298b5eeab387f5");
  meta.setDatabaseMeta(dm);
  String cmd=oraBulkLoader.createCommandLine(meta,true);
  String expected=tmp.getAbsolutePath() + " control='" + tmp.getAbsolutePath()+ "' userid=user/PENTAHO@";
  assertEquals("Comandline for oracle bulkloader is not as expected",expected,cmd);
}
