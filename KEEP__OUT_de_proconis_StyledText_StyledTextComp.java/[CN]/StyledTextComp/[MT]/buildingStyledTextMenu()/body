{
  MenuItem undoItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  undoItem.setText("Undo\tCtrl+Z");
  undoItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      undo();
    }
  }
);
  MenuItem redoItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  redoItem.setText("Redo\tCtrl+Y");
  redoItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      redo();
    }
  }
);
  new MenuItem(styledTextPopupmenu,SWT.SEPARATOR);
  MenuItem cutItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  cutItem.setText("Cut\tCtrl+X");
  cutItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.cut();
    }
  }
);
  MenuItem copyItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  copyItem.setText("Copy\tCtrl+C");
  copyItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.copy();
    }
  }
);
  MenuItem pasteItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  pasteItem.setText("Paste\tCtrl+V");
  pasteItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.paste();
    }
  }
);
  MenuItem selectAllItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  selectAllItem.setText("Select &All\tCtrl+A");
  selectAllItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.selectAll();
    }
  }
);
  new MenuItem(styledTextPopupmenu,SWT.SEPARATOR);
  MenuItem findItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  findItem.setText("Find\tCtrl+F");
  findItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      StyledTextCompFind stFind=new StyledTextCompFind(styledText.getShell(),styledText,"Find / " + strTabName);
      stFind.open();
    }
  }
);
  MenuItem replaceItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  replaceItem.setText("Replace\tCtrl+H");
  replaceItem.setAccelerator(SWT.CTRL + 'H');
  replaceItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      StyledTextCompReplace stReplace=new StyledTextCompReplace(styledText.getShell(),styledText);
      stReplace.open();
    }
  }
);
  styledText.addListener(SWT.MouseDown,new Listener(){
    public void handleEvent(    Event e){
      if (e.button == 3) {
        if (undoStack.size() > 0)         styledTextPopupmenu.getItem(0).setEnabled(true);
 else         styledTextPopupmenu.getItem(0).setEnabled(false);
        if (redoStack.size() > 0)         styledTextPopupmenu.getItem(1).setEnabled(true);
 else         styledTextPopupmenu.getItem(1).setEnabled(false);
        styledTextPopupmenu.getItem(5).setEnabled(checkPaste());
        if (styledText.getSelectionCount() > 0) {
          styledTextPopupmenu.getItem(3).setEnabled(true);
          styledTextPopupmenu.getItem(4).setEnabled(true);
        }
 else {
          styledTextPopupmenu.getItem(3).setEnabled(false);
          styledTextPopupmenu.getItem(4).setEnabled(false);
        }
      }
    }
  }
);
  styledText.setMenu(styledTextPopupmenu);
}
