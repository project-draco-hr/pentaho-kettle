{
  int i;
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"GPLoadDialog.Log.GettingKeyInfo"));
  }
  if (input.getMaxErrors() != null) {
    wMaxErrors.setText(input.getMaxErrors());
  }
  if (input.getFieldTable() != null) {
    for (i=0; i < input.getFieldTable().length; i++) {
      TableItem item=wReturn.table.getItem(i);
      if (input.getFieldTable()[i] != null) {
        item.setText(1,input.getFieldTable()[i]);
      }
      if (input.getFieldStream()[i] != null) {
        item.setText(2,input.getFieldStream()[i]);
      }
      String dateMask=input.getDateMask()[i];
      if (dateMask != null) {
        if (GPLoadMeta.DATE_MASK_DATE.equals(dateMask)) {
          item.setText(3,BaseMessages.getString(PKG,"GPLoadDialog.DateMask.Label"));
        }
 else         if (GPLoadMeta.DATE_MASK_DATETIME.equals(dateMask)) {
          item.setText(3,BaseMessages.getString(PKG,"GPLoadDialog.DateTimeMask.Label"));
        }
 else {
          item.setText(3,"");
        }
      }
 else {
        item.setText(3,"");
      }
      item.setText(4,(input.getMatchColumn()[i] ? "Y" : "N"));
      item.setText(5,(input.getUpdateColumn()[i] ? "Y" : "N"));
    }
  }
  if (input.getLocalHosts() != null) {
    for (i=0; i < input.getLocalHosts().length; i++) {
      TableItem item=wLocalHosts.table.getItem(i);
      if (input.getLocalHosts()[i] != null) {
        item.setText(1,input.getLocalHosts()[i]);
      }
    }
  }
  if (input.getDatabaseMeta() != null) {
    wConnection.setText(input.getDatabaseMeta().getName());
  }
 else {
    if (transMeta.nrDatabases() == 1) {
      wConnection.setText(transMeta.getDatabase(0).getName());
    }
  }
  if (input.getSchemaName() != null) {
    wSchema.setText(input.getSchemaName());
  }
  if (input.getTableName() != null) {
    wTable.setText(input.getTableName());
  }
  if (input.getErrorTableName() != null) {
    wErrorTable.setText(input.getErrorTableName());
  }
  if (input.getGploadPath() != null) {
    wGploadPath.setText(input.getGploadPath());
  }
  if (input.getControlFile() != null) {
    wControlFile.setText(input.getControlFile());
  }
  if (input.getDataFile() != null) {
    wDataFile.setText(input.getDataFile());
  }
  if (input.getDelimiter() != null) {
    wDelimiter.setText(input.getDelimiter());
  }
  if (input.getLogFile() != null) {
    wLogFile.setText(input.getLogFile());
  }
  if (input.getNullAs() != null) {
    wNullAs.setText(input.getNullAs());
  }
  if (input.getEncoding() != null) {
    wEncoding.setText(input.getEncoding());
  }
  if (input.getLocalhostPort() != null) {
    wLocalhostPort.setText(input.getLocalhostPort());
  }
  if (input.getUpdateCondition() != null) {
    wUpdateCondition.setText(input.getUpdateCondition());
  }
  this.wEraseFiles.setSelection(input.isEraseFiles());
  String method=input.getLoadMethod();
  if (GPLoadMeta.METHOD_AUTO_END.equals(method)) {
    wLoadMethod.select(0);
  }
 else   if (GPLoadMeta.METHOD_MANUAL.equals(method)) {
    wLoadMethod.select(1);
  }
 else {
    if (log.isDebug()) {
      logDebug("Internal error: load_method set to default 'auto at end'");
    }
    wLoadMethod.select(0);
  }
  String action=input.getLoadAction();
  if (GPLoadMeta.ACTION_INSERT.equals(action)) {
    wLoadAction.select(0);
  }
 else   if (GPLoadMeta.ACTION_UPDATE.equals(action)) {
    wLoadAction.select(1);
  }
 else   if (GPLoadMeta.ACTION_MERGE.equals(action)) {
    wLoadAction.select(2);
  }
 else {
    if (log.isDebug()) {
      logDebug("Internal error: load_action set to default '" + GPLoadMeta.ACTION_INSERT + "'");
    }
    wLoadAction.select(0);
  }
  wStepname.selectAll();
  wReturn.setRowNums();
  wReturn.optWidth(true);
}
