{
switch (specificationMethod) {
case FILENAME:
    if (Const.isEmpty(wFilename.getText())) {
      return false;
    }
  loadFileTrans(wFilename.getText());
break;
case REPOSITORY_BY_NAME:
if (Const.isEmpty(wDirectory.getText()) && Const.isEmpty(wTransname.getText())) {
return false;
}
String realDirectory=transMeta.environmentSubstitute(wDirectory.getText());
String realTransname=transMeta.environmentSubstitute(wTransname.getText());
if (Const.isEmpty(realDirectory) || Const.isEmpty(realTransname)) {
throw new KettleException(BaseMessages.getString(PKG,"MetaInjectDialog.Exception.NoValidMappingDetailsFound"));
}
RepositoryDirectoryInterface repdir=repository.findDirectory(realDirectory);
if (repdir == null) {
throw new KettleException(BaseMessages.getString(PKG,"MetaInjectDialog.Exception.UnableToFindRepositoryDirectory)"));
}
loadRepositoryTrans(realTransname,repdir);
break;
case REPOSITORY_BY_REFERENCE:
if (referenceObjectId == null) {
return false;
}
injectTransMeta=repository.loadTransformation(referenceObjectId,null);
injectTransMeta.clearChanged();
break;
default :
break;
}
return true;
}
