{
switch (meta.getOperationType()) {
case ZipFileMeta.OPERATION_TYPE_MOVE:
    FileObject file=null;
  FileObject moveToFolder=null;
try {
  moveToFolder=KettleVFS.getFileObject(folder);
  if (moveToFolder.exists()) {
    if (moveToFolder.getType() != FileType.FOLDER) {
      throw new KettleException(BaseMessages.getString(PKG,"ZipFile.Error.NotAFolder",folder));
    }
  }
 else {
    moveToFolder.createFolder();
  }
  String targetfilename=KettleVFS.getFilename(moveToFolder) + Const.FILE_SEPARATOR + data.sourceFile.getName().getBaseName();
  file=KettleVFS.getFileObject(targetfilename);
  data.sourceFile.moveTo(file);
}
  finally {
  if (file != null) {
    try {
      file.close();
    }
 catch (    Exception e) {
    }
    ;
  }
  if (moveToFolder != null) {
    try {
      moveToFolder.close();
    }
 catch (    Exception e) {
    }
    ;
  }
}
break;
case ZipFileMeta.OPERATION_TYPE_DELETE:
data.sourceFile.delete();
break;
default :
break;
}
}
