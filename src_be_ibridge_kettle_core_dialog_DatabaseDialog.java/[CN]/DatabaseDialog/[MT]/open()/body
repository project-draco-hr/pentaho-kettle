{
  Shell parent=getParent();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      connection.setChanged();
    }
  }
;
  changed=connection.hasChanged();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setText("Connection information");
  shell.setLayout(formLayout);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wTest=new Button(shell,SWT.PUSH);
  wTest.setText(" &Test ");
  wExp=new Button(shell,SWT.PUSH);
  wExp.setText(" &Explore ");
  wList=new Button(shell,SWT.PUSH);
  wList.setText(" Feature &List ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  Button[] buttons=new Button[]{wOK,wTest,wExp,wList,wCancel};
  BaseStepDialog.positionBottomButtons(shell,buttons,margin,null);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TABLE);
  wDbTab=new CTabItem(wTabFolder,SWT.NONE);
  wDbTab.setText("General");
  wDbComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wDbComp);
  FormLayout GenLayout=new FormLayout();
  GenLayout.marginWidth=3;
  GenLayout.marginHeight=3;
  wDbComp.setLayout(GenLayout);
  wlConn=new Label(wDbComp,SWT.RIGHT);
  props.setLook(wlConn);
  wlConn.setText("Connection name: ");
  fdlConn=new FormData();
  fdlConn.top=new FormAttachment(0,0);
  fdlConn.left=new FormAttachment(0,0);
  fdlConn.right=new FormAttachment(middle,-margin);
  wlConn.setLayoutData(fdlConn);
  wConn=new Text(wDbComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wConn);
  wConn.addModifyListener(lsMod);
  fdConn=new FormData();
  fdConn.top=new FormAttachment(0,0);
  fdConn.left=new FormAttachment(middle,0);
  fdConn.right=new FormAttachment(95,0);
  wConn.setLayoutData(fdConn);
  wlConnType=new Label(wDbComp,SWT.RIGHT);
  wlConnType.setText("Connection type: ");
  props.setLook(wlConnType);
  fdlConnType=new FormData();
  fdlConnType.top=new FormAttachment(wConn,margin);
  fdlConnType.left=new FormAttachment(0,0);
  fdlConnType.right=new FormAttachment(middle,-margin);
  wlConnType.setLayoutData(fdlConnType);
  wConnType=new List(wDbComp,SWT.BORDER | SWT.READ_ONLY | SWT.SINGLE| SWT.V_SCROLL);
  props.setLook(wConnType);
  String[] dbtypes=DatabaseMeta.getDBTypeDescLongList();
  for (int i=0; i < dbtypes.length; i++) {
    wConnType.add(dbtypes[i]);
  }
  props.setLook(wConnType);
  fdConnType=new FormData();
  fdConnType.top=new FormAttachment(wConn,margin);
  fdConnType.left=new FormAttachment(middle,0);
  fdConnType.right=new FormAttachment(95,0);
  fdConnType.bottom=new FormAttachment(wConn,150);
  wConnType.setLayoutData(fdConnType);
  wlConnAcc=new Label(wDbComp,SWT.RIGHT);
  wlConnAcc.setText("Method of access: ");
  props.setLook(wlConnAcc);
  fdlConnAcc=new FormData();
  fdlConnAcc.top=new FormAttachment(wConnType,margin);
  fdlConnAcc.left=new FormAttachment(0,0);
  fdlConnAcc.right=new FormAttachment(middle,-margin);
  wlConnAcc.setLayoutData(fdlConnAcc);
  wConnAcc=new List(wDbComp,SWT.BORDER | SWT.READ_ONLY | SWT.SINGLE| SWT.V_SCROLL);
  props.setLook(wConnAcc);
  props.setLook(wConnAcc);
  fdConnAcc=new FormData();
  fdConnAcc.top=new FormAttachment(wConnType,margin);
  fdConnAcc.left=new FormAttachment(middle,0);
  fdConnAcc.right=new FormAttachment(95,0);
  wConnAcc.setLayoutData(fdConnAcc);
  wlHostName=new Label(wDbComp,SWT.RIGHT);
  wlHostName.setText("Server host name: ");
  props.setLook(wlHostName);
  fdlHostName=new FormData();
  fdlHostName.top=new FormAttachment(wConnAcc,margin);
  fdlHostName.left=new FormAttachment(0,0);
  fdlHostName.right=new FormAttachment(middle,-margin);
  wlHostName.setLayoutData(fdlHostName);
  wHostName=new Text(wDbComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wHostName);
  wHostName.addModifyListener(lsMod);
  fdHostName=new FormData();
  fdHostName.top=new FormAttachment(wConnAcc,margin);
  fdHostName.left=new FormAttachment(middle,0);
  fdHostName.right=new FormAttachment(95,0);
  wHostName.setLayoutData(fdHostName);
  wlDBName=new Label(wDbComp,SWT.RIGHT);
  wlDBName.setText("Database name: ");
  props.setLook(wlDBName);
  fdlDBName=new FormData();
  fdlDBName.top=new FormAttachment(wHostName,margin);
  fdlDBName.left=new FormAttachment(0,0);
  fdlDBName.right=new FormAttachment(middle,-margin);
  wlDBName.setLayoutData(fdlDBName);
  wDBName=new Text(wDbComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDBName);
  wDBName.addModifyListener(lsMod);
  fdDBName=new FormData();
  fdDBName.top=new FormAttachment(wHostName,margin);
  fdDBName.left=new FormAttachment(middle,0);
  fdDBName.right=new FormAttachment(95,0);
  wDBName.setLayoutData(fdDBName);
  wlPort=new Label(wDbComp,SWT.RIGHT);
  wlPort.setText("Port number: ");
  props.setLook(wlPort);
  fdlPort=new FormData();
  fdlPort.top=new FormAttachment(wDBName,margin);
  fdlPort.left=new FormAttachment(0,0);
  fdlPort.right=new FormAttachment(middle,-margin);
  wlPort.setLayoutData(fdlPort);
  wPort=new Text(wDbComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.top=new FormAttachment(wDBName,margin);
  fdPort.left=new FormAttachment(middle,0);
  fdPort.right=new FormAttachment(95,0);
  wPort.setLayoutData(fdPort);
  wlUsername=new Label(wDbComp,SWT.RIGHT);
  wlUsername.setText("Username: ");
  props.setLook(wlUsername);
  fdlUsername=new FormData();
  fdlUsername.top=new FormAttachment(wPort,margin);
  fdlUsername.left=new FormAttachment(0,0);
  fdlUsername.right=new FormAttachment(middle,-margin);
  wlUsername.setLayoutData(fdlUsername);
  wUsername=new Text(wDbComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUsername);
  wUsername.addModifyListener(lsMod);
  fdUsername=new FormData();
  fdUsername.top=new FormAttachment(wPort,margin);
  fdUsername.left=new FormAttachment(middle,0);
  fdUsername.right=new FormAttachment(95,0);
  wUsername.setLayoutData(fdUsername);
  wlPassword=new Label(wDbComp,SWT.RIGHT);
  wlPassword.setText("Password: ");
  props.setLook(wlPassword);
  fdlPassword=new FormData();
  fdlPassword.top=new FormAttachment(wUsername,margin);
  fdlPassword.left=new FormAttachment(0,0);
  fdlPassword.right=new FormAttachment(middle,-margin);
  wlPassword.setLayoutData(fdlPassword);
  wPassword=new Text(wDbComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPassword);
  wPassword.setEchoChar('*');
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.top=new FormAttachment(wUsername,margin);
  fdPassword.left=new FormAttachment(middle,0);
  fdPassword.right=new FormAttachment(95,0);
  wPassword.setLayoutData(fdPassword);
  fdDbComp=new FormData();
  fdDbComp.left=new FormAttachment(0,0);
  fdDbComp.top=new FormAttachment(0,0);
  fdDbComp.right=new FormAttachment(100,0);
  fdDbComp.bottom=new FormAttachment(100,0);
  wDbComp.setLayoutData(fdDbComp);
  wDbComp.layout();
  wDbTab.setControl(wDbComp);
  wOracleTab=new CTabItem(wTabFolder,SWT.NONE);
  wOracleTab.setText("Oracle");
  FormLayout oracleLayout=new FormLayout();
  oracleLayout.marginWidth=3;
  oracleLayout.marginHeight=3;
  wOracleComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wOracleComp);
  wOracleComp.setLayout(oracleLayout);
  wlData=new Label(wOracleComp,SWT.RIGHT);
  props.setLook(wlData);
  wlData.setText("Tablespace for data: ");
  fdlData=new FormData();
  fdlData.top=new FormAttachment(0,0);
  fdlData.left=new FormAttachment(0,0);
  fdlData.right=new FormAttachment(middle,-margin);
  wlData.setLayoutData(fdlData);
  wData=new Text(wOracleComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wData.setText(NVL(connection.getDataTablespace() == null ? "" : connection.getDataTablespace(),""));
  props.setLook(wData);
  wData.addModifyListener(lsMod);
  fdData=new FormData();
  fdData.top=new FormAttachment(0,0);
  fdData.left=new FormAttachment(middle,0);
  fdData.right=new FormAttachment(95,0);
  wData.setLayoutData(fdData);
  wlIndex=new Label(wOracleComp,SWT.RIGHT);
  props.setLook(wlIndex);
  wlIndex.setText("Tablespace for indexes: ");
  fdlIndex=new FormData();
  fdlIndex.top=new FormAttachment(wData,margin);
  fdlIndex.left=new FormAttachment(0,0);
  fdlIndex.right=new FormAttachment(middle,-margin);
  wlIndex.setLayoutData(fdlIndex);
  wIndex=new Text(wOracleComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wIndex.setText(NVL(connection.getIndexTablespace() == null ? "" : connection.getIndexTablespace(),""));
  props.setLook(wIndex);
  wIndex.addModifyListener(lsMod);
  fdIndex=new FormData();
  fdIndex.top=new FormAttachment(wData,margin);
  fdIndex.left=new FormAttachment(middle,0);
  fdIndex.right=new FormAttachment(95,0);
  wIndex.setLayoutData(fdIndex);
  fdOracleComp=new FormData();
  fdOracleComp.left=new FormAttachment(0,0);
  fdOracleComp.top=new FormAttachment(0,0);
  fdOracleComp.right=new FormAttachment(100,0);
  fdOracleComp.bottom=new FormAttachment(100,0);
  wOracleComp.setLayoutData(fdOracleComp);
  wOracleComp.layout();
  wOracleTab.setControl(wOracleComp);
  wIfxTab=new CTabItem(wTabFolder,SWT.NONE);
  wIfxTab.setText("Informix");
  FormLayout ifxLayout=new FormLayout();
  ifxLayout.marginWidth=3;
  ifxLayout.marginHeight=3;
  wIfxComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wIfxComp);
  wIfxComp.setLayout(ifxLayout);
  wlServername=new Label(wIfxComp,SWT.RIGHT);
  wlServername.setText("Informix Servername: ");
  props.setLook(wlServername);
  fdlServername=new FormData();
  fdlServername.top=new FormAttachment(0,margin);
  fdlServername.left=new FormAttachment(0,0);
  fdlServername.right=new FormAttachment(middle,-margin);
  wlServername.setLayoutData(fdlServername);
  wServername=new Text(wIfxComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wServername);
  wServername.addModifyListener(lsMod);
  fdServername=new FormData();
  fdServername.top=new FormAttachment(0,margin);
  fdServername.left=new FormAttachment(middle,0);
  fdServername.right=new FormAttachment(95,0);
  wServername.setLayoutData(fdServername);
  fdIfxComp=new FormData();
  fdIfxComp.left=new FormAttachment(0,0);
  fdIfxComp.top=new FormAttachment(0,0);
  fdIfxComp.right=new FormAttachment(100,0);
  fdIfxComp.bottom=new FormAttachment(100,0);
  wIfxComp.setLayoutData(fdIfxComp);
  wIfxComp.layout();
  wIfxTab.setControl(wIfxComp);
  wSAPTab=new CTabItem(wTabFolder,SWT.NONE);
  wSAPTab.setText("SAP R/3");
  FormLayout sapLayout=new FormLayout();
  sapLayout.marginWidth=3;
  sapLayout.marginHeight=3;
  wSAPComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wSAPComp);
  wSAPComp.setLayout(sapLayout);
  wlSAPLanguage=new Label(wSAPComp,SWT.RIGHT);
  wlSAPLanguage.setText("Language ");
  props.setLook(wlSAPLanguage);
  fdlSAPLanguage=new FormData();
  fdlSAPLanguage.top=new FormAttachment(0,margin);
  fdlSAPLanguage.left=new FormAttachment(0,0);
  fdlSAPLanguage.right=new FormAttachment(middle,-margin);
  wlSAPLanguage.setLayoutData(fdlSAPLanguage);
  wSAPLanguage=new Text(wSAPComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSAPLanguage);
  wSAPLanguage.addModifyListener(lsMod);
  fdSAPLanguage=new FormData();
  fdSAPLanguage.top=new FormAttachment(0,margin);
  fdSAPLanguage.left=new FormAttachment(middle,0);
  fdSAPLanguage.right=new FormAttachment(95,0);
  wSAPLanguage.setLayoutData(fdSAPLanguage);
  wlSAPSystemNumber=new Label(wSAPComp,SWT.RIGHT);
  wlSAPSystemNumber.setText("System Number ");
  props.setLook(wlSAPSystemNumber);
  fdlSAPSystemNumber=new FormData();
  fdlSAPSystemNumber.top=new FormAttachment(wSAPLanguage,margin);
  fdlSAPSystemNumber.left=new FormAttachment(0,0);
  fdlSAPSystemNumber.right=new FormAttachment(middle,-margin);
  wlSAPSystemNumber.setLayoutData(fdlSAPSystemNumber);
  wSAPSystemNumber=new Text(wSAPComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSAPSystemNumber);
  wSAPSystemNumber.addModifyListener(lsMod);
  fdSAPSystemNumber=new FormData();
  fdSAPSystemNumber.top=new FormAttachment(wSAPLanguage,margin);
  fdSAPSystemNumber.left=new FormAttachment(middle,0);
  fdSAPSystemNumber.right=new FormAttachment(95,0);
  wSAPSystemNumber.setLayoutData(fdSAPSystemNumber);
  wlSAPClient=new Label(wSAPComp,SWT.RIGHT);
  wlSAPClient.setText("SAP Client");
  props.setLook(wlSAPClient);
  fdlSAPClient=new FormData();
  fdlSAPClient.top=new FormAttachment(wSAPSystemNumber,margin);
  fdlSAPClient.left=new FormAttachment(0,0);
  fdlSAPClient.right=new FormAttachment(middle,-margin);
  wlSAPClient.setLayoutData(fdlSAPClient);
  wSAPClient=new Text(wSAPComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSAPClient);
  wSAPClient.addModifyListener(lsMod);
  fdSAPClient=new FormData();
  fdSAPClient.top=new FormAttachment(wSAPSystemNumber,margin);
  fdSAPClient.left=new FormAttachment(middle,0);
  fdSAPClient.right=new FormAttachment(95,0);
  wSAPClient.setLayoutData(fdSAPClient);
  fdSAPComp=new FormData();
  fdSAPComp.left=new FormAttachment(0,0);
  fdSAPComp.top=new FormAttachment(0,0);
  fdSAPComp.right=new FormAttachment(100,0);
  fdSAPComp.bottom=new FormAttachment(100,0);
  wSAPComp.setLayoutData(fdSAPComp);
  wSAPComp.layout();
  wSAPTab.setControl(wSAPComp);
  wGenericTab=new CTabItem(wTabFolder,SWT.NONE);
  wGenericTab.setText("Generic");
  wGenericTab.setToolTipText("Settings in case you want to use a generic database with a non-supported JDBC driver");
  FormLayout genericLayout=new FormLayout();
  genericLayout.marginWidth=3;
  genericLayout.marginHeight=3;
  wGenericComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGenericComp);
  wGenericComp.setLayout(genericLayout);
  wlURL=new Label(wGenericComp,SWT.RIGHT);
  wlURL.setText("URL ");
  props.setLook(wlURL);
  fdlURL=new FormData();
  fdlURL.top=new FormAttachment(0,margin);
  fdlURL.left=new FormAttachment(0,0);
  fdlURL.right=new FormAttachment(middle,-margin);
  wlURL.setLayoutData(fdlURL);
  wURL=new Text(wGenericComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wURL);
  wURL.addModifyListener(lsMod);
  fdURL=new FormData();
  fdURL.top=new FormAttachment(0,margin);
  fdURL.left=new FormAttachment(middle,0);
  fdURL.right=new FormAttachment(95,0);
  wURL.setLayoutData(fdURL);
  wlDriverClass=new Label(wGenericComp,SWT.RIGHT);
  wlDriverClass.setText("Driver class ");
  props.setLook(wlDriverClass);
  fdlDriverClass=new FormData();
  fdlDriverClass.top=new FormAttachment(wURL,margin);
  fdlDriverClass.left=new FormAttachment(0,0);
  fdlDriverClass.right=new FormAttachment(middle,-margin);
  wlDriverClass.setLayoutData(fdlDriverClass);
  wDriverClass=new Text(wGenericComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDriverClass);
  wDriverClass.addModifyListener(lsMod);
  fdDriverClass=new FormData();
  fdDriverClass.top=new FormAttachment(wURL,margin);
  fdDriverClass.left=new FormAttachment(middle,0);
  fdDriverClass.right=new FormAttachment(95,0);
  wDriverClass.setLayoutData(fdDriverClass);
  fdGenericComp=new FormData();
  fdGenericComp.left=new FormAttachment(0,0);
  fdGenericComp.top=new FormAttachment(0,0);
  fdGenericComp.right=new FormAttachment(100,0);
  fdGenericComp.bottom=new FormAttachment(100,0);
  wGenericComp.setLayoutData(fdGenericComp);
  wGenericComp.layout();
  wGenericTab.setControl(wGenericComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(0,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(wOK,-margin);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      handleOK();
    }
  }
);
  wCancel.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
);
  wTest.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
);
  wExp.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      explore();
    }
  }
);
  wList.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      showFeatureList();
    }
  }
);
  SelectionAdapter selAdapter=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      handleOK();
    }
  }
;
  wHostName.addSelectionListener(selAdapter);
  wDBName.addSelectionListener(selAdapter);
  wPort.addSelectionListener(selAdapter);
  wUsername.addSelectionListener(selAdapter);
  wPassword.addSelectionListener(selAdapter);
  wConn.addSelectionListener(selAdapter);
  wData.addSelectionListener(selAdapter);
  wIndex.addSelectionListener(selAdapter);
  SelectionAdapter lsTypeAcc=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      enableFields();
      setPortNumber();
    }
  }
;
  wConnType.addSelectionListener(lsTypeAcc);
  wConnAcc.addSelectionListener(lsTypeAcc);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wTabFolder.setSelection(0);
  getData();
  enableFields();
  WindowProperty winprop=props.getScreen(shell.getText());
  if (winprop != null)   winprop.setShell(shell);
 else   shell.pack();
  connection.setChanged(changed);
  shell.open();
  Display display=parent.getDisplay();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return connectionName;
}
