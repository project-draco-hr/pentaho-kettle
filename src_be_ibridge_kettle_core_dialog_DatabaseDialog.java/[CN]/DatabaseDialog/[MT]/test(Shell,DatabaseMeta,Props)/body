{
  String[] remarks=dbinfo.checkParameters();
  if (remarks.length == 0) {
    StringBuffer report=new StringBuffer();
    Database db=new Database(dbinfo);
    if (dbinfo.isClustered()) {
      PartitionDatabaseMeta[] clusterInformation=dbinfo.getClusterInformation();
      for (int i=0; i < clusterInformation.length; i++) {
        try {
          db.connect(clusterInformation[i].getPartitionId());
          report.append("Connection to database [" + dbinfo.getName() + "] with partition id ["+ clusterInformation[i].getPartitionId()+ "] is OK."+ Const.CR);
        }
 catch (        KettleException e) {
          report.append("Error connecting to database [" + dbinfo.getName() + "] with partition id ["+ clusterInformation[i].getPartitionId()+ "] : "+ e.toString()+ Const.CR);
          report.append(Const.getStackTracker(e) + Const.CR);
        }
 finally {
          db.disconnect();
        }
        report.append("   Hostname       : " + clusterInformation[i].getHostname() + Const.CR);
        report.append("   Port           : " + clusterInformation[i].getPort() + Const.CR);
        report.append("   Database name  : " + clusterInformation[i].getDatabaseName() + Const.CR);
        report.append(Const.CR);
      }
    }
 else {
      try {
        db.connect();
        report.append("Connection to database [" + dbinfo.getName() + "] is OK."+ Const.CR);
      }
 catch (      KettleException e) {
        report.append("Error connecting to database [" + dbinfo.getName() + "] : "+ e.toString()+ Const.CR);
        report.append(Const.getStackTracker(e) + Const.CR);
      }
 finally {
        db.disconnect();
      }
      report.append("   Hostname       : " + dbinfo.getHostname() + Const.CR);
      report.append("   Port           : " + dbinfo.getDatabasePortNumberString() + Const.CR);
      report.append("   Database name  : " + dbinfo.getDatabaseName() + Const.CR);
      report.append(Const.CR);
    }
    EnterTextDialog dialog=new EnterTextDialog(shell,"Connection report","Here is the connection report",report.toString());
    dialog.setReadOnly();
    dialog.setFixed(true);
    dialog.open();
  }
 else {
    String message="";
    for (int i=0; i < remarks.length; i++)     message+="    * " + remarks[i] + Const.CR;
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setText("Error!");
    mb.setMessage("Please make sure all required parameters are entered correctly: " + Const.CR + remarks);
    mb.open();
  }
}
