{
  String command="";
  for (int i=0; i < cmd.length; i++)   command+=" " + cmd[i];
  log.logBasic("Jar generator","Executing command : " + command);
  Runtime runtime=java.lang.Runtime.getRuntime();
  Process proc=runtime.exec(cmd,EnvUtil.getEnvironmentVariablesForRuntimeExec(),directory);
  StreamLogger errorLogger=new StreamLogger(proc.getErrorStream(),"Jar generator (stderr)");
  StreamLogger outputLogger=new StreamLogger(proc.getInputStream(),"Jar generator (stdout)");
  new Thread(errorLogger).start();
  new Thread(outputLogger).start();
  proc.waitFor();
  log.logDetailed("Jar generator","command [" + cmd[0] + "] has finished");
  if (proc.exitValue() != 0) {
    log.logDetailed("Jar generator","Exit status of jar command was " + proc.exitValue());
  }
  try {
    proc.getErrorStream().close();
    proc.getInputStream().close();
  }
 catch (  IOException e) {
    log.logDetailed("Jar generator","Warning: Error closing streams: " + e.getMessage());
  }
}
