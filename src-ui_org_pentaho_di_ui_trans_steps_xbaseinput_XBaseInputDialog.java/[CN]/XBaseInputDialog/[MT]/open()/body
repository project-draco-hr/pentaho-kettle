{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  backupAddRownr=input.isRowNrAdded();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("XBaseInputDialog.Dialog.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlFilename=new Label(shell,SWT.RIGHT);
  wlFilename.setText(Messages.getString("System.Label.Filename"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wStepname,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(Messages.getString("System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wStepname,margin);
  wbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.right=new FormAttachment(wbFilename,-margin);
  fdFilename.top=new FormAttachment(wStepname,margin);
  wFilename.setLayoutData(fdFilename);
  gAccepting=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gAccepting.setText(Messages.getString("XBaseInputDialog.AcceptingGroup.Label"));
  FormLayout acceptingLayout=new FormLayout();
  acceptingLayout.marginWidth=3;
  acceptingLayout.marginHeight=3;
  gAccepting.setLayout(acceptingLayout);
  props.setLook(gAccepting);
  wlAccFilenames=new Label(gAccepting,SWT.RIGHT);
  wlAccFilenames.setText(Messages.getString("XBaseInputDialog.AcceptFilenames.Label"));
  props.setLook(wlAccFilenames);
  fdlAccFilenames=new FormData();
  fdlAccFilenames.top=new FormAttachment(0,margin);
  fdlAccFilenames.left=new FormAttachment(0,0);
  fdlAccFilenames.right=new FormAttachment(middle,-margin);
  wlAccFilenames.setLayoutData(fdlAccFilenames);
  wAccFilenames=new Button(gAccepting,SWT.CHECK);
  wAccFilenames.setToolTipText(Messages.getString("XBaseInputDialog.AcceptFilenames.Tooltip"));
  props.setLook(wAccFilenames);
  fdAccFilenames=new FormData();
  fdAccFilenames.top=new FormAttachment(0,margin);
  fdAccFilenames.left=new FormAttachment(middle,0);
  fdAccFilenames.right=new FormAttachment(100,0);
  wAccFilenames.setLayoutData(fdAccFilenames);
  wAccFilenames.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlAccStep=new Label(gAccepting,SWT.RIGHT);
  wlAccStep.setText(Messages.getString("XBaseInputDialog.AcceptStep.Label"));
  props.setLook(wlAccStep);
  fdlAccStep=new FormData();
  fdlAccStep.top=new FormAttachment(wAccFilenames,margin);
  fdlAccStep.left=new FormAttachment(0,0);
  fdlAccStep.right=new FormAttachment(middle,-margin);
  wlAccStep.setLayoutData(fdlAccStep);
  wAccStep=new CCombo(gAccepting,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wAccStep.setToolTipText(Messages.getString("XBaseInputDialog.AcceptStep.Tooltip"));
  props.setLook(wAccStep);
  fdAccStep=new FormData();
  fdAccStep.top=new FormAttachment(wAccFilenames,margin);
  fdAccStep.left=new FormAttachment(middle,0);
  fdAccStep.right=new FormAttachment(100,0);
  wAccStep.setLayoutData(fdAccStep);
  wlAccField=new Label(gAccepting,SWT.RIGHT);
  wlAccField.setText(Messages.getString("XBaseInputDialog.AcceptField.Label"));
  props.setLook(wlAccField);
  fdlAccField=new FormData();
  fdlAccField.top=new FormAttachment(wAccStep,margin);
  fdlAccField.left=new FormAttachment(0,0);
  fdlAccField.right=new FormAttachment(middle,-margin);
  wlAccField.setLayoutData(fdlAccField);
  wAccField=new Text(gAccepting,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wAccField.setToolTipText(Messages.getString("XBaseInputDialog.AcceptField.Tooltip"));
  props.setLook(wAccField);
  fdAccField=new FormData();
  fdAccField.top=new FormAttachment(wAccStep,margin);
  fdAccField.left=new FormAttachment(middle,0);
  fdAccField.right=new FormAttachment(100,0);
  wAccField.setLayoutData(fdAccField);
  StepMeta[] prevSteps=transMeta.getPrevSteps(transMeta.findStep(stepname));
  for (int i=0; i < prevSteps.length; i++) {
    wAccStep.add(prevSteps[i].getName());
  }
  fdAccepting=new FormData();
  fdAccepting.left=new FormAttachment(middle,0);
  fdAccepting.right=new FormAttachment(100,0);
  fdAccepting.top=new FormAttachment(wFilename,margin * 2);
  gAccepting.setLayoutData(fdAccepting);
  wlLimit=new Label(shell,SWT.RIGHT);
  wlLimit.setText(Messages.getString("XBaseInputDialog.LimitSize.Label"));
  props.setLook(wlLimit);
  fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,0);
  fdlLimit.right=new FormAttachment(middle,-margin);
  fdlLimit.top=new FormAttachment(gAccepting,margin * 2);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,0);
  fdLimit.top=new FormAttachment(gAccepting,margin * 2);
  fdLimit.right=new FormAttachment(100,0);
  wLimit.setLayoutData(fdLimit);
  wlAddRownr=new Label(shell,SWT.RIGHT);
  wlAddRownr.setText(Messages.getString("XBaseInputDialog.AddRowNr.Label"));
  props.setLook(wlAddRownr);
  fdlAddRownr=new FormData();
  fdlAddRownr.left=new FormAttachment(0,0);
  fdlAddRownr.top=new FormAttachment(wLimit,margin);
  fdlAddRownr.right=new FormAttachment(middle,-margin);
  wlAddRownr.setLayoutData(fdlAddRownr);
  wAddRownr=new Button(shell,SWT.CHECK);
  props.setLook(wAddRownr);
  wAddRownr.setToolTipText(Messages.getString("XBaseInputDialog.AddRowNr.Tooltip"));
  fdAddRownr=new FormData();
  fdAddRownr.left=new FormAttachment(middle,0);
  fdAddRownr.top=new FormAttachment(wLimit,margin);
  wAddRownr.setLayoutData(fdAddRownr);
  wAddRownr.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setFlags();
    }
  }
);
  wlFieldRownr=new Label(shell,SWT.LEFT);
  wlFieldRownr.setText(Messages.getString("XBaseInputDialog.FieldnameOfRowNr.Label"));
  props.setLook(wlFieldRownr);
  fdlFieldRownr=new FormData();
  fdlFieldRownr.left=new FormAttachment(wAddRownr,margin);
  fdlFieldRownr.top=new FormAttachment(wLimit,margin);
  wlFieldRownr.setLayoutData(fdlFieldRownr);
  wFieldRownr=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFieldRownr);
  wFieldRownr.addModifyListener(lsMod);
  fdFieldRownr=new FormData();
  fdFieldRownr.left=new FormAttachment(wlFieldRownr,margin);
  fdFieldRownr.top=new FormAttachment(wLimit,margin);
  fdFieldRownr.right=new FormAttachment(100,0);
  wFieldRownr.setLayoutData(fdFieldRownr);
  wlInclFilename=new Label(shell,SWT.RIGHT);
  wlInclFilename.setText(Messages.getString("XBaseInputDialog.InclFilename.Label"));
  props.setLook(wlInclFilename);
  fdlInclFilename=new FormData();
  fdlInclFilename.left=new FormAttachment(0,0);
  fdlInclFilename.top=new FormAttachment(wFieldRownr,margin);
  fdlInclFilename.right=new FormAttachment(middle,-margin);
  wlInclFilename.setLayoutData(fdlInclFilename);
  wInclFilename=new Button(shell,SWT.CHECK);
  props.setLook(wInclFilename);
  wInclFilename.setToolTipText(Messages.getString("XBaseInputDialog.InclFilename.Tooltip"));
  fdInclFilename=new FormData();
  fdInclFilename.left=new FormAttachment(middle,0);
  fdInclFilename.top=new FormAttachment(wFieldRownr,margin);
  wInclFilename.setLayoutData(fdInclFilename);
  wInclFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
      setFlags();
    }
  }
);
  wlInclFilenameField=new Label(shell,SWT.LEFT);
  wlInclFilenameField.setText(Messages.getString("XBaseInputDialog.InclFilenameField.Label"));
  props.setLook(wlInclFilenameField);
  fdlInclFilenameField=new FormData();
  fdlInclFilenameField.left=new FormAttachment(wInclFilename,margin);
  fdlInclFilenameField.top=new FormAttachment(wFieldRownr,margin);
  wlInclFilenameField.setLayoutData(fdlInclFilenameField);
  wInclFilenameField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclFilenameField);
  wInclFilenameField.addModifyListener(lsMod);
  fdInclFilenameField=new FormData();
  fdInclFilenameField.left=new FormAttachment(wlInclFilenameField,margin);
  fdInclFilenameField.top=new FormAttachment(wFieldRownr,margin);
  fdInclFilenameField.right=new FormAttachment(100,0);
  wInclFilenameField.setLayoutData(fdInclFilenameField);
  wlCharactersetName=new Label(shell,SWT.RIGHT);
  wlCharactersetName.setText(Messages.getString("XBaseInputDialog.CharactersetName.Label"));
  props.setLook(wlCharactersetName);
  fdlCharactersetName=new FormData();
  fdlCharactersetName.left=new FormAttachment(0,0);
  fdlCharactersetName.right=new FormAttachment(middle,-margin);
  fdlCharactersetName.top=new FormAttachment(wInclFilename,margin);
  wlCharactersetName.setLayoutData(fdlCharactersetName);
  wCharactersetName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wCharactersetName.setToolTipText(Messages.getString("XBaseInputDialog.CharactersetName.Tooltip"));
  props.setLook(wCharactersetName);
  wCharactersetName.addModifyListener(lsMod);
  fdCharactersetName=new FormData();
  fdCharactersetName.left=new FormAttachment(middle,0);
  fdCharactersetName.top=new FormAttachment(wInclFilename,margin);
  fdCharactersetName.right=new FormAttachment(100,0);
  wCharactersetName.setLayoutData(fdCharactersetName);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(Messages.getString("System.Button.Preview"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wCharactersetName);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wPreview.addListener(SWT.Selection,lsPreview);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wLimit.addSelectionListener(lsDef);
  wFieldRownr.addSelectionListener(lsDef);
  wAccField.addSelectionListener(lsDef);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      wFilename.setToolTipText(transMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.dbf;*.DBF","*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(wFilename.getText());
      }
      dialog.setFilterNames(new String[]{Messages.getString("XBaseInputDialog.Filter.DBaseFiles"),Messages.getString("System.FileType.AllFiles")});
      if (dialog.open() != null) {
        String str=dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName();
        wFilename.setText(str);
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  input.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
