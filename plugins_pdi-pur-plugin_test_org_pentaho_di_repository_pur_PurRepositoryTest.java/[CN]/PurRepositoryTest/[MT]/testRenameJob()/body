{
  String[] jobNamesArraysBeforeRename={"Job 1","Job 2"};
  String[] jobNamesArraysAfterRename={"Job 1","Job 3"};
  RepositoryElementInterface job1=new JobMeta();
  job1.setName(jobNamesArraysBeforeRename[0]);
  RepositoryElementInterface job2=new JobMeta();
  job2.setName(jobNamesArraysBeforeRename[1]);
  try {
    RepositoryDirectoryInterface directory=repository.findDirectory("public");
    job1.setRepositoryDirectory(directory);
    job2.setRepositoryDirectory(directory);
    repository.save(job1,VERSION_COMMENT_V1,null);
    repository.save(job2,VERSION_COMMENT_V1,null);
    assertArrayEquals(repository.getJobNames(directory.getObjectId(),false),jobNamesArraysBeforeRename);
    repository.renameJob(job2.getObjectId(),job1.getRepositoryDirectory(),jobNamesArraysAfterRename[1]);
    assertArrayEquals(repository.getJobNames(directory.getObjectId(),false),jobNamesArraysAfterRename);
  }
 catch (  KettleException e) {
    e.printStackTrace();
    fail("Unexpected error");
  }
  try {
    repository.renameJob(job2.getObjectId(),job1.getRepositoryDirectory(),jobNamesArraysBeforeRename[0]);
    fail("A naming conflict should occur");
  }
 catch (  KettleException e) {
  }
}
