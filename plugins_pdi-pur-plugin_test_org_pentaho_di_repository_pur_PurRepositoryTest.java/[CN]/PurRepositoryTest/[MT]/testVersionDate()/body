{
  RepositoryDirectoryInterface rootDir=initRepo();
  String uniqueTransName=EXP_TRANS_NAME.concat(EXP_DBMETA_NAME);
  TransMeta transMeta=createTransMeta(EXP_DBMETA_NAME);
  DatabaseMeta dbMeta=createDatabaseMeta(EXP_DBMETA_NAME);
  repository.save(dbMeta,VERSION_COMMENT_V1,null);
  TableInputMeta tableInputMeta=new TableInputMeta();
  tableInputMeta.setDatabaseMeta(dbMeta);
  transMeta.addStep(new StepMeta(EXP_TRANS_STEP_1_NAME,tableInputMeta));
  RepositoryDirectoryInterface transDir=rootDir.findDirectory(DIR_TRANSFORMATIONS);
  Calendar cal=Calendar.getInstance(Locale.US);
  SimpleDateFormat df=new SimpleDateFormat("EEE, d MMM yyyy HH:mm:ss Z",Locale.US);
  cal.setTime(df.parse("Wed, 4 Jul 2001 12:08:56 -0700"));
  repository.save(transMeta,VERSION_COMMENT_V1,null,null,true);
  repository.save(transMeta,VERSION_COMMENT_V1 + "2",cal,null,true);
  deleteStack.push(transMeta);
  assertNotNull(transMeta.getObjectId());
  ObjectRevision version=transMeta.getObjectRevision();
  assertNotNull(version);
  assertTrue(hasVersionWithComment(transMeta,VERSION_COMMENT_V1));
  assertTrue(hasVersionWithCal(transMeta,cal));
  assertTrue(repository.exists(uniqueTransName,transDir,RepositoryObjectType.TRANSFORMATION));
  JobMeta jobMeta=createJobMeta(EXP_JOB_NAME);
  RepositoryDirectoryInterface jobsDir=rootDir.findDirectory(DIR_JOBS);
  repository.save(jobMeta,VERSION_COMMENT_V1,null);
  deleteStack.push(jobMeta);
  assertNotNull(jobMeta.getObjectId());
  version=jobMeta.getObjectRevision();
  assertNotNull(version);
  assertTrue(hasVersionWithComment(jobMeta,VERSION_COMMENT_V1));
  assertTrue(repository.exists(EXP_JOB_NAME,jobsDir,RepositoryObjectType.JOB));
}
