{
  Map<String,ClusterSchema> map=new Hashtable<String,ClusterSchema>();
  List<StepMeta> steps=originalTransformation.getSteps();
  for (int i=0; i < steps.size(); i++) {
    StepMeta step=steps.get(i);
    ClusterSchema clusterSchema=step.getClusterSchema();
    if (clusterSchema != null) {
      map.put(clusterSchema.getName(),clusterSchema);
      if (clusterSchema.findMaster() == null) {
        throw new KettleException("No master server was specified in cluster schema [" + clusterSchema + "]");
      }
      socketsBufferSize=Const.toInt(originalTransformation.environmentSubstitute(clusterSchema.getSocketsBufferSize()),50000);
      compressingSocketStreams=clusterSchema.isSocketsCompressed();
    }
  }
  if (map.size() == 0) {
    throw new KettleException("No cluster schemas are being used.  As such it is not possible to split and cluster this transformation.");
  }
  if (map.size() > 1) {
    throw new KettleException("At this time we don't support the use of multiple cluster schemas in one and the same transformation.");
  }
}
