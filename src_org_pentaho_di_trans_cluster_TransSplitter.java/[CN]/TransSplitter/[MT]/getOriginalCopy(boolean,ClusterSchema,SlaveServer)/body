{
  TransMeta transMeta=new TransMeta();
  if (isSlaveTrans) {
    transMeta.setName(getSlaveTransName(originalTransformation.getName(),clusterSchema,slaveServer));
    NotePadMeta slaveNote=new NotePadMeta("This is a generated slave transformation.\nIt will be run on slave server: " + slaveServer,0,0,-1,-1);
    transMeta.addNote(slaveNote);
    for (int i=0; i < referenceSteps.length; i++) {
      StepMeta stepMeta=referenceSteps[i];
      verifySlavePartitioningConfiguration(transMeta,stepMeta,clusterSchema,slaveServer);
    }
  }
 else {
    transMeta.setName(originalTransformation.getName() + " (master)");
    NotePadMeta masterNote=new NotePadMeta("This is a generated master transformation.\nIt will be run on server: " + getMasterServer(),0,0,-1,-1);
    transMeta.addNote(masterNote);
    transMeta.setPartitionSchemas(originalTransformation.getPartitionSchemas());
  }
  transMeta.setClusterSchemas(originalTransformation.getClusterSchemas());
  transMeta.setDatabases(originalTransformation.getDatabases());
  transMeta.setFeedbackShown(originalTransformation.isFeedbackShown());
  transMeta.setFeedbackSize(originalTransformation.getFeedbackSize());
  transMeta.setUsingThreadPriorityManagment(originalTransformation.isUsingThreadPriorityManagment());
  transMeta.setUsingUniqueConnections(originalTransformation.isUsingUniqueConnections());
  return transMeta;
}
