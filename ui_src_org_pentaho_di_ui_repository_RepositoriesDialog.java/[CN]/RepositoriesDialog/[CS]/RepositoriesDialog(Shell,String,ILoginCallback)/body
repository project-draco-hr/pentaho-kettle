{
  try {
    this.callback=callback;
    KettleXulLoader xulLoader=new KettleXulLoader();
    xulLoader.setOuterContext(shell);
    xulLoader.setSettingsManager(XulSpoonSettingsManager.getInstance());
    container=xulLoader.loadXul("org/pentaho/di/ui/repository/xul/repositories.xul",resourceBundle);
    final XulRunner runner=new SwtXulRunner();
    runner.addContainer(container);
    BindingFactory bf=new DefaultBindingFactory();
    bf.setDocument(container.getDocumentRoot());
    repositoriesController.setBindingFactory(bf);
    repositoriesController.setPreferredRepositoryName(preferredRepositoryName);
    repositoriesController.setMessages(resourceBundle);
    repositoriesController.setCallback(callback);
    repositoriesController.setShell(getShell());
    container.addEventHandler(repositoriesController);
    try {
      runner.initialize();
    }
 catch (    XulException e) {
      SpoonFactory.getInstance().messageBox(e.getLocalizedMessage(),"Service Initialization Failed",false,Const.ERROR);
      log.error(resourceBundle.getString("RepositoryLoginDialog.ErrorStartingXulApplication"),e);
    }
  }
 catch (  XulException e) {
    log.error(resourceBundle.getString("RepositoryLoginDialog.ErrorLoadingXulApplication"),e);
  }
}
