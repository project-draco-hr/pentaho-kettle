{
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      meta.setChanged();
    }
  }
;
  final Display display=getParent().getDisplay();
  shell=new Shell(getParent(),SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,meta);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormData fd;
  labelStepName=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(0,margin);
  labelStepName.setLayoutData(fd);
  textStepName=new Text(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(0,margin);
  textStepName.setLayoutData(fd);
  addConnectionLine=addConnectionLine(shell,textStepName,Const.MIDDLE_PCT,margin);
  labelModelName=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(addConnectionLine,margin);
  labelModelName.setLayoutData(fd);
  comboModelName=new CCombo(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(addConnectionLine,margin);
  comboModelName.setLayoutData(fd);
  labelReadBatchSize=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(comboModelName,margin);
  labelReadBatchSize.setLayoutData(fd);
  textReadBatchSize=new Text(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(comboModelName,margin);
  textReadBatchSize.setLayoutData(fd);
  labelFilter=new Label(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.top=new FormAttachment(textReadBatchSize,margin);
  labelFilter.setLayoutData(fd);
  filterViewColinf=new ColumnInfo[]{new ColumnInfo(getLocalizedFilterColumn(0),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(getLocalizedFilterColumn(1),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(getLocalizedFilterColumn(2),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(getLocalizedFilterColumn(3),ColumnInfo.COLUMN_TYPE_TEXT,false,false)};
  tableViewFilter=new TableView(null,shell,SWT.MULTI | SWT.BORDER,filterViewColinf,0,true,lsMod,props);
  tableViewFilter.setReadonly(false);
  tableViewFilter.setSortable(false);
  fd=new FormData();
  fd.left=new FormAttachment(0,margin);
  fd.top=new FormAttachment(labelFilter,3 * margin);
  fd.right=new FormAttachment(100,-150);
  fd.bottom=new FormAttachment(labelFilter,200);
  tableViewFilter.setLayoutData(fd);
  buttonHelpFilter=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewFilter,margin);
  fd.top=new FormAttachment(labelFilter,3 * margin);
  fd.right=new FormAttachment(100,0);
  buttonHelpFilter.setLayoutData(fd);
  labelFields=new Label(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.top=new FormAttachment(tableViewFilter,margin);
  labelFields.setLayoutData(fd);
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(getLocalizedColumn(0),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(getLocalizedColumn(1),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(getLocalizedColumn(2),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  tableViewFields=new TableView(null,shell,SWT.MULTI | SWT.BORDER,colinf,0,true,lsMod,props);
  tableViewFields.setSize(477,280);
  tableViewFields.setBounds(5,125,477,280);
  tableViewFields.setReadonly(false);
  tableViewFields.setSortable(true);
  fd=new FormData();
  fd.left=new FormAttachment(0,margin);
  fd.top=new FormAttachment(labelFields,3 * margin);
  fd.right=new FormAttachment(100,-150);
  fd.bottom=new FormAttachment(100,-50);
  tableViewFields.setLayoutData(fd);
  buttonGetFields=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewFields,margin);
  fd.top=new FormAttachment(labelFields,3 * margin);
  fd.right=new FormAttachment(100,0);
  buttonGetFields.setLayoutData(fd);
  buttonOk=new Button(shell,SWT.CENTER);
  buttonCancel=new Button(shell,SWT.CENTER);
  buttonPreview=new Button(shell,SWT.CENTER);
  buttonOk.setText(BaseMessages.getString("System.Button.OK"));
  buttonPreview.setText(BaseMessages.getString("System.Button.Preview"));
  buttonCancel.setText(BaseMessages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{buttonOk,buttonPreview,buttonCancel},margin,null);
  addConnectionLine.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      fillModelCombo();
    }
  }
);
  comboModelName.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      fillFilterCombos();
    }
  }
);
  comboModelName.addFocusListener(new FocusListener(){
    @Override public void focusLost(    FocusEvent arg0){
      fillFilterCombos();
    }
    @Override public void focusGained(    FocusEvent arg0){
    }
  }
);
  comboModelName.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      fillFilterCombos();
    }
  }
);
  buttonHelpFilter.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      showHelp();
    }
  }
);
  buttonGetFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getFields();
    }
  }
);
  buttonCancel.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      cancel();
    }
  }
);
  buttonPreview.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      preview();
    }
  }
);
  buttonOk.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ok();
    }
  }
);
  final Runnable runnable=new Runnable(){
    public void run(){
      fillModelCombo();
    }
  }
;
  display.asyncExec(runnable);
  this.fillLocalizationData();
  this.fillStoredData();
  props.setLook(labelStepName);
  props.setLook(textStepName);
  props.setLook(addConnectionLine);
  props.setLook(labelModelName);
  props.setLook(comboModelName);
  props.setLook(labelReadBatchSize);
  props.setLook(textReadBatchSize);
  props.setLook(labelFilter);
  props.setLook(tableViewFilter);
  props.setLook(labelFields);
  props.setLook(tableViewFields);
  meta.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
