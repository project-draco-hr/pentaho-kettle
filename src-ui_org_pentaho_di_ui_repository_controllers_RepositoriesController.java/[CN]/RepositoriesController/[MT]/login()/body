{
  if (loginModel.isValid() == false) {
    return;
  }
  XulWaitBox box;
  try {
    box=(XulWaitBox)document.createElement("waitbox");
    box.setIndeterminate(true);
    box.setCanCancel(false);
    box.setTitle(BaseMessages.getString(RepositoryDialogInterface.class,"RepositoryExplorerDialog.Connection.Wait.Title"));
    box.setMessage(BaseMessages.getString(RepositoryDialogInterface.class,"RepositoryExplorerDialog.Connection.Wait.Message"));
    final Shell loginShell=(Shell)loginDialog.getRootObject();
    final Display display=loginShell.getDisplay();
    box.setDialogParent(loginShell);
    box.setRunnable(new WaitBoxRunnable(box){
      @Override public void run(){
        try {
          helper.loginToRepository();
          waitBox.stop();
          display.syncExec(new Runnable(){
            public void run(){
              loginDialog.hide();
              okButton.setDisabled(false);
              cancelButton.setDisabled(false);
              if (helper.getConnectedRepository().getConnectMessage() != null) {
                getMessageBox().setTitle(BaseMessages.getString(RepositoriesController.class,"ConnectMessageTitle"));
                getMessageBox().setMessage(helper.getConnectedRepository().getConnectMessage());
                getMessageBox().open();
              }
              getCallback().onSuccess(helper.getConnectedRepository());
            }
          }
);
        }
 catch (        final Throwable th) {
          waitBox.stop();
          try {
            display.syncExec(new Runnable(){
              public void run(){
                getCallback().onError(th);
                okButton.setDisabled(false);
                cancelButton.setDisabled(false);
              }
            }
);
          }
 catch (          Exception e) {
            e.printStackTrace();
          }
        }
      }
      @Override public void cancel(){
      }
    }
);
    okButton.setDisabled(true);
    cancelButton.setDisabled(true);
    box.start();
  }
 catch (  XulException e1) {
    getCallback().onError(e1);
  }
}
