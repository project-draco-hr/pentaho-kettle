{
  meta=(TextFileOutputMeta)smi;
  data=(TextFileOutputData)sdi;
  if ((meta.getEncoding() == null) || (meta.getEncoding().isEmpty())) {
    meta.setEncoding(CharsetToolkit.getDefaultSystemCharset().name());
  }
  boolean result=true;
  boolean bEndedLineWrote=false;
  Object[] r=getRow();
  if (r != null && first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    if (meta.isFileNameInField()) {
      data.fileNameFieldIndex=getInputRowMeta().indexOfValue(meta.getFileNameField());
      if (data.fileNameFieldIndex < 0) {
        throw new KettleStepException(BaseMessages.getString(PKG,"TextFileOutput.Exception.FileNameFieldNotFound",meta.getFileNameField()));
      }
      data.fileNameMeta=getInputRowMeta().getValueMeta(data.fileNameFieldIndex);
      data.fileName=data.fileNameMeta.getString(r[data.fileNameFieldIndex]);
      setDataWriterForFilename(data.fileName);
    }
 else     if (meta.isDoNotOpenNewFileInit() && !meta.isFileNameInField()) {
      openNewFile(meta.getFileName());
      data.oneFileOpened=true;
      initBinaryDataFields();
    }
    if (!meta.isFileAppended() && (meta.isHeaderEnabled() || meta.isFooterEnabled())) {
      if (!meta.isFileNameInField() && meta.isHeaderEnabled() && data.outputRowMeta != null) {
        writeHeader();
      }
    }
    data.fieldnrs=new int[meta.getOutputFields().length];
    for (int i=0; i < meta.getOutputFields().length; i++) {
      data.fieldnrs[i]=data.outputRowMeta.indexOfValue(meta.getOutputFields()[i].getName());
      if (data.fieldnrs[i] < 0) {
        throw new KettleStepException("Field [" + meta.getOutputFields()[i].getName() + "] couldn't be found in the input stream!");
      }
    }
  }
  if ((r == null && data.outputRowMeta != null && meta.isFooterEnabled()) || (r != null && getLinesOutput() > 0 && meta.getSplitEvery() > 0 && ((getLinesOutput() + 1) % meta.getSplitEvery()) == 0)) {
    if (data.outputRowMeta != null) {
      if (meta.isFooterEnabled()) {
        writeHeader();
      }
    }
    if (r == null) {
      writeEndedLine();
      bEndedLineWrote=true;
    }
    closeFile();
    if (r != null) {
      openNewFile(meta.getFileName());
      if (meta.isHeaderEnabled() && data.outputRowMeta != null) {
        if (writeHeader()) {
          incrementLinesOutput();
        }
      }
    }
  }
  if (r == null) {
    if (!bEndedLineWrote && data.writer != null) {
      writeEndedLine();
      bEndedLineWrote=true;
    }
    setOutputDone();
    return false;
  }
  if (meta.isFileNameInField()) {
    String baseFilename=data.fileNameMeta.getString(r[data.fileNameFieldIndex]);
    setDataWriterForFilename(baseFilename);
  }
  writeRowToFile(data.outputRowMeta,r);
  putRow(data.outputRowMeta,r);
  if (checkFeedback(getLinesOutput())) {
    logBasic("linenr " + getLinesOutput());
  }
  return result;
}
