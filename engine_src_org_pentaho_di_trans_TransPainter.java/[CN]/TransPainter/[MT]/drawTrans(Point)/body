{
  if (!shadow && gridSize > 1) {
    drawGrid();
  }
  if (hori != null && vert != null) {
    hori.setThumb(thumb.x);
    vert.setThumb(thumb.y);
  }
  gc.setFont(EFont.NOTE);
  for (int i=0; i < transMeta.nrNotes(); i++) {
    NotePadMeta ni=transMeta.getNote(i);
    drawNote(ni);
  }
  gc.setFont(EFont.GRAPH);
  gc.setBackground(EColor.BACKGROUND);
  for (int i=0; i < transMeta.nrTransHops(); i++) {
    TransHopMeta hi=transMeta.getTransHop(i);
    drawHop(hi);
  }
  if (candidate != null) {
    drawHop(candidate,true);
  }
 else {
    if (startHopStep != null && endHopLocation != null) {
      Point fr=startHopStep.getLocation();
      Point to=endHopLocation;
      if (endHopStep == null) {
        gc.setForeground(EColor.GRAY);
      }
 else {
        gc.setForeground(EColor.BLUE);
      }
      Point start=real2screen(fr.x + iconsize / 2,fr.y + iconsize / 2);
      Point end=real2screen(to.x,to.y);
      drawArrow(start.x,start.y,end.x,end.y,theta,calcArrowLength(),1.2,null,startHopStep,endHopStep == null ? endHopLocation : endHopStep);
    }
 else     if (endHopStep != null && endHopLocation != null) {
      Point fr=endHopLocation;
      Point to=endHopStep.getLocation();
      if (startHopStep == null) {
        gc.setForeground(EColor.GRAY);
      }
 else {
        gc.setForeground(EColor.BLUE);
      }
      Point start=real2screen(fr.x,fr.y);
      Point end=real2screen(to.x + iconsize / 2,to.y + iconsize / 2);
      drawArrow(start.x,start.y,end.x,end.y,theta,calcArrowLength(),1.2,null,startHopStep == null ? endHopLocation : startHopStep,endHopStep);
    }
  }
  for (int i=0; i < transMeta.nrSteps(); i++) {
    StepMeta stepMeta=transMeta.getStep(i);
    if (stepMeta.isDrawn())     drawStep(stepMeta);
  }
  if (slowStepIndicatorEnabled) {
    for (int i=0; i < transMeta.nrSteps(); i++) {
      StepMeta stepMeta=transMeta.getStep(i);
      if (stepMeta.isDrawn())       checkDrawSlowStepIndicator(stepMeta);
    }
  }
  for (int i=0; i < transMeta.nrSteps(); i++) {
    StepMeta stepMeta=transMeta.getStep(i);
    if (stepMeta.isDrawn())     drawStepStatusIndicator(stepMeta);
  }
  for (int i=0; i < transMeta.nrSteps(); i++) {
    StepMeta stepMeta=transMeta.getStep(i);
    if (stepMeta.isDrawn())     drawStepPerformanceTable(stepMeta);
  }
  if (noInputStep != null) {
    gc.setLineWidth(2);
    gc.setForeground(EColor.RED);
    Point n=noInputStep.getLocation();
    gc.drawLine(n.x - 5,n.y - 5,n.x + iconsize + 10,n.y + iconsize + 10);
    gc.drawLine(n.x - 5,n.y + iconsize + 5,n.x + iconsize + 5,n.y - 5);
  }
  if (drop_candidate != null) {
    gc.setLineStyle(ELineStyle.SOLID);
    gc.setForeground(EColor.BLACK);
    Point screen=real2screen(drop_candidate.x,drop_candidate.y);
    gc.drawRectangle(screen.x,screen.y,iconsize,iconsize);
  }
  if (!shadow) {
    drawRect(selrect);
  }
}
