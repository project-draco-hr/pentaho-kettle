{
  EnvUtil.environmentInit();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("addsequencetest");
  PluginRegistry registry=PluginRegistry.getInstance();
  String rowGeneratorStepname="row generator step";
  RowGeneratorMeta rm=new RowGeneratorMeta();
  String rowGeneratorPid=registry.getPluginId(rm);
  StepMeta rowGeneratorStep=new StepMeta(rowGeneratorPid,rowGeneratorStepname,(StepMetaInterface)rm);
  transMeta.addStep(rowGeneratorStep);
  String fieldName[]={};
  String type[]={};
  String value[]={};
  String fieldFormat[]={};
  String group[]={};
  String decimal[]={};
  int intDummies[]={};
  rm.setDefault();
  rm.setFieldName(fieldName);
  rm.setFieldType(type);
  rm.setValue(value);
  rm.setFieldLength(intDummies);
  rm.setFieldPrecision(intDummies);
  rm.setRowLimit("10");
  rm.setFieldFormat(fieldFormat);
  rm.setGroup(group);
  rm.setDecimal(decimal);
  String seqStepname1="add sequence 1";
  AddSequenceMeta asm1=new AddSequenceMeta();
  asm1.setUseCounter(true);
  asm1.setValuename("counter1");
  asm1.setStartAt(10);
  asm1.setIncrementBy(1);
  asm1.setMaxValue(100);
  String addSeqPid1=registry.getPluginId(asm1);
  StepMeta addSeqStep1=new StepMeta(addSeqPid1,seqStepname1,(StepMetaInterface)asm1);
  transMeta.addStep(addSeqStep1);
  TransHopMeta hi1=new TransHopMeta(rowGeneratorStep,addSeqStep1);
  transMeta.addTransHop(hi1);
  String seqStepname2="add sequence 2";
  AddSequenceMeta asm2=new AddSequenceMeta();
  asm2.setUseCounter(true);
  asm2.setValuename("valuename2");
  asm2.setStartAt(1);
  asm2.setIncrementBy(1);
  asm2.setMaxValue(5);
  String addSeqPid2=registry.getPluginId(asm2);
  StepMeta addSeqStep2=new StepMeta(addSeqPid2,seqStepname2,(StepMetaInterface)asm2);
  transMeta.addStep(addSeqStep2);
  TransHopMeta hi2=new TransHopMeta(addSeqStep1,addSeqStep2);
  transMeta.addTransHop(hi2);
  String seqStepname3="add sequence 3";
  AddSequenceMeta asm3=new AddSequenceMeta();
  asm3.setUseCounter(true);
  asm3.setValuename("valuename3");
  asm3.setStartAt(1);
  asm3.setIncrementBy(3);
  asm3.setMaxValue(17);
  String addSeqPid3=registry.getPluginId(asm3);
  StepMeta addSeqStep3=new StepMeta(addSeqPid3,seqStepname3,(StepMetaInterface)asm3);
  transMeta.addStep(addSeqStep3);
  TransHopMeta hi3=new TransHopMeta(addSeqStep2,addSeqStep3);
  transMeta.addTransHop(hi3);
  String seqStepname4="add sequence 4";
  AddSequenceMeta asm4=new AddSequenceMeta();
  asm4.setUseCounter(true);
  asm4.setValuename("valuename4");
  asm4.setStartAt(10);
  asm4.setIncrementBy(-2);
  asm4.setMaxValue(3);
  String addSeqPid4=registry.getPluginId(asm4);
  StepMeta addSeqStep4=new StepMeta(addSeqPid4,seqStepname4,(StepMetaInterface)asm4);
  transMeta.addStep(addSeqStep4);
  TransHopMeta hi4=new TransHopMeta(addSeqStep3,addSeqStep4);
  transMeta.addTransHop(hi4);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  StepInterface si=trans.getStepInterface(seqStepname4,0);
  RowStepCollector endRc=new RowStepCollector();
  si.addRowListener(endRc);
  trans.startThreads();
  trans.waitUntilFinished();
  List<RowMetaAndData> goldenImageRows=createResultData1();
  List<RowMetaAndData> resultRows1=endRc.getRowsWritten();
  checkRows(resultRows1,goldenImageRows);
}
