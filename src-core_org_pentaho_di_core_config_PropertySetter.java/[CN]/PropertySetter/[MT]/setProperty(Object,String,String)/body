{
  String[] expression=value.split(":");
  Object val;
  if (expression.length == 0) {
    throw new KettleConfigException("No value found for property [" + property + "] and obbject class ["+ obj.getClass().getName()+ "]");
  }
  String directive=expression[0];
  if (I18N.equalsIgnoreCase(directive)) {
    if (expression.length == 3) {
      String packageName=expression[1];
      String key=expression[2];
      val=BaseMessages.getString(packageName,key);
    }
 else {
      throw new KettleConfigException("the i18, directive need 3 parameters: i18n, the package name and the key, but " + expression.length + " parameters were found in ["+ value+ "]");
    }
  }
 else   if (OGNL.equalsIgnoreCase(directive)) {
    if (expression.length >= 2) {
      OgnlExpression expr=ognl.get(value);
      if (expr == null) {
synchronized (ognl) {
          try {
            ognl.put(value,expr=new OgnlExpression(expression[1]));
          }
 catch (          OgnlException e) {
            throw new KettleConfigException("Unable to parse expression [" + expression[1] + "] with Ognl",e);
          }
        }
      }
      try {
        val=expr.getValue(octx,this);
      }
 catch (      OgnlException e) {
        throw new KettleConfigException("Unable to get value for expression [" + expression[1] + "] with Ognl",e);
      }
    }
 else {
      throw new KettleConfigException("the ognl, directive need at least 2 parameters: ongl and the expression but " + expression.length + " parameters were found in ["+ value+ "]");
    }
  }
 else {
    val=value;
  }
  try {
    BeanUtils.setProperty(obj,property,val);
  }
 catch (  Exception e) {
    throw new KettleConfigException(e);
  }
}
