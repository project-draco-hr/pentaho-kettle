{
  boolean added=addJob(jobMeta);
  if (added) {
    boolean showLocation=false;
    boolean addTab=true;
    String tabName=spoon.delegates.tabs.makeTabName(jobMeta,showLocation);
    TabMapEntry tabEntry=spoon.delegates.tabs.findTabMapEntry(tabName,ObjectType.JOB_GRAPH);
    if (tabEntry != null) {
      showLocation=true;
      tabEntry.setShowingLocation(true);
      String newTabName=spoon.delegates.tabs.makeTabName(tabEntry.getObject().getMeta(),showLocation);
      tabEntry.getTabItem().setText(newTabName);
      tabName=spoon.delegates.tabs.makeTabName(jobMeta,showLocation);
      tabEntry=spoon.delegates.tabs.findTabMapEntry(tabName,ObjectType.JOB_GRAPH);
      if (tabEntry != null) {
        addTab=false;
      }
    }
    if (addTab) {
      JobGraph jobGraph=new JobGraph(spoon.tabfolder.getSwtTabset(),spoon,jobMeta);
      TabItem tabItem=new TabItem(spoon.tabfolder,tabName,tabName);
      String toolTipText=BaseMessages.getString(PKG,"Spoon.TabJob.Tooltip",spoon.delegates.tabs.makeTabName(jobMeta,showLocation));
      if (!Const.isEmpty(jobMeta.getFilename()))       toolTipText+=Const.CR + Const.CR + jobMeta.getFilename();
      tabItem.setToolTipText(toolTipText);
      tabItem.setImage(GUIResource.getInstance().getImageJobGraph());
      tabItem.setControl(jobGraph);
      if (jobMeta.getJobLogTable().getDatabaseMeta() != null && !Const.isEmpty(jobMeta.getJobLogTable().getTableName())) {
        jobGraph.addAllTabs();
        jobGraph.extraViewTabFolder.setSelection(jobGraph.jobHistoryDelegate.getJobHistoryTab());
      }
      String versionLabel=jobMeta.getObjectRevision() == null ? null : jobMeta.getObjectRevision().getName();
      tabEntry=new TabMapEntry(tabItem,jobMeta.getFilename(),jobMeta.getName(),jobMeta.getRepositoryDirectory(),versionLabel,jobGraph,ObjectType.JOB_GRAPH);
      tabEntry.setShowingLocation(showLocation);
      spoon.delegates.tabs.addTab(tabEntry);
    }
    int idx=spoon.tabfolder.indexOf(tabEntry.getTabItem());
    spoon.tabfolder.setSelected(idx);
    spoon.setUndoMenu(jobMeta);
    spoon.enableMenus();
  }
 else {
    TabMapEntry tabEntry=spoon.delegates.tabs.findTabMapEntry(jobMeta);
    int idx=spoon.tabfolder.indexOf(tabEntry.getTabItem());
    spoon.tabfolder.setSelected(idx);
    spoon.setUndoMenu(jobMeta);
    spoon.enableMenus();
  }
}
