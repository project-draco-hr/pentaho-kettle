{
  String key=addJob(jobMeta);
  if (key != null) {
    String tabName=spoon.delegates.tabs.makeJobGraphTabName(jobMeta);
    TabItem tabItem=spoon.delegates.tabs.findTabItem(tabName,TabMapEntry.OBJECT_TYPE_JOB_GRAPH);
    if (tabItem == null) {
      JobGraph jobGraph=new JobGraph(spoon.tabfolder.getSwtTabset(),spoon,jobMeta);
      tabItem=new TabItem(spoon.tabfolder,tabName,tabName);
      String toolTipText=BaseMessages.getString(PKG,"Spoon.TabJob.Tooltip",spoon.delegates.tabs.makeJobGraphTabName(jobMeta));
      if (!Const.isEmpty(jobMeta.getFilename()))       toolTipText+=Const.CR + Const.CR + jobMeta.getFilename();
      tabItem.setToolTipText(toolTipText);
      tabItem.setImage(GUIResource.getInstance().getImageJobGraph());
      tabItem.setControl(jobGraph);
      spoon.delegates.tabs.addTab(new TabMapEntry(tabItem,tabName,jobGraph,TabMapEntry.OBJECT_TYPE_JOB_GRAPH));
      if (jobMeta.getLogConnection() != null && !Const.isEmpty(jobMeta.getLogTable())) {
        jobGraph.addAllTabs();
        jobGraph.extraViewTabFolder.setSelection(jobGraph.jobHistoryDelegate.getJobHistoryTab());
      }
    }
    int idx=spoon.tabfolder.indexOf(tabItem);
    spoon.tabfolder.setSelected(idx);
    spoon.setUndoMenu(jobMeta);
    spoon.enableMenus();
  }
}
