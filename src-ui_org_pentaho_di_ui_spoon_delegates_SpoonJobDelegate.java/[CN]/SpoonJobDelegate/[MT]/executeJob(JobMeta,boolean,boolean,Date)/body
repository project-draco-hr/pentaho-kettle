{
  if (jobMeta == null) {
    return;
  }
  JobExecutionConfiguration executionConfiguration=spoon.getJobExecutionConfiguration();
  Object data[]=spoon.variables.getData();
  String fields[]=spoon.variables.getRowMeta().getFieldNames();
  Map<String,String> variableMap=new HashMap<String,String>();
  for (int idx=0; idx < fields.length; idx++) {
    variableMap.put(fields[idx],data[idx].toString());
  }
  executionConfiguration.setVariables(variableMap);
  executionConfiguration.getUsedVariables(jobMeta);
  executionConfiguration.setReplayDate(replayDate);
  executionConfiguration.setLogLevel(spoon.getLog().getLogLevel());
  JobExecutionConfigurationDialog dialog=new JobExecutionConfigurationDialog(spoon.getShell(),executionConfiguration,jobMeta);
  if (dialog.open()) {
    addJobLog(jobMeta);
    JobLog jobLog=spoon.getActiveJobLog();
    if (executionConfiguration.isExecutingLocally()) {
      jobLog.startJob(executionConfiguration.getReplayDate());
    }
 else     if (executionConfiguration.isExecutingRemotely()) {
      if (executionConfiguration.getRemoteServer() != null) {
        Job.sendXMLToSlaveServer(jobMeta,executionConfiguration);
        spoon.delegates.slaves.addSpoonSlave(executionConfiguration.getRemoteServer());
      }
 else {
        MessageBox mb=new MessageBox(spoon.getShell(),SWT.OK | SWT.ICON_INFORMATION);
        mb.setMessage(Messages.getString("Spoon.Dialog.NoRemoteServerSpecified.Message"));
        mb.setText(Messages.getString("Spoon.Dialog.NoRemoteServerSpecified.Title"));
        mb.open();
      }
    }
  }
}
