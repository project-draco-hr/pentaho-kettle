{
  CheckResult cr;
  if (databaseMeta != null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Connection exists",stepMeta);
    remarks.add(cr);
    Database db=new Database(databaseMeta);
    databases=new Database[]{db};
    try {
      db.connect();
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Connection to database OK",stepMeta);
      remarks.add(cr);
      if (sql != null && sql.length() != 0) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"SQL statement is entered",stepMeta);
        remarks.add(cr);
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"SQL statement is missing.",stepMeta);
        remarks.add(cr);
      }
    }
 catch (    KettleException e) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"An error occurred: " + e.getMessage(),stepMeta);
      remarks.add(cr);
    }
 finally {
      db.disconnect();
    }
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Please select or create a connection to use",stepMeta);
    remarks.add(cr);
  }
  if (executedEachInputRow) {
    if (input.length > 0) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is receiving info from other steps.",stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No input received from other steps!",stepMeta);
      remarks.add(cr);
    }
  }
 else {
    if (input.length > 0) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Step is receiving info from other steps but the SQL is only executed once!",stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"No input received from other steps. That's OK because the SQL is only executed once.",stepMeta);
      remarks.add(cr);
    }
  }
}
