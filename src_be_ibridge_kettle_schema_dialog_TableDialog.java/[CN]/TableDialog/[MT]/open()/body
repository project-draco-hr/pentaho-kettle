{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      tableinfo.setChanged();
    }
  }
;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("Table properties screen");
  int middle=schema.props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText("Name ");
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wName.setText("");
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(middle,350);
  wName.setLayoutData(fdName);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText("Target table ");
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wName,margin * 2);
  wlTable.setLayoutData(fdlTable);
  wTable=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.right=new FormAttachment(middle,350);
  fdTable.top=new FormAttachment(wName,margin * 2);
  wTable.setLayoutData(fdTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText("&Browse...");
  fdbTable=new FormData();
  fdbTable.left=new FormAttachment(wTable,5);
  fdbTable.right=new FormAttachment(middle,350 + margin + 75);
  fdbTable.top=new FormAttachment(wName,margin);
  wbTable.setLayoutData(fdbTable);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wlConnection=new Label(shell,SWT.RIGHT);
  wlConnection.setText("Connection ");
  props.setLook(wlConnection);
  fdlConnection=new FormData();
  fdlConnection.left=new FormAttachment(0,0);
  fdlConnection.top=new FormAttachment(wTable,margin);
  fdlConnection.right=new FormAttachment(middle,-margin);
  wlConnection.setLayoutData(fdlConnection);
  wConnection=new CCombo(shell,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wConnection);
  for (int i=0; i < schema.nrConnections(); i++) {
    DatabaseMeta ci=schema.getConnection(i);
    wConnection.add(ci.getName());
  }
  wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  fdConnection=new FormData();
  fdConnection.left=new FormAttachment(middle,0);
  fdConnection.top=new FormAttachment(wTable,margin);
  fdConnection.right=new FormAttachment(middle,350);
  wConnection.setLayoutData(fdConnection);
  wbConnection=new Button(shell,SWT.PUSH);
  wbConnection.setText("&New...");
  wbConnection.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DatabaseMeta ci=new DatabaseMeta();
      DatabaseDialog cid=new DatabaseDialog(shell,SWT.NONE,log,ci,schema.props);
      if (cid.open() != null) {
        schema.addConnection(ci);
        wConnection.add(ci.getName());
        wConnection.select(wConnection.getItemCount() - 1);
      }
    }
  }
);
  fdbConnection=new FormData();
  fdbConnection.left=new FormAttachment(wConnection,margin * 2);
  fdbConnection.top=new FormAttachment(wTable,margin);
  wbConnection.setLayoutData(fdbConnection);
  wlType=new Label(shell,SWT.RIGHT);
  wlType.setText("Type of table: ");
  props.setLook(wlType);
  fdlType=new FormData();
  fdlType.left=new FormAttachment(0,0);
  fdlType.right=new FormAttachment(middle,-margin);
  fdlType.top=new FormAttachment(wConnection,margin);
  wlType.setLayoutData(fdlType);
  wType=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wType.setText("Select the table type");
  props.setLook(wType);
  for (int i=0; i < TableMeta.type_table_desc.length; i++) {
    wType.add(TableMeta.type_table_desc[i]);
  }
  wType.addModifyListener(lsMod);
  fdType=new FormData();
  fdType.left=new FormAttachment(middle,0);
  fdType.top=new FormAttachment(wConnection,margin);
  fdType.right=new FormAttachment(middle,350);
  wType.setLayoutData(fdType);
  wlSize=new Label(shell,SWT.RIGHT);
  wlSize.setText("Relative size ");
  props.setLook(wlSize);
  fdlSize=new FormData();
  fdlSize.left=new FormAttachment(0,0);
  fdlSize.right=new FormAttachment(middle,-margin);
  fdlSize.top=new FormAttachment(wType,margin);
  wlSize.setLayoutData(fdlSize);
  wSize=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wSize.setText("");
  props.setLook(wSize);
  wSize.addModifyListener(lsMod);
  fdSize=new FormData();
  fdSize.left=new FormAttachment(middle,0);
  fdSize.right=new FormAttachment(middle,350);
  fdSize.top=new FormAttachment(wType,margin);
  wSize.setLayoutData(fdSize);
  wTabfolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabfolder,Props.WIDGET_STYLE_TAB);
  CTabItem wItemFields=new CTabItem(wTabfolder,SWT.NONE);
  wItemFields.setText("Fields");
  final int FieldsCols=7;
  final int FieldsRows=tableinfo.nrFields();
  ColumnInfo[] colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo("Fieldname",ColumnInfo.COLUMN_TYPE_TEXT,"",false,false);
  colinf[1]=new ColumnInfo("DB Formula",ColumnInfo.COLUMN_TYPE_TEXT,"",false,false);
  colinf[2]=new ColumnInfo("Field Type",ColumnInfo.COLUMN_TYPE_CCOMBO,"",TableField.type_field_desc);
  colinf[3]=new ColumnInfo("Aggr. Type",ColumnInfo.COLUMN_TYPE_CCOMBO,"",TableField.type_aggregation_desc);
  colinf[4]=new ColumnInfo("Hidden?",ColumnInfo.COLUMN_TYPE_CCOMBO,"",new String[]{"N","Y"});
  colinf[5]=new ColumnInfo("Exact?",ColumnInfo.COLUMN_TYPE_CCOMBO,"",new String[]{"N","Y"});
  colinf[6]=new ColumnInfo("Description",ColumnInfo.COLUMN_TYPE_BUTTON,"","...");
  wFields=new TableView(wTabfolder,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,false,lsMod,schema.props);
  SelectionAdapter selField=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      String str=wFields.getButtonString();
      EnterTextDialog etd=new EnterTextDialog(shell,schema.props,"Button","enter text",str);
      etd.setModal();
      String res=etd.open();
      if (res != null) {
        wFields.setButtonString(res);
        wFields.closeActiveButton();
      }
    }
  }
;
  colinf[6].setSelectionAdapter(selField);
  colinf[6].setToolTip("Click on this button to edit the description...");
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,0);
  wFields.setLayoutData(fdFields);
  wItemFields.setControl(wFields);
  CTabItem wItemConditions=new CTabItem(wTabfolder,SWT.NONE);
  wItemConditions.setText("Conditions");
  final int ConditionsCols=5;
  final int ConditionsRows=tableinfo.nrConditions();
  colinf=new ColumnInfo[ConditionsCols];
  colinf[0]=new ColumnInfo("Name",ColumnInfo.COLUMN_TYPE_TEXT,"",false,false);
  colinf[1]=new ColumnInfo("Fieldname",ColumnInfo.COLUMN_TYPE_TEXT,"",false,false);
  colinf[2]=new ColumnInfo("Comparator",ColumnInfo.COLUMN_TYPE_CCOMBO,"",WhereCondition.comparators);
  colinf[3]=new ColumnInfo("DB Formula",ColumnInfo.COLUMN_TYPE_TEXT,"",false,false);
  colinf[4]=new ColumnInfo("Description",ColumnInfo.COLUMN_TYPE_BUTTON,"","...");
  wConditions=new TableView(wTabfolder,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,ConditionsRows,false,lsMod,schema.props);
  SelectionAdapter selCondition=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      String str=wConditions.getButtonString();
      EnterTextDialog etd=new EnterTextDialog(shell,schema.props,"Button","enter text",str);
      etd.setModal();
      String res=etd.open();
      if (res != null) {
        wConditions.setButtonString(res);
        wConditions.closeActiveButton();
      }
    }
  }
;
  colinf[2].setSelectionAdapter(selCondition);
  colinf[2].setToolTip("Click on this button to edit the description...");
  fdConditions=new FormData();
  fdConditions.left=new FormAttachment(0,0);
  fdConditions.top=new FormAttachment(0,0);
  fdConditions.right=new FormAttachment(100,0);
  fdConditions.bottom=new FormAttachment(100,0);
  wConditions.setLayoutData(fdConditions);
  wItemConditions.setControl(wConditions);
  fdTabfolder=new FormData();
  fdTabfolder.left=new FormAttachment(0,0);
  fdTabfolder.top=new FormAttachment(wSize,margin);
  fdTabfolder.right=new FormAttachment(100,0);
  fdTabfolder.bottom=new FormAttachment(100,-50);
  wTabfolder.setLayoutData(fdTabfolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(" &Get ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  fdOK=new FormData();
  fdOK.left=new FormAttachment(25,0);
  fdOK.bottom=new FormAttachment(100,0);
  wOK.setLayoutData(fdOK);
  fdGet=new FormData();
  fdGet.left=new FormAttachment(50,0);
  fdGet.bottom=new FormAttachment(100,0);
  wGet.setLayoutData(fdGet);
  fdCancel=new FormData();
  fdCancel.left=new FormAttachment(75,0);
  fdCancel.bottom=new FormAttachment(100,0);
  wCancel.setLayoutData(fdCancel);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wGet.addListener(SWT.Selection,lsGet);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wSize.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  WindowProperty winprop=schema.props.getScreen(shell.getText());
  if (winprop != null)   winprop.setShell(shell);
 else   shell.pack();
  wTabfolder.setSelection(0);
  getData();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return tablename;
}
