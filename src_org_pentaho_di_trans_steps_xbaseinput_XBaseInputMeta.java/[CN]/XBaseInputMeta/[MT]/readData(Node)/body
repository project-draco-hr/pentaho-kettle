{
  try {
    dbfFileName=XMLHandler.getTagValue(stepnode,"file_dbf");
    rowLimit=Const.toInt(XMLHandler.getTagValue(stepnode,"limit"),0);
    rowNrAdded="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"add_rownr"));
    rowNrField=XMLHandler.getTagValue(stepnode,"field_rownr");
    includeFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"include"));
    filenameField=XMLHandler.getTagValue(stepnode,"include_field");
    charactersetName=XMLHandler.getTagValue(stepnode,"charset_name");
    acceptingFilenames="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"accept_filenames"));
    acceptingField=XMLHandler.getTagValue(stepnode,"accept_field");
    acceptingStepName=XMLHandler.getTagValue(stepnode,"accept_stepname");
  }
 catch (  Exception e) {
    throw new KettleXMLException(Messages.getString("XBaseInputMeta.Exception.UnableToReadStepInformationFromXML"),e);
  }
}
