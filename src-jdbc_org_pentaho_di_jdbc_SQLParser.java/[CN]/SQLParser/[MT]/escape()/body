{
  char tc=terminator;
  terminator='}';
  StringBuffer escBuf=new StringBuffer();
  s++;
  skipWhiteSpace();
  if (in[s] == '?') {
    copyParam("@return_status",-1);
    skipWhiteSpace();
    mustbe('=',false);
    skipWhiteSpace();
    while (Character.isLetter(in[s])) {
      escBuf.append(Character.toLowerCase(in[s++]));
    }
    skipWhiteSpace();
    String esc=escBuf.toString();
    if ("call".equals(esc)) {
      callEscape();
    }
 else {
      throw new SQLException(Messages.get("error.parsesql.syntax","call",String.valueOf(s)),"22019");
    }
  }
 else {
    while (Character.isLetter(in[s])) {
      escBuf.append(Character.toLowerCase(in[s++]));
    }
    skipWhiteSpace();
    String esc=escBuf.toString();
    if ("call".equals(esc)) {
      callEscape();
    }
 else     if ("t".equals(esc)) {
      if (!getDateTimeField(timeMask)) {
        throw new SQLException(Messages.get("error.parsesql.syntax","time",String.valueOf(s)),"22019");
      }
    }
 else     if ("d".equals(esc)) {
      if (!getDateTimeField(dateMask)) {
        throw new SQLException(Messages.get("error.parsesql.syntax","date",String.valueOf(s)),"22019");
      }
    }
 else     if ("ts".equals(esc)) {
      if (!getDateTimeField(timestampMask)) {
        throw new SQLException(Messages.get("error.parsesql.syntax","timestamp",String.valueOf(s)),"22019");
      }
    }
 else {
      throw new SQLException(Messages.get("error.parsesql.badesc",esc,String.valueOf(s)),"22019");
    }
  }
  mustbe('}',false);
  terminator=tc;
}
