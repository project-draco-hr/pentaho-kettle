{
  shell=new Shell(parentShell,style);
  props.setLook(shell);
  shell.setImage(GUIResource.getInstance().getImageSpoon());
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.Title"));
  List<Button> buttons=new ArrayList<Button>();
  Button wClose=new Button(shell,SWT.PUSH);
  wClose.setText(BaseMessages.getString(PKG,"System.Button.Close"));
  wClose.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      close();
    }
  }
);
  buttons.add(wClose);
  if (!Const.isEmpty(loggingText)) {
    Button wLog=new Button(shell,SWT.PUSH);
    wLog.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.ShowLog"));
    wLog.addListener(SWT.Selection,new Listener(){
      public void handleEvent(      Event e){
        log();
      }
    }
);
    buttons.add(wLog);
  }
  Button wStop=new Button(shell,SWT.PUSH);
  wStop.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.Stop.Label"));
  wStop.setToolTipText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.Stop.ToolTip"));
  wStop.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      stop.run();
      close();
    }
  }
);
  buttons.add(wStop);
  wNext=new Button(shell,SWT.PUSH);
  wNext.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.Next.Label"));
  wNext.setToolTipText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.Next.ToolTip"));
  wNext.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      wNext.setEnabled(false);
      moreRows.run();
    }
  }
);
  wNext.setEnabled(false);
  buttons.add(wNext);
  wClose.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.Close.Label"));
  wClose.setToolTipText(BaseMessages.getString(PKG,"PreviewRowsDialog.Button.Close.ToolTip"));
  BaseStepDialog.positionBottomButtons(shell,buttons.toArray(new Button[buttons.size()]),Const.MARGIN,null);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      close();
    }
  }
);
  BaseStepDialog.setSize(shell);
  int margin=Const.MARGIN;
  wlFields=new Label(shell,SWT.LEFT);
  wlFields.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.Header",""));
  props.setLook(wlFields);
  FormData fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(100,0);
  fdlFields.top=new FormAttachment(0,margin);
  wlFields.setLayoutData(fdlFields);
  tabFolder=new CTabFolder(shell,SWT.MULTI);
  FormData fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,-50);
  props.setLook(tabFolder);
  tabFolder.setLayoutData(fdFields);
  rowsCtabItem=new CTabItem(tabFolder,SWT.NONE);
  rowsCtabItem.setText(BaseMessages.getString(PKG,"PreviewRowsDialog.TabHeader"));
  rowsComposite=new Composite(tabFolder,SWT.NONE);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,0);
  rowsComposite.setLayoutData(fdFields);
  rowsComposite.setLayout(new FormLayout());
  props.setLook(rowsComposite);
  rowsCtabItem.setControl(rowsComposite);
  tabFolder.setSelection(0);
  List<SpoonUiExtenderPluginInterface> relevantExtenders=SpoonUiExtenderPluginType.getInstance().getRelevantExtenders(TransPreviewDialog.class,TRANS_PREVIEW_DIALOG);
  for (  SpoonUiExtenderPluginInterface relevantExtender : relevantExtenders) {
    relevantExtender.uiEvent(this,TRANS_PREVIEW_DIALOG);
  }
  shell.open();
  if (!waitingForRows) {
    while (!shell.isDisposed()) {
      if (!shell.getDisplay().readAndDispatch()) {
        shell.getDisplay().sleep();
      }
    }
  }
}
