{
  Job job=CarteResource.getJob(id);
  CarteObjectEntry entry=CarteResource.getCarteObjectEntry(id);
  try {
    if (job.isInitialized() && !job.isActive()) {
      if (job.getRep() != null && !job.getRep().isConnected()) {
        if (job.getRep().getUserInfo() != null) {
          job.getRep().connect(job.getRep().getUserInfo().getLogin(),job.getRep().getUserInfo().getPassword());
        }
 else {
          job.getRep().connect(null,null);
        }
      }
synchronized (CarteSingleton.getInstance().getJobMap()) {
        JobConfiguration jobConfiguration=CarteSingleton.getInstance().getJobMap().getConfiguration(entry);
        String carteObjectId=UUID.randomUUID().toString();
        SimpleLoggingObject servletLoggingObject=new SimpleLoggingObject(getClass().getName(),LoggingObjectType.CARTE,null);
        servletLoggingObject.setContainerObjectId(carteObjectId);
        Job newJob=new Job(job.getRep(),job.getJobMeta(),servletLoggingObject);
        newJob.setLogLevel(job.getLogLevel());
        CentralLogStore.discardLines(job.getLogChannelId(),true);
        CarteSingleton.getInstance().getJobMap().replaceJob(entry,newJob,jobConfiguration);
        job=newJob;
      }
    }
    job.start();
  }
 catch (  KettleException e) {
    e.printStackTrace();
  }
  return getJobStatus(id);
}
