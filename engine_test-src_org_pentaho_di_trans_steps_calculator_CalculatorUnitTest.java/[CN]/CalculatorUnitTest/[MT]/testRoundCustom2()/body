{
  assertRoundCustom2(2.0,1.2,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(1.0,1.2,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(2.0,1.2,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(1.0,1.2,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(1.0,1.2,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(1.0,1.2,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(1.0,1.2,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(1.0,1.2,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(2.0,1.5,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(1.0,1.5,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(2.0,1.5,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(1.0,1.5,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(2.0,1.5,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(1.0,1.5,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(2.0,1.5,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(2.0,1.5,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(2.0,1.7,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(1.0,1.7,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(2.0,1.7,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(1.0,1.7,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(2.0,1.7,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(2.0,1.7,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(2.0,1.7,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(2.0,1.7,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(3.0,2.2,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(2.0,2.2,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(3.0,2.2,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(2.0,2.2,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(2.0,2.2,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(2.0,2.2,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(2.0,2.2,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(2.0,2.2,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(3.0,2.5,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(2.0,2.5,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(3.0,2.5,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(2.0,2.5,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(3.0,2.5,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(2.0,2.5,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(2.0,2.5,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(3.0,2.5,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(3.0,2.7,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(2.0,2.7,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(3.0,2.7,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(2.0,2.7,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(3.0,2.7,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(3.0,2.7,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(3.0,2.7,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(3.0,2.7,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(-2.0,-1.2,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(-1.0,-1.2,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(-1.0,-1.2,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(-2.0,-1.2,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(-1.0,-1.2,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(-1.0,-1.2,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(-1.0,-1.2,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(-1.0,-1.2,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(-2.0,-1.5,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(-1.0,-1.5,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(-1.0,-1.5,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(-2.0,-1.5,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(-2.0,-1.5,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(-1.0,-1.5,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(-2.0,-1.5,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(-1.0,-1.5,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(-2.0,-1.7,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(-1.0,-1.7,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(-1.0,-1.7,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(-2.0,-1.7,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(-2.0,-1.7,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(-2.0,-1.7,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(-2.0,-1.7,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(-2.0,-1.7,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(-3.0,-2.2,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(-2.0,-2.2,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(-2.0,-2.2,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(-3.0,-2.2,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(-2.0,-2.2,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(-2.0,-2.2,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(-2.0,-2.2,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(-2.0,-2.2,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(-3.0,-2.5,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(-2.0,-2.5,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(-2.0,-2.5,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(-3.0,-2.5,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(-3.0,-2.5,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(-2.0,-2.5,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(-2.0,-2.5,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(-2.0,-2.5,0,Const.ROUND_HALF_CEILING);
  assertRoundCustom2(-3.0,-2.7,0,BigDecimal.ROUND_UP);
  assertRoundCustom2(-2.0,-2.7,0,BigDecimal.ROUND_DOWN);
  assertRoundCustom2(-2.0,-2.7,0,BigDecimal.ROUND_CEILING);
  assertRoundCustom2(-3.0,-2.7,0,BigDecimal.ROUND_FLOOR);
  assertRoundCustom2(-3.0,-2.7,0,BigDecimal.ROUND_HALF_UP);
  assertRoundCustom2(-3.0,-2.7,0,BigDecimal.ROUND_HALF_DOWN);
  assertRoundCustom2(-3.0,-2.7,0,BigDecimal.ROUND_HALF_EVEN);
  assertRoundCustom2(-3.0,-2.7,0,Const.ROUND_HALF_CEILING);
}
