{
  this.lsCancel=new Listener(){
    public void handleEvent(    final Event event){
      cancel();
    }
  }
;
  this.lsOK=new Listener(){
    public void handleEvent(    final Event event){
      ok();
    }
  }
;
  this.wAbout.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      new TeraFastAboutDialog(TeraFastDialog.this.shell).open();
    }
  }
);
  this.wCancel.addListener(SWT.Selection,this.lsCancel);
  this.wOK.addListener(SWT.Selection,this.lsOK);
  this.lsDef=new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    final SelectionEvent event){
      ok();
    }
  }
;
  this.lsGetLU=new Listener(){
    public void handleEvent(    final Event event){
      getUpdate();
    }
  }
;
  this.wGetLU.addListener(SWT.Selection,this.lsGetLU);
  this.wStepname.addSelectionListener(this.lsDef);
  final String allFileTypes=BaseMessages.getString(PKG,"TeraFastDialog.Filetype.All");
  this.wbControlFile.addSelectionListener(new SimpleFileSelection(this.shell,this.wControlFile,allFileTypes));
  this.wbDataFile.addSelectionListener(new SimpleFileSelection(this.shell,this.wDataFile,allFileTypes));
  this.wbFastLoadPath.addSelectionListener(new SimpleFileSelection(this.shell,this.wFastLoadPath,allFileTypes));
  this.wbLogFile.addSelectionListener(new SimpleFileSelection(this.shell,this.wLogFile,allFileTypes));
  this.wDoMapping.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    final Event event){
      generateMappings();
    }
  }
);
  this.wAscLink.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    final Event event){
      Program.launch(event.text);
    }
  }
);
  this.shell.addShellListener(new ShellAdapter(){
    @Override public void shellClosed(    final ShellEvent event){
      cancel();
    }
  }
);
}
