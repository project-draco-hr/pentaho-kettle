{
  try {
    getXMLDataMeta meta=new getXMLDataMeta();
    getInfo(meta);
    if (!checkLoopXPath(meta))     return;
    FileInputList inputList=meta.getFiles(transMeta);
    if (meta.getIsInFields()) {
    }
 else     if (inputList.getFiles().size() > 0) {
      wFields.removeAll();
      String encodage="UTF-8";
      if (!Const.isEmpty(meta.getEncoding())) {
        encodage=meta.getEncoding();
      }
      DocumentBuilder builder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
      Document document=builder.parse(new InputSource(new InputStreamReader(new FileInputStream(KettleVFS.getFilename(inputList.getFile(0))),encodage)));
      XPath xpath=XPathFactory.newInstance().newXPath();
      NodeList widgetNodes=(NodeList)xpath.evaluate(meta.getLoopXPath(),document,XPathConstants.NODESET);
      HashSet<String> list=new HashSet<String>();
      if (widgetNodes.getLength() > 0) {
        for (int n=0; n < widgetNodes.getLength(); n++) {
          String valueNode=null;
          for (int i=0; i < widgetNodes.item(n).getChildNodes().getLength(); i++) {
            String nodename=widgetNodes.item(n).getChildNodes().item(i).getNodeName();
            if (!list.contains(nodename) && !nodename.equals("#text")) {
              TableItem item=new TableItem(wFields.table,SWT.NONE);
              item.setText(1,nodename);
              item.setText(2,nodename);
              item.setText(3,getXMLDataField.ElementTypeDesc[0]);
              valueNode=XMLHandler.getNodeValue(widgetNodes.item(n).getChildNodes().item(i));
              if (IsDate(valueNode))               item.setText(4,"Date");
 else               if (IsInteger(valueNode))               item.setText(4,"Integer");
 else               if (IsNumber(valueNode))               item.setText(4,"Number");
 else               item.setText(4,"String");
              list.add(nodename);
            }
          }
          list.clear();
          for (int i=0; i < widgetNodes.item(n).getAttributes().getLength(); i++) {
            String attributname=widgetNodes.item(n).getAttributes().item(i).getNodeName();
            if (!list.contains(attributname)) {
              TableItem item=new TableItem(wFields.table,SWT.NONE);
              item.setText(1,attributname);
              item.setText(2,attributname);
              item.setText(3,getXMLDataField.ElementTypeDesc[1]);
              valueNode=widgetNodes.item(n).getAttributes().item(i).getNodeValue();
              if (IsDate(valueNode))               item.setText(4,"Date");
 else               if (IsInteger(valueNode))               item.setText(4,"Integer");
 else               if (IsNumber(valueNode))               item.setText(4,"Number");
 else               item.setText(4,"String");
              list.add(attributname);
            }
          }
        }
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
 catch (  Exception e) {
    new ErrorDialog(shell,Messages.getString("getXMLDataDialog.ErrorParsingData.DialogTitle"),Messages.getString("getXMLDataDialog.ErrorParsingData.DialogMessage"),e);
  }
}
