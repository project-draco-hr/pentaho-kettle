{
  try {
    list.clear();
    getXMLDataMeta meta=new getXMLDataMeta();
    getInfo(meta);
    if (!checkLoopXPath(meta))     return;
    FileInputList inputList=meta.getFiles(transMeta);
    if (meta.getIsInFields()) {
    }
 else     if (inputList.getFiles().size() > 0) {
      wFields.removeAll();
      String encodage="UTF-8";
      if (!Const.isEmpty(meta.getEncoding())) {
        encodage=meta.getEncoding();
      }
      DocumentBuilder builder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
      Document document=builder.parse(new InputSource(new InputStreamReader(new FileInputStream(KettleVFS.getFilename(inputList.getFile(0))),encodage)));
      XPath xpath=XPathFactory.newInstance().newXPath();
      NodeList widgetNodes=(NodeList)xpath.evaluate(meta.getLoopXPath(),document,XPathConstants.NODESET);
      if (widgetNodes.getLength() > 0) {
        for (int n=0; n < widgetNodes.getLength(); n++) {
          Node widgetNode=widgetNodes.item(n);
          setAttribute(widgetNode,widgetNode.getNodeName(),0,true);
          setNodes(widgetNode,widgetNode.getNodeName(),0);
        }
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
 catch (  Exception e) {
    new ErrorDialog(shell,Messages.getString("getXMLDataDialog.ErrorParsingData.DialogTitle"),Messages.getString("getXMLDataDialog.ErrorParsingData.DialogMessage"),e);
  }
}
