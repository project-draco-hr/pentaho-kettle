{
  for (int i=0; i < data.nrFields; i++) {
    JsonOutputField outputField=meta.getOutputFields()[i];
    ValueMetaInterface v=data.inputRowMeta.getValueMeta(data.fieldIndexes[i]);
    JSONObject jo=new JSONObject();
switch (v.getType()) {
case ValueMeta.TYPE_BOOLEAN:
      jo.put(outputField.getElementName(),data.inputRowMeta.getBoolean(row,data.fieldIndexes[i]));
    break;
case ValueMeta.TYPE_INTEGER:
  jo.put(outputField.getElementName(),data.inputRowMeta.getInteger(row,data.fieldIndexes[i]));
break;
case ValueMeta.TYPE_NUMBER:
jo.put(outputField.getElementName(),data.inputRowMeta.getNumber(row,data.fieldIndexes[i]));
break;
case ValueMeta.TYPE_BIGNUMBER:
jo.put(outputField.getElementName(),data.inputRowMeta.getBigNumber(row,data.fieldIndexes[i]));
break;
default :
jo.put(outputField.getElementName(),data.inputRowMeta.getString(row,data.fieldIndexes[i]));
break;
}
data.ja.add(jo);
}
data.nrRow++;
if (data.nrRowsInBloc > 0) {
if (data.nrRow % data.nrRowsInBloc == 0) {
outPutRow(row);
}
}
}
