{
  String value=null;
  JsonNode jsonDoc=this.compatibilityFactory.getJsonNode();
  try {
    value=data.mapper.writeValueAsString(jsonDoc);
  }
 catch (  Exception e) {
    throw new KettleStepException("Cannot encode JSON",e);
  }
  if (data.outputValue && !first) {
    Object[] outputRowData=RowDataUtil.addValueData(rowData,data.inputRowMetaSize,value);
    putRow(data.outputRowMeta,outputRowData);
    incrementLinesOutput();
  }
  if (data.writeToFile) {
    if (!openNewFile()) {
      throw new KettleStepException(BaseMessages.getString(PKG,"JsonOutput.Error.OpenNewFile",buildFilename()));
    }
    try {
      data.writer.write(value);
    }
 catch (    Exception e) {
      throw new KettleStepException(BaseMessages.getString(PKG,"JsonOutput.Error.Writing"),e);
    }
  }
  data.rowsAreSafe=true;
  data.jsonArray=data.mapper.createArrayNode();
}
