{
  meta=(JsonOutputMeta)smi;
  data=(JsonOutputData)sdi;
  if (!super.init(smi,sdi)) {
    return false;
  }
  if (meta.isCompatibilityMode()) {
    compatibilityFactory=new CompatibilityMode();
    data.mapper.configure(SerializationConfig.Feature.INDENT_OUTPUT,false);
  }
 else {
    compatibilityFactory=new FixedMode();
  }
  data.writeToFile=(meta.getOperationType() != JsonOutputMeta.OPERATION_TYPE_OUTPUT_VALUE);
  data.outputValue=(meta.getOperationType() != JsonOutputMeta.OPERATION_TYPE_WRITE_TO_FILE);
  if (data.outputValue) {
    if (Const.isEmpty(environmentSubstitute(meta.getOutputValue()))) {
      logError(BaseMessages.getString(PKG,"JsonOutput.Error.MissingOutputFieldName"));
      stopAll();
      setErrors(1);
      return false;
    }
  }
  if (data.writeToFile) {
    if (!meta.isServletOutput() && Const.isEmpty(meta.getFileName())) {
      logError(BaseMessages.getString(PKG,"JsonOutput.Error.MissingTargetFilename"));
      stopAll();
      setErrors(1);
      return false;
    }
    if (!meta.isDoNotOpenNewFileInit()) {
      if (!openNewFile()) {
        logError(BaseMessages.getString(PKG,"JsonOutput.Error.OpenNewFile",buildFilename()));
        stopAll();
        setErrors(1);
        return false;
      }
    }
  }
  data.realBlocName=Const.NVL(environmentSubstitute(meta.getJsonBloc()),"");
  data.nrRowsInBloc=Const.toInt(environmentSubstitute(meta.getNrRowsInBloc()),0);
  return true;
}
