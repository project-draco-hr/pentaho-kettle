{
  try {
    super.loadXML(entrynode,databases);
    setFileName(XMLHandler.getTagValue(entrynode,"filename"));
    argFromPrevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"arg_from_previous"));
    execPerRow="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"exec_per_row"));
    setLogfile="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"set_logfile"));
    addDate="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_date"));
    addTime="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_time"));
    logfile=XMLHandler.getTagValue(entrynode,"logfile");
    logext=XMLHandler.getTagValue(entrynode,"logext");
    loglevel=LogWriter.getLogLevel(XMLHandler.getTagValue(entrynode,"loglevel"));
    int argnr=0;
    while (XMLHandler.getTagValue(entrynode,"argument" + argnr) != null)     argnr++;
    arguments=new String[argnr];
    for (int a=0; a < argnr; a++)     arguments[a]=XMLHandler.getTagValue(entrynode,"argument" + a);
  }
 catch (  KettleException e) {
    throw new KettleXMLException("Unable to load job entry of type 'shell' from XML node",e);
  }
}
