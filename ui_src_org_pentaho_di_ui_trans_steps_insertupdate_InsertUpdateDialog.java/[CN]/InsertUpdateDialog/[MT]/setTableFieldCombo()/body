{
  Runnable fieldLoader=new Runnable(){
    public void run(){
      if (!wTable.isDisposed() && !wConnection.isDisposed() && !wSchema.isDisposed()) {
        final String tableName=wTable.getText(), connectionName=wConnection.getText(), schemaName=wSchema.getText();
        for (        ColumnInfo colInfo : tableFieldColumns) {
          colInfo.setComboValues(new String[]{});
        }
        if (!Utils.isEmpty(tableName)) {
          DatabaseMeta ci=transMeta.findDatabase(connectionName);
          if (ci != null) {
            Database db=new Database(loggingObject,ci);
            try {
              db.connect();
              String schemaTable=ci.getQuotedSchemaTableCombination(transMeta.environmentSubstitute(schemaName),transMeta.environmentSubstitute(tableName));
              RowMetaInterface r=db.getTableFields(schemaTable);
              if (null != r) {
                String[] fieldNames=r.getFieldNames();
                if (null != fieldNames) {
                  for (                  ColumnInfo colInfo : tableFieldColumns) {
                    colInfo.setComboValues(fieldNames);
                  }
                }
              }
            }
 catch (            Exception e) {
              for (              ColumnInfo colInfo : tableFieldColumns) {
                colInfo.setComboValues(new String[]{});
              }
            }
 finally {
              try {
                if (db != null) {
                  db.disconnect();
                }
              }
 catch (              Exception ignored) {
                db=null;
              }
            }
          }
        }
      }
    }
  }
;
  shell.getDisplay().asyncExec(fieldLoader);
}
