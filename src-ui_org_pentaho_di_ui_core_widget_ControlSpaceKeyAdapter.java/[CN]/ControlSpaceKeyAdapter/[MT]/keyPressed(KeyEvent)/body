{
  if (e.character == ' ' && ((e.stateMask & SWT.CONTROL) != 0) && ((e.stateMask & SWT.ALT) == 0)) {
    e.doit=false;
    textField.setData(Boolean.TRUE);
    final int position;
    if (getCaretPositionInterface != null)     position=getCaretPositionInterface.getCaretPosition();
 else     position=-1;
    Rectangle bounds=textField.getBounds();
    Point location=GUIResource.calculateControlPosition(textField);
    final Shell shell=new Shell(textField.getShell(),SWT.NONE);
    shell.setSize(bounds.width,200);
    shell.setLocation(location.x,location.y + bounds.height);
    shell.setLayout(new FillLayout());
    final List list=new List(shell,SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL);
    props.setLook(list);
    list.setItems(getVariableNames(variables));
    final DefaultToolTip toolTip=new DefaultToolTip(list,ToolTip.RECREATE,true);
    toolTip.setImage(GUIResource.getInstance().getImageSpoon());
    toolTip.setHideOnMouseDown(true);
    toolTip.setRespectMonitorBounds(true);
    toolTip.setRespectDisplayBounds(true);
    toolTip.setPopupDelay(350);
    list.addSelectionListener(new SelectionAdapter(){
      public synchronized void widgetDefaultSelected(      SelectionEvent e){
        applyChanges(shell,list,textField,position,insertTextInterface);
      }
      public void widgetSelected(      SelectionEvent event){
        if (list.getSelectionCount() <= 0)         return;
        String name=list.getSelection()[0];
        String value=variables.getVariable(name);
        Rectangle shellBounds=shell.getBounds();
        String message=Messages.getString("TextVar.VariableValue.Message",name,value);
        if (name.startsWith(Const.INTERNAL_VARIABLE_PREFIX))         message+=Messages.getString("TextVar.InternalVariable.Message");
        toolTip.setText(message);
        toolTip.hide();
        toolTip.show(new Point(shellBounds.width,0));
      }
    }
);
    list.addKeyListener(new KeyAdapter(){
      public synchronized void keyPressed(      KeyEvent e){
        if (e.keyCode == SWT.CR && ((e.keyCode & SWT.CONTROL) == 0) && ((e.keyCode & SWT.SHIFT) == 0)) {
          applyChanges(shell,list,textField,position,insertTextInterface);
        }
      }
    }
);
    list.addFocusListener(new FocusAdapter(){
      public void focusLost(      FocusEvent event){
        shell.dispose();
        if (!textField.isDisposed())         textField.setData(Boolean.FALSE);
      }
    }
);
    shell.open();
  }
  ;
}
