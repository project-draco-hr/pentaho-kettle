{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.Shell.Label"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.Commit.Label"));
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.top=new FormAttachment(wConnection,margin);
  fdlCommit.right=new FormAttachment(middle,-margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wConnection,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlSQLFieldName=new Label(shell,SWT.RIGHT);
  wlSQLFieldName.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.SQLFieldName.Label"));
  props.setLook(wlSQLFieldName);
  fdlSQLFieldName=new FormData();
  fdlSQLFieldName.left=new FormAttachment(0,0);
  fdlSQLFieldName.right=new FormAttachment(middle,-margin);
  fdlSQLFieldName.top=new FormAttachment(wCommit,2 * margin);
  wlSQLFieldName.setLayoutData(fdlSQLFieldName);
  wSQLFieldName=new CCombo(shell,SWT.BORDER | SWT.READ_ONLY);
  wSQLFieldName.setEditable(true);
  props.setLook(wSQLFieldName);
  wSQLFieldName.addModifyListener(lsMod);
  fdSQLFieldName=new FormData();
  fdSQLFieldName.left=new FormAttachment(middle,0);
  fdSQLFieldName.top=new FormAttachment(wCommit,2 * margin);
  fdSQLFieldName.right=new FormAttachment(100,-margin);
  wSQLFieldName.setLayoutData(fdSQLFieldName);
  wSQLFieldName.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      get();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wAdditionalFields=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wAdditionalFields);
  wAdditionalFields.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.wAdditionalFields.Label"));
  FormLayout AdditionalFieldsgroupLayout=new FormLayout();
  AdditionalFieldsgroupLayout.marginWidth=10;
  AdditionalFieldsgroupLayout.marginHeight=10;
  wAdditionalFields.setLayout(AdditionalFieldsgroupLayout);
  wlInsertField=new Label(wAdditionalFields,SWT.RIGHT);
  wlInsertField.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.InsertField.Label"));
  props.setLook(wlInsertField);
  fdlInsertField=new FormData();
  fdlInsertField.left=new FormAttachment(0,margin);
  fdlInsertField.right=new FormAttachment(middle,-margin);
  fdlInsertField.top=new FormAttachment(wSQLFieldName,margin);
  wlInsertField.setLayoutData(fdlInsertField);
  wInsertField=new Text(wAdditionalFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInsertField);
  wInsertField.addModifyListener(lsMod);
  fdInsertField=new FormData();
  fdInsertField.left=new FormAttachment(middle,0);
  fdInsertField.top=new FormAttachment(wSQLFieldName,margin);
  fdInsertField.right=new FormAttachment(100,0);
  wInsertField.setLayoutData(fdInsertField);
  wlUpdateField=new Label(wAdditionalFields,SWT.RIGHT);
  wlUpdateField.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.UpdateField.Label"));
  props.setLook(wlUpdateField);
  fdlUpdateField=new FormData();
  fdlUpdateField.left=new FormAttachment(0,margin);
  fdlUpdateField.right=new FormAttachment(middle,-margin);
  fdlUpdateField.top=new FormAttachment(wInsertField,margin);
  wlUpdateField.setLayoutData(fdlUpdateField);
  wUpdateField=new Text(wAdditionalFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUpdateField);
  wUpdateField.addModifyListener(lsMod);
  fdUpdateField=new FormData();
  fdUpdateField.left=new FormAttachment(middle,0);
  fdUpdateField.top=new FormAttachment(wInsertField,margin);
  fdUpdateField.right=new FormAttachment(100,0);
  wUpdateField.setLayoutData(fdUpdateField);
  wlDeleteField=new Label(wAdditionalFields,SWT.RIGHT);
  wlDeleteField.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.DeleteField.Label"));
  props.setLook(wlDeleteField);
  fdlDeleteField=new FormData();
  fdlDeleteField.left=new FormAttachment(0,margin);
  fdlDeleteField.right=new FormAttachment(middle,-margin);
  fdlDeleteField.top=new FormAttachment(wUpdateField,margin);
  wlDeleteField.setLayoutData(fdlDeleteField);
  wDeleteField=new Text(wAdditionalFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDeleteField);
  wDeleteField.addModifyListener(lsMod);
  fdDeleteField=new FormData();
  fdDeleteField.left=new FormAttachment(middle,0);
  fdDeleteField.top=new FormAttachment(wUpdateField,margin);
  fdDeleteField.right=new FormAttachment(100,0);
  wDeleteField.setLayoutData(fdDeleteField);
  wlReadField=new Label(wAdditionalFields,SWT.RIGHT);
  wlReadField.setText(BaseMessages.getString(PKG,"ExecSQLRowDialog.ReadField.Label"));
  props.setLook(wlReadField);
  fdlReadField=new FormData();
  fdlReadField.left=new FormAttachment(0,0);
  fdlReadField.right=new FormAttachment(middle,-margin);
  fdlReadField.top=new FormAttachment(wDeleteField,margin);
  wlReadField.setLayoutData(fdlReadField);
  wReadField=new Text(wAdditionalFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wReadField);
  wReadField.addModifyListener(lsMod);
  fdReadField=new FormData();
  fdReadField.left=new FormAttachment(middle,0);
  fdReadField.top=new FormAttachment(wDeleteField,margin);
  fdReadField.right=new FormAttachment(100,0);
  wReadField.setLayoutData(fdReadField);
  fdAdditionalFields=new FormData();
  fdAdditionalFields.left=new FormAttachment(0,margin);
  fdAdditionalFields.top=new FormAttachment(wSQLFieldName,2 * margin);
  fdAdditionalFields.right=new FormAttachment(100,-margin);
  wAdditionalFields.setLayoutData(fdAdditionalFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wAdditionalFields);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  input.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
