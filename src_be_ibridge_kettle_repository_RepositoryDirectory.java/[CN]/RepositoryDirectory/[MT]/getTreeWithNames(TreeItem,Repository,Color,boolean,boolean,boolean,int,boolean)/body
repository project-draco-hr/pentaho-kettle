{
  ti.setText(getDirectoryName());
  ti.setForeground(dircolor);
  for (int i=0; i < getNrSubdirectories(); i++) {
    RepositoryDirectory subdir=getSubdirectory(i);
    TreeItem subti=new TreeItem(ti,SWT.NONE);
    subdir.getTreeWithNames(subti,rep,dircolor,trans,job,schema,sortPosition,ascending);
  }
  try {
    List repositoryObjects=null;
    if (trans)     repositoryObjects=rep.getTransformationObjects(getID(),sortPosition,ascending);
    if (job)     repositoryObjects=rep.getJobObjects(getID(),sortPosition,ascending);
    if (repositoryObjects != null) {
      for (int i=0; i < repositoryObjects.size(); i++) {
        TreeItem tiObject=new TreeItem(ti,SWT.NONE);
        RepositoryObject repositoryObject=(RepositoryObject)repositoryObjects.get(i);
        repositoryObject.setTreeItem(tiObject);
      }
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleDatabaseException("Unable to populate tree with repository objects",dbe);
  }
  ti.setExpanded(isRoot());
}
