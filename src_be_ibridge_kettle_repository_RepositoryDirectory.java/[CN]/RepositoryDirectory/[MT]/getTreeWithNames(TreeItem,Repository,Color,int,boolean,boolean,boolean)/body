{
  ti.setText(getDirectoryName());
  ti.setForeground(dircolor);
  for (int i=0; i < getNrSubdirectories(); i++) {
    RepositoryDirectory subdir=getSubdirectory(i);
    TreeItem subti=new TreeItem(ti,SWT.NONE);
    subdir.getTreeWithNames(subti,rep,dircolor,sortPosition,ascending,getTransformations,getJobs);
  }
  try {
    if (getTransformations) {
      List repositoryObjects=rep.getTransformationObjects(getID(),sortPosition,ascending);
      if (repositoryObjects != null) {
        for (int i=0; i < repositoryObjects.size(); i++) {
          TreeItem tiObject=new TreeItem(ti,SWT.NONE);
          RepositoryObject repositoryObject=(RepositoryObject)repositoryObjects.get(i);
          repositoryObject.setTreeItem(tiObject,RepositoryObject.STRING_OBJECT_TYPE_TRANSFORMATION);
        }
      }
    }
    if (getJobs) {
      List repositoryObjects=rep.getJobObjects(getID(),sortPosition,ascending);
      if (repositoryObjects != null) {
        for (int i=0; i < repositoryObjects.size(); i++) {
          TreeItem tiObject=new TreeItem(ti,SWT.NONE);
          RepositoryObject repositoryObject=(RepositoryObject)repositoryObjects.get(i);
          repositoryObject.setTreeItem(tiObject,RepositoryObject.STRING_OBJECT_TYPE_JOB);
        }
      }
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleDatabaseException("Unable to populate tree with repository objects",dbe);
  }
  ti.setExpanded(isRoot());
}
