{
  final String virtualFile=createVirtualFile("pdi-14172.txt","1,1,1\n","2,,2\n");
  TextFileInputMeta meta=new TextFileInputMeta();
  TextFileInputField field2=field("col2");
  field2.setRepeated(true);
  meta.setInputFields(new TextFileInputField[]{field("col1"),field2,field("col3")});
  meta.setFileCompression("None");
  meta.setFileType("CSV");
  meta.setHeader(false);
  meta.setNrHeaderLines(-1);
  meta.setFooter(false);
  meta.setNrFooterLines(-1);
  TextFileInputData data=new TextFileInputData();
  data.setFiles(new FileInputList());
  data.getFiles().addFile(KettleVFS.getFileObject(virtualFile));
  data.outputRowMeta=new RowMeta();
  data.outputRowMeta.addValueMeta(new ValueMetaString("col1"));
  data.outputRowMeta.addValueMeta(new ValueMetaString("col2"));
  data.outputRowMeta.addValueMeta(new ValueMetaString("col3"));
  data.dataErrorLineHandler=Mockito.mock(FileErrorHandler.class);
  data.fileFormatType=TextFileInputMeta.FILE_FORMAT_UNIX;
  data.separator=",";
  data.filterProcessor=new TextFileFilterProcessor(new TextFileFilter[0]);
  data.filePlayList=new FilePlayListAll();
  RowSet output=new BlockingRowSet(5);
  executeStep(meta,data,output,2);
  Object[] row1=output.getRowImmediate();
  assertRow(row1,"1","1","1");
  Object[] row2=output.getRowImmediate();
  assertRow(row2,"2","1","2");
  deleteVfsFile(virtualFile);
}
