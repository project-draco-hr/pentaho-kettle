{
  wName.setText(Const.nullToEmpty(jobEntry.getName()));
  wZipFilename.setText(Const.nullToEmpty(jobEntry.getZipFilename()));
  wWildcardSource.setText(Const.nullToEmpty(jobEntry.getWildcardSource()));
  wWildcard.setText(Const.nullToEmpty(jobEntry.getWildcard()));
  wWildcardExclude.setText(Const.nullToEmpty(jobEntry.getWildcardExclude()));
  wTargetDirectory.setText(Const.nullToEmpty(jobEntry.getSourceDirectory()));
  wMovetoDirectory.setText(Const.nullToEmpty(jobEntry.getMoveToDirectory()));
  if (jobEntry.afterunzip >= 0) {
    wAfterUnZip.select(jobEntry.afterunzip);
  }
 else {
    wAfterUnZip.select(0);
  }
  wAddFileToResult.setSelection(jobEntry.isAddFileToResult());
  wArgsPrevious.setSelection(jobEntry.getDatafromprevious());
  wAddDate.setSelection(jobEntry.isDateInFilename());
  wAddTime.setSelection(jobEntry.isTimeInFilename());
  wDateTimeFormat.setText(Const.nullToEmpty(jobEntry.getDateTimeFormat()));
  wSpecifyFormat.setSelection(jobEntry.isSpecifyFormat());
  wRootZip.setSelection(jobEntry.isCreateRootFolder());
  wCreateFolder.setSelection(jobEntry.isCreateFolder());
  wNrErrorsLessThan.setText(Const.NVL(jobEntry.getLimit(),"10"));
  if (jobEntry.getSuccessCondition() != null) {
    if (jobEntry.getSuccessCondition().equals(jobEntry.SUCCESS_IF_AT_LEAST_X_FILES_UN_ZIPPED)) {
      wSuccessCondition.select(1);
    }
 else     if (jobEntry.getSuccessCondition().equals(jobEntry.SUCCESS_IF_ERRORS_LESS)) {
      wSuccessCondition.select(2);
    }
 else {
      wSuccessCondition.select(0);
    }
  }
 else {
    wSuccessCondition.select(0);
  }
  wAddOriginalTimestamp.setSelection(jobEntry.isOriginalTimestamp());
  wSetModificationDateToOriginal.setSelection(jobEntry.isOriginalModificationDate());
  wIfFileExists.select(jobEntry.getIfFileExist());
  wcreateMoveToDirectory.setSelection(jobEntry.isCreateMoveToDirectory());
  wName.selectAll();
  wName.setFocus();
}
