{
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN * 2;
  formLayout.marginHeight=Const.FORM_MARGIN * 2;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"RepositoriesDialog.Label.SelectRepository"));
  shell.setImage(GUIResource.getInstance().getImageSpoon());
  int middle=20;
  int margin=Const.MARGIN;
  int right=30;
  wlKettle=new Label(shell,SWT.CENTER);
  wlKettle.setText(BaseMessages.getString(PKG,"RepositoriesDialog.Label.Welcome",toolName,Const.VERSION));
  props.setLook(wlKettle);
  final Font f=new Font(shell.getDisplay(),"Arial",18,SWT.NORMAL);
  wlKettle.addDisposeListener(new DisposeListener(){
    public void widgetDisposed(    DisposeEvent e){
      f.dispose();
    }
  }
);
  wlKettle.setFont(f);
  fdlKettle=new FormData();
  fdlKettle.left=new FormAttachment(0,0);
  fdlKettle.right=new FormAttachment(100,-right);
  fdlKettle.top=new FormAttachment(0,0);
  wlKettle.setLayoutData(fdlKettle);
  Label line=new Label(shell,SWT.SEPARATOR | SWT.HORIZONTAL);
  FormData fdLine=new FormData();
  fdLine.left=new FormAttachment(0,0);
  fdLine.right=new FormAttachment(100,0);
  fdLine.top=new FormAttachment(wlKettle,margin);
  line.setLayoutData(fdLine);
  addToolBar();
  addToolBarListeners();
  props.setLook(swtToolBar);
  FormData fdToolbar=new FormData();
  fdToolbar.left=new FormAttachment(0,0);
  fdToolbar.top=new FormAttachment(line,3 * margin);
  swtToolBar.setLayoutData(fdToolbar);
  wRepository=new org.eclipse.swt.widgets.List(shell,SWT.READ_ONLY | SWT.BORDER | SWT.V_SCROLL| SWT.H_SCROLL| SWT.SINGLE);
  props.setLook(wRepository);
  fdRepository=new FormData();
  fdRepository.left=new FormAttachment(0,0);
  fdRepository.right=new FormAttachment(middle,-margin);
  fdRepository.top=new FormAttachment(swtToolBar,margin);
  fdRepository.bottom=new FormAttachment(100,-50);
  wRepository.setLayoutData(fdRepository);
  wRepName=new LabelText(shell,SWT.SINGLE | SWT.LEFT,BaseMessages.getString(PKG,"RepositoriesDialog.Label.RepName"),BaseMessages.getString(PKG,"RepositoriesDialog.Label.RepName"),middle,margin);
  props.setLook(wRepName);
  fdRepName=new FormData();
  fdRepName.left=new FormAttachment(middle,2 * margin);
  fdRepName.right=new FormAttachment(100,-right);
  fdRepName.top=new FormAttachment(line,3 * margin);
  wRepName.setLayoutData(fdRepName);
  wRepName.getTextWidget().setEditable(false);
  wRepDesc=new LabelText(shell,SWT.SINGLE | SWT.LEFT,BaseMessages.getString(PKG,"RepositoriesDialog.Label.RepDesc"),BaseMessages.getString(PKG,"RepositoriesDialog.Label.RepDesc"),middle,margin);
  props.setLook(wRepDesc);
  fdRepDesc=new FormData();
  fdRepDesc.left=new FormAttachment(middle,2 * margin);
  fdRepDesc.right=new FormAttachment(100,-right);
  fdRepDesc.top=new FormAttachment(wRepName,margin);
  wRepDesc.setLayoutData(fdRepDesc);
  wRepDesc.getTextWidget().setEditable(false);
  wRepTypeName=new LabelText(shell,SWT.SINGLE | SWT.LEFT,BaseMessages.getString(PKG,"RepositoriesDialog.Label.RepType"),BaseMessages.getString(PKG,"RepositoriesDialog.Label.RepType"),middle,margin);
  props.setLook(wRepTypeName);
  fdRepType=new FormData();
  fdRepType.left=new FormAttachment(middle,2 * margin);
  fdRepType.right=new FormAttachment(100,-right);
  fdRepType.top=new FormAttachment(wRepDesc,margin);
  wRepTypeName.setLayoutData(fdRepType);
  wRepTypeName.getTextWidget().setEditable(false);
  imageLabel=new Label(shell,SWT.NONE);
  imageLabel.setImage(GUIResource.getInstance().getImagePentaho());
  FormData fdImageLabel=new FormData();
  fdImageLabel.left=new FormAttachment(middle,2 * margin);
  fdImageLabel.top=new FormAttachment(wRepTypeName,margin * 3);
  imageLabel.setLayoutData(fdImageLabel);
  wUsername=new LabelText(shell,BaseMessages.getString(PKG,"RepositoriesDialog.Label.Login"),BaseMessages.getString(PKG,"RepositoriesDialog.Label.Login"),middle,margin);
  props.setLook(wUsername);
  fdUsername=new FormData();
  fdUsername.left=new FormAttachment(middle,margin);
  fdUsername.right=new FormAttachment(100,-right);
  fdUsername.top=new FormAttachment(imageLabel,margin * 3);
  wUsername.setLayoutData(fdUsername);
  wPassword=new LabelText(shell,BaseMessages.getString(PKG,"RepositoriesDialog.Label.Password"),BaseMessages.getString(PKG,"RepositoriesDialog.Label.Password"),middle,margin);
  props.setLook(wPassword);
  wPassword.getTextWidget().setEchoChar('*');
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(middle,margin);
  fdPassword.right=new FormAttachment(100,-right);
  fdPassword.top=new FormAttachment(wUsername,margin);
  wPassword.setLayoutData(fdPassword);
  wShow=new Button(shell,SWT.CHECK);
  wShow.setText(BaseMessages.getString(PKG,"RepositoriesDialog.Button.Show"));
  wShow.setToolTipText(BaseMessages.getString(PKG,"RepositoriesDialog.Button.Show.ToolTip"));
  props.setLook(wShow);
  fdShow=new FormData();
  fdShow.right=new FormAttachment(100,-right);
  fdShow.top=new FormAttachment(wPassword,margin * 3);
  wShow.setLayoutData(fdShow);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wNorep=new Button(shell,SWT.PUSH);
  wNorep.setText(BaseMessages.getString(PKG,"RepositoriesDialog.Button.NoRepository"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel,wNorep},Const.MARGIN,wShow);
  wRepository.addTraverseListener(new TraverseListener(){
    public void keyTraversed(    TraverseEvent e){
      wUsername.setFocus();
      e.doit=false;
    }
  }
);
  wRepository.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      showSelectedRepository();
      wUsername.setFocus();
    }
  }
);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsNorep=new Listener(){
    public void handleEvent(    Event e){
      norep();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wNorep.addListener(SWT.Selection,lsNorep);
  wCancel.addListener(SWT.Selection,lsCancel);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  lsRepo=new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.character == SWT.CR)       wUsername.setFocus();
    }
  }
;
  lsJmp=new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.character == SWT.CR) {
        if (wPassword.getText().length() != 0)         ok();
 else {
          wPassword.getTextWidget().setFocus();
          wPassword.getTextWidget().selectAll();
        }
      }
    }
  }
;
  wRepository.addKeyListener(lsRepo);
  wUsername.getTextWidget().addKeyListener(lsJmp);
  wPassword.getTextWidget().addSelectionListener(lsDef);
  wRepository.addSelectionListener(new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
);
  getData();
  shell.layout();
  shell.pack();
  shell.setTabList(new Control[]{wUsername,wPassword,wOK,wCancel,wNorep,wRepository});
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return repinfo != null;
}
