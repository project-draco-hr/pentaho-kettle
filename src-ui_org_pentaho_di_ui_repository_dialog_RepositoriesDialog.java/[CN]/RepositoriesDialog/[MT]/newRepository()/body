{
  List<RepositoryPluginMeta> pluginMetaList=RepositoryLoader.getInstance().getPluginMetaList();
  String[] names=new String[pluginMetaList.size()];
  for (int i=0; i < names.length; i++) {
    RepositoryPluginMeta meta=pluginMetaList.get(i);
    names[i]=meta.getName() + " : " + meta.getDescription();
  }
  EnterSelectionDialog selectRepositoryType=new EnterSelectionDialog(shell,names,"Select the repository type","Select the repository type to create");
  String choice=selectRepositoryType.open();
  if (choice != null) {
    int index=selectRepositoryType.getSelectionNr();
    RepositoryPluginMeta pluginMeta=pluginMetaList.get(index);
    String id=pluginMeta.getId();
    try {
      RepositoryMeta repositoryMeta=RepositoryLoader.createRepositoryMeta(id);
      RepositoryDialogInterface dialog=getRepositoryDialog(pluginMeta,repositoryMeta,input);
      RepositoryMeta meta=dialog.open();
      if (meta != null) {
        input.addRepository(meta);
        fillRepositories();
        int idx=input.indexOfRepository(meta);
        wRepository.select(idx);
      }
    }
 catch (    Exception e) {
      new ErrorDialog(shell,"Error","Error creating new repository",e);
    }
  }
}
