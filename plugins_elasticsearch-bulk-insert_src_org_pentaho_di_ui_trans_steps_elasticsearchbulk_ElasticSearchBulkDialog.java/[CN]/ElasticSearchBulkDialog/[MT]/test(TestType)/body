{
  ClassLoader originalClassloader=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());
  Client client=null;
  Node node=null;
  try {
    ElasticSearchBulkMeta tempMeta=new ElasticSearchBulkMeta();
    toModel(tempMeta);
    Settings.Builder settingsBuilder=Settings.settingsBuilder();
    settingsBuilder.put(Settings.Builder.EMPTY_SETTINGS);
    settingsBuilder.put(tempMeta.getSettings());
    TransportClient.Builder tClientBuilder=TransportClient.builder().settings(settingsBuilder);
    if (tempMeta.getServers().length > 0) {
      node=null;
      TransportClient tClient=tClientBuilder.build();
      for (      InetSocketTransportAddress address : tempMeta.getServers()) {
        tClient.addTransportAddress(address);
      }
      client=tClient;
    }
 else {
      NodeBuilder nodeBuilder=NodeBuilder.nodeBuilder();
      nodeBuilder.settings(settingsBuilder);
      node=nodeBuilder.client(true).node();
      client=node.client();
      node.start();
    }
    AdminClient admin=client.admin();
switch (testType) {
case INDEX:
      if (StringUtils.isBlank(tempMeta.getIndex())) {
        showError(BaseMessages.getString(PKG,"ElasticSearchBulk.Error.NoIndex"));
        break;
      }
    IndicesExistsRequestBuilder indicesExistBld=admin.indices().prepareExists(tempMeta.getIndex());
  IndicesExistsResponse indicesExistResponse=indicesExistBld.execute().get();
if (!indicesExistResponse.isExists()) {
  showError(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Error.NoIndex"));
  return;
}
RecoveryRequestBuilder indicesBld=admin.indices().prepareRecoveries(tempMeta.getIndex());
ListenableActionFuture<RecoveryResponse> lafInd=indicesBld.execute();
String shards="" + lafInd.get().getSuccessfulShards() + "/"+ lafInd.get().getTotalShards();
showMessage(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.TestIndex.TestOK",shards));
break;
case CLUSTER:
ClusterStateRequestBuilder clusterBld=admin.cluster().prepareState();
ListenableActionFuture<ClusterStateResponse> lafClu=clusterBld.execute();
ClusterStateResponse cluResp=lafClu.actionGet();
String name=cluResp.getClusterName().value();
ClusterState cluState=cluResp.getState();
int numNodes=cluState.getNodes().size();
showMessage(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.TestCluster.TestOK",name,numNodes));
break;
default :
break;
}
}
 catch (NoNodeAvailableException e) {
showError(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Error.NoNodesFound"));
}
catch (MasterNotDiscoveredException e) {
showError(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Error.NoNodesFound"));
}
catch (Exception e) {
showError(e.getLocalizedMessage());
}
 finally {
if (client != null) {
client.close();
}
if (node != null) {
node.close();
}
}
Thread.currentThread().setContextClassLoader(originalClassloader);
}
