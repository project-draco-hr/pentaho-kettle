{
  stepname=wStepname.getText();
  in.setType(wType.getText());
  in.setIndex(wIndex.getText());
  in.setBatchSize(wBatchSize.getText());
  in.setTimeOut(Const.NVL(wTimeOut.getText(),null));
  in.setTimeoutUnit(wTimeOut.getTimeUnit());
  in.setIdInField(wIdInField.getText());
  in.setOverWriteIfSameId(StringUtils.isNotBlank(wIdInField.getText()) && wIsOverwrite.getSelection());
  in.setStopOnError(wStopOnError.getSelection());
  in.setJsonInsert(wIsJson.getSelection());
  in.setJsonField(wIsJson.getSelection() ? wJsonField.getText() : null);
  in.setIdOutField(wIdOutField.getText());
  in.setUseOutput(wUseOutput.getSelection());
  in.clearFields();
  if (!wIsJson.getSelection()) {
    for (int i=0; i < wFields.getItemCount(); i++) {
      String[] row=wFields.getItem(i);
      if (StringUtils.isNotBlank(row[0])) {
        in.addField(row[0],row[1]);
      }
    }
  }
  in.clearServers();
  for (int i=0; i < wServers.getItemCount(); i++) {
    String[] row=wServers.getItem(i);
    if (StringUtils.isNotBlank(row[0])) {
      try {
        in.addServer(row[0],Integer.parseInt(row[1]));
      }
 catch (      NumberFormatException nfe) {
        in.addServer(row[0],ElasticSearchBulkMeta.DEFAULT_PORT);
      }
    }
  }
  in.clearSettings();
  for (int i=0; i < wSettings.getItemCount(); i++) {
    String[] row=wSettings.getItem(i);
    in.addSetting(row[0],row[1]);
  }
}
