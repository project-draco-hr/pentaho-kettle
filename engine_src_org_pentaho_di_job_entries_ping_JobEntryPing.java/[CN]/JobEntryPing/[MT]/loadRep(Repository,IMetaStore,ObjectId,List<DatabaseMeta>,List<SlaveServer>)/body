{
  try {
    hostname=rep.getJobEntryAttributeString(id_jobentry,"hostname");
    nbrPackets=rep.getJobEntryAttributeString(id_jobentry,"nbr_packets");
    String nbrPaquets=rep.getJobEntryAttributeString(id_jobentry,"nbrpaquets");
    if (nbrPackets == null && nbrPaquets != null) {
      nbrPackets=nbrPaquets;
    }
    timeout=rep.getJobEntryAttributeString(id_jobentry,"timeout");
    pingtype=rep.getJobEntryAttributeString(id_jobentry,"pingtype");
    if (Utils.isEmpty(pingtype)) {
      pingtype=classicPing;
      ipingtype=iclassicPing;
    }
 else {
      if (pingtype.equals(systemPing)) {
        ipingtype=isystemPing;
      }
 else       if (pingtype.equals(bothPings)) {
        ipingtype=ibothPings;
      }
 else {
        ipingtype=iclassicPing;
      }
    }
  }
 catch (  KettleException dbe) {
    throw new KettleException("Unable to load job entry of type 'ping' exists from the repository for id_jobentry=" + id_jobentry,dbe);
  }
}
