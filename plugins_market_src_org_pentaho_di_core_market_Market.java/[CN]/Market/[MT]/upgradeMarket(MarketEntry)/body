{
  try {
    PluginInterface plugin=getPluginObject("market");
    if (plugin == null) {
      throw new KettleException("No Plugin!");
    }
    String pluginFolderName=plugin.getPluginDirectory().getFile();
    File folder=new File(pluginFolderName);
    File[] files=folder.listFiles();
    File jar=null;
    for (    File f : files) {
      if (f.getName().endsWith(".jar")) {
        jar=f;
        break;
      }
    }
    final File finalJar=jar;
    Thread t=new Thread(){
      public void run(){
        KettleURLClassLoader classloader=null;
        try {
          File tmpJar=File.createTempFile("kettle_marketplace_tmp",".jar");
          FileInputStream fis=new FileInputStream(finalJar);
          FileOutputStream fos=new FileOutputStream(tmpJar);
          IOUtils.copy(fis,fos);
          fis.close();
          fos.close();
          classloader=new KettleURLClassLoader(new URL[]{tmpJar.toURI().toURL()},Spoon.getInstance().getClass().getClassLoader());
          Class<?> clazz=classloader.loadClass("org.pentaho.di.core.market.Market");
          Method m=clazz.getMethod("upgradeMarketInSeparateClassLoader",File.class,String.class);
          m.invoke(null,tmpJar,entry.getPackageUrl());
        }
 catch (        Throwable t) {
          t.printStackTrace();
        }
 finally {
          if (classloader != null) {
            classloader.closeClassLoader();
          }
        }
      }
    }
;
    t.start();
  }
 catch (  Throwable t) {
    t.printStackTrace();
    throw new KettleException(t);
  }
}
