{
  String parentFolderName=buildPluginsFolderPath(marketEntry);
  if (marketEntry.getType().equals(MarketEntryType.HadoopShim)) {
    File bdPluginFolder=new File(parentFolderName).getParentFile();
    if (bdPluginFolder == null || !bdPluginFolder.exists()) {
      throw new KettleException(BaseMessages.getString(PKG,"Marketplaces.Dialog.PluginNotInstalled.message","Pentaho Big Data Plugin") + ". You must install the Pentaho Big Data plugin before you can install a Hadoop Shim");
    }
  }
  File pluginFolder=new File(parentFolderName + File.separator + marketEntry.getId());
  LogChannel.GENERAL.logBasic("Installing plugin in folder: " + pluginFolder.getAbsolutePath());
  if (pluginFolder.exists()) {
    monitorDialog.close();
    MessageBox mb=new MessageBox(Spoon.getInstance().getShell(),SWT.NO | SWT.YES | SWT.ICON_WARNING);
    mb.setMessage(BaseMessages.getString(PKG,"Marketplace.Dialog.PromptOverwritePlugin.Message",pluginFolder.getAbsolutePath()));
    mb.setText(BaseMessages.getString(PKG,"Marketplace.Dialog.PromptOverwritePlugin.Title"));
    int answer=SWT.NO;
    answer=mb.open();
    if (answer == SWT.YES) {
      monitorDialog.open();
      ClassLoader cl=PluginRegistry.getInstance().getClassLoader(getPluginObject(marketEntry.getId()));
      if (cl instanceof KettleURLClassLoader) {
        ((KettleURLClassLoader)cl).closeClassLoader();
      }
      deleteDirectory(pluginFolder);
      unzipMarketEntry(parentFolderName,marketEntry.getPackageUrl());
      if (Market.discoverInstalledVersion(marketEntry).equalsIgnoreCase("unknown")) {
        createVersionXML(marketEntry);
      }
      refreshSpoon(monitorDialog);
    }
  }
 else {
    unzipMarketEntry(parentFolderName,marketEntry.getPackageUrl());
    if (Market.discoverInstalledVersion(marketEntry).equalsIgnoreCase("unknown")) {
      createVersionXML(marketEntry);
    }
    refreshSpoon(monitorDialog);
  }
}
