{
  File tmpFile=null;
  InputStream inputStream=null;
  ZipInputStream zis=null;
  try {
    tmpFile=File.createTempFile("plugin",".zip");
    org.apache.commons.io.FileUtils.copyURLToFile(new URL(packageUrl),tmpFile);
    inputStream=new FileInputStream(tmpFile);
    zis=new ZipInputStream(inputStream);
    ZipEntry zipEntry=null;
    try {
      zipEntry=zis.getNextEntry();
    }
 catch (    IOException ioe) {
      throw new KettleException(ioe);
    }
    byte[] buffer=new byte[1024];
    int bytesRead=0;
    FileOutputStream fos=null;
    while (zipEntry != null) {
      try {
        File file=new File(folderName + File.separator + zipEntry.getName());
        if (zipEntry.isDirectory()) {
          file.mkdirs();
        }
 else {
          file.getParentFile().mkdirs();
          fos=new FileOutputStream(file);
          while ((bytesRead=zis.read(buffer)) != -1) {
            fos.write(buffer,0,bytesRead);
          }
        }
        zipEntry=zis.getNextEntry();
      }
 catch (      FileNotFoundException fnfe) {
        throw new KettleException(fnfe);
      }
catch (      IOException ioe) {
        throw new KettleException(ioe);
      }
 finally {
        if (fos != null) {
          try {
            fos.close();
          }
 catch (          IOException e) {
          }
        }
      }
    }
  }
 catch (  IOException e) {
    throw new KettleException("Unable to unzip file " + packageUrl,e);
  }
 finally {
    if (zis != null) {
      try {
        zis.close();
      }
 catch (      Exception e) {
        throw new KettleException("Unable to close zip file stream (corrupt file?) of file " + tmpFile,e);
      }
    }
  }
}
