{
  if (allDatabaseInterfaces != null) {
    return allDatabaseInterfaces;
  }
  PluginRegistry registry=PluginRegistry.getInstance();
  List<PluginInterface> plugins=registry.getPlugins(DatabasePluginType.class);
  HashMap<String,DatabaseInterface> tmpAllDatabaseInterfaces=new HashMap<String,DatabaseInterface>();
  for (  PluginInterface plugin : plugins) {
    try {
      DatabaseInterface databaseInterface=(DatabaseInterface)registry.loadClass(plugin);
      databaseInterface.setPluginId(plugin.getIds()[0]);
      databaseInterface.setPluginName(plugin.getName());
      tmpAllDatabaseInterfaces.put(plugin.getIds()[0],databaseInterface);
    }
 catch (    KettlePluginException cnfe) {
      System.out.println("Could not create connection entry for " + plugin.getName() + ".  "+ cnfe.getCause().getClass().getName());
      LogChannel.GENERAL.logError("Could not create connection entry for " + plugin.getName() + ".  "+ cnfe.getCause().getClass().getName());
    }
catch (    Exception e) {
      logger.error("Error loading plugin: " + plugin,e);
    }
  }
  allDatabaseInterfaces=tmpAllDatabaseInterfaces;
  return allDatabaseInterfaces;
}
