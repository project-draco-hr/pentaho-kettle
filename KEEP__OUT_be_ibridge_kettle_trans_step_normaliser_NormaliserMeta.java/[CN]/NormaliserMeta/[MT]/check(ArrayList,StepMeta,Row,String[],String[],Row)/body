{
  String error_message="";
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("NormaliserMeta.CheckResult.StepReceivingFieldsOK",prev.size() + ""),stepinfo);
    remarks.add(cr);
    boolean first=true;
    error_message="";
    boolean error_found=false;
    for (int i=0; i < fieldName.length; i++) {
      String lufield=fieldName[i];
      Value v=prev.searchValue(lufield);
      if (v == null) {
        if (first) {
          first=false;
          error_message+=Messages.getString("NormaliserMeta.CheckResult.FieldsNotFound") + Const.CR;
        }
        error_found=true;
        error_message+="\t\t" + lufield + Const.CR;
      }
    }
    if (error_found) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("NormaliserMeta.CheckResult.AllFieldsFound"),stepinfo);
    }
    remarks.add(cr);
  }
 else {
    error_message=Messages.getString("NormaliserMeta.CheckResult.CouldNotReadFieldsFromPreviousStep") + Const.CR;
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepinfo);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("NormaliserMeta.CheckResult.StepReceivingInfoOK"),stepinfo);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("NormaliserMeta.CheckResult.NoInputReceivedError"),stepinfo);
    remarks.add(cr);
  }
}
