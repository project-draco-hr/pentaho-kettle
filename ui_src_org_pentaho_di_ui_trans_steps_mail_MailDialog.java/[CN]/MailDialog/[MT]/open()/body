{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"MailDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"MailDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"Mail.Tab.General.Label"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wDestinationGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wDestinationGroup);
  wDestinationGroup.setText(BaseMessages.getString(PKG,"Mail.Group.DestinationAddress.Label"));
  FormLayout destinationgroupLayout=new FormLayout();
  destinationgroupLayout.marginWidth=10;
  destinationgroupLayout.marginHeight=10;
  wDestinationGroup.setLayout(destinationgroupLayout);
  wlDestination=new Label(wDestinationGroup,SWT.RIGHT);
  wlDestination.setText(BaseMessages.getString(PKG,"Mail.DestinationAddress.Label"));
  props.setLook(wlDestination);
  fdlDestination=new FormData();
  fdlDestination.left=new FormAttachment(0,-margin);
  fdlDestination.top=new FormAttachment(wStepname,margin);
  fdlDestination.right=new FormAttachment(middle,-2 * margin);
  wlDestination.setLayoutData(fdlDestination);
  wDestination=new CCombo(wDestinationGroup,SWT.BORDER | SWT.READ_ONLY);
  wDestination.setEditable(true);
  props.setLook(wDestination);
  wDestination.addModifyListener(lsMod);
  fdDestination=new FormData();
  fdDestination.left=new FormAttachment(middle,-margin);
  fdDestination.top=new FormAttachment(wStepname,margin);
  fdDestination.right=new FormAttachment(100,-margin);
  wDestination.setLayoutData(fdDestination);
  wDestination.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlDestinationCc=new Label(wDestinationGroup,SWT.RIGHT);
  wlDestinationCc.setText(BaseMessages.getString(PKG,"Mail.DestinationAddressCc.Label"));
  props.setLook(wlDestinationCc);
  fdlDestinationCc=new FormData();
  fdlDestinationCc.left=new FormAttachment(0,-margin);
  fdlDestinationCc.top=new FormAttachment(wDestination,margin);
  fdlDestinationCc.right=new FormAttachment(middle,-2 * margin);
  wlDestinationCc.setLayoutData(fdlDestinationCc);
  wDestinationCc=new CCombo(wDestinationGroup,SWT.BORDER | SWT.READ_ONLY);
  wDestinationCc.setEditable(true);
  props.setLook(wDestinationCc);
  wDestinationCc.addModifyListener(lsMod);
  fdDestinationCc=new FormData();
  fdDestinationCc.left=new FormAttachment(middle,-margin);
  fdDestinationCc.top=new FormAttachment(wDestination,margin);
  fdDestinationCc.right=new FormAttachment(100,-margin);
  wDestinationCc.setLayoutData(fdDestinationCc);
  wDestinationCc.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlDestinationBCc=new Label(wDestinationGroup,SWT.RIGHT);
  wlDestinationBCc.setText(BaseMessages.getString(PKG,"Mail.DestinationAddressBCc.Label"));
  props.setLook(wlDestinationBCc);
  fdlDestinationBCc=new FormData();
  fdlDestinationBCc.left=new FormAttachment(0,-margin);
  fdlDestinationBCc.top=new FormAttachment(wDestinationCc,margin);
  fdlDestinationBCc.right=new FormAttachment(middle,-2 * margin);
  wlDestinationBCc.setLayoutData(fdlDestinationBCc);
  wDestinationBCc=new CCombo(wDestinationGroup,SWT.BORDER | SWT.READ_ONLY);
  wDestinationBCc.setEditable(true);
  props.setLook(wDestinationBCc);
  wDestinationBCc.addModifyListener(lsMod);
  fdDestinationBCc=new FormData();
  fdDestinationBCc.left=new FormAttachment(middle,-margin);
  fdDestinationBCc.top=new FormAttachment(wDestinationCc,margin);
  fdDestinationBCc.right=new FormAttachment(100,-margin);
  wDestinationBCc.setLayoutData(fdDestinationBCc);
  wDestinationBCc.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdDestinationGroup=new FormData();
  fdDestinationGroup.left=new FormAttachment(0,margin);
  fdDestinationGroup.top=new FormAttachment(wName,margin);
  fdDestinationGroup.right=new FormAttachment(100,-margin);
  wDestinationGroup.setLayoutData(fdDestinationGroup);
  wReplyGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wReplyGroup);
  wReplyGroup.setText(BaseMessages.getString(PKG,"MailDialog.Group.Reply.Label"));
  FormLayout replygroupLayout=new FormLayout();
  replygroupLayout.marginWidth=10;
  replygroupLayout.marginHeight=10;
  wReplyGroup.setLayout(replygroupLayout);
  wlReplyName=new Label(wReplyGroup,SWT.RIGHT);
  wlReplyName.setText(BaseMessages.getString(PKG,"Mail.ReplyName.Label"));
  props.setLook(wlReplyName);
  fdlReplyName=new FormData();
  fdlReplyName.left=new FormAttachment(0,-margin);
  fdlReplyName.top=new FormAttachment(wDestinationGroup,margin);
  fdlReplyName.right=new FormAttachment(middle,-2 * margin);
  wlReplyName.setLayoutData(fdlReplyName);
  wReplyName=new CCombo(wReplyGroup,SWT.BORDER | SWT.READ_ONLY);
  wReplyName.setEditable(true);
  props.setLook(wReplyName);
  wReplyName.addModifyListener(lsMod);
  fdReplyName=new FormData();
  fdReplyName.left=new FormAttachment(middle,-margin);
  fdReplyName.top=new FormAttachment(wDestinationGroup,margin);
  fdReplyName.right=new FormAttachment(100,-margin);
  wReplyName.setLayoutData(fdReplyName);
  wReplyName.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlReply=new Label(wReplyGroup,SWT.RIGHT);
  wlReply.setText(BaseMessages.getString(PKG,"Mail.ReplyAddress.Label"));
  props.setLook(wlReply);
  fdlReply=new FormData();
  fdlReply.left=new FormAttachment(0,-margin);
  fdlReply.top=new FormAttachment(wReplyName,margin);
  fdlReply.right=new FormAttachment(middle,-2 * margin);
  wlReply.setLayoutData(fdlReply);
  wReply=new CCombo(wReplyGroup,SWT.BORDER | SWT.READ_ONLY);
  wReply.setEditable(true);
  props.setLook(wReply);
  wReply.addModifyListener(lsMod);
  fdReply=new FormData();
  fdReply.left=new FormAttachment(middle,-margin);
  fdReply.top=new FormAttachment(wReplyName,margin);
  fdReply.right=new FormAttachment(100,-margin);
  wReply.setLayoutData(fdReply);
  wReply.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdReplyGroup=new FormData();
  fdReplyGroup.left=new FormAttachment(0,margin);
  fdReplyGroup.top=new FormAttachment(wDestinationGroup,margin);
  fdReplyGroup.right=new FormAttachment(100,-margin);
  wReplyGroup.setLayoutData(fdReplyGroup);
  wlReplyToAddresses=new Label(wGeneralComp,SWT.RIGHT);
  wlReplyToAddresses.setText(BaseMessages.getString(PKG,"MailDialog.ReplyToAddresses.Label"));
  props.setLook(wlReplyToAddresses);
  fdlReplyToAddresses=new FormData();
  fdlReplyToAddresses.left=new FormAttachment(0,-margin);
  fdlReplyToAddresses.top=new FormAttachment(wReplyGroup,2 * margin);
  fdlReplyToAddresses.right=new FormAttachment(middle,-2 * margin);
  wlReplyToAddresses.setLayoutData(fdlReplyToAddresses);
  wReplyToAddresses=new CCombo(wGeneralComp,SWT.BORDER | SWT.READ_ONLY);
  wReplyToAddresses.setEditable(true);
  props.setLook(wReplyToAddresses);
  wReplyToAddresses.addModifyListener(lsMod);
  fdReplyToAddresses=new FormData();
  fdReplyToAddresses.left=new FormAttachment(middle,-margin);
  fdReplyToAddresses.top=new FormAttachment(wReplyGroup,2 * margin);
  fdReplyToAddresses.right=new FormAttachment(100,-margin);
  wReplyToAddresses.setLayoutData(fdReplyToAddresses);
  wReplyToAddresses.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPerson=new Label(wGeneralComp,SWT.RIGHT);
  wlPerson.setText(BaseMessages.getString(PKG,"Mail.Contact.Label"));
  props.setLook(wlPerson);
  fdlPerson=new FormData();
  fdlPerson.left=new FormAttachment(0,-margin);
  fdlPerson.top=new FormAttachment(wReplyToAddresses,2 * margin);
  fdlPerson.right=new FormAttachment(middle,-2 * margin);
  wlPerson.setLayoutData(fdlPerson);
  wPerson=new CCombo(wGeneralComp,SWT.BORDER | SWT.READ_ONLY);
  wPerson.setEditable(true);
  props.setLook(wPerson);
  wPerson.addModifyListener(lsMod);
  fdPerson=new FormData();
  fdPerson.left=new FormAttachment(middle,-margin);
  fdPerson.top=new FormAttachment(wReplyToAddresses,2 * margin);
  fdPerson.right=new FormAttachment(100,-margin);
  wPerson.setLayoutData(fdPerson);
  wPerson.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPhone=new Label(wGeneralComp,SWT.RIGHT);
  wlPhone.setText(BaseMessages.getString(PKG,"Mail.ContactPhone.Label"));
  props.setLook(wlPhone);
  fdlPhone=new FormData();
  fdlPhone.left=new FormAttachment(0,-margin);
  fdlPhone.top=new FormAttachment(wPerson,margin);
  fdlPhone.right=new FormAttachment(middle,-2 * margin);
  wlPhone.setLayoutData(fdlPhone);
  wPhone=new CCombo(wGeneralComp,SWT.BORDER | SWT.READ_ONLY);
  wPhone.setEditable(true);
  props.setLook(wPhone);
  wPhone.addModifyListener(lsMod);
  fdPhone=new FormData();
  fdPhone.left=new FormAttachment(middle,-margin);
  fdPhone.top=new FormAttachment(wPerson,margin);
  fdPhone.right=new FormAttachment(100,-margin);
  wPhone.setLayoutData(fdPhone);
  wPhone.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(500,-margin);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(BaseMessages.getString(PKG,"MailDialog.Server.Label"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wServerGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wServerGroup);
  wServerGroup.setText(BaseMessages.getString(PKG,"Mail.Group.SMTPServer.Label"));
  FormLayout servergroupLayout=new FormLayout();
  servergroupLayout.marginWidth=10;
  servergroupLayout.marginHeight=10;
  wServerGroup.setLayout(servergroupLayout);
  wlServer=new Label(wServerGroup,SWT.RIGHT);
  wlServer.setText(BaseMessages.getString(PKG,"Mail.SMTPServer.Label"));
  props.setLook(wlServer);
  fdlServer=new FormData();
  fdlServer.left=new FormAttachment(0,-margin);
  fdlServer.top=new FormAttachment(0,margin);
  fdlServer.right=new FormAttachment(middle,-2 * margin);
  wlServer.setLayoutData(fdlServer);
  wServer=new CCombo(wServerGroup,SWT.BORDER | SWT.READ_ONLY);
  wServer.setEditable(true);
  props.setLook(wServer);
  wServer.addModifyListener(lsMod);
  fdServer=new FormData();
  fdServer.left=new FormAttachment(middle,-margin);
  fdServer.top=new FormAttachment(0,margin);
  fdServer.right=new FormAttachment(100,-margin);
  wServer.setLayoutData(fdServer);
  wServer.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPort=new Label(wServerGroup,SWT.RIGHT);
  wlPort.setText(BaseMessages.getString(PKG,"Mail.Port.Label"));
  props.setLook(wlPort);
  fdlPort=new FormData();
  fdlPort.left=new FormAttachment(0,-margin);
  fdlPort.top=new FormAttachment(wServer,margin);
  fdlPort.right=new FormAttachment(middle,-2 * margin);
  wlPort.setLayoutData(fdlPort);
  wPort=new CCombo(wServerGroup,SWT.BORDER | SWT.READ_ONLY);
  wPort.setEditable(true);
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.left=new FormAttachment(middle,-margin);
  fdPort.top=new FormAttachment(wServer,margin);
  fdPort.right=new FormAttachment(100,-margin);
  wPort.setLayoutData(fdPort);
  wPort.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdServerGroup=new FormData();
  fdServerGroup.left=new FormAttachment(0,margin);
  fdServerGroup.top=new FormAttachment(wName,margin);
  fdServerGroup.right=new FormAttachment(100,-margin);
  wServerGroup.setLayoutData(fdServerGroup);
  wAuthentificationGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wAuthentificationGroup);
  wAuthentificationGroup.setText(BaseMessages.getString(PKG,"Mail.Group.Authentification.Label"));
  FormLayout authentificationgroupLayout=new FormLayout();
  authentificationgroupLayout.marginWidth=10;
  authentificationgroupLayout.marginHeight=10;
  wAuthentificationGroup.setLayout(authentificationgroupLayout);
  wlUseAuth=new Label(wAuthentificationGroup,SWT.RIGHT);
  wlUseAuth.setText(BaseMessages.getString(PKG,"Mail.UseAuthentication.Label"));
  props.setLook(wlUseAuth);
  fdlUseAuth=new FormData();
  fdlUseAuth.left=new FormAttachment(0,0);
  fdlUseAuth.top=new FormAttachment(wServerGroup,margin);
  fdlUseAuth.right=new FormAttachment(middle,-2 * margin);
  wlUseAuth.setLayoutData(fdlUseAuth);
  wUseAuth=new Button(wAuthentificationGroup,SWT.CHECK);
  props.setLook(wUseAuth);
  fdUseAuth=new FormData();
  fdUseAuth.left=new FormAttachment(middle,-margin);
  fdUseAuth.top=new FormAttachment(wServerGroup,margin);
  fdUseAuth.right=new FormAttachment(100,0);
  wUseAuth.setLayoutData(fdUseAuth);
  wUseAuth.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setUseAuth();
      input.setChanged();
    }
  }
);
  wlAuthUser=new Label(wAuthentificationGroup,SWT.RIGHT);
  wlAuthUser.setText(BaseMessages.getString(PKG,"Mail.AuthenticationUser.Label"));
  props.setLook(wlAuthUser);
  fdlAuthUser=new FormData();
  fdlAuthUser.left=new FormAttachment(0,-margin);
  fdlAuthUser.top=new FormAttachment(wUseAuth,margin);
  fdlAuthUser.right=new FormAttachment(middle,-2 * margin);
  wlAuthUser.setLayoutData(fdlAuthUser);
  wAuthUser=new CCombo(wAuthentificationGroup,SWT.BORDER | SWT.READ_ONLY);
  wAuthUser.setEditable(true);
  props.setLook(wAuthUser);
  wAuthUser.addModifyListener(lsMod);
  fdAuthUser=new FormData();
  fdAuthUser.left=new FormAttachment(middle,-margin);
  fdAuthUser.top=new FormAttachment(wUseAuth,margin);
  fdAuthUser.right=new FormAttachment(100,-margin);
  wAuthUser.setLayoutData(fdAuthUser);
  wAuthUser.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlAuthPass=new Label(wAuthentificationGroup,SWT.RIGHT);
  wlAuthPass.setText(BaseMessages.getString(PKG,"Mail.AuthenticationPassword.Label"));
  props.setLook(wlAuthPass);
  fdlAuthPass=new FormData();
  fdlAuthPass.left=new FormAttachment(0,-margin);
  fdlAuthPass.top=new FormAttachment(wAuthUser,margin);
  fdlAuthPass.right=new FormAttachment(middle,-2 * margin);
  wlAuthPass.setLayoutData(fdlAuthPass);
  wAuthPass=new CCombo(wAuthentificationGroup,SWT.BORDER | SWT.READ_ONLY);
  wAuthPass.setEditable(true);
  props.setLook(wAuthPass);
  wAuthPass.addModifyListener(lsMod);
  fdAuthPass=new FormData();
  fdAuthPass.left=new FormAttachment(middle,-margin);
  fdAuthPass.top=new FormAttachment(wAuthUser,margin);
  fdAuthPass.right=new FormAttachment(100,-margin);
  wAuthPass.setLayoutData(fdAuthPass);
  wAuthPass.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlUseSecAuth=new Label(wAuthentificationGroup,SWT.RIGHT);
  wlUseSecAuth.setText(BaseMessages.getString(PKG,"Mail.UseSecAuthentication.Label"));
  props.setLook(wlUseSecAuth);
  fdlUseSecAuth=new FormData();
  fdlUseSecAuth.left=new FormAttachment(0,0);
  fdlUseSecAuth.top=new FormAttachment(wAuthPass,margin);
  fdlUseSecAuth.right=new FormAttachment(middle,-2 * margin);
  wlUseSecAuth.setLayoutData(fdlUseSecAuth);
  wUseSecAuth=new Button(wAuthentificationGroup,SWT.CHECK);
  props.setLook(wUseSecAuth);
  fdUseSecAuth=new FormData();
  fdUseSecAuth.left=new FormAttachment(middle,-margin);
  fdUseSecAuth.top=new FormAttachment(wAuthPass,margin);
  fdUseSecAuth.right=new FormAttachment(100,0);
  wUseSecAuth.setLayoutData(fdUseSecAuth);
  wUseSecAuth.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setSecureConnectiontype();
      input.setChanged();
    }
  }
);
  wlSecureConnectionType=new Label(wAuthentificationGroup,SWT.RIGHT);
  wlSecureConnectionType.setText(BaseMessages.getString(PKG,"Mail.SecureConnectionType.Label"));
  props.setLook(wlSecureConnectionType);
  fdlSecureConnectionType=new FormData();
  fdlSecureConnectionType.left=new FormAttachment(0,0);
  fdlSecureConnectionType.top=new FormAttachment(wUseSecAuth,margin);
  fdlSecureConnectionType.right=new FormAttachment(middle,-2 * margin);
  wlSecureConnectionType.setLayoutData(fdlSecureConnectionType);
  wSecureConnectionType=new CCombo(wAuthentificationGroup,SWT.BORDER | SWT.READ_ONLY);
  wSecureConnectionType.setEditable(true);
  props.setLook(wSecureConnectionType);
  wSecureConnectionType.addModifyListener(lsMod);
  fdSecureConnectionType=new FormData();
  fdSecureConnectionType.left=new FormAttachment(middle,-margin);
  fdSecureConnectionType.top=new FormAttachment(wUseSecAuth,margin);
  fdSecureConnectionType.right=new FormAttachment(100,0);
  wSecureConnectionType.setLayoutData(fdSecureConnectionType);
  wSecureConnectionType.add("SSL");
  wSecureConnectionType.add("TLS");
  wSecureConnectionType.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setSecureConnectiontype();
      input.setChanged();
    }
  }
);
  fdAuthentificationGroup=new FormData();
  fdAuthentificationGroup.left=new FormAttachment(0,margin);
  fdAuthentificationGroup.top=new FormAttachment(wServerGroup,margin);
  fdAuthentificationGroup.right=new FormAttachment(100,-margin);
  fdAuthentificationGroup.bottom=new FormAttachment(100,-margin);
  wAuthentificationGroup.setLayoutData(fdAuthentificationGroup);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(wContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  wMessageTab=new CTabItem(wTabFolder,SWT.NONE);
  wMessageTab.setText(BaseMessages.getString(PKG,"Mail.Tab.Message.Label"));
  FormLayout messageLayout=new FormLayout();
  messageLayout.marginWidth=3;
  messageLayout.marginHeight=3;
  wMessageComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wMessageComp);
  wMessageComp.setLayout(contentLayout);
  wMessageSettingsGroup=new Group(wMessageComp,SWT.SHADOW_NONE);
  props.setLook(wMessageSettingsGroup);
  wMessageSettingsGroup.setText(BaseMessages.getString(PKG,"Mail.Group.MessageSettings.Label"));
  FormLayout messagesettingsgroupLayout=new FormLayout();
  messagesettingsgroupLayout.marginWidth=10;
  messagesettingsgroupLayout.marginHeight=10;
  wMessageSettingsGroup.setLayout(messagesettingsgroupLayout);
  wlAddDate=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlAddDate.setText(BaseMessages.getString(PKG,"Mail.IncludeDate.Label"));
  props.setLook(wlAddDate);
  fdlAddDate=new FormData();
  fdlAddDate.left=new FormAttachment(0,0);
  fdlAddDate.top=new FormAttachment(0,margin);
  fdlAddDate.right=new FormAttachment(middle,-2 * margin);
  wlAddDate.setLayoutData(fdlAddDate);
  wAddDate=new Button(wMessageSettingsGroup,SWT.CHECK);
  props.setLook(wAddDate);
  fdAddDate=new FormData();
  fdAddDate.left=new FormAttachment(middle,-margin);
  fdAddDate.top=new FormAttachment(0,margin);
  fdAddDate.right=new FormAttachment(100,0);
  wAddDate.setLayoutData(fdAddDate);
  wAddDate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlOnlyComment=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlOnlyComment.setText(BaseMessages.getString(PKG,"Mail.OnlyCommentInBody.Label"));
  props.setLook(wlOnlyComment);
  fdlOnlyComment=new FormData();
  fdlOnlyComment.left=new FormAttachment(0,0);
  fdlOnlyComment.top=new FormAttachment(wAddDate,margin);
  fdlOnlyComment.right=new FormAttachment(middle,-2 * margin);
  wlOnlyComment.setLayoutData(fdlOnlyComment);
  wOnlyComment=new Button(wMessageSettingsGroup,SWT.CHECK);
  props.setLook(wOnlyComment);
  fdOnlyComment=new FormData();
  fdOnlyComment.left=new FormAttachment(middle,-margin);
  fdOnlyComment.top=new FormAttachment(wAddDate,margin);
  fdOnlyComment.right=new FormAttachment(100,0);
  wOnlyComment.setLayoutData(fdOnlyComment);
  wOnlyComment.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlUseHTML=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlUseHTML.setText(BaseMessages.getString(PKG,"Mail.UseHTMLInBody.Label"));
  props.setLook(wlUseHTML);
  fdlUseHTML=new FormData();
  fdlUseHTML.left=new FormAttachment(0,0);
  fdlUseHTML.top=new FormAttachment(wOnlyComment,margin);
  fdlUseHTML.right=new FormAttachment(middle,-2 * margin);
  wlUseHTML.setLayoutData(fdlUseHTML);
  wUseHTML=new Button(wMessageSettingsGroup,SWT.CHECK);
  props.setLook(wUseHTML);
  fdUseHTML=new FormData();
  fdUseHTML.left=new FormAttachment(middle,-margin);
  fdUseHTML.top=new FormAttachment(wOnlyComment,margin);
  fdUseHTML.right=new FormAttachment(100,0);
  wUseHTML.setLayoutData(fdUseHTML);
  wUseHTML.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      SetEnabledEncoding();
    }
  }
);
  wlEncoding=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"Mail.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(wUseHTML,margin);
  fdlEncoding.right=new FormAttachment(middle,-2 * margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new CCombo(wMessageSettingsGroup,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,-margin);
  fdEncoding.top=new FormAttachment(wUseHTML,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlUsePriority=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlUsePriority.setText(BaseMessages.getString(PKG,"Mail.UsePriority.Label"));
  props.setLook(wlUsePriority);
  fdlPriority=new FormData();
  fdlPriority.left=new FormAttachment(0,0);
  fdlPriority.top=new FormAttachment(wEncoding,margin);
  fdlPriority.right=new FormAttachment(middle,-2 * margin);
  wlUsePriority.setLayoutData(fdlPriority);
  wUsePriority=new Button(wMessageSettingsGroup,SWT.CHECK);
  wUsePriority.setToolTipText(BaseMessages.getString(PKG,"Mail.UsePriority.Tooltip"));
  props.setLook(wUsePriority);
  fdUsePriority=new FormData();
  fdUsePriority.left=new FormAttachment(middle,-margin);
  fdUsePriority.top=new FormAttachment(wEncoding,margin);
  fdUsePriority.right=new FormAttachment(100,0);
  wUsePriority.setLayoutData(fdUsePriority);
  wUsePriority.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeUsePriority();
      input.setChanged();
    }
  }
);
  SelectionAdapter selChanged=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
;
  wlPriority=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlPriority.setText(BaseMessages.getString(PKG,"Mail.Priority.Label"));
  props.setLook(wlPriority);
  fdlPriority=new FormData();
  fdlPriority.left=new FormAttachment(0,0);
  fdlPriority.right=new FormAttachment(middle,-2 * margin);
  fdlPriority.top=new FormAttachment(wUsePriority,margin);
  wlPriority.setLayoutData(fdlPriority);
  wPriority=new CCombo(wMessageSettingsGroup,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wPriority.add(BaseMessages.getString(PKG,"Mail.Priority.Low.Label"));
  wPriority.add(BaseMessages.getString(PKG,"Mail.Priority.Normal.Label"));
  wPriority.add(BaseMessages.getString(PKG,"Mail.Priority.High.Label"));
  wPriority.select(1);
  wPriority.addSelectionListener(selChanged);
  props.setLook(wPriority);
  fdPriority=new FormData();
  fdPriority.left=new FormAttachment(middle,-margin);
  fdPriority.top=new FormAttachment(wUsePriority,margin);
  fdPriority.right=new FormAttachment(100,0);
  wPriority.setLayoutData(fdPriority);
  wlImportance=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlImportance.setText(BaseMessages.getString(PKG,"Mail.Importance.Label"));
  props.setLook(wlImportance);
  fdlImportance=new FormData();
  fdlImportance.left=new FormAttachment(0,0);
  fdlImportance.right=new FormAttachment(middle,-2 * margin);
  fdlImportance.top=new FormAttachment(wPriority,margin);
  wlImportance.setLayoutData(fdlImportance);
  wImportance=new CCombo(wMessageSettingsGroup,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wImportance.add(BaseMessages.getString(PKG,"Mail.Priority.Low.Label"));
  wImportance.add(BaseMessages.getString(PKG,"Mail.Priority.Normal.Label"));
  wImportance.add(BaseMessages.getString(PKG,"Mail.Priority.High.Label"));
  wImportance.select(1);
  wImportance.addSelectionListener(selChanged);
  props.setLook(wImportance);
  fdImportance=new FormData();
  fdImportance.left=new FormAttachment(middle,-margin);
  fdImportance.top=new FormAttachment(wPriority,margin);
  fdImportance.right=new FormAttachment(100,0);
  wImportance.setLayoutData(fdImportance);
  wlSensitivity=new Label(wMessageSettingsGroup,SWT.RIGHT);
  wlSensitivity.setText(BaseMessages.getString(PKG,"Mail.Sensitivity.Label"));
  props.setLook(wlSensitivity);
  fdlSensitivity=new FormData();
  fdlSensitivity.left=new FormAttachment(0,0);
  fdlSensitivity.right=new FormAttachment(middle,-2 * margin);
  fdlSensitivity.top=new FormAttachment(wImportance,margin);
  wlSensitivity.setLayoutData(fdlSensitivity);
  wSensitivity=new CCombo(wMessageSettingsGroup,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wSensitivity.add(BaseMessages.getString(PKG,"Mail.Sensitivity.normal.Label"));
  wSensitivity.add(BaseMessages.getString(PKG,"Mail.Sensitivity.personal.Label"));
  wSensitivity.add(BaseMessages.getString(PKG,"Mail.Sensitivity.private.Label"));
  wSensitivity.add(BaseMessages.getString(PKG,"Mail.Sensitivity.confidential.Label"));
  wSensitivity.select(0);
  wSensitivity.addSelectionListener(selChanged);
  props.setLook(wSensitivity);
  fdSensitivity=new FormData();
  fdSensitivity.left=new FormAttachment(middle,-margin);
  fdSensitivity.top=new FormAttachment(wImportance,margin);
  fdSensitivity.right=new FormAttachment(100,0);
  wSensitivity.setLayoutData(fdSensitivity);
  fdMessageSettingsGroup=new FormData();
  fdMessageSettingsGroup.left=new FormAttachment(0,margin);
  fdMessageSettingsGroup.top=new FormAttachment(wName,margin);
  fdMessageSettingsGroup.right=new FormAttachment(100,-margin);
  wMessageSettingsGroup.setLayoutData(fdMessageSettingsGroup);
  wMessageGroup=new Group(wMessageComp,SWT.SHADOW_NONE);
  props.setLook(wMessageGroup);
  wMessageGroup.setText(BaseMessages.getString(PKG,"Mail.Group.Message.Label"));
  FormLayout messagegroupLayout=new FormLayout();
  messagegroupLayout.marginWidth=10;
  messagegroupLayout.marginHeight=10;
  wMessageGroup.setLayout(messagegroupLayout);
  wlSubject=new Label(wMessageGroup,SWT.RIGHT);
  wlSubject.setText(BaseMessages.getString(PKG,"Mail.Subject.Label"));
  props.setLook(wlSubject);
  fdlSubject=new FormData();
  fdlSubject.left=new FormAttachment(0,-margin);
  fdlSubject.top=new FormAttachment(wMessageSettingsGroup,margin);
  fdlSubject.right=new FormAttachment(middle,-2 * margin);
  wlSubject.setLayoutData(fdlSubject);
  wSubject=new CCombo(wMessageGroup,SWT.BORDER | SWT.READ_ONLY);
  wSubject.setEditable(true);
  props.setLook(wSubject);
  wSubject.addModifyListener(lsMod);
  fdSubject=new FormData();
  fdSubject.left=new FormAttachment(middle,-margin);
  fdSubject.top=new FormAttachment(wMessageSettingsGroup,margin);
  fdSubject.right=new FormAttachment(100,-margin);
  wSubject.setLayoutData(fdSubject);
  wSubject.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlComment=new Label(wMessageGroup,SWT.RIGHT);
  wlComment.setText(BaseMessages.getString(PKG,"Mail.Comment.Label"));
  props.setLook(wlComment);
  fdlComment=new FormData();
  fdlComment.left=new FormAttachment(0,-margin);
  fdlComment.top=new FormAttachment(wSubject,margin);
  fdlComment.right=new FormAttachment(middle,-2 * margin);
  wlComment.setLayoutData(fdlComment);
  wComment=new CCombo(wMessageGroup,SWT.BORDER | SWT.READ_ONLY);
  wComment.setEditable(true);
  props.setLook(wComment);
  wComment.addModifyListener(lsMod);
  fdComment=new FormData();
  fdComment.left=new FormAttachment(middle,-margin);
  fdComment.top=new FormAttachment(wSubject,margin);
  fdComment.right=new FormAttachment(100,-margin);
  wComment.setLayoutData(fdComment);
  wComment.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdMessageGroup=new FormData();
  fdMessageGroup.left=new FormAttachment(0,margin);
  fdMessageGroup.top=new FormAttachment(wMessageSettingsGroup,margin);
  fdMessageGroup.bottom=new FormAttachment(100,-margin);
  fdMessageGroup.right=new FormAttachment(100,-margin);
  wMessageGroup.setLayoutData(fdMessageGroup);
  fdMessageComp=new FormData();
  fdMessageComp.left=new FormAttachment(0,0);
  fdMessageComp.top=new FormAttachment(0,0);
  fdMessageComp.right=new FormAttachment(100,0);
  fdMessageComp.bottom=new FormAttachment(100,0);
  wMessageComp.setLayoutData(wMessageComp);
  wMessageComp.layout();
  wMessageTab.setControl(wMessageComp);
  wAttachedTab=new CTabItem(wTabFolder,SWT.NONE);
  wAttachedTab.setText(BaseMessages.getString(PKG,"Mail.Tab.AttachedFiles.Label"));
  FormLayout attachedLayout=new FormLayout();
  attachedLayout.marginWidth=3;
  attachedLayout.marginHeight=3;
  wAttachedComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wAttachedComp);
  wAttachedComp.setLayout(attachedLayout);
  wAttachedContent=new Group(wAttachedComp,SWT.SHADOW_NONE);
  props.setLook(wAttachedContent);
  wAttachedContent.setText(BaseMessages.getString(PKG,"MailDialog.AttachedContent.Label"));
  FormLayout AttachedContentgroupLayout=new FormLayout();
  AttachedContentgroupLayout.marginWidth=10;
  AttachedContentgroupLayout.marginHeight=10;
  wAttachedContent.setLayout(AttachedContentgroupLayout);
  wlisattachContentField=new Label(wAttachedContent,SWT.RIGHT);
  wlisattachContentField.setText(BaseMessages.getString(PKG,"MailDialog.isattachContentField.Label"));
  props.setLook(wlisattachContentField);
  fdlisattachContentField=new FormData();
  fdlisattachContentField.left=new FormAttachment(0,-margin);
  fdlisattachContentField.top=new FormAttachment(0,margin);
  fdlisattachContentField.right=new FormAttachment(middle,-2 * margin);
  wlisattachContentField.setLayoutData(fdlisattachContentField);
  wisattachContentField=new Button(wAttachedContent,SWT.CHECK);
  props.setLook(wisattachContentField);
  wisattachContentField.setToolTipText(BaseMessages.getString(PKG,"MailDialog.isattachContentField.Tooltip"));
  fdisattachContentField=new FormData();
  fdisattachContentField.left=new FormAttachment(middle,-margin);
  fdisattachContentField.top=new FormAttachment(0,margin);
  wisattachContentField.setLayoutData(fdisattachContentField);
  SelectionAdapter lisattachContentField=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      activeISAttachContentField();
      input.setChanged();
    }
  }
;
  wisattachContentField.addSelectionListener(lisattachContentField);
  wlattachContentField=new Label(wAttachedContent,SWT.RIGHT);
  wlattachContentField.setText(BaseMessages.getString(PKG,"MailDialog.attachContentField.Label"));
  props.setLook(wlattachContentField);
  fdlattachContentField=new FormData();
  fdlattachContentField.left=new FormAttachment(0,-margin);
  fdlattachContentField.top=new FormAttachment(wisattachContentField,margin);
  fdlattachContentField.right=new FormAttachment(middle,-2 * margin);
  wlattachContentField.setLayoutData(fdlattachContentField);
  wattachContentField=new CCombo(wAttachedContent,SWT.BORDER | SWT.READ_ONLY);
  wattachContentField.setEditable(true);
  props.setLook(wattachContentField);
  wattachContentField.addModifyListener(lsMod);
  fdattachContentField=new FormData();
  fdattachContentField.left=new FormAttachment(middle,-margin);
  fdattachContentField.top=new FormAttachment(wisattachContentField,margin);
  fdattachContentField.right=new FormAttachment(100,-margin);
  wattachContentField.setLayoutData(fdattachContentField);
  wattachContentField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlattachContentFileNameField=new Label(wAttachedContent,SWT.RIGHT);
  wlattachContentFileNameField.setText(BaseMessages.getString(PKG,"MailDialog.attachContentFileNameField.Label"));
  props.setLook(wlattachContentFileNameField);
  fdlattachContentFileNameField=new FormData();
  fdlattachContentFileNameField.left=new FormAttachment(0,-margin);
  fdlattachContentFileNameField.top=new FormAttachment(wattachContentField,margin);
  fdlattachContentFileNameField.right=new FormAttachment(middle,-2 * margin);
  wlattachContentFileNameField.setLayoutData(fdlattachContentFileNameField);
  wattachContentFileNameField=new CCombo(wAttachedContent,SWT.BORDER | SWT.READ_ONLY);
  wattachContentFileNameField.setEditable(true);
  props.setLook(wattachContentFileNameField);
  wattachContentFileNameField.addModifyListener(lsMod);
  fdattachContentFileNameField=new FormData();
  fdattachContentFileNameField.left=new FormAttachment(middle,-margin);
  fdattachContentFileNameField.top=new FormAttachment(wattachContentField,margin);
  fdattachContentFileNameField.right=new FormAttachment(100,-margin);
  wattachContentFileNameField.setLayoutData(fdattachContentFileNameField);
  wattachContentFileNameField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdAttachedContent=new FormData();
  fdAttachedContent.left=new FormAttachment(0,margin);
  fdAttachedContent.top=new FormAttachment(0,2 * margin);
  fdAttachedContent.right=new FormAttachment(100,-margin);
  wAttachedContent.setLayoutData(fdAttachedContent);
  wOriginFiles=new Group(wAttachedComp,SWT.SHADOW_NONE);
  props.setLook(wOriginFiles);
  wOriginFiles.setText(BaseMessages.getString(PKG,"MailDialog.OriginAttachedFiles.Label"));
  FormLayout OriginFilesgroupLayout=new FormLayout();
  OriginFilesgroupLayout.marginWidth=10;
  OriginFilesgroupLayout.marginHeight=10;
  wOriginFiles.setLayout(OriginFilesgroupLayout);
  wlisFileDynamic=new Label(wOriginFiles,SWT.RIGHT);
  wlisFileDynamic.setText(BaseMessages.getString(PKG,"MailDialog.isFileDynamic.Label"));
  props.setLook(wlisFileDynamic);
  fdlisFileDynamic=new FormData();
  fdlisFileDynamic.left=new FormAttachment(0,-margin);
  fdlisFileDynamic.top=new FormAttachment(wAttachedContent,margin);
  fdlisFileDynamic.right=new FormAttachment(middle,-2 * margin);
  wlisFileDynamic.setLayoutData(fdlisFileDynamic);
  wisFileDynamic=new Button(wOriginFiles,SWT.CHECK);
  props.setLook(wisFileDynamic);
  wisFileDynamic.setToolTipText(BaseMessages.getString(PKG,"MailDialog.isFileDynamic.Tooltip"));
  fdisFileDynamic=new FormData();
  fdisFileDynamic.left=new FormAttachment(middle,-margin);
  fdisFileDynamic.top=new FormAttachment(wAttachedContent,margin);
  wisFileDynamic.setLayoutData(fdisFileDynamic);
  SelectionAdapter lisFileDynamic=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      ActiveisFileDynamic();
      input.setChanged();
    }
  }
;
  wisFileDynamic.addSelectionListener(lisFileDynamic);
  wlDynamicFilenameField=new Label(wOriginFiles,SWT.RIGHT);
  wlDynamicFilenameField.setText(BaseMessages.getString(PKG,"MailDialog.DynamicFilenameField.Label"));
  props.setLook(wlDynamicFilenameField);
  fdlFilenameField=new FormData();
  fdlFilenameField.left=new FormAttachment(0,-margin);
  fdlFilenameField.top=new FormAttachment(wisFileDynamic,margin);
  fdlFilenameField.right=new FormAttachment(middle,-2 * margin);
  wlDynamicFilenameField.setLayoutData(fdlFilenameField);
  wDynamicFilenameField=new CCombo(wOriginFiles,SWT.BORDER | SWT.READ_ONLY);
  wDynamicFilenameField.setEditable(true);
  props.setLook(wDynamicFilenameField);
  wDynamicFilenameField.addModifyListener(lsMod);
  fdFilenameField=new FormData();
  fdFilenameField.left=new FormAttachment(middle,-margin);
  fdFilenameField.top=new FormAttachment(wisFileDynamic,margin);
  fdFilenameField.right=new FormAttachment(100,-margin);
  wDynamicFilenameField.setLayoutData(fdFilenameField);
  wDynamicFilenameField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlDynamicWildcardField=new Label(wOriginFiles,SWT.RIGHT);
  wlDynamicWildcardField.setText(BaseMessages.getString(PKG,"MailDialog.DynamicWildcardField.Label"));
  props.setLook(wlDynamicWildcardField);
  fdlDynamicWildcardField=new FormData();
  fdlDynamicWildcardField.left=new FormAttachment(0,-margin);
  fdlDynamicWildcardField.top=new FormAttachment(wDynamicFilenameField,margin);
  fdlDynamicWildcardField.right=new FormAttachment(middle,-2 * margin);
  wlDynamicWildcardField.setLayoutData(fdlDynamicWildcardField);
  wDynamicWildcardField=new CCombo(wOriginFiles,SWT.BORDER | SWT.READ_ONLY);
  wDynamicWildcardField.setEditable(true);
  props.setLook(wDynamicWildcardField);
  wDynamicWildcardField.addModifyListener(lsMod);
  fdDynamicWildcardField=new FormData();
  fdDynamicWildcardField.left=new FormAttachment(middle,-margin);
  fdDynamicWildcardField.top=new FormAttachment(wDynamicFilenameField,margin);
  fdDynamicWildcardField.right=new FormAttachment(100,-margin);
  wDynamicWildcardField.setLayoutData(fdDynamicWildcardField);
  wDynamicWildcardField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlSourceFileFoldername=new Label(wOriginFiles,SWT.RIGHT);
  wlSourceFileFoldername.setText(BaseMessages.getString(PKG,"MailDialog.FileFoldername.Label"));
  props.setLook(wlSourceFileFoldername);
  fdlSourceFileFoldername=new FormData();
  fdlSourceFileFoldername.left=new FormAttachment(0,0);
  fdlSourceFileFoldername.top=new FormAttachment(wDynamicWildcardField,2 * margin);
  fdlSourceFileFoldername.right=new FormAttachment(middle,-margin);
  wlSourceFileFoldername.setLayoutData(fdlSourceFileFoldername);
  wbSourceFolder=new Button(wOriginFiles,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSourceFolder);
  wbSourceFolder.setText(BaseMessages.getString(PKG,"MailDialog.BrowseFolders.Label"));
  fdbSourceFolder=new FormData();
  fdbSourceFolder.right=new FormAttachment(100,0);
  fdbSourceFolder.top=new FormAttachment(wDynamicWildcardField,2 * margin);
  wbSourceFolder.setLayoutData(fdbSourceFolder);
  wbSourceFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wSourceFileFoldername.getText() != null) {
        ddialog.setFilterPath(transMeta.environmentSubstitute(wSourceFileFoldername.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wSourceFileFoldername.setText(dir);
      }
    }
  }
);
  wbFileFoldername=new Button(wOriginFiles,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFileFoldername);
  wbFileFoldername.setText(BaseMessages.getString(PKG,"MailDialog.BrowseFiles.Label"));
  fdbSourceFileFoldername=new FormData();
  fdbSourceFileFoldername.right=new FormAttachment(wbSourceFolder,-margin);
  fdbSourceFileFoldername.top=new FormAttachment(wDynamicWildcardField,2 * margin);
  wbFileFoldername.setLayoutData(fdbSourceFileFoldername);
  wSourceFileFoldername=new TextVar(transMeta,wOriginFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSourceFileFoldername);
  wSourceFileFoldername.addModifyListener(lsMod);
  fdSourceFileFoldername=new FormData();
  fdSourceFileFoldername.left=new FormAttachment(middle,0);
  fdSourceFileFoldername.top=new FormAttachment(wDynamicWildcardField,2 * margin);
  fdSourceFileFoldername.right=new FormAttachment(wbFileFoldername,-margin);
  wSourceFileFoldername.setLayoutData(fdSourceFileFoldername);
  wSourceFileFoldername.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wSourceFileFoldername.setToolTipText(transMeta.environmentSubstitute(wSourceFileFoldername.getText()));
    }
  }
);
  wbFileFoldername.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*"});
      if (wSourceFileFoldername.getText() != null) {
        dialog.setFileName(transMeta.environmentSubstitute(wSourceFileFoldername.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wSourceFileFoldername.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlincludeSubFolders=new Label(wOriginFiles,SWT.RIGHT);
  wlincludeSubFolders.setText(BaseMessages.getString(PKG,"MailDialog.includeSubFolders.Label"));
  props.setLook(wlincludeSubFolders);
  fdlincludeSubFolders=new FormData();
  fdlincludeSubFolders.left=new FormAttachment(0,0);
  fdlincludeSubFolders.top=new FormAttachment(wSourceFileFoldername,margin);
  fdlincludeSubFolders.right=new FormAttachment(middle,-margin);
  wlincludeSubFolders.setLayoutData(fdlincludeSubFolders);
  wincludeSubFolders=new Button(wOriginFiles,SWT.CHECK);
  props.setLook(wincludeSubFolders);
  wincludeSubFolders.setToolTipText(BaseMessages.getString(PKG,"MailDialog.includeSubFolders.Tooltip"));
  fdincludeSubFolders=new FormData();
  fdincludeSubFolders.left=new FormAttachment(middle,0);
  fdincludeSubFolders.top=new FormAttachment(wSourceFileFoldername,margin);
  fdincludeSubFolders.right=new FormAttachment(100,0);
  wincludeSubFolders.setLayoutData(fdincludeSubFolders);
  wincludeSubFolders.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlWildcard=new Label(wOriginFiles,SWT.RIGHT);
  wlWildcard.setText(BaseMessages.getString(PKG,"MailDialog.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wincludeSubFolders,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(transMeta,wOriginFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wWildcard);
  wWildcard.setToolTipText(BaseMessages.getString(PKG,"MailDialog.Wildcard.Tooltip"));
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wincludeSubFolders,margin);
  fdWildcard.right=new FormAttachment(wbFileFoldername,-margin);
  wWildcard.setLayoutData(fdWildcard);
  wWildcard.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wWildcard.setToolTipText(transMeta.environmentSubstitute(wWildcard.getText()));
    }
  }
);
  fdOriginFiles=new FormData();
  fdOriginFiles.left=new FormAttachment(0,margin);
  fdOriginFiles.top=new FormAttachment(wAttachedContent,2 * margin);
  fdOriginFiles.right=new FormAttachment(100,-margin);
  wOriginFiles.setLayoutData(fdOriginFiles);
  wZipGroup=new Group(wAttachedComp,SWT.SHADOW_NONE);
  props.setLook(wZipGroup);
  wZipGroup.setText(BaseMessages.getString(PKG,"MailDialog.ZipGroup.Label"));
  FormLayout ZipGroupgroupLayout=new FormLayout();
  ZipGroupgroupLayout.marginWidth=10;
  ZipGroupgroupLayout.marginHeight=10;
  wZipGroup.setLayout(ZipGroupgroupLayout);
  wlZipFiles=new Label(wZipGroup,SWT.RIGHT);
  wlZipFiles.setText(BaseMessages.getString(PKG,"MailDialog.ZipFiles.Label"));
  props.setLook(wlZipFiles);
  fdlZipFiles=new FormData();
  fdlZipFiles.left=new FormAttachment(0,-margin);
  fdlZipFiles.top=new FormAttachment(wOriginFiles,margin);
  fdlZipFiles.right=new FormAttachment(middle,-2 * margin);
  wlZipFiles.setLayoutData(fdlZipFiles);
  wZipFiles=new Button(wZipGroup,SWT.CHECK);
  props.setLook(wZipFiles);
  fdZipFiles=new FormData();
  fdZipFiles.left=new FormAttachment(middle,-margin);
  fdZipFiles.top=new FormAttachment(wOriginFiles,margin);
  fdZipFiles.right=new FormAttachment(100,-margin);
  wZipFiles.setLayoutData(fdZipFiles);
  wZipFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setZip();
    }
  }
);
  wlisZipFileDynamic=new Label(wZipGroup,SWT.RIGHT);
  wlisZipFileDynamic.setText(BaseMessages.getString(PKG,"MailDialog.isZipFileDynamic.Label"));
  props.setLook(wlisZipFileDynamic);
  fdlisZipFileDynamic=new FormData();
  fdlisZipFileDynamic.left=new FormAttachment(0,-margin);
  fdlisZipFileDynamic.top=new FormAttachment(wZipFiles,margin);
  fdlisZipFileDynamic.right=new FormAttachment(middle,-2 * margin);
  wlisZipFileDynamic.setLayoutData(fdlisZipFileDynamic);
  wisZipFileDynamic=new Button(wZipGroup,SWT.CHECK);
  props.setLook(wisZipFileDynamic);
  fdisZipFileDynamic=new FormData();
  fdisZipFileDynamic.left=new FormAttachment(middle,-margin);
  fdisZipFileDynamic.top=new FormAttachment(wZipFiles,margin);
  fdisZipFileDynamic.right=new FormAttachment(100,-margin);
  wisZipFileDynamic.setLayoutData(fdisZipFileDynamic);
  wisZipFileDynamic.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setDynamicZip();
    }
  }
);
  wlDynamicZipFileField=new Label(wZipGroup,SWT.RIGHT);
  wlDynamicZipFileField.setText(BaseMessages.getString(PKG,"MailDialog.DynamicZipFileField.Label"));
  props.setLook(wlDynamicZipFileField);
  fdlDynamicZipFileField=new FormData();
  fdlDynamicZipFileField.left=new FormAttachment(0,-margin);
  fdlDynamicZipFileField.top=new FormAttachment(wisZipFileDynamic,margin);
  fdlDynamicZipFileField.right=new FormAttachment(middle,-2 * margin);
  wlDynamicZipFileField.setLayoutData(fdlDynamicZipFileField);
  wDynamicZipFileField=new CCombo(wZipGroup,SWT.BORDER | SWT.READ_ONLY);
  wDynamicZipFileField.setEditable(true);
  props.setLook(wDynamicZipFileField);
  wDynamicZipFileField.addModifyListener(lsMod);
  fdDynamicZipFileField=new FormData();
  fdDynamicZipFileField.left=new FormAttachment(middle,-margin);
  fdDynamicZipFileField.top=new FormAttachment(wisZipFileDynamic,margin);
  fdDynamicZipFileField.right=new FormAttachment(100,-margin);
  wDynamicZipFileField.setLayoutData(fdDynamicZipFileField);
  wDynamicZipFileField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getPreviousFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wZipFilename=new LabelTextVar(transMeta,wZipGroup,BaseMessages.getString(PKG,"MailDialog.ZipFilename.Label"),BaseMessages.getString(PKG,"MailDialog.ZipFilename.Tooltip"));
  wZipFilename.addModifyListener(lsMod);
  fdZipFilename=new FormData();
  fdZipFilename.left=new FormAttachment(0,-margin);
  fdZipFilename.top=new FormAttachment(wDynamicZipFileField,margin);
  fdZipFilename.right=new FormAttachment(100,-4 * margin);
  wZipFilename.setLayoutData(fdZipFilename);
  wZipSizeCondition=new LabelTextVar(transMeta,wZipGroup,BaseMessages.getString(PKG,"MailDialog.ZipSizeCondition.Label"),BaseMessages.getString(PKG,"MailDialog.ZipSizeCondition.Tooltip"));
  wZipSizeCondition.addModifyListener(lsMod);
  fdZipSizeCondition=new FormData();
  fdZipSizeCondition.left=new FormAttachment(0,-margin);
  fdZipSizeCondition.top=new FormAttachment(wZipFilename,margin);
  fdZipSizeCondition.right=new FormAttachment(100,-4 * margin);
  wZipSizeCondition.setLayoutData(fdZipSizeCondition);
  fdZipGroup=new FormData();
  fdZipGroup.left=new FormAttachment(0,margin);
  fdZipGroup.top=new FormAttachment(wOriginFiles,margin);
  fdZipGroup.right=new FormAttachment(100,-margin);
  wZipGroup.setLayoutData(fdZipGroup);
  fdAttachedComp=new FormData();
  fdAttachedComp.left=new FormAttachment(0,0);
  fdAttachedComp.top=new FormAttachment(0,0);
  fdAttachedComp.right=new FormAttachment(100,0);
  fdAttachedComp.bottom=new FormAttachment(100,0);
  wAttachedComp.setLayoutData(wAttachedComp);
  wAttachedComp.layout();
  wAttachedTab.setControl(wAttachedComp);
  wembeddedTab=new CTabItem(wTabFolder,SWT.NONE);
  wembeddedTab.setText(BaseMessages.getString(PKG,"Mail.Tab.embeddedImages.Label"));
  FormLayout embeddedLayout=new FormLayout();
  embeddedLayout.marginWidth=3;
  embeddedLayout.marginHeight=3;
  wembeddedComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wembeddedComp);
  wembeddedComp.setLayout(embeddedLayout);
  wlImageFilename=new Label(wembeddedComp,SWT.RIGHT);
  wlImageFilename.setText(BaseMessages.getString(PKG,"MailDialog.ImageFilename.Label"));
  props.setLook(wlImageFilename);
  fdlImageFilename=new FormData();
  fdlImageFilename.left=new FormAttachment(0,0);
  fdlImageFilename.top=new FormAttachment(wStepname,margin);
  fdlImageFilename.right=new FormAttachment(middle,-margin);
  wlImageFilename.setLayoutData(fdlImageFilename);
  wbImageFilename=new Button(wembeddedComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbImageFilename);
  wbImageFilename.setText(BaseMessages.getString(PKG,"MailDialog.BrowseFiles.Label"));
  wbImageFilename.setToolTipText(BaseMessages.getString(PKG,"MailDialog.BrowseFiles.Tooltip"));
  fdbImageFilename=new FormData();
  fdbImageFilename.right=new FormAttachment(100,0);
  fdbImageFilename.top=new FormAttachment(wStepname,margin);
  fdbImageFilename.right=new FormAttachment(100,-margin);
  wbImageFilename.setLayoutData(fdbImageFilename);
  wbaImageFilename=new Button(wembeddedComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaImageFilename);
  wbaImageFilename.setText(BaseMessages.getString(PKG,"MailDialog.ImageFilenameAdd.Button"));
  wbaImageFilename.setToolTipText(BaseMessages.getString(PKG,"MailDialog.ImageFilenameAdd.Tooltip"));
  fdbaImageFilename=new FormData();
  fdbaImageFilename.right=new FormAttachment(wbImageFilename,-margin);
  fdbaImageFilename.top=new FormAttachment(wStepname,margin);
  wbaImageFilename.setLayoutData(fdbaImageFilename);
  wImageFilename=new TextVar(transMeta,wembeddedComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wImageFilename);
  wImageFilename.addModifyListener(lsMod);
  fdImageFilename=new FormData();
  fdImageFilename.left=new FormAttachment(middle,0);
  fdImageFilename.top=new FormAttachment(wStepname,margin);
  fdImageFilename.right=new FormAttachment(wbaImageFilename,-margin);
  wImageFilename.setLayoutData(fdImageFilename);
  wImageFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wImageFilename.setToolTipText(transMeta.environmentSubstitute(wImageFilename.getText()));
    }
  }
);
  wbImageFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*png;*PNG","*jpeg;*jpg;*JPEG;*JPG","*gif;*GIF","*"});
      if (wImageFilename.getText() != null) {
        dialog.setFileName(transMeta.environmentSubstitute(wImageFilename.getText()));
      }
      dialog.setFilterNames(IMAGES_FILE_TYPES);
      if (dialog.open() != null) {
        wImageFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
        Random randomgen=new Random();
        wContentID.setText(Long.toString(Math.abs(randomgen.nextLong()),32));
      }
    }
  }
);
  wlContentID=new Label(wembeddedComp,SWT.RIGHT);
  wlContentID.setText(BaseMessages.getString(PKG,"MailDialog.ContentID.Label"));
  props.setLook(wlContentID);
  fdlContentID=new FormData();
  fdlContentID.left=new FormAttachment(0,0);
  fdlContentID.top=new FormAttachment(wImageFilename,margin);
  fdlContentID.right=new FormAttachment(middle,-margin);
  wlContentID.setLayoutData(fdlContentID);
  wContentID=new TextVar(transMeta,wembeddedComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"MailDialog.ContentID.Tooltip"));
  props.setLook(wContentID);
  wContentID.addModifyListener(lsMod);
  fdContentID=new FormData();
  fdContentID.left=new FormAttachment(middle,0);
  fdContentID.top=new FormAttachment(wImageFilename,margin);
  fdContentID.right=new FormAttachment(wbaImageFilename,-margin);
  wContentID.setLayoutData(fdContentID);
  wbdImageFilename=new Button(wembeddedComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdImageFilename);
  wbdImageFilename.setText(BaseMessages.getString(PKG,"MailDialog.ImageFilenameDelete.Button"));
  wbdImageFilename.setToolTipText(BaseMessages.getString(PKG,"MailDialog.ImageFilenameDelete.Tooltip"));
  fdbdImageFilename=new FormData();
  fdbdImageFilename.right=new FormAttachment(100,0);
  fdbdImageFilename.top=new FormAttachment(wContentID,40);
  wbdImageFilename.setLayoutData(fdbdImageFilename);
  wbeImageFilename=new Button(wembeddedComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeImageFilename);
  wbeImageFilename.setText(BaseMessages.getString(PKG,"MailDialog.ImageFilenameEdit.Button"));
  wbeImageFilename.setToolTipText(BaseMessages.getString(PKG,"MailDialog.ImageFilenameEdit.Tooltip"));
  fdbeImageFilename=new FormData();
  fdbeImageFilename.right=new FormAttachment(100,0);
  fdbeImageFilename.left=new FormAttachment(wbdImageFilename,0,SWT.LEFT);
  fdbeImageFilename.top=new FormAttachment(wbdImageFilename,margin);
  wbeImageFilename.setLayoutData(fdbeImageFilename);
  wlFields=new Label(wembeddedComp,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"MailDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wContentID,margin);
  wlFields.setLayoutData(fdlFields);
  int rows=input.getEmbeddedImages() == null ? 1 : (input.getEmbeddedImages().length == 0 ? 0 : input.getEmbeddedImages().length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"MailDialog.Fields.Image.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"MailDialog.Fields.ContentID.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(BaseMessages.getString(PKG,"MailDialog.Fields.Image.Tooltip"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(BaseMessages.getString(PKG,"MailDialog.Fields.ContentID.Tooltip"));
  wFields=new TableView(transMeta,wembeddedComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wbeImageFilename,-margin);
  fdFields.bottom=new FormAttachment(100,-margin);
  wFields.setLayoutData(fdFields);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFields.add(new String[]{wImageFilename.getText(),wContentID.getText()});
      wImageFilename.setText("");
      wContentID.setText("");
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
;
  wbaImageFilename.addSelectionListener(selA);
  wImageFilename.addSelectionListener(selA);
  wbdImageFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int[] idx=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wbeImageFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFields.getSelectionIndex();
      if (idx >= 0) {
        String[] string=wFields.getItem(idx);
        wImageFilename.setText(string[0]);
        wContentID.setText(string[1]);
        wFields.remove(idx);
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  fdembeddedComp=new FormData();
  fdembeddedComp.left=new FormAttachment(0,0);
  fdembeddedComp.top=new FormAttachment(0,0);
  fdembeddedComp.right=new FormAttachment(100,0);
  fdembeddedComp.bottom=new FormAttachment(100,0);
  wembeddedComp.setLayoutData(wembeddedComp);
  wembeddedComp.layout();
  wembeddedTab.setControl(wembeddedComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  ActiveisFileDynamic();
  SetEnabledEncoding();
  activeUsePriority();
  setDynamicZip();
  setZip();
  setUseAuth();
  activeISAttachContentField();
  input.setChanged(changed);
  wTabFolder.setSelection(0);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
