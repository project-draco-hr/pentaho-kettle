{
  Shell parent=getParent();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  Button helpButton=JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobCopyFiles.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.LEFT);
  wlName.setText(BaseMessages.getString(PKG,"JobCopyFiles.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(0,0);
  fdName.top=new FormAttachment(wlName,margin);
  fdName.right=new FormAttachment(40,0);
  wName.setLayoutData(fdName);
  Label wlIcon=new Label(shell,SWT.RIGHT);
  wlIcon.setImage(getImage());
  props.setLook(wlIcon);
  FormData fdlIcon=new FormData();
  fdlIcon.top=new FormAttachment(0,margin * 3);
  fdlIcon.right=new FormAttachment(100,-margin);
  wlIcon.setLayoutData(fdlIcon);
  Label lTopSeparator=new Label(shell,SWT.HORIZONTAL | SWT.SEPARATOR);
  FormData fdTopSeparator=new FormData();
  fdTopSeparator.top=new FormAttachment(wName,margin * 3);
  fdTopSeparator.left=new FormAttachment(0,0);
  fdTopSeparator.right=new FormAttachment(100,0);
  lTopSeparator.setLayoutData(fdTopSeparator);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(lTopSeparator,margin * 3);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-60);
  wTabFolder.setLayoutData(fdTabFolder);
  wFilesTab=new CTabItem(wTabFolder,SWT.NONE);
  wFilesTab.setText(BaseMessages.getString(PKG,"JobCopyFiles.Tab.Files.Label"));
  wFilesComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFilesComp);
  FormLayout filesLayout=new FormLayout();
  filesLayout.marginWidth=3;
  filesLayout.marginHeight=3;
  wFilesComp.setLayout(filesLayout);
  fdFilesComp=new FormData();
  fdFilesComp.left=new FormAttachment(0,0);
  fdFilesComp.top=new FormAttachment(0,0);
  fdFilesComp.right=new FormAttachment(100,0);
  fdFilesComp.bottom=new FormAttachment(100,0);
  wFilesComp.setLayoutData(fdFilesComp);
  wFilesComp.layout();
  wFilesTab.setControl(wFilesComp);
  wSettingsTab=new CTabItem(wTabFolder,SWT.NONE);
  wSettingsTab.setText(BaseMessages.getString(PKG,"JobCopyFiles.Settings.Label"));
  wSettingsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wSettingsComp);
  FormLayout settingsLayout=new FormLayout();
  settingsLayout.marginWidth=3;
  settingsLayout.marginHeight=3;
  wSettingsComp.setLayout(settingsLayout);
  wlIncludeSubfolders=new Label(wSettingsComp,SWT.RIGHT);
  wlIncludeSubfolders.setText(BaseMessages.getString(PKG,"JobCopyFiles.IncludeSubfolders.Label"));
  props.setLook(wlIncludeSubfolders);
  fdlIncludeSubfolders=new FormData();
  fdlIncludeSubfolders.left=new FormAttachment(0,0);
  fdlIncludeSubfolders.top=new FormAttachment(wName,margin);
  fdlIncludeSubfolders.right=new FormAttachment(middle,-margin);
  wlIncludeSubfolders.setLayoutData(fdlIncludeSubfolders);
  wIncludeSubfolders=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wIncludeSubfolders);
  wIncludeSubfolders.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.IncludeSubfolders.Tooltip"));
  fdIncludeSubfolders=new FormData();
  fdIncludeSubfolders.left=new FormAttachment(middle,0);
  fdIncludeSubfolders.top=new FormAttachment(wName,margin);
  fdIncludeSubfolders.right=new FormAttachment(100,0);
  wIncludeSubfolders.setLayoutData(fdIncludeSubfolders);
  wIncludeSubfolders.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
      CheckIncludeSubFolders();
    }
  }
);
  wlDestinationIsAFile=new Label(wSettingsComp,SWT.RIGHT);
  wlDestinationIsAFile.setText(BaseMessages.getString(PKG,"JobCopyFiles.DestinationIsAFile.Label"));
  props.setLook(wlDestinationIsAFile);
  fdlDestinationIsAFile=new FormData();
  fdlDestinationIsAFile.left=new FormAttachment(0,0);
  fdlDestinationIsAFile.top=new FormAttachment(wIncludeSubfolders,margin);
  fdlDestinationIsAFile.right=new FormAttachment(middle,-margin);
  wlDestinationIsAFile.setLayoutData(fdlDestinationIsAFile);
  wDestinationIsAFile=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wDestinationIsAFile);
  wDestinationIsAFile.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.DestinationIsAFile.Tooltip"));
  fdDestinationIsAFile=new FormData();
  fdDestinationIsAFile.left=new FormAttachment(middle,0);
  fdDestinationIsAFile.top=new FormAttachment(wIncludeSubfolders,margin);
  fdDestinationIsAFile.right=new FormAttachment(100,0);
  wDestinationIsAFile.setLayoutData(fdDestinationIsAFile);
  wDestinationIsAFile.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlCopyEmptyFolders=new Label(wSettingsComp,SWT.RIGHT);
  wlCopyEmptyFolders.setText(BaseMessages.getString(PKG,"JobCopyFiles.CopyEmptyFolders.Label"));
  props.setLook(wlCopyEmptyFolders);
  fdlCopyEmptyFolders=new FormData();
  fdlCopyEmptyFolders.left=new FormAttachment(0,0);
  fdlCopyEmptyFolders.top=new FormAttachment(wDestinationIsAFile,margin);
  fdlCopyEmptyFolders.right=new FormAttachment(middle,-margin);
  wlCopyEmptyFolders.setLayoutData(fdlCopyEmptyFolders);
  wCopyEmptyFolders=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wCopyEmptyFolders);
  wCopyEmptyFolders.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.CopyEmptyFolders.Tooltip"));
  fdCopyEmptyFolders=new FormData();
  fdCopyEmptyFolders.left=new FormAttachment(middle,0);
  fdCopyEmptyFolders.top=new FormAttachment(wDestinationIsAFile,margin);
  fdCopyEmptyFolders.right=new FormAttachment(100,0);
  wCopyEmptyFolders.setLayoutData(fdCopyEmptyFolders);
  wCopyEmptyFolders.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlCreateDestinationFolder=new Label(wSettingsComp,SWT.RIGHT);
  wlCreateDestinationFolder.setText(BaseMessages.getString(PKG,"JobCopyFiles.CreateDestinationFolder.Label"));
  props.setLook(wlCreateDestinationFolder);
  fdlCreateDestinationFolder=new FormData();
  fdlCreateDestinationFolder.left=new FormAttachment(0,0);
  fdlCreateDestinationFolder.top=new FormAttachment(wCopyEmptyFolders,margin);
  fdlCreateDestinationFolder.right=new FormAttachment(middle,-margin);
  wlCreateDestinationFolder.setLayoutData(fdlCreateDestinationFolder);
  wCreateDestinationFolder=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wCreateDestinationFolder);
  wCreateDestinationFolder.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.CreateDestinationFolder.Tooltip"));
  fdCreateDestinationFolder=new FormData();
  fdCreateDestinationFolder.left=new FormAttachment(middle,0);
  fdCreateDestinationFolder.top=new FormAttachment(wCopyEmptyFolders,margin);
  fdCreateDestinationFolder.right=new FormAttachment(100,0);
  wCreateDestinationFolder.setLayoutData(fdCreateDestinationFolder);
  wCreateDestinationFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlOverwriteFiles=new Label(wSettingsComp,SWT.RIGHT);
  wlOverwriteFiles.setText(BaseMessages.getString(PKG,"JobCopyFiles.OverwriteFiles.Label"));
  props.setLook(wlOverwriteFiles);
  fdlOverwriteFiles=new FormData();
  fdlOverwriteFiles.left=new FormAttachment(0,0);
  fdlOverwriteFiles.top=new FormAttachment(wCreateDestinationFolder,margin);
  fdlOverwriteFiles.right=new FormAttachment(middle,-margin);
  wlOverwriteFiles.setLayoutData(fdlOverwriteFiles);
  wOverwriteFiles=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wOverwriteFiles);
  wOverwriteFiles.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.OverwriteFiles.Tooltip"));
  fdOverwriteFiles=new FormData();
  fdOverwriteFiles.left=new FormAttachment(middle,0);
  fdOverwriteFiles.top=new FormAttachment(wCreateDestinationFolder,margin);
  fdOverwriteFiles.right=new FormAttachment(100,0);
  wOverwriteFiles.setLayoutData(fdOverwriteFiles);
  wOverwriteFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlRemoveSourceFiles=new Label(wSettingsComp,SWT.RIGHT);
  wlRemoveSourceFiles.setText(BaseMessages.getString(PKG,"JobCopyFiles.RemoveSourceFiles.Label"));
  props.setLook(wlRemoveSourceFiles);
  fdlRemoveSourceFiles=new FormData();
  fdlRemoveSourceFiles.left=new FormAttachment(0,0);
  fdlRemoveSourceFiles.top=new FormAttachment(wOverwriteFiles,margin);
  fdlRemoveSourceFiles.right=new FormAttachment(middle,-margin);
  wlRemoveSourceFiles.setLayoutData(fdlRemoveSourceFiles);
  wRemoveSourceFiles=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wRemoveSourceFiles);
  wRemoveSourceFiles.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.RemoveSourceFiles.Tooltip"));
  fdRemoveSourceFiles=new FormData();
  fdRemoveSourceFiles.left=new FormAttachment(middle,0);
  fdRemoveSourceFiles.top=new FormAttachment(wOverwriteFiles,margin);
  fdRemoveSourceFiles.right=new FormAttachment(100,0);
  wRemoveSourceFiles.setLayoutData(fdRemoveSourceFiles);
  wRemoveSourceFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlPrevious=new Label(wSettingsComp,SWT.RIGHT);
  wlPrevious.setText(BaseMessages.getString(PKG,"JobCopyFiles.Previous.Label"));
  props.setLook(wlPrevious);
  fdlPrevious=new FormData();
  fdlPrevious.left=new FormAttachment(0,0);
  fdlPrevious.top=new FormAttachment(wRemoveSourceFiles,margin);
  fdlPrevious.right=new FormAttachment(middle,-margin);
  wlPrevious.setLayoutData(fdlPrevious);
  wPrevious=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wPrevious);
  wPrevious.setSelection(jobEntry.arg_from_previous);
  wPrevious.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.Previous.Tooltip"));
  fdPrevious=new FormData();
  fdPrevious.left=new FormAttachment(middle,0);
  fdPrevious.top=new FormAttachment(wRemoveSourceFiles,margin);
  fdPrevious.right=new FormAttachment(100,0);
  wPrevious.setLayoutData(fdPrevious);
  wPrevious.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      refreshArgFromPrevious();
    }
  }
);
  wlAddFileToResult=new Label(wSettingsComp,SWT.RIGHT);
  wlAddFileToResult.setText(BaseMessages.getString(PKG,"JobCopyFiles.AddFileToResult.Label"));
  props.setLook(wlAddFileToResult);
  fdlAddFileToResult=new FormData();
  fdlAddFileToResult.left=new FormAttachment(0,0);
  fdlAddFileToResult.top=new FormAttachment(wPrevious,margin);
  fdlAddFileToResult.right=new FormAttachment(middle,-margin);
  wlAddFileToResult.setLayoutData(fdlAddFileToResult);
  wAddFileToResult=new Button(wSettingsComp,SWT.CHECK);
  props.setLook(wAddFileToResult);
  wAddFileToResult.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.AddFileToResult.Tooltip"));
  fdAddFileToResult=new FormData();
  fdAddFileToResult.left=new FormAttachment(middle,0);
  fdAddFileToResult.top=new FormAttachment(wPrevious,margin);
  fdAddFileToResult.right=new FormAttachment(100,0);
  wAddFileToResult.setLayoutData(fdAddFileToResult);
  wAddFileToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdSettingsComp=new FormData();
  fdSettingsComp.left=new FormAttachment(0,0);
  fdSettingsComp.top=new FormAttachment(0,0);
  fdSettingsComp.right=new FormAttachment(100,0);
  fdSettingsComp.bottom=new FormAttachment(100,0);
  wSettingsComp.setLayoutData(fdSettingsComp);
  wSettingsComp.layout();
  wSettingsTab.setControl(wSettingsComp);
  props.setLook(wSettingsComp);
  ToolBar tb=new ToolBar(wFilesComp,SWT.HORIZONTAL | SWT.FLAT);
  props.setLook(tb);
  FormData fdTb=new FormData();
  fdTb.right=new FormAttachment(100,0);
  fdTb.top=new FormAttachment(wFilesComp,margin);
  tb.setLayoutData(fdTb);
  deleteToolItem=new ToolItem(tb,SWT.PUSH);
  deleteToolItem.setImage(GUIResource.getInstance().getImageDelete());
  deleteToolItem.setToolTipText(BaseMessages.getString(PKG,"JobCopyFiles.FilenameDelete.Tooltip"));
  deleteToolItem.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int[] idx=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wlFields=new Label(wFilesComp,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"JobCopyFiles.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,margin);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wFilesComp,15);
  wlFields.setLayoutData(fdlFields);
  int rows=jobEntry.source_filefolder == null ? 1 : (jobEntry.source_filefolder.length == 0 ? 0 : jobEntry.source_filefolder.length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"JobCopyFiles.Fields.SourceEnvironment.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,false,true),new ColumnInfo(BaseMessages.getString(PKG,"JobCopyFiles.Fields.SourceFileFolder.Label"),ColumnInfo.COLUMN_TYPE_TEXT_BUTTON,false),new ColumnInfo(BaseMessages.getString(PKG,"JobCopyFiles.Fields.Wildcard.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"JobCopyFiles.Fields.DestinationEnvironment.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,false,true),new ColumnInfo(BaseMessages.getString(PKG,"JobCopyFiles.Fields.DestinationFileFolder.Label"),ColumnInfo.COLUMN_TYPE_TEXT_BUTTON,false)};
  setComboValues(colinf[0]);
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(BaseMessages.getString(PKG,"JobCopyFiles.Fields.SourceFileFolder.Tooltip"));
  colinf[1].setTextVarButtonSelectionListener(getFileSelectionAdapter());
  colinf[2].setUsingVariables(true);
  colinf[2].setToolTip(BaseMessages.getString(PKG,"JobCopyFiles.Fields.Wildcard.Tooltip"));
  setComboValues(colinf[3]);
  colinf[4].setUsingVariables(true);
  colinf[4].setToolTip(BaseMessages.getString(PKG,"JobCopyFiles.Fields.DestinationFileFolder.Tooltip"));
  colinf[4].setTextVarButtonSelectionListener(getFileSelectionAdapter());
  wFields=new TableView(jobMeta,wFilesComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,margin);
  fdFields.top=new FormAttachment(tb,margin);
  fdFields.right=new FormAttachment(100,-margin);
  fdFields.bottom=new FormAttachment(100,-margin);
  wFields.setLayoutData(fdFields);
  refreshArgFromPrevious();
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  Label lBottomSeparator=new Label(shell,SWT.HORIZONTAL | SWT.SEPARATOR);
  FormData fdBottomSeparator=new FormData();
  fdBottomSeparator.top=new FormAttachment(wTabFolder,margin * 3);
  fdBottomSeparator.left=new FormAttachment(0,0);
  fdBottomSeparator.right=new FormAttachment(100,0);
  lBottomSeparator.setLayoutData(fdBottomSeparator);
  BaseStepDialog.positionBottomRightButtons(shell,new Button[]{wOK,wCancel},margin,lBottomSeparator);
  FormData fdOK=(FormData)wOK.getLayoutData();
  FormData fdHelpButton=new FormData();
  fdHelpButton.top=fdOK.top;
  fdHelpButton.left=new FormAttachment(0,margin);
  helpButton.setLayoutData(fdHelpButton);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  CheckIncludeSubFolders();
  wTabFolder.setSelection(0);
}
