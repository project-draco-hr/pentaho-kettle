{
  Result result=previousResult;
  if (connection != null) {
    Database db=new Database(this,connection);
    FileObject SQLfile=null;
    db.shareVariablesWith(this);
    try {
      String mySQL=null;
      db.connect();
      if (sqlfromfile) {
        if (sqlfilename == null)         throw new KettleDatabaseException(BaseMessages.getString(PKG,"JobSQL.NoSQLFileSpecified"));
        try {
          String realfilename=environmentSubstitute(sqlfilename);
          SQLfile=KettleVFS.getFileObject(realfilename);
          if (!SQLfile.exists()) {
            log.logError(toString(),BaseMessages.getString(PKG,"JobSQL.SQLFileNotExist",realfilename));
            throw new KettleDatabaseException(BaseMessages.getString(PKG,"JobSQL.SQLFileNotExist",realfilename));
          }
          if (log.isDetailed())           log.logDetailed(toString(),BaseMessages.getString(PKG,"JobSQL.SQLFileExists",realfilename));
          InputStream IS=KettleVFS.getInputStream(SQLfile);
          InputStreamReader BIS=new InputStreamReader(new BufferedInputStream(IS,500));
          StringBuffer lineStringBuffer=new StringBuffer(256);
          lineStringBuffer.setLength(0);
          BufferedReader buff=new BufferedReader(BIS);
          String sLine=null;
          mySQL=Const.CR;
          ;
          while ((sLine=buff.readLine()) != null) {
            if (Const.isEmpty(sLine)) {
              mySQL=mySQL + Const.CR;
            }
 else {
              mySQL=mySQL + Const.CR + sLine;
            }
          }
        }
 catch (        Exception e) {
          throw new KettleDatabaseException(BaseMessages.getString(PKG,"JobSQL.ErrorRunningSQLfromFile"),e);
        }
      }
 else {
        mySQL=sql;
      }
      if (!Const.isEmpty(mySQL)) {
        if (useVariableSubstitution)         mySQL=environmentSubstitute(mySQL);
        if (log.isDetailed())         log.logDetailed(toString(),BaseMessages.getString(PKG,"JobSQL.Log.SQlStatement",mySQL));
        if (sendOneStatement)         db.execStatement(mySQL);
 else         db.execStatements(mySQL);
      }
    }
 catch (    KettleDatabaseException je) {
      result.setNrErrors(1);
      log.logError(toString(),BaseMessages.getString(PKG,"JobSQL.ErrorRunJobEntry",je.getMessage()));
    }
 finally {
      db.disconnect();
      if (SQLfile != null) {
        try {
          SQLfile.close();
        }
 catch (        Exception e) {
        }
      }
    }
  }
 else {
    result.setNrErrors(1);
    log.logError(toString(),BaseMessages.getString(PKG,"JobSQL.NoDatabaseConnection"));
  }
  if (result.getNrErrors() == 0) {
    result.setResult(true);
  }
 else {
    result.setResult(false);
  }
  return result;
}
