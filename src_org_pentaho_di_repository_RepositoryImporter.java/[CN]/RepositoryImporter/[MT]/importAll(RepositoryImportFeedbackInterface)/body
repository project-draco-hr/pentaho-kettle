{
  feedback.setLabel(BaseMessages.getString(PKG,"RepositoryImporter.ImportXML.Label"));
  try {
    loadSharedObjects();
    RepositoryImportLocation.setRepositoryImportLocation(baseDirectory);
    for (int ii=0; ii < filenames.length; ++ii) {
      final String filename=((fileDirectory != null) && (fileDirectory.length() > 0)) ? fileDirectory + Const.FILE_SEPARATOR + filenames[ii] : filenames[ii];
      if (log.isBasic())       log.logBasic("Import objects from XML file [" + filename + "]");
      feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.WhichFile.Log",filename));
      feedback.setLabel(BaseMessages.getString(PKG,"RepositoryImporter.WhichDir.Label"));
      try {
        RepositoryExportSaxParser parser=new RepositoryExportSaxParser(filename,feedback);
        parser.parse(this);
      }
 catch (      Exception e) {
        feedback.showError(BaseMessages.getString(PKG,"RepositoryImporter.ErrorGeneral.Title"),BaseMessages.getString(PKG,"RepositoryImporter.ErrorGeneral.Message"),e);
      }
    }
    feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.ImportFinished.Log"));
  }
 catch (  KettleException e) {
    feedback.showError(BaseMessages.getString(PKG,"RepositoryImporter.ErrorGeneral.Title"),BaseMessages.getString(PKG,"RepositoryImporter.ErrorGeneral.Message"),e);
  }
 finally {
    RepositoryImportLocation.setRepositoryImportLocation(null);
  }
}
