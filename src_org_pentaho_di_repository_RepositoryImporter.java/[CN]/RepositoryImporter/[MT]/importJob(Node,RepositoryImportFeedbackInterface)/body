{
  JobMeta jobMeta=new JobMeta(jobnode,rep,false,SpoonFactory.getInstance());
  replaceSharedObjects(jobMeta);
  feedback.setLabel(BaseMessages.getString(PKG,"RepositoryImporter.ImportJob.Label",Integer.toString(jobNumber),jobMeta.getName()));
  validateImportedElement(importRules,jobMeta);
  String directoryPath=Const.NVL(XMLHandler.getTagValue(jobnode,"directory"),Const.FILE_SEPARATOR);
  if (jobDirOverride != null) {
    directoryPath=jobDirOverride;
  }
  if (directoryPath.startsWith("/")) {
    directoryPath=directoryPath.substring(1);
  }
  if (limitDirs.size() > 0 && Const.indexOfString(directoryPath,limitDirs) < 0) {
    feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.SkippedJobNotPartOfLimitingDirectories.Log",jobMeta.getName()));
    return true;
  }
  RepositoryDirectoryInterface targetDirectory=getTargetDirectory(directoryPath,jobDirOverride,feedback);
  ObjectId existintId=rep.getJobId(jobMeta.getName(),targetDirectory);
  if (existintId != null && askOverwrite) {
    overwrite=feedback.jobOverwritePrompt(jobMeta);
  }
 else {
    updateDisplay();
  }
  if (existintId == null || overwrite) {
    jobMeta.setRepositoryDirectory(targetDirectory);
    jobMeta.setObjectId(existintId);
    patchJobEntries(jobMeta);
    try {
      if (jobMeta.getCreatedUser() == null || jobMeta.getCreatedUser().equals("-")) {
        jobMeta.setCreatedDate(new Date());
        if (rep.getUserInfo() != null) {
          jobMeta.setCreatedUser(rep.getUserInfo().getLogin());
        }
 else {
          jobMeta.setCreatedUser(null);
        }
      }
      rep.save(jobMeta,versionComment,null,overwrite);
      if (jobMeta.hasRepositoryReferences()) {
        referencingObjects.add(new RepositoryObject(jobMeta.getObjectId(),jobMeta.getName(),jobMeta.getRepositoryDirectory(),null,null,RepositoryObjectType.JOB,null,false));
      }
      feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.JobSaved.Log",Integer.toString(jobNumber),jobMeta.getName()));
    }
 catch (    Exception e) {
      feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.ErrorSavingJob.Log",Integer.toString(jobNumber),jobMeta.getName(),Const.getStackTracker(e)));
      if (!feedback.askContinueOnErrorQuestion(BaseMessages.getString(PKG,"RepositoryImporter.DoYouWantToContinue.Title"),BaseMessages.getString(PKG,"RepositoryImporter.DoYouWantToContinue.Message"))) {
        return false;
      }
    }
  }
 else {
    feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.SkippedExistingJob.Log",jobMeta.getName()));
  }
  return true;
}
