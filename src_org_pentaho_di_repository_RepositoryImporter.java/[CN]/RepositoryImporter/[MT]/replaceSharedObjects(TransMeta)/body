{
  for (  SharedObjectInterface sharedObject : sharedObjects.getObjectsMap().values()) {
    if (sharedObject instanceof DatabaseMeta) {
      DatabaseMeta databaseMeta=(DatabaseMeta)sharedObject;
      int index=transMeta.indexOfDatabase(databaseMeta);
      if (index < 0) {
        transMeta.addDatabase(databaseMeta);
      }
 else {
        DatabaseMeta existing=transMeta.getDatabase(index);
        existing.replaceMeta(databaseMeta);
        existing.setObjectId(databaseMeta.getObjectId());
      }
    }
    if (sharedObject instanceof SlaveServer) {
      SlaveServer slaveServer=(SlaveServer)sharedObject;
      int index=transMeta.getSlaveServers().indexOf(slaveServer);
      if (index < 0) {
        transMeta.getSlaveServers().add(slaveServer);
      }
 else {
        SlaveServer existing=transMeta.getSlaveServers().get(index);
        existing.replaceMeta(slaveServer);
        existing.setObjectId(slaveServer.getObjectId());
      }
    }
    if (sharedObject instanceof ClusterSchema) {
      ClusterSchema clusterSchema=(ClusterSchema)sharedObject;
      int index=transMeta.getClusterSchemas().indexOf(clusterSchema);
      if (index < 0) {
        transMeta.getClusterSchemas().add(clusterSchema);
      }
 else {
        ClusterSchema existing=transMeta.getClusterSchemas().get(index);
        existing.replaceMeta(clusterSchema);
        existing.setObjectId(clusterSchema.getObjectId());
      }
    }
    if (sharedObject instanceof PartitionSchema) {
      PartitionSchema partitionSchema=(PartitionSchema)sharedObject;
      int index=transMeta.getPartitionSchemas().indexOf(partitionSchema);
      if (index < 0) {
        transMeta.getPartitionSchemas().add(partitionSchema);
      }
 else {
        PartitionSchema existing=transMeta.getPartitionSchemas().get(index);
        existing.replaceMeta(partitionSchema);
        existing.setObjectId(partitionSchema.getObjectId());
      }
    }
  }
}
