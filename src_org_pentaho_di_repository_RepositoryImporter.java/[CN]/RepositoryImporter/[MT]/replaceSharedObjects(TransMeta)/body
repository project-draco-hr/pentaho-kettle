{
  for (  SharedObjectInterface sharedObject : sharedObjects.getObjectsMap().values()) {
    if (sharedObject instanceof DatabaseMeta) {
      DatabaseMeta databaseMeta=(DatabaseMeta)sharedObject;
      int index=transMeta.indexOfDatabase(databaseMeta);
      if (index < 0) {
        transMeta.addDatabase(databaseMeta);
      }
 else {
        DatabaseMeta imported=transMeta.getDatabase(index);
        if (overwrite) {
          imported.setObjectId(databaseMeta.getObjectId());
          imported.setChanged();
        }
 else {
          imported.replaceMeta(databaseMeta);
          imported.setChanged(false);
        }
      }
    }
    if (sharedObject instanceof SlaveServer) {
      SlaveServer slaveServer=(SlaveServer)sharedObject;
      int index=transMeta.getSlaveServers().indexOf(slaveServer);
      if (index < 0) {
        transMeta.getSlaveServers().add(slaveServer);
      }
 else {
        SlaveServer imported=transMeta.getSlaveServers().get(index);
        if (overwrite) {
          imported.setObjectId(slaveServer.getObjectId());
          imported.setChanged();
        }
 else {
          imported.replaceMeta(slaveServer);
          imported.setChanged(false);
        }
      }
    }
    if (sharedObject instanceof ClusterSchema) {
      ClusterSchema clusterSchema=(ClusterSchema)sharedObject;
      int index=transMeta.getClusterSchemas().indexOf(clusterSchema);
      if (index < 0) {
        transMeta.getClusterSchemas().add(clusterSchema);
      }
 else {
        ClusterSchema imported=transMeta.getClusterSchemas().get(index);
        if (overwrite) {
          imported.setObjectId(clusterSchema.getObjectId());
          imported.setChanged();
        }
 else {
          imported.replaceMeta(clusterSchema);
          imported.setChanged(false);
        }
      }
    }
    if (sharedObject instanceof PartitionSchema) {
      PartitionSchema partitionSchema=(PartitionSchema)sharedObject;
      int index=transMeta.getPartitionSchemas().indexOf(partitionSchema);
      if (index < 0) {
        transMeta.getPartitionSchemas().add(partitionSchema);
      }
 else {
        PartitionSchema imported=transMeta.getPartitionSchemas().get(index);
        if (overwrite) {
          imported.setObjectId(partitionSchema.getObjectId());
          imported.setChanged();
        }
 else {
          imported.replaceMeta(partitionSchema);
          imported.setChanged(false);
        }
      }
    }
  }
}
