{
  meta=(AddSequenceMeta)smi;
  data=(AddSequenceData)sdi;
  if (super.init(smi,sdi)) {
    if (meta.isDatabaseUsed()) {
      Database db=new Database(meta.getDatabase());
      db.shareVariablesWith(this);
      data.setDb(db);
      try {
        data.getDb().connect(getPartitionID());
        logBasic(Messages.getString("AddSequence.Log.ConnectedDB"));
        return true;
      }
 catch (      KettleDatabaseException dbe) {
        logError(Messages.getString("AddSequence.Log.CouldNotConnectToDB") + dbe.getMessage());
      }
    }
 else     if (meta.isCounterUsed()) {
      if (!Const.isEmpty(meta.getCounterName())) {
        data.setLookup("@@sequence:" + meta.getCounterName());
      }
 else {
        data.setLookup("@@sequence:" + meta.getValuename());
      }
      if (getTransMeta().getCounters() != null) {
synchronized (getTransMeta().getCounters()) {
          data.counter=getTransMeta().getCounters().get(data.getLookup());
          if (data.counter == null) {
            data.counter=new Counter(meta.getStartAt(),meta.getIncrementBy(),meta.getMaxValue());
            getTransMeta().getCounters().put(data.getLookup(),data.counter);
          }
 else {
            if ((data.counter.getStart() != meta.getStartAt()) || (data.counter.getIncrement() != meta.getIncrementBy()) || (data.counter.getMaximum() != meta.getMaxValue())) {
              logError(Messages.getString("AddSequence.Log.CountersWithDifferentCharacteristics",data.getLookup()));
              return false;
            }
          }
        }
        return true;
      }
 else {
        logError(Messages.getString("AddSequence.Log.TransformationCountersHashtableNotAllocated"));
      }
    }
 else {
      logError(Messages.getString("AddSequence.Log.NeedToSelectSequence"));
    }
  }
  return false;
}
