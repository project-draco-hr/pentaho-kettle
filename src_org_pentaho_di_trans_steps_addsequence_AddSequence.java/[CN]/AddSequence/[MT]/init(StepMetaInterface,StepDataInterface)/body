{
  meta=(AddSequenceMeta)smi;
  data=(AddSequenceData)sdi;
  if (super.init(smi,sdi)) {
    if (meta.isDatabaseUsed()) {
      Database db=new Database(meta.getDatabase());
      db.shareVariablesWith(this);
      data.setDb(db);
      try {
        if (getTransMeta().isUsingUniqueConnections()) {
synchronized (getTrans()) {
            data.getDb().connect(getTrans().getThreadName(),getPartitionID());
          }
        }
 else {
          data.getDb().connect(getPartitionID());
        }
        if (log.isDetailed())         logDetailed(Messages.getString("AddSequence.Log.ConnectedDB"));
        return true;
      }
 catch (      KettleDatabaseException dbe) {
        logError(Messages.getString("AddSequence.Log.CouldNotConnectToDB") + dbe.getMessage());
      }
    }
 else     if (meta.isCounterUsed()) {
      boolean doAbort=false;
      try {
        data.start=Long.parseLong(environmentSubstitute(meta.getStartAt()));
      }
 catch (      NumberFormatException ex) {
        logError(Messages.getString("AddSequence.Log.CouldNotParseCounterValue","start",meta.getStartAt(),environmentSubstitute(meta.getStartAt()),ex.getMessage()));
        doAbort=true;
      }
      try {
        data.increment=Long.parseLong(environmentSubstitute(meta.getIncrementBy()));
      }
 catch (      NumberFormatException ex) {
        logError(Messages.getString("AddSequence.Log.CouldNotParseCounterValue","increment",meta.getIncrementBy(),environmentSubstitute(meta.getIncrementBy()),ex.getMessage()));
        doAbort=true;
      }
      try {
        data.maximum=Long.parseLong(environmentSubstitute(meta.getMaxValue()));
      }
 catch (      NumberFormatException ex) {
        logError(Messages.getString("AddSequence.Log.CouldNotParseCounterValue","increment",meta.getMaxValue(),environmentSubstitute(meta.getMaxValue()),ex.getMessage()));
        doAbort=true;
      }
      if (doAbort) {
        return false;
      }
      if (!Const.isEmpty(meta.getCounterName())) {
        data.setLookup("@@sequence:" + meta.getCounterName());
      }
 else {
        data.setLookup("@@sequence:" + meta.getValuename());
      }
      if (getTransMeta().getCounters() != null) {
synchronized (getTransMeta().getCounters()) {
          data.counter=getTransMeta().getCounters().get(data.getLookup());
          if (data.counter == null) {
            data.counter=new Counter(data.start,data.increment,data.maximum);
            getTransMeta().getCounters().put(data.getLookup(),data.counter);
          }
 else {
            if ((data.counter.getStart() != data.start) || (data.counter.getIncrement() != data.increment) || (data.counter.getMaximum() != data.maximum)) {
              logError(Messages.getString("AddSequence.Log.CountersWithDifferentCharacteristics",data.getLookup()));
              return false;
            }
          }
        }
        return true;
      }
 else {
        logError(Messages.getString("AddSequence.Log.TransformationCountersHashtableNotAllocated"));
      }
    }
 else {
      logError(Messages.getString("AddSequence.Log.NeedToSelectSequence"));
    }
  }
  return false;
}
