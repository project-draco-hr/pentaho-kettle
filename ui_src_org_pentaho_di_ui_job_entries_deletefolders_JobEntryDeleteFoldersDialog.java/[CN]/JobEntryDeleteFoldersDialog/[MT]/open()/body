{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobDeleteFolders.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobDeleteFolders.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wSettings=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSettings);
  wSettings.setText(BaseMessages.getString(PKG,"JobDeleteFolders.Settings.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wSettings.setLayout(groupLayout);
  wlPrevious=new Label(wSettings,SWT.RIGHT);
  wlPrevious.setText(BaseMessages.getString(PKG,"JobDeleteFolders.Previous.Label"));
  props.setLook(wlPrevious);
  fdlPrevious=new FormData();
  fdlPrevious.left=new FormAttachment(0,0);
  fdlPrevious.top=new FormAttachment(wName,margin);
  fdlPrevious.right=new FormAttachment(middle,-margin);
  wlPrevious.setLayoutData(fdlPrevious);
  wPrevious=new Button(wSettings,SWT.CHECK);
  props.setLook(wPrevious);
  wPrevious.setSelection(jobEntry.argFromPrevious);
  wPrevious.setToolTipText(BaseMessages.getString(PKG,"JobDeleteFolders.Previous.Tooltip"));
  fdPrevious=new FormData();
  fdPrevious.left=new FormAttachment(middle,0);
  fdPrevious.top=new FormAttachment(wName,margin);
  fdPrevious.right=new FormAttachment(100,0);
  wPrevious.setLayoutData(fdPrevious);
  wPrevious.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setPrevious();
      jobEntry.setChanged();
    }
  }
);
  fdSettings=new FormData();
  fdSettings.left=new FormAttachment(0,margin);
  fdSettings.top=new FormAttachment(wName,margin);
  fdSettings.right=new FormAttachment(100,-margin);
  wSettings.setLayoutData(fdSettings);
  wSuccessOn=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSuccessOn);
  wSuccessOn.setText(BaseMessages.getString(PKG,"JobDeleteFolders.SuccessOn.Group.Label"));
  FormLayout successongroupLayout=new FormLayout();
  successongroupLayout.marginWidth=10;
  successongroupLayout.marginHeight=10;
  wSuccessOn.setLayout(successongroupLayout);
  wlSuccessCondition=new Label(wSuccessOn,SWT.RIGHT);
  wlSuccessCondition.setText(BaseMessages.getString(PKG,"JobDeleteFolders.SuccessCondition.Label"));
  props.setLook(wlSuccessCondition);
  fdlSuccessCondition=new FormData();
  fdlSuccessCondition.left=new FormAttachment(0,0);
  fdlSuccessCondition.right=new FormAttachment(middle,-margin);
  fdlSuccessCondition.top=new FormAttachment(wSettings,margin);
  wlSuccessCondition.setLayoutData(fdlSuccessCondition);
  wSuccessCondition=new CCombo(wSuccessOn,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobDeleteFolders.SuccessWhenAllWorksFine.Label"));
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobDeleteFolders.SuccessWhenAtLeat.Label"));
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobDeleteFolders.SuccessWhenErrorsLessThan.Label"));
  wSuccessCondition.select(0);
  props.setLook(wSuccessCondition);
  fdSuccessCondition=new FormData();
  fdSuccessCondition.left=new FormAttachment(middle,0);
  fdSuccessCondition.top=new FormAttachment(wSettings,margin);
  fdSuccessCondition.right=new FormAttachment(100,0);
  wSuccessCondition.setLayoutData(fdSuccessCondition);
  wSuccessCondition.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeSuccessCondition();
    }
  }
);
  wlNrErrorsLessThan=new Label(wSuccessOn,SWT.RIGHT);
  wlNrErrorsLessThan.setText(BaseMessages.getString(PKG,"JobDeleteFolders.LimitFolders.Label"));
  props.setLook(wlNrErrorsLessThan);
  fdlNrErrorsLessThan=new FormData();
  fdlNrErrorsLessThan.left=new FormAttachment(0,0);
  fdlNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdlNrErrorsLessThan.right=new FormAttachment(middle,-margin);
  wlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);
  wLimitFolders=new TextVar(jobMeta,wSuccessOn,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobDeleteFolders.LimitFolders.Tooltip"));
  props.setLook(wLimitFolders);
  wLimitFolders.addModifyListener(lsMod);
  fdNrErrorsLessThan=new FormData();
  fdNrErrorsLessThan.left=new FormAttachment(middle,0);
  fdNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdNrErrorsLessThan.right=new FormAttachment(100,-margin);
  wLimitFolders.setLayoutData(fdNrErrorsLessThan);
  fdSuccessOn=new FormData();
  fdSuccessOn.left=new FormAttachment(0,margin);
  fdSuccessOn.top=new FormAttachment(wSettings,margin);
  fdSuccessOn.right=new FormAttachment(100,-margin);
  wSuccessOn.setLayoutData(fdSuccessOn);
  wlFilename=new Label(shell,SWT.RIGHT);
  wlFilename.setText(BaseMessages.getString(PKG,"JobDeleteFolders.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wSuccessOn,2 * margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbDirectory=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbDirectory);
  wbDirectory.setText(BaseMessages.getString(PKG,"JobDeleteFolders.BrowseFolders.Label"));
  fdbDirectory=new FormData();
  fdbDirectory.right=new FormAttachment(100,-margin);
  fdbDirectory.top=new FormAttachment(wSuccessOn,margin);
  wbDirectory.setLayoutData(fdbDirectory);
  wbDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wFilename.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wFilename.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wFilename.setText(dir);
      }
    }
  }
);
  wbaFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaFilename);
  wbaFilename.setText(BaseMessages.getString(PKG,"JobDeleteFolders.FilenameAdd.Button"));
  fdbaFilename=new FormData();
  fdbaFilename.right=new FormAttachment(wbDirectory,-margin);
  fdbaFilename.top=new FormAttachment(wSuccessOn,margin);
  wbaFilename.setLayoutData(fdbaFilename);
  wFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(wSuccessOn,2 * margin);
  fdFilename.right=new FormAttachment(wbDirectory,-55);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(jobMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbdFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdFilename);
  wbdFilename.setText(BaseMessages.getString(PKG,"JobDeleteFolders.FilenameDelete.Button"));
  wbdFilename.setToolTipText(BaseMessages.getString(PKG,"JobDeleteFolders.FilenameDelete.Tooltip"));
  fdbdFilename=new FormData();
  fdbdFilename.right=new FormAttachment(100,0);
  fdbdFilename.top=new FormAttachment(wFilename,40);
  wbdFilename.setLayoutData(fdbdFilename);
  wbeFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeFilename);
  wbeFilename.setText(BaseMessages.getString(PKG,"JobDeleteFolders.FilenameEdit.Button"));
  wbeFilename.setToolTipText(BaseMessages.getString(PKG,"JobDeleteFolders.FilenameEdit.Tooltip"));
  fdbeFilename=new FormData();
  fdbeFilename.right=new FormAttachment(100,0);
  fdbeFilename.left=new FormAttachment(wbdFilename,0,SWT.LEFT);
  fdbeFilename.top=new FormAttachment(wbdFilename,margin);
  wbeFilename.setLayoutData(fdbeFilename);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"JobDeleteFolders.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wFilename,margin);
  wlFields.setLayoutData(fdlFields);
  int rows=jobEntry.arguments == null ? 1 : (jobEntry.arguments.length == 0 ? 0 : jobEntry.arguments.length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"JobDeleteFolders.Fields.Argument.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(BaseMessages.getString(PKG,"JobDeleteFolders.Fields.Column"));
  wFields=new TableView(jobMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,-75);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wlFields.setEnabled(!jobEntry.argFromPrevious);
  wFields.setEnabled(!jobEntry.argFromPrevious);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFields.add(new String[]{wFilename.getText()});
      wFilename.setText("");
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
;
  wbaFilename.addSelectionListener(selA);
  wFilename.addSelectionListener(selA);
  wbdFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int[] idx=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wbeFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFields.getSelectionIndex();
      if (idx >= 0) {
        String[] string=wFields.getItem(idx);
        wFilename.setText(string[0]);
        wFields.remove(idx);
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wFields);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wFilename.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setPrevious();
  activeSuccessCondition();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
