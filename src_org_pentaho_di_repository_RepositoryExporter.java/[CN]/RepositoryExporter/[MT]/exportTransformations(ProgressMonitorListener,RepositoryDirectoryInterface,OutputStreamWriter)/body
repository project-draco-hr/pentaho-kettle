{
  try {
    if (monitor != null)     monitor.subTask("Exporting the transformations...");
    ObjectId dirids[]=dirTree.getDirectoryIDs();
    System.out.println("Going through " + dirids.length + " directories in directory ["+ dirTree.getPath()+ "]");
    boolean continueOnError=true;
    for (int d=0; d < dirids.length && (monitor == null || (monitor != null && !monitor.isCanceled())); d++) {
      RepositoryDirectoryInterface repdir=dirTree.findDirectory(dirids[d]);
      System.out.println("Directory ID #" + d + " : "+ dirids[d]+ " : "+ repdir);
      String trans[]=repository.getTransformationNames(dirids[d],false);
      for (int i=0; i < trans.length && (monitor == null || (monitor != null && !monitor.isCanceled())); i++) {
        try {
          TransMeta transMeta=repository.loadTransformation(trans[i],repdir,null,true,null);
          transMeta.setRepository(repository);
          System.out.println("Loading/Exporting transformation [" + repdir.getPath() + " : "+ trans[i]+ "]  ("+ transMeta.getRepositoryDirectory().getPath()+ ")");
          if (monitor != null)           monitor.subTask("Exporting transformation [" + trans[i] + "]");
          convertFromFileRepository(transMeta);
          try {
            RepositoryImporter.validateImportedElement(importRules,transMeta);
          }
 catch (          KettleException ve) {
            continueOnError=false;
            throw (ve);
          }
          writer.write(transMeta.getXML() + Const.CR);
        }
 catch (        KettleException ke) {
          if (continueOnError) {
            log.logError("An error occurred reading transformation [" + trans[i] + "] from directory ["+ repdir+ "] : ",ke);
          }
 else {
            throw ke;
          }
        }
      }
    }
    if (monitor != null)     monitor.worked(1);
  }
 catch (  Exception e) {
    throw new KettleException("Error while exporting repository transformations",e);
  }
}
