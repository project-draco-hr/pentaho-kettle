{
  boolean OK=true;
  transMeta.setReadStep(transMeta.findStep(wReadStep.getText()));
  transMeta.setWriteStep(transMeta.findStep(wWriteStep.getText()));
  transMeta.setInputStep(transMeta.findStep(wInputStep.getText()));
  transMeta.setOutputStep(transMeta.findStep(wOutputStep.getText()));
  transMeta.setUpdateStep(transMeta.findStep(wUpdateStep.getText()));
  transMeta.setRejectedStep(transMeta.findStep(wRejectedStep.getText()));
  transMeta.setLogConnection(transMeta.findDatabase(wLogconnection.getText()));
  transMeta.setLogTable(wLogtable.getText());
  transMeta.setStepPerformanceLogTable(wStepLogtable.getText());
  transMeta.setLogSizeLimit(wLogSizeLimit.getText());
  transMeta.setMaxDateConnection(transMeta.findDatabase(wMaxdateconnection.getText()));
  transMeta.setMaxDateTable(wMaxdatetable.getText());
  transMeta.setMaxDateField(wMaxdatefield.getText());
  transMeta.setBatchIdUsed(wBatch.getSelection());
  transMeta.setLogfieldUsed(wLogfield.getSelection());
  transMeta.setName(wTransname.getText());
  transMeta.setDescription(wTransdescription.getText());
  transMeta.setExtendedDescription(wExtendeddescription.getText());
  transMeta.setTransversion(wTransversion.getText());
  if (wTransstatus.getSelectionIndex() != 2) {
    transMeta.setTransstatus(wTransstatus.getSelectionIndex() + 1);
  }
 else {
    transMeta.setTransstatus(-1);
  }
  try {
    transMeta.setMaxDateOffset(Double.parseDouble(wMaxdateoffset.getText()));
  }
 catch (  Exception e) {
    MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
    mb.setText(Messages.getString("TransDialog.InvalidOffsetNumber.DialogTitle"));
    mb.setMessage(Messages.getString("TransDialog.InvalidOffsetNumber.DialogMessage"));
    mb.open();
    wMaxdateoffset.setFocus();
    wMaxdateoffset.selectAll();
    OK=false;
  }
  try {
    transMeta.setMaxDateDifference(Double.parseDouble(wMaxdatediff.getText()));
  }
 catch (  Exception e) {
    MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
    mb.setText(Messages.getString("TransDialog.InvalidDateDifferenceNumber.DialogTitle"));
    mb.setMessage(Messages.getString("TransDialog.InvalidDateDifferenceNumber.DialogMessage"));
    mb.open();
    wMaxdatediff.setFocus();
    wMaxdatediff.selectAll();
    OK=false;
  }
  transMeta.removeAllDependencies();
  int nrNonEmptyFields=wFields.nrNonEmpty();
  for (int i=0; i < nrNonEmptyFields; i++) {
    TableItem item=wFields.getNonEmpty(i);
    DatabaseMeta db=transMeta.findDatabase(item.getText(1));
    String tablename=item.getText(2);
    String fieldname=item.getText(3);
    TransDependency td=new TransDependency(db,tablename,fieldname);
    transMeta.addDependency(td);
  }
  transMeta.eraseParameters();
  nrNonEmptyFields=wParamFields.nrNonEmpty();
  for (int i=0; i < nrNonEmptyFields; i++) {
    TableItem item=wParamFields.getNonEmpty(i);
    try {
      transMeta.addParameterDefinition(item.getText(1),item.getText(2),item.getText(3));
    }
 catch (    DuplicateParamException e) {
      if (log.isDetailed())       log.logDetailed(getClass().getName(),"Duplicate parameter '" + item.getText(1) + "' detected.");
    }
  }
  transMeta.setSizeRowset(Const.toInt(wSizeRowset.getText(),Const.ROWS_IN_ROWSET));
  transMeta.setUsingUniqueConnections(wUniqueConnections.getSelection());
  transMeta.setFeedbackShown(wShowFeedback.getSelection());
  transMeta.setFeedbackSize(Const.toInt(wFeedbackSize.getText(),Const.ROWS_UPDATE));
  transMeta.setSharedObjectsFile(wSharedObjectsFile.getText());
  transMeta.setUsingThreadPriorityManagment(wManageThreads.getSelection());
  if (directoryChangeAllowed) {
    if (newDirectory != null) {
      RepositoryDirectory dirFrom=transMeta.getDirectory();
      long idDirFrom=dirFrom == null ? -1L : dirFrom.getID();
      try {
        rep.moveTransformation(transMeta.getName(),idDirFrom,newDirectory.getID());
        log.logDetailed(getClass().getName(),Messages.getString("TransDialog.Log.MovedDirectoryTo",newDirectory.getPath()));
        transMeta.setDirectory(newDirectory);
      }
 catch (      KettleException ke) {
        transMeta.setDirectory(dirFrom);
        OK=false;
        new ErrorDialog(shell,Messages.getString("TransDialog.ErrorMovingTransformation.DialogTitle"),Messages.getString("TransDialog.ErrorMovingTransformation.DialogMessage"),ke);
      }
    }
  }
 else {
    if (newDirectory != null)     transMeta.setDirectory(newDirectory);
  }
  transMeta.setCapturingStepPerformanceSnapShots(wEnableStepPerfMonitor.getSelection());
  try {
    transMeta.setStepPerformanceCapturingDelay(Long.parseLong(wEnableStepPerfInterval.getText()));
  }
 catch (  Exception e) {
    MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
    mb.setText(Messages.getString("TransDialog.InvalidStepPerfIntervalNumber.DialogTitle"));
    mb.setMessage(Messages.getString("TransDialog.InvalidStepPerfIntervalNumber.DialogMessage"));
    mb.open();
    wEnableStepPerfInterval.setFocus();
    wEnableStepPerfInterval.selectAll();
    OK=false;
  }
  applySchema();
  transMeta.setPartitionSchemas(schemas);
  if (OK) {
    transMeta.setChanged(changed || transMeta.hasChanged());
    dispose();
  }
}
