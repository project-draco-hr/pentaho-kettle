{
  Label wlLogconnection=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogconnection.setText(BaseMessages.getString(PKG,"TransDialog.LogConnection.Label"));
  props.setLook(wlLogconnection);
  FormData fdlLogconnection=new FormData();
  fdlLogconnection.left=new FormAttachment(0,0);
  fdlLogconnection.right=new FormAttachment(middle,-margin);
  fdlLogconnection.top=new FormAttachment(0,0);
  wlLogconnection.setLayoutData(fdlLogconnection);
  wbLogconnection=new Button(wLogOptionsComposite,SWT.PUSH);
  wbLogconnection.setText(BaseMessages.getString(PKG,"TransDialog.LogconnectionButton.Label"));
  wbLogconnection.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DatabaseMeta databaseMeta=new DatabaseMeta();
      databaseMeta.shareVariablesWith(transMeta);
      DatabaseDialog cid=new DatabaseDialog(shell,databaseMeta);
      if (cid.open() != null) {
        transMeta.addDatabase(databaseMeta);
        wLogconnection.add(databaseMeta.getName());
        wLogconnection.select(wLogconnection.getItemCount() - 1);
      }
    }
  }
);
  FormData fdbLogconnection=new FormData();
  fdbLogconnection.right=new FormAttachment(100,0);
  fdbLogconnection.top=new FormAttachment(0,0);
  wbLogconnection.setLayoutData(fdbLogconnection);
  wLogconnection=new CCombo(wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogconnection);
  wLogconnection.addModifyListener(lsMod);
  FormData fdLogconnection=new FormData();
  fdLogconnection.left=new FormAttachment(middle,0);
  fdLogconnection.top=new FormAttachment(0,0);
  fdLogconnection.right=new FormAttachment(wbLogconnection,-margin);
  wLogconnection.setLayoutData(fdLogconnection);
  wLogconnection.setItems(transMeta.getDatabaseNames());
  wLogconnection.setText(performanceLogTable.getDatabaseMeta() == null ? "" : performanceLogTable.getDatabaseMeta().getName());
  Label wlLogSchema=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogSchema.setText(BaseMessages.getString(PKG,"TransDialog.LogSchema.Label"));
  props.setLook(wlLogSchema);
  FormData fdlLogSchema=new FormData();
  fdlLogSchema.left=new FormAttachment(0,0);
  fdlLogSchema.right=new FormAttachment(middle,-margin);
  fdlLogSchema.top=new FormAttachment(wLogconnection,margin);
  wlLogSchema.setLayoutData(fdlLogSchema);
  wLogSchema=new TextVar(transMeta,wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogSchema);
  wLogSchema.addModifyListener(lsMod);
  FormData fdLogSchema=new FormData();
  fdLogSchema.left=new FormAttachment(middle,0);
  fdLogSchema.top=new FormAttachment(wLogconnection,margin);
  fdLogSchema.right=new FormAttachment(100,0);
  wLogSchema.setLayoutData(fdLogSchema);
  wLogSchema.setText(Const.NVL(performanceLogTable.getSchemaName(),""));
  Label wlLogtable=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogtable.setText(BaseMessages.getString(PKG,"TransDialog.Logtable.Label"));
  props.setLook(wlLogtable);
  FormData fdlLogtable=new FormData();
  fdlLogtable.left=new FormAttachment(0,0);
  fdlLogtable.right=new FormAttachment(middle,-margin);
  fdlLogtable.top=new FormAttachment(wLogSchema,margin);
  wlLogtable.setLayoutData(fdlLogtable);
  wLogTable=new TextVar(transMeta,wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogTable);
  wLogTable.addModifyListener(lsMod);
  FormData fdLogtable=new FormData();
  fdLogtable.left=new FormAttachment(middle,0);
  fdLogtable.top=new FormAttachment(wLogSchema,margin);
  fdLogtable.right=new FormAttachment(100,0);
  wLogTable.setLayoutData(fdLogtable);
  wLogTable.setText(Const.NVL(performanceLogTable.getTableName(),""));
  Label wlLogInterval=new Label(wLogOptionsComposite,SWT.RIGHT);
  wlLogInterval.setText(BaseMessages.getString(PKG,"TransDialog.LogInterval.Label"));
  props.setLook(wlLogInterval);
  FormData fdlLogInterval=new FormData();
  fdlLogInterval.left=new FormAttachment(0,0);
  fdlLogInterval.right=new FormAttachment(middle,-margin);
  fdlLogInterval.top=new FormAttachment(wLogTable,margin);
  wlLogInterval.setLayoutData(fdlLogInterval);
  wLogInterval=new TextVar(transMeta,wLogOptionsComposite,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogInterval);
  wLogInterval.addModifyListener(lsMod);
  FormData fdLogInterval=new FormData();
  fdLogInterval.left=new FormAttachment(middle,0);
  fdLogInterval.top=new FormAttachment(wLogTable,margin);
  fdLogInterval.right=new FormAttachment(100,0);
  wLogInterval.setLayoutData(fdLogInterval);
  wLogInterval.setText(Const.NVL(performanceLogTable.getLogInterval(),""));
  Label wlFields=new Label(wLogOptionsComposite,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"TransDialog.TransLogTable.Fields.Label"));
  props.setLook(wlFields);
  FormData fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wLogInterval,margin * 2);
  wlFields.setLayoutData(fdlFields);
  final java.util.List<LogTableField> fields=performanceLogTable.getFields();
  final int nrRows=fields.size();
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"TransDialog.TransLogTable.Fields.FieldName"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"TransDialog.TransLogTable.Fields.Description"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  FieldDisabledListener disabledListener=new FieldDisabledListener(){
    public boolean isFieldDisabled(    int rowNr){
      if (rowNr >= 0 && rowNr < fields.size()) {
        LogTableField field=fields.get(rowNr);
        return field.isSubjectAllowed();
      }
 else {
        return true;
      }
    }
  }
;
  colinf[1].setDisabledListener(disabledListener);
  wOptionFields=new TableView(transMeta,wLogOptionsComposite,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.CHECK,colinf,nrRows,true,lsMod,props);
  wOptionFields.setSortable(false);
  for (int i=0; i < fields.size(); i++) {
    LogTableField field=fields.get(i);
    TableItem item=wOptionFields.table.getItem(i);
    item.setChecked(field.isEnabled());
    item.setText(new String[]{"",Const.NVL(field.getFieldName(),""),Const.NVL(field.getDescription(),"")});
  }
  wOptionFields.table.getColumn(0).setText(BaseMessages.getString(PKG,"TransDialog.TransLogTable.Fields.Enabled"));
  FormData fdOptionFields=new FormData();
  fdOptionFields.left=new FormAttachment(0,0);
  fdOptionFields.top=new FormAttachment(wlFields,margin);
  fdOptionFields.right=new FormAttachment(100,0);
  fdOptionFields.bottom=new FormAttachment(100,0);
  wOptionFields.setLayoutData(fdOptionFields);
  wOptionFields.optWidth(true);
  wOptionFields.layout();
  wLogOptionsComposite.layout(true,true);
  wLogComp.layout(true,true);
}
