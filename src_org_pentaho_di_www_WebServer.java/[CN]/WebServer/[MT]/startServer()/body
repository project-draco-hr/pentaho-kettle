{
  server=new Server();
  Constraint constraint=new Constraint();
  constraint.setName(Constraint.__BASIC_AUTH);
  ;
  constraint.setRoles(new String[]{Constraint.ANY_ROLE});
  constraint.setAuthenticate(true);
  ConstraintMapping constraintMapping=new ConstraintMapping();
  constraintMapping.setConstraint(constraint);
  constraintMapping.setPathSpec("/*");
  SecurityHandler securityHandler=new SecurityHandler();
  if (System.getProperty("loginmodulename") != null && System.getProperty("java.security.auth.login.config") != null) {
    JAASUserRealm jaasRealm=new JAASUserRealm("Kettle");
    jaasRealm.setLoginModuleName(System.getProperty("loginmodulename"));
    securityHandler.setUserRealm(jaasRealm);
  }
 else {
    File homePwdFile=new File(Const.getKettleCartePasswordFile());
    if (homePwdFile.exists()) {
      securityHandler.setUserRealm(new HashUserRealm("Kettle",Const.getKettleCartePasswordFile()));
    }
 else {
      securityHandler.setUserRealm(new HashUserRealm("Kettle",Const.getKettleLocalCartePasswordFile()));
    }
  }
  securityHandler.setConstraintMappings(new ConstraintMapping[]{constraintMapping});
  ContextHandlerCollection contexts=new ContextHandlerCollection();
  Context root=new Context(contexts,GetRootServlet.CONTEXT_PATH,Context.SESSIONS);
  GetRootServlet rootServlet=new GetRootServlet();
  rootServlet.setJettyMode(true);
  root.addServlet(new ServletHolder(rootServlet),"/*");
  PluginRegistry pluginRegistry=PluginRegistry.getInstance();
  List<PluginInterface> plugins=pluginRegistry.getPlugins(CartePluginType.class);
  for (  PluginInterface plugin : plugins) {
    CartePluginInterface servlet=(CartePluginInterface)pluginRegistry.loadClass(plugin);
    servlet.setup(transformationMap,jobMap,socketRepository,detections);
    servlet.setJettyMode(true);
    Context servletContext=new Context(contexts,servlet.getContextPath(),Context.SESSIONS);
    ServletHolder servletHolder=new ServletHolder((Servlet)servlet);
    servletContext.addServlet(servletHolder,"/*");
  }
  ServletHolder jerseyServletHolder=new ServletHolder(ServletContainer.class);
  jerseyServletHolder.setInitParameter("com.sun.jersey.config.property.resourceConfigClass","com.sun.jersey.api.core.PackagesResourceConfig");
  jerseyServletHolder.setInitParameter("com.sun.jersey.config.property.packages","org.pentaho.di.www.jaxrs");
  root.addServlet(jerseyServletHolder,"/api/*");
  ResourceHandler resourceHandler=new ResourceHandler();
  resourceHandler.setResourceBase("temp");
  server.setHandlers(new Handler[]{securityHandler,contexts,resourceHandler});
  createListeners();
  server.start();
}
