{
  meta=(ScriptValuesMetaMod)smi;
  data=(ScriptValuesDataMod)sdi;
  boolean sendToErrorRow=false;
  String errorMessage=null;
  Row r=getRow();
  if (r == null) {
    try {
      if (strEndScript != null && strEndScript.length() > 0) {
        Script endScript=data.cx.compileString(strEndScript,"trans_End",1,null);
        endScript.exec(data.cx,data.scope);
        if (log.isDetailed())         logDetailed(("End Script found!"));
      }
 else {
        if (log.isDetailed())         logDetailed(("No end Script found!"));
      }
    }
 catch (    Exception e) {
      if (getStepMeta().isDoingErrorHandling()) {
        sendToErrorRow=true;
        errorMessage=e.toString();
      }
 else {
        logError(Messages.getString("ScriptValuesMod.Log.UnexpectedeError") + " : " + e.toString());
        logError(Messages.getString("ScriptValuesMod.Log.ErrorStackTrace") + Const.CR + Const.getStackTracker(e));
        setErrors(1);
        stopAll();
      }
      if (sendToErrorRow) {
        putError(r,1,errorMessage,null,"TOP001");
        r.setIgnore();
      }
    }
    if (data.cx != null)     Context.exit();
    setOutputDone();
    return false;
  }
switch (addValues(r)) {
case CONTINUE_TRANSFORMATION:
    bRC=true;
  putRow(r);
break;
case SKIP_TRANSFORMATION:
bRC=true;
break;
case ABORT_TRANSFORMATION:
if (data.cx != null) Context.exit();
stopAll();
setOutputDone();
bRC=false;
break;
case ERROR_TRANSFORMATION:
if (data.cx != null) Context.exit();
setErrors(1);
stopAll();
bRC=false;
break;
}
if (checkFeedback(linesRead)) logBasic(Messages.getString("ScriptValuesMod.Log.LineNumber") + linesRead);
return bRC;
}
