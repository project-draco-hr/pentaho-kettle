{
  fixedInputMeta.setFilename(wFilename.getText());
  fixedInputMeta.setLineWidth(wLineWidth.getText());
  fixedInputMeta.setBufferSize(wBufferSize.getText());
  fixedInputMeta.setLazyConversionActive(wLazyConversion.getSelection());
  fixedInputMeta.setHeaderPresent(wHeaderPresent.getSelection());
  fixedInputMeta.setLineFeedPresent(wLineFeedPresent.getSelection());
  fixedInputMeta.setRunningInParallel(wRunningInParallel.getSelection());
  fixedInputMeta.allocate(wFields.nrNonEmpty());
  for (int i=0; i < wFields.nrNonEmpty(); i++) {
    TableItem item=wFields.getNonEmpty(i);
    int colnr=1;
    fixedInputMeta.getFieldNames()[i]=item.getText(colnr++);
    fixedInputMeta.getFieldTypes()[i]=ValueMeta.getType(item.getText(colnr++));
    fixedInputMeta.getFieldFormat()[i]=item.getText(colnr++);
    fixedInputMeta.getFieldWidth()[i]=Const.toInt(item.getText(colnr++),-1);
    fixedInputMeta.getFieldLength()[i]=Const.toInt(item.getText(colnr++),-1);
    fixedInputMeta.getFieldPrecision()[i]=Const.toInt(item.getText(colnr++),-1);
    fixedInputMeta.getFieldCurrency()[i]=item.getText(colnr++);
    fixedInputMeta.getFieldDecimal()[i]=item.getText(colnr++);
    fixedInputMeta.getFieldGrouping()[i]=item.getText(colnr++);
  }
  wFields.removeEmptyRows();
  wFields.setRowNums();
  wFields.optWidth(true);
  fixedInputMeta.setChanged();
}
