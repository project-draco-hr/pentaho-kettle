{
  stepname=wStepname.getText();
  inputMeta.setFilename(wFilename.getText());
  inputMeta.setLineWidth(wLineWidth.getText());
  inputMeta.setBufferSize(wBufferSize.getText());
  inputMeta.setLazyConversionActive(wLazyConversion.getSelection());
  inputMeta.setHeaderPresent(wHeaderPresent.getSelection());
  inputMeta.setLineFeedPresent(wLineFeedPresent.getSelection());
  inputMeta.allocate(wFields.nrNonEmpty());
  for (int i=0; i < wFields.nrNonEmpty(); i++) {
    TableItem item=wFields.getNonEmpty(i);
    int colnr=1;
    inputMeta.getFieldNames()[i]=item.getText(colnr++);
    inputMeta.getFieldTypes()[i]=ValueMeta.getType(item.getText(colnr++));
    inputMeta.getFieldFormat()[i]=item.getText(colnr++);
    inputMeta.getFieldWidth()[i]=Const.toInt(item.getText(colnr++),-1);
    inputMeta.getFieldLength()[i]=Const.toInt(item.getText(colnr++),-1);
    inputMeta.getFieldPrecision()[i]=Const.toInt(item.getText(colnr++),-1);
    inputMeta.getFieldCurrency()[i]=item.getText(colnr++);
    inputMeta.getFieldDecimal()[i]=item.getText(colnr++);
    inputMeta.getFieldGrouping()[i]=item.getText(colnr++);
  }
  wFields.removeEmptyRows();
  wFields.setRowNums();
  wFields.optWidth(true);
  inputMeta.setChanged();
  dispose();
}
