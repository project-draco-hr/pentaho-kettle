{
  EnvUtil.environmentInit();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("test javascript trans_Status");
  PluginRegistry registry=PluginRegistry.getInstance();
  String injectorStepname="injector step";
  InjectorMeta im=new InjectorMeta();
  String injectorPid=registry.getPluginId(StepPluginType.getInstance(),im);
  StepMeta injectorStep=new StepMeta(injectorPid,injectorStepname,(StepMetaInterface)im);
  transMeta.addStep(injectorStep);
  String javaScriptStepname="javascript step";
  ScriptValuesMetaMod svm=new ScriptValuesMetaMod();
  ScriptValuesScript[] js=new ScriptValuesScript[]{new ScriptValuesScript(ScriptValuesScript.TRANSFORM_SCRIPT,"script","trans_Status = CONTINUE_TRANSFORMATION;\n" + "if (getProcessCount(\"r\") > 3) {\n" + " 	trans_Status = SKIP_TRANSFORMATION;\n"+ "}")};
  svm.setJSScripts(js);
  svm.setFieldname(new String[]{});
  svm.setRename(new String[]{});
  svm.setType(new int[]{});
  svm.setLength(new int[]{});
  svm.setPrecision(new int[]{});
  svm.setCompatible(false);
  String javaScriptStepPid=registry.getPluginId(StepPluginType.getInstance(),svm);
  StepMeta javaScriptStep=new StepMeta(javaScriptStepPid,javaScriptStepname,(StepMetaInterface)svm);
  transMeta.addStep(javaScriptStep);
  TransHopMeta hi1=new TransHopMeta(injectorStep,javaScriptStep);
  transMeta.addTransHop(hi1);
  String dummyStepname="dummy step";
  DummyTransMeta dm=new DummyTransMeta();
  String dummyPid=registry.getPluginId(StepPluginType.getInstance(),dm);
  StepMeta dummyStep=new StepMeta(dummyPid,dummyStepname,(StepMetaInterface)dm);
  transMeta.addStep(dummyStep);
  TransHopMeta hi2=new TransHopMeta(javaScriptStep,dummyStep);
  transMeta.addTransHop(hi2);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  StepInterface si;
  si=trans.getStepInterface(javaScriptStepname,0);
  RowStepCollector javaScriptRc=new RowStepCollector();
  si.addRowListener(javaScriptRc);
  si=trans.getStepInterface(dummyStepname,0);
  RowStepCollector dummyRc=new RowStepCollector();
  si.addRowListener(dummyRc);
  RowProducer rp=trans.addRowProducer(injectorStepname,0);
  trans.startThreads();
  List<RowMetaAndData> inputList=createData1();
  Iterator<RowMetaAndData> it=inputList.iterator();
  while (it.hasNext()) {
    RowMetaAndData rm=(RowMetaAndData)it.next();
    rp.putRow(rm.getRowMeta(),rm.getData());
  }
  rp.finished();
  trans.waitUntilFinished();
  List<RowMetaAndData> goldenImageRows=createResultData2();
  List<RowMetaAndData> resultRows1=javaScriptRc.getRowsWritten();
  checkRows(resultRows1,goldenImageRows);
  List<RowMetaAndData> resultRows2=dummyRc.getRowsRead();
  checkRows(resultRows2,goldenImageRows);
}
