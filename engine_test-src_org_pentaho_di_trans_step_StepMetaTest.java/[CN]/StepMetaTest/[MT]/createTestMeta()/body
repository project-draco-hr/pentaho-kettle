{
  StepMetaInterface stepMetaInterface=mock(AbortMeta.class);
  when(stepMetaInterface.clone()).thenReturn(stepMetaInterface);
  StepMeta meta=new StepMeta(STEP_ID,"stepname",stepMetaInterface);
  meta.setSelected(true);
  meta.setDistributes(false);
  meta.setCopiesString("2");
  meta.setLocation(1,2);
  meta.setDraw(true);
  meta.setDescription("description");
  meta.setTerminator(true);
  meta.setClusterSchemaName("clusterSchemaName");
  Map<String,Map<String,String>> attributes=new HashMap<String,Map<String,String>>();
  Map<String,String> map1=new HashMap<String,String>();
  map1.put("1","1");
  Map<String,String> map2=new HashMap<String,String>();
  map2.put("2","2");
  attributes.put("qwerty",map1);
  attributes.put("asdfg",map2);
  meta.setAttributesMap(attributes);
  meta.setStepPartitioningMeta(createStepPartitioningMeta("stepMethod","stepSchema"));
  meta.setTargetStepPartitioningMeta(createStepPartitioningMeta("targetMethod","targetSchema"));
  meta.setClusterSchema(new ClusterSchema("cluster_schema",Collections.<SlaveServer>emptyList()));
  return meta;
}
