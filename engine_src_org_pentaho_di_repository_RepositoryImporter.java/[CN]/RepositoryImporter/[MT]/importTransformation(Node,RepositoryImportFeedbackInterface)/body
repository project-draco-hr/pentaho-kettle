{
  TransMeta transMeta=new TransMeta(transnode,null);
  feedback.setLabel(BaseMessages.getString(PKG,"RepositoryImporter.ImportTrans.Label",Integer.toString(transformationNumber),transMeta.getName()));
  validateImportedElement(importRules,transMeta);
  String directoryPath=XMLHandler.getTagValue(transnode,"info","directory");
  if (transDirOverride != null) {
    directoryPath=transDirOverride;
  }
  if (directoryPath.startsWith("/")) {
    directoryPath=directoryPath.substring(1);
  }
  if (limitDirs.size() > 0 && Const.indexOfString(directoryPath,limitDirs) < 0) {
    feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.SkippedTransformationNotPartOfLimitingDirectories.Log",transMeta.getName()));
    return true;
  }
  RepositoryDirectoryInterface targetDirectory=getTargetDirectory(directoryPath,transDirOverride,feedback);
  ObjectId existingId=rep.getTransformationID(transMeta.getName(),targetDirectory);
  if (existingId != null && askOverwrite) {
    overwrite=feedback.transOverwritePrompt(transMeta);
    askOverwrite=feedback.isAskingOverwriteConfirmation();
  }
 else {
    updateDisplay();
  }
  if (existingId == null || overwrite) {
    replaceSharedObjects(transMeta);
    transMeta.setObjectId(existingId);
    transMeta.setRepositoryDirectory(targetDirectory);
    patchMappingSteps(transMeta);
    try {
      if (transMeta.getCreatedUser() == null || transMeta.getCreatedUser().equals("-")) {
        transMeta.setCreatedDate(new Date());
        if (rep.getUserInfo() != null) {
          transMeta.setCreatedUser(rep.getUserInfo().getLogin());
        }
 else {
          transMeta.setCreatedUser(null);
        }
      }
      saveTransMeta(transMeta);
      feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.TransSaved.Log",Integer.toString(transformationNumber),transMeta.getName()));
      if (transMeta.hasRepositoryReferences()) {
        referencingObjects.add(new RepositoryObject(transMeta.getObjectId(),transMeta.getName(),transMeta.getRepositoryDirectory(),null,null,RepositoryObjectType.TRANSFORMATION,null,false));
      }
    }
 catch (    Exception e) {
      feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.ErrorSavingTrans.Log",Integer.toString(transformationNumber),transMeta.getName(),Const.getStackTracker(e)));
      if (!feedback.askContinueOnErrorQuestion(BaseMessages.getString(PKG,"RepositoryImporter.DoYouWantToContinue.Title"),BaseMessages.getString(PKG,"RepositoryImporter.DoYouWantToContinue.Message"))) {
        return false;
      }
    }
  }
 else {
    feedback.addLog(BaseMessages.getString(PKG,"RepositoryImporter.SkippedExistingTransformation.Log",transMeta.getName()));
  }
  return true;
}
