{
  Object[] metaInjectObjectArray=new Object[4];
  metaInjectObjectArray[0]=transDirOverride;
  metaInjectObjectArray[1]=baseDirectory;
  metaInjectObjectArray[3]=needToCheckPathForVariables;
  for (  StepMeta stepMeta : transMeta.getSteps()) {
    if (stepMeta.isMapping()) {
      MappingMeta mappingMeta=(MappingMeta)stepMeta.getStepMetaInterface();
      if (mappingMeta.getSpecificationMethod() == ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME) {
        if (transDirOverride != null) {
          mappingMeta.setDirectoryPath(transDirOverride);
          continue;
        }
        String mappingMetaPath=resolvePath(baseDirectory.getPath(),mappingMeta.getDirectoryPath());
        mappingMeta.setDirectoryPath(mappingMetaPath);
      }
    }
    metaInjectObjectArray[2]=stepMeta;
    try {
      ExtensionPointHandler.callExtensionPoint(log,KettleExtensionPoint.RepositoryImporterPatchTransStep.id,metaInjectObjectArray);
    }
 catch (    KettleException ke) {
      log.logError(ke.getMessage(),ke);
    }
  }
}
