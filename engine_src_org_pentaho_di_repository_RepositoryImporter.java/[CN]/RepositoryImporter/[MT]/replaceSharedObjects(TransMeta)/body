{
  replaceSharedObjects((AbstractMeta)transMeta);
  for (  ClusterSchema clusterSchema : getSharedObjects(ClusterSchema.class)) {
    int index=transMeta.getClusterSchemas().indexOf(clusterSchema);
    if (index < 0) {
      transMeta.getClusterSchemas().add(clusterSchema);
    }
 else {
      ClusterSchema imported=transMeta.getClusterSchemas().get(index);
      imported.setObjectId(clusterSchema.getObjectId());
      if (equals(clusterSchema,imported) || !getPromptResult(BaseMessages.getString(PKG,"RepositoryImporter.Dialog.ClusterSchemaExistsOverWrite.Message",imported.getName()),BaseMessages.getString(PKG,"RepositoryImporter.Dialog.ConnectionExistsOverWrite.DontShowAnyMoreMessage"),IMPORT_ASK_ABOUT_REPLACE_CS)) {
        imported.replaceMeta(clusterSchema);
        imported.clearChanged();
      }
 else {
        imported.setChanged();
      }
    }
  }
  for (  PartitionSchema partitionSchema : getSharedObjects(PartitionSchema.class)) {
    int index=transMeta.getPartitionSchemas().indexOf(partitionSchema);
    if (index < 0) {
      transMeta.getPartitionSchemas().add(partitionSchema);
    }
 else {
      PartitionSchema imported=transMeta.getPartitionSchemas().get(index);
      imported.setObjectId(partitionSchema.getObjectId());
      if (equals(partitionSchema,imported) || !getPromptResult(BaseMessages.getString(PKG,"RepositoryImporter.Dialog.PartitionSchemaExistsOverWrite.Message",imported.getName()),BaseMessages.getString(PKG,"RepositoryImporter.Dialog.ConnectionExistsOverWrite.DontShowAnyMoreMessage"),IMPORT_ASK_ABOUT_REPLACE_PS)) {
        imported.replaceMeta(partitionSchema);
        imported.clearChanged();
      }
 else {
        imported.setChanged();
      }
    }
  }
}
