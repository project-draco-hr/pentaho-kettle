{
  if (Const.isEmpty(wStepname.getText())) {
    return;
  }
  int nrargs=wFields.nrNonEmpty();
  int nrheaders=wHeaders.nrNonEmpty();
  input.allocate(nrargs,nrheaders);
  if (isDebug()) {
    logDebug(BaseMessages.getString(PKG,"HTTPDialog.Log.FoundArguments",String.valueOf(nrargs)));
  }
  for (int i=0; i < nrargs; i++) {
    TableItem item=wFields.getNonEmpty(i);
    input.getArgumentField()[i]=item.getText(1);
    input.getArgumentParameter()[i]=item.getText(2);
  }
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"HTTPDialog.Log.FoundHeaders",String.valueOf(nrheaders)));
  }
  for (int i=0; i < nrheaders; i++) {
    TableItem item=wHeaders.getNonEmpty(i);
    input.getHeaderField()[i]=item.getText(1);
    input.getHeaderParameter()[i]=item.getText(2);
  }
  input.setUrl(wUrl.getText());
  input.setUrlField(wUrlField.getText());
  input.setUrlInField(wUrlInField.getSelection());
  input.setFieldName(wResult.getText());
  input.setEncoding(wEncoding.getText());
  input.setHttpLogin(wHttpLogin.getText());
  input.setHttpPassword(wHttpPassword.getText());
  input.setProxyHost(wProxyHost.getText());
  input.setProxyPort(wProxyPort.getText());
  input.setResultCodeFieldName(wResultCode.getText());
  input.setResponseTimeFieldName(wResponseTime.getText());
  input.setSocketTimeout(wSocketTimeOut.getText());
  input.setConnectionTimeout(wConnectionTimeOut.getText());
  input.setCloseIdleConnectionsTime(wCloseIdleConnectionsTime.getText());
  stepname=wStepname.getText();
  dispose();
}
