{
  wAccFilenames.setSelection(meta.isAcceptingFilenames());
  wPassThruFields.setSelection(meta.isPassingThruFields());
  if (meta.getAcceptingField() != null) {
    wAccField.setText(meta.getAcceptingField());
  }
  if (meta.getAcceptingStep() != null) {
    wAccStep.setText(meta.getAcceptingStep().getName());
  }
  if (meta.getFileName() != null) {
    wFilenameList.removeAll();
    for (int i=0; i < meta.getFileName().length; i++) {
      wFilenameList.add(meta.getFileName()[i],meta.getFileMask()[i],meta.getExludeFileMask()[i],meta.getRequiredFilesDesc(meta.getFileRequired()[i]),meta.getRequiredFilesDesc(meta.getIncludeSubFolders()[i]));
    }
    wFilenameList.removeEmptyRows();
    wFilenameList.setRowNums();
    wFilenameList.optWidth(true);
  }
  if (meta.getFileType() != null) {
    wFiletype.setText(meta.getFileType());
  }
  if (meta.getSeparator() != null) {
    wSeparator.setText(meta.getSeparator());
  }
  if (meta.getEnclosure() != null) {
    wEnclosure.setText(meta.getEnclosure());
  }
  if (meta.getEscapeCharacter() != null) {
    wEscape.setText(meta.getEscapeCharacter());
  }
  wHeader.setSelection(meta.hasHeader());
  wNrHeader.setText("" + meta.getNrHeaderLines());
  wFooter.setSelection(meta.hasFooter());
  wNrFooter.setText("" + meta.getNrFooterLines());
  wWraps.setSelection(meta.isLineWrapped());
  wNrWraps.setText("" + meta.getNrWraps());
  wLayoutPaged.setSelection(meta.isLayoutPaged());
  wNrLinesPerPage.setText("" + meta.getNrLinesPerPage());
  wNrLinesDocHeader.setText("" + meta.getNrLinesDocHeader());
  if (meta.getFileCompression() != null) {
    wCompression.setText(meta.getFileCompression());
  }
  wNoempty.setSelection(meta.noEmptyLines());
  wInclFilename.setSelection(meta.includeFilename());
  wInclRownum.setSelection(meta.includeRowNumber());
  wRownumByFile.setSelection(meta.isRowNumberByFile());
  wDateLenient.setSelection(meta.isDateFormatLenient());
  wAddResult.setSelection(meta.isAddResultFile());
  if (meta.getFilenameField() != null) {
    wInclFilenameField.setText(meta.getFilenameField());
  }
  if (meta.getRowNumberField() != null) {
    wInclRownumField.setText(meta.getRowNumberField());
  }
  if (meta.getFileFormat() != null) {
    wFormat.setText(meta.getFileFormat());
  }
  wLimit.setText("" + meta.getRowLimit());
  logDebug("getting fields info...");
  getFieldsData(meta,false);
  if (meta.getEncoding() != null) {
    wEncoding.setText(meta.getEncoding());
  }
  wErrorIgnored.setSelection(meta.isErrorIgnored());
  wSkipBadFiles.setSelection(meta.isSkipBadFiles());
  wSkipErrorLines.setSelection(meta.isErrorLineSkipped());
  if (meta.getFileErrorField() != null) {
    wBadFileField.setText(meta.getFileErrorField());
  }
  if (meta.getFileErrorMessageField() != null) {
    wBadFileMessageField.setText(meta.getFileErrorMessageField());
  }
  if (meta.getErrorCountField() != null) {
    wErrorCount.setText(meta.getErrorCountField());
  }
  if (meta.getErrorFieldsField() != null) {
    wErrorFields.setText(meta.getErrorFieldsField());
  }
  if (meta.getErrorTextField() != null) {
    wErrorText.setText(meta.getErrorTextField());
  }
  if (meta.getWarningFilesDestinationDirectory() != null) {
    wWarnDestDir.setText(meta.getWarningFilesDestinationDirectory());
  }
  if (meta.getWarningFilesExtension() != null) {
    wWarnExt.setText(meta.getWarningFilesExtension());
  }
  if (meta.getErrorFilesDestinationDirectory() != null) {
    wErrorDestDir.setText(meta.getErrorFilesDestinationDirectory());
  }
  if (meta.getErrorLineFilesExtension() != null) {
    wErrorExt.setText(meta.getErrorLineFilesExtension());
  }
  if (meta.getLineNumberFilesDestinationDirectory() != null) {
    wLineNrDestDir.setText(meta.getLineNumberFilesDestinationDirectory());
  }
  if (meta.getLineNumberFilesExtension() != null) {
    wLineNrExt.setText(meta.getLineNumberFilesExtension());
  }
  for (int i=0; i < meta.getFilter().length; i++) {
    TableItem item=wFilter.table.getItem(i);
    TextFileFilter filter=meta.getFilter()[i];
    if (filter.getFilterString() != null) {
      item.setText(1,filter.getFilterString());
    }
    if (filter.getFilterPosition() >= 0) {
      item.setText(2,"" + filter.getFilterPosition());
    }
    item.setText(3,filter.isFilterLastLine() ? BaseMessages.getString(PKG,"System.Combo.Yes") : BaseMessages.getString(PKG,"System.Combo.No"));
    item.setText(4,filter.isFilterPositive() ? BaseMessages.getString(PKG,"System.Combo.Yes") : BaseMessages.getString(PKG,"System.Combo.No"));
  }
  wDateLocale.setText(meta.getDateFormatLocale().toString());
  wFields.removeEmptyRows();
  wFields.setRowNums();
  wFields.optWidth(true);
  wFilter.removeEmptyRows();
  wFilter.setRowNums();
  wFilter.optWidth(true);
  if (meta.getShortFileNameField() != null) {
    wShortFileFieldName.setText(meta.getShortFileNameField());
  }
  if (meta.getPathField() != null) {
    wPathFieldName.setText(meta.getPathField());
  }
  if (meta.isHiddenField() != null) {
    wIsHiddenName.setText(meta.isHiddenField());
  }
  if (meta.getLastModificationDateField() != null) {
    wLastModificationTimeName.setText(meta.getLastModificationDateField());
  }
  if (meta.getUriField() != null) {
    wUriName.setText(meta.getUriField());
  }
  if (meta.getRootUriField() != null) {
    wRootUriName.setText(meta.getRootUriField());
  }
  if (meta.getExtensionField() != null) {
    wExtensionFieldName.setText(meta.getExtensionField());
  }
  if (meta.getSizeField() != null) {
    wSizeFieldName.setText(meta.getSizeField());
  }
  setFlags();
  wStepname.selectAll();
  wStepname.setFocus();
}
