{
  stepname=wStepname.getText();
  meta.inputFiles.acceptingFilenames=wAccFilenames.getSelection();
  meta.inputFiles.passingThruFields=wPassThruFields.getSelection();
  meta.inputFiles.acceptingField=wAccField.getText();
  meta.inputFiles.acceptingStepName=wAccStep.getText();
  meta.setAcceptingStep(transMeta.findStep(wAccStep.getText()));
  meta.content.fileType=wFiletype.getText();
  if (preview) {
    meta.content.fileFormat="mixed";
  }
 else {
    meta.content.fileFormat=wFormat.getText();
  }
  meta.content.separator=wSeparator.getText();
  meta.content.enclosure=wEnclosure.getText();
  meta.content.escapeCharacter=wEscape.getText();
  meta.content.rowLimit=Const.toLong(wLimit.getText(),0L);
  meta.content.filenameField=wInclFilenameField.getText();
  meta.content.rowNumberField=wInclRownumField.getText();
  meta.inputFiles.isaddresult=wAddResult.getSelection();
  meta.content.includeFilename=wInclFilename.getSelection();
  meta.content.includeRowNumber=wInclRownum.getSelection();
  meta.content.rowNumberByFile=wRownumByFile.getSelection();
  meta.content.header=wHeader.getSelection();
  meta.content.nrHeaderLines=Const.toInt(wNrHeader.getText(),1);
  meta.content.footer=wFooter.getSelection();
  meta.content.nrFooterLines=Const.toInt(wNrFooter.getText(),1);
  meta.content.lineWrapped=wWraps.getSelection();
  meta.content.nrWraps=Const.toInt(wNrWraps.getText(),1);
  meta.content.layoutPaged=wLayoutPaged.getSelection();
  meta.content.nrLinesPerPage=Const.toInt(wNrLinesPerPage.getText(),80);
  meta.content.nrLinesDocHeader=Const.toInt(wNrLinesDocHeader.getText(),0);
  meta.content.fileCompression=wCompression.getText();
  meta.content.dateFormatLenient=wDateLenient.getSelection();
  meta.content.noEmptyLines=wNoempty.getSelection();
  meta.content.encoding=wEncoding.getText();
  int nrfiles=wFilenameList.getItemCount();
  int nrfields=wFields.nrNonEmpty();
  int nrfilters=wFilter.nrNonEmpty();
  meta.allocate(nrfiles,nrfields,nrfilters);
  meta.setFileName(wFilenameList.getItems(0));
  meta.inputFiles.fileMask=wFilenameList.getItems(1);
  meta.inputFiles.excludeFileMask=wFilenameList.getItems(2);
  meta.inputFiles_fileRequired(wFilenameList.getItems(3));
  meta.inputFiles_includeSubFolders(wFilenameList.getItems(4));
  for (int i=0; i < nrfields; i++) {
    TextFileInputField field=new TextFileInputField();
    TableItem item=wFields.getNonEmpty(i);
    field.setName(item.getText(1));
    field.setType(ValueMeta.getType(item.getText(2)));
    field.setFormat(item.getText(3));
    field.setPosition(Const.toInt(item.getText(4),-1));
    field.setLength(Const.toInt(item.getText(5),-1));
    field.setPrecision(Const.toInt(item.getText(6),-1));
    field.setCurrencySymbol(item.getText(7));
    field.setDecimalSymbol(item.getText(8));
    field.setGroupSymbol(item.getText(9));
    field.setNullString(item.getText(10));
    field.setIfNullValue(item.getText(11));
    field.setTrimType(ValueMeta.getTrimTypeByDesc(item.getText(12)));
    field.setRepeated(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(13)));
    meta.inputFiles.inputFields[i]=field;
  }
  for (int i=0; i < nrfilters; i++) {
    TableItem item=wFilter.getNonEmpty(i);
    TextFileFilter filter=new TextFileFilter();
    meta.getFilter()[i]=filter;
    filter.setFilterString(item.getText(1));
    filter.setFilterPosition(Const.toInt(item.getText(2),-1));
    filter.setFilterLastLine(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(3)));
    filter.setFilterPositive(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(4)));
  }
  meta.errorHandling.errorIgnored=wErrorIgnored.getSelection();
  meta.errorHandling.skipBadFiles=wSkipBadFiles.getSelection();
  meta.errorHandling.fileErrorField=wBadFileField.getText();
  meta.errorHandling.fileErrorMessageField=wBadFileMessageField.getText();
  meta.setErrorLineSkipped(wSkipErrorLines.getSelection());
  meta.setErrorCountField(wErrorCount.getText());
  meta.setErrorFieldsField(wErrorFields.getText());
  meta.setErrorTextField(wErrorText.getText());
  meta.errorHandling.warningFilesDestinationDirectory=wWarnDestDir.getText();
  meta.errorHandling.warningFilesExtension=wWarnExt.getText();
  meta.errorHandling.errorFilesDestinationDirectory=wErrorDestDir.getText();
  meta.errorHandling.errorFilesExtension=wErrorExt.getText();
  meta.errorHandling.lineNumberFilesDestinationDirectory=wLineNrDestDir.getText();
  meta.errorHandling.lineNumberFilesExtension=wLineNrExt.getText();
  Locale locale=EnvUtil.createLocale(wDateLocale.getText());
  if (!locale.equals(Locale.getDefault())) {
    meta.content.dateFormatLocale=locale;
  }
 else {
    meta.content.dateFormatLocale=Locale.getDefault();
  }
  meta.additionalOutputFields.shortFilenameField=wShortFileFieldName.getText();
  meta.additionalOutputFields.pathField=wPathFieldName.getText();
  meta.additionalOutputFields.hiddenField=wIsHiddenName.getText();
  meta.additionalOutputFields.lastModificationField=wLastModificationTimeName.getText();
  meta.additionalOutputFields.uriField=wUriName.getText();
  meta.additionalOutputFields.rootUriField=wRootUriName.getText();
  meta.additionalOutputFields.extensionField=wExtensionFieldName.getText();
  meta.additionalOutputFields.sizeField=wSizeFieldName.getText();
}
