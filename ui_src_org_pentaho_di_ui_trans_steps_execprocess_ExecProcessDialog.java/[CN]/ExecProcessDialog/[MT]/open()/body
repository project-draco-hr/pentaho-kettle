{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"ExecProcessDialog.GeneralTab.TabItem"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=margin;
  generalLayout.marginHeight=margin;
  wGeneralComp.setLayout(generalLayout);
  wlProcess=new Label(wGeneralComp,SWT.RIGHT);
  wlProcess.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Process.Label"));
  props.setLook(wlProcess);
  fdlProcess=new FormData();
  fdlProcess.left=new FormAttachment(0,0);
  fdlProcess.right=new FormAttachment(middle,-margin);
  fdlProcess.top=new FormAttachment(wStepname,margin);
  wlProcess.setLayoutData(fdlProcess);
  wProcess=new CCombo(wGeneralComp,SWT.BORDER | SWT.READ_ONLY);
  wProcess.setEditable(true);
  props.setLook(wProcess);
  wProcess.addModifyListener(lsMod);
  fdProcess=new FormData();
  fdProcess.left=new FormAttachment(middle,0);
  fdProcess.top=new FormAttachment(wStepname,margin);
  fdProcess.right=new FormAttachment(100,-margin);
  wProcess.setLayoutData(fdProcess);
  wProcess.addFocusListener(new FocusListener(){
    @Override public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    @Override public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      get();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlArgumentsInFields=new Label(wGeneralComp,SWT.RIGHT);
  wlArgumentsInFields.setText(BaseMessages.getString(PKG,"ExecProcessDialog.ArgumentInFields.Label"));
  props.setLook(wlArgumentsInFields);
  fdlArgumentsInFields=new FormData();
  fdlArgumentsInFields.left=new FormAttachment(0,0);
  fdlArgumentsInFields.top=new FormAttachment(wProcess,margin);
  fdlArgumentsInFields.right=new FormAttachment(middle,-margin);
  wlArgumentsInFields.setLayoutData(fdlArgumentsInFields);
  wArgumentsInFields=new Button(wGeneralComp,SWT.CHECK);
  wArgumentsInFields.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.ArgumentInFields.Tooltip"));
  props.setLook(wArgumentsInFields);
  fdArgumentsInFields=new FormData();
  fdArgumentsInFields.left=new FormAttachment(middle,0);
  fdArgumentsInFields.top=new FormAttachment(wProcess,margin);
  fdArgumentsInFields.right=new FormAttachment(100,0);
  wArgumentsInFields.setLayoutData(fdArgumentsInFields);
  wArgumentsInFields.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      enableFields();
      input.setChanged();
    }
  }
);
  wlFailWhenNotSuccess=new Label(wGeneralComp,SWT.RIGHT);
  wlFailWhenNotSuccess.setText(BaseMessages.getString(PKG,"ExecProcessDialog.FailWhenNotSuccess.Label"));
  props.setLook(wlFailWhenNotSuccess);
  fdlFailWhenNotSuccess=new FormData();
  fdlFailWhenNotSuccess.left=new FormAttachment(0,0);
  fdlFailWhenNotSuccess.top=new FormAttachment(wArgumentsInFields,margin);
  fdlFailWhenNotSuccess.right=new FormAttachment(middle,-margin);
  wlFailWhenNotSuccess.setLayoutData(fdlFailWhenNotSuccess);
  wFailWhenNotSuccess=new Button(wGeneralComp,SWT.CHECK);
  wFailWhenNotSuccess.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.FailWhenNotSuccess.Tooltip"));
  props.setLook(wFailWhenNotSuccess);
  fdFailWhenNotSuccess=new FormData();
  fdFailWhenNotSuccess.left=new FormAttachment(middle,0);
  fdFailWhenNotSuccess.top=new FormAttachment(wArgumentsInFields,margin);
  fdFailWhenNotSuccess.right=new FormAttachment(100,0);
  wFailWhenNotSuccess.setLayoutData(fdFailWhenNotSuccess);
  wFailWhenNotSuccess.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlArgumentFields=new Label(wGeneralComp,SWT.LEFT);
  wlArgumentFields.setText(BaseMessages.getString(PKG,"ExecProcessDialog.ArgumentFields.Label"));
  props.setLook(wlArgumentFields);
  fdlArgumentFields=new FormData();
  fdlArgumentFields.left=new FormAttachment(0,0);
  fdlArgumentFields.top=new FormAttachment(wFailWhenNotSuccess,margin);
  fdlArgumentFields.right=new FormAttachment(middle,-margin);
  wlArgumentFields.setLayoutData(fdlArgumentFields);
  ColumnInfo[] colinf=new ColumnInfo[1];
  colinf[0]=new ColumnInfo(BaseMessages.getString(PKG,"ExecProcessDialog.ArgumentField.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  colinf[0].setToolTip(BaseMessages.getString(PKG,"ExecProcessDialog.ArgumentField.Tooltip"));
  wArgumentFields=new TableView(null,wGeneralComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,1,lsMod,props);
  fdArgumentFields=new FormData();
  fdArgumentFields.left=new FormAttachment(0,0);
  fdArgumentFields.top=new FormAttachment(wlArgumentFields,margin);
  fdArgumentFields.right=new FormAttachment(100,0);
  fdArgumentFields.bottom=new FormAttachment(100,-margin);
  wArgumentFields.setLayoutData(fdArgumentFields);
  FormData fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  wOutputTab=new CTabItem(wTabFolder,SWT.NONE);
  wOutputTab.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Output.TabItem"));
  wOutputComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wOutputComp);
  FormLayout fdOutputCompLayout=new FormLayout();
  fdOutputCompLayout.marginWidth=margin;
  fdOutputCompLayout.marginHeight=margin;
  wOutputComp.setLayout(fdOutputCompLayout);
  wOutputDelim=new LabelTextVar(transMeta,wOutputComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"ExecProcessDialog.OutputDelimiterField.Label"),BaseMessages.getString(PKG,"ExecProcessDialog.OutputDelimiterField.Tooltip"));
  wOutputDelim.addModifyListener(lsMod);
  fdOutputDelim=new FormData();
  fdOutputDelim.left=new FormAttachment(0,0);
  fdOutputDelim.top=new FormAttachment(0,margin);
  fdOutputDelim.right=new FormAttachment(100,0);
  wOutputDelim.setLayoutData(fdOutputDelim);
  wResult=new LabelTextVar(transMeta,wOutputComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"ExecProcessDialog.ResultField.Label"),BaseMessages.getString(PKG,"ExecProcessDialog.ResultField.Tooltip"));
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(0,0);
  fdResult.top=new FormAttachment(wOutputDelim,margin);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  wError=new LabelTextVar(transMeta,wOutputComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"ExecProcessDialog.ErrorField.Label"),BaseMessages.getString(PKG,"ExecProcessDialog.ErrorField.Tooltip"));
  wError.addModifyListener(lsMod);
  fdError=new FormData();
  fdError.left=new FormAttachment(0,0);
  fdError.top=new FormAttachment(wResult,margin);
  fdError.right=new FormAttachment(100,0);
  wError.setLayoutData(fdError);
  wExitValue=new LabelTextVar(transMeta,wOutputComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"ExecProcessDialog.ExitValueField.Label"),BaseMessages.getString(PKG,"ExecProcessDialog.ExitValueField.Tooltip"));
  wExitValue.addModifyListener(lsMod);
  fdExitValue=new FormData();
  fdExitValue.left=new FormAttachment(0,0);
  fdExitValue.top=new FormAttachment(wError,margin);
  fdExitValue.right=new FormAttachment(100,0);
  wExitValue.setLayoutData(fdExitValue);
  FormData fdOutputComp=new FormData();
  fdOutputComp.left=new FormAttachment(0,0);
  fdOutputComp.top=new FormAttachment(0,0);
  fdOutputComp.right=new FormAttachment(100,0);
  fdOutputComp.bottom=new FormAttachment(100,0);
  wOutputComp.setLayoutData(fdOutputComp);
  wOutputComp.layout();
  wOutputTab.setControl(wOutputComp);
  FormData fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wTabFolder.setSelection(0);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    @Override public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    @Override public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    @Override public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  RowMetaInterface r=null;
  try {
    r=transMeta.getPrevStepFields(stepname);
    if (r != null) {
      wArgumentFields.getColumns()[0].setComboValues(r.getFieldNames());
    }
  }
 catch (  KettleStepException ignore) {
  }
  getData();
  enableFields();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
