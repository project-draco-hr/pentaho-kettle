{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlProcess=new Label(shell,SWT.RIGHT);
  wlProcess.setText(BaseMessages.getString(PKG,"ExecProcessDialog.Process.Label"));
  props.setLook(wlProcess);
  fdlProcess=new FormData();
  fdlProcess.left=new FormAttachment(0,0);
  fdlProcess.right=new FormAttachment(middle,-margin);
  fdlProcess.top=new FormAttachment(wStepname,margin);
  wlProcess.setLayoutData(fdlProcess);
  wProcess=new CCombo(shell,SWT.BORDER | SWT.READ_ONLY);
  wProcess.setEditable(true);
  props.setLook(wProcess);
  wProcess.addModifyListener(lsMod);
  fdProcess=new FormData();
  fdProcess.left=new FormAttachment(middle,0);
  fdProcess.top=new FormAttachment(wStepname,margin);
  fdProcess.right=new FormAttachment(100,-margin);
  wProcess.setLayoutData(fdProcess);
  wProcess.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      get();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlFailWhenNotSuccess=new Label(shell,SWT.RIGHT);
  wlFailWhenNotSuccess.setText(BaseMessages.getString(PKG,"ExecProcessDialog.FailWhenNotSuccess.Label"));
  props.setLook(wlFailWhenNotSuccess);
  fdlFailWhenNotSuccess=new FormData();
  fdlFailWhenNotSuccess.left=new FormAttachment(0,0);
  fdlFailWhenNotSuccess.top=new FormAttachment(wProcess,margin);
  fdlFailWhenNotSuccess.right=new FormAttachment(middle,-margin);
  wlFailWhenNotSuccess.setLayoutData(fdlFailWhenNotSuccess);
  wFailWhenNotSuccess=new Button(shell,SWT.CHECK);
  wFailWhenNotSuccess.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.FailWhenNotSuccess.Tooltip"));
  props.setLook(wFailWhenNotSuccess);
  fdFailWhenNotSuccess=new FormData();
  fdFailWhenNotSuccess.left=new FormAttachment(middle,0);
  fdFailWhenNotSuccess.top=new FormAttachment(wProcess,margin);
  fdFailWhenNotSuccess.right=new FormAttachment(100,0);
  wFailWhenNotSuccess.setLayoutData(fdFailWhenNotSuccess);
  wFailWhenNotSuccess.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlOutputDelim=new Label(shell,SWT.RIGHT);
  wlOutputDelim.setText(BaseMessages.getString(PKG,"ExecProcessDialog.OutputDelimiterField.Label"));
  props.setLook(wlOutputDelim);
  fdlOutputDelim=new FormData();
  fdlOutputDelim.left=new FormAttachment(0,0);
  fdlOutputDelim.right=new FormAttachment(middle,-margin);
  fdlOutputDelim.top=new FormAttachment(wFailWhenNotSuccess,margin);
  wlOutputDelim.setLayoutData(fdlOutputDelim);
  wOutputDelim=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wOutputDelim.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.OutputDelimiterField.Tooltip"));
  props.setLook(wOutputDelim);
  wOutputDelim.addModifyListener(lsMod);
  fdOutputDelim=new FormData();
  fdOutputDelim.left=new FormAttachment(middle,0);
  fdOutputDelim.top=new FormAttachment(wFailWhenNotSuccess,margin);
  fdOutputDelim.right=new FormAttachment(100,0);
  wOutputDelim.setLayoutData(fdOutputDelim);
  wOutputFields=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wOutputFields);
  wOutputFields.setText(BaseMessages.getString(PKG,"ExecProcessDialog.OutputFields.Label"));
  FormLayout OutputFieldsgroupLayout=new FormLayout();
  OutputFieldsgroupLayout.marginWidth=10;
  OutputFieldsgroupLayout.marginHeight=10;
  wOutputFields.setLayout(OutputFieldsgroupLayout);
  wlResult=new Label(wOutputFields,SWT.RIGHT);
  wlResult.setText(BaseMessages.getString(PKG,"ExecProcessDialog.ResultField.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(wFailWhenNotSuccess,margin * 2);
  wlResult.setLayoutData(fdlResult);
  wResult=new TextVar(transMeta,wOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wResult.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.ResultField.Tooltip"));
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(wFailWhenNotSuccess,margin * 2);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  wlError=new Label(wOutputFields,SWT.RIGHT);
  wlError.setText(BaseMessages.getString(PKG,"ExecProcessDialog.ErrorField.Label"));
  props.setLook(wlError);
  fdlError=new FormData();
  fdlError.left=new FormAttachment(0,0);
  fdlError.right=new FormAttachment(middle,-margin);
  fdlError.top=new FormAttachment(wResult,margin);
  wlError.setLayoutData(fdlError);
  wError=new TextVar(transMeta,wOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wError.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.ErrorField.Tooltip"));
  props.setLook(wError);
  wError.addModifyListener(lsMod);
  fdError=new FormData();
  fdError.left=new FormAttachment(middle,0);
  fdError.top=new FormAttachment(wResult,margin);
  fdError.right=new FormAttachment(100,0);
  wError.setLayoutData(fdError);
  wlExitValue=new Label(wOutputFields,SWT.RIGHT);
  wlExitValue.setText(BaseMessages.getString(PKG,"ExecProcessDialog.ExitValueField.Label"));
  props.setLook(wlExitValue);
  fdlExitValue=new FormData();
  fdlExitValue.left=new FormAttachment(0,0);
  fdlExitValue.right=new FormAttachment(middle,-margin);
  fdlExitValue.top=new FormAttachment(wError,margin);
  wlExitValue.setLayoutData(fdlExitValue);
  wExitValue=new TextVar(transMeta,wOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wExitValue.setToolTipText(BaseMessages.getString(PKG,"ExecProcessDialog.ExitValueField.Tooltip"));
  props.setLook(wExitValue);
  wExitValue.addModifyListener(lsMod);
  fdExitValue=new FormData();
  fdExitValue.left=new FormAttachment(middle,0);
  fdExitValue.top=new FormAttachment(wError,margin);
  fdExitValue.right=new FormAttachment(100,0);
  wExitValue.setLayoutData(fdExitValue);
  fdOutputFields=new FormData();
  fdOutputFields.left=new FormAttachment(0,margin);
  fdOutputFields.top=new FormAttachment(wOutputDelim,2 * margin);
  fdOutputFields.right=new FormAttachment(100,-margin);
  wOutputFields.setLayoutData(fdOutputFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wOutputFields);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
