{
  String error_message="";
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is connected to previous one, receiving " + prev.size() + " fields",stepMeta);
    remarks.add(cr);
    error_message="";
    Value v=prev.searchValue(splitField);
    if (v == null) {
      error_message="Field to split [" + splitField + "] is not present in the input stream!";
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Splitfield [" + splitField + "]found in the input stream.",stepMeta);
      remarks.add(cr);
    }
  }
 else {
    error_message="Couldn't read fields from the previous step." + Const.CR;
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is receiving info from other steps.",stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No input received from other steps!",stepMeta);
    remarks.add(cr);
  }
}
