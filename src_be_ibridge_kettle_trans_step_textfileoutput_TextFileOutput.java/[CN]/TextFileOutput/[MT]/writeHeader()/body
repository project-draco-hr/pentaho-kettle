{
  boolean retval=false;
  Row r=data.headerrow;
  try {
    if (meta.getOutputFields() != null && meta.getOutputFields().length > 0) {
      String header="";
      for (int i=0; i < meta.getOutputFields().length; i++) {
        String fieldName=meta.getOutputFields()[i].getName();
        Value v=r.searchValue(fieldName);
        if (i > 0 && meta.getSeparator() != null && meta.getSeparator().length() > 0) {
          header+=meta.getSeparator();
        }
        if (meta.isEnclosureForced() && meta.getEnclosure() != null && v != null && v.isString()) {
          header+=meta.getEnclosure();
        }
        header+=fieldName;
        if (meta.isEnclosureForced() && meta.getEnclosure() != null && v != null && v.isString()) {
          header+=meta.getEnclosure();
        }
      }
      header+=meta.getNewline();
      data.writer.write(header.toCharArray());
    }
 else     if (r != null) {
      for (int i=0; i < r.size(); i++) {
        if (i > 0 && meta.getSeparator() != null && meta.getSeparator().length() > 0)         data.writer.write(meta.getSeparator().toCharArray());
        Value v=r.getValue(i);
        Value header_value=new Value(v.getName(),Value.VALUE_TYPE_STRING);
        header_value.setValue(v.getName());
        if (meta.isEnclosureForced() && meta.getEnclosure() != null && v.isString()) {
          data.writer.write(meta.getEnclosure().toCharArray());
        }
        data.writer.write(header_value.toString().toCharArray());
        if (meta.isEnclosureForced() && meta.getEnclosure() != null && v.isString()) {
          data.writer.write(meta.getEnclosure().toCharArray());
        }
      }
      data.writer.write(meta.getNewline().toCharArray());
    }
 else {
      data.writer.write(("no rows selected" + Const.CR).toCharArray());
    }
  }
 catch (  Exception e) {
    logError("Error writing header line: " + e.toString());
    logError(Const.getStackTracker(e));
    retval=true;
  }
  linesOutput++;
  return retval;
}
