{
  meta=(ExcelOutputMeta)smi;
  data=(ExcelOutputData)sdi;
  Object[] r=getRow();
  if (first && r != null) {
    data.previousMeta=getInputRowMeta().clone();
    if (meta.isAutoSizeColums()) {
      if (meta.getOutputFields() != null && meta.getOutputFields().length > 0)       data.fieldsWidth=new int[meta.getOutputFields().length];
 else       data.fieldsWidth=new int[data.previousMeta.size()];
    }
    if (meta.isDoNotOpenNewFileInit()) {
      data.oneFileOpened=true;
      addFilenameToResult();
      if (!openNewFile()) {
        logError("Couldn't open file " + buildFilename());
        return false;
      }
      if (meta.isHeaderEnabled() && !data.headerWrote) {
        writeHeader();
        data.headerWrote=true;
      }
    }
 else {
      if (meta.isHeaderEnabled() && !data.headerWrote) {
        writeHeader();
        data.headerWrote=true;
      }
    }
  }
  if (r != null && getLinesOutput() > 0 && meta.getSplitEvery() > 0 && ((getLinesOutput() + 1) % meta.getSplitEvery()) == 0) {
    if (r != null) {
      closeFile();
      if (!openNewFile()) {
        logError("Unable to open new file (split #" + data.splitnr + "...");
        setErrors(1);
        return false;
      }
      if (meta.isHeaderEnabled() && !data.headerWrote) {
        writeHeader();
        data.headerWrote=true;
      }
    }
  }
  if (r == null) {
    setOutputDone();
    return false;
  }
  boolean result=writeRowToFile(r);
  if (!result) {
    setErrors(1);
    stopAll();
    return false;
  }
  putRow(data.previousMeta,r);
  if (checkFeedback(getLinesOutput())) {
    if (log.isBasic())     logBasic("linenr " + getLinesOutput());
  }
  return result;
}
