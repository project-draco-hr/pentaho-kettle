{
  boolean retval=false;
  try {
    WorkbookSettings ws=new WorkbookSettings();
    ws.setLocale(Locale.getDefault());
    if (!Const.isEmpty(meta.getEncoding())) {
      ws.setEncoding(meta.getEncoding());
    }
    String filename=buildFilename();
    FileObject file=KettleVFS.getFileObject(filename);
    if (meta.isAddToResultFiles()) {
      ResultFile resultFile=new ResultFile(ResultFile.FILE_TYPE_GENERAL,file,getTransMeta().getName(),getStepname());
      resultFile.setComment("This file was created with an Excel output step by Pentaho Data Integration");
      addResultFile(resultFile);
    }
    if (!meta.isTemplateEnabled()) {
      if (meta.isAppend() && file.exists()) {
        File fle=new File(filename);
        boolean find=false;
        int position=0;
        data.workbook=Workbook.createWorkbook(fle,Workbook.getWorkbook(fle));
        String listSheets[]=data.workbook.getSheetNames();
        for (int i=0; i < listSheets.length; i++) {
          if (listSheets[i].equals(meta.getSheetname())) {
            find=true;
            position=i;
          }
        }
        if (find) {
          data.workbook.removeSheet(position);
        }
        data.sheet=data.workbook.createSheet(meta.getSheetname(),data.workbook.getNumberOfSheets() + 1);
      }
 else {
        data.outputStream=file.getContent().getOutputStream();
        data.workbook=Workbook.createWorkbook(data.outputStream,ws);
        String sheetname="Sheet1";
        data.sheet=data.workbook.getSheet(sheetname);
        if (data.sheet == null) {
          data.sheet=data.workbook.createSheet(sheetname,0);
        }
      }
    }
 else {
      FileObject fo=KettleVFS.getFileObject(environmentSubstitute(meta.getTemplateFileName()));
      Workbook tmpWorkbook=Workbook.getWorkbook(fo.getContent().getInputStream(),ws);
      data.workbook=Workbook.createWorkbook(file.getContent().getOutputStream(),tmpWorkbook);
      tmpWorkbook.close();
      data.sheet=data.workbook.getSheet(0);
      data.templateColumns=data.sheet.getColumns();
    }
    if (!Const.isEmpty(environmentSubstitute(meta.getSheetname()))) {
      data.sheet.setName(environmentSubstitute(meta.getSheetname()));
    }
    if (meta.isSheetProtected()) {
      data.sheet.getSettings().setProtected(true);
      data.sheet.getSettings().setPassword(environmentSubstitute(meta.getPassword()));
    }
    data.positionX=0;
    if (meta.isTemplateEnabled() && meta.isTemplateAppend()) {
      data.positionY=data.sheet.getRows();
    }
 else {
      data.positionY=0;
    }
    if (meta.isHeaderEnabled()) {
      writeHeader();
    }
    retval=true;
  }
 catch (  Exception e) {
    logError("Error opening new file",e);
    setErrors(1);
  }
  data.splitnr++;
  return retval;
}
