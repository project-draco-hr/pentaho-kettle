{
  boolean retval=false;
  try {
    WorkbookSettings ws=new WorkbookSettings();
    ws.setLocale(Locale.getDefault());
    if (!Const.isEmpty(meta.getEncoding())) {
      ws.setEncoding(meta.getEncoding());
    }
    String buildFilename=buildFilename();
    data.file=KettleVFS.getFileObject(buildFilename);
    if (log.isDebug())     log.logDebug(toString(),BaseMessages.getString(PKG,"ExcelOutput.Log.OpeningFile",buildFilename));
    if (meta.isAddToResultFiles()) {
      ResultFile resultFile=new ResultFile(ResultFile.FILE_TYPE_GENERAL,data.file,getTransMeta().getName(),getStepname());
      resultFile.setComment("This file was created with an Excel output step by Pentaho Data Integration");
      addResultFile(resultFile);
    }
    if (!meta.isTemplateEnabled()) {
      File fle=new File(KettleVFS.getFilename(data.file));
      if (meta.isAppend() && fle.exists()) {
        Workbook workbook=Workbook.getWorkbook(fle);
        data.workbook=Workbook.createWorkbook(fle,workbook);
        if (workbook != null)         workbook.close();
        if (data.workbook.getSheet(data.realSheetname) != null) {
          String listSheets[]=data.workbook.getSheetNames();
          for (int i=0; i < listSheets.length; i++) {
            if (listSheets[i].equals(data.realSheetname)) {
              data.workbook.removeSheet(i);
            }
          }
        }
        data.sheet=data.workbook.createSheet(data.realSheetname,data.workbook.getNumberOfSheets());
      }
 else {
        data.workbook=Workbook.createWorkbook(KettleVFS.getOutputStream(data.file,false),ws);
        String sheetname="Sheet1";
        data.sheet=data.workbook.getSheet(sheetname);
        if (data.sheet == null) {
          data.sheet=data.workbook.createSheet(sheetname,0);
        }
      }
    }
 else {
      FileObject fo=KettleVFS.getFileObject(environmentSubstitute(meta.getTemplateFileName()));
      Workbook tmpWorkbook=Workbook.getWorkbook(KettleVFS.getInputStream(fo),ws);
      data.workbook=Workbook.createWorkbook(KettleVFS.getOutputStream(data.file,false),tmpWorkbook);
      tmpWorkbook.close();
      data.sheet=data.workbook.getSheet(0);
      data.templateColumns=data.sheet.getColumns();
    }
    if (!Const.isEmpty(data.realSheetname)) {
      data.sheet.setName(data.realSheetname);
    }
    if (meta.isSheetProtected()) {
      data.sheet.getSettings().setProtected(true);
      data.sheet.getSettings().setPassword(environmentSubstitute(meta.getPassword()));
    }
    data.positionX=0;
    if (meta.isTemplateEnabled() && meta.isTemplateAppend()) {
      data.positionY=data.sheet.getRows();
    }
 else {
      data.positionY=0;
    }
    data.headerWrote=false;
    if (log.isDebug())     log.logDebug(toString(),BaseMessages.getString(PKG,"ExcelOutput.Log.FileOpened",buildFilename));
    retval=true;
  }
 catch (  Exception e) {
    logError("Error opening new file",e);
    setErrors(1);
  }
  data.splitnr++;
  return retval;
}
