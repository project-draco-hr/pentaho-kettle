{
  int errorCount=1;
  when(stepMockHelper.trans.getErrors()).thenReturn(errorCount);
  when(stepMockHelper.trans.isFinished()).thenReturn(Boolean.TRUE);
  simpleMpData.wasStarted=true;
  smp=new SimpleMapping(stepMockHelper.stepMeta,stepMockHelper.stepDataInterface,0,stepMockHelper.transMeta,stepMockHelper.trans);
  smp.init(stepMockHelper.initStepMetaInterface,simpleMpData);
  smp.dispose(stepMockHelper.processRowsStepMetaInterface,simpleMpData);
  verify(stepMockHelper.trans,times(1)).isFinished();
  verify(stepMockHelper.trans,never()).waitUntilFinished();
  verify(stepMockHelper.trans,never()).getActiveSubtransformations();
  verify(stepMockHelper.trans,times(1)).getErrors();
  assertTrue("The step contains the errors",smp.getErrors() == errorCount);
}
