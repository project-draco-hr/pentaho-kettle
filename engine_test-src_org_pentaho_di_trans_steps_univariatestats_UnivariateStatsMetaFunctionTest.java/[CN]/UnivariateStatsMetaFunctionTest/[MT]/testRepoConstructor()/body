{
  String jsString=IOUtils.toString(UnivariateStatsMetaTest.class.getClassLoader().getResourceAsStream("org/pentaho/di/trans/steps/univariatestats/trueValuesUnivariateStatsMetaFunctionNode.json"));
  Repository repo=new MemoryRepository(jsString);
  UnivariateStatsMetaFunction function=new UnivariateStatsMetaFunction(repo,new StringObjectId("test"),0);
  assertEquals("test",function.getSourceFieldName());
  assertTrue(function.getCalcN());
  assertTrue(function.getCalcMean());
  assertTrue(function.getCalcStdDev());
  assertTrue(function.getCalcMin());
  assertTrue(function.getCalcMax());
  assertTrue(function.getCalcMedian());
  assertEquals(0.5,function.getCalcPercentile(),0);
  assertTrue(function.getInterpolatePercentile());
  jsString=IOUtils.toString(UnivariateStatsMetaTest.class.getClassLoader().getResourceAsStream("org/pentaho/di/trans/steps/univariatestats/falseValuesUnivariateStatsMetaFunctionNode.json"));
  repo=new MemoryRepository(jsString);
  function=new UnivariateStatsMetaFunction(repo,new StringObjectId("test"),0);
  assertTrue(Utils.isEmpty(function.getSourceFieldName()));
  assertFalse(function.getCalcN());
  assertFalse(function.getCalcMean());
  assertFalse(function.getCalcStdDev());
  assertFalse(function.getCalcMin());
  assertFalse(function.getCalcMax());
  assertFalse(function.getCalcMedian());
  assertEquals(-1.0,function.getCalcPercentile(),0);
  assertFalse(function.getInterpolatePercentile());
}
