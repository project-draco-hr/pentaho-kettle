{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    xmlfilename=XMLHandler.getTagValue(entrynode,"xmlfilename");
    xslfilename=XMLHandler.getTagValue(entrynode,"xslfilename");
    outputfilename=XMLHandler.getTagValue(entrynode,"outputfilename");
    iffileexists=Const.toInt(XMLHandler.getTagValue(entrynode,"iffileexists"),-1);
    addfiletoresult="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"addfiletoresult"));
    filenamesfromprevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"filenamesfromprevious"));
    xsltfactory=XMLHandler.getTagValue(entrynode,"xsltfactory");
    if (xsltfactory == null) {
      xsltfactory=FACTORY_JAXP;
    }
    Node parametersNode=XMLHandler.getSubNode(entrynode,"parameters");
    int nrparams=XMLHandler.countNodes(parametersNode,"parameter");
    Node parametersOutputProps=XMLHandler.getSubNode(entrynode,"outputproperties");
    int nroutputprops=XMLHandler.countNodes(parametersOutputProps,"outputproperty");
    allocate(nrparams,nroutputprops);
    for (int i=0; i < nrparams; i++) {
      Node anode=XMLHandler.getSubNodeByNr(parametersNode,"parameter",i);
      parameterField[i]=XMLHandler.getTagValue(anode,"field");
      parameterName[i]=XMLHandler.getTagValue(anode,"name");
    }
    for (int i=0; i < nroutputprops; i++) {
      Node anode=XMLHandler.getSubNodeByNr(parametersOutputProps,"outputproperty",i);
      outputPropertyName[i]=XMLHandler.getTagValue(anode,"name");
      outputPropertyValue[i]=XMLHandler.getTagValue(anode,"value");
    }
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException("Unable to load job entry of type 'xslt' from XML node",xe);
  }
}
