{
  Object[] r=getRow();
  if (r == null) {
    if (data.processed > 0) {
      Object[] outputRowData=createOutputRow(data.previousRow);
      putRow(data.outputRowMeta,outputRowData);
    }
    setOutputDone();
    return false;
  }
  if (first) {
    data.inputRowMeta=getInputRowMeta();
    data.outputRowMeta=data.inputRowMeta.clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    data.fieldNr=data.inputRowMeta.indexOfValue(meta.getFieldName());
    if (data.fieldNr < 0) {
      logError(BaseMessages.getString(PKG,"Flattener.Log.FieldCouldNotFound",meta.getFieldName()));
      setErrors(1);
      stopAll();
      return false;
    }
    data.targetResult=new Object[meta.getTargetField().length];
    first=false;
  }
  data.targetResult[data.processed++]=r[data.fieldNr];
  if (data.processed >= meta.getTargetField().length) {
    Object[] outputRowData=createOutputRow(r);
    putRow(data.outputRowMeta,outputRowData);
    data.targetResult=new Object[meta.getTargetField().length];
    data.processed=0;
  }
  data.previousRow=r;
  if (checkFeedback(getLinesRead())) {
    logBasic(BaseMessages.getString(PKG,"Flattener.Log.LineNumber") + getLinesRead());
  }
  return true;
}
