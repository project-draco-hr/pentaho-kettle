{
  data.nullIf=new Value[meta.getValue().length];
  for (int i=0; i < meta.getValue().length; i++) {
    if (meta.getValueDefaultType()[i] < 0) {
      meta.getValueDefaultType()[i]=Value.VALUE_TYPE_STRING;
    }
    data.nullIf[i]=new Value(meta.getValueName()[i],meta.getValueDefaultType()[i]);
switch (meta.getValueDefaultType()[i]) {
case Value.VALUE_TYPE_STRING:
      if (Const.isEmpty(meta.getValueDefault()[i])) {
        data.nullIf[i].setNull();
      }
 else {
        data.nullIf[i].setValue(meta.getValueDefault()[i]);
      }
    break;
case Value.VALUE_TYPE_DATE:
  try {
    data.nullIf[i].setValue(DateFormat.getInstance().parse(meta.getValueDefault()[i]));
  }
 catch (  Exception e) {
    data.nullIf[i].setValue(new Date());
    data.nullIf[i].setNull();
  }
break;
case Value.VALUE_TYPE_NUMBER:
try {
data.nullIf[i].setValue(Double.parseDouble(meta.getValueDefault()[i]));
}
 catch (Exception e) {
data.nullIf[i].setValue(0.0);
data.nullIf[i].setNull();
}
break;
case Value.VALUE_TYPE_INTEGER:
try {
data.nullIf[i].setValue(Long.parseLong(meta.getValueDefault()[i]));
}
 catch (Exception e) {
data.nullIf[i].setValue(0L);
data.nullIf[i].setNull();
}
break;
case Value.VALUE_TYPE_BOOLEAN:
if ("TRUE".equalsIgnoreCase(meta.getValueDefault()[i]) || "Y".equalsIgnoreCase(meta.getValueDefault()[i])) data.nullIf[i].setValue(true);
 else data.nullIf[i].setValue(false);
;
break;
default :
data.nullIf[i].setNull();
break;
}
}
}
