{
  final int elementsAmount=100;
  final int shufflersAmount=5;
  final int searchersAmount=10;
  final RowMeta rowMeta=new RowMeta();
  for (int i=0; i < elementsAmount; i++) {
    rowMeta.addValueMeta(new ValueMetaString("meta_" + i));
  }
  final AtomicBoolean condition=new AtomicBoolean(true);
  List<Shuffler> shufflers=new ArrayList<Shuffler>(shufflersAmount);
  for (int i=0; i < shufflersAmount; i++) {
    shufflers.add(new Shuffler(condition,rowMeta,cycles));
  }
  List<Searcher> searchers=new ArrayList<Searcher>(searchersAmount);
  for (int i=0; i < searchersAmount; i++) {
    String name="meta_" + (new Random().nextInt(elementsAmount));
    assertTrue(rowMeta.indexOfValue(name) >= 0);
    searchers.add(new Searcher(condition,rowMeta,name));
  }
  ConcurrencyTestRunner.runAndCheckNoExceptionRaised(shufflers,searchers,condition);
}
