{
  final LoggingBuffer buff=new LoggingBuffer(10);
  assertEquals(10,buff.getMaxNrLines());
  assertEquals(0,buff.getLastBufferLineNr());
  assertEquals(0,buff.getNrLines());
  for (int i=1; i <= 20; i++) {
    buff.addLogggingEvent(new KettleLoggingEvent("Test #" + i + Const.CR+ "Hello World!",Long.valueOf(i),LogLevel.DETAILED));
  }
  assertEquals(10,buff.getNrLines());
  int i=11;
  Iterator<BufferLine> it=buff.getBufferIterator();
  assertNotNull(it);
  while (it.hasNext()) {
    BufferLine bl=it.next();
    assertNotNull(bl.getEvent());
    assertEquals("Test #" + i + Const.CR+ "Hello World!",bl.getEvent().getMessage());
    assertEquals(Long.valueOf(i).longValue(),bl.getEvent().getTimeStamp());
    assertEquals(LogLevel.DETAILED,bl.getEvent().getLevel());
    i++;
  }
  assertEquals(i,21);
  assertEquals(0,buff.getBufferLinesBefore(10L).size());
  assertEquals(5,buff.getBufferLinesBefore(16L).size());
  assertEquals(10,buff.getBufferLinesBefore(System.currentTimeMillis()).size());
  buff.clear();
  assertEquals(0,buff.getNrLines());
  it=buff.getBufferIterator();
  assertNotNull(it);
  while (it.hasNext()) {
    fail("This should never be reached, as the LogBuffer is empty");
  }
}
