{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ValueMapperDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"ValueMapperDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlFieldname=new Label(shell,SWT.RIGHT);
  wlFieldname.setText(BaseMessages.getString(PKG,"ValueMapperDialog.FieldnameToUser.Label"));
  props.setLook(wlFieldname);
  fdlFieldname=new FormData();
  fdlFieldname.left=new FormAttachment(0,0);
  fdlFieldname.right=new FormAttachment(middle,-margin);
  fdlFieldname.top=new FormAttachment(wStepname,margin);
  wlFieldname.setLayoutData(fdlFieldname);
  wFieldname=new CCombo(shell,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wFieldname);
  wFieldname.addModifyListener(lsMod);
  fdFieldname=new FormData();
  fdFieldname.left=new FormAttachment(middle,0);
  fdFieldname.top=new FormAttachment(wStepname,margin);
  fdFieldname.right=new FormAttachment(100,0);
  wFieldname.setLayoutData(fdFieldname);
  wFieldname.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlTargetFieldname=new Label(shell,SWT.RIGHT);
  wlTargetFieldname.setText(BaseMessages.getString(PKG,"ValueMapperDialog.TargetFieldname.Label"));
  props.setLook(wlTargetFieldname);
  fdlTargetFieldname=new FormData();
  fdlTargetFieldname.left=new FormAttachment(0,0);
  fdlTargetFieldname.right=new FormAttachment(middle,-margin);
  fdlTargetFieldname.top=new FormAttachment(wFieldname,margin);
  wlTargetFieldname.setLayoutData(fdlTargetFieldname);
  wTargetFieldname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTargetFieldname);
  wTargetFieldname.addModifyListener(lsMod);
  fdTargetFieldname=new FormData();
  fdTargetFieldname.left=new FormAttachment(middle,0);
  fdTargetFieldname.top=new FormAttachment(wFieldname,margin);
  fdTargetFieldname.right=new FormAttachment(100,0);
  wTargetFieldname.setLayoutData(fdTargetFieldname);
  wlNonMatchDefault=new Label(shell,SWT.RIGHT);
  wlNonMatchDefault.setText(BaseMessages.getString(PKG,"ValueMapperDialog.NonMatchDefault.Label"));
  props.setLook(wlNonMatchDefault);
  fdlNonMatchDefault=new FormData();
  fdlNonMatchDefault.left=new FormAttachment(0,0);
  fdlNonMatchDefault.right=new FormAttachment(middle,-margin);
  fdlNonMatchDefault.top=new FormAttachment(wTargetFieldname,margin);
  wlNonMatchDefault.setLayoutData(fdlNonMatchDefault);
  wNonMatchDefault=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wNonMatchDefault);
  wNonMatchDefault.addModifyListener(lsMod);
  fdNonMatchDefault=new FormData();
  fdNonMatchDefault.left=new FormAttachment(middle,0);
  fdNonMatchDefault.top=new FormAttachment(wTargetFieldname,margin);
  fdNonMatchDefault.right=new FormAttachment(100,0);
  wNonMatchDefault.setLayoutData(fdNonMatchDefault);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"ValueMapperDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wNonMatchDefault,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsCols=2;
  final int FieldsRows=input.getSourceValue().length;
  ColumnInfo[] colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(BaseMessages.getString(PKG,"ValueMapperDialog.Fields.Column.SourceValue"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[1]=new ColumnInfo(BaseMessages.getString(PKG,"ValueMapperDialog.Fields.Column.TargetValue"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wFields);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
