{
  File bcpFile=new File(bcpFilename);
  FileWriter writer=null;
  try {
    writer=new FileWriter(bcpFile);
    writer.write("9.0" + Const.CR);
    writer.write(meta.getFieldTable().length + Const.CR);
    for (int i=0; i < meta.getFieldTable().length; i++) {
      ValueMetaInterface field=getInputRowMeta().getValueMeta(data.keynrs[i]);
      writer.write(Integer.toString(i + 1) + " ");
      String dataType=null;
switch (field.getType()) {
case ValueMetaInterface.TYPE_STRING:
        dataType="SQLVARCHAR";
      break;
case ValueMetaInterface.TYPE_BIGNUMBER:
    dataType="SQLREAL";
  break;
case ValueMetaInterface.TYPE_NUMBER:
dataType="SQLREAL";
break;
case ValueMetaInterface.TYPE_INTEGER:
dataType="SQLBIGINT";
break;
case ValueMetaInterface.TYPE_DATE:
dataType="SQLTIMESTAMP";
break;
case ValueMetaInterface.TYPE_BOOLEAN:
dataType="SQLCHAR";
break;
default :
dataType="SQLVARCHAR";
break;
}
writer.write(dataType + " ");
writer.write("0 ");
writer.write("" + field.getLength() + " ");
writer.write("\"\\t\" ");
writer.write(Integer.toString(i + 1) + " ");
writer.write(meta.getFieldTable()[i] + " ");
writer.write("\"\" ");
writer.write(Const.CR);
}
}
 catch (Exception e) {
throw new KettleException("Unable to create BCP control file",e);
}
 finally {
if (writer != null) {
try {
writer.close();
}
 catch (IOException e) {
throw new KettleException("Unable to close BCP file '" + bcpFilename + "'",e);
}
}
}
}
