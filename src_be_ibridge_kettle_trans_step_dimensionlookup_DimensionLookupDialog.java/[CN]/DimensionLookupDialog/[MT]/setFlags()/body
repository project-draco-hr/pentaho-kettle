{
  boolean enable=ci == null || ci.supportsAutoinc();
  wlAutoinc.setEnabled(enable);
  wAutoinc.setEnabled(enable);
  boolean seq=ci == null || ci.supportsSequences();
  wlSeq.setEnabled(seq);
  wSeq.setEnabled(seq);
  ColumnInfo colinf=new ColumnInfo("Type",ColumnInfo.COLUMN_TYPE_CCOMBO,input.isUpdate() ? DimensionLookupMeta.typeDesc : DimensionLookupMeta.typeDescLookup);
  wUpIns.setColumnInfo(2,colinf);
  if (input.isUpdate()) {
    wUpIns.setColumnText(2,"Stream field to compare with");
    wUpIns.setColumnText(3,"Type of dimension update");
    wUpIns.setColumnToolTip(2,"Insert: Kimball Type II" + Const.CR + "Punch Through: Kimball Type I"+ Const.CR+ "Update: Correct error in last version");
  }
 else {
    wUpIns.setColumnText(2,"New name of output field");
    wUpIns.setColumnText(3,"Type of return field");
    wUpIns.setColumnToolTip(2,"Select the type of the value to return.");
  }
  wUpIns.optWidth(true);
  wlCommit.setEnabled(wUpdate.getSelection());
  wCommit.setEnabled(wUpdate.getSelection());
  wlAutoinc.setEnabled(wUpdate.getSelection());
  wAutoinc.setEnabled(wUpdate.getSelection());
  wlSeq.setEnabled(wUpdate.getSelection());
  wSeq.setEnabled(wUpdate.getSelection());
  wlMinyear.setEnabled(wUpdate.getSelection());
  wMinyear.setEnabled(wUpdate.getSelection());
  wlMaxyear.setEnabled(wUpdate.getSelection());
  wMaxyear.setEnabled(wUpdate.getSelection());
  wlMinyear.setEnabled(wUpdate.getSelection());
  wMinyear.setEnabled(wUpdate.getSelection());
}
