{
  if (Const.isEmpty(wStepname.getText())) {
    return;
  }
  stepname=wStepname.getText();
  input.setEmptyStringAll(wSetEmptyStringAll.getSelection());
  if (wSetEmptyStringAll.getSelection()) {
    input.setReplaceAllByValue("");
    input.setReplaceAllMask("");
  }
 else {
    input.setReplaceAllByValue(wReplaceByValue.getText());
    input.setReplaceAllMask(wMask.getText());
  }
  input.setSelectFields(wSelectFields.getSelection());
  input.setSelectValuesType(wSelectValuesType.getSelection());
  int nrtypes=wValueTypes.nrNonEmpty();
  int nrfields=wFields.nrNonEmpty();
  input.allocate(nrtypes,nrfields);
  for (int i=0; i < nrtypes; i++) {
    TableItem ti=wValueTypes.getNonEmpty(i);
    input.getValueTypes()[i].setTypeName(ti.getText(1));
    input.getValueTypes()[i].setTypeEmptyString(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(ti.getText(4)));
    if (input.getValueTypes()[i].isSetTypeEmptyString()) {
      input.getValueTypes()[i].setTypereplaceValue("");
      input.getValueTypes()[i].setTypereplaceMask("");
    }
 else {
      input.getValueTypes()[i].setTypereplaceValue(ti.getText(2));
      input.getValueTypes()[i].setTypereplaceMask(ti.getText(3));
    }
  }
  for (int i=0; i < nrfields; i++) {
    TableItem ti=wFields.getNonEmpty(i);
    input.getFields()[i].setFieldName(ti.getText(1));
    input.getFields()[i].setEmptyString(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(ti.getText(4)));
    if (input.getFields()[i].isSetEmptyString()) {
      input.getFields()[i].setReplaceValue("");
      input.getFields()[i].setReplaceMask("");
    }
 else {
      input.getFields()[i].setReplaceValue(ti.getText(2));
      input.getFields()[i].setReplaceMask(ti.getText(3));
    }
  }
  dispose();
}
