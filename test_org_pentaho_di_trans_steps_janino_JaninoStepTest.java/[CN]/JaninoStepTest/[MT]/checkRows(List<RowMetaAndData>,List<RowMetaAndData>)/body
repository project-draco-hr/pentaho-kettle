{
  int idx=1;
  if (rows1.size() != rows2.size()) {
    fail("Number of rows is not the same: " + rows1.size() + " and "+ rows2.size());
  }
  Iterator<RowMetaAndData> it1=rows1.iterator();
  Iterator<RowMetaAndData> it2=rows2.iterator();
  while (it1.hasNext() && it2.hasNext()) {
    RowMetaAndData rm1=it1.next();
    RowMetaAndData rm2=it2.next();
    Object[] r1=rm1.getData();
    Object[] r2=rm2.getData();
    if (rm1.size() != rm2.size()) {
      fail("row nr " + idx + " is not equal");
    }
    int fields[]=new int[rm1.size()];
    for (int ydx=0; ydx < rm1.size(); ydx++) {
      fields[ydx]=ydx;
    }
    try {
      if (rm1.getRowMeta().compare(r1,r2,fields) != 0) {
        fail("row nr " + idx + "i s not equal ("+ rm1.getRowMeta().getString(r1)+ " != "+ rm1.getRowMeta().getString(r2)+ ")");
      }
    }
 catch (    KettleValueException e) {
      fail("row nr " + idx + " is not equal");
    }
    idx++;
  }
}
