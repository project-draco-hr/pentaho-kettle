{
  this.filename=createFilename(sharedObjectsFile);
  this.databases=databases;
  this.counters=counters;
  this.objectsMap=new Hashtable();
  Document document=XMLHandler.loadXMLFile(new File(filename));
  Node sharedObjectsNode=XMLHandler.getSubNode(document,XML_TAG);
  if (sharedObjectsNode != null) {
    NodeList childNodes=sharedObjectsNode.getChildNodes();
    for (int i=0; i < childNodes.getLength(); i++) {
      Node node=childNodes.item(i);
      String nodeName=node.getNodeName();
      SharedObjectInterface isShared=null;
      if (nodeName.equals(DatabaseMeta.XML_TAG))       isShared=new DatabaseMeta(node);
 else       if (nodeName.equals(StepMeta.XML_TAG)) {
        StepMeta stepMeta=new StepMeta(node,databases,counters);
        stepMeta.setDraw(false);
        isShared=stepMeta;
      }
 else       if (nodeName.equals(PartitionSchema.XML_TAG))       isShared=new PartitionSchema(node);
 else       if (nodeName.equals(ClusterSchema.XML_TAG))       isShared=new ClusterSchema(node);
      if (isShared != null) {
        isShared.setShared(true);
        storeObject(isShared);
      }
    }
  }
}
