{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("Table output");
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText("Step name ");
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabase() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText("Target table ");
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wConnection,margin * 2);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText("&Browse...");
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wConnection,margin);
  wbTable.setLayoutData(fdbTable);
  wbcTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbcTable);
  wbcTable.setText("&Variable...");
  fdbcTable=new FormData();
  fdbcTable.right=new FormAttachment(wbTable,0);
  fdbcTable.top=new FormAttachment(wConnection,margin);
  wbcTable.setLayoutData(fdbcTable);
  wTable=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  fdTable=new FormData();
  fdTable.top=new FormAttachment(wConnection,margin * 2);
  fdTable.left=new FormAttachment(middle,0);
  fdTable.right=new FormAttachment(wbcTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText("Commit size ");
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.right=new FormAttachment(middle,-margin);
  fdlCommit.top=new FormAttachment(wbTable,margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wbTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlTruncate=new Label(shell,SWT.RIGHT);
  wlTruncate.setText("Truncate table ");
  props.setLook(wlTruncate);
  fdlTruncate=new FormData();
  fdlTruncate.left=new FormAttachment(0,0);
  fdlTruncate.top=new FormAttachment(wCommit,margin);
  fdlTruncate.right=new FormAttachment(middle,-margin);
  wlTruncate.setLayoutData(fdlTruncate);
  wTruncate=new Button(shell,SWT.CHECK);
  props.setLook(wTruncate);
  fdTruncate=new FormData();
  fdTruncate.left=new FormAttachment(middle,0);
  fdTruncate.top=new FormAttachment(wCommit,margin);
  fdTruncate.right=new FormAttachment(100,0);
  wTruncate.setLayoutData(fdTruncate);
  SelectionAdapter lsSelMod=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wTruncate.addSelectionListener(lsSelMod);
  wlIgnore=new Label(shell,SWT.RIGHT);
  wlIgnore.setText("Ignore insert errors ");
  props.setLook(wlIgnore);
  fdlIgnore=new FormData();
  fdlIgnore.left=new FormAttachment(0,0);
  fdlIgnore.top=new FormAttachment(wTruncate,margin);
  fdlIgnore.right=new FormAttachment(middle,-margin);
  wlIgnore.setLayoutData(fdlIgnore);
  wIgnore=new Button(shell,SWT.CHECK);
  props.setLook(wIgnore);
  fdIgnore=new FormData();
  fdIgnore.left=new FormAttachment(middle,0);
  fdIgnore.top=new FormAttachment(wTruncate,margin);
  fdIgnore.right=new FormAttachment(100,0);
  wIgnore.setLayoutData(fdIgnore);
  wIgnore.addSelectionListener(lsSelMod);
  wlBatch=new Label(shell,SWT.RIGHT);
  wlBatch.setText("Use batch update for inserts");
  props.setLook(wlBatch);
  fdlBatch=new FormData();
  fdlBatch.left=new FormAttachment(0,0);
  fdlBatch.top=new FormAttachment(wIgnore,margin);
  fdlBatch.right=new FormAttachment(middle,-margin);
  wlBatch.setLayoutData(fdlBatch);
  wBatch=new Button(shell,SWT.CHECK);
  props.setLook(wBatch);
  fdBatch=new FormData();
  fdBatch.left=new FormAttachment(middle,0);
  fdBatch.top=new FormAttachment(wIgnore,margin);
  fdBatch.right=new FormAttachment(100,0);
  wBatch.setLayoutData(fdBatch);
  wBatch.addSelectionListener(lsSelMod);
  wBatch.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlUsePart=new Label(shell,SWT.RIGHT);
  wlUsePart.setText("Partition data over tables");
  wlUsePart.setToolTipText("Moves data into table TABLENAME_YYYYMMDD or TABLENAME_YYYYMM based on the partitioning field" + Const.CR + "For example, SALES_200503, SALES_200504, ...");
  props.setLook(wlUsePart);
  fdlUsePart=new FormData();
  fdlUsePart.left=new FormAttachment(0,0);
  fdlUsePart.top=new FormAttachment(wBatch,margin * 3);
  fdlUsePart.right=new FormAttachment(middle,-margin);
  wlUsePart.setLayoutData(fdlUsePart);
  wUsePart=new Button(shell,SWT.CHECK);
  props.setLook(wUsePart);
  fdUsePart=new FormData();
  fdUsePart.left=new FormAttachment(middle,0);
  fdUsePart.top=new FormAttachment(wBatch,margin * 3);
  fdUsePart.right=new FormAttachment(100,0);
  wUsePart.setLayoutData(fdUsePart);
  wUsePart.addSelectionListener(lsSelMod);
  wUsePart.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlPartField=new Label(shell,SWT.RIGHT);
  wlPartField.setText("Partitioning field ");
  props.setLook(wlPartField);
  fdlPartField=new FormData();
  fdlPartField.top=new FormAttachment(wUsePart,margin);
  fdlPartField.left=new FormAttachment(0,0);
  fdlPartField.right=new FormAttachment(middle,-margin);
  wlPartField.setLayoutData(fdlPartField);
  wPartField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPartField);
  wPartField.addModifyListener(lsMod);
  fdPartField=new FormData();
  fdPartField.top=new FormAttachment(wUsePart,margin);
  fdPartField.left=new FormAttachment(middle,0);
  fdPartField.right=new FormAttachment(100,0);
  wPartField.setLayoutData(fdPartField);
  wlPartMonthly=new Label(shell,SWT.RIGHT);
  wlPartMonthly.setText("Partition data per month");
  wlPartMonthly.setToolTipText("Moves data into table TABLENAME_YYYYMM based on the partitioning field" + Const.CR + "For example, SALES_200503, SALES_200504, ...");
  props.setLook(wlPartMonthly);
  fdlPartMonthly=new FormData();
  fdlPartMonthly.left=new FormAttachment(0,0);
  fdlPartMonthly.top=new FormAttachment(wPartField,margin);
  fdlPartMonthly.right=new FormAttachment(middle,-margin);
  wlPartMonthly.setLayoutData(fdlPartMonthly);
  wPartMonthly=new Button(shell,SWT.RADIO);
  props.setLook(wPartMonthly);
  fdPartMonthly=new FormData();
  fdPartMonthly.left=new FormAttachment(middle,0);
  fdPartMonthly.top=new FormAttachment(wPartField,margin);
  fdPartMonthly.right=new FormAttachment(100,0);
  wPartMonthly.setLayoutData(fdPartMonthly);
  wPartMonthly.addSelectionListener(lsSelMod);
  wPartMonthly.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wPartMonthly.setSelection(true);
      wPartDaily.setSelection(false);
    }
  }
);
  wlPartDaily=new Label(shell,SWT.RIGHT);
  wlPartDaily.setText("Partition data per day");
  wlPartDaily.setToolTipText("Moves data into table TABLENAME_YYYYMMDD based on the partitioning field" + Const.CR + "For example, SALES_20050301, SALES_20050301, ...");
  props.setLook(wlPartDaily);
  fdlPartDaily=new FormData();
  fdlPartDaily.left=new FormAttachment(0,0);
  fdlPartDaily.top=new FormAttachment(wPartMonthly,margin);
  fdlPartDaily.right=new FormAttachment(middle,-margin);
  wlPartDaily.setLayoutData(fdlPartDaily);
  wPartDaily=new Button(shell,SWT.RADIO);
  props.setLook(wPartDaily);
  fdPartDaily=new FormData();
  fdPartDaily.left=new FormAttachment(middle,0);
  fdPartDaily.top=new FormAttachment(wPartMonthly,margin);
  fdPartDaily.right=new FormAttachment(100,0);
  wPartDaily.setLayoutData(fdPartDaily);
  wPartDaily.addSelectionListener(lsSelMod);
  wPartDaily.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wPartDaily.setSelection(true);
      wPartMonthly.setSelection(false);
    }
  }
);
  wlNameInField=new Label(shell,SWT.RIGHT);
  wlNameInField.setText("Is the name of the table defined in a field? ");
  props.setLook(wlNameInField);
  fdlNameInField=new FormData();
  fdlNameInField.left=new FormAttachment(0,0);
  fdlNameInField.top=new FormAttachment(wPartDaily,margin);
  fdlNameInField.right=new FormAttachment(middle,-margin);
  wlNameInField.setLayoutData(fdlNameInField);
  wNameInField=new Button(shell,SWT.CHECK);
  props.setLook(wNameInField);
  fdNameInField=new FormData();
  fdNameInField.left=new FormAttachment(middle,0);
  fdNameInField.top=new FormAttachment(wPartDaily,margin);
  fdNameInField.right=new FormAttachment(100,0);
  wNameInField.setLayoutData(fdNameInField);
  wNameInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlNameField=new Label(shell,SWT.RIGHT);
  wlNameField.setText("Field that contains name of table: ");
  props.setLook(wlNameField);
  fdlNameField=new FormData();
  fdlNameField.left=new FormAttachment(0,0);
  fdlNameField.right=new FormAttachment(middle,-margin);
  fdlNameField.top=new FormAttachment(wNameInField,margin);
  wlNameField.setLayoutData(fdlNameField);
  wNameField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wNameField);
  wNameField.addModifyListener(lsMod);
  fdNameField=new FormData();
  fdNameField.left=new FormAttachment(middle,0);
  fdNameField.top=new FormAttachment(wNameInField,margin);
  fdNameField.right=new FormAttachment(100,0);
  wNameField.setLayoutData(fdNameField);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText("  &OK  ");
  wCreate=new Button(shell,SWT.PUSH);
  wCreate.setText("  &SQL  ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText("  &Cancel  ");
  setButtonPositions(new Button[]{wOK,wCreate,wCancel},margin,wNameField);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCreate=new Listener(){
    public void handleEvent(    Event e){
      sql();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCreate.addListener(SWT.Selection,lsCreate);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wCommit.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wbcTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      Properties sp=System.getProperties();
      Enumeration keys=sp.keys();
      int size=sp.values().size();
      String key[]=new String[size];
      String val[]=new String[size];
      String str[]=new String[size];
      int i=0;
      while (keys.hasMoreElements()) {
        key[i]=(String)keys.nextElement();
        val[i]=sp.getProperty(key[i]);
        str[i]=key[i] + "  [" + val[i]+ "]";
        i++;
      }
      EnterSelectionDialog esd=new EnterSelectionDialog(shell,props,str,"Select an Environment Variable","Select an Environment Variable");
      if (esd.open() != null) {
        int nr=esd.getSelectionNr();
        wTable.insert("%%" + key[nr] + "%%");
        wTable.setToolTipText(Const.replEnv(wTable.getText()));
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
