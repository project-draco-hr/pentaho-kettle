{
  try {
    UIManager.setLookAndFeel(new MetalLookAndFeel());
    Display display=null;
    if (System.getProperties().containsKey("SLEAK")) {
      DeviceData data=new DeviceData();
      data.tracking=true;
      display=new Display(data);
      Sleak sleak=new Sleak();
      sleak.open();
    }
 else {
      display=new Display();
    }
    Splash splash=null;
    registerUIPluginObjectTypes();
    KettleEnvironment.init();
    List<String> args=new ArrayList<String>(java.util.Arrays.asList(a));
    CommandLineOption[] commandLineOptions=getCommandLineArgs(args);
    initLogging(commandLineOptions);
    PropsUI.init(display,Props.TYPE_PROPERTIES_SPOON);
    CentralLogStore.init(PropsUI.getInstance().getMaxNrLinesInLog(),PropsUI.getInstance().getMaxLogLineTimeoutMinutes());
    staticSpoon=new Spoon(display);
    staticSpoon.init(null);
    SpoonFactory.setSpoonInstance(staticSpoon);
    staticSpoon.setDestroy(true);
    GUIFactory.setThreadDialogs(new ThreadGuiResources());
    try {
      staticSpoon.lifecycleSupport.onStart(staticSpoon);
    }
 catch (    LifecycleException e) {
      MessageBox box=new MessageBox(staticSpoon.shell,(e.isSevere() ? SWT.ICON_ERROR : SWT.ICON_WARNING) | SWT.OK);
      box.setMessage(e.getMessage());
      box.open();
    }
    staticSpoon.setArguments(args.toArray(new String[args.size()]));
    staticSpoon.start(splash,commandLineOptions);
  }
 catch (  Throwable t) {
    t.printStackTrace();
    if (staticSpoon != null) {
      log.logError("Fatal error : " + Const.NVL(t.toString(),Const.NVL(t.getMessage(),"Unknown error")));
      log.logError(Const.getStackTracker(t));
    }
  }
  System.exit(0);
}
