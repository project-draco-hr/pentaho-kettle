{
  boolean useRepository=repositoryMeta != null;
  if (lastUsedFile.isSourceRepository()) {
    if (!Const.isEmpty(lastUsedFile.getRepositoryName())) {
      if (useRepository && !lastUsedFile.getRepositoryName().equalsIgnoreCase(repositoryMeta.getName())) {
        useRepository=false;
      }
    }
  }
  if (useRepository && lastUsedFile.isSourceRepository()) {
    if (rep != null) {
      if (rep.getName().equalsIgnoreCase(lastUsedFile.getRepositoryName())) {
        RepositoryDirectory repdir=rep.getDirectoryTree().findDirectory(lastUsedFile.getDirectory());
        if (repdir != null) {
          if (lastUsedFile.isTransformation()) {
            log.logDetailed(toString(),Messages.getString("Spoon.Log.AutoLoadingTransformation",lastUsedFile.getFilename(),lastUsedFile.getDirectory()));
            TransLoadProgressDialog tlpd=new TransLoadProgressDialog(shell,rep,lastUsedFile.getFilename(),repdir);
            TransMeta transMeta=tlpd.open();
            if (transMeta != null) {
              props.addLastFile(LastUsedFile.FILE_TYPE_TRANSFORMATION,lastUsedFile.getFilename(),repdir.getPath(),true,rep.getName());
              transMeta.setFilename(lastUsedFile.getFilename());
              transMeta.clearChanged();
              addTransGraph(transMeta);
              refreshTree();
            }
          }
 else           if (lastUsedFile.isJob()) {
            JobLoadProgressDialog progressDialog=new JobLoadProgressDialog(shell,rep,lastUsedFile.getFilename(),repdir);
            JobMeta jobMeta=progressDialog.open();
            props.addLastFile(LastUsedFile.FILE_TYPE_JOB,lastUsedFile.getFilename(),repdir.getPath(),true,rep.getName());
            jobMeta.clearChanged();
            delegates.jobs.addJobGraph(jobMeta);
          }
          refreshTree();
        }
      }
    }
  }
  if (!lastUsedFile.isSourceRepository() && !Const.isEmpty(lastUsedFile.getFilename())) {
    if (lastUsedFile.isTransformation()) {
      openFile(lastUsedFile.getFilename(),false);
    }
    if (lastUsedFile.isJob()) {
      openFile(lastUsedFile.getFilename(),false);
    }
    refreshTree();
  }
}
