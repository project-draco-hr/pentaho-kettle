{
  boolean stop=!selectRep(splash,options);
  if (stop) {
    splash.dispose();
    stop=quitFile();
  }
  if (!stop) {
    handleStartOptions(options);
    open();
    if (props.showTips()) {
      TipsDialog tip=new TipsDialog(shell);
      tip.open();
    }
    if (splash != null) {
      splash.dispose();
    }
    boolean retryAfterError=false;
    do {
      retryAfterError=false;
      try {
        while (!isDisposed()) {
          if (!readAndDispatch())           sleep();
        }
      }
 catch (      Throwable e) {
        log.logError(toString(),Messages.getString("Spoon.Log.UnexpectedErrorOccurred") + Const.CR + e.getMessage());
        log.logError(toString(),Const.getStackTracker(e));
        try {
          new ErrorDialog(shell,Messages.getString("Spoon.Log.UnexpectedErrorOccurred"),Messages.getString("Spoon.Log.UnexpectedErrorOccurred") + Const.CR + e.getMessage(),e);
          MessageBox mb=new MessageBox(shell,SWT.ICON_QUESTION | SWT.NO | SWT.YES);
          mb.setText(Messages.getString("Spoon.Log.UnexpectedErrorRetry.Titel"));
          mb.setMessage(Messages.getString("Spoon.Log.UnexpectedErrorRetry.Message"));
          if (mb.open() == SWT.YES)           retryAfterError=true;
        }
 catch (        Throwable e1) {
        }
      }
    }
 while (retryAfterError);
    dispose();
    if (log.isBasic())     log.logBasic(toString(),APP_NAME + " " + Messages.getString("Spoon.Log.AppHasEnded"));
    log.close();
  }
}
