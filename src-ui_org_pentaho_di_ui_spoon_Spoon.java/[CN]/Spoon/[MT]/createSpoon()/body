{
  StringBuffer optionLogfile=getCommandLineOption("logfile").getArgument();
  StringBuffer optionLoglevel=getCommandLineOption("level").getArgument();
  String version=Const.JAVA_VERSION;
  if ("1.5".compareToIgnoreCase(version) > 0) {
    System.out.println("The System is running on Java version " + version);
    System.out.println("Unfortunately, it needs version 1.5 or higher to run.");
    return;
  }
  Locale.setDefault(Const.DEFAULT_LOCALE);
  LogWriter.setConsoleAppenderDebug();
  if (Const.isEmpty(optionLogfile)) {
    log=LogWriter.getInstance(Const.SPOON_LOG_FILE,false,LogWriter.LOG_LEVEL_BASIC);
  }
 else {
    log=LogWriter.getInstance(optionLogfile.toString(),true,LogWriter.LOG_LEVEL_BASIC);
  }
  if (log.getRealFilename() != null)   log.logBasic(toString(),Messages.getString("Spoon.Log.LoggingToFile") + log.getRealFilename());
  if (!Const.isEmpty(optionLoglevel)) {
    log.setLogLevel(optionLoglevel.toString());
    log.logBasic(toString(),Messages.getString("Spoon.Log.LoggingAtLevel") + log.getLogLevelDesc());
  }
  StepLoader stloader=StepLoader.getInstance();
  if (!stloader.read()) {
    log.logError(toString(),Messages.getString("Spoon.Log.ErrorLoadingAndHaltSystem"));
    return;
  }
  JobEntryLoader jeloader=JobEntryLoader.getInstance();
  if (!jeloader.read()) {
    log.logError(toString(),"Error loading job entries & plugins... halting Spoon!");
    return;
  }
  init(null);
  SpoonFactory.setSpoonInstance(this);
  staticSpoon=this;
  setDestroy(true);
  GUIFactory.setThreadDialogs(new ThreadGuiResources());
  log.logBasic(toString(),Messages.getString("Spoon.Log.MainWindowCreated"));
}
