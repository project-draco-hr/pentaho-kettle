{
  Map<String,DatabaseMeta> map=new Hashtable<String,DatabaseMeta>();
  HasDatabasesInterface hasDatabasesInterface=getActiveHasDatabasesInterface();
  if (hasDatabasesInterface != null) {
    for (int i=0; i < hasDatabasesInterface.nrDatabases(); i++) {
      map.put(hasDatabasesInterface.getDatabase(i).getName(),hasDatabasesInterface.getDatabase(i));
    }
  }
  if (rep != null) {
    try {
      List<DatabaseMeta> repDBs=rep.readDatabases();
      for (int i=0; i < repDBs.size(); i++) {
        DatabaseMeta databaseMeta=(DatabaseMeta)repDBs.get(i);
        map.put(databaseMeta.getName(),databaseMeta);
      }
    }
 catch (    Exception e) {
      log.logError("Unexpected error reading databases from the repository: " + e.toString());
      log.logError(Const.getStackTracker(e));
    }
  }
  List<DatabaseMeta> databases=new ArrayList<DatabaseMeta>();
  databases.addAll(map.values());
  return databases;
}
