{
  Composite composite=new Composite(sashform,SWT.NONE);
  props.setLook(composite);
  FillLayout fillLayout=new FillLayout();
  fillLayout.spacing=Const.MARGIN;
  fillLayout.marginHeight=Const.MARGIN;
  fillLayout.marginWidth=Const.MARGIN;
  composite.setLayout(fillLayout);
  mainExpandBar=new ExpandBar(composite,SWT.V_SCROLL);
  props.setLook(mainExpandBar);
  mainExpandBar.setSpacing(0);
  mainExpandBar.addExpandListener(new ExpandAdapter(){
    public void itemExpanded(    ExpandEvent event){
      ExpandItem item=(ExpandItem)event.item;
      int idx=mainExpandBar.indexOf(item);
      if (idx >= 0) {
        for (int i=0; i < mainExpandBar.getItemCount(); i++)         if (i != idx)         mainExpandBar.getItem(i).setExpanded(false);
        Control control=item.getControl();
        control.setFocus();
        refreshCoreObjectsHistory();
      }
    }
  }
);
  selectionTree=new Tree(mainExpandBar,SWT.SINGLE | SWT.BORDER);
  props.setLook(selectionTree);
  selectionTree.setLayout(new FillLayout());
  ExpandItem treeItem=new ExpandItem(mainExpandBar,SWT.NONE);
  treeItem.setControl(selectionTree);
  treeItem.setHeight(shell.getBounds().height);
  setHeaderImage(treeItem,GUIResource.getInstance().getImageLogoSmall(),STRING_SPOON_MAIN_TREE,0,true);
  TreeMemory.addTreeListener(selectionTree,STRING_SPOON_MAIN_TREE);
  selectionTree.addMouseListener(new MouseAdapter(){
    public void mouseDown(    MouseEvent event){
      if (event.button == 3) {
        setMenu(selectionTree);
      }
    }
  }
);
  selectionTree.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      showSelection();
    }
  }
);
  selectionTree.addSelectionListener(new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      doubleClickedInTree(selectionTree);
    }
  }
);
  selectionTree.addKeyListener(defKeys);
  addDragSourceToTree(selectionTree);
  mainExpandBar.addKeyListener(defKeys);
  mainExpandBar.addListener(SWT.Resize,new Listener(){
    public void handleEvent(    Event event){
      resizeExpandBar(mainExpandBar);
    }
  }
);
}
