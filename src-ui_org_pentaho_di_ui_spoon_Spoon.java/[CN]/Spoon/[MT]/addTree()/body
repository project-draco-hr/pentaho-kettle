{
  Color background=GUIResource.getInstance().getColorLightPentaho();
  mainComposite=new Composite(sashform,SWT.BORDER);
  mainComposite.setBackground(background);
  mainComposite.setLayout(new FormLayout());
  int mainMargin=4;
  Label sep0=new Label(mainComposite,SWT.SEPARATOR | SWT.HORIZONTAL);
  sep0.setBackground(background);
  FormData fdSep0=new FormData();
  fdSep0.left=new FormAttachment(0,0);
  fdSep0.right=new FormAttachment(100,0);
  fdSep0.top=new FormAttachment(0,0);
  sep0.setLayoutData(fdSep0);
  Control lastControl=sep0;
  treeButtonImage=new Label(mainComposite,SWT.NONE);
  treeButtonImage.setBackground(background);
  treeButtonImage.setImage(GUIResource.getInstance().getImageLogoSmall());
  FormData fdTreeButtonImage=new FormData();
  fdTreeButtonImage.left=new FormAttachment(5,0);
  fdTreeButtonImage.top=new FormAttachment(lastControl,mainMargin);
  treeButtonImage.setLayoutData(fdTreeButtonImage);
  treeButton=new Label(mainComposite,SWT.LEFT);
  treeButton.setBackground(background);
  treeButton.setFont(GUIResource.getInstance().getFontMedium());
  treeButton.setText(STRING_SPOON_MAIN_TREE);
  treeButton.setToolTipText(Messages.getString("Spoon.MainTree.Tooltip"));
  FormData fdTreeButton=new FormData();
  fdTreeButton.left=new FormAttachment(treeButtonImage,5);
  fdTreeButton.right=new FormAttachment(95,0);
  fdTreeButton.top=new FormAttachment(lastControl,mainMargin);
  treeButton.setLayoutData(fdTreeButton);
  lastControl=treeButton;
  coreButtonImage=new Label(mainComposite,SWT.NONE);
  coreButtonImage.setBackground(background);
  coreButtonImage.setImage(GUIResource.getInstance().getImageLogoSmall());
  FormData fdCoreButtonImage=new FormData();
  fdCoreButtonImage.left=new FormAttachment(5,0);
  fdCoreButtonImage.top=new FormAttachment(lastControl,mainMargin);
  coreButtonImage.setLayoutData(fdCoreButtonImage);
  coreButton=new Label(mainComposite,SWT.LEFT);
  coreButton.setBackground(background);
  coreButton.setFont(GUIResource.getInstance().getFontMedium());
  coreButton.setText(STRING_SPOON_CORE_OBJECTS_TREE);
  coreButton.setToolTipText(Messages.getString("Spoon.CoreObjectsTree.Tooltip"));
  FormData fdCoreButton=new FormData();
  fdCoreButton.left=new FormAttachment(coreButtonImage,5);
  fdCoreButton.right=new FormAttachment(95,0);
  fdCoreButton.top=new FormAttachment(lastControl,mainMargin);
  coreButton.setLayoutData(fdCoreButton);
  lastControl=coreButton;
  historyButtonImage=new Label(mainComposite,SWT.NONE);
  historyButtonImage.setBackground(background);
  historyButtonImage.setImage(GUIResource.getInstance().getImageLogoSmall());
  FormData fdHistoryButtonImage=new FormData();
  fdHistoryButtonImage.left=new FormAttachment(5,0);
  fdHistoryButtonImage.top=new FormAttachment(lastControl,mainMargin);
  historyButtonImage.setLayoutData(fdHistoryButtonImage);
  historyButton=new Label(mainComposite,SWT.LEFT);
  historyButton.setBackground(background);
  historyButton.setFont(GUIResource.getInstance().getFontMedium());
  historyButton.setText(Messages.getString("Spoon.History"));
  historyButton.setToolTipText(Messages.getString("Spoon.History.Tooltip"));
  FormData fdHistoryButton=new FormData();
  fdHistoryButton.left=new FormAttachment(historyButtonImage,5);
  fdHistoryButton.right=new FormAttachment(95,0);
  fdHistoryButton.top=new FormAttachment(lastControl,mainMargin);
  historyButton.setLayoutData(fdHistoryButton);
  lastControl=historyButton;
  Label sep4=new Label(mainComposite,SWT.SEPARATOR | SWT.HORIZONTAL);
  sep4.setBackground(background);
  FormData fdSep4=new FormData();
  fdSep4.left=new FormAttachment(0,0);
  fdSep4.right=new FormAttachment(100,0);
  fdSep4.top=new FormAttachment(lastControl,5);
  sep4.setLayoutData(fdSep4);
  lastControl=sep4;
  treeButton.addMouseListener(new MouseAdapter(){
    public void mouseDown(    MouseEvent event){
      if (treeSelected)       return;
      disposeVariableComposite(true,false,false,false);
      refreshTree();
    }
  }
);
  coreButton.addMouseListener(new MouseAdapter(){
    public void mouseDown(    MouseEvent event){
      if (coreSelected)       return;
      disposeVariableComposite(false,false,true,false);
      refreshCoreObjects();
    }
  }
);
  historyButton.addMouseListener(new MouseAdapter(){
    public void mouseDown(    MouseEvent event){
      if (historySelected)       return;
      disposeVariableComposite(false,false,false,true);
      refreshCoreObjectsHistory();
    }
  }
);
  variableComposite=new Composite(mainComposite,SWT.NONE);
  variableComposite.setBackground(GUIResource.getInstance().getColorBackground());
  variableComposite.setLayout(new FillLayout());
  FormData fdVariableComposite=new FormData();
  fdVariableComposite.left=new FormAttachment(0,0);
  fdVariableComposite.right=new FormAttachment(100,0);
  fdVariableComposite.top=new FormAttachment(lastControl,0);
  fdVariableComposite.bottom=new FormAttachment(100,0);
  variableComposite.setLayoutData(fdVariableComposite);
  lastControl=variableComposite;
  disposeVariableComposite(true,false,false,false);
  coreStepToolTipMap=new Hashtable<String,String>();
  coreJobToolTipMap=new Hashtable<String,String>();
}
