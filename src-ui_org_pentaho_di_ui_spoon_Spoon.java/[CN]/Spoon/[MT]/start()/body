{
  boolean stop=!selectRep(splash);
  if (stop) {
    splash.dispose();
    stop=quitFile();
  }
  if (!stop) {
    handleStartOptions();
    open();
    if (props.showTips()) {
      TipsDialog tip=new TipsDialog(shell);
      tip.open();
    }
    if (splash != null) {
      splash.dispose();
    }
    try {
      while (!isDisposed()) {
        if (!readAndDispatch())         sleep();
      }
    }
 catch (    Throwable e) {
      log.logError(toString(),Messages.getString("Spoon.Log.UnexpectedErrorOccurred") + Const.CR + e.getMessage());
      log.logError(toString(),Const.getStackTracker(e));
      new ErrorDialog(shell,Messages.getString("Spoon.Log.UnexpectedErrorOccurred"),Messages.getString("Spoon.Log.UnexpectedErrorOccurred") + Const.CR + e.getMessage(),e);
    }
    dispose();
    if (log.isBasic())     log.logBasic(toString(),APP_NAME + " " + Messages.getString("Spoon.Log.AppHasEnded"));
    log.close();
  }
}
