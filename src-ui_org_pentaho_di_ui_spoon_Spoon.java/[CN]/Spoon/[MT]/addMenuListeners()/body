{
  try {
    URL url=XulHelper.getAndValidate(XUL_FILE_MENU_PROPERTIES);
    Properties props=new Properties();
    props.load(url.openStream());
    String ids[]=menuBar.getMenuItemIds();
    for (int i=0; i < ids.length; i++) {
      String methodName=(String)props.get(ids[i]);
      if (methodName != null) {
        menuBar.addMenuListener(ids[i],this,methodName);
      }
    }
    for (    String id : menuMap.keySet()) {
      PopupMenu menu=(PopupMenu)menuMap.get(id);
      ids=menu.getMenuItemIds();
      for (int i=0; i < ids.length; i++) {
        String methodName=(String)props.get(ids[i]);
        if (methodName != null) {
          menu.addMenuListener(ids[i],this,methodName);
        }
      }
      for (int i=0; i < menuListeners.size(); i++) {
        Object info[]=menuListeners.get(i);
        menu.addMenuListener((String)info[0],info[1],(String)info[2]);
      }
    }
    for (int i=0; i < menuListeners.size(); i++) {
      Object info[]=menuListeners.get(i);
      menuBar.addMenuListener((String)info[0],info[1],(String)info[2]);
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Exception.ErrorReadingXULFile.Title"),BaseMessages.getString(PKG,"Spoon.Exception.ErrorReadingXULFile.Message",XUL_FILE_MENU_PROPERTIES),new Exception(t));
  }
}
