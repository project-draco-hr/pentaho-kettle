{
  if (meta == null)   return false;
  boolean saved=false;
  if (log.isDetailed())   log.logDetailed(BaseMessages.getString(PKG,"Spoon.Log.SaveToFileOrRepository"));
  String activePerspectiveId=SpoonPerspectiveManager.getInstance().getActivePerspective().getId();
  boolean etlPerspective=activePerspectiveId.equals("spoon-jobs");
  if (rep != null && etlPerspective) {
    saved=saveToRepository(meta);
  }
 else {
    if (meta.getFilename() != null) {
      saved=save(meta,meta.getFilename(),false);
    }
 else {
      if (meta.canSave()) {
        saved=saveFileAs(meta);
      }
    }
  }
  meta.saveSharedObjects();
  try {
    if (props.useDBCache() && meta instanceof TransMeta)     ((TransMeta)meta).getDbCache().saveCache();
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Dialog.ErrorSavingDatabaseCache.Title"),BaseMessages.getString(PKG,"Spoon.Dialog.ErrorSavingDatabaseCache.Message"),e);
  }
  delegates.tabs.renameTabs();
  refreshTree();
  return saved;
}
