{
  CommandLineOption[] clOptions=new CommandLineOption[]{new CommandLineOption("rep","Repository name",new StringBuffer()),new CommandLineOption("user","Repository username",new StringBuffer()),new CommandLineOption("pass","Repository password",new StringBuffer()),new CommandLineOption("job","The name of the job to launch",new StringBuffer()),new CommandLineOption("trans","The name of the transformation to launch",new StringBuffer()),new CommandLineOption("dir","The directory (don't forget the leading /)",new StringBuffer()),new CommandLineOption("file","The filename (Transformation in XML) to launch",new StringBuffer()),new CommandLineOption("level","The logging level (Basic, Detailed, Debug, Rowlevel, Error, Nothing)",new StringBuffer()),new CommandLineOption("logfile","The logging file to write to",new StringBuffer()),new CommandLineOption("log","The logging file to write to (deprecated)",new StringBuffer(),false,true)};
  LogWriter.setConsoleAppenderDebug();
  LogWriter.getInstance(LogWriter.LOG_LEVEL_BASIC);
  LogChannel log=new LogChannel(APP_NAME);
  if (!CommandLineOption.parseArguments(args,clOptions,log)) {
    log.logError("Command line option not understood");
    System.exit(8);
  }
  String kettleRepname=Const.getEnvironmentVariable("KETTLE_REPOSITORY",null);
  String kettleUsername=Const.getEnvironmentVariable("KETTLE_USER",null);
  String kettlePassword=Const.getEnvironmentVariable("KETTLE_PASSWORD",null);
  if (!Const.isEmpty(kettleRepname))   clOptions[0].setArgument(new StringBuffer(kettleRepname));
  if (!Const.isEmpty(kettleUsername))   clOptions[1].setArgument(new StringBuffer(kettleUsername));
  if (!Const.isEmpty(kettlePassword))   clOptions[2].setArgument(new StringBuffer(kettlePassword));
  return clOptions;
}
