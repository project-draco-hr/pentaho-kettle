{
  if (rep != null) {
    RepositoryExplorerCallback cb=new RepositoryExplorerCallback(){
      public boolean open(      RepositoryElementLocationInterface element,      String revision){
        String objname=element.getName();
        if (objname != null) {
          RepositoryObjectType objectType=element.getRepositoryElementType();
          RepositoryDirectory repdir=element.getRepositoryDirectory();
          loadObjectFromRepository(objname,objectType,repdir,revision);
        }
        return false;
      }
      public boolean restoreRevision(      RepositoryElementLocationInterface element,      String revision){
        try {
          TransMeta transInfo=rep.loadTransformation(element.getName(),element.getRepositoryDirectory(),null,true,revision);
          rep.save(transInfo,"Restore",null);
        }
 catch (        Exception e) {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setMessage(BaseMessages.getString(PKG,"Spoon.Dialog.ErrorOpening.Message") + element.getName() + Const.CR+ e.getMessage());
          mb.setText(BaseMessages.getString(PKG,"Spoon.Dialog.ErrorOpening.Title"));
          mb.open();
        }
        return false;
      }
    }
;
    try {
      Directory root=rep.loadRepositoryDirectoryTree();
      if (SecurityManagerRegistery.getInstance().getRegisteredSecurityManager() != null) {
        securityManager=SecurityManagerRegistery.getInstance().createSecurityManager(rep,rep.getRepositoryMeta(),rep.getUserInfo());
      }
      RepositoryExplorer explorer=new RepositoryExplorer(rep,getSecurityManager(),cb,Variables.getADefaultVariableSpace());
      explorer.show();
    }
 catch (    Throwable e) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Error"),e.getMessage(),e);
    }
  }
}
