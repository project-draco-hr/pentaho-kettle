{
  if (stepHistoryChanged || mainExpandBar.getItemCount() < 3) {
    boolean showTrans=getActiveTransformation() != null;
    if (2 < mainExpandBar.getItemCount() && mainExpandBar.getItemCount() >= 3 - (showTrans ? 0 : 1)) {
      ExpandItem item=mainExpandBar.getItem(2);
      if (!item.getExpanded())       return;
    }
    if (showTrans) {
      ScrolledComposite scrolledHistoryComposite=new ScrolledComposite(mainExpandBar,SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);
      scrolledHistoryComposite.setLayout(new FillLayout());
      Composite historyComposite=new Composite(scrolledHistoryComposite,SWT.NONE);
      props.setLook(historyComposite);
      GridLayout layout=new GridLayout();
      layout.marginLeft=15;
      layout.verticalSpacing=Const.MARGIN;
      historyComposite.setLayout(layout);
      ExpandItem historyExpandItem=new ExpandItem(mainExpandBar,SWT.NONE);
      List<ObjectUsageCount> pluginHistory=props.getPluginHistory();
      String locale=LanguageChoice.getInstance().getDefaultLocale().toString().toLowerCase();
      for (int i=0; i < pluginHistory.size() && i < 10; i++) {
        ObjectUsageCount usage=(ObjectUsageCount)pluginHistory.get(i);
        StepPlugin stepPlugin=StepLoader.getInstance().findStepPluginWithID(usage.getObjectName());
        if (stepPlugin != null) {
          final Image stepimg=(Image)GUIResource.getInstance().getImagesStepsSmall().get(stepPlugin.getID()[0]);
          String pluginName=stepPlugin.getDescription(locale) + " (" + usage.getNrUses()+ ")";
          String pluginDescription=stepPlugin.getTooltip(locale);
          boolean isPlugin=stepPlugin.isPlugin();
          addExpandBarItemLine(historyExpandItem,historyComposite,stepimg,pluginName,pluginDescription,isPlugin,stepPlugin);
        }
      }
      historyComposite.layout();
      org.eclipse.swt.graphics.Rectangle bounds=historyComposite.getBounds();
      scrolledHistoryComposite.setMinSize(bounds.width,bounds.height);
      scrolledHistoryComposite.setContent(historyComposite);
      scrolledHistoryComposite.setExpandHorizontal(true);
      scrolledHistoryComposite.setExpandVertical(true);
      historyExpandItem.setControl(scrolledHistoryComposite);
      historyExpandItem.setHeight(scrolledHistoryComposite.computeSize(SWT.DEFAULT,SWT.DEFAULT).y);
      setHeaderImage(historyExpandItem,GUIResource.getInstance().getImageLogoSmall(),STRING_HISTORY,0);
      scrolledHistoryComposite.layout(true,true);
    }
    boolean expanded=false;
    if (mainExpandBar.getItemCount() > 3 - (showTrans ? 0 : 1)) {
      ExpandItem item=mainExpandBar.getItem(2);
      expanded=item.getExpanded();
      item.setExpanded(false);
      item.dispose();
    }
    if (showTrans) {
      mainExpandBar.getItem(2).setExpanded(expanded);
    }
    resizeExpandBar(mainExpandBar);
    mainExpandBar.redraw();
    stepHistoryChanged=false;
  }
}
