{
  GUIResource guiResource=GUIResource.getInstance();
  sharedDatabases=new ArrayList<DatabaseMeta>();
  HasDatabasesInterface databasesInterface=getActiveHasDatabasesInterface();
  if (databasesInterface != null) {
    for (    DatabaseMeta databaseMeta : databasesInterface.getDatabases()) {
      if (databaseMeta.isShared()) {
        sharedDatabases.add(databaseMeta);
      }
    }
  }
  if (rep != null) {
    try {
      sharedDatabases.addAll(rep.readDatabases());
    }
 catch (    KettleException e) {
      log.logError(toString(),"Unexpected repository error",e);
    }
  }
  sharedObjectsTree.removeAll();
  if (sharedDatabases.size() > 0) {
    TreeItem databasesItem=new TreeItem(sharedObjectsTree,SWT.NONE);
    databasesItem.setText(STRING_CONNECTIONS);
    databasesItem.setImage(GUIResource.getInstance().getImageConnection());
    TreeMemory.getInstance().storeExpanded(STRING_SPOON_SHARED_OBJECTS_TREE,databasesItem,true);
    for (    DatabaseMeta databaseMeta : sharedDatabases) {
      TreeItem tiDb=new TreeItem(databasesItem,SWT.NONE);
      tiDb.setText(databaseMeta.getName());
      tiDb.setImage(guiResource.getImageConnection());
      if (databaseMeta.isShared()) {
        tiDb.setFont(guiResource.getFontBold());
      }
    }
  }
  TreeMemory.setExpandedFromMemory(sharedObjectsTree,STRING_SPOON_SHARED_OBJECTS_TREE);
}
