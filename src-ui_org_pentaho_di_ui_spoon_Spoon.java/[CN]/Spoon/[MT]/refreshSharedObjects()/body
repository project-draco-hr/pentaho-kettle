{
  if (shell.isDisposed())   return;
  if (!sharedSelected)   return;
  if (sharedTree == null || sharedTree.isDisposed()) {
    sharedTree=new Tree(variableComposite,SWT.SINGLE | SWT.V_SCROLL | SWT.H_SCROLL);
    props.setLook(sharedTree);
    sharedTree.setLayout(new FillLayout());
    sharedTree.addMouseListener(new MouseAdapter(){
      public void mouseDown(      MouseEvent event){
        if (event.button == 3) {
          setMenu(sharedTree);
        }
      }
    }
);
    sharedTree.addSelectionListener(new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent e){
        showSelection();
      }
    }
);
    sharedTree.addSelectionListener(new SelectionAdapter(){
      public void widgetDefaultSelected(      SelectionEvent e){
        doubleClickedInTree(sharedTree);
      }
    }
);
    sharedTree.addKeyListener(defKeys);
  }
  for (  SharedObjects sharedObjects : sharedObjectsFileMap.values()) {
    TreeItem tiSharedFile=new TreeItem(sharedTree,SWT.NONE);
    tiSharedFile.setText(sharedObjects.getFilename());
    tiSharedFile.setImage(GUIResource.getInstance().getImageArrow());
    TreeItem databasesItem=new TreeItem(tiSharedFile,SWT.NONE);
    databasesItem.setText(STRING_CONNECTIONS);
    databasesItem.setImage(GUIResource.getInstance().getImageConnection());
    TreeItem slavesItem=new TreeItem(tiSharedFile,SWT.NONE);
    slavesItem.setText(STRING_SLAVES);
    slavesItem.setImage(GUIResource.getInstance().getImageBol());
    TreeItem stepsItem=new TreeItem(tiSharedFile,SWT.NONE);
    stepsItem.setText(STRING_STEPS);
    stepsItem.setImage(GUIResource.getInstance().getImageBol());
    TreeItem partsItem=new TreeItem(tiSharedFile,SWT.NONE);
    partsItem.setText(STRING_PARTITIONS);
    partsItem.setImage(GUIResource.getInstance().getImageBol());
    TreeItem clustersItem=new TreeItem(tiSharedFile,SWT.NONE);
    clustersItem.setText(STRING_CLUSTERS);
    clustersItem.setImage(GUIResource.getInstance().getImageBol());
    for (    SharedObjectInterface object : sharedObjects.getObjectsMap().values()) {
      if (object instanceof DatabaseMeta) {
        DatabaseMeta databaseMeta=(DatabaseMeta)object;
        TreeItem databaseItem=new TreeItem(stepsItem,SWT.NONE);
        databaseItem.setText(databaseMeta.getName());
        databaseItem.setImage(GUIResource.getInstance().getImageConnection());
      }
 else       if (object instanceof SlaveServer) {
        SlaveServer slaveServer=(SlaveServer)object;
        TreeItem slaveItem=new TreeItem(slavesItem,SWT.NONE);
        slaveItem.setText(slaveServer.getName());
        slaveItem.setImage(GUIResource.getInstance().getImageBol());
      }
 else       if (object instanceof StepMeta) {
        StepMeta stepMeta=(StepMeta)object;
        TreeItem stepItem=new TreeItem(stepsItem,SWT.NONE);
        stepItem.setText(stepMeta.getName());
        stepItem.setImage(GUIResource.getInstance().getImageBol());
      }
 else       if (object instanceof PartitionSchema) {
        PartitionSchema partitionSchema=(PartitionSchema)object;
        TreeItem partItem=new TreeItem(partsItem,SWT.NONE);
        partItem.setText(partitionSchema.getName());
        partItem.setImage(GUIResource.getInstance().getImageBol());
      }
 else       if (object instanceof ClusterSchema) {
        ClusterSchema clusterSchema=(ClusterSchema)object;
        TreeItem clusterItem=new TreeItem(clustersItem,SWT.NONE);
        clusterItem.setText(clusterSchema.getName());
        clusterItem.setImage(GUIResource.getInstance().getImageBol());
      }
    }
  }
  variableComposite.layout(true,true);
}
