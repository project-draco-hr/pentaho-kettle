{
  try {
    headerEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"header"));
    footerEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"footer"));
    appendOmitHeader="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"appendOmitHeader"));
    appendLines="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"appendLines"));
    makeSheetActive="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"makeSheetActive"));
    appendOffset=Const.toInt(XMLHandler.getTagValue(stepnode,"appendOffset"),0);
    appendEmpty=Const.toInt(XMLHandler.getTagValue(stepnode,"appendEmpty"),0);
    startingCell=XMLHandler.getTagValue(stepnode,"startingCell");
    rowWritingMethod=XMLHandler.getTagValue(stepnode,"rowWritingMethod");
    forceFormulaRecalculation="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"forceFormulaRecalculation"));
    String addToResult=XMLHandler.getTagValue(stepnode,"add_to_result_filenames");
    if (Const.isEmpty(addToResult))     addToResultFilenames=true;
 else     addToResultFilenames="Y".equalsIgnoreCase(addToResult);
    fileName=XMLHandler.getTagValue(stepnode,"file","name");
    extension=XMLHandler.getTagValue(stepnode,"file","extention");
    doNotOpenNewFileInit="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","do_not_open_newfile_init"));
    stepNrInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","split"));
    dateInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_date"));
    timeInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_time"));
    SpecifyFormat="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","SpecifyFormat"));
    date_time_format=XMLHandler.getTagValue(stepnode,"file","date_time_format");
    autosizecolums="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","autosizecolums"));
    protectsheet="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","protect_sheet"));
    password=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode,"file","password"));
    protectedBy=XMLHandler.getTagValue(stepnode,"file","protected_by");
    splitEvery=Const.toInt(XMLHandler.getTagValue(stepnode,"file","splitevery"),0);
    templateEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"template","enabled"));
    templateSheetEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"template","sheet_enabled"));
    templateFileName=XMLHandler.getTagValue(stepnode,"template","filename");
    templateSheetName=XMLHandler.getTagValue(stepnode,"template","sheetname");
    sheetname=XMLHandler.getTagValue(stepnode,"file","sheetname");
    ifFileExists=XMLHandler.getTagValue(stepnode,"file","if_file_exists");
    ifSheetExists=XMLHandler.getTagValue(stepnode,"file","if_sheet_exists");
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      outputFields[i]=new ExcelWriterStepField();
      outputFields[i].setName(XMLHandler.getTagValue(fnode,"name"));
      outputFields[i].setType(XMLHandler.getTagValue(fnode,"type"));
      outputFields[i].setFormat(XMLHandler.getTagValue(fnode,"format"));
      outputFields[i].setTitle(XMLHandler.getTagValue(fnode,"title"));
      outputFields[i].setTitleStyleCell(XMLHandler.getTagValue(fnode,"titleStyleCell"));
      outputFields[i].setStyleCell(XMLHandler.getTagValue(fnode,"styleCell"));
      outputFields[i].setCommentField(XMLHandler.getTagValue(fnode,"commentField"));
      outputFields[i].setCommentAuthorField(XMLHandler.getTagValue(fnode,"commentAuthorField"));
      outputFields[i].setFormula(XMLHandler.getTagValue(fnode,"formula") != null && XMLHandler.getTagValue(fnode,"formula").equalsIgnoreCase("Y"));
      outputFields[i].setHyperlinkField(XMLHandler.getTagValue(fnode,"hyperlinkField"));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
