{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("TextFileOutputDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wFileTab=new CTabItem(wTabFolder,SWT.NONE);
  wFileTab.setText(Messages.getString("TextFileOutputDialog.FileTab.TabTitle"));
  Composite wFileComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFileComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wFileComp.setLayout(fileLayout);
  wlFilename=new Label(wFileComp,SWT.RIGHT);
  wlFilename.setText(Messages.getString("TextFileOutputDialog.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(0,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(Messages.getString("System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(0,0);
  wbFilename.setLayoutData(fdbFilename);
  wbcFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbcFilename);
  wbcFilename.setText(Messages.getString("System.Button.Variable"));
  fdbcFilename=new FormData();
  fdbcFilename.right=new FormAttachment(wbFilename,-margin);
  fdbcFilename.top=new FormAttachment(0,0);
  wbcFilename.setLayoutData(fdbcFilename);
  wFilename=new Text(wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(0,margin);
  fdFilename.right=new FormAttachment(wbcFilename,-margin);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(StringUtil.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wlExtension=new Label(wFileComp,SWT.RIGHT);
  wlExtension.setText(Messages.getString("System.Label.Extension"));
  props.setLook(wlExtension);
  fdlExtension=new FormData();
  fdlExtension.left=new FormAttachment(0,0);
  fdlExtension.top=new FormAttachment(wFilename,margin);
  fdlExtension.right=new FormAttachment(middle,-margin);
  wlExtension.setLayoutData(fdlExtension);
  wExtension=new Text(wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wExtension.setText("");
  props.setLook(wExtension);
  wExtension.addModifyListener(lsMod);
  fdExtension=new FormData();
  fdExtension.left=new FormAttachment(middle,0);
  fdExtension.top=new FormAttachment(wFilename,margin);
  fdExtension.right=new FormAttachment(wbcFilename,-margin);
  wExtension.setLayoutData(fdExtension);
  wlAddStepnr=new Label(wFileComp,SWT.RIGHT);
  wlAddStepnr.setText(Messages.getString("TextFileOutputDialog.AddStepnr.Label"));
  props.setLook(wlAddStepnr);
  fdlAddStepnr=new FormData();
  fdlAddStepnr.left=new FormAttachment(0,0);
  fdlAddStepnr.top=new FormAttachment(wExtension,margin);
  fdlAddStepnr.right=new FormAttachment(middle,-margin);
  wlAddStepnr.setLayoutData(fdlAddStepnr);
  wAddStepnr=new Button(wFileComp,SWT.CHECK);
  props.setLook(wAddStepnr);
  fdAddStepnr=new FormData();
  fdAddStepnr.left=new FormAttachment(middle,0);
  fdAddStepnr.top=new FormAttachment(wExtension,margin);
  fdAddStepnr.right=new FormAttachment(100,0);
  wAddStepnr.setLayoutData(fdAddStepnr);
  wAddStepnr.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddDate=new Label(wFileComp,SWT.RIGHT);
  wlAddDate.setText(Messages.getString("TextFileOutputDialog.AddDate.Label"));
  props.setLook(wlAddDate);
  fdlAddDate=new FormData();
  fdlAddDate.left=new FormAttachment(0,0);
  fdlAddDate.top=new FormAttachment(wAddStepnr,margin);
  fdlAddDate.right=new FormAttachment(middle,-margin);
  wlAddDate.setLayoutData(fdlAddDate);
  wAddDate=new Button(wFileComp,SWT.CHECK);
  props.setLook(wAddDate);
  fdAddDate=new FormData();
  fdAddDate.left=new FormAttachment(middle,0);
  fdAddDate.top=new FormAttachment(wAddStepnr,margin);
  fdAddDate.right=new FormAttachment(100,0);
  wAddDate.setLayoutData(fdAddDate);
  wAddDate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddTime=new Label(wFileComp,SWT.RIGHT);
  wlAddTime.setText(Messages.getString("TextFileOutputDialog.AddTime.Label"));
  props.setLook(wlAddTime);
  fdlAddTime=new FormData();
  fdlAddTime.left=new FormAttachment(0,0);
  fdlAddTime.top=new FormAttachment(wAddDate,margin);
  fdlAddTime.right=new FormAttachment(middle,-margin);
  wlAddTime.setLayoutData(fdlAddTime);
  wAddTime=new Button(wFileComp,SWT.CHECK);
  props.setLook(wAddTime);
  fdAddTime=new FormData();
  fdAddTime.left=new FormAttachment(middle,0);
  fdAddTime.top=new FormAttachment(wAddDate,margin);
  fdAddTime.right=new FormAttachment(100,0);
  wAddTime.setLayoutData(fdAddTime);
  wAddTime.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wbShowFiles=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbShowFiles);
  wbShowFiles.setText(Messages.getString("TextFileOutputDialog.ShowFiles.Button"));
  fdbShowFiles=new FormData();
  fdbShowFiles.left=new FormAttachment(middle,0);
  fdbShowFiles.top=new FormAttachment(wAddTime,margin * 2);
  wbShowFiles.setLayoutData(fdbShowFiles);
  wbShowFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      TextFileOutputMeta tfoi=new TextFileOutputMeta();
      getInfo(tfoi);
      String files[]=tfoi.getFiles();
      if (files != null && files.length > 0) {
        EnterSelectionDialog esd=new EnterSelectionDialog(shell,props,files,Messages.getString("TextFileOutputDialog.SelectOutputFiles.DialogTitle"),Messages.getString("TextFileOutputDialog.SelectOutputFiles.DialogMessage"));
        esd.setViewOnly();
        esd.open();
      }
 else {
        MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
        mb.setMessage(Messages.getString("TextFileOutputDialog.NoFilesFound.DialogMessage"));
        mb.setText(Messages.getString("System.DialogTitle.Error"));
        mb.open();
      }
    }
  }
);
  fdFileComp=new FormData();
  fdFileComp.left=new FormAttachment(0,0);
  fdFileComp.top=new FormAttachment(0,0);
  fdFileComp.right=new FormAttachment(100,0);
  fdFileComp.bottom=new FormAttachment(100,0);
  wFileComp.setLayoutData(fdFileComp);
  wFileComp.layout();
  wFileTab.setControl(wFileComp);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(Messages.getString("TextFileOutputDialog.ContentTab.TabTitle"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  Composite wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wlAppend=new Label(wContentComp,SWT.RIGHT);
  wlAppend.setText(Messages.getString("TextFileOutputDialog.Append.Label"));
  props.setLook(wlAppend);
  fdlAppend=new FormData();
  fdlAppend.left=new FormAttachment(0,0);
  fdlAppend.top=new FormAttachment(0,0);
  fdlAppend.right=new FormAttachment(middle,-margin);
  wlAppend.setLayoutData(fdlAppend);
  wAppend=new Button(wContentComp,SWT.CHECK);
  props.setLook(wAppend);
  fdAppend=new FormData();
  fdAppend.left=new FormAttachment(middle,0);
  fdAppend.top=new FormAttachment(0,0);
  fdAppend.right=new FormAttachment(100,0);
  wAppend.setLayoutData(fdAppend);
  wAppend.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlSeparator=new Label(wContentComp,SWT.RIGHT);
  wlSeparator.setText(Messages.getString("TextFileOutputDialog.Separator.Label"));
  props.setLook(wlSeparator);
  fdlSeparator=new FormData();
  fdlSeparator.left=new FormAttachment(0,0);
  fdlSeparator.top=new FormAttachment(wAppend,margin);
  fdlSeparator.right=new FormAttachment(middle,-margin);
  wlSeparator.setLayoutData(fdlSeparator);
  wbSeparator=new Button(wContentComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSeparator);
  wbSeparator.setText(Messages.getString("TextFileOutputDialog.Separator.Button"));
  fdbSeparator=new FormData();
  fdbSeparator.right=new FormAttachment(100,0);
  fdbSeparator.top=new FormAttachment(wAppend,0);
  wbSeparator.setLayoutData(fdbSeparator);
  wbSeparator.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent se){
      wSeparator.insert("\t");
    }
  }
);
  wSeparator=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSeparator);
  wSeparator.addModifyListener(lsMod);
  fdSeparator=new FormData();
  fdSeparator.left=new FormAttachment(middle,0);
  fdSeparator.top=new FormAttachment(wAppend,margin);
  fdSeparator.right=new FormAttachment(wbSeparator,-margin);
  wSeparator.setLayoutData(fdSeparator);
  wlEnclosure=new Label(wContentComp,SWT.RIGHT);
  wlEnclosure.setText(Messages.getString("TextFileOutputDialog.Enclosure.Label"));
  props.setLook(wlEnclosure);
  fdlEnclosure=new FormData();
  fdlEnclosure.left=new FormAttachment(0,0);
  fdlEnclosure.top=new FormAttachment(wSeparator,margin);
  fdlEnclosure.right=new FormAttachment(middle,-margin);
  wlEnclosure.setLayoutData(fdlEnclosure);
  wEnclosure=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEnclosure);
  wEnclosure.addModifyListener(lsMod);
  fdEnclosure=new FormData();
  fdEnclosure.left=new FormAttachment(middle,0);
  fdEnclosure.top=new FormAttachment(wSeparator,margin);
  fdEnclosure.right=new FormAttachment(100,0);
  wEnclosure.setLayoutData(fdEnclosure);
  wlEnclForced=new Label(wContentComp,SWT.RIGHT);
  wlEnclForced.setText(Messages.getString("TextFileOutputDialog.EnclForced.Label"));
  props.setLook(wlEnclForced);
  fdlEnclForced=new FormData();
  fdlEnclForced.left=new FormAttachment(0,0);
  fdlEnclForced.top=new FormAttachment(wEnclosure,margin);
  fdlEnclForced.right=new FormAttachment(middle,-margin);
  wlEnclForced.setLayoutData(fdlEnclForced);
  wEnclForced=new Button(wContentComp,SWT.CHECK);
  props.setLook(wEnclForced);
  fdEnclForced=new FormData();
  fdEnclForced.left=new FormAttachment(middle,0);
  fdEnclForced.top=new FormAttachment(wEnclosure,margin);
  fdEnclForced.right=new FormAttachment(100,0);
  wEnclForced.setLayoutData(fdEnclForced);
  wEnclForced.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlHeader=new Label(wContentComp,SWT.RIGHT);
  wlHeader.setText(Messages.getString("TextFileOutputDialog.Header.Label"));
  props.setLook(wlHeader);
  fdlHeader=new FormData();
  fdlHeader.left=new FormAttachment(0,0);
  fdlHeader.top=new FormAttachment(wEnclForced,margin);
  fdlHeader.right=new FormAttachment(middle,-margin);
  wlHeader.setLayoutData(fdlHeader);
  wHeader=new Button(wContentComp,SWT.CHECK);
  props.setLook(wHeader);
  fdHeader=new FormData();
  fdHeader.left=new FormAttachment(middle,0);
  fdHeader.top=new FormAttachment(wEnclForced,margin);
  fdHeader.right=new FormAttachment(100,0);
  wHeader.setLayoutData(fdHeader);
  wHeader.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlFooter=new Label(wContentComp,SWT.RIGHT);
  wlFooter.setText(Messages.getString("TextFileOutputDialog.Footer.Label"));
  props.setLook(wlFooter);
  fdlFooter=new FormData();
  fdlFooter.left=new FormAttachment(0,0);
  fdlFooter.top=new FormAttachment(wHeader,margin);
  fdlFooter.right=new FormAttachment(middle,-margin);
  wlFooter.setLayoutData(fdlFooter);
  wFooter=new Button(wContentComp,SWT.CHECK);
  props.setLook(wFooter);
  fdFooter=new FormData();
  fdFooter.left=new FormAttachment(middle,0);
  fdFooter.top=new FormAttachment(wHeader,margin);
  fdFooter.right=new FormAttachment(100,0);
  wFooter.setLayoutData(fdFooter);
  wFooter.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlFormat=new Label(wContentComp,SWT.RIGHT);
  wlFormat.setText(Messages.getString("TextFileOutputDialog.Format.Label"));
  props.setLook(wlFormat);
  fdlFormat=new FormData();
  fdlFormat.left=new FormAttachment(0,0);
  fdlFormat.top=new FormAttachment(wFooter,margin);
  fdlFormat.right=new FormAttachment(middle,-margin);
  wlFormat.setLayoutData(fdlFormat);
  wFormat=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wFormat.setText(Messages.getString("TextFileOutputDialog.Format.Label"));
  props.setLook(wFormat);
  wFormat.add("DOS");
  wFormat.add("Unix");
  wFormat.select(0);
  wFormat.addModifyListener(lsMod);
  fdFormat=new FormData();
  fdFormat.left=new FormAttachment(middle,0);
  fdFormat.top=new FormAttachment(wFooter,margin);
  fdFormat.right=new FormAttachment(100,0);
  wFormat.setLayoutData(fdFormat);
  wlCompression=new Label(wContentComp,SWT.RIGHT);
  wlCompression.setText(Messages.getString("TextFileOutputDialog.Compression.Label"));
  props.setLook(wlCompression);
  fdlCompression=new FormData();
  fdlCompression.left=new FormAttachment(0,0);
  fdlCompression.top=new FormAttachment(wFormat,margin);
  fdlCompression.right=new FormAttachment(middle,-margin);
  wlCompression.setLayoutData(fdlCompression);
  wCompression=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wCompression.setText(Messages.getString("TextFileOutputDialog.Compression.Label"));
  props.setLook(wCompression);
  wCompression.add("None");
  wCompression.add("Zip");
  wCompression.add("GZip");
  wCompression.select(0);
  wCompression.addModifyListener(lsMod);
  fdCompression=new FormData();
  fdCompression.left=new FormAttachment(middle,0);
  fdCompression.top=new FormAttachment(wFormat,margin);
  fdCompression.right=new FormAttachment(100,0);
  wCompression.setLayoutData(fdCompression);
  wlEncoding=new Label(wContentComp,SWT.RIGHT);
  wlEncoding.setText(Messages.getString("TextFileOutputDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(wCompression,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new CCombo(wContentComp,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(wCompression,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPad=new Label(wContentComp,SWT.RIGHT);
  wlPad.setText(Messages.getString("TextFileOutputDialog.Pad.Label"));
  props.setLook(wlPad);
  fdlPad=new FormData();
  fdlPad.left=new FormAttachment(0,0);
  fdlPad.top=new FormAttachment(wEncoding,margin);
  fdlPad.right=new FormAttachment(middle,-margin);
  wlPad.setLayoutData(fdlPad);
  wPad=new Button(wContentComp,SWT.CHECK);
  props.setLook(wPad);
  fdPad=new FormData();
  fdPad.left=new FormAttachment(middle,0);
  fdPad.top=new FormAttachment(wEncoding,margin);
  fdPad.right=new FormAttachment(100,0);
  wPad.setLayoutData(fdPad);
  wPad.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlSplitEvery=new Label(wContentComp,SWT.RIGHT);
  wlSplitEvery.setText(Messages.getString("TextFileOutputDialog.SplitEvery.Label"));
  props.setLook(wlSplitEvery);
  fdlSplitEvery=new FormData();
  fdlSplitEvery.left=new FormAttachment(0,0);
  fdlSplitEvery.top=new FormAttachment(wPad,margin);
  fdlSplitEvery.right=new FormAttachment(middle,-margin);
  wlSplitEvery.setLayoutData(fdlSplitEvery);
  wSplitEvery=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSplitEvery);
  wSplitEvery.addModifyListener(lsMod);
  fdSplitEvery=new FormData();
  fdSplitEvery.left=new FormAttachment(middle,0);
  fdSplitEvery.top=new FormAttachment(wPad,margin);
  fdSplitEvery.right=new FormAttachment(100,0);
  wSplitEvery.setLayoutData(fdSplitEvery);
  wlEndedLine=new Label(wContentComp,SWT.RIGHT);
  wlEndedLine.setText(Messages.getString("TextFileOutputDialog.EndedLine.Label"));
  props.setLook(wlEndedLine);
  fdlEndedLine=new FormData();
  fdlEndedLine.left=new FormAttachment(0,0);
  fdlEndedLine.top=new FormAttachment(wSplitEvery,margin);
  fdlEndedLine.right=new FormAttachment(middle,-margin);
  wlEndedLine.setLayoutData(fdlEndedLine);
  wEndedLine=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEndedLine);
  wEndedLine.addModifyListener(lsMod);
  fdEndedLine=new FormData();
  fdEndedLine.left=new FormAttachment(middle,0);
  fdEndedLine.top=new FormAttachment(wSplitEvery,margin);
  fdEndedLine.right=new FormAttachment(100,0);
  wEndedLine.setLayoutData(fdEndedLine);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(Messages.getString("TextFileOutputDialog.FieldsTab.TabTitle"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  Composite wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wGet=new Button(wFieldsComp,SWT.PUSH);
  wGet.setText(Messages.getString("System.Button.GetFields"));
  wGet.setToolTipText(Messages.getString("System.Tooltip.GetFields"));
  wMinWidth=new Button(wFieldsComp,SWT.PUSH);
  wMinWidth.setText(Messages.getString("TextFileOutputDialog.MinWidth.Button"));
  wMinWidth.setToolTipText(Messages.getString("TextFileOutputDialog.MinWidth.Tooltip"));
  setButtonPositions(new Button[]{wGet,wMinWidth},margin,null);
  final int FieldsCols=9;
  final int FieldsRows=input.getOutputFields().length;
  String dats[]=Const.dateFormats;
  String nums[]=Const.numberFormats;
  int totsize=dats.length + nums.length;
  String formats[]=new String[totsize];
  for (int x=0; x < dats.length; x++)   formats[x]=dats[x];
  for (int x=0; x < nums.length; x++)   formats[dats.length + x]=nums[x];
  ColumnInfo[] colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(Messages.getString("TextFileOutputDialog.NameColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[1]=new ColumnInfo(Messages.getString("TextFileOutputDialog.TypeColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,Value.getTypes());
  colinf[2]=new ColumnInfo(Messages.getString("TextFileOutputDialog.FormatColumn.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,formats);
  colinf[3]=new ColumnInfo(Messages.getString("TextFileOutputDialog.LengthColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[4]=new ColumnInfo(Messages.getString("TextFileOutputDialog.PrecisionColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[5]=new ColumnInfo(Messages.getString("TextFileOutputDialog.CurrencyColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[6]=new ColumnInfo(Messages.getString("TextFileOutputDialog.DecimalColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[7]=new ColumnInfo(Messages.getString("TextFileOutputDialog.GroupColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[8]=new ColumnInfo(Messages.getString("TextFileOutputDialog.NullColumn.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  wFields=new TableView(wFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wGet,-margin);
  wFields.setLayoutData(fdFields);
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsMinWidth=new Listener(){
    public void handleEvent(    Event e){
      setMinimalWidth();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wMinWidth.addListener(SWT.Selection,lsMinWidth);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wFilename.addSelectionListener(lsDef);
  wSeparator.addSelectionListener(lsDef);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(StringUtil.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbcFilename.addSelectionListener(VariableButtonListenerFactory.getSelectionAdapter(shell,wFilename));
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.txt","*.csv","*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(StringUtil.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(new String[]{Messages.getString("System.FileType.TextFiles"),Messages.getString("System.FileType.CSVFiles"),Messages.getString("System.FileType.AllFiles")});
      if (dialog.open() != null) {
        wFilename.setText(dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName());
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
