{
  String[] sortedSourceList=Arrays.copyOf(sourceList,sourceList.length);
  Arrays.sort(sortedSourceList,new Comparator<String>(){
    @Override public int compare(    String s1,    String s2){
      return s2.length() - s1.length();
    }
  }
);
  ArrayList<GuessPair> pList=new ArrayList<GuessPair>();
  for (int i=0; i < sourceList.length; i++) {
    int idx=Const.indexOfString(sortedSourceList[i],wSource.getItems());
    if (idx >= 0) {
      pList.add(findTargetPair(idx));
    }
  }
  Collections.sort(pList,new Comparator<GuessPair>(){
    @Override public int compare(    GuessPair s1,    GuessPair s2){
      return s1.getSrcIndex() - s2.getSrcIndex();
    }
  }
);
  for (  GuessPair p : pList) {
    if (p.getFound()) {
      SourceToTargetMapping mapping=new SourceToTargetMapping(p.getSrcIndex(),p.getTargetIndex());
      mappings.add(mapping);
    }
  }
  refreshMappings();
}
