{
  lifeListeners=Collections.synchronizedSet(loadPlugins(LifecyclePluginType.class,LifecycleListener.class));
  final PluginRegistry registry=PluginRegistry.getInstance();
  registry.addPluginListener(LifecyclePluginType.class,new PluginTypeListener(){
    public void pluginAdded(    Object serviceObject){
      LifecycleListener listener=null;
      try {
        listener=(LifecycleListener)PluginRegistry.getInstance().loadClass((PluginInterface)serviceObject);
      }
 catch (      KettlePluginException e) {
        e.printStackTrace();
        return;
      }
      lifeListeners.add(listener);
      if (started) {
        try {
          listener.onStart(handler);
        }
 catch (        LifecycleException e) {
          e.printStackTrace();
        }
      }
    }
    public void pluginRemoved(    Object serviceObject){
      lifeListeners.remove(serviceObject);
    }
    public void pluginChanged(    Object serviceObject){
    }
  }
);
}
