{
  try {
    super.loadXML(entrynode,databases);
    filename=XMLHandler.getTagValue(entrynode,"filename");
    transname=XMLHandler.getTagValue(entrynode,"transname");
    directoryPath=XMLHandler.getTagValue(entrynode,"directory");
    if (rep != null) {
      directory=rep.getDirectoryTree().findDirectory(directoryPath);
    }
    sendFiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"send_files"));
    argFromPrevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"arg_from_previous"));
    execPerRow="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"exec_per_row"));
    setLogfile="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"set_logfile"));
    addDate="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_date"));
    addTime="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_time"));
    logfile=XMLHandler.getTagValue(entrynode,"logfile");
    logext=XMLHandler.getTagValue(entrynode,"logext");
    loglevel=LogWriter.getLogLevel(XMLHandler.getTagValue(entrynode,"loglevel"));
    int argnr=0;
    while (XMLHandler.getTagValue(entrynode,"argument" + argnr) != null)     argnr++;
    arguments=new String[argnr];
    for (int a=0; a < argnr; a++)     arguments[a]=XMLHandler.getTagValue(entrynode,"argument" + a);
  }
 catch (  KettleException e) {
    throw new KettleXMLException("Unable to load transformation job entry from XML node",e);
  }
}
