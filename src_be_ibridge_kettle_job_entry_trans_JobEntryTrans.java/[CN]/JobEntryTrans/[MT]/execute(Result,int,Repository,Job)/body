{
  LogWriter log=LogWriter.getInstance();
  Result result=prev_result;
  result.setEntryNr(nr);
  LogWriter logwriter=log;
  String logFilename=getLogFilename();
  if (setLogfile) {
    logwriter=LogWriter.getInstance(logFilename,true,loglevel);
  }
  log.logBasic(toString(),"Opening transformation: [" + getTransname() + "] in directory ["+ directory.getPath()+ "]");
  try {
    log.logDetailed(toString(),"Starting transformation...(file=" + getFileName() + ", name="+ getName()+ "), repinfo="+ getDescription());
    TransMeta transMeta;
    if (getTransname() != null && getTransname().length() > 0 && getDirectory() != null) {
      transMeta=new TransMeta(rep,getTransname(),getDirectory());
    }
 else     if (getFileName() != null && getFileName().length() > 0) {
      transMeta=new TransMeta(getFileName());
    }
 else {
      throw new KettleJobException("The transformation to execute is not specified!");
    }
    transMeta.setArguments(arguments);
    Trans trans=new Trans(logwriter,transMeta);
    trans.getTransMeta().setSourceRows(prev_result.rows);
    trans.setSourceRows(prev_result.rows);
    if (!trans.execute(arguments)) {
      result.setNrErrors(1);
    }
 else {
      while (!trans.isFinished() && !parentJob.isStopped()) {
        try {
          Thread.sleep(100);
        }
 catch (        InterruptedException e) {
        }
      }
      if (parentJob.isStopped()) {
        trans.stopAll();
        trans.waitUntilFinished();
        trans.endProcessing("stop");
      }
 else {
        trans.endProcessing("end");
      }
      result=trans.getResult();
      result.setEntryNr(nr);
      if (setLogfile) {
        result.interestingFiles.add(new File(logFilename));
      }
    }
  }
 catch (  KettleException e) {
    log.logError(toString(),"Unable to open transformation: " + e.getMessage());
    result.setNrErrors(1);
  }
  if (setLogfile)   logwriter.close();
  if (result.getNrErrors() == 0) {
    result.setResult(true);
  }
 else {
    result.setResult(false);
  }
  return result;
}
