{
  inf.setDatabaseMeta(transMeta.findDatabase(wConnection.getText()));
  inf.setSchemaName(wSchema.getText());
  inf.setTableName(wTable.getText());
  inf.setAutoCreateTbFlag(bAutoCreateTable.getSelection());
  inf.setHost(wHost.getText());
  inf.setPort(wPort.getText());
  inf.setOperation(wOperation.getItem(wOperation.getSelectionIndex()));
  int nrKeyMapping=wKeysTb.nrNonEmpty();
  int nrFieldMappping=wFieldsTb.nrNonEmpty();
  inf.allocate(nrKeyMapping,nrFieldMappping,3);
  for (int i=0; i < nrKeyMapping; i++) {
    TableItem item=wKeysTb.getNonEmpty(i);
    inf.getFieldTableForKeys()[i]=item.getText(1);
    inf.getFieldStreamForKeys()[i]=item.getText(2);
  }
  for (int i=0; i < nrFieldMappping; i++) {
    TableItem item=wFieldsTb.getNonEmpty(i);
    inf.getFieldTableForFields()[i]=item.getText(1);
    inf.getFieldStreamForFields()[i]=item.getText(2);
    inf.getInsOrUptFlag()[i]="Y".equalsIgnoreCase(item.getText(3));
  }
  inf.getTabIsEnable()[0]=wKeysTab.getControl().getEnabled();
  inf.getTabIsEnable()[1]=wFieldsTab.getControl().getEnabled();
  inf.getTabIsEnable()[2]=wCustomTab.getControl().getEnabled();
  if (BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.CCombo.Item4").equals(inf.getOperation())) {
    inf.setCustom_sql(wCustomTb.getText());
  }
  stepname=wStepname.getText();
}
