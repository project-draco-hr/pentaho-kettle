{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSchema=new Label(shell,SWT.RIGHT);
  wlSchema.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin * 2);
  wlSchema.setLayoutData(fdlSchema);
  wSchema=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsMod);
  fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin * 2);
  fdSchema.right=new FormAttachment(100,0);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.TargetTable.Label"));
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Browse.Button"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wSchema,margin);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  lAutoCreateTable=new Label(shell,SWT.RIGHT);
  props.setLook(lAutoCreateTable);
  fdlAutoCreateTable=new FormData();
  fdlAutoCreateTable.left=new FormAttachment(0,0);
  fdlAutoCreateTable.top=new FormAttachment(wTable,margin);
  fdlAutoCreateTable.right=new FormAttachment(middle,-margin);
  lAutoCreateTable.setLayoutData(fdlAutoCreateTable);
  fdbAutoCreateTable=new FormData();
  fdbAutoCreateTable.left=new FormAttachment(lAutoCreateTable,10);
  fdbAutoCreateTable.top=new FormAttachment(wTable,margin);
  wlHost=new Label(shell,SWT.RIGHT);
  wlHost.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Host.Label"));
  props.setLook(wlHost);
  fdlHost=new FormData();
  fdlHost.left=new FormAttachment(0,0);
  fdlHost.top=new FormAttachment(lAutoCreateTable,margin);
  fdlHost.right=new FormAttachment(middle,-margin);
  wlHost.setLayoutData(fdlHost);
  wHost=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wHost);
  wHost.addModifyListener(lsMod);
  fdHost=new FormData();
  fdHost.left=new FormAttachment(middle,0);
  fdHost.top=new FormAttachment(lAutoCreateTable,margin);
  fdHost.right=new FormAttachment(100,0);
  wHost.setLayoutData(fdHost);
  wlPort=new Label(shell,SWT.RIGHT);
  wlPort.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Port.Label"));
  props.setLook(wlPort);
  fdlPort=new FormData();
  fdlPort.left=new FormAttachment(0,0);
  fdlPort.top=new FormAttachment(wHost,margin);
  fdlPort.right=new FormAttachment(middle,-margin);
  wlPort.setLayoutData(fdlPort);
  wPort=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.left=new FormAttachment(middle,0);
  fdPort.top=new FormAttachment(wHost,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  wlOperation=new Label(shell,SWT.RIGHT);
  wlOperation.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.Label"));
  props.setLook(wlOperation);
  fdlOperation=new FormData();
  fdlOperation.left=new FormAttachment(0,0);
  fdlOperation.top=new FormAttachment(wPort,margin);
  fdlOperation.right=new FormAttachment(middle,-margin);
  wlOperation.setLayoutData(fdlOperation);
  wOperation=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wOperation);
  wOperation.addModifyListener(lsMod);
  fdOperation=new FormData();
  fdOperation.top=new FormAttachment(wPort,margin);
  fdOperation.left=new FormAttachment(middle,0);
  fdOperation.right=new FormAttachment(100,0);
  wOperation.setLayoutData(fdOperation);
  final String[] operations=new String[]{BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.CCombo.Item1"),BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.CCombo.Item2"),BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.CCombo.Item3"),BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.CCombo.Item4")};
  wOperation.setItems(operations);
  wOperation.addSelectionListener(new SelectionListener(){
    public void widgetDefaultSelected(    SelectionEvent event){
      widgetSelected(event);
    }
    public void widgetSelected(    SelectionEvent event){
      CCombo mycc=(CCombo)event.widget;
      if (operations[0].equals(mycc.getItem(mycc.getSelectionIndex()))) {
        wKeysTb.table.removeAll();
        wKeysTb.table.setItemCount(1);
        wKeysTb.setRowNums();
        wFieldsTb.table.removeAll();
        wFieldsTb.table.setItemCount(1);
        wFieldsTb.setRowNums();
        wCustomTb.setText("");
        wTabFolder.setSelection(wKeysTab);
        wKeysTab.getControl().setEnabled(true);
        wFieldsTab.getControl().setEnabled(true);
        wCustomTab.getControl().setEnabled(false);
        wFieldsTb.table.getColumn(3).setWidth(80);
      }
 else       if (operations[1].equals(mycc.getItem(mycc.getSelectionIndex()))) {
        wKeysTb.table.removeAll();
        wKeysTb.table.setItemCount(1);
        wKeysTb.setRowNums();
        wFieldsTb.table.removeAll();
        wFieldsTb.table.setItemCount(1);
        wFieldsTb.setRowNums();
        wCustomTb.setText("");
        wTabFolder.setSelection(wFieldsTab);
        wKeysTab.getControl().setEnabled(false);
        wFieldsTab.getControl().setEnabled(true);
        wCustomTab.getControl().setEnabled(false);
        wFieldsTb.table.getColumn(3).setWidth(0);
      }
 else       if (operations[2].equals(mycc.getItem(mycc.getSelectionIndex()))) {
        wKeysTb.table.removeAll();
        wKeysTb.table.setItemCount(1);
        wKeysTb.setRowNums();
        wFieldsTb.table.removeAll();
        wFieldsTb.table.setItemCount(1);
        wFieldsTb.setRowNums();
        wCustomTb.setText("");
        wTabFolder.setSelection(wKeysTab);
        wKeysTab.getControl().setEnabled(true);
        wFieldsTab.getControl().setEnabled(true);
        wCustomTab.getControl().setEnabled(false);
        wFieldsTb.table.getColumn(3).setWidth(80);
      }
 else       if (operations[3].equals(mycc.getItem(mycc.getSelectionIndex()))) {
        wKeysTb.table.removeAll();
        wKeysTb.table.setItemCount(1);
        wKeysTb.setRowNums();
        wFieldsTb.table.removeAll();
        wFieldsTb.table.setItemCount(1);
        wFieldsTb.setRowNums();
        wCustomTb.setText("");
        wTabFolder.setSelection(wKeysTab);
        wKeysTab.getControl().setEnabled(true);
        wFieldsTab.getControl().setEnabled(true);
        wCustomTab.getControl().setEnabled(true);
        wFieldsTb.table.getColumn(3).setWidth(80);
      }
    }
  }
);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wTabFolder.setSimple(false);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wlOperation,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wKeysTab=new CTabItem(wTabFolder,SWT.NONE);
  wKeysTab.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.KeyTab.TabTitle"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  wKeysComp=new Composite(wTabFolder,SWT.NONE);
  wKeysComp.setLayout(fieldsLayout);
  props.setLook(wKeysComp);
  wlKeysTb=new Label(wKeysComp,SWT.LEFT);
  wlKeysTb.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.KeyTab.Label"));
  fdlKeysTb=new FormData();
  fdlKeysTb.left=new FormAttachment(0,0);
  fdlKeysTb.top=new FormAttachment(0,0);
  fdlKeysTb.right=new FormAttachment(100,0);
  wlKeysTb.setLayoutData(fdlKeysTb);
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Key.Column1"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Key.Column2"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wKeysTb=new TableView(transMeta,wKeysComp,SWT.FULL_SELECTION | SWT.MULTI,colinf,0,lsMod,props);
  fdKeysTb=new FormData();
  fdKeysTb.left=new FormAttachment(0,0);
  fdKeysTb.top=new FormAttachment(wlKeysTb,margin);
  fdKeysTb.right=new FormAttachment(100,0);
  fdKeysTb.bottom=new FormAttachment(95,-margin);
  wKeysTb.setLayoutData(fdKeysTb);
  fdKeysComp=new FormData();
  fdKeysComp.left=new FormAttachment(0,0);
  fdKeysComp.top=new FormAttachment(0,0);
  fdKeysComp.right=new FormAttachment(100,0);
  fdKeysComp.bottom=new FormAttachment(100,0);
  wKeysComp.setLayoutData(fdKeysComp);
  wGetFieldsForKeys=new Button(wKeysComp,SWT.PUSH);
  wGetFieldsForKeys.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.GetFields.Label"));
  fdGetFieldsForKeys=new FormData();
  fdGetFieldsForKeys.top=new FormAttachment(wKeysTb,margin);
  fdGetFieldsForKeys.left=new FormAttachment(0,margin);
  wGetFieldsForKeys.setLayoutData(fdGetFieldsForKeys);
  wGetFieldsForKeys.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event event){
      getFields(wKeysTab.getText());
    }
  }
);
  wDoMappingForKeys=new Button(wKeysComp,SWT.PUSH);
  wDoMappingForKeys.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.EditMapping.Label"));
  fdDoMappingForKeys=new FormData();
  fdDoMappingForKeys.top=new FormAttachment(wKeysTb,margin);
  fdDoMappingForKeys.left=new FormAttachment(wGetFieldsForKeys,margin);
  wDoMappingForKeys.setLayoutData(fdDoMappingForKeys);
  wDoMappingForKeys.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event event){
      generateMappings(wKeysTab.getText());
    }
  }
);
  wKeysComp.layout();
  wKeysTab.setControl(wKeysComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.FieldsTab.TabTitle"));
  wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wlFieldsTb=new Label(wFieldsComp,SWT.LEFT);
  wlFieldsTb.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.FieldTab.Label"));
  fdlFieldsTb=new FormData();
  fdlFieldsTb.left=new FormAttachment(0,0);
  fdlFieldsTb.top=new FormAttachment(0,0);
  fdlFieldsTb.right=new FormAttachment(100,0);
  wlFieldsTb.setLayoutData(fdlFieldsTb);
  ColumnInfo[] colinf1=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Field.Column1"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Field.Column2"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Field.Column3"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"Y","N"},true)};
  wFieldsTb=new TableView(transMeta,wFieldsComp,SWT.FULL_SELECTION | SWT.MULTI,colinf1,0,lsMod,props);
  fdFieldsTb=new FormData();
  fdFieldsTb.left=new FormAttachment(0,0);
  fdFieldsTb.top=new FormAttachment(wlFieldsTb,margin);
  fdFieldsTb.right=new FormAttachment(100,0);
  fdFieldsTb.bottom=new FormAttachment(95,-margin);
  wFieldsTb.setLayoutData(fdFieldsTb);
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wGetFieldsForFields=new Button(wFieldsComp,SWT.PUSH);
  wGetFieldsForFields.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.GetFields.Label"));
  fdGetFieldsForFields=new FormData();
  fdGetFieldsForFields.top=new FormAttachment(wFieldsTb,margin);
  fdGetFieldsForFields.left=new FormAttachment(0,margin);
  wGetFieldsForFields.setLayoutData(fdGetFieldsForFields);
  wGetFieldsForFields.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event event){
      getFields(wFieldsTab.getText());
    }
  }
);
  wDoMappingForFields=new Button(wFieldsComp,SWT.PUSH);
  wDoMappingForFields.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.EditMapping.Label"));
  fdDoMappingForFields=new FormData();
  fdDoMappingForFields.top=new FormAttachment(wFieldsTb,margin);
  fdDoMappingForFields.left=new FormAttachment(wGetFieldsForFields,margin);
  wDoMappingForFields.setLayoutData(fdDoMappingForFields);
  wDoMappingForFields.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event event){
      generateMappings(wFieldsTab.getText());
    }
  }
);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  wCustomTab=new CTabItem(wTabFolder,SWT.NONE);
  wCustomTab.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.CustomTab.TabTitle"));
  wCustomComp=new Composite(wTabFolder,SWT.NONE);
  wCustomComp.setLayout(fieldsLayout);
  props.setLook(wCustomComp);
  wlCustomTb=new Label(wCustomComp,SWT.LEFT);
  wlCustomTb.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.CustomTab.Label"));
  fdlCustomTb=new FormData();
  fdlCustomTb.left=new FormAttachment(0,0);
  fdlCustomTb.top=new FormAttachment(0,0);
  fdlCustomTb.right=new FormAttachment(100,0);
  wlCustomTb.setLayoutData(fdlCustomTb);
  wCustomTb=new StyledTextComp(wCustomComp,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wCustomTb,Props.WIDGET_STYLE_FIXED);
  wCustomTb.addModifyListener(lsMod);
  fdCustomTb=new FormData();
  fdCustomTb.left=new FormAttachment(0,0);
  fdCustomTb.top=new FormAttachment(wlCustomTb,margin);
  fdCustomTb.right=new FormAttachment(100,-margin);
  fdCustomTb.bottom=new FormAttachment(100,-margin);
  wCustomTb.setLayoutData(fdCustomTb);
  SQLValuesHighlight lineStyler=new SQLValuesHighlight();
  wCustomTb.addLineStyleListener(lineStyler);
  fdCustomComp=new FormData();
  fdCustomComp.left=new FormAttachment(0,0);
  fdCustomComp.top=new FormAttachment(0,0);
  fdCustomComp.right=new FormAttachment(100,0);
  fdCustomComp.bottom=new FormAttachment(100,0);
  wCustomComp.setLayoutData(fdCustomComp);
  wCustomComp.layout();
  wCustomTab.setControl(wCustomComp);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wSQL},margin,null);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wPort.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
