{
  TableView myTb;
  boolean flag=false;
  if (tabName.equals(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.KeyTab.TabTitle"))) {
    myTb=wKeysTb;
  }
 else   if (tabName.equals(BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.FieldsTab.TabTitle"))) {
    myTb=wFieldsTb;
    if (BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.Operation.CCombo.Item2").equalsIgnoreCase(wOperation.getItem(wOperation.getSelectionIndex()))) {
      flag=true;
    }
  }
 else {
    return;
  }
  RowMetaInterface sourceFields;
  RowMetaInterface targetFields;
  try {
    sourceFields=transMeta.getPrevStepFields(stepMeta);
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.UnableToFindSourceFields.Title"),BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.UnableToFindSourceFields.Message"),e);
    return;
  }
  input.setDatabaseMeta(transMeta.findDatabase(wConnection.getText()));
  input.setTableName(transMeta.environmentSubstitute(wTable.getText()));
  StepMetaInterface stepMetaInterface=stepMeta.getStepMetaInterface();
  try {
    targetFields=stepMetaInterface.getRequiredFields(transMeta);
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.UnableToFindTargetFields.Title"),BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.UnableToFindTargetFields.Message"),e);
    return;
  }
  String[] inputNames=new String[sourceFields.size()];
  for (int i=0; i < sourceFields.size(); i++) {
    ValueMetaInterface value=sourceFields.getValueMeta(i);
    inputNames[i]=value.getName() + EnterMappingDialog.STRING_ORIGIN_SEPARATOR + value.getOrigin()+ ")";
  }
  List<SourceToTargetMapping> mappings=new ArrayList<SourceToTargetMapping>();
  StringBuffer missingSourceFields=new StringBuffer();
  StringBuffer missingTargetFields=new StringBuffer();
  if (missingSourceFields.length() > 0 || missingTargetFields.length() > 0) {
    String message="";
    if (missingSourceFields.length() > 0) {
      message+=BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.SomeSourceFieldsNotFound",missingSourceFields.toString()) + Const.CR;
    }
    if (missingTargetFields.length() > 0) {
      message+=BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.SomeTargetFieldsNotFound",missingSourceFields.toString()) + Const.CR;
    }
    message+=Const.CR;
    message+=BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.SomeFieldsNotFoundContinue") + Const.CR;
    MessageDialog.setDefaultImage(GUIResource.getInstance().getImageSpoon());
    boolean goOn=MessageDialog.openConfirm(shell,BaseMessages.getString(PKG,"LucidDBStreamingLoaderDialog.DoMapping.SomeFieldsNotFoundTitle"),message);
    if (!goOn) {
      return;
    }
  }
  EnterMappingDialog d=new EnterMappingDialog(LucidDBStreamingLoaderDialog.this.shell,sourceFields.getFieldNames(),targetFields.getFieldNames(),mappings);
  mappings=d.open();
  if (mappings != null) {
    myTb.table.removeAll();
    myTb.table.setItemCount(mappings.size());
    for (int i=0; i < mappings.size(); i++) {
      SourceToTargetMapping mapping=(SourceToTargetMapping)mappings.get(i);
      TableItem item=myTb.table.getItem(i);
      item.setText(2,sourceFields.getValueMeta(mapping.getSourcePosition()).getName());
      item.setText(1,targetFields.getValueMeta(mapping.getTargetPosition()).getName());
    }
    myTb.setRowNums();
    myTb.optWidth(true);
    int width=myTb.table.getColumn(3).getWidth();
    if (flag) {
      myTb.table.getColumn(3).setWidth(0);
    }
 else {
      myTb.table.getColumn(3).setWidth(width);
    }
  }
}
