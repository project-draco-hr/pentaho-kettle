{
  try {
    String id=XMLHandler.getTagAttribute(plugin,"id");
    String name=XMLHandler.getTagAttribute(plugin,"name");
    String description=XMLHandler.getTagAttribute(plugin,"description");
    String classname=XMLHandler.getTagAttribute(plugin,"classname");
    String metaClassname=XMLHandler.getTagAttribute(plugin,"metaclassname");
    String dialogClassname=XMLHandler.getTagAttribute(plugin,"dialogclassname");
    String versionBrowserClassName=XMLHandler.getTagAttribute(plugin,"versionbrowserclassname");
    Node libsnode=XMLHandler.getSubNode(plugin,"libraries");
    int nrlibs=XMLHandler.countNodes(libsnode,"library");
    String jarfiles[]=new String[nrlibs];
    if (path != null) {
      for (int j=0; j < nrlibs; j++) {
        Node libnode=XMLHandler.getSubNodeByNr(libsnode,"library",j);
        String jarfile=XMLHandler.getTagAttribute(libnode,"name");
        jarfiles[j]=path + Const.FILE_SEPARATOR + jarfile;
      }
    }
    Node locNamesNode=XMLHandler.getSubNode(plugin,"localized_name");
    int nrNameNodes=XMLHandler.countNodes(locNamesNode,"name");
    Map<String,String> localizedNames=new Hashtable<String,String>();
    for (int j=0; j < nrNameNodes; j++) {
      Node locNameNode=XMLHandler.getSubNodeByNr(locNamesNode,"name",j);
      String locale=XMLHandler.getTagAttribute(locNameNode,"locale");
      String locName=XMLHandler.getNodeValue(locNameNode);
      if (!Const.isEmpty(locale) && !Const.isEmpty(locName)) {
        localizedNames.put(locale.toLowerCase(),locName);
      }
    }
    Node locDescsNode=XMLHandler.getSubNode(plugin,"localized_description");
    int nrLocDescs=XMLHandler.countNodes(locDescsNode,"description");
    Map<String,String> localizedDescriptions=new Hashtable<String,String>();
    for (int j=0; j < nrLocDescs; j++) {
      Node locDescNode=XMLHandler.getSubNodeByNr(locDescsNode,"description",j);
      String locale=XMLHandler.getTagAttribute(locDescNode,"locale");
      String locDesc=XMLHandler.getNodeValue(locDescNode);
      if (!Const.isEmpty(locale) && !Const.isEmpty(locDesc)) {
        localizedDescriptions.put(locale.toLowerCase(),locDesc);
      }
    }
    RepositoryPluginMeta pluginMeta=new RepositoryPluginMeta(id,name,description,classname,metaClassname,dialogClassname,versionBrowserClassName,jarfiles,localizedNames,localizedDescriptions);
    if (findPluginMeta(id) == null) {
      pluginMetaList.add(pluginMeta);
    }
 else {
      int idx=pluginMetaList.indexOf(pluginMeta);
      pluginMetaList.set(idx,pluginMeta);
    }
  }
 catch (  Throwable e) {
    throw new KettleException(BaseMessages.getString(PKG,"RepositoryLoader.RuntimeError.UnableToReadPluginXML.TRANS0001"),e);
  }
}
