{
  Node node=getTestNode();
  DatabaseMeta dbMeta=mock(DatabaseMeta.class);
  IMetaStore metastore=mock(IMetaStore.class);
  Repository rep=mock(Repository.class);
  WebServiceMeta webServiceMeta=new WebServiceMeta();
  webServiceMeta.loadXML(node,Collections.singletonList(dbMeta),metastore);
  StringObjectId aTransId=new StringObjectId("aTransId");
  StringObjectId aStepId=new StringObjectId("aStepId");
  webServiceMeta.saveRep(rep,metastore,aTransId,aStepId);
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsUrl","http://webservices.gama-system.com/exchangerates.asmx?WSDL");
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsOperation","GetCurrentExchangeRate");
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsOperationRequest","opRequestName");
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsOperationNamespace","http://www.gama-system.com/webservices");
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsInFieldContainer",null);
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsInFieldArgument",null);
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsOutFieldContainer","GetCurrentExchangeRateResult");
  verify(rep).saveStepAttribute(aTransId,aStepId,"wsOutFieldArgument","GetCurrentExchangeRateResult");
  verify(rep).saveStepAttribute(aTransId,aStepId,"proxyHost","aProxy");
  verify(rep).saveStepAttribute(aTransId,aStepId,"proxyPort","4444");
  verify(rep).saveStepAttribute(aTransId,aStepId,"httpLogin","httpUser");
  verify(rep).saveStepAttribute(aTransId,aStepId,"httpPassword","tryandguess");
  verify(rep).saveStepAttribute(aTransId,aStepId,"callStep",1);
  verify(rep).saveStepAttribute(aTransId,aStepId,"passingInputData",false);
  verify(rep).saveStepAttribute(aTransId,aStepId,"compatible",true);
  verify(rep).saveStepAttribute(aTransId,aStepId,"repeating_element",null);
  verify(rep).saveStepAttribute(aTransId,aStepId,"reply_as_string",false);
  verify(rep).saveStepAttribute(aTransId,aStepId,0,"fieldIn_name","Bank");
  verify(rep).saveStepAttribute(aTransId,aStepId,0,"fieldIn_ws_name","strBank");
  verify(rep).saveStepAttribute(aTransId,aStepId,0,"fieldIn_xsd_type","string");
  verify(rep).saveStepAttribute(aTransId,aStepId,1,"fieldIn_name","ToCurrency");
  verify(rep).saveStepAttribute(aTransId,aStepId,1,"fieldIn_ws_name","strCurrency");
  verify(rep).saveStepAttribute(aTransId,aStepId,1,"fieldIn_xsd_type","string");
  verify(rep).saveStepAttribute(aTransId,aStepId,2,"fieldIn_name","Rank");
  verify(rep).saveStepAttribute(aTransId,aStepId,2,"fieldIn_ws_name","intRank");
  verify(rep).saveStepAttribute(aTransId,aStepId,2,"fieldIn_xsd_type","int");
  verify(rep).saveStepAttribute(aTransId,aStepId,0,"fieldOut_name","GetCurrentExchangeRateResult");
  verify(rep).saveStepAttribute(aTransId,aStepId,0,"fieldOut_ws_name","GetCurrentExchangeRateResult");
  verify(rep).saveStepAttribute(aTransId,aStepId,0,"fieldOut_xsd_type","decimal");
  Mockito.verifyNoMoreInteractions(rep);
}
