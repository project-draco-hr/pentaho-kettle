{
  Repository rep=mock(Repository.class);
  IMetaStore metastore=mock(IMetaStore.class);
  DatabaseMeta dbMeta=mock(DatabaseMeta.class);
  StringObjectId id_step=new StringObjectId("oid");
  when(rep.getStepAttributeString(id_step,"wsOperation")).thenReturn("GetCurrentExchangeRate");
  when(rep.getStepAttributeString(id_step,"wsOperationRequest")).thenReturn("opRequest");
  when(rep.getStepAttributeString(id_step,"wsOperationNamespace")).thenReturn("opNamespace");
  when(rep.getStepAttributeString(id_step,"wsInFieldContainer")).thenReturn("ifc");
  when(rep.getStepAttributeString(id_step,"wsInFieldArgument")).thenReturn("ifa");
  when(rep.getStepAttributeString(id_step,"wsOutFieldContainer")).thenReturn("ofc");
  when(rep.getStepAttributeString(id_step,"wsOutFieldArgument")).thenReturn("ofa");
  when(rep.getStepAttributeString(id_step,"proxyHost")).thenReturn("phost");
  when(rep.getStepAttributeString(id_step,"proxyPort")).thenReturn("1234");
  when(rep.getStepAttributeString(id_step,"httpLogin")).thenReturn("user");
  when(rep.getStepAttributeString(id_step,"httpPassword")).thenReturn("password");
  when(rep.getStepAttributeInteger(id_step,"callStep")).thenReturn(2L);
  when(rep.getStepAttributeBoolean(id_step,"passingInputData")).thenReturn(true);
  when(rep.getStepAttributeBoolean(id_step,0,"compatible",true)).thenReturn(false);
  when(rep.getStepAttributeString(id_step,"repeating_element")).thenReturn("repeat");
  when(rep.getStepAttributeBoolean(id_step,0,"reply_as_string")).thenReturn(true);
  when(rep.countNrStepAttributes(id_step,"fieldIn_ws_name")).thenReturn(2);
  when(rep.getStepAttributeString(id_step,0,"fieldIn_name")).thenReturn("bank");
  when(rep.getStepAttributeString(id_step,0,"fieldIn_ws_name")).thenReturn("inBank");
  when(rep.getStepAttributeString(id_step,0,"fieldIn_xsd_type")).thenReturn("string");
  when(rep.getStepAttributeString(id_step,1,"fieldIn_name")).thenReturn("branch");
  when(rep.getStepAttributeString(id_step,1,"fieldIn_ws_name")).thenReturn("inBranch");
  when(rep.getStepAttributeString(id_step,1,"fieldIn_xsd_type")).thenReturn("string");
  when(rep.countNrStepAttributes(id_step,"fieldOut_ws_name")).thenReturn(2);
  when(rep.getStepAttributeString(id_step,0,"fieldOut_name")).thenReturn("balance");
  when(rep.getStepAttributeString(id_step,0,"fieldOut_ws_name")).thenReturn("outBalance");
  when(rep.getStepAttributeString(id_step,0,"fieldOut_xsd_type")).thenReturn("int");
  when(rep.getStepAttributeString(id_step,1,"fieldOut_name")).thenReturn("transactions");
  when(rep.getStepAttributeString(id_step,1,"fieldOut_ws_name")).thenReturn("outTransactions");
  when(rep.getStepAttributeString(id_step,1,"fieldOut_xsd_type")).thenReturn("int");
  WebServiceMeta webServiceMeta=new WebServiceMeta(rep,metastore,id_step,Collections.singletonList(dbMeta));
  assertEquals("    <wsURL/>\n" + "    <wsOperation>GetCurrentExchangeRate</wsOperation>\n" + "    <wsOperationRequest>opRequest</wsOperationRequest>\n"+ "    <wsOperationNamespace>opNamespace</wsOperationNamespace>\n"+ "    <wsInFieldContainer>ifc</wsInFieldContainer>\n"+ "    <wsInFieldArgument>ifa</wsInFieldArgument>\n"+ "    <wsOutFieldContainer>ofc</wsOutFieldContainer>\n"+ "    <wsOutFieldArgument>ofa</wsOutFieldArgument>\n"+ "    <proxyHost>phost</proxyHost>\n"+ "    <proxyPort>1234</proxyPort>\n"+ "    <httpLogin>user</httpLogin>\n"+ "    <httpPassword>password</httpPassword>\n"+ "    <callStep>2</callStep>\n"+ "    <passingInputData>Y</passingInputData>\n"+ "    <compatible>N</compatible>\n"+ "    <repeating_element>repeat</repeating_element>\n"+ "    <reply_as_string>Y</reply_as_string>\n"+ "    <fieldsIn>\n"+ "    <field>\n"+ "        <name>bank</name>\n"+ "        <wsName>inBank</wsName>\n"+ "        <xsdType>string</xsdType>\n"+ "    </field>\n"+ "    <field>\n"+ "        <name>branch</name>\n"+ "        <wsName>inBranch</wsName>\n"+ "        <xsdType>string</xsdType>\n"+ "    </field>\n"+ "      </fieldsIn>\n"+ "    <fieldsOut>\n"+ "    <field>\n"+ "        <name>balance</name>\n"+ "        <wsName>outBalance</wsName>\n"+ "        <xsdType>int</xsdType>\n"+ "    </field>\n"+ "    <field>\n"+ "        <name>transactions</name>\n"+ "        <wsName>outTransactions</wsName>\n"+ "        <xsdType>int</xsdType>\n"+ "    </field>\n"+ "      </fieldsOut>\n",webServiceMeta.getXML());
}
