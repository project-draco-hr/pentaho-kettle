{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("DB Procedure Call");
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText("Step name ");
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabase() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wbProcName=new Button(shell,SWT.PUSH);
  wbProcName.setText(" &Find it... ");
  fdbProcName=new FormData();
  fdbProcName.right=new FormAttachment(100,0);
  fdbProcName.top=new FormAttachment(wConnection,margin * 2);
  wbProcName.setLayoutData(fdbProcName);
  wbProcName.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      DatabaseMeta dbInfo=transMeta.findDatabase(wConnection.getText());
      if (dbInfo != null) {
        Database db=new Database(dbInfo);
        try {
          db.connect();
          String[] procs=db.getProcedures();
          if (procs != null && procs.length > 0) {
            EnterSelectionDialog esd=new EnterSelectionDialog(shell,props,procs,"Enter choice","Select a procedure");
            String proc=esd.open();
            if (proc != null) {
              wProcName.setText(proc);
            }
          }
 else {
            MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_INFORMATION);
            mb.setMessage("I couldn't find any procedures to select from.");
            mb.setText("Sorry");
            mb.open();
          }
        }
 catch (        KettleDatabaseException dbe) {
          new ErrorDialog(shell,props,"Error","Error getting list of available procedures",dbe);
        }
 finally {
          db.disconnect();
        }
      }
    }
  }
);
  wlProcName=new Label(shell,SWT.RIGHT);
  wlProcName.setText("Proc-name ");
  props.setLook(wlProcName);
  fdlProcName=new FormData();
  fdlProcName.left=new FormAttachment(0,0);
  fdlProcName.right=new FormAttachment(middle,-margin);
  fdlProcName.top=new FormAttachment(wConnection,margin * 2);
  wlProcName.setLayoutData(fdlProcName);
  wProcName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wProcName);
  wProcName.addModifyListener(lsMod);
  fdProcName=new FormData();
  fdProcName.left=new FormAttachment(middle,0);
  fdProcName.top=new FormAttachment(wConnection,margin * 2);
  fdProcName.right=new FormAttachment(wbProcName,-margin);
  wProcName.setLayoutData(fdProcName);
  wlResult=new Label(shell,SWT.RIGHT);
  wlResult.setText("Result name ");
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(wProcName,margin * 2);
  wlResult.setLayoutData(fdlResult);
  wResult=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(wProcName,margin * 2);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  wlResultType=new Label(shell,SWT.RIGHT);
  wlResultType.setText("Result type ");
  props.setLook(wlResultType);
  fdlResultType=new FormData();
  fdlResultType.left=new FormAttachment(0,0);
  fdlResultType.right=new FormAttachment(middle,-margin);
  fdlResultType.top=new FormAttachment(wResult,margin);
  wlResultType.setLayoutData(fdlResultType);
  wResultType=new CCombo(shell,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wResultType);
  String types[]=Value.getTypes();
  for (int x=0; x < types.length; x++)   wResultType.add(types[x]);
  wResultType.select(0);
  wResultType.addModifyListener(lsMod);
  fdResultType=new FormData();
  fdResultType.left=new FormAttachment(middle,0);
  fdResultType.top=new FormAttachment(wResult,margin);
  fdResultType.right=new FormAttachment(100,0);
  wResultType.setLayoutData(fdResultType);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText("Parameters : ");
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wResultType,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsCols=3;
  final int FieldsRows=input.getArgument().length;
  ColumnInfo[] colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo("Name",ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[1]=new ColumnInfo("Direction",ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"IN","OUT","INOUT"});
  colinf[2]=new ColumnInfo("Type",ColumnInfo.COLUMN_TYPE_CCOMBO,Value.getTypes());
  wFields=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(" &Get Fields ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,wFields);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
