{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("Stream Value Lookup");
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText("Step name ");
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlStep=new Label(shell,SWT.RIGHT);
  wlStep.setText("Source step ");
  props.setLook(wlStep);
  fdlStep=new FormData();
  fdlStep.left=new FormAttachment(0,0);
  fdlStep.right=new FormAttachment(middle,-margin);
  fdlStep.top=new FormAttachment(wStepname,margin * 2);
  wlStep.setLayoutData(fdlStep);
  wStep=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wStep);
  for (int i=0; i < transMeta.findNrPrevSteps(stepname,true); i++) {
    StepMeta stepMeta=transMeta.findPrevStep(stepname,i,true);
    wStep.add(stepMeta.getName());
  }
  wStep.addModifyListener(lsMod);
  fdStep=new FormData();
  fdStep.left=new FormAttachment(middle,0);
  fdStep.top=new FormAttachment(wStepname,margin * 2);
  fdStep.right=new FormAttachment(100,0);
  wStep.setLayoutData(fdStep);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText("The key(s) to look up the value(s): ");
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wStep,margin);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=2;
  int nrKeyRows=(input.getKeystream() != null ? input.getKeystream().length : 1);
  ColumnInfo[] ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo("Field",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[1]=new ColumnInfo("LookupField",ColumnInfo.COLUMN_TYPE_TEXT,false);
  wKey=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(100,0);
  fdKey.bottom=new FormAttachment(wlKey,180);
  wKey.setLayoutData(fdKey);
  wlReturn=new Label(shell,SWT.NONE);
  wlReturn.setText("Specify the fields to retrieve :");
  props.setLook(wlReturn);
  fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(wKey,margin);
  wlReturn.setLayoutData(fdlReturn);
  int UpInsCols=4;
  int UpInsRows=(input.getValue() != null ? input.getValue().length : 1);
  ColumnInfo[] ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo("Field",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[1]=new ColumnInfo("New name",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[2]=new ColumnInfo("Default",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[3]=new ColumnInfo("Type",ColumnInfo.COLUMN_TYPE_CCOMBO,Value.getTypes());
  wReturn=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlReturn,margin);
  fdReturn.right=new FormAttachment(100,0);
  fdReturn.bottom=new FormAttachment(100,-75);
  wReturn.setLayoutData(fdReturn);
  wlSortedInput=new Label(shell,SWT.RIGHT);
  wlSortedInput.setText("Both streams are sorted on lookup key? ");
  props.setLook(wlSortedInput);
  fdlSortedInput=new FormData();
  fdlSortedInput.left=new FormAttachment(0,0);
  fdlSortedInput.top=new FormAttachment(wReturn,margin);
  fdlSortedInput.right=new FormAttachment(middle,-margin);
  wlSortedInput.setLayoutData(fdlSortedInput);
  wSortedInput=new Button(shell,SWT.CHECK);
  props.setLook(wSortedInput);
  fdSortedInput=new FormData();
  fdSortedInput.left=new FormAttachment(middle,0);
  fdSortedInput.top=new FormAttachment(wReturn,margin);
  fdSortedInput.right=new FormAttachment(100,0);
  wSortedInput.setLayoutData(fdSortedInput);
  wSortedInput.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(" &Get Fields ");
  wGetLU=new Button(shell,SWT.PUSH);
  wGetLU.setText(" Get &lookup fields ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  setButtonPositions(new Button[]{wOK,wGet,wGetLU,wCancel},margin,wSortedInput);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getlookup();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
