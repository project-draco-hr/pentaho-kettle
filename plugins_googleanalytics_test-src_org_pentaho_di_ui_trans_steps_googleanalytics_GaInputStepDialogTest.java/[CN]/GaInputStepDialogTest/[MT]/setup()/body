{
  PluginRegistry.addPluginType(ValueMetaPluginType.getInstance());
  PluginRegistry.init();
  GaData gaData=new GaData();
  headers=new ArrayList<>();
  headers.add(createColumnHeader("DIMENSION","ga:date",null));
  headers.add(createColumnHeader("DIMENSION","ga:daysSinceLastVisit",null));
  headers.add(createColumnHeader("DIMENSION","ga:visitLength",null));
  headers.add(createColumnHeader("DIMENSION","ga:visitCount",null));
  headers.add(createColumnHeader("DIMENSION","ga:latitude",null));
  headers.add(createColumnHeader("DIMENSION","ga:longitude",null));
  headers.add(createColumnHeader("DIMENSION","ga:other",null));
  headers.add(createColumnHeader("METRIC","currency","currency"));
  headers.add(createColumnHeader("METRIC","float","float"));
  headers.add(createColumnHeader("METRIC","percent","percent"));
  headers.add(createColumnHeader("METRIC","us_currency","us_currency"));
  headers.add(createColumnHeader("METRIC","time","time"));
  headers.add(createColumnHeader("METRIC","integer","integer"));
  headers.add(createColumnHeader("METRIC","other","other"));
  gaData.setColumnHeaders(headers);
  gaData.setProfileInfo(new GaData.ProfileInfo());
  List<List<String>> data=new ArrayList<>();
  data.add(new ArrayList<String>());
  gaData.setRows(data);
  doReturn(gaData).when(query).execute();
  doReturn(tableItem).when(table).getItem(anyInt());
  tableView.table=table;
  doReturn(tableView).when(dialog).getTableView();
  doCallRealMethod().when(dialog).getFields();
  doReturn(query).when(dialog).getPreviewQuery();
  doReturn(mock(GaInputStepMeta.class)).when(dialog).getInput();
}
