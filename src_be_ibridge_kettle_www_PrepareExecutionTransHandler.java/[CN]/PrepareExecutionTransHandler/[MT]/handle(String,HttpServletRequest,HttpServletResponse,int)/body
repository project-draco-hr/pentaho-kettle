{
  if (!request.getContextPath().equals(CONTEXT_PATH))   return;
  if (!isStarted())   return;
  if (log.isDebug())   log.logDebug(toString(),"Prepare execution of transformation requested");
  OutputStream os=response.getOutputStream();
  PrintStream out=new PrintStream(os);
  String transName=request.getParameter("name");
  boolean useXML="Y".equalsIgnoreCase(request.getParameter("xml"));
  if (useXML) {
    response.setContentType("text/xml");
    out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));
  }
 else {
    response.setContentType("text/html");
    out.println("<HTML>");
    out.println("<HEAD><TITLE>Prepare execution of transformation</TITLE></HEAD>");
    out.println("<BODY>");
  }
  try {
    KettleVariables kettleVariables=LocalVariables.getInstance().createKettleVariables(Thread.currentThread().getName(),transformationMap.getParentThreadName(),false);
    Trans trans=transformationMap.getTransformation(transName);
    TransConfiguration transConfiguration=transformationMap.getConfiguration(transName);
    if (trans != null && transConfiguration != null) {
      TransExecutionConfiguration executionConfiguration=transConfiguration.getTransExecutionConfiguration();
      log.setLogLevel(executionConfiguration.getLogLevel());
      kettleVariables.setVariables(executionConfiguration.getVariables());
      trans.getTransMeta().setArguments(executionConfiguration.getArgumentStrings());
      trans.setReplayDate(executionConfiguration.getReplayDate());
      Log4jStringAppender appender=LogWriter.createStringAppender();
      log.addAppender(appender);
      transformationMap.addAppender(transName,appender);
      if (trans.prepareExecution(null)) {
        if (useXML) {
          out.println(WebResult.OK.getXML());
        }
 else {
          out.println("<H1>Transformation '" + transName + "' was started.</H1>");
          out.println("<a href=\"/kettle/transStatus?name=" + transName + "\">Back to the transformation status page</a><p>");
        }
      }
 else {
        if (useXML) {
          out.println(new WebResult(WebResult.STRING_ERROR,"Initialisation of transformation failed: " + Const.CR + appender.getBuffer().toString()));
        }
 else {
          out.println("<H1>Transformation '" + transName + "' was not initialised correctly.</H1>");
          out.println("<pre>");
          out.println(appender.getBuffer().toString());
          out.println("</pre>");
          out.println("<a href=\"/kettle/transStatus?name=" + transName + "\">Back to the transformation status page</a><p>");
        }
      }
    }
 else {
      if (useXML) {
        out.println(new WebResult(WebResult.STRING_ERROR,"The specified transformation [" + transName + "] could not be found"));
      }
 else {
        out.println("<H1>Transformation '" + transName + "' could not be found.</H1>");
        out.println("<a href=\"/kettle/status\">Back to the status page</a><p>");
      }
    }
  }
 catch (  Exception ex) {
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_ERROR,"Unexpected error during transformation execution preparation:" + Const.CR + Const.getStackTracker(ex)));
    }
 else {
      out.println("<p>");
      out.println("<pre>");
      ex.printStackTrace(out);
      out.println("</pre>");
    }
  }
  if (!useXML) {
    out.println("<p>");
    out.println("</BODY>");
    out.println("</HTML>");
  }
  out.flush();
  Request baseRequest=(request instanceof Request) ? (Request)request : HttpConnection.getCurrentConnection().getRequest();
  baseRequest.setHandled(true);
}
