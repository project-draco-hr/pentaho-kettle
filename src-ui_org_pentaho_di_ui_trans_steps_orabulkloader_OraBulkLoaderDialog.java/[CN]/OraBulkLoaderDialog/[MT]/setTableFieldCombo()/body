{
  Runnable fieldLoader=new Runnable(){
    public void run(){
      if (wTable == null || wTable.isDisposed()) {
        return;
      }
      String table=wTable.getText();
      for (int i=0; i < tableFieldColumns.size(); i++) {
        ColumnInfo colInfo=(ColumnInfo)tableFieldColumns.get(i);
        colInfo.setComboValues(new String[]{});
      }
      if (!Const.isEmpty(table)) {
        DatabaseMeta ci=transMeta.findDatabase(wConnection.getText());
        if (ci != null) {
          Database db=new Database(loggingObject,ci);
          try {
            db.connect();
            String schemaTable=ci.getQuotedSchemaTableCombination(transMeta.environmentSubstitute(wSchema.getText()),transMeta.environmentSubstitute(table));
            RowMetaInterface r=db.getTableFields(schemaTable);
            if (null != r) {
              String[] fieldNames=r.getFieldNames();
              if (null != fieldNames) {
                for (int i=0; i < tableFieldColumns.size(); i++) {
                  ColumnInfo colInfo=(ColumnInfo)tableFieldColumns.get(i);
                  colInfo.setComboValues(fieldNames);
                }
              }
            }
          }
 catch (          Exception e) {
            for (int i=0; i < tableFieldColumns.size(); i++) {
              ColumnInfo colInfo=(ColumnInfo)tableFieldColumns.get(i);
              colInfo.setComboValues(new String[]{});
            }
          }
        }
      }
    }
  }
;
  shell.getDisplay().asyncExec(fieldLoader);
}
