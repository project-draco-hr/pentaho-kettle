{
  if (first) {
    first=false;
    data.sortedBuffer=new ArrayList<RowSetRow>();
    data.rowMeta=null;
    for (int i=0; i < inputRowSets.size() && !isStopped(); i++) {
      RowSet rowSet=inputRowSets.get(i);
      if (!rowSet.isDone()) {
        Object[] row=getRowFrom(rowSet);
        if (row != null) {
          data.sortedBuffer.add(new RowSetRow(rowSet,rowSet.getRowMeta(),row));
          if (data.rowMeta == null)           data.rowMeta=(RowMetaInterface)rowSet.getRowMeta().clone();
          if (data.fieldIndices == null) {
            data.fieldIndices=new int[meta.getFieldName().length];
            for (int f=0; f < data.fieldIndices.length; f++) {
              data.fieldIndices[f]=data.rowMeta.indexOfValue(meta.getFieldName()[f]);
              if (data.fieldIndices[f] < 0) {
                throw new KettleStepException("Unable to find fieldname [" + meta.getFieldName()[f] + "] in row : "+ data.rowMeta);
              }
              data.rowMeta.getValueMeta(data.fieldIndices[f]).setSortedDescending(!meta.getAscending()[f]);
            }
          }
        }
      }
      data.comparator=new Comparator<RowSetRow>(){
        public int compare(        RowSetRow o1,        RowSetRow o2){
          try {
            return o1.getRowMeta().compare(o1.getRowData(),o2.getRowData(),data.fieldIndices);
          }
 catch (          KettleValueException e) {
            return 0;
          }
        }
      }
;
      Collections.sort(data.sortedBuffer,data.comparator);
    }
  }
  if (data.sortedBuffer.isEmpty()) {
    return null;
  }
  RowSetRow smallestRow=data.sortedBuffer.get(0);
  Object[] outputRowData=smallestRow.getRowData();
  Object[] extraRow=getRowFrom(smallestRow.getRowSet());
  if (extraRow != null) {
    RowSetRow add=new RowSetRow(smallestRow.getRowSet(),smallestRow.getRowSet().getRowMeta(),extraRow);
    int index=Collections.binarySearch(data.sortedBuffer,add,data.comparator);
    if (index < 0) {
      data.sortedBuffer.add(-index - 1,add);
    }
 else {
      data.sortedBuffer.add(index,add);
    }
  }
  if (isSafeModeEnabled()) {
    safeModeChecking(smallestRow.getRowMeta());
  }
  return outputRowData;
}
