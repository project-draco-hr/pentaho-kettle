{
  try {
    RowMetaInterface r=transMeta.getPrevStepFields(stepname);
    if (r != null) {
      TableItemInsertListener listener=new TableItemInsertListener(){
        public boolean tableItemInserted(        TableItem tableItem,        ValueMetaInterface v){
          if (v.isNumeric()) {
            tableItem.setText(6,Const.NVL(v.getCurrencySymbol(),""));
            tableItem.setText(7,Const.NVL(v.getDecimalSymbol(),""));
            tableItem.setText(8,Const.NVL(v.getGroupingSymbol(),""));
          }
          tableItem.setText(9,Const.NVL(ValueMeta.getTrimTypeDesc(v.getTrimType()),""));
          if (!Const.isEmpty(v.getConversionMask())) {
            tableItem.setText(3,v.getConversionMask());
          }
 else {
            if (v.isNumber()) {
              if (v.getLength() > 0) {
                int le=v.getLength();
                int pr=v.getPrecision();
                if (v.getPrecision() <= 0) {
                  pr=0;
                }
                String mask="";
                for (int m=0; m < le - pr; m++) {
                  mask+="0";
                }
                if (pr > 0) {
                  mask+=".";
                }
                for (int m=0; m < pr; m++) {
                  mask+="0";
                }
                tableItem.setText(3,mask);
              }
            }
          }
          return true;
        }
      }
;
      BaseStepDialog.getFieldsFromPrevious(r,wFields,1,new int[]{1},new int[]{2},4,5,listener);
    }
  }
 catch (  KettleException ke) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Title"),BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"),ke);
  }
}
