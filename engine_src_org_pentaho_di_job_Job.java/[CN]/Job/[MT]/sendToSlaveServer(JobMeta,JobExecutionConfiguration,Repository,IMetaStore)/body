{
  String carteObjectId;
  SlaveServer slaveServer=executionConfiguration.getRemoteServer();
  if (slaveServer == null) {
    throw new KettleException(BaseMessages.getString(PKG,"Job.Log.NoSlaveServerSpecified"));
  }
  if (Const.isEmpty(jobMeta.getName())) {
    throw new KettleException(BaseMessages.getString(PKG,"Job.Log.UniqueJobName"));
  }
  slaveServer.getLogChannel().setLogLevel(executionConfiguration.getLogLevel());
  try {
    for (    String var : Const.INTERNAL_TRANS_VARIABLES) {
      executionConfiguration.getVariables().put(var,jobMeta.getVariable(var));
    }
    for (    String var : Const.INTERNAL_JOB_VARIABLES) {
      executionConfiguration.getVariables().put(var,jobMeta.getVariable(var));
    }
    if (executionConfiguration.isPassingExport()) {
      FileObject tempFile=KettleVFS.createTempFile("jobExport",".zip",System.getProperty("java.io.tmpdir"),jobMeta);
      TopLevelResource topLevelResource=ResourceUtil.serializeResourceExportInterface(tempFile.getName().toString(),jobMeta,jobMeta,repository,metaStore,executionConfiguration.getXML(),CONFIGURATION_IN_EXPORT_FILENAME);
      String result=slaveServer.sendExport(topLevelResource.getArchiveName(),AddExportServlet.TYPE_JOB,topLevelResource.getBaseResourceName());
      WebResult webResult=WebResult.fromXMLString(result);
      if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
        throw new KettleException("There was an error passing the exported job to the remote server: " + Const.CR + webResult.getMessage());
      }
      carteObjectId=webResult.getId();
    }
 else {
      String xml=new JobConfiguration(jobMeta,executionConfiguration).getXML();
      String reply=slaveServer.sendXML(xml,AddJobServlet.CONTEXT_PATH + "/?xml=Y");
      WebResult webResult=WebResult.fromXMLString(reply);
      if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
        throw new KettleException("There was an error posting the job on the remote server: " + Const.CR + webResult.getMessage());
      }
      carteObjectId=webResult.getId();
    }
    String reply=slaveServer.execService(StartJobServlet.CONTEXT_PATH + "/?name=" + URLEncoder.encode(jobMeta.getName(),"UTF-8")+ "&xml=Y&id="+ carteObjectId);
    WebResult webResult=WebResult.fromXMLString(reply);
    if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
      throw new KettleException("There was an error starting the job on the remote server: " + Const.CR + webResult.getMessage());
    }
    return carteObjectId;
  }
 catch (  Exception e) {
    throw new KettleException(e);
  }
}
