{
  GenericObjectPool gpool=new GenericObjectPool();
  gpool.setMaxIdle(-1);
  gpool.setWhenExhaustedAction(GenericObjectPool.WHEN_EXHAUSTED_GROW);
  gpool.setMaxActive(maximumSize);
  String clazz=databaseMeta.getDriverClass();
  try {
    Class.forName(clazz).newInstance();
  }
 catch (  Exception e) {
    throw new Exception("Unable to load driver for connect [" + databaseMeta.getName() + "], class ["+ clazz+ "]",e);
  }
  String url;
  String userName;
  String password;
  try {
    url=StringUtil.environmentSubstitute(databaseMeta.getURL());
    userName=StringUtil.environmentSubstitute(databaseMeta.getUsername());
    password=StringUtil.environmentSubstitute(databaseMeta.getPassword());
  }
 catch (  RuntimeException e) {
    url=databaseMeta.getURL();
    userName=databaseMeta.getUsername();
    password=databaseMeta.getPassword();
  }
  ConnectionFactory cf=new DriverManagerConnectionFactory(url,userName,password);
  new PoolableConnectionFactory(cf,gpool,null,null,false,false);
  for (int i=0; i < initialSize; i++) {
    gpool.addObject();
  }
  pd.registerPool(databaseMeta.getName(),gpool);
}
