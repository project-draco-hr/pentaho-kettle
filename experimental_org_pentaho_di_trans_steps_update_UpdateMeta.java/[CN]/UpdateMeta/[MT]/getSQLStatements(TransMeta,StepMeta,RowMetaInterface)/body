{
  SQLStatement retval=new SQLStatement(stepMeta.getName(),databaseMeta,null);
  if (databaseMeta != null) {
    if (prev != null && prev.size() > 0) {
      if (!Const.isEmpty(tableName)) {
        String schemaTable=databaseMeta.getQuotedSchemaTableCombination(schemaName,tableName);
        Database db=new Database(databaseMeta);
        try {
          db.connect();
          if (getIgnoreFlagField() != null && getIgnoreFlagField().length() > 0) {
            prev.addValueMeta(new ValueMeta(getIgnoreFlagField(),ValueMetaInterface.TYPE_BOOLEAN));
          }
          String cr_table=db.getDDL(schemaTable,prev,null,false,null,true);
          String cr_index="";
          String idx_fields[]=null;
          if (keyLookup != null && keyLookup.length > 0) {
            idx_fields=new String[keyLookup.length];
            for (int i=0; i < keyLookup.length; i++)             idx_fields[i]=keyLookup[i];
          }
 else {
            retval.setError(Messages.getString("UpdateMeta.CheckResult.MissingKeyFields"));
          }
          if (idx_fields != null && idx_fields.length > 0 && !db.checkIndexExists(schemaName,tableName,idx_fields)) {
            String indexname="idx_" + tableName + "_lookup";
            cr_index=db.getCreateIndexStatement(schemaName,tableName,indexname,idx_fields,false,false,false,true);
          }
          String sql=cr_table + cr_index;
          if (sql.length() == 0)           retval.setSQL(null);
 else           retval.setSQL(sql);
        }
 catch (        KettleException e) {
          retval.setError(Messages.getString("UpdateMeta.ReturnValue.ErrorOccurred") + e.getMessage());
        }
      }
 else {
        retval.setError(Messages.getString("UpdateMeta.ReturnValue.NoTableDefinedOnConnection"));
      }
    }
 else {
      retval.setError(Messages.getString("UpdateMeta.ReturnValue.NotReceivingAnyFields"));
    }
  }
 else {
    retval.setError(Messages.getString("UpdateMeta.ReturnValue.NoConnectionDefined"));
  }
  return retval;
}
