{
  try {
    Object referencedMeta=null;
    Trans subTrans=getActiveSubtransformation(this,stepMeta);
    if (subTrans != null && (stepMeta.getStepMetaInterface().getActiveReferencedObjectDescription() == null || index < 0)) {
      TransMeta subTransMeta=subTrans.getTransMeta();
      referencedMeta=subTransMeta;
      Object[] objectArray=new Object[4];
      objectArray[0]=stepMeta;
      objectArray[1]=subTransMeta;
      ExtensionPointHandler.callExtensionPoint(log,KettleExtensionPoint.OpenMapping.id,objectArray);
    }
 else {
      StepMetaInterface meta=stepMeta.getStepMetaInterface();
      if (!Const.isEmpty(meta.getReferencedObjectDescriptions())) {
        referencedMeta=meta.loadReferencedObject(index,spoon.rep,spoon.metaStore,transMeta);
      }
    }
    if (referencedMeta == null) {
      return;
    }
    if (referencedMeta instanceof TransMeta) {
      TransMeta mappingMeta=(TransMeta)referencedMeta;
      mappingMeta.clearChanged();
      spoon.addTransGraph(mappingMeta);
      TransGraph subTransGraph=spoon.getActiveTransGraph();
      attachActiveTrans(subTransGraph,this.currentStep);
    }
    if (referencedMeta instanceof JobMeta) {
      JobMeta jobMeta=(JobMeta)referencedMeta;
      jobMeta.clearChanged();
      spoon.addJobGraph(jobMeta);
      JobGraph jobGraph=spoon.getActiveJobGraph();
      attachActiveJob(jobGraph,this.currentStep);
    }
  }
 catch (  Exception e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"TransGraph.Exception.UnableToLoadMapping.Title"),BaseMessages.getString(PKG,"TransGraph.Exception.UnableToLoadMapping.Message"),e);
  }
}
