{
  TransMeta transMeta=spoon.getActiveTransformation();
  if (transMeta == null) {
    return;
  }
  if (lastChained != null && transMeta.findStep(lastChained.getName()) == null) {
    lastChained=null;
  }
  List<StepMeta> sel=transMeta.getSelectedSteps();
  if (sel.size() == 1) {
    lastChained=sel.get(0);
  }
  Point p=null;
  if (lastChained == null) {
    p=transMeta.getMaximum();
    p.x-=100;
  }
 else {
    p=new Point(lastChained.getLocation().x,lastChained.getLocation().y);
  }
  p.x+=200;
  StepMeta newStep=spoon.newStep(transMeta,stepPlugin.getName(),stepPlugin.getName(),false,true);
  if (newStep == null) {
    return;
  }
  newStep.setLocation(p.x,p.y);
  newStep.setDraw(true);
  if (lastChained != null) {
    TransHopMeta hop=new TransHopMeta(lastChained,newStep);
    spoon.newHop(transMeta,hop);
  }
  lastChained=newStep;
  spoon.refreshGraph();
  spoon.refreshTree();
  if (shift) {
    editStep(newStep);
  }
  transMeta.unselectAll();
  newStep.setSelected(true);
}
