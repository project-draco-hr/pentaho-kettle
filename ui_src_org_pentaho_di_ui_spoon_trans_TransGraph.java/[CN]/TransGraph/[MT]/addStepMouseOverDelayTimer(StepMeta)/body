{
  if (mouseOverSteps.contains(stepMeta)) {
    return;
  }
  mouseOverSteps.add(stepMeta);
  DelayTimer delayTimer=new DelayTimer(500,new DelayListener(){
    public void expired(){
      mouseOverSteps.remove(stepMeta);
      delayTimers.remove(stepMeta);
      showTargetStreamsStep=null;
      asyncRedraw();
    }
  }
,new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      Point cursor=getLastMove();
      if (cursor != null) {
        AreaOwner areaOwner=getVisibleAreaOwner(cursor.x,cursor.y);
        if (areaOwner != null) {
          AreaType areaType=areaOwner.getAreaType();
          if (areaType == AreaType.STEP_ICON) {
            StepMeta selectedStepMeta=(StepMeta)areaOwner.getOwner();
            return selectedStepMeta == stepMeta;
          }
 else           if (areaType.belongsToTransContextMenu()) {
            StepMeta selectedStepMeta=(StepMeta)areaOwner.getParent();
            return selectedStepMeta == stepMeta;
          }
        }
      }
      return false;
    }
  }
);
  new Thread(delayTimer).start();
  delayTimers.put(stepMeta,delayTimer);
}
