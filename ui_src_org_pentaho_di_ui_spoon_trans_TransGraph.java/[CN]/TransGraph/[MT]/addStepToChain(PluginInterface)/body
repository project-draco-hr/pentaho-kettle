{
  TransMeta transMeta=spoon.getActiveTransformation();
  if (transMeta == null) {
    return;
  }
  Point p=null;
  if (lastChained == null) {
    p=new Point(0,50);
  }
 else {
    p=new Point(lastChained.getLocation().x,lastChained.getLocation().y);
  }
  p.x+=200;
  try {
    StepMetaInterface stepMetaInterface=(StepMetaInterface)PluginRegistry.getInstance().loadClass(stepPlugin);
    StepMeta newStep=new StepMeta(stepPlugin.getName(),stepMetaInterface);
    newStep.setLocation(p.x,p.y);
    newStep.setDraw(true);
    transMeta.addStep(newStep);
    transMeta.addTransHop(new TransHopMeta(lastChained,newStep));
    lastChained=newStep;
    spoon.refreshGraph();
    spoon.refreshTree();
  }
 catch (  KettlePluginException e) {
    LogChannel.GENERAL.logError("Error chaining step...",e);
  }
}
