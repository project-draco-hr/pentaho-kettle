{
  meta=(ScriptValuesMetaMod)smi;
  data=(ScriptValuesModData)sdi;
  Object[] r=getRow();
  if (r == null) {
    try {
      if (data.cx != null) {
        if (strEndScript != null && strEndScript.length() > 0) {
          Script endScript=data.cx.compileString(strEndScript,"trans_End",1,null);
          endScript.exec(data.cx,data.scope);
          if (log.isDetailed())           logDetailed(("End Script found!"));
        }
 else {
          if (log.isDetailed())           logDetailed(("No end Script found!"));
        }
      }
    }
 catch (    Exception e) {
      logError(BaseMessages.getString(PKG,"ScriptValuesMod.Log.UnexpectedeError") + " : " + e.toString());
      logError(BaseMessages.getString(PKG,"ScriptValuesMod.Log.ErrorStackTrace") + Const.CR + Const.getStackTracker(e));
      setErrors(1);
      stopAll();
    }
    if (data.cx != null)     Context.exit();
    setOutputDone();
    return false;
  }
  try {
    addValues(getInputRowMeta(),r);
  }
 catch (  KettleValueException e) {
    String location=null;
    if (e.getCause() instanceof EvaluatorException) {
      EvaluatorException ee=(EvaluatorException)e.getCause();
      location="--> " + ee.lineNumber() + ":"+ ee.columnNumber();
    }
    if (getStepMeta().isDoingErrorHandling()) {
      putError(getInputRowMeta(),r,1,e.getMessage() + Const.CR + location,null,"SCR-001");
      bRC=true;
    }
 else {
      throw (e);
    }
  }
  if (checkFeedback(getLinesRead()))   logBasic(BaseMessages.getString(PKG,"ScriptValuesMod.Log.LineNumber") + getLinesRead());
  return bRC;
}
