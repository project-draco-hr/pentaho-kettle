{
  meta=(CsvInputMeta)smi;
  data=(CsvInputData)sdi;
  if (super.init(smi,sdi)) {
    data.preferredBufferSize=Integer.parseInt(environmentSubstitute(meta.getBufferSize()));
    if (getTransMeta().findNrPrevSteps(getStepMeta()) == 0) {
      String filename=environmentSubstitute(meta.getFilename());
      if (Const.isEmpty(filename)) {
        logError(BaseMessages.getString(PKG,"CsvInput.MissingFilename.Message"));
        return false;
      }
      data.filenames=new String[]{filename};
    }
 else {
      data.filenames=null;
      data.filenr=0;
    }
    data.totalBytesRead=0L;
    try {
      if (Const.isEmpty(meta.getEncoding())) {
        data.delimiter=environmentSubstitute(meta.getDelimiter()).getBytes();
      }
 else {
        data.delimiter=environmentSubstitute(meta.getDelimiter()).getBytes(meta.getEncoding());
      }
    }
 catch (    UnsupportedEncodingException e) {
      logError(BaseMessages.getString(PKG,"CsvInput.BadEncoding.Message"),e);
      return false;
    }
    if (Const.isEmpty(meta.getEnclosure())) {
      data.enclosure=null;
    }
 else {
      data.enclosure=environmentSubstitute(meta.getEnclosure()).getBytes();
    }
    data.isAddingRowNumber=!Const.isEmpty(meta.getRowNumField());
    data.stopReading=false;
    if (meta.isRunningInParallel()) {
      data.stepNumber=getUniqueStepNrAcrossSlaves();
      data.totalNumberOfSteps=getUniqueStepCountAcrossSlaves();
      data.fileSizes=new ArrayList<Long>();
      data.totalFileSize=0L;
    }
    return true;
  }
  return false;
}
