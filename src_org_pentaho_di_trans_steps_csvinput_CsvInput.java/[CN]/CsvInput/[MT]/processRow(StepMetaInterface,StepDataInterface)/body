{
  meta=(CsvInputMeta)smi;
  data=(CsvInputData)sdi;
  if (first) {
    first=false;
    data.outputRowMeta=new RowMeta();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    if (data.filenames == null) {
      getFilenamesFromPreviousSteps();
    }
    if (!openNextFile()) {
      setOutputDone();
      return false;
    }
    data.convertRowMeta=data.outputRowMeta.clone();
    for (    ValueMetaInterface valueMeta : data.convertRowMeta.getValueMetaList()) {
      valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_BINARY_STRING);
    }
    if (meta.isHeaderPresent()) {
      readOneRow(false);
    }
  }
  Object[] outputRowData=readOneRow(true);
  if (outputRowData == null) {
    if (openNextFile()) {
      return true;
    }
 else {
      setOutputDone();
      return false;
    }
  }
 else {
    putRow(data.outputRowMeta,outputRowData);
    if (checkFeedback(linesInput))     logBasic(Messages.getString("CsvInput.Log.LineNumber",Long.toString(linesInput)));
  }
  return true;
}
