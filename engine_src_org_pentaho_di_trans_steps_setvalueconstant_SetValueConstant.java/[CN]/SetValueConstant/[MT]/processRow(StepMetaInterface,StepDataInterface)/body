{
  meta=(SetValueConstantMeta)smi;
  data=(SetValueConstantData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.setOutputRowMeta(getInputRowMeta().clone());
    meta.getFields(data.getOutputRowMeta(),getStepname(),null,null,this,repository,metaStore);
    data.setConvertRowMeta(data.getOutputRowMeta().cloneToType(ValueMetaInterface.TYPE_STRING));
    if (meta.getFieldName() != null && meta.getFieldName().length > 0) {
      data.setFieldnrs(new int[meta.getFieldName().length]);
      data.setRealReplaceByValues(new String[meta.getReplaceValue().length]);
      for (int i=0; i < meta.getFieldName().length; i++) {
        for (int j=0; j < meta.getFieldName().length; j++) {
          if (meta.getFieldName()[j].equals(meta.getFieldName()[i])) {
            if (j != i) {
              throw new KettleException(BaseMessages.getString(PKG,"SetValueConstant.Log.FieldSpecifiedMoreThatOne",meta.getFieldName()[i],"" + i,"" + j));
            }
          }
        }
        data.getFieldnrs()[i]=data.getOutputRowMeta().indexOfValue(meta.getFieldName()[i]);
        if (data.getFieldnrs()[i] < 0) {
          logError(BaseMessages.getString(PKG,"SetValueConstant.Log.CanNotFindField",meta.getFieldName()[i]));
          throw new KettleException(BaseMessages.getString(PKG,"SetValueConstant.Log.CanNotFindField",meta.getFieldName()[i]));
        }
        if (meta.isSetEmptyString()[i]) {
          data.getRealReplaceByValues()[i]=StringUtil.EMPTY_STRING;
        }
 else {
          if (meta.isUseVars()) {
            data.getRealReplaceByValues()[i]=environmentSubstitute(meta.getReplaceValue()[i]);
          }
 else {
            data.getRealReplaceByValues()[i]=meta.getReplaceValue()[i];
          }
        }
      }
    }
 else {
      throw new KettleException(BaseMessages.getString(PKG,"SetValueConstant.Log.SelectFieldsEmpty"));
    }
    data.setFieldnr(data.getFieldnrs().length);
  }
  try {
    updateField(r);
    putRow(data.getOutputRowMeta(),r);
  }
 catch (  Exception e) {
    if (getStepMeta().isDoingErrorHandling()) {
      putError(data.getOutputRowMeta(),r,1,e.toString(),null,"SVC001");
    }
 else {
      logError(BaseMessages.getString(PKG,"SetValueConstant.Log.ErrorInStep",e.getMessage()));
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
  }
  return true;
}
