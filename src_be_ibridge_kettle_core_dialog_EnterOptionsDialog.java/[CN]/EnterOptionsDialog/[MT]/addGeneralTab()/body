{
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(Messages.getString("EnterOptionsDialog.General.Label"));
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  sGeneralComp=new ScrolledComposite(wTabFolder,SWT.V_SCROLL | SWT.H_SCROLL);
  sGeneralComp.setLayout(new FillLayout());
  wGeneralComp=new Composite(sGeneralComp,SWT.NONE);
  props.setLook(wGeneralComp);
  wGeneralComp.setLayout(generalLayout);
  wlMaxUndo=new Label(wGeneralComp,SWT.RIGHT);
  wlMaxUndo.setText(Messages.getString("EnterOptionsDialog.MaximumUndo.Label"));
  props.setLook(wlMaxUndo);
  FormData fdlMaxUndo=new FormData();
  fdlMaxUndo.left=new FormAttachment(0,0);
  fdlMaxUndo.right=new FormAttachment(middle,-margin);
  fdlMaxUndo.top=new FormAttachment(0,0);
  wlMaxUndo.setLayoutData(fdlMaxUndo);
  wMaxUndo=new Text(wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wMaxUndo.setText(Integer.toString(props.getMaxUndo()));
  props.setLook(wMaxUndo);
  FormData fdMaxUndo=new FormData();
  fdMaxUndo.left=new FormAttachment(middle,0);
  fdMaxUndo.right=new FormAttachment(100,-margin);
  fdMaxUndo.top=new FormAttachment(0,0);
  wMaxUndo.setLayoutData(fdMaxUndo);
  wlDefaultPreview=new Label(wGeneralComp,SWT.RIGHT);
  wlDefaultPreview.setText(Messages.getString("EnterOptionsDialog.DefaultPreviewSize.Label"));
  props.setLook(wlDefaultPreview);
  FormData fdlDefaultPreview=new FormData();
  fdlDefaultPreview.left=new FormAttachment(0,0);
  fdlDefaultPreview.right=new FormAttachment(middle,-margin);
  fdlDefaultPreview.top=new FormAttachment(wMaxUndo,margin);
  wlDefaultPreview.setLayoutData(fdlDefaultPreview);
  wDefaultPreview=new Text(wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wDefaultPreview.setText(Integer.toString(props.getDefaultPreviewSize()));
  props.setLook(wDefaultPreview);
  FormData fdDefaultPreview=new FormData();
  fdDefaultPreview.left=new FormAttachment(middle,0);
  fdDefaultPreview.right=new FormAttachment(100,-margin);
  fdDefaultPreview.top=new FormAttachment(wMaxUndo,margin);
  wDefaultPreview.setLayoutData(fdDefaultPreview);
  wlMaxNrLogLines=new Label(wGeneralComp,SWT.RIGHT);
  wlMaxNrLogLines.setText(Messages.getString("EnterOptionsDialog.MaxNrLogLinesSize.Label"));
  props.setLook(wlMaxNrLogLines);
  FormData fdlMaxNrLogLines=new FormData();
  fdlMaxNrLogLines.left=new FormAttachment(0,0);
  fdlMaxNrLogLines.right=new FormAttachment(middle,-margin);
  fdlMaxNrLogLines.top=new FormAttachment(wDefaultPreview,margin);
  wlMaxNrLogLines.setLayoutData(fdlMaxNrLogLines);
  wMaxNrLogLines=new Text(wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wMaxNrLogLines.setText(Integer.toString(props.getMaxNrLinesInLog()));
  props.setLook(wMaxNrLogLines);
  FormData fdMaxNrLogLines=new FormData();
  fdMaxNrLogLines.left=new FormAttachment(middle,0);
  fdMaxNrLogLines.right=new FormAttachment(100,-margin);
  fdMaxNrLogLines.top=new FormAttachment(wDefaultPreview,margin);
  wMaxNrLogLines.setLayoutData(fdMaxNrLogLines);
  wlShowTips=new Label(wGeneralComp,SWT.RIGHT);
  wlShowTips.setText(Messages.getString("EnterOptionsDialog.ShowTipsStartup.Label"));
  props.setLook(wlShowTips);
  FormData fdlShowTips=new FormData();
  fdlShowTips.left=new FormAttachment(0,0);
  fdlShowTips.top=new FormAttachment(wMaxNrLogLines,margin);
  fdlShowTips.right=new FormAttachment(middle,-margin);
  wlShowTips.setLayoutData(fdlShowTips);
  wShowTips=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wShowTips);
  wShowTips.setSelection(props.showTips());
  FormData fdShowTips=new FormData();
  fdShowTips.left=new FormAttachment(middle,0);
  fdShowTips.top=new FormAttachment(wMaxNrLogLines,margin);
  fdShowTips.right=new FormAttachment(100,0);
  wShowTips.setLayoutData(fdShowTips);
  wlShowWelcome=new Label(wGeneralComp,SWT.RIGHT);
  wlShowWelcome.setText(Messages.getString("EnterOptionsDialog.ShowWelcomePage.Label"));
  props.setLook(wlShowWelcome);
  FormData fdlShowWelcome=new FormData();
  fdlShowWelcome.left=new FormAttachment(0,0);
  fdlShowWelcome.top=new FormAttachment(wShowTips,margin);
  fdlShowWelcome.right=new FormAttachment(middle,-margin);
  wlShowWelcome.setLayoutData(fdlShowWelcome);
  wShowWelcome=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wShowWelcome);
  wShowWelcome.setSelection(props.showWelcomePageOnStartup());
  FormData fdShowWelcome=new FormData();
  fdShowWelcome.left=new FormAttachment(middle,0);
  fdShowWelcome.top=new FormAttachment(wShowTips,margin);
  fdShowWelcome.right=new FormAttachment(100,0);
  wShowWelcome.setLayoutData(fdShowWelcome);
  wlUseCache=new Label(wGeneralComp,SWT.RIGHT);
  wlUseCache.setText(Messages.getString("EnterOptionsDialog.UseDatabaseCache.Label"));
  props.setLook(wlUseCache);
  FormData fdlUseCache=new FormData();
  fdlUseCache.left=new FormAttachment(0,0);
  fdlUseCache.top=new FormAttachment(wShowWelcome,margin);
  fdlUseCache.right=new FormAttachment(middle,-margin);
  wlUseCache.setLayoutData(fdlUseCache);
  wUseCache=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wUseCache);
  wUseCache.setSelection(props.useDBCache());
  FormData fdUseCache=new FormData();
  fdUseCache.left=new FormAttachment(middle,0);
  fdUseCache.top=new FormAttachment(wShowWelcome,margin);
  fdUseCache.right=new FormAttachment(100,0);
  wUseCache.setLayoutData(fdUseCache);
  wlOpenLast=new Label(wGeneralComp,SWT.RIGHT);
  wlOpenLast.setText(Messages.getString("EnterOptionsDialog.OpenLastFileStartup.Label"));
  props.setLook(wlOpenLast);
  FormData fdlOpenLast=new FormData();
  fdlOpenLast.left=new FormAttachment(0,0);
  fdlOpenLast.top=new FormAttachment(wUseCache,margin);
  fdlOpenLast.right=new FormAttachment(middle,-margin);
  wlOpenLast.setLayoutData(fdlOpenLast);
  wOpenLast=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wOpenLast);
  wOpenLast.setSelection(props.openLastFile());
  FormData fdOpenLast=new FormData();
  fdOpenLast.left=new FormAttachment(middle,0);
  fdOpenLast.top=new FormAttachment(wUseCache,margin);
  fdOpenLast.right=new FormAttachment(100,0);
  wOpenLast.setLayoutData(fdOpenLast);
  wlAutoSave=new Label(wGeneralComp,SWT.RIGHT);
  wlAutoSave.setText(Messages.getString("EnterOptionsDialog.AutoSave.Label"));
  props.setLook(wlAutoSave);
  FormData fdlAutoSave=new FormData();
  fdlAutoSave.left=new FormAttachment(0,0);
  fdlAutoSave.top=new FormAttachment(wOpenLast,margin);
  fdlAutoSave.right=new FormAttachment(middle,-margin);
  wlAutoSave.setLayoutData(fdlAutoSave);
  wAutoSave=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wAutoSave);
  wAutoSave.setSelection(props.getAutoSave());
  FormData fdAutoSave=new FormData();
  fdAutoSave.left=new FormAttachment(middle,0);
  fdAutoSave.top=new FormAttachment(wOpenLast,margin);
  fdAutoSave.right=new FormAttachment(100,0);
  wAutoSave.setLayoutData(fdAutoSave);
  wlOnlyActiveFile=new Label(wGeneralComp,SWT.RIGHT);
  wlOnlyActiveFile.setText(Messages.getString("EnterOptionsDialog.OnlyActiveFile.Label"));
  props.setLook(wlOnlyActiveFile);
  FormData fdlOnlyActiveFile=new FormData();
  fdlOnlyActiveFile.left=new FormAttachment(0,0);
  fdlOnlyActiveFile.top=new FormAttachment(wAutoSave,margin);
  fdlOnlyActiveFile.right=new FormAttachment(middle,-margin);
  wlOnlyActiveFile.setLayoutData(fdlOnlyActiveFile);
  wOnlyActiveFile=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wOnlyActiveFile);
  wOnlyActiveFile.setSelection(props.isOnlyActiveFileShownInTree());
  FormData fdOnlyActiveFile=new FormData();
  fdOnlyActiveFile.left=new FormAttachment(middle,0);
  fdOnlyActiveFile.top=new FormAttachment(wAutoSave,margin);
  fdOnlyActiveFile.right=new FormAttachment(100,0);
  wOnlyActiveFile.setLayoutData(fdOnlyActiveFile);
  wlDBConnXML=new Label(wGeneralComp,SWT.RIGHT);
  wlDBConnXML.setText(Messages.getString("EnterOptionsDialog.OnlySaveUsedConnections.Label"));
  props.setLook(wlDBConnXML);
  FormData fdlDBConnXML=new FormData();
  fdlDBConnXML.left=new FormAttachment(0,0);
  fdlDBConnXML.top=new FormAttachment(wOnlyActiveFile,margin);
  fdlDBConnXML.right=new FormAttachment(middle,-margin);
  wlDBConnXML.setLayoutData(fdlDBConnXML);
  wDBConnXML=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wDBConnXML);
  wDBConnXML.setSelection(props.areOnlyUsedConnectionsSavedToXML());
  FormData fdDBConnXML=new FormData();
  fdDBConnXML.left=new FormAttachment(middle,0);
  fdDBConnXML.top=new FormAttachment(wOnlyActiveFile,margin);
  fdDBConnXML.right=new FormAttachment(100,0);
  wDBConnXML.setLayoutData(fdDBConnXML);
  wlAskReplaceDB=new Label(wGeneralComp,SWT.RIGHT);
  wlAskReplaceDB.setText(Messages.getString("EnterOptionsDialog.ReplaceDBAsk.Label"));
  props.setLook(wlAskReplaceDB);
  FormData fdlAskReplaceDB=new FormData();
  fdlAskReplaceDB.left=new FormAttachment(0,0);
  fdlAskReplaceDB.top=new FormAttachment(wDBConnXML,margin);
  fdlAskReplaceDB.right=new FormAttachment(middle,-margin);
  wlAskReplaceDB.setLayoutData(fdlAskReplaceDB);
  wAskReplaceDB=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wAskReplaceDB);
  wAskReplaceDB.setToolTipText(Messages.getString("EnterOptionsDialog.ReplaceDBAsk.Tooltip"));
  wAskReplaceDB.setSelection(props.askAboutReplacingDatabaseConnections());
  FormData fdAskReplaceDB=new FormData();
  fdAskReplaceDB.left=new FormAttachment(middle,0);
  fdAskReplaceDB.top=new FormAttachment(wDBConnXML,margin);
  fdAskReplaceDB.right=new FormAttachment(100,0);
  wAskReplaceDB.setLayoutData(fdAskReplaceDB);
  wlReplaceDB=new Label(wGeneralComp,SWT.RIGHT);
  wlReplaceDB.setText(Messages.getString("EnterOptionsDialog.ReplaceDB.Label"));
  props.setLook(wlReplaceDB);
  FormData fdlReplaceDB=new FormData();
  fdlReplaceDB.left=new FormAttachment(0,0);
  fdlReplaceDB.top=new FormAttachment(wAskReplaceDB,margin);
  fdlReplaceDB.right=new FormAttachment(middle,-margin);
  wlReplaceDB.setLayoutData(fdlReplaceDB);
  wReplaceDB=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wReplaceDB);
  wReplaceDB.setToolTipText(Messages.getString("EnterOptionsDialog.ReplaceDB.Tooltip"));
  wReplaceDB.setSelection(props.replaceExistingDatabaseConnections());
  FormData fdReplaceDB=new FormData();
  fdReplaceDB.left=new FormAttachment(middle,0);
  fdReplaceDB.top=new FormAttachment(wAskReplaceDB,margin);
  fdReplaceDB.right=new FormAttachment(100,0);
  wReplaceDB.setLayoutData(fdReplaceDB);
  wlSaveConf=new Label(wGeneralComp,SWT.RIGHT);
  wlSaveConf.setText(Messages.getString("EnterOptionsDialog.ShowSaveConfirmation.Label"));
  props.setLook(wlSaveConf);
  FormData fdlSaveConf=new FormData();
  fdlSaveConf.left=new FormAttachment(0,0);
  fdlSaveConf.top=new FormAttachment(wReplaceDB,margin);
  fdlSaveConf.right=new FormAttachment(middle,-margin);
  wlSaveConf.setLayoutData(fdlSaveConf);
  wSaveConf=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wSaveConf);
  wSaveConf.setSelection(props.getSaveConfirmation());
  FormData fdSaveConf=new FormData();
  fdSaveConf.left=new FormAttachment(middle,0);
  fdSaveConf.top=new FormAttachment(wReplaceDB,margin);
  fdSaveConf.right=new FormAttachment(100,0);
  wSaveConf.setLayoutData(fdSaveConf);
  wlAutoSplit=new Label(wGeneralComp,SWT.RIGHT);
  wlAutoSplit.setText(Messages.getString("EnterOptionsDialog.AutoSplitHops.Label"));
  props.setLook(wlAutoSplit);
  FormData fdlAutoSplit=new FormData();
  fdlAutoSplit.left=new FormAttachment(0,0);
  fdlAutoSplit.top=new FormAttachment(wSaveConf,margin);
  fdlAutoSplit.right=new FormAttachment(middle,-margin);
  wlAutoSplit.setLayoutData(fdlAutoSplit);
  wAutoSplit=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wAutoSplit);
  wAutoSplit.setToolTipText(Messages.getString("EnterOptionsDialog.AutoSplitHops.Tooltip"));
  wAutoSplit.setSelection(props.getAutoSplit());
  FormData fdAutoSplit=new FormData();
  fdAutoSplit.left=new FormAttachment(middle,0);
  fdAutoSplit.top=new FormAttachment(wSaveConf,margin);
  fdAutoSplit.right=new FormAttachment(100,0);
  wAutoSplit.setLayoutData(fdAutoSplit);
  wlCopyDistrib=new Label(wGeneralComp,SWT.RIGHT);
  wlCopyDistrib.setText(Messages.getString("EnterOptionsDialog.CopyOrDistributeDialog.Label"));
  props.setLook(wlCopyDistrib);
  FormData fdlCopyDistrib=new FormData();
  fdlCopyDistrib.left=new FormAttachment(0,0);
  fdlCopyDistrib.top=new FormAttachment(wAutoSplit,margin);
  fdlCopyDistrib.right=new FormAttachment(middle,-margin);
  wlCopyDistrib.setLayoutData(fdlCopyDistrib);
  wCopyDistrib=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wCopyDistrib);
  wCopyDistrib.setToolTipText(Messages.getString("EnterOptionsDialog.CopyOrDistributeDialog.Tooltip"));
  wCopyDistrib.setSelection(props.showCopyOrDistributeWarning());
  FormData fdCopyDistrib=new FormData();
  fdCopyDistrib.left=new FormAttachment(middle,0);
  fdCopyDistrib.top=new FormAttachment(wAutoSplit,margin);
  fdCopyDistrib.right=new FormAttachment(100,0);
  wCopyDistrib.setLayoutData(fdCopyDistrib);
  wlShowRep=new Label(wGeneralComp,SWT.RIGHT);
  wlShowRep.setText(Messages.getString("EnterOptionsDialog.ShowRepoDialog.Label"));
  props.setLook(wlShowRep);
  FormData fdlShowRep=new FormData();
  fdlShowRep.left=new FormAttachment(0,0);
  fdlShowRep.top=new FormAttachment(wCopyDistrib,margin);
  fdlShowRep.right=new FormAttachment(middle,-margin);
  wlShowRep.setLayoutData(fdlShowRep);
  wShowRep=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wShowRep);
  wShowRep.setSelection(props.showRepositoriesDialogAtStartup());
  FormData fdShowRep=new FormData();
  fdShowRep.left=new FormAttachment(middle,0);
  fdShowRep.top=new FormAttachment(wCopyDistrib,margin);
  fdShowRep.right=new FormAttachment(100,0);
  wShowRep.setLayoutData(fdShowRep);
  wlExitWarning=new Label(wGeneralComp,SWT.RIGHT);
  wlExitWarning.setText(Messages.getString("EnterOptionsDialog.AskOnExit.Label"));
  props.setLook(wlExitWarning);
  FormData fdlExitWarning=new FormData();
  fdlExitWarning.left=new FormAttachment(0,0);
  fdlExitWarning.top=new FormAttachment(wShowRep,margin);
  fdlExitWarning.right=new FormAttachment(middle,-margin);
  wlExitWarning.setLayoutData(fdlExitWarning);
  wExitWarning=new Button(wGeneralComp,SWT.CHECK);
  props.setLook(wExitWarning);
  wExitWarning.setSelection(props.showExitWarning());
  FormData fdExitWarning=new FormData();
  fdExitWarning.left=new FormAttachment(middle,0);
  fdExitWarning.top=new FormAttachment(wShowRep,margin);
  fdExitWarning.right=new FormAttachment(100,0);
  wExitWarning.setLayoutData(fdExitWarning);
  wlClearCustom=new Label(wGeneralComp,SWT.RIGHT);
  wlClearCustom.setText(Messages.getString("EnterOptionsDialog.ClearCustomParameters.Label"));
  props.setLook(wlClearCustom);
  FormData fdlClearCustom=new FormData();
  fdlClearCustom.left=new FormAttachment(0,0);
  fdlClearCustom.top=new FormAttachment(wExitWarning,margin + 10);
  fdlClearCustom.right=new FormAttachment(middle,-margin);
  wlClearCustom.setLayoutData(fdlClearCustom);
  wClearCustom=new Button(wGeneralComp,SWT.PUSH | SWT.BORDER);
  props.setLook(wClearCustom);
  FormData fdClearCustom=layoutResetOptionButton(wClearCustom);
  fdClearCustom.left=new FormAttachment(middle,0);
  fdClearCustom.top=new FormAttachment(wExitWarning,margin);
  wClearCustom.setLayoutData(fdClearCustom);
  wClearCustom.setToolTipText(Messages.getString("EnterOptionsDialog.ClearCustomParameters.Tooltip"));
  wClearCustom.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      MessageBox mb=new MessageBox(shell,SWT.YES | SWT.NO | SWT.ICON_QUESTION);
      mb.setMessage(Messages.getString("EnterOptionsDialog.ClearCustomParameters.Question"));
      mb.setText(Messages.getString("EnterOptionsDialog.ClearCustomParameters.Title"));
      int id=mb.open();
      if (id == SWT.YES) {
        props.clearCustomParameters();
        props.saveProps();
        MessageBox ok=new MessageBox(shell,SWT.OK | SWT.ICON_INFORMATION);
        ok.setMessage(Messages.getString("EnterOptionsDialog.ClearCustomParameters.Confirmation"));
        ok.open();
      }
    }
  }
);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.bottom=new FormAttachment(100,100);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.pack();
  Rectangle bounds=wGeneralComp.getBounds();
  sGeneralComp.setContent(wGeneralComp);
  sGeneralComp.setExpandHorizontal(true);
  sGeneralComp.setExpandVertical(true);
  sGeneralComp.setMinWidth(bounds.width);
  sGeneralComp.setMinHeight(bounds.height);
  wGeneralTab.setControl(sGeneralComp);
}
