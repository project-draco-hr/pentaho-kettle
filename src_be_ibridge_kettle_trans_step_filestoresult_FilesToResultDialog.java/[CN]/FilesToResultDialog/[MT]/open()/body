{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.MIN | SWT.MAX| SWT.RESIZE);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("FilesToResultDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("FilesToResultDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlFilenameField=new Label(shell,SWT.RIGHT);
  wlFilenameField.setText(Messages.getString("FilesToResultDialog.FilenameField.Label"));
  props.setLook(wlFilenameField);
  fdlFilenameField=new FormData();
  fdlFilenameField.left=new FormAttachment(0,0);
  fdlFilenameField.top=new FormAttachment(wStepname,margin);
  fdlFilenameField.right=new FormAttachment(middle,-margin);
  wlFilenameField.setLayoutData(fdlFilenameField);
  wFilenameField=new CCombo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wFilenameField.setToolTipText(Messages.getString("FilesToResultDialog.FilenameField.Tooltip"));
  props.setLook(wFilenameField);
  wFilenameField.addModifyListener(lsMod);
  fdFilenameField=new FormData();
  fdFilenameField.left=new FormAttachment(middle,0);
  fdFilenameField.top=new FormAttachment(wStepname,margin);
  fdFilenameField.right=new FormAttachment(100,0);
  wFilenameField.setLayoutData(fdFilenameField);
  Runnable runnable=new Runnable(){
    public void run(){
      try {
        Row inputfields=transMeta.getPrevStepFields(stepname);
        if (inputfields != null) {
          for (int i=0; i < inputfields.size(); i++) {
            wFilenameField.add(inputfields.getValue(i).getName());
          }
        }
      }
 catch (      Exception ke) {
        new ErrorDialog(shell,Messages.getString("FilesToResultDialog.FailedToGetFields.DialogTitle"),Messages.getString("FilesToResultDialog.FailedToGetFields.DialogMessage"),ke);
      }
    }
  }
;
  display.asyncExec(runnable);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,null);
  wlTypes=new Label(shell,SWT.RIGHT);
  wlTypes.setText(Messages.getString("FilesToResultDialog.TypeOfFile.Label"));
  props.setLook(wlTypes);
  fdlTypes=new FormData();
  fdlTypes.left=new FormAttachment(0,0);
  fdlTypes.top=new FormAttachment(wFilenameField,margin);
  fdlTypes.right=new FormAttachment(middle,-margin);
  wlTypes.setLayoutData(fdlTypes);
  wTypes=new List(shell,SWT.SINGLE | SWT.BORDER | SWT.V_SCROLL| SWT.H_SCROLL);
  wTypes.setToolTipText(Messages.getString("FilesToResultDialog.TypeOfFile.Tooltip"));
  props.setLook(wTypes);
  fdTypes=new FormData();
  fdTypes.left=new FormAttachment(middle,0);
  fdTypes.top=new FormAttachment(wFilenameField,margin);
  fdTypes.bottom=new FormAttachment(wOK,-margin * 3);
  fdTypes.right=new FormAttachment(100,0);
  wTypes.setLayoutData(fdTypes);
  for (int i=0; i < ResultFile.getAllTypeDesc().length; i++) {
    wTypes.add(ResultFile.getAllTypeDesc()[i]);
  }
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
