{
  int c=0;
  line.setLength(0);
  try {
switch (formatNr) {
case TextFileInputMeta.FILE_FORMAT_DOS:
{
        while (c >= 0) {
          c=reader.read();
          if (c == '\r' || c == '\n') {
            c=reader.read();
            if (c != '\r' && c != '\n') {
              throw new KettleFileException("DOS format was specified but only a single line feed character was found, not 2");
            }
            return line.toString();
          }
          if (c >= 0)           line.append((char)c);
        }
      }
    break;
case TextFileInputMeta.FILE_FORMAT_UNIX:
{
    while (c >= 0) {
      c=reader.read();
      if (c == '\n' || c == '\r') {
        return line.toString();
      }
      if (c >= 0)       line.append((char)c);
    }
  }
break;
case TextFileInputMeta.FILE_FORMAT_MIXED:
{
while (c >= 0) {
  c=reader.read();
  if (c == '\n') {
    return line.toString();
  }
 else   if (c != '\r') {
    if (c >= 0)     line.append((char)c);
  }
}
}
break;
}
}
 catch (KettleFileException e) {
throw e;
}
catch (Exception e) {
if (line.length() == 0) {
throw new KettleFileException("Exception reading line: " + e.toString(),e);
}
return line.toString();
}
if (line.length() > 0) return line.toString();
return null;
}
