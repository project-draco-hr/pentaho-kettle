{
  int idx[]=wFields.table.getSelectionIndices();
  if (idx.length == 0) {
    idx=new int[stats.size()];
    for (int i=0; i < stats.size(); i++)     idx[i]=i;
  }
  int errors=0;
  for (int i=0; i < idx.length; i++) {
    SQLStatement stat=stats.get(idx[i]);
    if (stat.hasError())     errors++;
  }
  if (errors == 0) {
    for (int i=0; i < idx.length; i++) {
      SQLStatement stat=stats.get(idx[i]);
      DatabaseMeta di=stat.getDatabase();
      if (di != null && !stat.hasError()) {
        Database db=new Database(loggingObject,di);
        try {
          db.connect();
          try {
            db.execStatements(stat.getSQL());
          }
 catch (          KettleDatabaseException dbe) {
            errors++;
            new ErrorDialog(shell,BaseMessages.getString(PKG,"SQLStatementDialog.Error.Title"),BaseMessages.getString(PKG,"SQLStatementDialog.Error.CouldNotExec",stat.getSQL()),dbe);
          }
        }
 catch (        KettleDatabaseException dbe) {
          new ErrorDialog(shell,BaseMessages.getString(PKG,"SQLStatementDialog.Error.Title"),BaseMessages.getString(PKG,"SQLStatementDialog.Error.CouldNotConnect",(di == null ? "" : di.getName())),dbe);
        }
 finally {
          db.disconnect();
        }
      }
    }
    if (errors == 0) {
      MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_INFORMATION);
      mb.setMessage(BaseMessages.getString(PKG,"SQLStatementDialog.Success.Message",Integer.toString(idx.length)));
      mb.setText(BaseMessages.getString(PKG,"SQLStatementDialog.Success.Title"));
      mb.open();
    }
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setMessage(BaseMessages.getString(PKG,"SQLStatementDialog.Error.Message",Integer.toString(errors)));
    mb.setText(BaseMessages.getString(PKG,"SQLStatementDialog.Error.Title"));
    mb.open();
  }
}
