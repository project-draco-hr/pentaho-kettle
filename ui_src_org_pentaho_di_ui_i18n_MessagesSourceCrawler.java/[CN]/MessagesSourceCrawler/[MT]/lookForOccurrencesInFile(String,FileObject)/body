{
  BufferedReader reader=new BufferedReader(new InputStreamReader(KettleVFS.getInputStream(javaFile)));
  String messagesPackage=null;
  int row=0;
  String classPackage=null;
  Map<String,String> importedClasses=new Hashtable<String,String>();
  String line=reader.readLine();
  while (line != null) {
    row++;
    String line2=line;
    boolean extraLine;
    do {
      extraLine=false;
      for (      String scanPhrase : scanPhrases) {
        if (line2.endsWith(scanPhrase)) {
          extraLine=true;
          break;
        }
      }
      if (extraLine) {
        line2=reader.readLine();
        line+=line2;
      }
    }
 while (extraLine);
    if (packagePattern.matcher(line).matches()) {
      int beginIndex=line.indexOf("org.pentaho.");
      int endIndex=line.indexOf(';');
      if (beginIndex >= 0 && endIndex >= 0) {
        messagesPackage=line.substring(beginIndex,endIndex);
        classPackage=messagesPackage;
      }
    }
    if (importPattern.matcher(line).matches()) {
      int beginIndex=line.indexOf("import") + "import".length() + 1;
      int endIndex=line.indexOf(";",beginIndex);
      String expression=line.substring(beginIndex,endIndex);
      int lastDotIndex=expression.lastIndexOf('.');
      if (lastDotIndex > 0) {
        String packageName=expression.substring(0,lastDotIndex);
        String className=expression.substring(lastDotIndex + 1);
        if (!"*".equals(className)) {
          importedClasses.put(className,packageName);
        }
      }
    }
    if (importMessagesPattern.matcher(line).matches()) {
      int beginIndex=line.indexOf("org.pentaho.");
      int endIndex=line.indexOf(".Messages;");
      messagesPackage=line.substring(beginIndex,endIndex);
    }
    if (stringPkgPattern.matcher(line).matches()) {
      int beginIndex=line.indexOf('"') + 1;
      int endIndex=line.indexOf('"',beginIndex);
      messagesPackage=line.substring(beginIndex,endIndex);
    }
    if (classPackage != null && classPkgPattern.matcher(line).matches()) {
      int fromIndex=line.indexOf('=') + 1;
      int toIndex=line.indexOf(".class",fromIndex);
      String expression=Const.trim(line.substring(fromIndex,toIndex));
      if (expression.contains(".")) {
        int lastDotIndex=expression.lastIndexOf('.');
        messagesPackage=expression.substring(0,lastDotIndex);
      }
 else {
        String packageName=importedClasses.get(expression);
        if (packageName == null) {
          messagesPackage=classPackage;
        }
 else {
          messagesPackage=packageName;
        }
      }
    }
    for (    String scanPhrase : scanPhrases) {
      int index=line.indexOf(scanPhrase);
      while (index >= 0) {
        if (index == 0 || (index > 0 & !Character.isJavaIdentifierPart(line.charAt(index - 1)))) {
          addLineOccurrence(sourceFolder,javaFile,messagesPackage,line,row,index,scanPhrase);
        }
        index=line.indexOf(scanPhrase,index + 1);
      }
    }
    line=reader.readLine();
  }
  reader.close();
}
