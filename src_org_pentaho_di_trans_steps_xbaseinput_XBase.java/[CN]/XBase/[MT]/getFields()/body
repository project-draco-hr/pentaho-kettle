{
  String debug="get fields from XBase file";
  RowMetaInterface row=new RowMeta();
  try {
    debug="allocate data types";
    datatype=new byte[reader.getFieldCount()];
    for (int i=0; i < reader.getFieldCount(); i++) {
      if (log.isDebug())       debug="get field #" + i;
      DBFField field=reader.getField(i);
      ValueMetaInterface value=null;
      datatype[i]=field.getDataType();
switch (datatype[i]) {
case DBFField.FIELD_TYPE_M:
        debug="memo field";
      System.out.println("Field #" + i + " is a memo-field! ("+ field.getName()+ ")");
case DBFField.FIELD_TYPE_C:
    debug="character field";
  value=new ValueMeta(field.getName(),ValueMetaInterface.TYPE_STRING);
value.setLength(field.getFieldLength());
break;
case FIELD_TYPE_I:
case DBFField.FIELD_TYPE_N:
case DBFField.FIELD_TYPE_F:
debug="Number field";
value=new ValueMeta(field.getName(),ValueMetaInterface.TYPE_NUMBER);
value.setLength(field.getFieldLength(),field.getDecimalCount());
break;
case DBFField.FIELD_TYPE_L:
debug="Logical field";
value=new ValueMeta(field.getName(),ValueMetaInterface.TYPE_BOOLEAN);
value.setLength(-1,-1);
break;
case DBFField.FIELD_TYPE_D:
debug="Date field";
value=new ValueMeta(field.getName(),ValueMetaInterface.TYPE_DATE);
value.setLength(-1,-1);
break;
default :
System.out.println("Unknown Datatype" + datatype[i]);
}
if (value != null) {
row.addValueMeta(value);
}
}
}
 catch (Exception e) {
throw new KettleException("Error reading DBF metadata (in part " + debug + ")",e);
}
return row;
}
