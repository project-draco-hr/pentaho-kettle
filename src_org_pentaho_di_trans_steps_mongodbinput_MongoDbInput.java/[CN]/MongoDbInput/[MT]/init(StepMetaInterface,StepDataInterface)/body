{
  if (super.init(stepMetaInterface,stepDataInterface)) {
    meta=(MongoDbInputMeta)stepMetaInterface;
    data=(MongoDbInputData)stepDataInterface;
    String hostname=environmentSubstitute(meta.getHostname());
    int port=Const.toInt(environmentSubstitute(meta.getPort()),27017);
    String db=environmentSubstitute(meta.getDbName());
    String collection=environmentSubstitute(meta.getCollection());
    try {
      data.mongo=new Mongo(hostname,port);
      data.db=data.mongo.getDB(db);
      String realUser=environmentSubstitute(meta.getAuthenticationUser());
      String realPass=Encr.decryptPasswordOptionallyEncrypted(environmentSubstitute(meta.getAuthenticationPassword()));
      if (!Const.isEmpty(realUser) || !Const.isEmpty(realPass)) {
        if (!data.db.authenticate(realUser,realPass.toCharArray())) {
          throw new KettleException(BaseMessages.getString(PKG,"MongoDbInput.ErrorAuthenticating.Exception"));
        }
      }
      data.collection=data.db.getCollection(collection);
      return true;
    }
 catch (    Exception e) {
      logError(BaseMessages.getString(PKG,"MongoDbInput.ErrorConnectingToMongoDb.Exception",hostname,"" + port,db,collection),e);
      return false;
    }
  }
 else {
    return false;
  }
}
