{
  stepname=textStepName.getText();
  DatabaseMeta dbMeta=transMeta.findDatabase(addConnectionLine.getText());
  if (dbMeta != null) {
    try {
      new OpenERPObjectInputData(dbMeta);
    }
 catch (    KettleException e) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"OpenERPObjectInputDialog.ConnectionTypeErrorTitle"),BaseMessages.getString(PKG,"OpenERPObjectInputDialog.ConnectionTypeErrorString"),e);
      return false;
    }
  }
  int readBatchSize=0;
  try {
    readBatchSize=Integer.parseInt(textReadBatchSize.getText());
  }
 catch (  NumberFormatException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"OpenERPObjectInputDialog.ParseErrorTitle"),BaseMessages.getString(PKG,"OpenERPObjectInputDialog.ParseErrorString",textReadBatchSize.getText()),e);
    return false;
  }
  ArrayList<FieldMapping> mappings=new ArrayList<FieldMapping>();
  for (int i=0; i < tableViewFields.table.getItemCount(); i++) {
    FieldMapping map=null;
    for (    FieldMapping sourceMap : sourceListMapping) {
      if (sourceMap.target_field_label.equals(tableViewFields.table.getItem(i).getText(1)) && sourceMap.target_model.equals(tableViewFields.table.getItem(i).getText(2)) && sourceMap.target_field.equals(tableViewFields.table.getItem(i).getText(3))) {
        map=sourceMap.Clone();
      }
    }
    if (map == null) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"OpenERPObjectInputDialog.MappingErrorTitle"),BaseMessages.getString(PKG,"OpenERPObjectInputDialog.MappingErrorTitle"),new Exception(BaseMessages.getString(PKG,"OpenERPObjectInputDialog.MappingErrorString",tableViewFields.table.getItem(i).getText(2))));
      return false;
    }
    mappings.add(map);
  }
  ArrayList<ReadFilter> filters=new ArrayList<ReadFilter>();
  for (int i=0; i < tableViewFilter.table.getItemCount(); i++) {
    ReadFilter filter=new ReadFilter();
    filter.setOperator(tableViewFilter.table.getItem(i).getText(1));
    filter.setFieldName(tableViewFilter.table.getItem(i).getText(2));
    filter.setComparator(tableViewFilter.table.getItem(i).getText(3));
    filter.setValue(tableViewFilter.table.getItem(i).getText(4));
    if (filter.getFieldName() != "") {
      filters.add(filter);
    }
  }
  targetMeta.setDatabaseMeta(transMeta.findDatabase(addConnectionLine.getText()));
  targetMeta.setModelName(comboModelName.getText());
  targetMeta.setReadBatchSize(readBatchSize);
  targetMeta.setMappings(mappings);
  targetMeta.setFilterList(filters);
  targetMeta.setChanged(true);
  return true;
}
