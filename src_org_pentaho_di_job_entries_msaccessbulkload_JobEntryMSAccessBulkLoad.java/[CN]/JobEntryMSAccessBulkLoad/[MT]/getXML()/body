{
  StringBuffer retval=new StringBuffer(50);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("include_subfolders",include_subfolders));
  retval.append("      ").append(XMLHandler.addTagValue("is_args_from_previous",is_args_from_previous));
  retval.append("      ").append(XMLHandler.addTagValue("add_result_filenames",add_result_filenames));
  retval.append("      ").append(XMLHandler.addTagValue("limit",limit));
  retval.append("      ").append(XMLHandler.addTagValue("success_condition",success_condition));
  retval.append("      <fields>").append(Const.CR);
  if (source_filefolder != null) {
    for (int i=0; i < source_filefolder.length; i++) {
      retval.append("        <field>").append(Const.CR);
      retval.append("          ").append(XMLHandler.addTagValue("source_filefolder",source_filefolder[i]));
      retval.append("          ").append(XMLHandler.addTagValue("source_wildcard",source_wildcard[i]));
      retval.append("          ").append(XMLHandler.addTagValue("delimiter",delimiter[i]));
      retval.append("          ").append(XMLHandler.addTagValue("target_db",target_Db[i]));
      retval.append("          ").append(XMLHandler.addTagValue("target_table",target_table[i]));
      retval.append("        </field>").append(Const.CR);
    }
  }
  retval.append("      </fields>").append(Const.CR);
  return retval.toString();
}
