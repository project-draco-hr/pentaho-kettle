{
  wTablesTab=new CTabItem(wTabFolder,SWT.NONE);
  wTablesTab.setText(BaseMessages.getString(PKG,"DimensionTableDialog.AttributesTab.Label"));
  FormLayout paramLayout=new FormLayout();
  paramLayout.marginWidth=Const.MARGIN;
  paramLayout.marginHeight=Const.MARGIN;
  Composite wTablesComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wTablesComp);
  wTablesComp.setLayout(paramLayout);
  Button wAddDefaultFields=new Button(wTablesComp,SWT.PUSH);
  wAddDefaultFields.setText(BaseMessages.getString(PKG,"DimensionTableDialog.AddDefaultFieldsButton.Label"));
  BaseStepDialog.positionBottomButtons(wTablesComp,new Button[]{wAddDefaultFields},margin,null);
  wAddDefaultFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      addDefaultAttributes();
    }
  }
);
  Label wlAtrributes=new Label(wTablesComp,SWT.RIGHT);
  wlAtrributes.setText(BaseMessages.getString(PKG,"DimensionTableDialog.Attributes.Label"));
  props.setLook(wlAtrributes);
  FormData fdlAttributes=new FormData();
  fdlAttributes.left=new FormAttachment(0,0);
  fdlAttributes.top=new FormAttachment(0,0);
  wlAtrributes.setLayoutData(fdlAttributes);
  final int FieldsRows=logicalTable.getLogicalColumns().size();
  List<DatabaseMeta> sharedDatabases=SharedDatabaseUtil.loadSharedDatabases();
  String[] databaseNames=SharedDatabaseUtil.getSortedDatabaseNames(sharedDatabases);
  String[] dataTypes=new String[DataType.values().length];
  for (int i=0; i < dataTypes.length; i++) {
    dataTypes[i]=DataType.values()[i].name();
  }
  String[] attributeTypes=new String[AttributeType.values().length];
  for (int i=0; i < AttributeType.values().length; i++) {
    attributeTypes[i]=AttributeType.values()[i].name();
  }
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.Name.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.Description.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.FieldType.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,attributeTypes),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.PhysicalName.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.DataType.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,dataTypes),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.DataLength.Label"),ColumnInfo.COLUMN_TYPE_TEXT,true),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.DataPrecision.Label"),ColumnInfo.COLUMN_TYPE_TEXT,true),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.SourceDatabase.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,databaseNames),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.SourceTable.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.SourceColumn.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"DimensionTableDialog.ColumnInfo.ConversionLogicRemarks.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wAttributes=new TableView(new Variables(),wTablesComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,null,props);
  FormData fdTables=new FormData();
  fdTables.left=new FormAttachment(0,0);
  fdTables.top=new FormAttachment(wlAtrributes,margin);
  fdTables.right=new FormAttachment(100,0);
  fdTables.bottom=new FormAttachment(wAddDefaultFields,-margin * 2);
  wAttributes.setLayoutData(fdTables);
  FormData fdTablesComp=new FormData();
  fdTablesComp.left=new FormAttachment(0,0);
  fdTablesComp.top=new FormAttachment(0,0);
  fdTablesComp.right=new FormAttachment(100,0);
  fdTablesComp.bottom=new FormAttachment(100,0);
  wTablesComp.setLayoutData(fdTablesComp);
  wTablesComp.layout();
  wTablesTab.setControl(wTablesComp);
}
