{
  StringBuffer xml=new StringBuffer();
  xml.append(XMLHandler.openTag(XML_TAG));
  xml.append(XMLHandler.addTagValue("name",fieldName));
  xml.append(XMLHandler.addTagValue("validation_name",name));
  xml.append(XMLHandler.addTagValue("max_length",maximumLength));
  xml.append(XMLHandler.addTagValue("min_length",minimumLength));
  xml.append(XMLHandler.addTagValue("null_allowed",nullAllowed));
  xml.append(XMLHandler.addTagValue("only_null_allowed",onlyNullAllowed));
  xml.append(XMLHandler.addTagValue("only_numeric_allowed",onlyNumericAllowed));
  xml.append(XMLHandler.addTagValue("data_type",ValueMeta.getTypeDesc(dataType)));
  xml.append(XMLHandler.addTagValue("data_type_verified",dataTypeVerified));
  xml.append(XMLHandler.addTagValue("conversion_mask",conversionMask));
  xml.append(XMLHandler.addTagValue("decimal_symbol",decimalSymbol));
  xml.append(XMLHandler.addTagValue("grouping_symbol",groupingSymbol));
  xml.append(XMLHandler.addTagValue("max_value",maximumValue));
  xml.append(XMLHandler.addTagValue("min_value",minimumValue));
  xml.append(XMLHandler.addTagValue("start_string",startString));
  xml.append(XMLHandler.addTagValue("end_string",endString));
  xml.append(XMLHandler.addTagValue("start_string_not_allowed",startStringNotAllowed));
  xml.append(XMLHandler.addTagValue("end_string_not_allowed",endStringNotAllowed));
  xml.append(XMLHandler.addTagValue("regular_expression",regularExpression));
  xml.append(XMLHandler.addTagValue("regular_expression_not_allowed",regularExpressionNotAllowed));
  xml.append(XMLHandler.addTagValue("error_code",errorCode));
  xml.append(XMLHandler.addTagValue("error_description",errorDescription));
  xml.append(XMLHandler.openTag(XML_TAG_ALLOWED));
  if (allowedValues != null) {
    for (    String allowedValue : allowedValues) {
      xml.append(XMLHandler.addTagValue("value",allowedValue));
    }
  }
  xml.append(XMLHandler.closeTag(XML_TAG_ALLOWED));
  xml.append(XMLHandler.closeTag(XML_TAG));
  return xml.toString();
}
