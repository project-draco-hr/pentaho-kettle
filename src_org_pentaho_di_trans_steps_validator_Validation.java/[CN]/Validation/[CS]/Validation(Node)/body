{
  this();
  fieldName=XMLHandler.getTagValue(calcnode,"name");
  name=XMLHandler.getTagValue(calcnode,"validation_name");
  if (Const.isEmpty(name))   name=fieldName;
  maximumLength=Const.toInt(XMLHandler.getTagValue(calcnode,"max_length"),-1);
  minimumLength=Const.toInt(XMLHandler.getTagValue(calcnode,"min_length"),-1);
  nullAllowed="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"null_allowed"));
  onlyNullAllowed="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"only_null_allowed"));
  onlyNumericAllowed="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"only_numeric_allowed"));
  dataType=ValueMeta.getType(XMLHandler.getTagValue(calcnode,"data_type"));
  dataTypeVerified="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"data_type_verified"));
  conversionMask=XMLHandler.getTagValue(calcnode,"conversion_mask");
  decimalSymbol=XMLHandler.getTagValue(calcnode,"decimal_symbol");
  groupingSymbol=XMLHandler.getTagValue(calcnode,"grouping_symbol");
  minimumValue=XMLHandler.getTagValue(calcnode,"min_value");
  maximumValue=XMLHandler.getTagValue(calcnode,"max_value");
  startString=XMLHandler.getTagValue(calcnode,"start_string");
  endString=XMLHandler.getTagValue(calcnode,"end_string");
  startStringNotAllowed=XMLHandler.getTagValue(calcnode,"start_string_not_allowed");
  endStringNotAllowed=XMLHandler.getTagValue(calcnode,"end_string_not_allowed");
  regularExpression=XMLHandler.getTagValue(calcnode,"regular_expression");
  regularExpressionNotAllowed=XMLHandler.getTagValue(calcnode,"regular_expression_not_allowed");
  errorCode=XMLHandler.getTagValue(calcnode,"error_code");
  errorDescription=XMLHandler.getTagValue(calcnode,"error_description");
  sourcingValues="Y".equalsIgnoreCase(XMLHandler.getTagValue(calcnode,"is_sourcing_values"));
  sourcingStepName=XMLHandler.getTagValue(calcnode,"sourcing_step");
  sourcingField=XMLHandler.getTagValue(calcnode,"sourcing_field");
  Node allowedValuesNode=XMLHandler.getSubNode(calcnode,XML_TAG_ALLOWED);
  int nrValues=XMLHandler.countNodes(allowedValuesNode,"value");
  allowedValues=new String[nrValues];
  for (int i=0; i < nrValues; i++) {
    Node allowedNode=XMLHandler.getSubNodeByNr(allowedValuesNode,"value",i);
    allowedValues[i]=XMLHandler.getNodeValue(allowedNode);
  }
}
