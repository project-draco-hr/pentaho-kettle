{
  this.stepid=stepMeta.stepid;
  this.stepname=stepMeta.stepname;
  if (stepMeta.stepMetaInterface != null) {
    setStepMetaInterface((StepMetaInterface)stepMeta.stepMetaInterface.clone());
  }
 else {
    this.stepMetaInterface=null;
  }
  this.selected=stepMeta.selected;
  this.distributes=stepMeta.distributes;
  this.setRowDistribution(stepMeta.getRowDistribution());
  this.copiesString=stepMeta.copiesString;
  this.copiesCache=null;
  if (stepMeta.location != null) {
    this.location=new Point(stepMeta.location.x,stepMeta.location.y);
  }
 else {
    this.location=null;
  }
  this.drawstep=stepMeta.drawstep;
  this.description=stepMeta.description;
  this.terminator=stepMeta.terminator;
  if (stepMeta.stepPartitioningMeta != null) {
    this.stepPartitioningMeta=stepMeta.stepPartitioningMeta.clone();
  }
 else {
    this.stepPartitioningMeta=null;
  }
  if (stepMeta.clusterSchema != null) {
    this.clusterSchema=stepMeta.clusterSchema.clone();
  }
 else {
    this.clusterSchema=null;
  }
  this.clusterSchemaName=stepMeta.clusterSchemaName;
  this.remoteInputSteps=new ArrayList<RemoteStep>();
  for (  RemoteStep remoteStep : stepMeta.remoteInputSteps) {
    this.remoteInputSteps.add((RemoteStep)remoteStep.clone());
  }
  this.remoteOutputSteps=new ArrayList<RemoteStep>();
  for (  RemoteStep remoteStep : stepMeta.remoteOutputSteps) {
    this.remoteOutputSteps.add((RemoteStep)remoteStep.clone());
  }
  if (stepMeta.stepErrorMeta != null) {
    this.stepErrorMeta=stepMeta.stepErrorMeta.clone();
  }
  this.attributesMap=copyStringMap(stepMeta.attributesMap);
  this.id=stepMeta.getObjectId();
  this.setChanged(true);
}
