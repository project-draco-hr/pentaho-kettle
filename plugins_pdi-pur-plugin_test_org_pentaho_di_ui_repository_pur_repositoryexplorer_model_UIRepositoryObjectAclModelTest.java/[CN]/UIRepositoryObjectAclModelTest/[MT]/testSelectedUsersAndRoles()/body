{
  UIRepositoryObjectAcl selectedUserAcl=new UIRepositoryObjectAcl(createUserAce(USER1));
  UIRepositoryObjectAcl selectedRoleAcl=new UIRepositoryObjectAcl(createRoleAce(ROLE1));
  UIRepositoryObjectAcl unselectedAcl=new UIRepositoryObjectAcl(createUserAce("FOO"));
  repositoryObjectAcls.addAcl(selectedUserAcl);
  repositoryObjectAcls.addAcl(selectedRoleAcl);
  repositoryObjectAclModel.setAclsList(defaultUserNameList,defaultRoleNameList);
  assertStringListMatches(Arrays.asList(new String[]{USER2,USER3}),repositoryObjectAclModel.getAvailableUserList());
  assertStringListMatches(Arrays.asList(new String[]{ROLE2,ROLE3}),repositoryObjectAclModel.getAvailableRoleList());
  assertEquals(repositoryObjectAclModel.getSelectedAvailableUsers().get(0),defaultUserNameList.get(0));
  assertEquals(repositoryObjectAclModel.getSelectedAvailableRoles().get(0),defaultRoleNameList.get(0));
  assertNameToAclListMatches(Arrays.asList(new String[]{USER1,ROLE1}),repositoryObjectAclModel.getSelectedAcls().getAcls());
  assertEquals(selectedUserAcl,repositoryObjectAclModel.getSelectedUser(0));
  assertEquals(0,repositoryObjectAclModel.getSelectedUserIndex(selectedUserAcl));
  assertEquals(-1,repositoryObjectAclModel.getSelectedUserIndex(unselectedAcl));
  assertEquals(selectedRoleAcl,repositoryObjectAclModel.getSelectedRole(0));
  assertEquals(0,repositoryObjectAclModel.getSelectedRoleIndex(selectedRoleAcl));
  assertEquals(-1,repositoryObjectAclModel.getSelectedRoleIndex(unselectedAcl));
}
