{
  UIRepositoryObjectAcl selectedRoleAcl=new UIRepositoryObjectAcl(createRoleAce(ROLE1));
  repositoryObjectAcls.addAcl(selectedRoleAcl);
  repositoryObjectAclModel.setAclsList(null,defaultRoleNameList);
  List<Object> objectRoleList=Arrays.asList(new Object[]{ROLE2});
  repositoryObjectAclModel.assignRoles(objectRoleList);
  assertStringListMatches(Arrays.asList(new String[]{ROLE3}),repositoryObjectAclModel.getAvailableRoleList());
  assertNameToAclListMatches(Arrays.asList(new String[]{ROLE2}),repositoryObjectAclModel.getSelectedAssignedRoles());
  assertNameToAclListMatches(Arrays.asList(new String[]{ROLE2}),repositoryObjectAclModel.getAclsToAdd());
  repositoryObjectAclModel.updateSelectedAcls();
  assertNameToAclListMatches(Arrays.asList(new String[]{ROLE1,ROLE2}),repositoryObjectAclModel.getSelectedAcls().getAcls());
  repositoryObjectAclModel.getAclsToAdd().clear();
  UIRepositoryObjectAcl role2Acl=repositoryObjectAclModel.getSelectedRole(1);
  repositoryObjectAclModel.unassign(Arrays.asList(new Object[]{role2Acl,selectedRoleAcl}));
  assertEquals(0,repositoryObjectAclModel.getSelectedAssignedRoles().size());
  assertStringListMatches(defaultRoleNameList,repositoryObjectAclModel.getAvailableRoleList());
  repositoryObjectAclModel.updateSelectedAcls();
  assertEquals(0,repositoryObjectAclModel.getSelectedAcls().getAcls().size());
}
