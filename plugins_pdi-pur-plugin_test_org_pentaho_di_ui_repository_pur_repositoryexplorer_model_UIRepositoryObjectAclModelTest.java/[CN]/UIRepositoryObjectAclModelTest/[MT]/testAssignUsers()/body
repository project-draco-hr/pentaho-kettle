{
  UIRepositoryObjectAcl selectedUserAcl=new UIRepositoryObjectAcl(createUserAce(USER1));
  repositoryObjectAcls.addAcl(selectedUserAcl);
  repositoryObjectAclModel.setAclsList(defaultUserNameList,null);
  List<Object> objectUserList=Arrays.asList(new Object[]{USER2});
  repositoryObjectAclModel.assignUsers(objectUserList);
  assertStringListMatches(Arrays.asList(new String[]{USER3}),repositoryObjectAclModel.getAvailableUserList());
  assertNameToAclListMatches(Arrays.asList(new String[]{USER2}),repositoryObjectAclModel.getSelectedAssignedUsers());
  assertNameToAclListMatches(Arrays.asList(new String[]{USER2}),repositoryObjectAclModel.getAclsToAdd());
  repositoryObjectAclModel.updateSelectedAcls();
  assertNameToAclListMatches(Arrays.asList(new String[]{USER1,USER2}),repositoryObjectAclModel.getSelectedAcls().getAcls());
  repositoryObjectAclModel.getAclsToAdd().clear();
  UIRepositoryObjectAcl user2Acl=repositoryObjectAclModel.getSelectedUser(1);
  repositoryObjectAclModel.unassign(Arrays.asList(new Object[]{user2Acl,selectedUserAcl}));
  assertEquals(0,repositoryObjectAclModel.getSelectedAssignedUsers().size());
  assertStringListMatches(defaultUserNameList,repositoryObjectAclModel.getAvailableUserList());
  repositoryObjectAclModel.updateSelectedAcls();
  assertEquals(0,repositoryObjectAclModel.getSelectedAcls().getAcls().size());
}
