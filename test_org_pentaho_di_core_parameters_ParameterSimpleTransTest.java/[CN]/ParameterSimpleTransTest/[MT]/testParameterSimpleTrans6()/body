{
  KettleEnvironment.init();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("parameter_simple_trans4");
  PluginRegistry registry=PluginRegistry.getInstance();
  String getVariablesStepname="get variables step";
  GetVariableMeta gvm=new GetVariableMeta();
  String getVariablesPid=registry.getPluginId(StepPluginType.class,gvm);
  StepMeta getVariablesStep=new StepMeta(getVariablesPid,getVariablesStepname,gvm);
  transMeta.addStep(getVariablesStep);
  String[] fieldName={"PARAM1","PARAM2"};
  String[] varName={"${Param1}","%%PARAM2%%"};
  int[] fieldType={ValueMeta.TYPE_STRING,ValueMeta.TYPE_STRING};
  int[] length={-1,-1};
  int[] precision={-1,-1};
  String[] format={"",""};
  String[] currency={"",""};
  String[] decimal={"",""};
  String[] grouping={"",""};
  int[] trimType={ValueMeta.TRIM_TYPE_NONE,ValueMeta.TRIM_TYPE_NONE};
  gvm.setFieldName(fieldName);
  gvm.setVariableString(varName);
  gvm.setFieldType(fieldType);
  gvm.setFieldLength(length);
  gvm.setFieldPrecision(precision);
  gvm.setFieldFormat(format);
  gvm.setCurrency(currency);
  gvm.setDecimal(decimal);
  gvm.setGroup(grouping);
  gvm.setTrimType(trimType);
  String dummyStepname1="dummy step 1";
  DummyTransMeta dm1=new DummyTransMeta();
  String dummyPid1=registry.getPluginId(StepPluginType.class,dm1);
  StepMeta dummyStep1=new StepMeta(dummyPid1,dummyStepname1,dm1);
  transMeta.addStep(dummyStep1);
  TransHopMeta hi1=new TransHopMeta(getVariablesStep,dummyStep1);
  transMeta.addTransHop(hi1);
  Trans trans=new Trans(transMeta);
  trans.addParameterDefinition("Param1","","Parameter 1");
  trans.addParameterDefinition("PARAM2","","Parameter 2");
  trans.setParameterValue("PARAM2","PARAMVALUE2");
  trans.setVariable("Param1","Variable1");
  trans.prepareExecution(null);
  StepInterface si=trans.getStepInterface(dummyStepname1,0);
  RowStepCollector endRc=new RowStepCollector();
  si.addRowListener(endRc);
  trans.startThreads();
  trans.waitUntilFinished();
  List<RowMetaAndData> goldenImageRows=createResultData6();
  List<RowMetaAndData> resultRows1=endRc.getRowsWritten();
  checkRows(resultRows1,goldenImageRows);
}
