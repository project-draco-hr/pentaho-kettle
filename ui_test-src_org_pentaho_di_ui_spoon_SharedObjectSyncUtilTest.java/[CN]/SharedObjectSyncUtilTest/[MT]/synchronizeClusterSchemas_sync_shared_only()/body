{
  final String clusterSchemaName="ClusterSchema";
  TransMeta transformarion1=createTransMeta();
  ClusterSchema clusterSchema1=createClusterSchema(clusterSchemaName,true);
  transformarion1.setClusterSchemas(Collections.singletonList(clusterSchema1));
  spoonDelegates.trans.addTransformation(transformarion1);
  TransMeta transformarion2=createTransMeta();
  ClusterSchema unsharedClusterSchema2=createClusterSchema(clusterSchemaName,false);
  transformarion2.setClusterSchemas(Collections.singletonList(unsharedClusterSchema2));
  spoonDelegates.trans.addTransformation(transformarion2);
  TransMeta transformarion3=createTransMeta();
  ClusterSchema clusterSchema3=createClusterSchema(clusterSchemaName,true);
  transformarion3.setClusterSchemas(Collections.singletonList(clusterSchema3));
  spoonDelegates.trans.addTransformation(transformarion3);
  clusterSchema3.setDynamic(true);
  sharedUtil.synchronizeClusterSchemas(clusterSchema3);
  assertThat(clusterSchema1.isDynamic(),equalTo(true));
  assertThat(unsharedClusterSchema2.isDynamic(),equalTo(false));
}
