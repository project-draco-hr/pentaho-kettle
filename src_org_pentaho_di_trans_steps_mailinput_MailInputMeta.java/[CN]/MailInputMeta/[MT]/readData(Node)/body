{
  servername=XMLHandler.getTagValue(stepnode,"servername");
  username=XMLHandler.getTagValue(stepnode,"username");
  password=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode,"password"));
  usessl="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"usessl"));
  sslport=XMLHandler.getTagValue(stepnode,"sslport");
  retrievemails=Const.toInt(XMLHandler.getTagValue(stepnode,"retrievemails"),-1);
  firstmails=XMLHandler.getTagValue(stepnode,"firstmails");
  delete="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"delete"));
  protocol=Const.NVL(XMLHandler.getTagValue(stepnode,"protocol"),MailConnectionMeta.PROTOCOL_STRING_POP3);
  valueimaplist=MailConnectionMeta.getValueImapListByCode(Const.NVL(XMLHandler.getTagValue(stepnode,"valueimaplist"),""));
  imapfirstmails=XMLHandler.getTagValue(stepnode,"imapfirstmails");
  imapfolder=XMLHandler.getTagValue(stepnode,"imapfolder");
  senderSearch=XMLHandler.getTagValue(stepnode,"sendersearch");
  notTermSenderSearch="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"nottermsendersearch"));
  recipientSearch=XMLHandler.getTagValue(stepnode,"recipientsearch");
  notTermRecipientSearch="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"notTermRecipientSearch"));
  subjectSearch=XMLHandler.getTagValue(stepnode,"subjectsearch");
  notTermSubjectSearch="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"nottermsubjectsearch"));
  conditionReceivedDate=MailConnectionMeta.getConditionByCode(Const.NVL(XMLHandler.getTagValue(stepnode,"conditionreceiveddate"),""));
  notTermReceivedDateSearch="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"nottermreceiveddatesearch"));
  receivedDate1=XMLHandler.getTagValue(stepnode,"receivedDate1");
  receivedDate2=XMLHandler.getTagValue(stepnode,"receivedDate2");
  includesubfolders="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includesubfolders"));
  usedynamicfolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"usedynamicfolder"));
  folderfield=XMLHandler.getTagValue(stepnode,"folderfield");
  rowlimit=XMLHandler.getTagValue(stepnode,"rowlimit");
  Node fields=XMLHandler.getSubNode(stepnode,"fields");
  int nrFields=XMLHandler.countNodes(fields,"field");
  allocate(nrFields);
  for (int i=0; i < nrFields; i++) {
    Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
    inputFields[i]=new MailInputField();
    inputFields[i].setName(XMLHandler.getTagValue(fnode,"name"));
    inputFields[i].setColumn(MailInputField.getColumnByCode(XMLHandler.getTagValue(fnode,"column")));
  }
}
