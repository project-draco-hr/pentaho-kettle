{
  String key=addTransformation(transMeta);
  if (key != null) {
    String tabName=spoon.delegates.tabs.makeTransGraphTabName(transMeta);
    TabItem tabItem=spoon.delegates.tabs.findTabItem(tabName,TabMapEntry.OBJECT_TYPE_TRANSFORMATION_GRAPH);
    if (tabItem == null) {
      TransGraph transGraph=new TransGraph(spoon.tabfolder.getSwtTabset(),spoon,transMeta);
      tabItem=new TabItem(spoon.tabfolder,tabName,tabName);
      tabItem.setToolTipText(Messages.getString("Spoon.TabTrans.Tooltip",spoon.delegates.tabs.makeTransGraphTabName(transMeta)));
      tabItem.setImage(GUIResource.getInstance().getImageTransGraph());
      tabItem.setControl(transGraph);
      spoon.delegates.tabs.addTab(tabName,new TabMapEntry(tabItem,tabName,transGraph,TabMapEntry.OBJECT_TYPE_TRANSFORMATION_GRAPH));
    }
    int idx=spoon.tabfolder.indexOf(tabItem);
    if (transMeta.getLogConnection() != null && !Const.isEmpty(transMeta.getLogTable()) && !transMeta.isSlaveTransformation()) {
      addTransHistory(transMeta,false);
    }
    spoon.tabfolder.setSelected(idx);
    spoon.setUndoMenu(transMeta);
    spoon.enableMenus();
  }
}
