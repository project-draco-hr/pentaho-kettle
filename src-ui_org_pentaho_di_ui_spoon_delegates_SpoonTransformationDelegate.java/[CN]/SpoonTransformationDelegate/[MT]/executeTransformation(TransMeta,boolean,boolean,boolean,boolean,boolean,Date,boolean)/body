{
  if (transMeta == null) {
    return;
  }
  TransDebugMeta transDebugMeta=null;
  TransExecutionConfiguration executionConfiguration=null;
  if (preview) {
    executionConfiguration=spoon.getTransPreviewExecutionConfiguration();
  }
 else   if (debug) {
    executionConfiguration=spoon.getTransDebugExecutionConfiguration();
  }
 else {
    executionConfiguration=spoon.getTransExecutionConfiguration();
  }
  if (debug) {
    transDebugMeta=transDebugMetaMap.get(transMeta);
    if (transDebugMeta == null) {
      transDebugMeta=new TransDebugMeta(transMeta);
      transDebugMetaMap.put(transMeta,transDebugMeta);
    }
    StepMeta[] selectedSteps=transMeta.getSelectedSteps();
    if (selectedSteps != null && selectedSteps.length > 0) {
      transDebugMeta.getStepDebugMetaMap().clear();
      for (      StepMeta stepMeta : transMeta.getSelectedSteps()) {
        StepDebugMeta stepDebugMeta=new StepDebugMeta(stepMeta);
        stepDebugMeta.setRowCount(PropsUI.getInstance().getDefaultPreviewSize());
        stepDebugMeta.setPausingOnBreakPoint(true);
        stepDebugMeta.setReadingFirstRows(false);
        transDebugMeta.getStepDebugMetaMap().put(stepMeta,stepDebugMeta);
      }
    }
  }
 else   if (preview) {
    transDebugMeta=transPreviewMetaMap.get(transMeta);
    if (transDebugMeta == null) {
      transDebugMeta=new TransDebugMeta(transMeta);
      transPreviewMetaMap.put(transMeta,transDebugMeta);
    }
    StepMeta[] selectedSteps=transMeta.getSelectedSteps();
    if (selectedSteps != null && selectedSteps.length > 0) {
      transDebugMeta.getStepDebugMetaMap().clear();
      for (      StepMeta stepMeta : transMeta.getSelectedSteps()) {
        StepDebugMeta stepDebugMeta=new StepDebugMeta(stepMeta);
        stepDebugMeta.setRowCount(PropsUI.getInstance().getDefaultPreviewSize());
        stepDebugMeta.setPausingOnBreakPoint(false);
        stepDebugMeta.setReadingFirstRows(true);
        transDebugMeta.getStepDebugMetaMap().put(stepMeta,stepDebugMeta);
      }
    }
  }
  executionConfiguration.setRepository(spoon.rep);
  executionConfiguration.setSafeModeEnabled(safe);
  int debugAnswer=TransDebugDialog.DEBUG_CONFIG;
  if (debug || preview) {
    TransDebugDialog transDebugDialog=new TransDebugDialog(spoon.getShell(),transDebugMeta);
    debugAnswer=transDebugDialog.open();
    if (debugAnswer != TransDebugDialog.DEBUG_CANCEL) {
      executionConfiguration.setExecutingLocally(true);
      executionConfiguration.setExecutingRemotely(false);
      executionConfiguration.setExecutingClustered(false);
    }
 else {
      return;
    }
  }
 else {
    if (transMeta.isUsingAtLeastOneClusterSchema()) {
      executionConfiguration.setExecutingLocally(false);
      executionConfiguration.setExecutingRemotely(false);
      executionConfiguration.setExecutingClustered(true);
    }
 else {
      executionConfiguration.setExecutingLocally(true);
      executionConfiguration.setExecutingRemotely(false);
      executionConfiguration.setExecutingClustered(false);
    }
  }
  Object data[]=spoon.variables.getData();
  String fields[]=spoon.variables.getRowMeta().getFieldNames();
  Map<String,String> variableMap=new HashMap<String,String>();
  variableMap.putAll(executionConfiguration.getVariables());
  for (int idx=0; idx < fields.length; idx++) {
    String value=executionConfiguration.getVariables().get(fields[idx]);
    if (Const.isEmpty(value))     value=data[idx].toString();
    variableMap.put(fields[idx],value);
  }
  executionConfiguration.setVariables(variableMap);
  executionConfiguration.getUsedVariables(transMeta);
  executionConfiguration.getUsedArguments(transMeta,spoon.getArguments());
  executionConfiguration.setReplayDate(replayDate);
  executionConfiguration.setLogLevel(spoon.getLog().getLogLevel());
  boolean execConfigAnswer=true;
  if (debugAnswer == TransDebugDialog.DEBUG_CONFIG && replayDate == null) {
    TransExecutionConfigurationDialog dialog=new TransExecutionConfigurationDialog(spoon.getShell(),executionConfiguration,transMeta);
    execConfigAnswer=dialog.open();
  }
  if (execConfigAnswer) {
    addTransLog(transMeta,executionConfiguration.isExecutingLocally());
    TransLog transLog=spoon.getActiveTransLog();
    if (executionConfiguration.isExecutingLocally()) {
      if (debug || preview) {
        transLog.debug(executionConfiguration,transDebugMeta);
      }
 else {
        transLog.start(executionConfiguration);
      }
    }
 else     if (executionConfiguration.isExecutingRemotely()) {
      if (executionConfiguration.getRemoteServer() != null) {
        Trans.sendXMLToSlaveServer(transMeta,executionConfiguration);
        spoon.delegates.slaves.addSpoonSlave(executionConfiguration.getRemoteServer());
      }
 else {
        MessageBox mb=new MessageBox(spoon.getShell(),SWT.OK | SWT.ICON_INFORMATION);
        mb.setMessage(Messages.getString("Spoon.Dialog.NoRemoteServerSpecified.Message"));
        mb.setText(Messages.getString("Spoon.Dialog.NoRemoteServerSpecified.Title"));
        mb.open();
      }
    }
 else     if (executionConfiguration.isExecutingClustered()) {
      splitTrans(transMeta,executionConfiguration);
    }
  }
}
