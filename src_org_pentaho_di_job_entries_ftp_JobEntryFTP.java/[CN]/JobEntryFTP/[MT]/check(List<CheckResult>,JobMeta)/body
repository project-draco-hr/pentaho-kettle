{
  LogWriter log=LogWriter.getInstance();
  if (Const.isEmpty(serverName)) {
    remarks.add(new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("JobEntryFTP.CheckResult.ServerNameIsBlank"),this));
  }
  if (Const.isEmpty(targetDirectory)) {
    remarks.add(new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("JobEntryFTP.CheckResult.TargetDirIsBlank"),this));
  }
 else {
    String realTargetDir=environmentSubstitute(targetDirectory);
    FileObject targetDirObject;
    try {
      targetDirObject=KettleVFS.getFileObject(realTargetDir);
      if (!targetDirObject.exists()) {
        remarks.add(new CheckResult(CheckResult.TYPE_RESULT_WARNING,Messages.getString("JobEntryFTP.CheckResult.TargetDirDoesNotExist",targetDirectory),this));
      }
    }
 catch (    IOException e) {
      log.logError(toString(),e.getMessage());
      remarks.add(new CheckResult(CheckResult.TYPE_RESULT_WARNING,Messages.getString("JobEntryFTP.CheckResult.CannotCheckTargetDirExistence"),this));
    }
  }
  if (Const.isEmpty(userName)) {
    remarks.add(new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("JobEntryFTP.CheckResult.UsernameIsBlank"),this));
  }
  if (null == password) {
    remarks.add(new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("JobEntryFTP.CheckResult.PasswordIsNull"),this));
  }
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.ActiveConnection",String.valueOf(activeConnection)),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.Timeout",String.valueOf(timeout)),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.Encoding",controlEncoding),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.BinaryMode",String.valueOf(binaryMode)),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.FtpDir",ftpDirectory),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.OnlyGetNew",String.valueOf(onlyGettingNewFiles)),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.Remove",String.valueOf(remove)),this));
  remarks.add(new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("JobEntryFTP.CheckResult.Wildcard",wildcard),this));
}
