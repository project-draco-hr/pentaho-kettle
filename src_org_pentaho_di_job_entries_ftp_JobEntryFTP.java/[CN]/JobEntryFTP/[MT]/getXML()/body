{
  StringBuffer retval=new StringBuffer(128);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("port",port));
  retval.append("      ").append(XMLHandler.addTagValue("servername",serverName));
  retval.append("      ").append(XMLHandler.addTagValue("username",userName));
  retval.append("      ").append(XMLHandler.addTagValue("password",Encr.encryptPasswordIfNotUsingVariables(password)));
  retval.append("      ").append(XMLHandler.addTagValue("ftpdirectory",ftpDirectory));
  retval.append("      ").append(XMLHandler.addTagValue("targetdirectory",targetDirectory));
  retval.append("      ").append(XMLHandler.addTagValue("wildcard",wildcard));
  retval.append("      ").append(XMLHandler.addTagValue("binary",binaryMode));
  retval.append("      ").append(XMLHandler.addTagValue("timeout",timeout));
  retval.append("      ").append(XMLHandler.addTagValue("remove",remove));
  retval.append("      ").append(XMLHandler.addTagValue("only_new",onlyGettingNewFiles));
  retval.append("      ").append(XMLHandler.addTagValue("active",activeConnection));
  retval.append("      ").append(XMLHandler.addTagValue("control_encoding",controlEncoding));
  retval.append("      ").append(XMLHandler.addTagValue("movefiles",movefiles));
  retval.append("      ").append(XMLHandler.addTagValue("movetodirectory",movetodirectory));
  retval.append("      ").append(XMLHandler.addTagValue("adddate",adddate));
  retval.append("      ").append(XMLHandler.addTagValue("addtime",addtime));
  retval.append("      ").append(XMLHandler.addTagValue("SpecifyFormat",SpecifyFormat));
  retval.append("      ").append(XMLHandler.addTagValue("date_time_format",date_time_format));
  retval.append("      ").append(XMLHandler.addTagValue("AddDateBeforeExtension",AddDateBeforeExtension));
  retval.append("      ").append(XMLHandler.addTagValue("isaddresult",isaddresult));
  retval.append("      ").append(XMLHandler.addTagValue("createmovefolder",createmovefolder));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_host",proxyHost));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_port",proxyPort));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_username",proxyUsername));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_password",Encr.encryptPasswordIfNotUsingVariables(proxyPassword)));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_host",socksProxyHost));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_port",socksProxyPort));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_username",socksProxyUsername));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_password",Encr.encryptPasswordIfNotUsingVariables(socksProxyPassword)));
  retval.append("      ").append(XMLHandler.addTagValue("ifFileExists",SifFileExists));
  retval.append("      ").append(XMLHandler.addTagValue("nr_limit",nr_limit));
  retval.append("      ").append(XMLHandler.addTagValue("success_condition",success_condition));
  return retval.toString();
}
