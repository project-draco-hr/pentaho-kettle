{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    port=XMLHandler.getTagValue(entrynode,"port");
    serverName=XMLHandler.getTagValue(entrynode,"servername");
    userName=XMLHandler.getTagValue(entrynode,"username");
    password=XMLHandler.getTagValue(entrynode,"password");
    ftpDirectory=XMLHandler.getTagValue(entrynode,"ftpdirectory");
    targetDirectory=XMLHandler.getTagValue(entrynode,"targetdirectory");
    wildcard=XMLHandler.getTagValue(entrynode,"wildcard");
    binaryMode="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"binary"));
    timeout=Const.toInt(XMLHandler.getTagValue(entrynode,"timeout"),10000);
    remove="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"remove"));
    onlyGettingNewFiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"only_new"));
    activeConnection="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"active"));
    controlEncoding=XMLHandler.getTagValue(entrynode,"control_encoding");
    if (controlEncoding == null) {
      controlEncoding=LEGACY_CONTROL_ENCODING;
    }
    movefiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"movefiles"));
    movetodirectory=XMLHandler.getTagValue(entrynode,"movetodirectory");
    adddate="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"adddate"));
    addtime="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"addtime"));
    SpecifyFormat="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"SpecifyFormat"));
    date_time_format=XMLHandler.getTagValue(entrynode,"date_time_format");
    AddDateBeforeExtension="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"AddDateBeforeExtension"));
    String addresult=XMLHandler.getTagValue(entrynode,"isaddresult");
    if (Const.isEmpty(addresult))     isaddresult=true;
 else     isaddresult="Y".equalsIgnoreCase(addresult);
    createmovefolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"createmovefolder"));
    proxyHost=XMLHandler.getTagValue(entrynode,"proxy_host");
    proxyPort=XMLHandler.getTagValue(entrynode,"proxy_port");
    proxyUsername=XMLHandler.getTagValue(entrynode,"proxy_username");
    proxyPassword=XMLHandler.getTagValue(entrynode,"proxy_password");
    SifFileExists=XMLHandler.getTagValue(entrynode,"ifFileExists");
    if (Const.isEmpty(SifFileExists)) {
      ifFileExists=ifFileExistsSkip;
    }
 else {
      if (SifFileExists.equals(SifFileExistsCreateUniq))       ifFileExists=ifFileExistsCreateUniq;
 else       if (SifFileExists.equals(SifFileExistsFail))       ifFileExists=ifFileExistsFail;
 else       ifFileExists=ifFileExistsSkip;
    }
    nr_limit_success=XMLHandler.getTagValue(entrynode,"nr_limit_success");
    success_condition=XMLHandler.getTagValue(entrynode,"success_condition");
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException("Unable to load job entry of type 'ftp' from XML node",xe);
  }
}
