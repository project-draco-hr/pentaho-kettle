{
  try {
    super.loadRep(rep,id_jobentry,databases);
    serverName=rep.getJobEntryAttributeString(id_jobentry,"servername");
    userName=rep.getJobEntryAttributeString(id_jobentry,"username");
    password=Encr.decryptPasswordOptionallyEncrypted(rep.getJobEntryAttributeString(id_jobentry,"password"));
    ftpDirectory=rep.getJobEntryAttributeString(id_jobentry,"ftpdirectory");
    targetDirectory=rep.getJobEntryAttributeString(id_jobentry,"targetdirectory");
    wildcard=rep.getJobEntryAttributeString(id_jobentry,"wildcard");
    binaryMode=rep.getJobEntryAttributeBoolean(id_jobentry,"binary");
    timeout=(int)rep.getJobEntryAttributeInteger(id_jobentry,"timeout");
    remove=rep.getJobEntryAttributeBoolean(id_jobentry,"remove");
    onlyGettingNewFiles=rep.getJobEntryAttributeBoolean(id_jobentry,"only_new");
    activeConnection=rep.getJobEntryAttributeBoolean(id_jobentry,"active");
    controlEncoding=rep.getJobEntryAttributeString(id_jobentry,"control_encoding");
    if (controlEncoding == null) {
      controlEncoding=LEGACY_CONTROL_ENCODING;
    }
  }
 catch (  KettleException dbe) {
    throw new KettleException(Messages.getString("JobEntryFTP.UnableToLoadFromRepo",String.valueOf(id_jobentry)),dbe);
  }
}
