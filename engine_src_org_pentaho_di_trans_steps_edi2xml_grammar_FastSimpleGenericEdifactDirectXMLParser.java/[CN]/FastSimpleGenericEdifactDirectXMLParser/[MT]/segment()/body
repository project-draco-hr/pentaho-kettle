{
  FastSimpleGenericEdifactDirectXMLParser.segment_return retval=new FastSimpleGenericEdifactDirectXMLParser.segment_return();
  retval.start=input.LT(1);
  FastSimpleGenericEdifactDirectXMLParser.tag_return tag1=null;
  try {
    pushFollow(FOLLOW_tag_in_segment107);
    tag1=tag();
    state._fsp--;
    buf.append("\t<" + (tag1 != null ? tag1.name : null) + ">\n");
    appendIndexes();
    loop3:     do {
      int alt3=2;
      int LA3_0=input.LA(1);
      if ((LA3_0 == ELEMENT_SEPARATOR)) {
        alt3=1;
      }
switch (alt3) {
case 1:
        pushFollow(FOLLOW_data_element_in_segment114);
      data_element();
    state._fsp--;
  break;
default :
break loop3;
}
}
 while (true);
match(input,SEGMENT_TERMINATOR,FOLLOW_SEGMENT_TERMINATOR_in_segment117);
loop4: do {
int alt4=2;
int LA4_0=input.LA(1);
if ((LA4_0 == 9 || (LA4_0 >= 12 && LA4_0 <= 14))) {
alt4=1;
}
switch (alt4) {
case 1:
if (input.LA(1) == 9 || (input.LA(1) >= 12 && input.LA(1) <= 14)) {
input.consume();
state.errorRecovery=false;
}
 else {
MismatchedSetException mse=new MismatchedSetException(null,input);
throw mse;
}
break;
default :
break loop4;
}
}
 while (true);
buf.append("\t</" + (tag1 != null ? tag1.name : null) + ">\n");
retval.stop=input.LT(-1);
}
 catch (RecognitionException e) {
throw e;
}
return retval;
}
