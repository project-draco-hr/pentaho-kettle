{
  try {
    lockRepository();
    if (!Const.isEmpty(versionComment)) {
      insertLogEntry(versionComment);
    }
    if (JobMeta.REPOSITORY_ELEMENT_TYPE.equals(repositoryElement.getRepositoryElementType())) {
      securityProvider.validateAction(RepositoryOperation.MODIFY_JOB);
      jobDelegate.saveJob((JobMeta)repositoryElement,versionComment,monitor);
    }
 else     if (TransMeta.REPOSITORY_ELEMENT_TYPE.equals(repositoryElement.getRepositoryElementType())) {
      securityProvider.validateAction(RepositoryOperation.MODIFY_TRANSFORMATION);
      transDelegate.saveTransformation((TransMeta)repositoryElement,versionComment,monitor);
    }
 else     if (DatabaseMeta.REPOSITORY_ELEMENT_TYPE.equals(repositoryElement.getRepositoryElementType())) {
      securityProvider.validateAction(RepositoryOperation.MODIFY_DATABASE);
      databaseDelegate.saveDatabaseMeta((DatabaseMeta)repositoryElement);
    }
 else     if (SlaveServer.REPOSITORY_ELEMENT_TYPE.equals(repositoryElement.getRepositoryElementType())) {
      securityProvider.validateAction(RepositoryOperation.MODIFY_SLAVE_SERVER);
      slaveServerDelegate.saveSlaveServer((SlaveServer)repositoryElement,parentId,used);
    }
 else     if (PartitionSchema.REPOSITORY_ELEMENT_TYPE.equals(repositoryElement.getRepositoryElementType())) {
      securityProvider.validateAction(RepositoryOperation.MODIFY_PARTITION_SCHEMA);
      partitionSchemaDelegate.savePartitionSchema((PartitionSchema)repositoryElement,parentId,used);
    }
 else     if (ClusterSchema.REPOSITORY_ELEMENT_TYPE.equals(repositoryElement.getRepositoryElementType())) {
      securityProvider.validateAction(RepositoryOperation.MODIFY_CLUSTER_SCHEMA);
      clusterSchemaDelegate.saveClusterSchema((ClusterSchema)repositoryElement,versionComment,parentId,used);
    }
 else     throw new KettleException("We can't save the element with type [" + repositoryElement.getRepositoryElementType() + "] in the repository");
    commit();
  }
  finally {
    unlockRepository();
  }
}
