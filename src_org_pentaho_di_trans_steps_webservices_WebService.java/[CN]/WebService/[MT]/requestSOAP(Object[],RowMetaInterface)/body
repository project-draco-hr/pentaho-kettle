{
  Wsdl wsdl;
  try {
    wsdl=new Wsdl(new java.net.URI(data.realUrl),null,null);
  }
 catch (  Exception e) {
    throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0013.ExceptionLoadingWSDL"),e);
  }
  String vURLService=wsdl.getServiceEndpoint();
  HttpClient vHttpClient=new HttpClient();
  PostMethod vHttpMethod=new PostMethod(vURLService);
  HostConfiguration vHostConfiguration=new HostConfiguration();
  String httpLogin=environmentSubstitute(meta.getHttpLogin());
  if (httpLogin != null && !"".equals(httpLogin)) {
    vHttpClient.getParams().setAuthenticationPreemptive(true);
    Credentials defaultcreds=new UsernamePasswordCredentials(httpLogin,environmentSubstitute(meta.getHttpPassword()));
    vHttpClient.getState().setCredentials(AuthScope.ANY,defaultcreds);
  }
  String proxyHost=environmentSubstitute(meta.getProxyHost());
  if (proxyHost != null && !"".equals(proxyHost)) {
    vHostConfiguration.setProxy(proxyHost,Const.toInt(environmentSubstitute(meta.getProxyPort()),8080));
  }
  try {
    WsdlOperation operation=wsdl.getOperation(meta.getOperationName());
    String xml=getRequestXML(operation,wsdl.getWsdlTypes().isElementFormQualified(wsdl.getTargetNamespace()));
    if (log.isDetailed()) {
      logDetailed(BaseMessages.getString(PKG,"WebServices.Log.SOAPEnvelope"));
      logDetailed(xml);
    }
    data.argumentRows.clear();
    URI uri=new URI(vURLService,false);
    vHttpMethod.setURI(uri);
    vHttpMethod.setRequestHeader("Content-Type","text/xml;charset=UTF-8");
    String soapAction="\"" + meta.getOperationNamespace();
    if (!meta.getOperationNamespace().endsWith("/")) {
      soapAction+="/";
    }
    soapAction+=meta.getOperationName() + "\"";
    logDetailed(BaseMessages.getString(PKG,"WebServices.Log.UsingRequestHeaderSOAPAction",soapAction));
    vHttpMethod.setRequestHeader("SOAPAction",soapAction);
    RequestEntity requestEntity=new ByteArrayRequestEntity(xml.toString().getBytes("UTF-8"),"UTF-8");
    vHttpMethod.setRequestEntity(requestEntity);
    long currentRequestTime=Const.nanoTime();
    int responseCode=vHttpClient.executeMethod(vHostConfiguration,vHttpMethod);
    if (responseCode == 200) {
      processRows(vHttpMethod.getResponseBodyAsStream(),rowData,rowMeta,wsdl.getWsdlTypes().isElementFormQualified(wsdl.getTargetNamespace()));
    }
 else     if (responseCode == 401) {
      throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0011.Authentication",vURLService));
    }
 else     if (responseCode == 404) {
      throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0012.NotFound",vURLService));
    }
 else {
      throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0001.ServerError",Integer.toString(responseCode),Const.NVL(new String(vHttpMethod.getResponseBody()),""),vURLService));
    }
    requestTime+=Const.nanoTime() - currentRequestTime;
  }
 catch (  URIException e) {
    throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0002.InvalidURI",vURLService),e);
  }
catch (  UnsupportedEncodingException e) {
    throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0003.UnsupportedEncoding",vURLService),e);
  }
catch (  HttpException e) {
    throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0004.HttpException",vURLService),e);
  }
catch (  UnknownHostException e) {
    throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0013.UnknownHost",vURLService),e);
  }
catch (  IOException e) {
    throw new KettleStepException(BaseMessages.getString(PKG,"WebServices.ERROR0005.IOException",vURLService),e);
  }
 finally {
    vHttpMethod.releaseConnection();
  }
}
