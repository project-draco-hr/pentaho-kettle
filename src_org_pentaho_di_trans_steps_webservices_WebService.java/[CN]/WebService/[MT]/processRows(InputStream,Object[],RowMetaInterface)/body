{
  if (meta.isCompatible()) {
    compatibleProcessRows(anXml,rowData,rowMeta);
    return;
  }
  String response=readStringFromInputStream(anXml);
  try {
    Document doc=XMLHandler.loadXMLString(response);
    Node enveloppeNode=XMLHandler.getSubNode(doc,"soapenv:Envelope");
    if (enveloppeNode == null)     enveloppeNode=XMLHandler.getSubNode(doc,"soap:Envelope");
    Node bodyNode=XMLHandler.getSubNode(enveloppeNode,"soapenv:body");
    if (bodyNode == null)     bodyNode=XMLHandler.getSubNode(enveloppeNode,"soap:body");
    TransformerFactory transformerFactory=TransformerFactory.newInstance();
    Transformer transformer=transformerFactory.newTransformer();
    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"yes");
    transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    if (log.isDetailed()) {
      StringWriter bodyXML=new StringWriter();
      transformer.transform(new DOMSource(bodyNode),new StreamResult(bodyXML));
      logDetailed(bodyXML.toString());
    }
    Node responseNode=null;
    NodeList nodeList=null;
    if (!Const.isEmpty(meta.getRepeatingElementName())) {
      nodeList=((Element)bodyNode).getElementsByTagName(meta.getRepeatingElementName());
    }
 else {
      NodeList responseChildren=bodyNode.getChildNodes();
      for (int i=0; i < responseChildren.getLength(); i++) {
        Node responseChild=responseChildren.item(i);
        if (responseChild.getNodeType() == Node.ELEMENT_NODE) {
          responseNode=responseChild;
          break;
        }
      }
      if (responseNode != null) {
        nodeList=responseNode.getChildNodes();
      }
    }
    if (nodeList == null)     return;
    Object[] outputRowData=rowData == null ? RowDataUtil.allocateRowData(data.outputRowMeta.size()) : RowDataUtil.createResizedCopy(rowData,data.outputRowMeta.size());
    boolean singleRow=false;
    int fieldsFound=0;
    for (int i=0; i < nodeList.getLength(); i++) {
      Node node=nodeList.item(i);
      WebServiceField field=meta.getFieldOutFromWsName(node.getNodeName());
      if (field != null) {
        if (getNodeValue(outputRowData,node,field,transformer,true)) {
          singleRow=true;
          fieldsFound++;
        }
      }
 else {
        if (!singleRow) {
          if (log.isDetailed()) {
            StringWriter nodeXML=new StringWriter();
            transformer.transform(new DOMSource(node),new StreamResult(nodeXML));
            logDetailed(Messages.getString("WebServices.Log.ResultRowDataFound",nodeXML.toString()));
          }
          outputRowData=rowData == null ? RowDataUtil.allocateRowData(data.outputRowMeta.size()) : RowDataUtil.createResizedCopy(rowData,data.outputRowMeta.size());
          NodeList childNodes=node.getChildNodes();
          for (int j=0; j < childNodes.getLength(); j++) {
            Node childNode=childNodes.item(j);
            field=meta.getFieldOutFromWsName(childNode.getNodeName());
            if (field != null) {
              if (getNodeValue(outputRowData,childNode,field,transformer,false)) {
                fieldsFound++;
              }
            }
          }
          if (fieldsFound > 0) {
            putRow(data.outputRowMeta,outputRowData);
          }
        }
      }
    }
    if (singleRow && fieldsFound > 0) {
      putRow(data.outputRowMeta,outputRowData);
    }
  }
 catch (  Exception e) {
    throw new KettleStepException(Messages.getString("WebServices.ERROR0010.OutputParsingError",response.toString()),e);
  }
}
