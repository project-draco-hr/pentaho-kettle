{
  if (vNodeValue == null) {
    return null;
  }
 else {
    if (XsdType.BOOLEAN.equals(field.getXsdType())) {
      return Boolean.valueOf(vNodeValue);
    }
 else     if (XsdType.DATE.equals(field.getXsdType())) {
      try {
        return dateFormat.parse(vNodeValue);
      }
 catch (      ParseException e) {
        System.out.println(Const.getStackTracker(e));
        return null;
      }
    }
 else     if (XsdType.TIME.equals(field.getXsdType())) {
      try {
        return heureFormat.parse(vNodeValue);
      }
 catch (      ParseException e) {
        System.out.println(Const.getStackTracker(e));
        return null;
      }
    }
 else     if (XsdType.DATE_TIME.equals(field.getXsdType())) {
      try {
        return dateHeureFormat.parse(vNodeValue);
      }
 catch (      ParseException e) {
        System.out.println(Const.getStackTracker(e));
        return null;
      }
    }
 else     if (XsdType.INTEGER.equals(field.getXsdType()) || XsdType.SHORT.equals(field.getXsdType())) {
      try {
        return Integer.parseInt(vNodeValue);
      }
 catch (      NumberFormatException e) {
        System.out.println(Const.getStackTracker(e));
        return null;
      }
    }
 else     if (XsdType.FLOAT.equals(field.getXsdType()) || XsdType.DOUBLE.equals(field.getXsdType())) {
      try {
        return Double.parseDouble(vNodeValue);
      }
 catch (      NumberFormatException e) {
        System.out.println(Const.getStackTracker(e));
        return null;
      }
    }
 else     if (XsdType.BINARY.equals(field.getXsdType())) {
      return Base64.decodeBase64(vNodeValue.getBytes());
    }
 else     if (XsdType.DECIMAL.equals(field.getXsdType())) {
      return new BigDecimal(vNodeValue);
    }
 else {
      return vNodeValue;
    }
  }
}
