{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("owGeneratorMeta.CheckResult.NoInputStreamsError"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("RowGeneratorMeta.CheckResult.NoInputStreamOk"),stepMeta);
    remarks.add(cr);
    if (rowLimit == 0.0) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_WARNING,Messages.getString("RowGeneratorMeta.CheckResult.WarnNoRows"),stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("RowGeneratorMeta.CheckResult.WillReturnRows","" + (long)rowLimit),stepMeta);
      remarks.add(cr);
    }
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("RowGeneratorMeta.CheckResult.NoInputError"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("RowGeneratorMeta.CheckResult.NoInputOk"),stepMeta);
    remarks.add(cr);
  }
  RowGeneratorData data=new RowGeneratorData();
  RowGeneratorMeta meta=(RowGeneratorMeta)stepMeta.getStepMetaInterface();
  RowGenerator.buildRow(meta,data,remarks);
}
