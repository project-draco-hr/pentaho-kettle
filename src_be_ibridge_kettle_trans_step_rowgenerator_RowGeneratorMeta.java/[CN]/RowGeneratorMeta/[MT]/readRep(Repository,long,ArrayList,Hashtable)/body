{
  try {
    int nrfields=rep.countNrStepAttributes(id_step,"field_name");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      fieldName[i]=rep.getStepAttributeString(id_step,i,"field_name");
      fieldType[i]=rep.getStepAttributeString(id_step,i,"field_type");
      fieldFormat[i]=rep.getStepAttributeString(id_step,i,"field_format");
      currency[i]=rep.getStepAttributeString(id_step,i,"field_currency");
      decimal[i]=rep.getStepAttributeString(id_step,i,"field_decimal");
      group[i]=rep.getStepAttributeString(id_step,i,"field_group");
      value[i]=rep.getStepAttributeString(id_step,i,"field_nullif");
      fieldLength[i]=(int)rep.getStepAttributeInteger(id_step,i,"field_length");
      fieldPrecision[i]=(int)rep.getStepAttributeInteger(id_step,i,"field_precision");
    }
    long longLimit=rep.getStepAttributeInteger(id_step,"limit");
    if (longLimit <= 0) {
      rowLimit=rep.getStepAttributeString(id_step,"limit");
    }
 else {
      rowLimit=Long.toString(longLimit);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
