{
  String partitionSchemaName="";
  try {
    Collection<UIPartition> partitions=partitionsTable.getSelectedItems();
    if (partitions != null && !partitions.isEmpty()) {
      for (      Object obj : partitions) {
        if (obj != null && obj instanceof UIPartition) {
          UIPartition partition=(UIPartition)obj;
          PartitionSchema partitionSchema=partition.getPartitionSchema();
          partitionSchemaName=partitionSchema.getName();
          ObjectId partitionId=repository.getPartitionSchemaID(partitionSchema.getName());
          if (partitionId == null) {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Partition.DoesNotExists.Message",partitionSchemaName));
            mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Partition.Delete.Title"));
            mb.open();
          }
 else {
            repository.deletePartitionSchema(partitionId);
          }
        }
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
      mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Partition.NoItemSelected.Message"));
      mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Partition.Delete.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    if (mainController == null || !mainController.handleLostRepository(e)) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Partition.Delete.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Partition.Delete.UnexpectedError.Message") + partitionSchemaName + "]",e);
    }
  }
 finally {
    refreshPartitions();
  }
}
