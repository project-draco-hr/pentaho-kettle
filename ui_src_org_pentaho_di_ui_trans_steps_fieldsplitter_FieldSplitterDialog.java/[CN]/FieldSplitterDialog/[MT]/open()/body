{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"FieldSplitterDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"FieldSplitterDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlSplitfield=new Label(shell,SWT.RIGHT);
  wlSplitfield.setText(BaseMessages.getString(PKG,"FieldSplitterDialog.SplitField.Label"));
  props.setLook(wlSplitfield);
  fdlSplitfield=new FormData();
  fdlSplitfield.left=new FormAttachment(0,0);
  fdlSplitfield.right=new FormAttachment(middle,-margin);
  fdlSplitfield.top=new FormAttachment(wStepname,margin);
  wlSplitfield.setLayoutData(fdlSplitfield);
  wSplitfield=new CCombo(shell,SWT.BORDER | SWT.READ_ONLY);
  wSplitfield.setText("");
  props.setLook(wSplitfield);
  wSplitfield.addModifyListener(lsMod);
  fdSplitfield=new FormData();
  fdSplitfield.left=new FormAttachment(middle,0);
  fdSplitfield.top=new FormAttachment(wStepname,margin);
  fdSplitfield.right=new FormAttachment(100,0);
  wSplitfield.setLayoutData(fdSplitfield);
  wSplitfield.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlDelimiter=new Label(shell,SWT.RIGHT);
  wlDelimiter.setText(BaseMessages.getString(PKG,"FieldSplitterDialog.Delimiter.Label"));
  props.setLook(wlDelimiter);
  fdlDelimiter=new FormData();
  fdlDelimiter.left=new FormAttachment(0,0);
  fdlDelimiter.right=new FormAttachment(middle,-margin);
  fdlDelimiter.top=new FormAttachment(wSplitfield,margin);
  wlDelimiter.setLayoutData(fdlDelimiter);
  wDelimiter=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wDelimiter.setToolTipText(BaseMessages.getString(PKG,"FieldSplitterDialog.Delimiter.Tooltip"));
  wDelimiter.setText("");
  props.setLook(wDelimiter);
  wDelimiter.addModifyListener(lsMod);
  fdDelimiter=new FormData();
  fdDelimiter.left=new FormAttachment(middle,0);
  fdDelimiter.top=new FormAttachment(wSplitfield,margin);
  fdDelimiter.right=new FormAttachment(100,0);
  wDelimiter.setLayoutData(fdDelimiter);
  Label wlEnclosure=new Label(shell,SWT.RIGHT);
  wlEnclosure.setText(BaseMessages.getString(PKG,"FieldSplitterDialog.Enclosure.Label"));
  props.setLook(wlEnclosure);
  FormData fdlEnclosure=new FormData();
  fdlEnclosure.top=new FormAttachment(wDelimiter,margin);
  fdlEnclosure.left=new FormAttachment(0,0);
  fdlEnclosure.right=new FormAttachment(middle,-margin);
  wlEnclosure.setLayoutData(fdlEnclosure);
  wEnclosure=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wEnclosure.setToolTipText(BaseMessages.getString(PKG,"FieldSplitterDialog.Enclosure.Tooltip"));
  props.setLook(wEnclosure);
  wEnclosure.addModifyListener(lsMod);
  FormData fdEnclosure=new FormData();
  fdEnclosure.top=new FormAttachment(wDelimiter,margin);
  fdEnclosure.left=new FormAttachment(middle,0);
  fdEnclosure.right=new FormAttachment(100,0);
  wEnclosure.setLayoutData(fdEnclosure);
  wlFields=new Label(shell,SWT.RIGHT);
  wlFields.setText(BaseMessages.getString(PKG,"FieldSplitterDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wEnclosure,margin);
  wlFields.setLayoutData(fdlFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,null);
  final int fieldsRows=input.getFieldName().length;
  final ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.NewField"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.ID"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.RemoveID"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"Y","N"}),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Type"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes()),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Length"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Precision"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Format"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Group"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Decimal"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Currency"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.Nullif"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.IfNull"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"FieldSplitterDialog.ColumnInfo.TrimType"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.trimTypeDesc,true)};
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,fieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wOK,-2 * margin);
  wFields.setLayoutData(fdFields);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
