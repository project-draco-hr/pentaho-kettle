{
  TreeItem tis[]=wTree.getSelection();
  if (tis.length > 0) {
    TreeItem ti=tis[0];
    TreeItem parent=ti.getParentItem();
    int level=Const.getTreeLevel(ti);
    if (level == 0) {
      Const.flipExpanded(ti);
    }
 else     if (level == 1 && ti.getText().equalsIgnoreCase(STRING_DATABASES)) {
      if (!userinfo.isReadonly())       newDatabase();
    }
 else     if (level == 2 && parent.getText().equalsIgnoreCase(STRING_DATABASES)) {
      if (!userinfo.isReadonly())       editDatabase(ti.getText());
    }
 else     if (level == 1 && ti.getText().equalsIgnoreCase(STRING_USERS)) {
      if (!userinfo.isReadonly())       newUser();
    }
 else     if (level == 1 && parent.getText().equalsIgnoreCase(STRING_USERS)) {
      if (!userinfo.isReadonly())       editUser(ti.getText());
    }
 else     if (level == 1 && ti.getText().equalsIgnoreCase(STRING_PROFILES)) {
      if (!userinfo.isReadonly())       newProfile();
    }
 else     if (level == 1 && parent.getText().equalsIgnoreCase(STRING_PROFILES)) {
      if (!userinfo.isReadonly())       editProfile(ti.getText());
    }
 else     if (level == 1 && ti.getText().equalsIgnoreCase(STRING_SLAVES)) {
      if (!userinfo.isReadonly())       newSlaveServer();
    }
 else     if (level == 2 && parent.getText().equalsIgnoreCase(STRING_SLAVES)) {
      if (!userinfo.isReadonly())       editSlaveServer(ti.getText());
    }
  }
}
