{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobEntryEvalTableContent.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  FormData fd=new FormData();
  fd.right=new FormAttachment(50,-10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wOK.setLayoutData(fd);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  fd=new FormData();
  fd.left=new FormAttachment(50,10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wCancel.setLayoutData(fd);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,null);
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobEntryEvalTableContent.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wConnection=addConnectionLine(shell,wName,middle,margin);
  if (jobEntry.getDatabase() == null && jobMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSchemaname=new Label(shell,SWT.RIGHT);
  wlSchemaname.setText(Messages.getString("JobEntryEvalTableContent.Schemaname.Label"));
  props.setLook(wlSchemaname);
  fdlSchemaname=new FormData();
  fdlSchemaname.left=new FormAttachment(0,0);
  fdlSchemaname.right=new FormAttachment(middle,0);
  fdlSchemaname.top=new FormAttachment(wConnection,margin);
  wlSchemaname.setLayoutData(fdlSchemaname);
  wSchemaname=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchemaname);
  wSchemaname.setToolTipText(Messages.getString("JobEntryEvalTableContent.Schemaname.Tooltip"));
  wSchemaname.addModifyListener(lsMod);
  fdSchemaname=new FormData();
  fdSchemaname.left=new FormAttachment(middle,0);
  fdSchemaname.top=new FormAttachment(wConnection,margin);
  fdSchemaname.right=new FormAttachment(100,0);
  wSchemaname.setLayoutData(fdSchemaname);
  wlTablename=new Label(shell,SWT.RIGHT);
  wlTablename.setText(Messages.getString("JobEntryEvalTableContent.Tablename.Label"));
  props.setLook(wlTablename);
  fdlTablename=new FormData();
  fdlTablename.left=new FormAttachment(0,0);
  fdlTablename.right=new FormAttachment(middle,0);
  fdlTablename.top=new FormAttachment(wSchemaname,margin);
  wlTablename.setLayoutData(fdlTablename);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(Messages.getString("System.Button.Browse"));
  FormData fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wSchemaname,margin / 2);
  wbTable.setLayoutData(fdbTable);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wTablename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTablename);
  wTablename.setToolTipText(Messages.getString("JobEntryEvalTableContent.Tablename.Tooltip"));
  wTablename.addModifyListener(lsMod);
  fdTablename=new FormData();
  fdTablename.left=new FormAttachment(middle,0);
  fdTablename.top=new FormAttachment(wSchemaname,margin);
  fdTablename.right=new FormAttachment(wbTable,-margin);
  wTablename.setLayoutData(fdTablename);
  wSuccessGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSuccessGroup);
  wSuccessGroup.setText(Messages.getString("JobEntryEvalTableContent.SuccessGroup.Group.Label"));
  FormLayout SuccessGroupLayout=new FormLayout();
  SuccessGroupLayout.marginWidth=10;
  SuccessGroupLayout.marginHeight=10;
  wSuccessGroup.setLayout(SuccessGroupLayout);
  wlSuccessCondition=new Label(wSuccessGroup,SWT.RIGHT);
  wlSuccessCondition.setText(Messages.getString("JobEntryEvalTableContent.SuccessCondition.Label"));
  props.setLook(wlSuccessCondition);
  fdlSuccessCondition=new FormData();
  fdlSuccessCondition.left=new FormAttachment(0,-margin);
  fdlSuccessCondition.right=new FormAttachment(middle,-2 * margin);
  fdlSuccessCondition.top=new FormAttachment(0,margin);
  wlSuccessCondition.setLayoutData(fdlSuccessCondition);
  wSuccessCondition=new CCombo(wSuccessGroup,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wSuccessCondition.setItems(JobEntryEvalTableContent.successConditionsDesc);
  wSuccessCondition.select(0);
  props.setLook(wSuccessCondition);
  fdSuccessCondition=new FormData();
  fdSuccessCondition.left=new FormAttachment(middle,-margin);
  fdSuccessCondition.top=new FormAttachment(0,margin);
  fdSuccessCondition.right=new FormAttachment(100,0);
  wSuccessCondition.setLayoutData(fdSuccessCondition);
  wSuccessCondition.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlLimit=new Label(wSuccessGroup,SWT.RIGHT);
  wlLimit.setText(Messages.getString("JobEntryEvalTableContent.Limit.Label"));
  props.setLook(wlLimit);
  fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,-margin);
  fdlLimit.top=new FormAttachment(wSuccessCondition,margin);
  fdlLimit.right=new FormAttachment(middle,-2 * margin);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new TextVar(jobMeta,wSuccessGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobEntryEvalTableContent.Limit.Tooltip"));
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,-margin);
  fdLimit.top=new FormAttachment(wSuccessCondition,margin);
  fdLimit.right=new FormAttachment(100,-margin);
  wLimit.setLayoutData(fdLimit);
  fdSuccessGroup=new FormData();
  fdSuccessGroup.left=new FormAttachment(0,margin);
  fdSuccessGroup.top=new FormAttachment(wbTable,margin);
  fdSuccessGroup.right=new FormAttachment(100,-margin);
  wSuccessGroup.setLayoutData(fdSuccessGroup);
  wCustomGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wCustomGroup);
  wCustomGroup.setText(Messages.getString("JobEntryEvalTableContent.CustomGroup.Group.Label"));
  FormLayout CustomGroupLayout=new FormLayout();
  CustomGroupLayout.marginWidth=10;
  CustomGroupLayout.marginHeight=10;
  wCustomGroup.setLayout(CustomGroupLayout);
  wlcustomSQL=new Label(wCustomGroup,SWT.RIGHT);
  wlcustomSQL.setText(Messages.getString("JobEntryEvalTableContent.customSQL.Label"));
  props.setLook(wlcustomSQL);
  fdlcustomSQL=new FormData();
  fdlcustomSQL.left=new FormAttachment(0,-margin);
  fdlcustomSQL.top=new FormAttachment(wSuccessGroup,margin);
  fdlcustomSQL.right=new FormAttachment(middle,-2 * margin);
  wlcustomSQL.setLayoutData(fdlcustomSQL);
  wcustomSQL=new Button(wCustomGroup,SWT.CHECK);
  props.setLook(wcustomSQL);
  wcustomSQL.setToolTipText(Messages.getString("JobEntryEvalTableContent.customSQL.Tooltip"));
  fdcustomSQL=new FormData();
  fdcustomSQL.left=new FormAttachment(middle,-margin);
  fdcustomSQL.top=new FormAttachment(wSuccessGroup,margin);
  fdcustomSQL.right=new FormAttachment(100,0);
  wcustomSQL.setLayoutData(fdcustomSQL);
  wcustomSQL.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setCustomerSQL();
      jobEntry.setChanged();
    }
  }
);
  wlUseSubs=new Label(wCustomGroup,SWT.RIGHT);
  wlUseSubs.setText(Messages.getString("JobEntryEvalTableContent.UseVariableSubst.Label"));
  props.setLook(wlUseSubs);
  fdlUseSubs=new FormData();
  fdlUseSubs.left=new FormAttachment(0,-margin);
  fdlUseSubs.top=new FormAttachment(wcustomSQL,margin);
  fdlUseSubs.right=new FormAttachment(middle,-2 * margin);
  wlUseSubs.setLayoutData(fdlUseSubs);
  wUseSubs=new Button(wCustomGroup,SWT.CHECK);
  props.setLook(wUseSubs);
  wUseSubs.setToolTipText(Messages.getString("JobEntryEvalTableContent.UseVariableSubst.Tooltip"));
  fdUseSubs=new FormData();
  fdUseSubs.left=new FormAttachment(middle,-margin);
  fdUseSubs.top=new FormAttachment(wcustomSQL,margin);
  fdUseSubs.right=new FormAttachment(100,0);
  wUseSubs.setLayoutData(fdUseSubs);
  wUseSubs.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlClearResultList=new Label(wCustomGroup,SWT.RIGHT);
  wlClearResultList.setText(Messages.getString("JobEntryEvalTableContent.ClearResultList.Label"));
  props.setLook(wlClearResultList);
  fdlClearResultList=new FormData();
  fdlClearResultList.left=new FormAttachment(0,-margin);
  fdlClearResultList.top=new FormAttachment(wUseSubs,margin);
  fdlClearResultList.right=new FormAttachment(middle,-2 * margin);
  wlClearResultList.setLayoutData(fdlClearResultList);
  wClearResultList=new Button(wCustomGroup,SWT.CHECK);
  props.setLook(wClearResultList);
  wClearResultList.setToolTipText(Messages.getString("JobEntryEvalTableContent.ClearResultList.Tooltip"));
  fdClearResultList=new FormData();
  fdClearResultList.left=new FormAttachment(middle,-margin);
  fdClearResultList.top=new FormAttachment(wUseSubs,margin);
  fdClearResultList.right=new FormAttachment(100,0);
  wClearResultList.setLayoutData(fdClearResultList);
  wClearResultList.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlAddRowsToResult=new Label(wCustomGroup,SWT.RIGHT);
  wlAddRowsToResult.setText(Messages.getString("JobEntryEvalTableContent.AddRowsToResult.Label"));
  props.setLook(wlAddRowsToResult);
  fdlAddRowsToResult=new FormData();
  fdlAddRowsToResult.left=new FormAttachment(0,-margin);
  fdlAddRowsToResult.top=new FormAttachment(wClearResultList,margin);
  fdlAddRowsToResult.right=new FormAttachment(middle,-2 * margin);
  wlAddRowsToResult.setLayoutData(fdlAddRowsToResult);
  wAddRowsToResult=new Button(wCustomGroup,SWT.CHECK);
  props.setLook(wAddRowsToResult);
  wAddRowsToResult.setToolTipText(Messages.getString("JobEntryEvalTableContent.AddRowsToResult.Tooltip"));
  fdAddRowsToResult=new FormData();
  fdAddRowsToResult.left=new FormAttachment(middle,-margin);
  fdAddRowsToResult.top=new FormAttachment(wClearResultList,margin);
  fdAddRowsToResult.right=new FormAttachment(100,0);
  wAddRowsToResult.setLayoutData(fdAddRowsToResult);
  wAddRowsToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlPosition=new Label(wCustomGroup,SWT.NONE);
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(0,0);
  fdlPosition.right=new FormAttachment(100,0);
  fdlPosition.bottom=new FormAttachment(100,-margin);
  wlPosition.setLayoutData(fdlPosition);
  wlSQL=new Label(wCustomGroup,SWT.NONE);
  wlSQL.setText(Messages.getString("JobEntryEvalTableContent.Script.Label"));
  props.setLook(wlSQL);
  fdlSQL=new FormData();
  fdlSQL.left=new FormAttachment(0,0);
  fdlSQL.top=new FormAttachment(wAddRowsToResult,margin);
  wlSQL.setLayoutData(fdlSQL);
  wbSQLTable=new Button(wCustomGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSQLTable);
  wbSQLTable.setText(Messages.getString("JobEntryEvalTableContent.GetSQLAndSelectStatement"));
  FormData fdbSQLTable=new FormData();
  fdbSQLTable.right=new FormAttachment(100,0);
  fdbSQLTable.top=new FormAttachment(wAddRowsToResult,margin);
  wbSQLTable.setLayoutData(fdbSQLTable);
  wSQL=new StyledTextComp(wCustomGroup,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wSQL,Props.WIDGET_STYLE_FIXED);
  wSQL.addModifyListener(lsMod);
  fdSQL=new FormData();
  fdSQL.left=new FormAttachment(0,0);
  fdSQL.top=new FormAttachment(wbSQLTable,margin);
  fdSQL.right=new FormAttachment(100,-5);
  fdSQL.bottom=new FormAttachment(wlPosition,-margin);
  wSQL.setLayoutData(fdSQL);
  wSQL.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setPosition();
    }
  }
);
  wSQL.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      setPosition();
    }
    public void keyReleased(    KeyEvent e){
      setPosition();
    }
  }
);
  wSQL.addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      setPosition();
    }
    public void focusLost(    FocusEvent e){
      setPosition();
    }
  }
);
  wSQL.addMouseListener(new MouseAdapter(){
    public void mouseDoubleClick(    MouseEvent e){
      setPosition();
    }
    public void mouseDown(    MouseEvent e){
      setPosition();
    }
    public void mouseUp(    MouseEvent e){
      setPosition();
    }
  }
);
  wSQL.addModifyListener(lsMod);
  lineStyler=new SQLValuesHighlight();
  wSQL.addLineStyleListener(lineStyler);
  fdCustomGroup=new FormData();
  fdCustomGroup.left=new FormAttachment(0,margin);
  fdCustomGroup.top=new FormAttachment(wSuccessGroup,margin);
  fdCustomGroup.right=new FormAttachment(100,-margin);
  fdCustomGroup.bottom=new FormAttachment(wOK,-margin);
  wCustomGroup.setLayoutData(fdCustomGroup);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsbSQLTable=new Listener(){
    public void handleEvent(    Event e){
      getSQL();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wbSQLTable.addListener(SWT.Selection,lsbSQLTable);
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setCustomerSQL();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobEntryEvalTableContentDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
