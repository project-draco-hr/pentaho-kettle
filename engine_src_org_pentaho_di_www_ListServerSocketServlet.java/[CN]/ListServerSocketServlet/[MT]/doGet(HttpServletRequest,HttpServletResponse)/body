{
  if (isJettyMode() && !request.getContextPath().startsWith(CONTEXT_PATH)) {
    return;
  }
  if (log.isDebug()) {
    logDebug("List of ports for a server requested");
  }
  response.setStatus(HttpServletResponse.SC_OK);
  String hostname=request.getParameter(PARAM_HOSTNAME);
  boolean onlyOpen="Y".equalsIgnoreCase(request.getParameter(PARAM_ONLY_OPEN));
  response.setContentType("text/html");
  PrintStream out=new PrintStream(response.getOutputStream());
  Encoder encoder=ESAPI.encoder();
  out.println("<HTML>");
  out.println("<HEAD><TITLE>List of server sockets on server '" + encoder.encodeForHTML(hostname) + "'</TITLE></HEAD>");
  out.println("<BODY>");
  out.println("<H1>Ports for host '" + encoder.encodeForHTML(hostname) + "'</H1>");
  List<SocketPortAllocation> allocations=getTransformationMap().getHostServerSocketPorts(hostname);
  if (allocations == null) {
    out.println("No port allocations found for host '" + encoder.encodeForHTML(hostname) + "'");
    return;
  }
  out.println("Found " + allocations.size() + " ports for host '"+ encoder.encodeForHTML(hostname)+ "'<p>");
  Iterator<SocketPortAllocation> iterator=allocations.iterator();
  while (iterator.hasNext()) {
    SocketPortAllocation allocation=iterator.next();
    if (!onlyOpen || (onlyOpen && allocation.isAllocated())) {
      out.println(allocation.getPort() + " : Transformation=" + allocation.getTransformationName()+ ", "+ allocation.getSourceSlaveName()+ "/"+ allocation.getSourceStepName()+ "."+ allocation.getSourceStepCopy());
      out.println(" --> " + allocation.getTargetSlaveName() + "/"+ allocation.getTargetStepName()+ "."+ allocation.getTargetStepCopy());
      out.println(" id=" + allocation.getClusterRunId() + ", allocated="+ allocation.isAllocated());
      out.println(" time=" + allocation.getLastRequested());
      out.println("<br>");
    }
  }
  out.println("<p>");
  out.println("</BODY>");
  out.println("</HTML>");
}
