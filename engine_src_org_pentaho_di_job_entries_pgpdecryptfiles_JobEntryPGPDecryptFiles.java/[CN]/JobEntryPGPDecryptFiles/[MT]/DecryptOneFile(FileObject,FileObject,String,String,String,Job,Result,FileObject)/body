{
  boolean entrystatus=false;
  FileObject file_name=null;
  try {
    if (!Currentfile.toString().equals(sourcefilefolder.toString())) {
      String sourceshortfilename=Currentfile.getName().getBaseName();
      String shortfilename=sourceshortfilename;
      try {
        shortfilename=getDestinationFilename(sourceshortfilename);
      }
 catch (      Exception e) {
        logError(BaseMessages.getString(PKG,"JobPGPDecryptFiles.Error.GettingFilename",Currentfile.getName().getBaseName(),e.toString()));
        return entrystatus;
      }
      int lenCurrent=sourceshortfilename.length();
      String short_filename_from_basefolder=shortfilename;
      if (!isDoNotKeepFolderStructure()) {
        short_filename_from_basefolder=Currentfile.toString().substring(sourcefilefolder.toString().length(),Currentfile.toString().length());
      }
      short_filename_from_basefolder=short_filename_from_basefolder.substring(0,short_filename_from_basefolder.length() - lenCurrent) + shortfilename;
      file_name=KettleVFS.getFileObject(realDestinationFilefoldername + Const.FILE_SEPARATOR + short_filename_from_basefolder);
      if (!Currentfile.getParent().toString().equals(sourcefilefolder.toString())) {
        if (include_subfolders) {
          if (Currentfile.getType() == FileType.FOLDER) {
          }
 else {
            if (GetFileWildcard(sourceshortfilename,realWildcard)) {
              entrystatus=DecryptFile(shortfilename,Currentfile,passPhrase,file_name,movetofolderfolder,parentJob,result);
            }
          }
        }
      }
 else {
        if (Currentfile.getType() == FileType.FOLDER) {
        }
 else {
          if (GetFileWildcard(sourceshortfilename,realWildcard)) {
            entrystatus=DecryptFile(shortfilename,Currentfile,passPhrase,file_name,movetofolderfolder,parentJob,result);
          }
        }
      }
    }
    entrystatus=true;
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"JobPGPDecryptFiles.Log.Error",e.toString()));
  }
 finally {
    if (file_name != null) {
      try {
        file_name.close();
      }
 catch (      IOException ex) {
      }
    }
  }
  return entrystatus;
}
