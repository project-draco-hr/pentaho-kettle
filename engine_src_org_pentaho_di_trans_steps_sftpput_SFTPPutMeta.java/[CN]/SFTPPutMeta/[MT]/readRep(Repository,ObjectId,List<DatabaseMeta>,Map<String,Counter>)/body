{
  try {
    serverName=rep.getStepAttributeString(id_step,"servername");
    serverPort=rep.getStepAttributeString(id_step,"serverport");
    userName=rep.getStepAttributeString(id_step,"username");
    password=Encr.decryptPasswordOptionallyEncrypted(rep.getStepAttributeString(id_step,"password"));
    sourceFileFieldName=rep.getStepAttributeString(id_step,"sourceFileFieldName");
    remoteDirectoryFieldName=rep.getStepAttributeString(id_step,"remoteDirectoryFieldName");
    inputIsStream=rep.getStepAttributeBoolean(id_step,"inputIsStream");
    addFilenameResut=rep.getStepAttributeBoolean(id_step,"addFilenameResut");
    usekeyfilename=rep.getStepAttributeBoolean(id_step,"usekeyfilename");
    keyfilename=rep.getStepAttributeString(id_step,"keyfilename");
    keyfilepass=Encr.decryptPasswordOptionallyEncrypted(rep.getStepAttributeString(id_step,"keyfilepass"));
    compression=rep.getStepAttributeString(id_step,"compression");
    proxyType=rep.getStepAttributeString(id_step,"proxyType");
    proxyHost=rep.getStepAttributeString(id_step,"proxyHost");
    proxyPort=rep.getStepAttributeString(id_step,"proxyPort");
    proxyUsername=rep.getStepAttributeString(id_step,"proxyUsername");
    proxyPassword=Encr.decryptPasswordOptionallyEncrypted(rep.getStepAttributeString(id_step,"proxyPassword"));
    createRemoteFolder=rep.getStepAttributeBoolean(id_step,"createRemoteFolder");
    boolean remove=rep.getStepAttributeBoolean(id_step,"remove");
    setAfterFTPS(JobEntrySFTPPUT.getAfterSFTPPutByCode(Const.NVL(rep.getStepAttributeString(id_step,"aftersftpput"),"")));
    if (remove && getAfterFTPS() == JobEntrySFTPPUT.AFTER_FTPSPUT_NOTHING) {
      setAfterFTPS(JobEntrySFTPPUT.AFTER_FTPSPUT_DELETE);
    }
    destinationfolderFieldName=rep.getStepAttributeString(id_step,"destinationfolderFieldName");
    createDestinationFolder=rep.getStepAttributeBoolean(id_step,"createdestinationfolder");
    remoteFilenameFieldName=rep.getStepAttributeString(id_step,"remoteFilenameFieldName");
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
