{
  int line[]=getLine(jobHop.getFromEntry(),jobHop.getToEntry());
  gc.setLineWidth(linewidth);
  EColor col;
  if (jobHop.getFromEntry().isLaunchingInParallel()) {
    gc.setLineStyle(ELineStyle.PARALLEL);
  }
 else {
    gc.setLineStyle(ELineStyle.SOLID);
  }
  if (is_candidate) {
    col=EColor.BLUE;
  }
 else   if (jobHop.isEnabled()) {
    if (jobHop.isUnconditional()) {
      col=EColor.BLACK;
    }
 else {
      if (jobHop.getEvaluation()) {
        col=EColor.GREEN;
      }
 else {
        col=EColor.RED;
      }
    }
  }
 else {
    col=EColor.GRAY;
  }
  gc.setForeground(col);
  if (jobHop.isSplit())   gc.setLineWidth(linewidth + 2);
  drawArrow(line,jobHop);
  if (jobHop.isSplit())   gc.setLineWidth(linewidth);
  gc.setForeground(EColor.BLACK);
  gc.setBackground(EColor.BACKGROUND);
  gc.setLineStyle(ELineStyle.SOLID);
}
