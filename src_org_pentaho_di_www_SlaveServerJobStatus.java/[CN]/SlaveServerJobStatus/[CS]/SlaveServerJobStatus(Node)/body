{
  this();
  jobName=XMLHandler.getTagValue(jobStatusNode,"jobname");
  statusDescription=XMLHandler.getTagValue(jobStatusNode,"status_desc");
  errorDescription=XMLHandler.getTagValue(jobStatusNode,"error_desc");
  String loggingString64=XMLHandler.getTagValue(jobStatusNode,"logging_string");
  try {
    byte[] bytes=new byte[]{};
    if (loggingString64 != null)     bytes=Base64.decodeBase64(loggingString64.getBytes());
    if (bytes.length > 0) {
      ByteArrayInputStream bais=new ByteArrayInputStream(bytes);
      GZIPInputStream gzip=new GZIPInputStream(bais);
      int c;
      StringBuffer buffer=new StringBuffer();
      while ((c=gzip.read()) != -1)       buffer.append((char)c);
      gzip.close();
      loggingString=buffer.toString();
    }
 else {
      loggingString="";
    }
  }
 catch (  IOException e) {
    loggingString="Unable to decode logging from remote server : " + e.toString() + Const.CR+ Const.getStackTracker(e)+ Const.CR;
  }
  Node resultNode=XMLHandler.getSubNode(jobStatusNode,Result.XML_TAG);
  if (resultNode != null) {
    try {
      result=new Result(resultNode);
    }
 catch (    KettleException e) {
      loggingString+="Unable to serialize result object as XML" + Const.CR + Const.getStackTracker(e)+ Const.CR;
    }
  }
}
