{
  if (dataA == null || dataB == null || dataC == null)   return null;
switch (metaA.getType()) {
case ValueMetaInterface.TYPE_STRING:
    return metaA.getString(dataA) + metaB.getString(dataB) + metaC.getString(dataC);
case ValueMetaInterface.TYPE_NUMBER:
  return new Double(metaA.getNumber(dataA).doubleValue() + metaB.getNumber(dataB).doubleValue() + metaC.getNumber(dataC).doubleValue());
case ValueMetaInterface.TYPE_INTEGER:
return new Long(metaA.getInteger(dataA).longValue() + metaB.getInteger(dataB).longValue() + metaC.getInteger(dataC).longValue());
case ValueMetaInterface.TYPE_BOOLEAN:
return Boolean.valueOf(metaA.getBoolean(dataA).booleanValue() || metaB.getBoolean(dataB).booleanValue() || metaB.getBoolean(dataC).booleanValue());
case ValueMetaInterface.TYPE_BIGNUMBER:
return metaA.getBigNumber(dataA).add(metaB.getBigNumber(dataB).add(metaC.getBigNumber(dataC)));
default :
throw new KettleValueException("The 'plus' function only works on numeric data and Strings.");
}
}
