{
  List<String> attributes=Arrays.asList("groupField","aggregateField","subjectField","aggregateType","valueField");
  Map<String,String> getterMap=new HashMap<String,String>();
  Map<String,String> setterMap=new HashMap<String,String>();
  Map<String,FieldLoadSaveValidator<?>> typeValidators=new HashMap<String,FieldLoadSaveValidator<?>>();
  Map<String,FieldLoadSaveValidator<?>> fieldValidators=new HashMap<String,FieldLoadSaveValidator<?>>();
  fieldValidators.put("aggregateField",new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),50));
  fieldValidators.put("subjectField",new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),50));
  fieldValidators.put("aggregateType",new PrimitiveIntArrayLoadSaveValidator(new IntLoadSaveValidator(AnalyticQueryMeta.typeGroupCode.length),50));
  fieldValidators.put("valueField",new PrimitiveIntArrayLoadSaveValidator(new IntLoadSaveValidator(),50));
  LoadSaveTester loadSaveTester=new LoadSaveTester(AnalyticQueryMeta.class,attributes,getterMap,setterMap,fieldValidators,typeValidators);
  loadSaveTester.testSerialization();
}
