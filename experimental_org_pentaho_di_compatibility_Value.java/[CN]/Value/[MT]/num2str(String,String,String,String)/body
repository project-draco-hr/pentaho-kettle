{
  if (isNull()) {
    setType(VALUE_TYPE_STRING);
  }
 else {
    if (getType() == VALUE_TYPE_NUMBER || getType() == VALUE_TYPE_INTEGER) {
      NumberFormat nf=NumberFormat.getInstance();
      DecimalFormat df=(DecimalFormat)nf;
      DecimalFormatSymbols dfs=new DecimalFormatSymbols();
      if (currencySymbol != null && currencySymbol.length() > 0)       dfs.setCurrencySymbol(currencySymbol);
      if (groupingSymbol != null && groupingSymbol.length() > 0)       dfs.setGroupingSeparator(groupingSymbol.charAt(0));
      if (decimalSymbol != null && decimalSymbol.length() > 0)       dfs.setDecimalSeparator(decimalSymbol.charAt(0));
      df.setDecimalFormatSymbols(dfs);
      if (format != null && format.length() > 0)       df.applyPattern(format);
      try {
        setValue(nf.format(getNumber()));
      }
 catch (      Exception e) {
        setType(VALUE_TYPE_STRING);
        setNull();
        throw new KettleValueException("Couldn't convert Number to String " + e.toString());
      }
    }
 else {
      throw new KettleValueException("Function NUM2STR only works on Numbers and Integers");
    }
  }
  return this;
}
