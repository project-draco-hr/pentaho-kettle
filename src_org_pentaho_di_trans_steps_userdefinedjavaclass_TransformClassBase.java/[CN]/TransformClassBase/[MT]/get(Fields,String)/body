{
  FieldHelper fh;
switch (type) {
case In:
    fh=inFieldHelpers.get(name);
  if (fh == null) {
    try {
      fh=new FieldHelper(data.inputRowMeta,name);
    }
 catch (    IllegalArgumentException e) {
      throw new KettleStepException(BaseMessages.getString(PKG,"TransformClassBase.Exception.UnableToFindFieldHelper",type.name(),name));
    }
    inFieldHelpers.put(name,fh);
  }
break;
case Out:
fh=outFieldHelpers.get(name);
if (fh == null) {
try {
fh=new FieldHelper(data.outputRowMeta,name);
}
 catch (IllegalArgumentException e) {
throw new KettleStepException(BaseMessages.getString(PKG,"TransformClassBase.Exception.UnableToFindFieldHelper",type.name(),name));
}
outFieldHelpers.put(name,fh);
}
break;
case Info:
fh=infoFieldHelpers.get(name);
if (fh == null) {
RowMetaInterface rmi=getTransMeta().getPrevInfoFields(getStepname());
try {
fh=new FieldHelper(rmi,name);
}
 catch (IllegalArgumentException e) {
throw new KettleStepException(BaseMessages.getString(PKG,"TransformClassBase.Exception.UnableToFindFieldHelper",type.name(),name));
}
infoFieldHelpers.put(name,fh);
}
break;
default :
throw new KettleStepException(BaseMessages.getString(PKG,"TransformClassBase.Exception.InvalidFieldsType",type.name(),name));
}
return fh;
}
