{
  meta=(DynamicSQLRowMeta)smi;
  data=(DynamicSQLRowData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    if (Utils.isEmpty(meta.getSQLFieldName())) {
      throw new KettleException(BaseMessages.getString(PKG,"DynamicSQLRow.Exception.SQLFieldNameEmpty"));
    }
    if (Utils.isEmpty(meta.getSql())) {
      throw new KettleException(BaseMessages.getString(PKG,"DynamicSQLRow.Exception.SQLEmpty"));
    }
    if (data.indexOfSQLField < 0) {
      data.indexOfSQLField=getInputRowMeta().indexOfValue(meta.getSQLFieldName());
      if (data.indexOfSQLField < 0) {
        throw new KettleException(BaseMessages.getString(PKG,"DynamicSQLRow.Exception.FieldNotFound",meta.getSQLFieldName()));
      }
    }
  }
  try {
    lookupValues(getInputRowMeta(),r);
    if (checkFeedback(getLinesRead())) {
      if (log.isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"DynamicSQLRow.Log.LineNumber") + getLinesRead());
      }
    }
  }
 catch (  KettleException e) {
    boolean sendToErrorRow=false;
    String errorMessage=null;
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(BaseMessages.getString(PKG,"DynamicSQLRow.Log.ErrorInStepRunning") + e.getMessage());
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,null,"DynamicSQLRow001");
    }
  }
  return true;
}
