{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"WriteToLogDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"WriteToLogDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlLoglevel=new Label(shell,SWT.RIGHT);
  wlLoglevel.setText(BaseMessages.getString(PKG,"WriteToLogDialog.Loglevel.Label"));
  props.setLook(wlLoglevel);
  fdlLoglevel=new FormData();
  fdlLoglevel.left=new FormAttachment(0,0);
  fdlLoglevel.right=new FormAttachment(middle,-margin);
  fdlLoglevel.top=new FormAttachment(wStepname,margin);
  wlLoglevel.setLayoutData(fdlLoglevel);
  wLoglevel=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wLoglevel.setItems(LogLevel.getLogLevelDescriptions());
  props.setLook(wLoglevel);
  fdLoglevel=new FormData();
  fdLoglevel.left=new FormAttachment(middle,0);
  fdLoglevel.top=new FormAttachment(wStepname,margin);
  fdLoglevel.right=new FormAttachment(100,0);
  wLoglevel.setLayoutData(fdLoglevel);
  wlPrintHeader=new Label(shell,SWT.RIGHT);
  wlPrintHeader.setText(BaseMessages.getString(PKG,"WriteToLogDialog.PrintHeader.Label"));
  props.setLook(wlPrintHeader);
  fdlPrintHeader=new FormData();
  fdlPrintHeader.left=new FormAttachment(0,0);
  fdlPrintHeader.top=new FormAttachment(wLoglevel,margin);
  fdlPrintHeader.right=new FormAttachment(middle,-margin);
  wlPrintHeader.setLayoutData(fdlPrintHeader);
  wPrintHeader=new Button(shell,SWT.CHECK);
  wPrintHeader.setToolTipText(BaseMessages.getString(PKG,"WriteToLogDialog.PrintHeader.Tooltip"));
  props.setLook(wPrintHeader);
  fdPrintHeader=new FormData();
  fdPrintHeader.left=new FormAttachment(middle,0);
  fdPrintHeader.top=new FormAttachment(wLoglevel,margin);
  fdPrintHeader.right=new FormAttachment(100,0);
  wPrintHeader.setLayoutData(fdPrintHeader);
  wlLogMessage=new Label(shell,SWT.RIGHT);
  wlLogMessage.setText(BaseMessages.getString(PKG,"WriteToLogDialog.Shell.Title"));
  props.setLook(wlLogMessage);
  fdlLogMessage=new FormData();
  fdlLogMessage.left=new FormAttachment(0,0);
  fdlLogMessage.top=new FormAttachment(wPrintHeader,margin);
  fdlLogMessage.right=new FormAttachment(middle,-margin);
  wlLogMessage.setLayoutData(fdlLogMessage);
  wLogMessage=new StyledTextComp(transMeta,shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wLogMessage,Props.WIDGET_STYLE_FIXED);
  wLogMessage.addModifyListener(lsMod);
  fdLogMessage=new FormData();
  fdLogMessage.left=new FormAttachment(middle,0);
  fdLogMessage.top=new FormAttachment(wPrintHeader,margin);
  fdLogMessage.right=new FormAttachment(100,-2 * margin);
  fdLogMessage.height=125;
  wLogMessage.setLayoutData(fdLogMessage);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"System.Button.GetFields"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,null);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"WriteToLogDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wLogMessage,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsCols=1;
  final int FieldsRows=input.getFieldName().length;
  colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(BaseMessages.getString(PKG,"WriteToLogDialog.Fieldname.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wOK,-2 * margin);
  wFields.setLayoutData(fdFields);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
