{
  try {
    ObjectId dbids[]=repository.getSlaveIDs(false);
    for (int i=0; i < dbids.length; i++) {
      SlaveServer slaveServer=repository.loadSlaveServer(dbids[i],null);
      slaveServer.shareVariablesWith(jobMeta);
      SlaveServer check=jobMeta.findSlaveServer(slaveServer.getName());
      if (check == null || overWriteShared) {
        if (!Const.isEmpty(slaveServer.getName())) {
          jobMeta.addOrReplaceSlaveServer(slaveServer);
          if (!overWriteShared)           slaveServer.setChanged(false);
        }
      }
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobMeta.Log.UnableToReadSlaveServersFromRepository"),dbe);
  }
}
