{
  try {
    includeFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"include"));
    filenameField=XMLHandler.getTagValue(stepnode,"include_field");
    addResultFile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"addresultfile"));
    readurl="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"readurl"));
    removeSourceField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"removeSourceField"));
    isIgnoreEmptyFile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"IsIgnoreEmptyFile"));
    ignoreMissingPath="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"ignoreMissingPath"));
    doNotFailIfNoFile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"doNotFailIfNoFile"));
    includeRowNumber="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"rownum"));
    rowNumberField=XMLHandler.getTagValue(stepnode,"rownum_field");
    Node filenode=XMLHandler.getSubNode(stepnode,"file");
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrFiles=XMLHandler.countNodes(filenode,"name");
    int nrFields=XMLHandler.countNodes(fields,"field");
    initArrayFields(nrFiles,nrFields);
    for (int i=0; i < nrFiles; i++) {
      Node filenamenode=XMLHandler.getSubNodeByNr(filenode,"name",i);
      Node filemasknode=XMLHandler.getSubNodeByNr(filenode,"filemask",i);
      Node excludefilemasknode=XMLHandler.getSubNodeByNr(filenode,"exclude_filemask",i);
      Node fileRequirednode=XMLHandler.getSubNodeByNr(filenode,"file_required",i);
      Node includeSubFoldersnode=XMLHandler.getSubNodeByNr(filenode,"include_subfolders",i);
      getFileName()[i]=XMLHandler.getNodeValue(filenamenode);
      getFileMask()[i]=XMLHandler.getNodeValue(filemasknode);
      getExcludeFileMask()[i]=XMLHandler.getNodeValue(excludefilemasknode);
      getFileRequired()[i]=XMLHandler.getNodeValue(fileRequirednode);
      getIncludeSubFolders()[i]=XMLHandler.getNodeValue(includeSubFoldersnode);
    }
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      JsonInputField field=new JsonInputField(fnode);
      getInputFields()[i]=field;
    }
    rowLimit=Const.toLong(XMLHandler.getTagValue(stepnode,"limit"),0L);
    setInFields("Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"IsInFields")));
    isAFile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"IsAFile"));
    setFieldValue(XMLHandler.getTagValue(stepnode,"valueField"));
    setShortFileNameField(XMLHandler.getTagValue(stepnode,"shortFileFieldName"));
    setPathField(XMLHandler.getTagValue(stepnode,"pathFieldName"));
    setIsHiddenField(XMLHandler.getTagValue(stepnode,"hiddenFieldName"));
    setLastModificationDateField(XMLHandler.getTagValue(stepnode,"lastModificationTimeFieldName"));
    setUriField(XMLHandler.getTagValue(stepnode,"uriNameFieldName"));
    setRootUriField(XMLHandler.getTagValue(stepnode,"rootUriNameFieldName"));
    setExtensionField(XMLHandler.getTagValue(stepnode,"extensionFieldName"));
    setSizeField(XMLHandler.getTagValue(stepnode,"sizeFieldName"));
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"JsonInputMeta.Exception.ErrorLoadingXML",e.toString()));
  }
}
