{
  if (inFields && removeSourceField && !Const.isEmpty(valueField)) {
    int index=rowMeta.indexOfValue(valueField);
    if (index != -1) {
      rowMeta.removeValueMeta(index);
    }
  }
  for (  JsonInputField field : getInputFields()) {
    try {
      rowMeta.addValueMeta(field.toValueMeta(name,space));
    }
 catch (    Exception e) {
      throw new KettleStepException(e);
    }
  }
  if (includeFilename) {
    ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(filenameField));
    v.setLength(250);
    v.setPrecision(-1);
    v.setOrigin(name);
    rowMeta.addValueMeta(v);
  }
  if (includeRowNumber) {
    ValueMetaInterface v=new ValueMetaInteger(space.environmentSubstitute(rowNumberField));
    v.setLength(ValueMetaInterface.DEFAULT_INTEGER_LENGTH,0);
    v.setOrigin(name);
    rowMeta.addValueMeta(v);
  }
  additionalFileOutputFields.normalize();
  additionalFileOutputFields.getFields(rowMeta,name,info,space,repository,metaStore);
}
