{
  originalPattern=pattern;
  String datePattern=pattern;
  super.setDateFormatSymbols(formatSymbols);
  patternNanosecond=formatSymbols.getLocalPatternChars().charAt(PATTERN_MILLISECOND_POSITION);
  StringBuilder sb=new StringBuilder();
  startNanosecondPatternPosition=datePattern.indexOf(patternNanosecond);
  endNanosecondPatternPosition=datePattern.lastIndexOf(patternNanosecond);
  initNanosecondsFormat();
  if (startNanosecondPatternPosition != -1) {
    sb.append(datePattern.substring(0,startNanosecondPatternPosition));
    sb.append(FORMATTER_ESCAPE_CHARACTER);
    sb.append(NANOSECOND_PLACEHOLDER);
    sb.append(FORMATTER_ESCAPE_CHARACTER);
    sb.append(datePattern.substring(endNanosecondPatternPosition + 1));
    datePattern=sb.toString();
    sb.setLength(0);
  }
  String patternToApply;
  if (startNanosecondPatternPosition == -1 || endNanosecondPatternPosition - startNanosecondPatternPosition < 3) {
    compatibleToSuperPattern=true;
    patternToApply=originalPattern;
  }
 else {
    compatibleToSuperPattern=false;
    patternToApply=datePattern;
  }
  if (compiledPattern) {
    super.applyLocalizedPattern(patternToApply);
  }
 else {
    super.applyPattern(patternToApply);
  }
}
