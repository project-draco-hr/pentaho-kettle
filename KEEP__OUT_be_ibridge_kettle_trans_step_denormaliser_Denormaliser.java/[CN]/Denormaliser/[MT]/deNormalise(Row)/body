{
  String key=r.getValue(data.keyFieldNr).getString();
  if (!Const.isEmpty(key)) {
    List indexes=(List)data.keyValue.get(key);
    if (indexes != null) {
      for (int i=0; i < indexes.size(); i++) {
        Integer keyNr=(Integer)indexes.get(i);
        if (keyNr != null) {
          int idx=keyNr.intValue();
          DenormaliserTargetField field=meta.getDenormaliserTargetField()[idx];
          Value targetValue=r.getValue(data.fieldNameIndex[idx]);
          if (targetValue.getType() != field.getTargetType()) {
switch (targetValue.getType()) {
case Value.VALUE_TYPE_STRING:
switch (field.getTargetType()) {
case Value.VALUE_TYPE_DATE:
                if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
                  targetValue.setNull();
                  targetValue.setType(Value.VALUE_TYPE_DATE);
                }
 else {
                  targetValue.str2dat(field.getTargetFormat());
                }
              ;
            break;
case Value.VALUE_TYPE_INTEGER:
          if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
            targetValue.setNull();
            targetValue.setType(Value.VALUE_TYPE_INTEGER);
          }
 else {
            targetValue.setType(targetValue.getType());
          }
        break;
case Value.VALUE_TYPE_NUMBER:
      if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
        targetValue.setNull();
        targetValue.setType(Value.VALUE_TYPE_NUMBER);
      }
 else {
        targetValue.str2num(field.getTargetFormat(),field.getTargetDecimalSymbol(),field.getTargetGroupingSymbol(),field.getTargetCurrencySymbol());
      }
    break;
case Value.VALUE_TYPE_BIGNUMBER:
  if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
    targetValue.setNull();
    targetValue.setType(Value.VALUE_TYPE_BIGNUMBER);
  }
 else {
    targetValue.setType(targetValue.getType());
  }
break;
case Value.VALUE_TYPE_BOOLEAN:
if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
targetValue.setNull();
targetValue.setType(Value.VALUE_TYPE_BOOLEAN);
}
 else {
targetValue.setType(targetValue.getType());
}
break;
default :
if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
targetValue.setNull();
}
 else {
targetValue.setType(targetValue.getType());
}
break;
}
default :
if (targetValue.isNull() || targetValue.getString() == null || targetValue.getString().length() == 0) {
targetValue.setNull();
}
 else {
targetValue.setType(targetValue.getType());
}
break;
}
}
Value prevTarget=data.targetResult.getValue(idx);
switch (field.getTargetAggregationType()) {
case DenormaliserTargetField.TYPE_AGGR_SUM:
prevTarget.plus(targetValue);
break;
case DenormaliserTargetField.TYPE_AGGR_MIN:
if (targetValue.compare(prevTarget) < 0) prevTarget.setValue(targetValue);
break;
case DenormaliserTargetField.TYPE_AGGR_MAX:
if (targetValue.compare(prevTarget) > 0) prevTarget.setValue(targetValue);
break;
case DenormaliserTargetField.TYPE_AGGR_COUNT_ALL:
if (!targetValue.isNull()) prevTarget.setValue(prevTarget.getInteger() + 1);
break;
case DenormaliserTargetField.TYPE_AGGR_AVERAGE:
if (!targetValue.isNull()) {
data.counters[idx]++;
data.sum[idx].plus(targetValue);
}
break;
case DenormaliserTargetField.TYPE_AGGR_NONE:
default :
prevTarget.setValue(targetValue);
break;
}
}
}
}
}
}
