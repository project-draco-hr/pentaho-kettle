{
  PropsUI props=PropsUI.getInstance();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  final Group physicalGroup=new Group(parentComposite,SWT.SHADOW_NONE);
  props.setLook(physicalGroup);
  physicalGroup.setText(BaseMessages.getString(PKG,"StarModelerPerspective.PhysicalGroup.Label"));
  FormLayout phGroupLayout=new FormLayout();
  phGroupLayout.marginLeft=10;
  phGroupLayout.marginRight=10;
  phGroupLayout.marginTop=10;
  phGroupLayout.marginBottom=10;
  phGroupLayout.spacing=margin;
  physicalGroup.setLayout(phGroupLayout);
  FormData fdPhysicalGroup=new FormData();
  fdPhysicalGroup.top=new FormAttachment(lastControl,2 * margin);
  fdPhysicalGroup.left=new FormAttachment(0,0);
  fdPhysicalGroup.right=new FormAttachment(100,0);
  physicalGroup.setLayoutData(fdPhysicalGroup);
  lastControl=physicalGroup;
  final List<DatabaseMeta> sharedDatabases=SharedDatabaseUtil.getDatabaseMetaList(Spoon.getInstance().metaStore);
  String[] databaseNames=SharedDatabaseUtil.getSortedDatabaseNames(sharedDatabases);
  Label targetDatabaseLabel=new Label(physicalGroup,SWT.RIGHT);
  props.setLook(targetDatabaseLabel);
  targetDatabaseLabel.setText(BaseMessages.getString(PKG,"StarModelerPerspective.TargetDatabase.Label"));
  FormData fdTargetDatabaseLabel=new FormData();
  fdTargetDatabaseLabel.left=new FormAttachment(0,0);
  fdTargetDatabaseLabel.right=new FormAttachment(middle,0);
  fdTargetDatabaseLabel.top=new FormAttachment(0,0);
  targetDatabaseLabel.setLayoutData(fdTargetDatabaseLabel);
  final Button newDatabaseButton=new Button(physicalGroup,SWT.PUSH);
  newDatabaseButton.setText(BaseMessages.getString("System.Button.New"));
  FormData fdNewDatabaseButton=new FormData();
  fdNewDatabaseButton.right=new FormAttachment(100,0);
  fdNewDatabaseButton.top=new FormAttachment(0,0);
  newDatabaseButton.setLayoutData(fdNewDatabaseButton);
  final CCombo targetDatabase=new CCombo(physicalGroup,SWT.BORDER | SWT.SINGLE);
  targetDatabase.setItems(databaseNames);
  props.setLook(targetDatabase);
  String targetDb=ConceptUtil.getString(starDomain.getDomain(),DefaultIDs.DOMAIN_TARGET_DATABASE);
  targetDatabase.setText(Const.NVL(targetDb,""));
  FormData fdTargetDatabase=new FormData();
  fdTargetDatabase.left=new FormAttachment(middle,5);
  fdTargetDatabase.right=new FormAttachment(newDatabaseButton,-margin);
  fdTargetDatabase.top=new FormAttachment(lastControl,margin);
  targetDatabase.setLayoutData(fdTargetDatabase);
  targetDatabase.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent event){
      starDomain.getDomain().setProperty(DefaultIDs.DOMAIN_TARGET_DATABASE,targetDatabase.getText());
    }
  }
);
  lastControl=targetDatabase;
  newDatabaseButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      createSharedDatabase(targetDatabase);
    }
  }
);
  Button sqlJobButton=new Button(physicalGroup,SWT.PUSH);
  sqlJobButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.GenerateSQLJob"));
  sqlJobButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      generateSqlJobButton(starDomain);
    }
  }
);
  Button domainJobButton=new Button(physicalGroup,SWT.PUSH);
  domainJobButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.GenerateDomainJob"));
  domainJobButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      generateDomainJobButton(starDomain);
    }
  }
);
  Button physicalModelButton=new Button(physicalGroup,SWT.PUSH);
  physicalModelButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.GeneratePhysicalModel"));
  physicalModelButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      generatePhysicalModelButton(starDomain);
    }
  }
);
  Button mondrianSchemaButton=new Button(physicalGroup,SWT.PUSH);
  mondrianSchemaButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.GenerateMondrianSchema"));
  mondrianSchemaButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      generateMondrialSchemaButton(starDomain);
    }
  }
);
  BaseStepDialog.positionBottomButtons(physicalGroup,new Button[]{sqlJobButton,domainJobButton,physicalModelButton,mondrianSchemaButton},margin,lastControl);
  return physicalGroup;
}
