{
  PropsUI props=PropsUI.getInstance();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  final Group dimsGroup=new Group(parentComposite,SWT.SHADOW_NONE);
  props.setLook(dimsGroup);
  dimsGroup.setText(BaseMessages.getString(PKG,"StarModelerPerspective.SharedDimensions.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginLeft=10;
  groupLayout.marginRight=10;
  groupLayout.marginTop=10;
  groupLayout.marginBottom=10;
  groupLayout.spacing=margin;
  dimsGroup.setLayout(groupLayout);
  FormData fdDimsGroup=new FormData();
  fdDimsGroup.top=new FormAttachment(lastControl,margin);
  fdDimsGroup.left=new FormAttachment(0,0);
  fdDimsGroup.right=new FormAttachment(100,0);
  dimsGroup.setLayoutData(fdDimsGroup);
  Label modelsLabel=new Label(dimsGroup,SWT.RIGHT);
  props.setLook(modelsLabel);
  modelsLabel.setText(BaseMessages.getString(PKG,"StarModelerPerspective.DomainModels.Label"));
  FormData fdModelsLabel=new FormData();
  fdModelsLabel.left=new FormAttachment(0,0);
  fdModelsLabel.right=new FormAttachment(middle,0);
  fdModelsLabel.top=new FormAttachment(lastControl,margin);
  modelsLabel.setLayoutData(fdModelsLabel);
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"StarModelerPerspective.ModelName.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(BaseMessages.getString(PKG,"StarModelerPerspective.ModelDescription.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  final TableView modelsList=new TableView(new Variables(),dimsGroup,SWT.BORDER,colinf,1,null,props);
  modelsList.setReadonly(true);
  modelsList.table.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      if (modelsList.getSelectionIndex() < 0)       return;
      TableItem item=modelsList.table.getSelection()[0];
      String name=item.getText(1);
      if (editModel(dimsGroup.getShell(),starDomain,defaultLocale,name)) {
        refreshModelsList(starDomain,modelsList);
      }
    }
  }
);
  refreshModelsList(starDomain,modelsList);
  FormData fdModelsList=new FormData();
  fdModelsList.top=new FormAttachment(lastControl,margin);
  fdModelsList.bottom=new FormAttachment(lastControl,250);
  fdModelsList.left=new FormAttachment(middle,margin);
  fdModelsList.right=new FormAttachment(100,0);
  modelsList.setLayoutData(fdModelsList);
  lastControl=modelsList;
  Button newModelButton=new Button(dimsGroup,SWT.PUSH);
  newModelButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.NewModel"));
  FormData fdNewModelButton=new FormData();
  fdNewModelButton.top=new FormAttachment(lastControl,margin);
  fdNewModelButton.left=new FormAttachment(middle,margin);
  newModelButton.setLayoutData(fdNewModelButton);
  newModelButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (newModel(dimsGroup.getShell(),starDomain)) {
        refreshModelsList(starDomain,modelsList);
      }
    }
  }
);
  Button editModelButton=new Button(dimsGroup,SWT.PUSH);
  editModelButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.EditModel"));
  FormData fdEditModelButton=new FormData();
  fdEditModelButton.top=new FormAttachment(lastControl,margin);
  fdEditModelButton.left=new FormAttachment(newModelButton,margin);
  editModelButton.setLayoutData(fdEditModelButton);
  editModelButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (modelsList.getSelectionIndex() < 0)       return;
      TableItem item=modelsList.table.getSelection()[0];
      String name=item.getText(1);
      if (editModel(dimsGroup.getShell(),starDomain,defaultLocale,name)) {
        refreshModelsList(starDomain,modelsList);
      }
    }
  }
);
  Button delModelButton=new Button(dimsGroup,SWT.PUSH);
  delModelButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.DeleteModel"));
  FormData fdDelModelButton=new FormData();
  fdDelModelButton.top=new FormAttachment(lastControl,margin);
  fdDelModelButton.left=new FormAttachment(editModelButton,margin);
  delModelButton.setLayoutData(fdDelModelButton);
  delModelButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (modelsList.getSelectionIndex() < 0)       return;
      TableItem item=modelsList.table.getSelection()[0];
      String name=item.getText(1);
      if (deleteModel(dimsGroup.getShell(),starDomain,defaultLocale,name)) {
        refreshModelsList(starDomain,modelsList);
      }
    }
  }
);
  return dimsGroup;
}
