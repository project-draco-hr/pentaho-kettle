{
  PropsUI props=PropsUI.getInstance();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  final Group dimsGroup=new Group(parentComposite,SWT.SHADOW_NONE);
  props.setLook(dimsGroup);
  dimsGroup.setText(BaseMessages.getString(PKG,"StarModelerPerspective.SharedDimensions.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginLeft=10;
  groupLayout.marginRight=10;
  groupLayout.marginTop=10;
  groupLayout.marginBottom=10;
  groupLayout.spacing=margin;
  dimsGroup.setLayout(groupLayout);
  FormData fdDimsGroup=new FormData();
  fdDimsGroup.top=new FormAttachment(lastControl,margin);
  fdDimsGroup.left=new FormAttachment(0,0);
  fdDimsGroup.right=new FormAttachment(100,0);
  dimsGroup.setLayoutData(fdDimsGroup);
  Label dimensionsLabel=new Label(dimsGroup,SWT.RIGHT);
  props.setLook(dimensionsLabel);
  dimensionsLabel.setText(BaseMessages.getString(PKG,"StarModelerPerspective.ListOfSharedDimensions.Label"));
  FormData fdDimensionsLabel=new FormData();
  fdDimensionsLabel.left=new FormAttachment(0,0);
  fdDimensionsLabel.right=new FormAttachment(middle,0);
  fdDimensionsLabel.top=new FormAttachment(lastControl,margin);
  dimensionsLabel.setLayoutData(fdDimensionsLabel);
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"StarModelerPerspective.DimensionName.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(BaseMessages.getString(PKG,"StarModelerPerspective.DimensionDescription.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  final TableView dimensionsList=new TableView(new Variables(),dimsGroup,SWT.BORDER,colinf,1,null,props);
  dimensionsList.setReadonly(true);
  dimensionsList.table.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      if (dimensionsList.getSelectionIndex() < 0)       return;
      TableItem item=dimensionsList.table.getSelection()[0];
      String name=item.getText(1);
      if (editModel(dimsGroup.getShell(),starDomain,defaultLocale,name)) {
        refreshDimensionsList(starDomain,dimensionsList);
      }
    }
  }
);
  refreshDimensionsList(starDomain,dimensionsList);
  FormData fdDimensionsList=new FormData();
  fdDimensionsList.top=new FormAttachment(lastControl,margin);
  fdDimensionsList.bottom=new FormAttachment(lastControl,250);
  fdDimensionsList.left=new FormAttachment(middle,margin);
  fdDimensionsList.right=new FormAttachment(100,0);
  dimensionsList.setLayoutData(fdDimensionsList);
  lastControl=dimensionsList;
  Button newDimensionButton=new Button(dimsGroup,SWT.PUSH);
  newDimensionButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.NewSharedDimension"));
  FormData fdNewModelButton=new FormData();
  fdNewModelButton.top=new FormAttachment(lastControl,margin);
  fdNewModelButton.left=new FormAttachment(middle,margin);
  newDimensionButton.setLayoutData(fdNewModelButton);
  newDimensionButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (newSharedDimension(dimsGroup.getShell(),starDomain)) {
        refreshDimensionsList(starDomain,dimensionsList);
      }
    }
  }
);
  Button editDimensionButton=new Button(dimsGroup,SWT.PUSH);
  editDimensionButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.EditDimension"));
  FormData fdEditModelButton=new FormData();
  fdEditModelButton.top=new FormAttachment(lastControl,margin);
  fdEditModelButton.left=new FormAttachment(newDimensionButton,margin);
  editDimensionButton.setLayoutData(fdEditModelButton);
  editDimensionButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (dimensionsList.getSelectionIndex() < 0)       return;
      TableItem item=dimensionsList.table.getSelection()[0];
      String name=item.getText(1);
      if (editSharedDimension(dimsGroup.getShell(),starDomain,defaultLocale,name)) {
        refreshDimensionsList(starDomain,dimensionsList);
      }
    }
  }
);
  Button delDimensionButton=new Button(dimsGroup,SWT.PUSH);
  delDimensionButton.setText(BaseMessages.getString(PKG,"StarModelerPerspective.Button.DeleteDimension"));
  FormData fdDelDimensionButton=new FormData();
  fdDelDimensionButton.top=new FormAttachment(lastControl,margin);
  fdDelDimensionButton.left=new FormAttachment(editDimensionButton,margin);
  delDimensionButton.setLayoutData(fdDelDimensionButton);
  delDimensionButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      if (dimensionsList.getSelectionIndex() < 0)       return;
      TableItem item=dimensionsList.table.getSelection()[0];
      String name=item.getText(1);
      if (deleteSharedDimension(dimsGroup.getShell(),starDomain,defaultLocale,name)) {
        refreshDimensionsList(starDomain,dimensionsList);
      }
    }
  }
);
  Button testDimensionButton=new Button(dimsGroup,SWT.PUSH);
  testDimensionButton.setText("TEST PUR");
  FormData fdtestDimensionButton=new FormData();
  fdtestDimensionButton.top=new FormAttachment(lastControl,margin);
  fdtestDimensionButton.left=new FormAttachment(delDimensionButton,margin);
  testDimensionButton.setLayoutData(fdtestDimensionButton);
  testDimensionButton.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      testMetaStore();
    }
  }
);
  return dimsGroup;
}
