{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("GetFilesRowsCountDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wFileTab=new CTabItem(wTabFolder,SWT.NONE);
  wFileTab.setText(Messages.getString("GetFilesRowsCountDialog.File.Tab"));
  wFileComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFileComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wFileComp.setLayout(fileLayout);
  wOriginFiles=new Group(wFileComp,SWT.SHADOW_NONE);
  props.setLook(wOriginFiles);
  wOriginFiles.setText(Messages.getString("GetFilesRowsCountDialog.wOriginFiles.Label"));
  FormLayout OriginFilesgroupLayout=new FormLayout();
  OriginFilesgroupLayout.marginWidth=10;
  OriginFilesgroupLayout.marginHeight=10;
  wOriginFiles.setLayout(OriginFilesgroupLayout);
  wlFileField=new Label(wOriginFiles,SWT.RIGHT);
  wlFileField.setText(Messages.getString("GetFilesRowsCountDialog.FileField.Label"));
  props.setLook(wlFileField);
  fdlFileField=new FormData();
  fdlFileField.left=new FormAttachment(0,-margin);
  fdlFileField.top=new FormAttachment(0,margin);
  fdlFileField.right=new FormAttachment(middle,-2 * margin);
  wlFileField.setLayoutData(fdlFileField);
  wFileField=new Button(wOriginFiles,SWT.CHECK);
  props.setLook(wFileField);
  wFileField.setToolTipText(Messages.getString("GetFilesRowsCountDialog.FileField.Tooltip"));
  fdFileField=new FormData();
  fdFileField.left=new FormAttachment(middle,-margin);
  fdFileField.top=new FormAttachment(0,margin);
  wFileField.setLayoutData(fdFileField);
  SelectionAdapter lfilefield=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      ActiveFileField();
      input.setChanged();
    }
  }
;
  wFileField.addSelectionListener(lfilefield);
  wlFilenameField=new Label(wOriginFiles,SWT.RIGHT);
  wlFilenameField.setText(Messages.getString("GetFilesRowsCountDialog.FilenameField.Label"));
  props.setLook(wlFilenameField);
  fdlFilenameField=new FormData();
  fdlFilenameField.left=new FormAttachment(0,-margin);
  fdlFilenameField.top=new FormAttachment(wFileField,margin);
  fdlFilenameField.right=new FormAttachment(middle,-2 * margin);
  wlFilenameField.setLayoutData(fdlFilenameField);
  wFilenameField=new CCombo(wOriginFiles,SWT.BORDER | SWT.READ_ONLY);
  wFilenameField.setEditable(true);
  props.setLook(wFilenameField);
  wFilenameField.addModifyListener(lsMod);
  fdFilenameField=new FormData();
  fdFilenameField.left=new FormAttachment(middle,-margin);
  fdFilenameField.top=new FormAttachment(wFileField,margin);
  fdFilenameField.right=new FormAttachment(100,-margin);
  wFilenameField.setLayoutData(fdFilenameField);
  wFilenameField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setFileField();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdOriginFiles=new FormData();
  fdOriginFiles.left=new FormAttachment(0,margin);
  fdOriginFiles.top=new FormAttachment(wFilenameList,margin);
  fdOriginFiles.right=new FormAttachment(100,-margin);
  wOriginFiles.setLayoutData(fdOriginFiles);
  wlFilename=new Label(wFileComp,SWT.RIGHT);
  wlFilename.setText(Messages.getString("GetFilesRowsCountDialog.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wOriginFiles,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbbFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbFilename);
  wbbFilename.setText(Messages.getString("GetFilesRowsCountDialog.FilenameBrowse.Button"));
  wbbFilename.setToolTipText(Messages.getString("System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wOriginFiles,margin);
  wbbFilename.setLayoutData(fdbFilename);
  wbaFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaFilename);
  wbaFilename.setText(Messages.getString("GetFilesRowsCountDialog.FilenameAdd.Button"));
  wbaFilename.setToolTipText(Messages.getString("GetFilesRowsCountDialog.FilenameAdd.Tooltip"));
  fdbaFilename=new FormData();
  fdbaFilename.right=new FormAttachment(wbbFilename,-margin);
  fdbaFilename.top=new FormAttachment(wOriginFiles,margin);
  wbaFilename.setLayoutData(fdbaFilename);
  wFilename=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.right=new FormAttachment(wbaFilename,-margin);
  fdFilename.top=new FormAttachment(wOriginFiles,margin);
  wFilename.setLayoutData(fdFilename);
  wlFilemask=new Label(wFileComp,SWT.RIGHT);
  wlFilemask.setText(Messages.getString("GetFilesRowsCountDialog.RegExp.Label"));
  props.setLook(wlFilemask);
  fdlFilemask=new FormData();
  fdlFilemask.left=new FormAttachment(0,0);
  fdlFilemask.top=new FormAttachment(wFilename,margin);
  fdlFilemask.right=new FormAttachment(middle,-margin);
  wlFilemask.setLayoutData(fdlFilemask);
  wFilemask=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilemask);
  wFilemask.addModifyListener(lsMod);
  fdFilemask=new FormData();
  fdFilemask.left=new FormAttachment(middle,0);
  fdFilemask.top=new FormAttachment(wFilename,margin);
  fdFilemask.right=new FormAttachment(100,0);
  wFilemask.setLayoutData(fdFilemask);
  wlFilenameList=new Label(wFileComp,SWT.RIGHT);
  wlFilenameList.setText(Messages.getString("GetFilesRowsCountDialog.FilenameList.Label"));
  props.setLook(wlFilenameList);
  fdlFilenameList=new FormData();
  fdlFilenameList.left=new FormAttachment(0,0);
  fdlFilenameList.top=new FormAttachment(wFilemask,margin);
  fdlFilenameList.right=new FormAttachment(middle,-margin);
  wlFilenameList.setLayoutData(fdlFilenameList);
  wbdFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdFilename);
  wbdFilename.setText(Messages.getString("GetFilesRowsCountDialog.FilenameRemove.Button"));
  wbdFilename.setToolTipText(Messages.getString("GetFilesRowsCountDialog.FilenameRemove.Tooltip"));
  fdbdFilename=new FormData();
  fdbdFilename.right=new FormAttachment(100,0);
  fdbdFilename.top=new FormAttachment(wFilemask,40);
  wbdFilename.setLayoutData(fdbdFilename);
  wbeFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeFilename);
  wbeFilename.setText(Messages.getString("GetFilesRowsCountDialog.FilenameEdit.Button"));
  wbeFilename.setToolTipText(Messages.getString("GetFilesRowsCountDialog.FilenameEdit.Tooltip"));
  fdbeFilename=new FormData();
  fdbeFilename.right=new FormAttachment(100,0);
  fdbeFilename.top=new FormAttachment(wbdFilename,margin);
  wbeFilename.setLayoutData(fdbeFilename);
  wbShowFiles=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbShowFiles);
  wbShowFiles.setText(Messages.getString("GetFilesRowsCountDialog.ShowFiles.Button"));
  fdbShowFiles=new FormData();
  fdbShowFiles.left=new FormAttachment(middle,0);
  fdbShowFiles.bottom=new FormAttachment(100,0);
  wbShowFiles.setLayoutData(fdbShowFiles);
  ColumnInfo[] colinfo=new ColumnInfo[2];
  colinfo[0]=new ColumnInfo(Messages.getString("GetFilesRowsCountDialog.Files.Filename.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinfo[1]=new ColumnInfo(Messages.getString("GetFilesRowsCountDialog.Files.Wildcard.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinfo[0].setUsingVariables(true);
  colinfo[1].setUsingVariables(true);
  colinfo[1].setToolTip(Messages.getString("GetFilesRowsCountDialog.Files.Wildcard.Tooltip"));
  wFilenameList=new TableView(transMeta,wFileComp,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfo,2,lsMod,props);
  props.setLook(wFilenameList);
  fdFilenameList=new FormData();
  fdFilenameList.left=new FormAttachment(middle,0);
  fdFilenameList.right=new FormAttachment(wbdFilename,-margin);
  fdFilenameList.top=new FormAttachment(wFilemask,margin);
  fdFilenameList.bottom=new FormAttachment(wbShowFiles,-margin);
  wFilenameList.setLayoutData(fdFilenameList);
  fdFileComp=new FormData();
  fdFileComp.left=new FormAttachment(0,0);
  fdFileComp.top=new FormAttachment(0,0);
  fdFileComp.right=new FormAttachment(100,0);
  fdFileComp.bottom=new FormAttachment(100,0);
  wFileComp.setLayoutData(fdFileComp);
  wFileComp.layout();
  wFileTab.setControl(wFileComp);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(Messages.getString("GetFilesRowsCountDialog.Content.Tab"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wFilesCountFieldGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wFilesCountFieldGroup);
  wFilesCountFieldGroup.setText(Messages.getString("GetFilesRowsCountDialog.Group.CountFilesFieldGroup.Label"));
  FormLayout countfilesfieldgroupLayout=new FormLayout();
  countfilesfieldgroupLayout.marginWidth=10;
  countfilesfieldgroupLayout.marginHeight=10;
  wFilesCountFieldGroup.setLayout(countfilesfieldgroupLayout);
  wlRowsCountField=new Label(wFilesCountFieldGroup,SWT.RIGHT);
  wlRowsCountField.setText(Messages.getString("GetFilesRowsCountDialog.RowsCountField.Label"));
  props.setLook(wlRowsCountField);
  fdlRowsCountField=new FormData();
  fdlRowsCountField.left=new FormAttachment(wInclFilesCount,margin);
  fdlRowsCountField.top=new FormAttachment(0,margin);
  wlRowsCountField.setLayoutData(fdlRowsCountField);
  wRowsCountField=new TextVar(transMeta,wFilesCountFieldGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wRowsCountField);
  wRowsCountField.setToolTipText(Messages.getString("GetFilesRowsCountDialog.RowsCountField.Tooltip"));
  wRowsCountField.addModifyListener(lsMod);
  fdRowsCountField=new FormData();
  fdRowsCountField.left=new FormAttachment(wlRowsCountField,margin);
  fdRowsCountField.top=new FormAttachment(0,margin);
  fdRowsCountField.right=new FormAttachment(100,0);
  wRowsCountField.setLayoutData(fdRowsCountField);
  fdFilesCountFieldGroup=new FormData();
  fdFilesCountFieldGroup.left=new FormAttachment(0,margin);
  fdFilesCountFieldGroup.top=new FormAttachment(0,margin);
  fdFilesCountFieldGroup.right=new FormAttachment(100,-margin);
  wFilesCountFieldGroup.setLayoutData(fdFilesCountFieldGroup);
  wRowSeparatorGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wRowSeparatorGroup);
  wRowSeparatorGroup.setText(Messages.getString("GetFilesRowsCountDialog.Group.RowSeparator.Label"));
  FormLayout rowseparatorgroupLayout=new FormLayout();
  rowseparatorgroupLayout.marginWidth=10;
  rowseparatorgroupLayout.marginHeight=10;
  wRowSeparatorGroup.setLayout(rowseparatorgroupLayout);
  wlRowSeparatorFormat=new Label(wRowSeparatorGroup,SWT.RIGHT);
  wlRowSeparatorFormat.setText(Messages.getString("GetFilesRowsCountDialog.RowSeparatorFormat.Label"));
  props.setLook(wlRowSeparatorFormat);
  fdlRowSeparatorFormat=new FormData();
  fdlRowSeparatorFormat.left=new FormAttachment(0,0);
  fdlRowSeparatorFormat.top=new FormAttachment(wFilesCountFieldGroup,margin);
  fdlRowSeparatorFormat.right=new FormAttachment(middle,-margin);
  wlRowSeparatorFormat.setLayoutData(fdlRowSeparatorFormat);
  wRowSeparatorFormat=new CCombo(wRowSeparatorGroup,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wRowSeparatorFormat);
  wRowSeparatorFormat.add(Messages.getString("GetFilesRowsCountDialog.RowSeparatorFormat.CR.Label"));
  wRowSeparatorFormat.add(Messages.getString("GetFilesRowsCountDialog.RowSeparatorFormat.LF.Label"));
  wRowSeparatorFormat.add(Messages.getString("GetFilesRowsCountDialog.RowSeparatorFormat.TAB.Label"));
  wRowSeparatorFormat.add(Messages.getString("GetFilesRowsCountDialog.RowSeparatorFormat.CUSTOM.Label"));
  wRowSeparatorFormat.select(0);
  wRowSeparatorFormat.addModifyListener(lsMod);
  fdRowSeparatorFormat=new FormData();
  fdRowSeparatorFormat.left=new FormAttachment(middle,0);
  fdRowSeparatorFormat.top=new FormAttachment(wFilesCountFieldGroup,margin);
  fdRowSeparatorFormat.right=new FormAttachment(100,0);
  wRowSeparatorFormat.setLayoutData(fdRowSeparatorFormat);
  wRowSeparatorFormat.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ActiveRowSeparator();
    }
  }
);
  wlRowSeparator=new Label(wRowSeparatorGroup,SWT.RIGHT);
  wlRowSeparator.setText(Messages.getString("GetFilesRowsCountDialog.RowSeparator.Label"));
  props.setLook(wlRowSeparator);
  fdlRowSeparator=new FormData();
  fdlRowSeparator.left=new FormAttachment(wInclFilesCount,margin);
  fdlRowSeparator.top=new FormAttachment(wRowSeparatorFormat,margin);
  wlRowSeparator.setLayoutData(fdlRowSeparator);
  wRowSeparator=new TextVar(transMeta,wRowSeparatorGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wRowSeparator);
  wRowSeparator.setToolTipText(Messages.getString("GetFilesRowsCountDialog.RowSeparator.Tooltip"));
  wRowSeparator.addModifyListener(lsMod);
  fdRowSeparator=new FormData();
  fdRowSeparator.left=new FormAttachment(wlRowSeparator,margin);
  fdRowSeparator.top=new FormAttachment(wRowSeparatorFormat,margin);
  fdRowSeparator.right=new FormAttachment(100,0);
  wRowSeparator.setLayoutData(fdRowSeparator);
  fdRowSeparatorGroup=new FormData();
  fdRowSeparatorGroup.left=new FormAttachment(0,margin);
  fdRowSeparatorGroup.top=new FormAttachment(wFilesCountFieldGroup,margin);
  fdRowSeparatorGroup.right=new FormAttachment(100,-margin);
  wRowSeparatorGroup.setLayoutData(fdRowSeparatorGroup);
  wAdditionalGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wAdditionalGroup);
  wAdditionalGroup.setText(Messages.getString("GetFilesRowsCountDialog.Group.AdditionalGroup.Label"));
  FormLayout additionalgroupLayout=new FormLayout();
  additionalgroupLayout.marginWidth=10;
  additionalgroupLayout.marginHeight=10;
  wAdditionalGroup.setLayout(additionalgroupLayout);
  wlInclFilesCount=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclFilesCount.setText(Messages.getString("GetFilesRowsCountDialog.InclCountFiles.Label"));
  props.setLook(wlInclFilesCount);
  fdlInclFilesCount=new FormData();
  fdlInclFilesCount.left=new FormAttachment(0,0);
  fdlInclFilesCount.top=new FormAttachment(wRowSeparatorGroup,margin);
  fdlInclFilesCount.right=new FormAttachment(middle,-margin);
  wlInclFilesCount.setLayoutData(fdlInclFilesCount);
  wInclFilesCount=new Button(wAdditionalGroup,SWT.CHECK);
  props.setLook(wInclFilesCount);
  wInclFilesCount.setToolTipText(Messages.getString("GetFilesRowsCountDialog.InclCountFiles.Tooltip"));
  fdFilesCount=new FormData();
  fdFilesCount.left=new FormAttachment(middle,0);
  fdFilesCount.top=new FormAttachment(wRowSeparatorGroup,margin);
  wInclFilesCount.setLayoutData(fdFilesCount);
  wlInclFilesCountField=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclFilesCountField.setText(Messages.getString("GetFilesRowsCountDialog.InclCountFilesField.Label"));
  props.setLook(wlInclFilesCountField);
  fdlInclFilesCountField=new FormData();
  fdlInclFilesCountField.left=new FormAttachment(wInclFilesCount,margin);
  fdlInclFilesCountField.top=new FormAttachment(wRowSeparatorGroup,margin);
  wlInclFilesCountField.setLayoutData(fdlInclFilesCountField);
  wInclFilesCountField=new TextVar(transMeta,wAdditionalGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclFilesCountField);
  wInclFilesCountField.addModifyListener(lsMod);
  fdInclFilesCountField=new FormData();
  fdInclFilesCountField.left=new FormAttachment(wlInclFilesCountField,margin);
  fdInclFilesCountField.top=new FormAttachment(wRowSeparatorGroup,margin);
  fdInclFilesCountField.right=new FormAttachment(100,0);
  wInclFilesCountField.setLayoutData(fdInclFilesCountField);
  fdAdditionalGroup=new FormData();
  fdAdditionalGroup.left=new FormAttachment(0,margin);
  fdAdditionalGroup.top=new FormAttachment(wRowSeparatorGroup,margin);
  fdAdditionalGroup.right=new FormAttachment(100,-margin);
  wAdditionalGroup.setLayoutData(fdAdditionalGroup);
  wAddFileResult=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wAddFileResult);
  wAddFileResult.setText(Messages.getString("GetFilesRowsCountDialog.wAddFileResult.Label"));
  FormLayout AddFileResultgroupLayout=new FormLayout();
  AddFileResultgroupLayout.marginWidth=10;
  AddFileResultgroupLayout.marginHeight=10;
  wAddFileResult.setLayout(AddFileResultgroupLayout);
  wlAddResult=new Label(wAddFileResult,SWT.RIGHT);
  wlAddResult.setText(Messages.getString("GetFilesRowsCountDialog.AddResult.Label"));
  props.setLook(wlAddResult);
  fdlAddResult=new FormData();
  fdlAddResult.left=new FormAttachment(0,0);
  fdlAddResult.top=new FormAttachment(wAdditionalGroup,margin);
  fdlAddResult.right=new FormAttachment(middle,-margin);
  wlAddResult.setLayoutData(fdlAddResult);
  wAddResult=new Button(wAddFileResult,SWT.CHECK);
  props.setLook(wAddResult);
  wAddResult.setToolTipText(Messages.getString("GetFilesRowsCountDialog.AddResult.Tooltip"));
  fdAddResult=new FormData();
  fdAddResult.left=new FormAttachment(middle,0);
  fdAddResult.top=new FormAttachment(wAdditionalGroup,margin);
  wAddResult.setLayoutData(fdAddResult);
  fdAddFileResult=new FormData();
  fdAddFileResult.left=new FormAttachment(0,margin);
  fdAddFileResult.top=new FormAttachment(wAdditionalGroup,margin);
  fdAddFileResult.right=new FormAttachment(100,-margin);
  wAddFileResult.setLayoutData(fdAddFileResult);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(Messages.getString("GetFilesRowsCountDialog.Button.PreviewRows"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wPreview.addListener(SWT.Selection,lsPreview);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wInclFilesCountField.addSelectionListener(lsDef);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFilenameList.add(new String[]{wFilename.getText(),wFilemask.getText()});
      wFilename.setText("");
      wFilemask.setText("");
      wFilenameList.removeEmptyRows();
      wFilenameList.setRowNums();
      wFilenameList.optWidth(true);
    }
  }
;
  wbaFilename.addSelectionListener(selA);
  wFilename.addSelectionListener(selA);
  wbdFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx[]=wFilenameList.getSelectionIndices();
      wFilenameList.remove(idx);
      wFilenameList.removeEmptyRows();
      wFilenameList.setRowNums();
    }
  }
);
  wbeFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFilenameList.getSelectionIndex();
      if (idx >= 0) {
        String string[]=wFilenameList.getItem(idx);
        wFilename.setText(string[0]);
        wFilemask.setText(string[1]);
        wFilenameList.remove(idx);
      }
      wFilenameList.removeEmptyRows();
      wFilenameList.setRowNums();
    }
  }
);
  wbShowFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      try {
        GetFilesRowsCountMeta tfii=new GetFilesRowsCountMeta();
        getInfo(tfii);
        FileInputList fileInputList=tfii.getFiles(transMeta);
        String files[]=fileInputList.getFileStrings();
        if (files.length > 0) {
          EnterSelectionDialog esd=new EnterSelectionDialog(shell,files,Messages.getString("GetFilesRowsCountDialog.FilesReadSelection.DialogTitle"),Messages.getString("GetFilesRowsCountDialog.FilesReadSelection.DialogMessage"));
          esd.setViewOnly();
          esd.open();
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setMessage(Messages.getString("GetFilesRowsCountDialog.NoFileFound.DialogMessage"));
          mb.setText(Messages.getString("System.Dialog.Error.Title"));
          mb.open();
        }
      }
 catch (      KettleException ex) {
        new ErrorDialog(shell,Messages.getString("GetFilesRowsCountDialog.ErrorParsingData.DialogTitle"),Messages.getString("GetFilesRowsCountDialog.ErrorParsingData.DialogMessage"),ex);
      }
    }
  }
);
  wInclFilesCount.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setIncludeRownum();
    }
  }
);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText("");
    }
  }
);
  wbbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      if (wFilemask.getText() != null && wFilemask.getText().length() > 0) {
        DirectoryDialog dialog=new DirectoryDialog(shell,SWT.OPEN);
        if (wFilename.getText() != null) {
          String fpath="";
          dialog.setFilterPath(fpath);
        }
        if (dialog.open() != null) {
          String str=dialog.getFilterPath();
          wFilename.setText(str);
        }
      }
 else {
        FileDialog dialog=new FileDialog(shell,SWT.OPEN);
        dialog.setFilterExtensions(new String[]{"*"});
        if (wFilename.getText() != null) {
          String fname="";
          dialog.setFileName(fname);
        }
        dialog.setFilterNames(new String[]{Messages.getString("System.FileType.AllFiles")});
        if (dialog.open() != null) {
          String str=dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName();
          wFilename.setText(str);
        }
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData(input);
  ActiveRowSeparator();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
