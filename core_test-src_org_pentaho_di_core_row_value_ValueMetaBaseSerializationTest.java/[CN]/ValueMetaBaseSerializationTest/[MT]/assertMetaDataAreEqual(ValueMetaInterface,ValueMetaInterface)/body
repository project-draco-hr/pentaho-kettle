{
  assertEquals("storageType",expected.getStorageType(),actual.getStorageType());
  if (expected.getIndex() == null) {
    assertNull("index",actual.getIndex());
  }
 else {
    assertEquals("index.length",expected.getIndex().length,actual.getIndex().length);
    for (int i=0; i < expected.getIndex().length; i++) {
      assertEquals("index[" + i + "]",expected.getIndex()[i],actual.getIndex()[i]);
    }
  }
  if (expected.getStorageMetadata() == null) {
    assertNull("storageMetadata",actual.getStorageMetadata());
  }
 else {
    assertMetaDataAreEqual(expected.getStorageMetadata(),actual.getStorageMetadata());
  }
  assertEquals("name",expected.getName(),actual.getName());
  assertEquals("length",expected.getLength(),actual.getLength());
  assertEquals("origin",expected.getOrigin(),actual.getOrigin());
  assertEquals("comments",expected.getComments(),actual.getComments());
  assertEquals("conversionMask",expected.getConversionMask(),actual.getConversionMask());
  assertEquals("decimalSymbol",expected.getDecimalSymbol(),actual.getDecimalSymbol());
  assertEquals("groupingSymbol",expected.getGroupingSymbol(),actual.getGroupingSymbol());
  assertEquals("currencySymbol",expected.getCurrencySymbol(),actual.getCurrencySymbol());
  assertEquals("trimType",expected.getTrimType(),actual.getTrimType());
  assertEquals("caseInsensitive",expected.isCaseInsensitive(),actual.isCaseInsensitive());
  assertEquals("sortedDescending",expected.isSortedDescending(),actual.isSortedDescending());
  assertEquals("outputPaddingEnabled",expected.isOutputPaddingEnabled(),actual.isOutputPaddingEnabled());
  assertEquals("dateFormatLenient",expected.isDateFormatLenient(),actual.isDateFormatLenient());
  assertEquals("dateFormatLocale",expected.getDateFormatLocale(),actual.getDateFormatLocale());
  assertEquals("dateFormatTimeZone",expected.getDateFormatTimeZone(),actual.getDateFormatTimeZone());
  assertEquals("lenientStringToNumber",expected.isLenientStringToNumber(),actual.isLenientStringToNumber());
}
