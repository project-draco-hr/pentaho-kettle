{
  shell.getDisplay().asyncExec(new Runnable(){
    public void run(){
      for (int i=0; i < buffer.size(); i++) {
        TableItem item;
        if (i == 0)         item=wFields.table.getItem(i);
 else         item=new TableItem(wFields.table,SWT.NONE);
        String strNr;
        try {
          strNr=wFields.getNumberColumn().getValueMeta().getString(new Long(i + 1));
        }
 catch (        Exception e) {
          strNr=Integer.toString(i + 1);
        }
        item.setText(0,strNr);
        Object[] row=(Object[])buffer.get(i);
        for (int c=0; c < rowMeta.size(); c++) {
          ValueMetaInterface v=rowMeta.getValueMeta(c);
          String show;
          try {
            show=v.getString(row[c]);
          }
 catch (          KettleValueException e) {
            LogWriter.getInstance().logError(toString(),Const.getStackTracker(e));
            show=null;
          }
catch (          ArrayIndexOutOfBoundsException e) {
            LogWriter.getInstance().logError(toString(),Const.getStackTracker(e));
            show=null;
          }
          if (show != null) {
            item.setText(c + 1,show);
          }
        }
      }
      if (!wFields.isDisposed())       wFields.optWidth(true,200);
    }
  }
);
}
