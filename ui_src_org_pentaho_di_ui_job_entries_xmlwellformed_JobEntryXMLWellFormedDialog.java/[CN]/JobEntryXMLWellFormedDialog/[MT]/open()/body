{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Tab.General.Label"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wSettings=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wSettings);
  wSettings.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Settings.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wSettings.setLayout(groupLayout);
  wlIncludeSubfolders=new Label(wSettings,SWT.RIGHT);
  wlIncludeSubfolders.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.IncludeSubfolders.Label"));
  props.setLook(wlIncludeSubfolders);
  fdlIncludeSubfolders=new FormData();
  fdlIncludeSubfolders.left=new FormAttachment(0,0);
  fdlIncludeSubfolders.top=new FormAttachment(wName,margin);
  fdlIncludeSubfolders.right=new FormAttachment(middle,-margin);
  wlIncludeSubfolders.setLayoutData(fdlIncludeSubfolders);
  wIncludeSubfolders=new Button(wSettings,SWT.CHECK);
  props.setLook(wIncludeSubfolders);
  wIncludeSubfolders.setToolTipText(BaseMessages.getString(PKG,"JobXMLWellFormed.IncludeSubfolders.Tooltip"));
  fdIncludeSubfolders=new FormData();
  fdIncludeSubfolders.left=new FormAttachment(middle,0);
  fdIncludeSubfolders.top=new FormAttachment(wName,margin);
  fdIncludeSubfolders.right=new FormAttachment(100,0);
  wIncludeSubfolders.setLayoutData(fdIncludeSubfolders);
  wIncludeSubfolders.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlPrevious=new Label(wSettings,SWT.RIGHT);
  wlPrevious.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Previous.Label"));
  props.setLook(wlPrevious);
  fdlPrevious=new FormData();
  fdlPrevious.left=new FormAttachment(0,0);
  fdlPrevious.top=new FormAttachment(wIncludeSubfolders,margin);
  fdlPrevious.right=new FormAttachment(middle,-margin);
  wlPrevious.setLayoutData(fdlPrevious);
  wPrevious=new Button(wSettings,SWT.CHECK);
  props.setLook(wPrevious);
  wPrevious.setSelection(jobEntry.isArgFromPrevious());
  wPrevious.setToolTipText(BaseMessages.getString(PKG,"JobXMLWellFormed.Previous.Tooltip"));
  fdPrevious=new FormData();
  fdPrevious.left=new FormAttachment(middle,0);
  fdPrevious.top=new FormAttachment(wIncludeSubfolders,margin);
  fdPrevious.right=new FormAttachment(100,0);
  wPrevious.setLayoutData(fdPrevious);
  wPrevious.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      RefreshArgFromPrevious();
    }
  }
);
  fdSettings=new FormData();
  fdSettings.left=new FormAttachment(0,margin);
  fdSettings.top=new FormAttachment(wName,margin);
  fdSettings.right=new FormAttachment(100,-margin);
  wSettings.setLayoutData(fdSettings);
  wlSourceFileFolder=new Label(wGeneralComp,SWT.RIGHT);
  wlSourceFileFolder.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.SourceFileFolder.Label"));
  props.setLook(wlSourceFileFolder);
  fdlSourceFileFolder=new FormData();
  fdlSourceFileFolder.left=new FormAttachment(0,0);
  fdlSourceFileFolder.top=new FormAttachment(wSettings,2 * margin);
  fdlSourceFileFolder.right=new FormAttachment(middle,-margin);
  wlSourceFileFolder.setLayoutData(fdlSourceFileFolder);
  wbSourceDirectory=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSourceDirectory);
  wbSourceDirectory.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.BrowseFolders.Label"));
  fdbSourceDirectory=new FormData();
  fdbSourceDirectory.right=new FormAttachment(100,0);
  fdbSourceDirectory.top=new FormAttachment(wSettings,margin);
  wbSourceDirectory.setLayoutData(fdbSourceDirectory);
  wbSourceDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wSourceFileFolder.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wSourceFileFolder.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wSourceFileFolder.setText(dir);
      }
    }
  }
);
  wbSourceFileFolder=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSourceFileFolder);
  wbSourceFileFolder.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.BrowseFiles.Label"));
  fdbSourceFileFolder=new FormData();
  fdbSourceFileFolder.right=new FormAttachment(wbSourceDirectory,-margin);
  fdbSourceFileFolder.top=new FormAttachment(wSettings,margin);
  wbSourceFileFolder.setLayoutData(fdbSourceFileFolder);
  wbaSourceFileFolder=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaSourceFileFolder);
  wbaSourceFileFolder.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.FilenameAdd.Button"));
  fdbaSourceFileFolder=new FormData();
  fdbaSourceFileFolder.right=new FormAttachment(wbSourceFileFolder,-margin);
  fdbaSourceFileFolder.top=new FormAttachment(wSettings,margin);
  wbaSourceFileFolder.setLayoutData(fdbaSourceFileFolder);
  wSourceFileFolder=new TextVar(jobMeta,wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wSourceFileFolder.setToolTipText(BaseMessages.getString(PKG,"JobXMLWellFormed.SourceFileFolder.Tooltip"));
  props.setLook(wSourceFileFolder);
  wSourceFileFolder.addModifyListener(lsMod);
  fdSourceFileFolder=new FormData();
  fdSourceFileFolder.left=new FormAttachment(middle,0);
  fdSourceFileFolder.top=new FormAttachment(wSettings,2 * margin);
  fdSourceFileFolder.right=new FormAttachment(wbSourceFileFolder,-55);
  wSourceFileFolder.setLayoutData(fdSourceFileFolder);
  wSourceFileFolder.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wSourceFileFolder.setToolTipText(jobMeta.environmentSubstitute(wSourceFileFolder.getText()));
    }
  }
);
  wbSourceFileFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.xml;*.XML","*"});
      if (wSourceFileFolder.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wSourceFileFolder.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wSourceFileFolder.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wbdSourceFileFolder=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdSourceFileFolder);
  wbdSourceFileFolder.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.FilenameDelete.Button"));
  wbdSourceFileFolder.setToolTipText(BaseMessages.getString(PKG,"JobXMLWellFormed.FilenameDelete.Tooltip"));
  fdbdSourceFileFolder=new FormData();
  fdbdSourceFileFolder.right=new FormAttachment(100,0);
  fdbdSourceFileFolder.top=new FormAttachment(wSourceFileFolder,40);
  wbdSourceFileFolder.setLayoutData(fdbdSourceFileFolder);
  wbeSourceFileFolder=new Button(wGeneralComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeSourceFileFolder);
  wbeSourceFileFolder.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.FilenameEdit.Button"));
  wbeSourceFileFolder.setToolTipText(BaseMessages.getString(PKG,"JobXMLWellFormed.FilenameEdit.Tooltip"));
  fdbeSourceFileFolder=new FormData();
  fdbeSourceFileFolder.right=new FormAttachment(100,0);
  fdbeSourceFileFolder.left=new FormAttachment(wbdSourceFileFolder,0,SWT.LEFT);
  fdbeSourceFileFolder.top=new FormAttachment(wbdSourceFileFolder,margin);
  wbeSourceFileFolder.setLayoutData(fdbeSourceFileFolder);
  wlWildcard=new Label(wGeneralComp,SWT.RIGHT);
  wlWildcard.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wSourceFileFolder,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,wGeneralComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wWildcard.setToolTipText(BaseMessages.getString(PKG,"JobXMLWellFormed.Wildcard.Tooltip"));
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wSourceFileFolder,margin);
  fdWildcard.right=new FormAttachment(wbSourceFileFolder,-55);
  wWildcard.setLayoutData(fdWildcard);
  wlFields=new Label(wGeneralComp,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wWildcard,margin);
  wlFields.setLayoutData(fdlFields);
  int rows=jobEntry.getSourceFileFolders() == null ? 1 : (jobEntry.getSourceFileFolders().length == 0 ? 0 : jobEntry.getSourceFileFolders().length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"JobXMLWellFormed.Fields.SourceFileFolder.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"JobXMLWellFormed.Fields.Wildcard.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(BaseMessages.getString(PKG,"JobXMLWellFormed.Fields.SourceFileFolder.Tooltip"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(BaseMessages.getString(PKG,"JobXMLWellFormed.Fields.Wildcard.Tooltip"));
  wFields=new TableView(jobMeta,wGeneralComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,-75);
  fdFields.bottom=new FormAttachment(100,-margin);
  wFields.setLayoutData(fdFields);
  RefreshArgFromPrevious();
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFields.add(new String[]{wSourceFileFolder.getText(),wWildcard.getText()});
      wSourceFileFolder.setText("");
      wWildcard.setText("");
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
;
  wbaSourceFileFolder.addSelectionListener(selA);
  wSourceFileFolder.addSelectionListener(selA);
  wbdSourceFileFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int[] idx=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wbeSourceFileFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFields.getSelectionIndex();
      if (idx >= 0) {
        String[] string=wFields.getItem(idx);
        wSourceFileFolder.setText(string[0]);
        wWildcard.setText(string[1]);
        wFields.remove(idx);
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  wAdvancedTab=new CTabItem(wTabFolder,SWT.NONE);
  wAdvancedTab.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.Tab.Advanced.Label"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  wAdvancedComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wAdvancedComp);
  wAdvancedComp.setLayout(contentLayout);
  wSuccessOn=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wSuccessOn);
  wSuccessOn.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.SuccessOn.Group.Label"));
  FormLayout successongroupLayout=new FormLayout();
  successongroupLayout.marginWidth=10;
  successongroupLayout.marginHeight=10;
  wSuccessOn.setLayout(successongroupLayout);
  wlSuccessCondition=new Label(wSuccessOn,SWT.RIGHT);
  wlSuccessCondition.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.SuccessCondition.Label"));
  props.setLook(wlSuccessCondition);
  fdlSuccessCondition=new FormData();
  fdlSuccessCondition.left=new FormAttachment(0,0);
  fdlSuccessCondition.right=new FormAttachment(middle,0);
  fdlSuccessCondition.top=new FormAttachment(0,margin);
  wlSuccessCondition.setLayoutData(fdlSuccessCondition);
  wSuccessCondition=new CCombo(wSuccessOn,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobXMLWellFormed.SuccessWhenAllWorksFine.Label"));
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobXMLWellFormed.SuccessWhenAtLeat.Label"));
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobXMLWellFormed.SuccessWhenBadFormedLessThan.Label"));
  wSuccessCondition.select(0);
  props.setLook(wSuccessCondition);
  fdSuccessCondition=new FormData();
  fdSuccessCondition.left=new FormAttachment(middle,0);
  fdSuccessCondition.top=new FormAttachment(0,margin);
  fdSuccessCondition.right=new FormAttachment(100,0);
  wSuccessCondition.setLayoutData(fdSuccessCondition);
  wSuccessCondition.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeSuccessCondition();
    }
  }
);
  wlNrErrorsLessThan=new Label(wSuccessOn,SWT.RIGHT);
  wlNrErrorsLessThan.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.NrBadFormedLessThan.Label"));
  props.setLook(wlNrErrorsLessThan);
  fdlNrErrorsLessThan=new FormData();
  fdlNrErrorsLessThan.left=new FormAttachment(0,0);
  fdlNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdlNrErrorsLessThan.right=new FormAttachment(middle,-margin);
  wlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);
  wNrErrorsLessThan=new TextVar(jobMeta,wSuccessOn,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobXMLWellFormed.NrBadFormedLessThan.Tooltip"));
  props.setLook(wNrErrorsLessThan);
  wNrErrorsLessThan.addModifyListener(lsMod);
  fdNrErrorsLessThan=new FormData();
  fdNrErrorsLessThan.left=new FormAttachment(middle,0);
  fdNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdNrErrorsLessThan.right=new FormAttachment(100,-margin);
  wNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);
  fdSuccessOn=new FormData();
  fdSuccessOn.left=new FormAttachment(0,margin);
  fdSuccessOn.top=new FormAttachment(0,margin);
  fdSuccessOn.right=new FormAttachment(100,-margin);
  wSuccessOn.setLayoutData(fdSuccessOn);
  wFileResult=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wFileResult);
  wFileResult.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.FileResult.Group.Label"));
  FormLayout fileresultgroupLayout=new FormLayout();
  fileresultgroupLayout.marginWidth=10;
  fileresultgroupLayout.marginHeight=10;
  wFileResult.setLayout(fileresultgroupLayout);
  wlAddFilenameToResult=new Label(wFileResult,SWT.RIGHT);
  wlAddFilenameToResult.setText(BaseMessages.getString(PKG,"JobXMLWellFormed.AddFilenameToResult.Label"));
  props.setLook(wlAddFilenameToResult);
  fdlAddFilenameToResult=new FormData();
  fdlAddFilenameToResult.left=new FormAttachment(0,0);
  fdlAddFilenameToResult.right=new FormAttachment(middle,0);
  fdlAddFilenameToResult.top=new FormAttachment(0,margin);
  wlAddFilenameToResult.setLayoutData(fdlAddFilenameToResult);
  wAddFilenameToResult=new CCombo(wFileResult,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wAddFilenameToResult.add(BaseMessages.getString(PKG,"JobXMLWellFormed.AddAllFilenamesToResult.Label"));
  wAddFilenameToResult.add(BaseMessages.getString(PKG,"JobXMLWellFormed.AddOnlyWellFormedFilenames.Label"));
  wAddFilenameToResult.add(BaseMessages.getString(PKG,"JobXMLWellFormed.AddOnlyBadFormedFilenames.Label"));
  wAddFilenameToResult.select(0);
  props.setLook(wAddFilenameToResult);
  fdAddFilenameToResult=new FormData();
  fdAddFilenameToResult.left=new FormAttachment(middle,0);
  fdAddFilenameToResult.top=new FormAttachment(0,margin);
  fdAddFilenameToResult.right=new FormAttachment(100,0);
  wAddFilenameToResult.setLayoutData(fdAddFilenameToResult);
  wAddFilenameToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  fdFileResult=new FormData();
  fdFileResult.left=new FormAttachment(0,margin);
  fdFileResult.top=new FormAttachment(wSuccessOn,margin);
  fdFileResult.right=new FormAttachment(100,-margin);
  wFileResult.setLayoutData(fdFileResult);
  fdAdvancedComp=new FormData();
  fdAdvancedComp.left=new FormAttachment(0,0);
  fdAdvancedComp.top=new FormAttachment(0,0);
  fdAdvancedComp.right=new FormAttachment(100,0);
  fdAdvancedComp.bottom=new FormAttachment(100,0);
  wAdvancedComp.setLayoutData(wAdvancedComp);
  wAdvancedComp.layout();
  wAdvancedTab.setControl(wAdvancedComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wName,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wSourceFileFolder.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  activeSuccessCondition();
  activeSuccessCondition();
  wTabFolder.setSelection(0);
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
