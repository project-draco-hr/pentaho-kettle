{
  try {
    Collection<UIDatabaseConnection> connections=connectionsTable.getSelectedItems();
    if (connections != null && !connections.isEmpty()) {
      for (      Object obj : connections) {
        if (obj != null && obj instanceof UIDatabaseConnection) {
          UIDatabaseConnection connection=(UIDatabaseConnection)obj;
          DatabaseMeta databaseMeta=connection.getDatabaseMeta();
          ObjectId idDatabase=repository.getDatabaseID(databaseMeta.getName());
          if (idDatabase == null) {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Connection.Delete.DoesNotExists.Message",databaseMeta.getName()));
            mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Connection.Delete.Title"));
            mb.open();
          }
 else {
            repository.deleteDatabaseMeta(databaseMeta.getName());
          }
        }
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
      mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Connection.Edit.NoItemSelected.Message"));
      mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Connection.Delete.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Connection.Create.UnexpectedError.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Connection.Create.UnexpectedError.Message"),e);
  }
 finally {
    refreshConnectionList();
  }
}
