{
  StringBuffer xml=new StringBuffer();
  xml.append(XMLHandler.openTag(XML_DATA_TAG));
  if (object != null) {
    try {
switch (storageType) {
case STORAGE_TYPE_NORMAL:
switch (getType()) {
case TYPE_STRING:
          xml.append((String)object);
        break;
case TYPE_NUMBER:
      xml.append((Double)object);
    break;
case TYPE_INTEGER:
  xml.append((Long)object);
break;
case TYPE_DATE:
xml.append(XMLHandler.date2string((Date)object));
break;
case TYPE_BIGNUMBER:
xml.append((BigDecimal)object);
break;
case TYPE_BOOLEAN:
xml.append((Boolean)object);
break;
case TYPE_BINARY:
xml.append(XMLHandler.addTagValue("binary-value",(byte[])object));
break;
default :
throw new IOException(toString() + " : Unable to serialize data type to XML " + getType());
}
break;
case STORAGE_TYPE_BINARY_STRING:
xml.append(XMLHandler.addTagValue("binary-string",(byte[])object));
break;
case STORAGE_TYPE_INDEXED:
xml.append(XMLHandler.addTagValue("index-value",(Integer)object));
break;
default :
throw new IOException(toString() + " : Unknown storage type " + getStorageType());
}
}
 catch (ClassCastException e) {
throw new RuntimeException(toString() + " : There was a data type error: the data type of " + object.getClass().getName()+ " object ["+ object+ "] does not correspond to value meta ["+ toStringMeta()+ "]");
}
}
xml.append(XMLHandler.closeTag(XML_DATA_TAG));
return xml.toString();
}
