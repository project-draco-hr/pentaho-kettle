{
  connection=DriverManager.getConnection("jdbc:h2:mem:PERSON;");
  connection.setAutoCommit(false);
  PreparedStatement stmt=connection.prepareStatement("CREATE TABLE PERSON (ID INT PRIMARY KEY, personName VARCHAR(64) )");
  stmt.execute();
  stmt.close();
  stmt=connection.prepareStatement("INSERT INTO PERSON (ID, personName) VALUES (?, ?)");
  for (int i=0; i < ROW_FOR_UPDATE + ROW_FOR_DELETE; i++) {
    stmt.setInt(1,i);
    stmt.setString(2,"personName" + i);
    stmt.addBatch();
  }
  stmt.executeBatch();
  stmt.close();
  connection.commit();
  PluginRegistry pluginRegistry=PluginRegistry.getInstance();
  transMeta=new TransMeta();
  transMeta.setName("SynchronizeAfterMerge");
  InjectorMeta injectorMeta=new InjectorMeta();
  String injectorPid=pluginRegistry.getPluginId(StepPluginType.class,injectorMeta);
  StepMeta injectorStep=new StepMeta(injectorPid,injectorStepname,injectorMeta);
  transMeta.addStep(injectorStep);
  DatabaseMeta dbMeta=spy(new DatabaseMeta());
  dbMeta.setDatabaseType("H2");
  when(dbMeta.getURL()).thenReturn("jdbc:h2:mem:PERSON;");
  when(dbMeta.supportsErrorHandlingOnBatchUpdates()).thenReturn(false);
  SynchronizeAfterMergeMeta synchronizeAfterMergeMeta=new SynchronizeAfterMergeMeta();
  synchronizeAfterMergeMeta.setCommitSize(COMMIT_SIZE);
  synchronizeAfterMergeMeta.setDatabaseMeta(dbMeta);
  synchronizeAfterMergeMeta.setKeyCondition(new String[]{"="});
  synchronizeAfterMergeMeta.setKeyLookup(new String[]{"ID"});
  synchronizeAfterMergeMeta.setKeyStream(new String[]{"personName"});
  synchronizeAfterMergeMeta.setKeyStream2(new String[]{null});
  synchronizeAfterMergeMeta.setUpdate(new Boolean[]{Boolean.TRUE});
  synchronizeAfterMergeMeta.setOperationOrderField("flag");
  synchronizeAfterMergeMeta.setOrderDelete(DELETE_FLAG);
  synchronizeAfterMergeMeta.setOrderInsert(INSERT_FLAG);
  synchronizeAfterMergeMeta.setOrderUpdate(UPDATE_FLAG);
  synchronizeAfterMergeMeta.setPerformLookup(true);
  synchronizeAfterMergeMeta.setTableName("PERSON");
  synchronizeAfterMergeMeta.settablenameInField(false);
  synchronizeAfterMergeMeta.settablenameField(null);
  synchronizeAfterMergeMeta.setUseBatchUpdate(true);
  synchronizeAfterMergeMeta.setUpdateLookup(new String[]{"ID"});
  synchronizeAfterMergeMeta.setUpdateStream(new String[]{"personName"});
  String synchronizeAfterMergePid=pluginRegistry.getPluginId(StepPluginType.class,synchronizeAfterMergeStepname);
  StepMeta synchronizeAfterMerge=new StepMeta(synchronizeAfterMergePid,synchronizeAfterMergeStepname,synchronizeAfterMergeMeta);
  transMeta.addStep(synchronizeAfterMerge);
  String dummyResultStepName="dummyResultStepName";
  DummyTransMeta dummyResultTransMeta=new DummyTransMeta();
  String dummyResultPid=pluginRegistry.getPluginId(StepPluginType.class,dummyResultTransMeta);
  StepMeta dummyResultStep=new StepMeta(dummyResultPid,dummyResultStepName,dummyResultTransMeta);
  transMeta.addStep(dummyResultStep);
  String dummyErrorStepName="dummyErrorStepName";
  DummyTransMeta dummyErrorTransMeta=new DummyTransMeta();
  String dummyErrorPid=pluginRegistry.getPluginId(StepPluginType.class,dummyErrorTransMeta);
  StepMeta dummyErrorStep=new StepMeta(dummyErrorPid,dummyErrorStepName,dummyErrorTransMeta);
  transMeta.addStep(dummyErrorStep);
  StepErrorMeta stepErrorMeta=new StepErrorMeta(transMeta,synchronizeAfterMerge,dummyErrorStep);
  stepErrorMeta.setEnabled(true);
  synchronizeAfterMerge.setStepErrorMeta(stepErrorMeta);
  TransHopMeta injSynch=new TransHopMeta(injectorStep,synchronizeAfterMerge);
  transMeta.addTransHop(injSynch);
  TransHopMeta synchDummyResult=new TransHopMeta(synchronizeAfterMerge,dummyResultStep);
  transMeta.addTransHop(synchDummyResult);
  TransHopMeta synchDummyError=new TransHopMeta(synchronizeAfterMerge,dummyErrorStep);
  transMeta.addTransHop(synchDummyError);
}
