{
  int equalIndex=encoded.indexOf("=");
  if (equalIndex < 0) {
    throw new KettleValueException("Sorry, this is not a valid XML Field Position (no equal sign in code: '" + encoded + "')");
  }
  String positionType=Const.trim(encoded.substring(0,equalIndex));
  String nameAndNumber=Const.trim(encoded.substring(equalIndex + 1));
  String positionName=nameAndNumber;
  int semiIndex=nameAndNumber.indexOf(NR_MARKER);
  int semiIndex2=nameAndNumber.indexOf(ATT_MARKER);
  if (positionType.equalsIgnoreCase("Ea")) {
    this.type=XML_ELEMENT_ATT;
  }
 else   if (positionType.equalsIgnoreCase("Ep")) {
    this.type=XML_ELEMENT_POS;
    this.name=positionName;
  }
 else   if (positionType.equalsIgnoreCase("A")) {
    this.type=XML_ATTRIBUTE;
    this.name=positionName;
  }
 else {
    throw new KettleValueException("Sorry, the position type can either be Ep (element defined by position) or Ea (element defined by an attribute value) or A (attribute), you specified " + positionType);
  }
  if (this.type == XML_ELEMENT_ATT) {
    if (semiIndex2 >= 0) {
      this.attribute=nameAndNumber.substring(semiIndex + 1,semiIndex2);
      this.value=nameAndNumber.substring(semiIndex2 + 1);
      this.name=nameAndNumber.substring(0,semiIndex);
    }
 else {
      throw new KettleValueException("Sorry, when the position type is Ea, defining attibute and its value must be specified : Ea=element/attribute:value" + "(" + semiIndex2 + ")");
    }
  }
 else {
    if (semiIndex >= 0) {
      this.elementNr=Const.toInt(nameAndNumber.substring(semiIndex + 1),1);
      this.name=nameAndNumber.substring(0,semiIndex);
    }
 else {
      this.elementNr=1;
    }
  }
}
