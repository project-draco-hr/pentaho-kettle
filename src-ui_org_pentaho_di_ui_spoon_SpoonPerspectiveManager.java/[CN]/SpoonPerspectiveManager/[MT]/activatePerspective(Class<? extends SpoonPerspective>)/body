{
  SpoonPerspective sp=perspectives.get(clazz);
  if (sp == null) {
    throw new KettleException("Could not locate perspective by class: " + clazz);
  }
  unloadPerspective(activePerspective);
  activePerspective=sp;
  List<XulOverlay> overlays=sp.getOverlays();
  if (overlays != null) {
    for (    XulOverlay overlay : overlays) {
      try {
        ResourceBundle res=null;
        if (overlay.getResourceBundleUri() != null) {
          try {
            res=ResourceBundle.getBundle(overlay.getResourceBundleUri());
          }
 catch (          MissingResourceException ignored) {
          }
        }
 else {
          try {
            res=ResourceBundle.getBundle(overlay.getOverlayUri().replace(".xul",".properties"));
          }
 catch (          MissingResourceException ignored) {
          }
        }
        if (res == null) {
          res=new XulSpoonResourceBundle(sp.getClass());
        }
        domContainer.loadOverlay(overlay.getOverlayUri(),res);
      }
 catch (      XulException e) {
        e.printStackTrace();
      }
    }
  }
  List<XulEventHandler> theXulEventHandlers=sp.getEventHandlers();
  if (theXulEventHandlers != null) {
    for (    XulEventHandler handler : theXulEventHandlers) {
      domContainer.addEventHandler(handler);
    }
  }
  sp.setActive(true);
  deck.setSelectedIndex(deck.getChildNodes().indexOf(deck.getElementById("perspective-" + sp.getId())));
}
