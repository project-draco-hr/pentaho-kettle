{
  lifeListeners=new HashSet<LifecycleListener>();
  long startTime=System.currentTimeMillis();
  AnnotationDB db=PluginRegistry.getAnnotationDB();
  Set<String> classIndex=db.getClassIndex().keySet();
  ClassPool classPool=ClassPool.getDefault();
  for (  String key : classIndex) {
    if (key.startsWith("org.pentaho.di.core.lifecycle.pdi")) {
      try {
        Class<?> clazz=(Class<?>)Class.forName(key);
        if (LifecycleListener.class.isAssignableFrom(clazz)) {
          lifeListeners.add((LifecycleListener)clazz.newInstance());
        }
      }
 catch (      ClassNotFoundException e) {
        e.printStackTrace();
      }
catch (      InstantiationException e) {
        e.printStackTrace();
      }
catch (      IllegalAccessException e) {
        e.printStackTrace();
      }
    }
  }
  LogChannel.GENERAL.logBasic("Finished lifecycle listener scan in " + (System.currentTimeMillis() - startTime) + "ms.");
}
