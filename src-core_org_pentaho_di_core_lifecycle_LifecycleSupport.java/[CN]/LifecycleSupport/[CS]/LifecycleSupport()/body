{
  lifeListeners=new HashSet<LifecycleListener>();
  long startTime=System.currentTimeMillis();
  AnnotationDB db=PluginRegistry.getAnnotationDB();
  Set<String> classIndex=db.getClassIndex().keySet();
  ClassPool classPool=ClassPool.getDefault();
  for (  String key : classIndex) {
    if (key.startsWith("org.pentaho.di.core.lifecycle.pdi")) {
      try {
        CtClass ctClass=classPool.get(key);
        CtClass[] interfaces=ctClass.getInterfaces();
        for (        CtClass interf : interfaces) {
          if (interf.getName().equals(LifecycleListener.class.getName())) {
            try {
              Class<LifecycleListener> clazz=(Class<LifecycleListener>)Class.forName(ctClass.getName());
              lifeListeners.add(clazz.newInstance());
            }
 catch (            Exception e) {
              LogChannel.GENERAL.logDetailed("Unable to reach class " + ctClass.getName() + ": "+ e.getMessage());
            }
          }
        }
      }
 catch (      NotFoundException e) {
      }
    }
  }
  LogChannel.GENERAL.logBasic("Finished lifecycle listener scan in " + (System.currentTimeMillis() - startTime) + "ms.");
}
