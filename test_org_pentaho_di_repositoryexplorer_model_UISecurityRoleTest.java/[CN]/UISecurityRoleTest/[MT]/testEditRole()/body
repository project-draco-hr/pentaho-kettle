{
  try {
    UISecurityRole role=new UISecurityRole();
    List<UIRepositoryUser> rusers=new ArrayList<UIRepositoryUser>();
    for (    UserInfo userInfo : users) {
      rusers.add(new UIRepositoryUser(userInfo));
    }
    role.setRole(new UIRepositoryRole(adminRole),rusers);
    role.setMode(Mode.EDIT);
    role.setDescription("new description");
    List<Object> usersToAssign=new ArrayList<Object>();
    usersToAssign.add(new UIRepositoryUser(suzyUser));
    usersToAssign.add(new UIRepositoryUser(tiffanyUser));
    List<Object> usersToUnAssign=new ArrayList<Object>();
    usersToUnAssign.add(new UIRepositoryUser(patUser));
    usersToUnAssign.add(new UIRepositoryUser(joeUser));
    role.assignUsers(usersToAssign);
    role.unassignUsers(usersToUnAssign);
    assertEquals(role.getMode(),Mode.EDIT);
    assertEquals(role.getDescription(),"new description");
    Assert.assertFalse(contains(role.getAssignedUsers(),new UIRepositoryUser(joeUser)));
    Assert.assertFalse(contains(role.getAssignedUsers(),new UIRepositoryUser(patUser)));
    Assert.assertTrue(contains(role.getAssignedUsers(),new UIRepositoryUser(tiffanyUser)));
    Assert.assertTrue(contains(role.getAssignedUsers(),new UIRepositoryUser(suzyUser)));
  }
 catch (  Exception e) {
    Assert.fail();
  }
}
