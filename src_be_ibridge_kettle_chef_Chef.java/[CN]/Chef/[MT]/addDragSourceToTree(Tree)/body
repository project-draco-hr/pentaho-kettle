{
  final Tree fTree=tree;
  Transfer[] ttypes=new Transfer[]{TextTransfer.getInstance()};
  DragSource ddSource=new DragSource(fTree,DND.DROP_MOVE | DND.DROP_COPY);
  ddSource.setTransfer(ttypes);
  ddSource.addDragListener(new DragSourceListener(){
    public void dragStart(    DragSourceEvent event){
    }
    public void dragSetData(    DragSourceEvent event){
      TreeItem ti[]=fTree.getSelection();
      String data=null;
      int type=0;
      String ts[]=Const.getTreeStrings(ti[0]);
      if (ts != null && ts.length > 0) {
        if (ts[0].equalsIgnoreCase(STRING_JOBENTRIES)) {
          type=DragAndDropContainer.TYPE_JOB_ENTRY;
          data=ti[0].getText();
        }
 else         if (ts[0].equalsIgnoreCase(STRING_BASE_JOBENTRIES) || ts[0].equalsIgnoreCase(STRING_PLUGIN_JOBENTRIES)) {
          type=DragAndDropContainer.TYPE_BASE_JOB_ENTRY;
          data=ti[0].getText();
        }
 else         if (ts[0].equalsIgnoreCase(STRING_CONNECTIONS)) {
          type=DragAndDropContainer.TYPE_DATABASE_CONNECTION;
          data=ti[0].getText();
        }
 else {
          return;
        }
        event.data=new DragAndDropContainer(type,data).getXML();
      }
    }
    public void dragFinished(    DragSourceEvent event){
    }
  }
);
}
