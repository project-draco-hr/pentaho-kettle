{
  DatabaseMeta db=jobMeta.findDatabase(name);
  int pos=jobMeta.indexOfDatabase(db);
  if (db != null) {
    boolean worked=false;
    if (rep != null) {
      if (!rep.getUserInfo().isReadonly()) {
        try {
          long id_database=rep.getDatabaseID(db.getName());
          rep.delDatabase(id_database);
          worked=true;
        }
 catch (        KettleDatabaseException dbe) {
          new ErrorDialog(shell,props,Messages.getString("Chef.ErrorDialog.ErrorDeletingConnection.Title"),Messages.getString("Chef.ErrorDialog.ErrorDeletingConnection.Message") + db + Messages.getString("Chef.ErrorDialog.ErrorDeletingConnection.Message2"),dbe);
        }
      }
 else {
        new ErrorDialog(shell,props,Messages.getString("Chef.ErrorDialog.DeleteConnectionUserIsReadOnly.Title"),Messages.getString("Chef.ErrorDialog.DeleteConnectionUserIsReadOnly.Message") + db + Messages.getString("Chef.ErrorDialog.DeleteConnectionUserIsReadOnly.Message2"));
      }
    }
    if (rep == null || worked) {
      addUndoDelete(new DatabaseMeta[]{(DatabaseMeta)db.clone()},new int[]{pos});
      jobMeta.removeDatabase(pos);
    }
    refreshTree();
  }
  setShellText();
}
