{
  if (script == null) {
    return null;
  }
  StringBuilder result=new StringBuilder();
  MODE mode=MODE.SQL;
  char currentStringChar=0;
  for (int i=0; i < script.length(); i++) {
    char ch=script.charAt(i);
    char nextCh=i < script.length() - 1 ? script.charAt(i + 1) : 0;
    char nextPlusOneCh=i < script.length() - 2 ? script.charAt(i + 2) : 0;
switch (mode) {
case SQL:
switch (ch) {
case '/':
        if (nextCh == '*' && nextPlusOneCh != '+') {
          mode=MODE.BLOCK_COMMENT;
          i++;
          ch=0;
        }
      break;
case '-':
    if (nextCh == '-') {
      mode=MODE.LINE_COMMENT;
      i++;
      ch=0;
    }
  break;
case '\'':
case '"':
mode=MODE.STRING;
currentStringChar=ch;
break;
}
break;
case BLOCK_COMMENT:
if (ch == '*') {
if (nextCh == '/') {
mode=MODE.SQL;
i++;
}
}
ch=0;
break;
case LINE_COMMENT:
if (ch == '\n' || ch == '\r') {
mode=MODE.SQL;
}
 else {
ch=0;
}
break;
case STRING:
if (ch == '\\' && nextCh == currentStringChar) {
result.append(ch);
result.append(nextCh);
ch=0;
i++;
}
 else if (ch == currentStringChar) {
mode=MODE.SQL;
}
break;
}
if (ch != 0) {
result.append(ch);
}
}
return result.toString();
}
