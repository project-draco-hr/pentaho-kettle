{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("LDAPInputDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(Messages.getString("LDAPInputDialog.General.Tab"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wGeneralComp.setLayout(fileLayout);
  wConnectionGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wConnectionGroup);
  wConnectionGroup.setText(Messages.getString("LDAPInputDialog.Group.ConnectionGroup.Label"));
  FormLayout connectiongroupLayout=new FormLayout();
  connectiongroupLayout.marginWidth=10;
  connectiongroupLayout.marginHeight=10;
  wConnectionGroup.setLayout(connectiongroupLayout);
  wlHost=new Label(wConnectionGroup,SWT.RIGHT);
  wlHost.setText(Messages.getString("LDAPInputDialog.Host.Label"));
  props.setLook(wlHost);
  fdlHost=new FormData();
  fdlHost.left=new FormAttachment(0,0);
  fdlHost.top=new FormAttachment(wStepname,margin);
  fdlHost.right=new FormAttachment(middle,-margin);
  wlHost.setLayoutData(fdlHost);
  wHost=new TextVar(transMeta,wConnectionGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wHost.setToolTipText(Messages.getString("LDAPInputDialog.Host.Tooltip"));
  props.setLook(wHost);
  wHost.addModifyListener(lsMod);
  fdHost=new FormData();
  fdHost.left=new FormAttachment(middle,0);
  fdHost.top=new FormAttachment(wStepname,margin);
  fdHost.right=new FormAttachment(100,0);
  wHost.setLayoutData(fdHost);
  wlUserName=new Label(wConnectionGroup,SWT.RIGHT);
  wlUserName.setText(Messages.getString("LDAPInputDialog.Username.Label"));
  props.setLook(wlUserName);
  fdlUserName=new FormData();
  fdlUserName.left=new FormAttachment(0,0);
  fdlUserName.top=new FormAttachment(wHost,margin);
  fdlUserName.right=new FormAttachment(middle,-margin);
  wlUserName.setLayoutData(fdlUserName);
  wUserName=new TextVar(transMeta,wConnectionGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUserName);
  wUserName.setToolTipText(Messages.getString("LDAPInputDialog.Username.Tooltip"));
  wUserName.addModifyListener(lsMod);
  fdUserName=new FormData();
  fdUserName.left=new FormAttachment(middle,0);
  fdUserName.top=new FormAttachment(wHost,margin);
  fdUserName.right=new FormAttachment(100,0);
  wUserName.setLayoutData(fdUserName);
  wlPassword=new Label(wConnectionGroup,SWT.RIGHT);
  wlPassword.setText(Messages.getString("LDAPInputDialog.Password.Label"));
  props.setLook(wlPassword);
  fdlPassword=new FormData();
  fdlPassword.left=new FormAttachment(0,0);
  fdlPassword.top=new FormAttachment(wUserName,margin);
  fdlPassword.right=new FormAttachment(middle,-margin);
  wlPassword.setLayoutData(fdlPassword);
  wPassword=new TextVar(transMeta,wConnectionGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wPassword.setToolTipText(Messages.getString("LDAPInputDialog.Password.Tooltip"));
  props.setLook(wPassword);
  wPassword.setEchoChar('*');
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(middle,0);
  fdPassword.top=new FormAttachment(wUserName,margin);
  fdPassword.right=new FormAttachment(100,0);
  wPassword.setLayoutData(fdPassword);
  wlBaseDn=new Label(wConnectionGroup,SWT.RIGHT);
  wlBaseDn.setText(Messages.getString("LDAPInputDialog.BaseDn.Label"));
  props.setLook(wlBaseDn);
  fdlBaseDn=new FormData();
  fdlBaseDn.left=new FormAttachment(0,0);
  fdlBaseDn.top=new FormAttachment(wPassword,margin);
  fdlBaseDn.right=new FormAttachment(middle,-margin);
  wlBaseDn.setLayoutData(fdlBaseDn);
  wBaseDn=new TextVar(transMeta,wConnectionGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wBaseDn);
  wBaseDn.setToolTipText(Messages.getString("LDAPInputDialog.BaseDn.Tooltip"));
  wBaseDn.addModifyListener(lsMod);
  fdBaseDn=new FormData();
  fdBaseDn.left=new FormAttachment(middle,0);
  fdBaseDn.top=new FormAttachment(wPassword,margin);
  fdBaseDn.right=new FormAttachment(100,0);
  wBaseDn.setLayoutData(fdBaseDn);
  wTest=new Button(wConnectionGroup,SWT.PUSH);
  wTest.setText(Messages.getString("LDAPInputDialog.TestConnection.Label"));
  props.setLook(wTest);
  fdTest=new FormData();
  wTest.setToolTipText(Messages.getString("LDAPInputDialog.TestConnection.Tooltip"));
  fdTest.top=new FormAttachment(wBaseDn,margin);
  fdTest.right=new FormAttachment(100,0);
  wTest.setLayoutData(fdTest);
  fdConnectionGroup=new FormData();
  fdConnectionGroup.left=new FormAttachment(0,margin);
  fdConnectionGroup.top=new FormAttachment(0,margin);
  fdConnectionGroup.right=new FormAttachment(100,-margin);
  wConnectionGroup.setLayoutData(fdConnectionGroup);
  wSearchGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wSearchGroup);
  wSearchGroup.setText(Messages.getString("LDAPInputDialog.Group.SearchGroup.Label"));
  FormLayout searchgroupLayout=new FormLayout();
  searchgroupLayout.marginWidth=10;
  searchgroupLayout.marginHeight=10;
  wSearchGroup.setLayout(searchgroupLayout);
  wlSearchBase=new Label(wSearchGroup,SWT.RIGHT);
  wlSearchBase.setText(Messages.getString("LDAPInputDialog.SearchBase.Label"));
  props.setLook(wlSearchBase);
  fdlSearchBase=new FormData();
  fdlSearchBase.left=new FormAttachment(0,0);
  fdlSearchBase.top=new FormAttachment(wConnectionGroup,margin);
  fdlSearchBase.right=new FormAttachment(middle,-margin);
  wlSearchBase.setLayoutData(fdlSearchBase);
  wSearchBase=new TextVar(transMeta,wSearchGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSearchBase);
  wSearchBase.setToolTipText(Messages.getString("LDAPInputDialog.SearchBase.Tooltip"));
  wSearchBase.addModifyListener(lsMod);
  fdSearchBase=new FormData();
  fdSearchBase.left=new FormAttachment(middle,0);
  fdSearchBase.top=new FormAttachment(wConnectionGroup,margin);
  fdSearchBase.right=new FormAttachment(100,0);
  wSearchBase.setLayoutData(fdSearchBase);
  wlFilterString=new Label(wSearchGroup,SWT.RIGHT);
  wlFilterString.setText(Messages.getString("LDAPInputDialog.FilterString.Label"));
  props.setLook(wlFilterString);
  fdlFilterString=new FormData();
  fdlFilterString.left=new FormAttachment(0,0);
  fdlFilterString.top=new FormAttachment(wSearchBase,2 * margin);
  fdlFilterString.right=new FormAttachment(middle,-margin);
  wlFilterString.setLayoutData(fdlFilterString);
  wFilterString=new Text(wSearchGroup,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  wFilterString.setToolTipText(Messages.getString("LDAPInputDialog.FilterString.Tooltip"));
  props.setLook(wFilterString);
  wFilterString.addModifyListener(lsMod);
  fdFilterString=new FormData();
  fdFilterString.left=new FormAttachment(middle,0);
  fdFilterString.top=new FormAttachment(wSearchBase,2 * margin);
  fdFilterString.right=new FormAttachment(100,0);
  fdFilterString.bottom=new FormAttachment(100,-margin);
  wFilterString.setLayoutData(fdFilterString);
  SelectionAdapter lsVar=VariableButtonListenerFactory.getSelectionAdapter(wSearchGroup,wFilterString,transMeta);
  wFilterString.addKeyListener(TextVar.getControlSpaceKeyListener(transMeta,wFilterString,lsVar));
  fdSearchGroup=new FormData();
  fdSearchGroup.left=new FormAttachment(0,margin);
  fdSearchGroup.top=new FormAttachment(wConnectionGroup,margin);
  fdSearchGroup.right=new FormAttachment(100,-margin);
  fdSearchGroup.bottom=new FormAttachment(100,-margin);
  wSearchGroup.setLayoutData(fdSearchGroup);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(Messages.getString("LDAPInputDialog.Content.Tab"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wAdditionalGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wAdditionalGroup);
  wAdditionalGroup.setText(Messages.getString("LDAPInputDialog.Group.AdditionalGroup.Label"));
  FormLayout additionalgroupLayout=new FormLayout();
  additionalgroupLayout.marginWidth=10;
  additionalgroupLayout.marginHeight=10;
  wAdditionalGroup.setLayout(additionalgroupLayout);
  wlInclRownum=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclRownum.setText(Messages.getString("LDAPInputDialog.InclRownum.Label"));
  props.setLook(wlInclRownum);
  fdlInclRownum=new FormData();
  fdlInclRownum.left=new FormAttachment(0,0);
  fdlInclRownum.top=new FormAttachment(0,margin);
  fdlInclRownum.right=new FormAttachment(middle,-margin);
  wlInclRownum.setLayoutData(fdlInclRownum);
  wInclRownum=new Button(wAdditionalGroup,SWT.CHECK);
  props.setLook(wInclRownum);
  wInclRownum.setToolTipText(Messages.getString("LDAPInputDialog.InclRownum.Tooltip"));
  fdRownum=new FormData();
  fdRownum.left=new FormAttachment(middle,0);
  fdRownum.top=new FormAttachment(0,margin);
  wInclRownum.setLayoutData(fdRownum);
  wlInclRownumField=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclRownumField.setText(Messages.getString("LDAPInputDialog.InclRownumField.Label"));
  props.setLook(wlInclRownumField);
  fdlInclRownumField=new FormData();
  fdlInclRownumField.left=new FormAttachment(wInclRownum,margin);
  fdlInclRownumField.top=new FormAttachment(0,margin);
  wlInclRownumField.setLayoutData(fdlInclRownumField);
  wInclRownumField=new TextVar(transMeta,wAdditionalGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclRownumField);
  wInclRownumField.addModifyListener(lsMod);
  fdInclRownumField=new FormData();
  fdInclRownumField.left=new FormAttachment(wlInclRownumField,margin);
  fdInclRownumField.top=new FormAttachment(0,margin);
  fdInclRownumField.right=new FormAttachment(100,0);
  wInclRownumField.setLayoutData(fdInclRownumField);
  fdAdditionalGroup=new FormData();
  fdAdditionalGroup.left=new FormAttachment(0,margin);
  fdAdditionalGroup.top=new FormAttachment(0,margin);
  fdAdditionalGroup.right=new FormAttachment(100,-margin);
  wAdditionalGroup.setLayoutData(fdAdditionalGroup);
  wlLimit=new Label(wContentComp,SWT.RIGHT);
  wlLimit.setText(Messages.getString("LDAPInputDialog.Limit.Label"));
  props.setLook(wlLimit);
  fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,0);
  fdlLimit.top=new FormAttachment(wAdditionalGroup,2 * margin);
  fdlLimit.right=new FormAttachment(middle,-margin);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new Text(wContentComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,0);
  fdLimit.top=new FormAttachment(wAdditionalGroup,2 * margin);
  fdLimit.right=new FormAttachment(100,0);
  wLimit.setLayoutData(fdLimit);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(Messages.getString("LDAPInputDialog.Fields.Tab"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wGet=new Button(wFieldsComp,SWT.PUSH);
  wGet.setText(Messages.getString("LDAPInputDialog.GetFields.Button"));
  fdGet=new FormData();
  fdGet.left=new FormAttachment(50,0);
  fdGet.bottom=new FormAttachment(100,0);
  wGet.setLayoutData(fdGet);
  final int FieldsRows=input.getInputFields().length;
  String dats[]=Const.getDateFormats();
  String nums[]=Const.getNumberFormats();
  int totsize=dats.length + nums.length;
  String formats[]=new String[totsize];
  for (int x=0; x < dats.length; x++)   formats[x]=dats[x];
  for (int x=0; x < nums.length; x++)   formats[dats.length + x]=nums[x];
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Name.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Attribut.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Type.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes(),true),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Format.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,formats),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Length.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Precision.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Currency.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Decimal.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Group.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.TrimType.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,formats,true),new ColumnInfo(Messages.getString("LDAPInputDialog.FieldsTable.Repeat.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{Messages.getString("System.Combo.Yes"),Messages.getString("System.Combo.No")},true)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(Messages.getString("LDAPInputDialog.FieldsTable.Name.Column.Tooltip"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(Messages.getString("LDAPInputDialog.FieldsTable.Attribut.Column.Tooltip"));
  wFields=new TableView(transMeta,wFieldsComp,SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wGet,-margin);
  wFields.setLayoutData(fdFields);
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(Messages.getString("LDAPInputDialog.Button.PreviewRows"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wTest.addListener(SWT.Selection,lsTest);
  wPreview.addListener(SWT.Selection,lsPreview);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wLimit.addSelectionListener(lsDef);
  wInclRownumField.addSelectionListener(lsDef);
  wInclRownum.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setIncludeRownum();
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData(input);
  input.setChanged(changed);
  wFields.optWidth(true);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
