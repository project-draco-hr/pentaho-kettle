{
  TransHistoryLogTab model=models[tabFolder.getSelectionIndex()];
  Text text=model.logDisplayText;
  if (text == null || text.isDisposed()) {
    return;
  }
  List<Object[]> list=model.rows;
  if (list == null || list.size() == 0) {
    String message;
    if (model.logTable.isDefined()) {
      message=BaseMessages.getString(PKG,"TransHistory.PleaseRefresh.Message");
    }
 else {
      message=BaseMessages.getString(PKG,"TransHistory.HistoryConfiguration.Message");
    }
    text.setText(message);
    return;
  }
  int nr=model.logDisplayTableView.table.getSelectionIndex();
  if (nr >= 0 && nr < list.size()) {
    Object[] row=list.get(nr);
    LogTableField logField=model.logTable.getLogField();
    if (logField != null) {
      int index=model.logTableFields.indexOf(logField);
      if (index >= 0) {
        String logText=row[index].toString();
        text.setText(Const.NVL(logText,""));
        text.setSelection(text.getText().length());
        text.showSelection();
      }
 else {
        text.setText(BaseMessages.getString(PKG,"TransHistory.HistoryConfiguration.NoLoggingFieldDefined"));
      }
    }
  }
}
