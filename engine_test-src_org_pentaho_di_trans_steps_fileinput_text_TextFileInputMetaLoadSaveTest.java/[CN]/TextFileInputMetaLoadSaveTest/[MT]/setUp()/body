{
  List<String> commonAttributes=Arrays.asList("errorCountField","errorFieldsField","errorTextField");
  List<String> xmlAttributes=Collections.emptyList();
  List<String> repoAttributes=Collections.emptyList();
  Map<String,String> getters=new HashMap<String,String>();
  getters.put("header","hasHeader");
  getters.put("footer","hasFooter");
  getters.put("noEmptyLines","noEmptyLines");
  getters.put("includeFilename","includeFilename");
  getters.put("includeRowNumber","includeRowNumber");
  getters.put("errorFilesExtension","getErrorLineFilesExtension");
  getters.put("isaddresult","isAddResultFile");
  getters.put("shortFileFieldName","getShortFileNameField");
  getters.put("pathFieldName","getPathField");
  getters.put("hiddenFieldName","isHiddenField");
  getters.put("lastModificationTimeFieldName","getLastModificationDateField");
  getters.put("uriNameFieldName","getUriField");
  getters.put("rootUriNameFieldName","getRootUriField");
  getters.put("extensionFieldName","getExtensionField");
  getters.put("sizeFieldName","getSizeField");
  Map<String,String> setters=new HashMap<String,String>();
  setters.put("fileName","setFileNameForTest");
  setters.put("errorFilesExtension","setErrorLineFilesExtension");
  setters.put("isaddresult","setAddResultFile");
  setters.put("shortFileFieldName","setShortFileNameField");
  setters.put("pathFieldName","setPathField");
  setters.put("hiddenFieldName","setIsHiddenField");
  setters.put("lastModificationTimeFieldName","setLastModificationDateField");
  setters.put("uriNameFieldName","setUriField");
  setters.put("rootUriNameFieldName","setRootUriField");
  setters.put("extensionFieldName","setExtensionField");
  setters.put("sizeFieldName","setSizeField");
  Map<String,FieldLoadSaveValidator<?>> attributeValidators=Collections.emptyMap();
  Map<String,FieldLoadSaveValidator<?>> typeValidators=new HashMap<String,FieldLoadSaveValidator<?>>();
  typeValidators.put(TextFileFilter[].class.getCanonicalName(),new ArrayLoadSaveValidator<TextFileFilter>(new TextFileFilterValidator()));
  typeValidators.put(BaseFileInputField[].class.getCanonicalName(),new ArrayLoadSaveValidator<BaseFileInputField>(new TextFileInputFieldValidator()));
  assertTrue(!commonAttributes.isEmpty() || !(xmlAttributes.isEmpty() || repoAttributes.isEmpty()));
  tester=new TransStepLoadSaveTester<TextFileInputMeta>(TextFileInputMeta.class,commonAttributes,xmlAttributes,repoAttributes,getters,setters,attributeValidators,typeValidators);
}
