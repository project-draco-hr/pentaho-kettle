{
  StringBuilder retval=new StringBuilder(550);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("protocol",protocol));
  retval.append("      ").append(XMLHandler.addTagValue("servername",serverName));
  retval.append("      ").append(XMLHandler.addTagValue("port",port));
  retval.append("      ").append(XMLHandler.addTagValue("username",userName));
  retval.append("      ").append(XMLHandler.addTagValue("password",Encr.encryptPasswordIfNotUsingVariables(getPassword())));
  retval.append("      ").append(XMLHandler.addTagValue("ftpdirectory",ftpDirectory));
  retval.append("      ").append(XMLHandler.addTagValue("wildcard",wildcard));
  retval.append("      ").append(XMLHandler.addTagValue("timeout",timeout));
  retval.append("      ").append(XMLHandler.addTagValue("active",activeConnection));
  retval.append("      ").append(XMLHandler.addTagValue("useproxy",useproxy));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_host",proxyHost));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_port",proxyPort));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_username",proxyUsername));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_password",Encr.encryptPasswordIfNotUsingVariables(proxyPassword)));
  retval.append("      ").append(XMLHandler.addTagValue("publicpublickey",publicpublickey));
  retval.append("      ").append(XMLHandler.addTagValue("keyfilename",keyFilename));
  retval.append("      ").append(XMLHandler.addTagValue("keyfilepass",keyFilePass));
  retval.append("      ").append(XMLHandler.addTagValue("nr_limit_success",nr_limit_success));
  retval.append("      ").append(XMLHandler.addTagValue("success_condition",success_condition));
  retval.append("      ").append(XMLHandler.addTagValue("copyprevious",copyprevious));
  retval.append("      ").append(XMLHandler.addTagValue("ftps_connection_type",FTPSConnection.getConnectionTypeCode(FTPSConnectionType)));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_host",socksProxyHost));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_port",socksProxyPort));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_username",socksProxyUsername));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_password",Encr.encryptPasswordIfNotUsingVariables(getSocksProxyPassword())));
  return retval.toString();
}
