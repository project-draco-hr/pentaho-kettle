{
  AtomicBoolean condition=new AtomicBoolean(true);
  AtomicInteger generator=new AtomicInteger(10);
  List<Updater> updaters=new ArrayList<>();
  for (int i=0; i < updatersAmount; i++) {
    Updater updater=new Updater(jobMap,generator,updatersCycles);
    updaters.add(updater);
  }
  List<Getter> getters=new ArrayList<>();
  for (int i=0; i < gettersAmount; i++) {
    getters.add(new Getter(jobMap,condition));
  }
  List<Replacer> replacers=new ArrayList<>();
  for (int i=0; i < replaceAmount; i++) {
    replacers.add(new Replacer(jobMap,condition));
  }
  ConcurrencyTestRunner.runAndCheckNoExceptionRaised(updaters,ListUtils.union(replacers,getters),condition);
}
