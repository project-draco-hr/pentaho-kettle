{
  try {
    int argnr=rep.countNrJobEntryAttributes(id_jobentry,"source_filefolder");
    allocate(argnr);
    for (int a=0; a < argnr; a++) {
      sourceFileFolder[a]=rep.getJobEntryAttributeString(id_jobentry,a,"source_filefolder");
      sourceWildcard[a]=rep.getJobEntryAttributeString(id_jobentry,a,"wildcard");
      sourceIncludeSubfolders[a]=rep.getJobEntryAttributeString(id_jobentry,a,"include_subFolders");
    }
    resultFilenamesWildcard=rep.getJobEntryAttributeString(id_jobentry,"result_filenames_wildcard");
    ResultFieldFile=rep.getJobEntryAttributeString(id_jobentry,"result_field_file");
    ResultFieldWildcard=rep.getJobEntryAttributeString(id_jobentry,"result_field_wild");
    ResultFieldIncludesubFolders=rep.getJobEntryAttributeString(id_jobentry,"result_field_includesubfolders");
    comparevalue=rep.getJobEntryAttributeString(id_jobentry,"comparevalue");
    minvalue=rep.getJobEntryAttributeString(id_jobentry,"minvalue");
    maxvalue=rep.getJobEntryAttributeString(id_jobentry,"maxvalue");
    successConditionType=JobEntrySimpleEval.getSuccessNumberConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"successnumbercondition"),""));
    sourceFiles=getSourceFilesByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"source_files"),""));
    evaluationType=getEvaluationTypeByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"evaluation_type"),""));
    scale=getScaleByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"scale"),""));
  }
 catch (  KettleException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEvalFilesMetrics.Error.Exception.UnableLoadRep") + id_jobentry,dbe);
  }
}
