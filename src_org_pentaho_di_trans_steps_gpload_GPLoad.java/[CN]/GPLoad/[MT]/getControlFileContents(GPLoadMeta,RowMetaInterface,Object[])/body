{
  DatabaseMeta dm=meta.getDatabaseMeta();
  StringBuffer contents=new StringBuffer(500);
  contents.append("VERSION: 1.0.0.1").append(Const.CR);
  contents.append("DATABASE: ").append(environmentSubstitute(dm.getDatabaseName())).append(Const.CR);
  contents.append("USER: ").append(environmentSubstitute(dm.getUsername())).append(Const.CR);
  contents.append("HOST: ").append(environmentSubstitute(dm.getHostname())).append(Const.CR);
  contents.append("PORT: ").append(environmentSubstitute(dm.getDatabasePortNumberString())).append(Const.CR);
  contents.append("GPLOAD:").append(Const.CR);
  contents.append("   INPUT:").append(Const.CR);
  contents.append("    - SOURCE: ").append(Const.CR);
  String[] localHosts=meta.getLocalHosts();
  String stringLocalHosts=null;
  if (localHosts.length > 0) {
    StringBuilder sbLocalHosts=new StringBuilder();
    String trimmedAndSubstitutedLocalHost;
    for (    String localHost : localHosts) {
      trimmedAndSubstitutedLocalHost=environmentSubstitute(localHost.trim());
      if (!Const.isEmpty(trimmedAndSubstitutedLocalHost)) {
        sbLocalHosts.append("          - ").append(trimmedAndSubstitutedLocalHost).append(Const.CR);
      }
    }
    stringLocalHosts=sbLocalHosts.toString();
    if (!Const.isEmpty(stringLocalHosts)) {
      contents.append("      - LOCAL_HOSTNAME: ").append(Const.CR).append(stringLocalHosts);
    }
  }
  if (!Const.isEmpty(meta.getMasterPort())) {
    String substritutedAndTrimmedMasterPort=environmentSubstitute(meta.getMasterPort().trim());
    if (!Const.isEmpty(substritutedAndTrimmedMasterPort)) {
      contents.append("      - PORT: ").append(substritutedAndTrimmedMasterPort).append(Const.CR);
    }
  }
  if (Const.isEmpty(stringLocalHosts)) {
    String inputName="'" + environmentSubstitute(meta.getDataFile()) + "'";
    contents.append("        FILE: ").append('[').append(inputName).append(']').append(Const.CR);
  }
 else {
    contents.append("        FILE: ").append(Const.CR).append("          - ").append(environmentSubstitute(meta.getDataFile())).append(Const.CR);
  }
  contents.append("    - FORMAT: TEXT").append(Const.CR);
  contents.append("    - DELIMITER: '").append(environmentSubstitute(meta.getDelimiter())).append("'").append(Const.CR);
  contents.append("    - QUOTE: '").append(environmentSubstitute(meta.getEnclosure())).append("'").append(Const.CR);
  contents.append("    - HEADER: FALSE").append(Const.CR);
  contents.append("    - ERROR_LIMIT: ").append(meta.getMaxErrors()).append(Const.CR);
  if (!Const.isEmpty(meta.getErrorTableName())) {
    contents.append("    - ERROR_TABLE: ").append(meta.getErrorTableName()).append(Const.CR);
  }
  contents.append("   OUTPUT:").append(Const.CR);
  String tableName=dm.getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),environmentSubstitute(meta.getTableName()));
  contents.append("    - TABLE: ").append(tableName).append(Const.CR);
  contents.append("    - MODE: ").append(meta.getLoadAction()).append(Const.CR);
  return contents.toString();
}
