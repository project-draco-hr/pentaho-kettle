{
  display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL | SWT.SHEET| SWT.RESIZE| SWT.MAX| SWT.MIN);
  props.setLook(shell);
  shell.setImage(GUIResource.getInstance().getImageTransGraph());
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"TransDebugDialog.Shell.Title"));
  margin=Const.MARGIN;
  middle=props.getMiddlePct();
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"TransDebugDialog.Configure.Label"));
  wOK.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ok(true);
    }
  }
);
  wLaunch=new Button(shell,SWT.PUSH);
  wLaunch.setText(BaseMessages.getString(PKG,"TransDebugDialog.Launch.Label"));
  wLaunch.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ok(false);
    }
  }
);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  wCancel.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      cancel();
    }
  }
);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wLaunch,wOK,wCancel},margin,null);
  wOK.setToolTipText(BaseMessages.getString(PKG,"TransDebugDialog.Configure.ToolTip"));
  wLaunch.setToolTipText(BaseMessages.getString(PKG,"TransDebugDialog.Launch.ToolTip"));
  ColumnInfo[] stepColumns={new ColumnInfo(BaseMessages.getString(PKG,"TransDebugDialog.Column.StepName"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  int nrSteps=transDebugMeta.getTransMeta().nrSteps();
  wSteps=new TableView(transDebugMeta.getTransMeta(),shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.SINGLE,stepColumns,nrSteps,true,null,props);
  FormData fdSteps=new FormData();
  fdSteps.left=new FormAttachment(0,0);
  fdSteps.right=new FormAttachment(middle,-margin);
  fdSteps.top=new FormAttachment(0,margin);
  fdSteps.bottom=new FormAttachment(wOK,-margin * 2);
  wSteps.setLayoutData(fdSteps);
  wSteps.table.setHeaderVisible(false);
  wSteps.table.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getStepDebugMeta();
      showStepDebugInformation();
    }
  }
);
  wComposite=new Composite(shell,SWT.BORDER);
  props.setLook(wComposite);
  FormData fdComposite=new FormData();
  fdComposite.left=new FormAttachment(middle,0);
  fdComposite.right=new FormAttachment(100,0);
  fdComposite.top=new FormAttachment(0,margin);
  fdComposite.bottom=new FormAttachment(wOK,-margin * 2);
  wComposite.setLayoutData(fdComposite);
  FormLayout compositeLayout=new FormLayout();
  compositeLayout.marginWidth=Const.FORM_MARGIN;
  compositeLayout.marginHeight=Const.FORM_MARGIN;
  wComposite.setLayout(compositeLayout);
  getData();
  BaseStepDialog.setSize(shell);
  wLaunch.setFocus();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return retval;
}
