{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("ValidatorDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("ValidatorDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,null);
  Label wlFieldList=new Label(shell,SWT.LEFT);
  wlFieldList.setText(Messages.getString("ValidatorDialog.FieldList.Label"));
  props.setLook(wlFieldList);
  FormData fdlFieldList=new FormData();
  fdlFieldList.left=new FormAttachment(0,0);
  fdlFieldList.right=new FormAttachment(100,0);
  fdlFieldList.top=new FormAttachment(wStepname,margin);
  wlFieldList.setLayoutData(fdlFieldList);
  wFieldList=new List(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  try {
    inputFields=transMeta.getPrevStepFields(stepMeta);
    wFieldList.setItems(inputFields.getFieldNames());
  }
 catch (  KettleStepException ex) {
    new ErrorDialog(shell,Messages.getString("ValidatorDialog.Exception.CantGetFieldsFromPreviousSteps.Title"),Messages.getString("ValidatorDialog.Exception.CantGetFieldsFromPreviousSteps.Message"),ex);
  }
  props.setLook(wFieldList);
  wFieldList.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent event){
      showSelectedValidatorField(wFieldList.getSelection()[0]);
    }
  }
);
  FormData fdFieldList=new FormData();
  fdFieldList.left=new FormAttachment(0,0);
  fdFieldList.top=new FormAttachment(wlFieldList,margin);
  fdFieldList.right=new FormAttachment(middle,-margin);
  fdFieldList.bottom=new FormAttachment(wOK,-margin * 2);
  wFieldList.setLayoutData(fdFieldList);
  ScrolledComposite wSComp=new ScrolledComposite(shell,SWT.H_SCROLL | SWT.V_SCROLL);
  props.setLook(wSComp);
  wSComp.setLayout(new FillLayout());
  FormData fdComp=new FormData();
  fdComp.left=new FormAttachment(middle,0);
  fdComp.top=new FormAttachment(wlFieldList,margin);
  fdComp.right=new FormAttachment(100,0);
  fdComp.bottom=new FormAttachment(wOK,-margin * 2);
  wSComp.setLayoutData(fdComp);
  Composite wComp=new Composite(wSComp,SWT.NONE);
  props.setLook(wComp);
  FormLayout compLayout=new FormLayout();
  compLayout.marginWidth=3;
  compLayout.marginHeight=3;
  wComp.setLayout(compLayout);
  wgType=new Group(wComp,SWT.NONE);
  props.setLook(wgType);
  wgType.setText(Messages.getString("ValidatorDialog.TypeGroup.Label"));
  FormLayout typeGroupLayout=new FormLayout();
  typeGroupLayout.marginHeight=Const.FORM_MARGIN;
  typeGroupLayout.marginWidth=Const.FORM_MARGIN;
  wgType.setLayout(typeGroupLayout);
  FormData fdType=new FormData();
  fdType.left=new FormAttachment(0,0);
  fdType.right=new FormAttachment(100,0);
  fdType.top=new FormAttachment(0,0);
  wgType.setLayoutData(fdType);
  wlDataTypeVerified=new Label(wgType,SWT.RIGHT);
  wlDataTypeVerified.setText(Messages.getString("ValidatorDialog.DataTypeVerified.Label"));
  props.setLook(wlDataTypeVerified);
  FormData fdldataTypeVerified=new FormData();
  fdldataTypeVerified.left=new FormAttachment(0,0);
  fdldataTypeVerified.right=new FormAttachment(middle,-margin);
  fdldataTypeVerified.top=new FormAttachment(wlFieldList,margin);
  wlDataTypeVerified.setLayoutData(fdldataTypeVerified);
  wDataTypeVerified=new Button(wgType,SWT.CHECK);
  props.setLook(wDataTypeVerified);
  FormData fddataTypeVerified=new FormData();
  fddataTypeVerified.left=new FormAttachment(middle,margin);
  fddataTypeVerified.right=new FormAttachment(100,0);
  fddataTypeVerified.top=new FormAttachment(wlFieldList,margin);
  wDataTypeVerified.setLayoutData(fddataTypeVerified);
  wlDataType=new Label(wgType,SWT.RIGHT);
  wlDataType.setText(Messages.getString("ValidatorDialog.DataType.Label"));
  props.setLook(wlDataType);
  FormData fdlDataType=new FormData();
  fdlDataType.left=new FormAttachment(0,0);
  fdlDataType.right=new FormAttachment(middle,-margin);
  fdlDataType.top=new FormAttachment(wDataTypeVerified,margin);
  wlDataType.setLayoutData(fdlDataType);
  wDataType=new Combo(wgType,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wDataType.setItems(ValueMeta.getTypes());
  props.setLook(wDataType);
  FormData fdDataType=new FormData();
  fdDataType.left=new FormAttachment(middle,margin);
  fdDataType.right=new FormAttachment(100,0);
  fdDataType.top=new FormAttachment(wDataTypeVerified,margin);
  wDataType.setLayoutData(fdDataType);
  wlConversionMask=new Label(wgType,SWT.RIGHT);
  wlConversionMask.setText(Messages.getString("ValidatorDialog.ConversionMask.Label"));
  props.setLook(wlConversionMask);
  FormData fdlConversionMask=new FormData();
  fdlConversionMask.left=new FormAttachment(0,0);
  fdlConversionMask.right=new FormAttachment(middle,-margin);
  fdlConversionMask.top=new FormAttachment(wDataType,margin);
  wlConversionMask.setLayoutData(fdlConversionMask);
  wConversionMask=new Text(wgType,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wConversionMask);
  FormData fdConversionMask=new FormData();
  fdConversionMask.left=new FormAttachment(middle,margin);
  fdConversionMask.right=new FormAttachment(100,0);
  fdConversionMask.top=new FormAttachment(wDataType,margin);
  wConversionMask.setLayoutData(fdConversionMask);
  wlDecimalSymbol=new Label(wgType,SWT.RIGHT);
  wlDecimalSymbol.setText(Messages.getString("ValidatorDialog.DecimalSymbol.Label"));
  props.setLook(wlDecimalSymbol);
  FormData fdlDecimalSymbol=new FormData();
  fdlDecimalSymbol.left=new FormAttachment(0,0);
  fdlDecimalSymbol.right=new FormAttachment(middle,-margin);
  fdlDecimalSymbol.top=new FormAttachment(wConversionMask,margin);
  wlDecimalSymbol.setLayoutData(fdlDecimalSymbol);
  wDecimalSymbol=new Text(wgType,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDecimalSymbol);
  FormData fdDecimalSymbol=new FormData();
  fdDecimalSymbol.left=new FormAttachment(middle,margin);
  fdDecimalSymbol.right=new FormAttachment(100,0);
  fdDecimalSymbol.top=new FormAttachment(wConversionMask,margin);
  wDecimalSymbol.setLayoutData(fdDecimalSymbol);
  wlGroupingSymbol=new Label(wgType,SWT.RIGHT);
  wlGroupingSymbol.setText(Messages.getString("ValidatorDialog.GroupingSymbol.Label"));
  props.setLook(wlGroupingSymbol);
  FormData fdlGroupingSymbol=new FormData();
  fdlGroupingSymbol.left=new FormAttachment(0,0);
  fdlGroupingSymbol.right=new FormAttachment(middle,-margin);
  fdlGroupingSymbol.top=new FormAttachment(wDecimalSymbol,margin);
  wlGroupingSymbol.setLayoutData(fdlGroupingSymbol);
  wGroupingSymbol=new Text(wgType,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wGroupingSymbol);
  FormData fdGroupingSymbol=new FormData();
  fdGroupingSymbol.left=new FormAttachment(middle,margin);
  fdGroupingSymbol.right=new FormAttachment(100,0);
  fdGroupingSymbol.top=new FormAttachment(wDecimalSymbol,margin);
  wGroupingSymbol.setLayoutData(fdGroupingSymbol);
  wgData=new Group(wComp,SWT.NONE);
  props.setLook(wgData);
  wgData.setText(Messages.getString("ValidatorDialog.DataGroup.Label"));
  FormLayout dataGroupLayout=new FormLayout();
  dataGroupLayout.marginHeight=Const.FORM_MARGIN;
  dataGroupLayout.marginWidth=Const.FORM_MARGIN;
  wgData.setLayout(dataGroupLayout);
  FormData fdData=new FormData();
  fdData.left=new FormAttachment(0,0);
  fdData.right=new FormAttachment(100,0);
  fdData.top=new FormAttachment(wgType,margin);
  wgData.setLayoutData(fdData);
  wlNullAllowed=new Label(wgData,SWT.RIGHT);
  wlNullAllowed.setText(Messages.getString("ValidatorDialog.NullAllowed.Label"));
  props.setLook(wlNullAllowed);
  FormData fdlNullAllowed=new FormData();
  fdlNullAllowed.left=new FormAttachment(0,0);
  fdlNullAllowed.right=new FormAttachment(middle,-margin);
  fdlNullAllowed.top=new FormAttachment(wlFieldList,margin);
  wlNullAllowed.setLayoutData(fdlNullAllowed);
  wNullAllowed=new Button(wgData,SWT.CHECK);
  props.setLook(wNullAllowed);
  FormData fdNullAllowed=new FormData();
  fdNullAllowed.left=new FormAttachment(middle,margin);
  fdNullAllowed.right=new FormAttachment(100,0);
  fdNullAllowed.top=new FormAttachment(wlFieldList,margin);
  wNullAllowed.setLayoutData(fdNullAllowed);
  wlMaxLength=new Label(wgData,SWT.RIGHT);
  wlMaxLength.setText(Messages.getString("ValidatorDialog.MaxLength.Label"));
  props.setLook(wlMaxLength);
  FormData fdlMaxLength=new FormData();
  fdlMaxLength.left=new FormAttachment(0,0);
  fdlMaxLength.right=new FormAttachment(middle,-margin);
  fdlMaxLength.top=new FormAttachment(wNullAllowed,margin);
  wlMaxLength.setLayoutData(fdlMaxLength);
  wMaxLength=new Text(wgData,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMaxLength);
  FormData fdMaxLength=new FormData();
  fdMaxLength.left=new FormAttachment(middle,margin);
  fdMaxLength.right=new FormAttachment(100,0);
  fdMaxLength.top=new FormAttachment(wNullAllowed,margin);
  wMaxLength.setLayoutData(fdMaxLength);
  wlMinLength=new Label(wgData,SWT.RIGHT);
  wlMinLength.setText(Messages.getString("ValidatorDialog.MinLength.Label"));
  props.setLook(wlMinLength);
  FormData fdlMinLength=new FormData();
  fdlMinLength.left=new FormAttachment(0,0);
  fdlMinLength.right=new FormAttachment(middle,-margin);
  fdlMinLength.top=new FormAttachment(wMaxLength,margin);
  wlMinLength.setLayoutData(fdlMinLength);
  wMinLength=new Text(wgData,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMinLength);
  FormData fdMinLength=new FormData();
  fdMinLength.left=new FormAttachment(middle,margin);
  fdMinLength.right=new FormAttachment(100,0);
  fdMinLength.top=new FormAttachment(wMaxLength,margin);
  wMinLength.setLayoutData(fdMinLength);
  wlMaxValue=new Label(wgData,SWT.RIGHT);
  wlMaxValue.setText(Messages.getString("ValidatorDialog.MaxValue.Label"));
  props.setLook(wlMaxValue);
  FormData fdlMaxValue=new FormData();
  fdlMaxValue.left=new FormAttachment(0,0);
  fdlMaxValue.right=new FormAttachment(middle,-margin);
  fdlMaxValue.top=new FormAttachment(wMinLength,margin);
  wlMaxValue.setLayoutData(fdlMaxValue);
  wMaxValue=new Text(wgData,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMaxValue);
  FormData fdMaxValue=new FormData();
  fdMaxValue.left=new FormAttachment(middle,margin);
  fdMaxValue.right=new FormAttachment(100,0);
  fdMaxValue.top=new FormAttachment(wMinLength,margin);
  wMaxValue.setLayoutData(fdMaxValue);
  wlMinValue=new Label(wgData,SWT.RIGHT);
  wlMinValue.setText(Messages.getString("ValidatorDialog.MinValue.Label"));
  props.setLook(wlMinValue);
  FormData fdlMinValue=new FormData();
  fdlMinValue.left=new FormAttachment(0,0);
  fdlMinValue.right=new FormAttachment(middle,-margin);
  fdlMinValue.top=new FormAttachment(wMaxValue,margin);
  wlMinValue.setLayoutData(fdlMinValue);
  wMinValue=new Text(wgData,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMinValue);
  FormData fdMinValue=new FormData();
  fdMinValue.left=new FormAttachment(middle,margin);
  fdMinValue.right=new FormAttachment(100,0);
  fdMinValue.top=new FormAttachment(wMaxValue,margin);
  wMinValue.setLayoutData(fdMinValue);
  wbAddAllowed=new Button(wgData,SWT.PUSH);
  wbAddAllowed.setText(Messages.getString("ValidatorDialog.ButtonAddAllowed.Label"));
  FormData fdbAddAllowed=new FormData();
  fdbAddAllowed.right=new FormAttachment(100,0);
  fdbAddAllowed.top=new FormAttachment(wMinValue,margin);
  wbAddAllowed.setLayoutData(fdbAddAllowed);
  wbAddAllowed.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      addAllowedValue();
    }
  }
);
  wbRemoveAllowed=new Button(wgData,SWT.PUSH);
  wbRemoveAllowed.setText(Messages.getString("ValidatorDialog.ButtonRemoveAllowed.Label"));
  FormData fdbRemoveAllowed=new FormData();
  fdbRemoveAllowed.right=new FormAttachment(100,0);
  fdbRemoveAllowed.top=new FormAttachment(wbAddAllowed,margin);
  wbRemoveAllowed.setLayoutData(fdbRemoveAllowed);
  wbRemoveAllowed.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      removeAllowedValue();
    }
  }
);
  wlAllowedValues=new Label(wgData,SWT.RIGHT);
  wlAllowedValues.setText(Messages.getString("ValidatorDialog.AllowedValues.Label"));
  props.setLook(wlAllowedValues);
  FormData fdlAllowedValues=new FormData();
  fdlAllowedValues.left=new FormAttachment(0,0);
  fdlAllowedValues.right=new FormAttachment(middle,-margin);
  fdlAllowedValues.top=new FormAttachment(wMinValue,margin);
  wlAllowedValues.setLayoutData(fdlAllowedValues);
  wAllowedValues=new List(wgData,SWT.MULTI | SWT.LEFT | SWT.BORDER);
  props.setLook(wAllowedValues);
  FormData fdAllowedValues=new FormData();
  fdAllowedValues.left=new FormAttachment(middle,margin);
  fdAllowedValues.right=new FormAttachment(wbRemoveAllowed,-margin);
  fdAllowedValues.top=new FormAttachment(wMinValue,margin);
  fdAllowedValues.bottom=new FormAttachment(wMinValue,200);
  wAllowedValues.setLayoutData(fdAllowedValues);
  wComp.pack();
  Rectangle bounds=wComp.getBounds();
  wSComp.setContent(wComp);
  wSComp.setExpandHorizontal(true);
  wSComp.setExpandVertical(true);
  wSComp.setMinWidth(bounds.width);
  wSComp.setMinHeight(bounds.height);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
