{
  wDescription.setText(Const.NVL(field.getName(),""));
  wFieldName.setText(Const.NVL(field.getFieldName(),""));
  wErrorCode.setText(Const.NVL(field.getErrorCode(),""));
  wErrorDescription.setText(Const.NVL(field.getErrorDescription(),""));
  wDataTypeVerified.setSelection(field.isDataTypeVerified());
  wDataType.setText(ValueMeta.getTypeDesc(field.getDataType()));
  wConversionMask.setText(Const.NVL(field.getConversionMask(),""));
  wDecimalSymbol.setText(Const.NVL(field.getDecimalSymbol(),""));
  wGroupingSymbol.setText(Const.NVL(field.getGroupingSymbol(),""));
  wNullAllowed.setSelection(field.isNullAllowed());
  wOnlyNullAllowed.setSelection(field.isOnlyNullAllowed());
  wOnlyNumeric.setSelection(field.isOnlyNumericAllowed());
  if (field.getMaximumLength() >= 0)   wMaxLength.setText(Integer.toString(field.getMaximumLength()));
 else   wMaxLength.setText("");
  if (field.getMinimumLength() >= 0)   wMinLength.setText(Integer.toString(field.getMinimumLength()));
 else   wMinLength.setText("");
  wMaxValue.setText(Const.NVL(field.getMaximumValue(),""));
  wMinValue.setText(Const.NVL(field.getMinimumValue(),""));
  wStartStringExpected.setText(Const.NVL(field.getStartString(),""));
  wEndStringExpected.setText(Const.NVL(field.getEndString(),""));
  wStartStringDisallowed.setText(Const.NVL(field.getStartStringNotAllowed(),""));
  wEndStringDisallowed.setText(Const.NVL(field.getEndStringNotAllowed(),""));
  wRegExpExpected.setText(Const.NVL(field.getRegularExpression(),""));
  wRegExpDisallowed.setText(Const.NVL(field.getRegularExpressionNotAllowed(),""));
  wAllowedValues.removeAll();
  if (field.getAllowedValues() != null) {
    for (    String allowedValue : field.getAllowedValues()) {
      wAllowedValues.add(Const.NVL(allowedValue,""));
    }
  }
}
