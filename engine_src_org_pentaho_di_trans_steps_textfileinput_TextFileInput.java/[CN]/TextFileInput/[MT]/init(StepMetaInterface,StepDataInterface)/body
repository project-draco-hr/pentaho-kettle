{
  meta=(TextFileInputMeta)smi;
  data=(TextFileInputData)sdi;
  if (super.init(smi,sdi)) {
    initErrorHandling();
    initReplayFactory();
    data.files=meta.getTextFileList(this);
    data.filterProcessor=new TextFileFilterProcessor(meta.getFilter());
    Result previousResult=getTrans().getPreviousResult();
    Map<String,ResultFile> resultFiles=previousResult.getResultFiles();
    if ((previousResult == null || resultFiles == null || resultFiles.size() == 0) && data.files.nrOfMissingFiles() > 0 && !meta.isAcceptingFilenames() && !meta.isErrorIgnored()) {
      logError(BaseMessages.getString(PKG,"TextFileInput.Log.Error.NoFilesSpecified"));
      return false;
    }
    String clusterSize=getVariable(Const.INTERNAL_VARIABLE_CLUSTER_SIZE);
    if (!Const.isEmpty(clusterSize) && Integer.valueOf(clusterSize) > 1) {
      String nr=getVariable(Const.INTERNAL_VARIABLE_SLAVE_SERVER_NUMBER);
      if (log.isDetailed()) {
        logDetailed("Running on slave server #" + nr + " : assuming that each slave reads a dedicated part of the same file(s).");
      }
    }
    data.fileFormatType=meta.getFileFormatTypeNr();
    data.fileType=meta.getFileTypeNr();
    data.separator=environmentSubstitute(meta.getSeparator());
    data.enclosure=environmentSubstitute(meta.getEnclosure());
    data.escapeCharacter=environmentSubstitute(meta.getEscapeCharacter());
    if (!Const.isEmpty(meta.getShortFileNameField())) {
      data.addShortFilename=true;
    }
    if (!Const.isEmpty(meta.getPathField())) {
      data.addPath=true;
    }
    if (!Const.isEmpty(meta.getExtensionField())) {
      data.addExtension=true;
    }
    if (!Const.isEmpty(meta.getSizeField())) {
      data.addSize=true;
    }
    if (!Const.isEmpty(meta.isHiddenField())) {
      data.addIsHidden=true;
    }
    if (!Const.isEmpty(meta.getLastModificationDateField())) {
      data.addLastModificationDate=true;
    }
    if (!Const.isEmpty(meta.getUriField())) {
      data.addUri=true;
    }
    if (!Const.isEmpty(meta.getRootUriField())) {
      data.addRootUri=true;
    }
    return true;
  }
  return false;
}
