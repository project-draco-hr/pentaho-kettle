{
  boolean retval=false;
  try {
    String localfilename=KettleVFS.getFilename(file);
    File source=new File(localfilename);
    if (isDetailed()) {
      if (toUnix) {
        logDetailed(BaseMessages.getString(PKG,"JobDosToUnix.Log.ConvertingFileToUnix",source.getAbsolutePath()));
      }
 else {
        logDetailed(BaseMessages.getString(PKG,"JobDosToUnix.Log.ConvertingFileToDos",source.getAbsolutePath()));
      }
    }
    File tempFile=new File(tempFolder,source.getName() + ".tmp");
    if (isDebug()) {
      logDebug(BaseMessages.getString(PKG,"JobDosToUnix.Log.CreatingTempFile",tempFile.getAbsolutePath()));
    }
    final int FOUR_KB=4 * 1024;
    byte[] buffer=new byte[FOUR_KB];
    try (FileOutputStream out=new FileOutputStream(tempFile);FileInputStream in=new FileInputStream(localfilename)){
      ConversionAutomata automata=new ConversionAutomata(out,toUnix);
      int read;
      while ((read=in.read(buffer)) > 0) {
        automata.convert(buffer,read);
      }
    }
     if (isDebug()) {
      logDebug(BaseMessages.getString(PKG,"JobDosToUnix.Log.DeletingSourceFile",localfilename));
    }
    file.delete();
    if (isDebug()) {
      logDebug(BaseMessages.getString(PKG,"JobDosToUnix.Log.RenamingTempFile",tempFile.getAbsolutePath(),source.getAbsolutePath()));
    }
    tempFile.renameTo(source);
    retval=true;
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"JobDosToUnix.Log.ErrorConvertingFile",file.toString(),e.getMessage()));
  }
  return retval;
}
