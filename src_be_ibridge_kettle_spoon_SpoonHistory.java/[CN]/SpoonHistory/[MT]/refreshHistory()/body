{
  TransMeta transMeta=spoon.getTransMeta();
  if (transMeta != null && transMeta.getName() != null && transMeta.getName().length() > 0) {
    if (transMeta.getLogConnection() != null) {
      if (transMeta.getLogTable() != null && transMeta.getLogTable().length() > 0) {
        Database database=null;
        try {
          database=new Database(transMeta.getLogConnection());
          database.connect();
          Row params=new Row();
          params.addValue(new Value("transname",transMeta.getName()));
          ResultSet resultSet=database.openQuery("SELECT * FROM " + transMeta.getLogTable() + " WHERE TRANSNAME = ? ORDER BY ID_BATCH desc",params);
          rowList=new ArrayList();
          Row row=database.getRow(resultSet);
          while (row != null) {
            rowList.add(row);
            row=database.getRow(resultSet);
          }
          database.closeQuery(resultSet);
          if (rowList.size() > 0) {
            wFields.table.clearAll();
            for (int i=0; i < rowList.size(); i++) {
              row=(Row)rowList.get(i);
              TableItem item=new TableItem(wFields.table,SWT.NONE);
              String batchID=row.getString("ID_BATCH","");
              if (batchID != null)               item.setText(1,batchID);
              item.setText(2,Const.NVL(row.getString("STATUS",""),""));
              item.setText(3,Const.NVL(row.getString("LINES_READ",""),""));
              item.setText(4,Const.NVL(row.getString("LINES_WRITTEN",""),""));
              item.setText(5,Const.NVL(row.getString("LINES_UPDATED",""),""));
              item.setText(6,Const.NVL(row.getString("LINES_INPUT",""),""));
              item.setText(7,Const.NVL(row.getString("LINES_OUTPUT",""),""));
              item.setText(8,Const.NVL(row.getString("ERRORS",""),""));
              item.setText(9,Const.NVL(row.getString("STARTDATE",""),""));
              item.setText(10,Const.NVL(row.getString("ENDDATE",""),""));
              item.setText(11,Const.NVL(row.getString("LOGDATE",""),""));
              item.setText(12,Const.NVL(row.getString("DEPDATE",""),""));
              String replayDate=row.getString("REPLAYDATE","");
              if (replayDate == null)               replayDate=Const.NULL_STRING;
              item.setText(13,replayDate);
            }
            wFields.removeEmptyRows();
            wFields.setRowNums();
            wFields.optWidth(true);
            wFields.table.setSelection(0);
            showLogEntry();
          }
        }
 catch (        KettleException e) {
          new ErrorDialog(this.getShell(),Props.getInstance(),Messages.getString("SpoonHistory.Error.GettingLoggingInfo"),Messages.getString("SpoonHistory.Error.GettingInfoFromLoggingTable"),e);
          wFields.clearAll(false);
        }
 finally {
          if (database != null)           database.disconnect();
        }
      }
 else {
        wFields.clearAll(false);
      }
    }
 else {
      wFields.clearAll(false);
    }
  }
 else {
    wFields.clearAll(false);
  }
}
