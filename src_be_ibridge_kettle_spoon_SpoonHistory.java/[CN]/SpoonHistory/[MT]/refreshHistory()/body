{
  TransMeta transMeta=spoon.getTransMeta();
  if (transMeta != null && transMeta.getName() != null && transMeta.getName().length() > 0) {
    if (transMeta.getLogConnection() != null) {
      if (transMeta.getLogTable() != null && transMeta.getLogTable().length() > 0) {
        Database database=null;
        try {
          database=new Database(transMeta.getLogConnection());
          Row params=new Row();
          params.addValue(new Value("transname",transMeta.getName()));
          ResultSet resultSet=database.openQuery("SELECT * FROM " + transMeta.getLogTable() + " WHERE TRANSNAME = ?",params);
          ArrayList rowList=new ArrayList();
          Row row=database.getRow(resultSet);
          while (row != null) {
            rowList.add(row);
            row=database.getRow(resultSet);
          }
          database.closeQuery(resultSet);
          if (rowList.size() > 0) {
            wFields.table.clearAll();
            for (int i=0; i < rowList.size(); i++) {
              row=(Row)rowList.get(i);
              TableItem item=new TableItem(wFields.table,SWT.NONE);
              item.setText(0,row.getString("TRANSNAME",""));
              item.setText(1,row.getString("TRANSNAME",""));
            }
          }
        }
 catch (        KettleException e) {
          new ErrorDialog(this.getShell(),Props.getInstance(),"Error getting logging information","Error getting information from the logging table",e);
        }
 finally {
          if (database != null)           database.disconnect();
        }
      }
    }
  }
}
