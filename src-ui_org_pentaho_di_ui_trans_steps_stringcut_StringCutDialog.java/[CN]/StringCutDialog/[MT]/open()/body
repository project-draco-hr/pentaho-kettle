{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("StringCutDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("StringCutDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText(Messages.getString("StringCutDialog.Fields.Label"));
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wStepname,2 * margin);
  wlKey.setLayoutData(fdlKey);
  int nrFieldCols=4;
  int nrFieldRows=(input.getFieldInStream() != null ? input.getFieldInStream().length : 1);
  ciKey=new ColumnInfo[nrFieldCols];
  ciKey[0]=new ColumnInfo(Messages.getString("StringCutDialog.ColumnInfo.InStreamField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[1]=new ColumnInfo(Messages.getString("StringCutDialog.ColumnInfo.OutStreamField"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[2]=new ColumnInfo(Messages.getString("StringCutDialog.ColumnInfo.CutFrom"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[3]=new ColumnInfo(Messages.getString("StringCutDialog.ColumnInfo.CutTo"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[2].setUsingVariables(true);
  ciKey[1].setToolTip(Messages.getString("StringCutDialog.ColumnInfo.OutStreamField.Tooltip"));
  ciKey[3].setUsingVariables(true);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrFieldRows,lsMod,props);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(100,-margin);
  fdKey.bottom=new FormAttachment(100,-30);
  wFields.setLayoutData(fdKey);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),new Integer(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          log.logError(toString(),"It was not possible to get the fields from the previous step(s).");
        }
      }
    }
  }
;
  new Thread(runnable).start();
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(Messages.getString("StringCutDialog.GetFields.Button"));
  fdGet=new FormData();
  fdGet.right=new FormAttachment(100,0);
  fdGet.top=new FormAttachment(wStepname,3 * middle);
  wGet.setLayoutData(fdGet);
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,null);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
