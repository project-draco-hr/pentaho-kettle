{
  LogWriterObject logWriterObject=new LogWriterObject(getRealLogSubject(),this,parentJob.getLogLevel());
  LogChannelInterface logChannel=logWriterObject.getLogChannel();
  String message=getRealLogMessage();
  if (Const.isEmpty(message)) {
    return true;
  }
  try {
switch (logWriterObject.getLogLevel()) {
case ERROR:
      logChannel.logError(message + Const.CR);
    break;
case MINIMAL:
  logChannel.logMinimal(message + Const.CR);
break;
case BASIC:
logChannel.logBasic(message + Const.CR);
break;
case DETAILED:
logChannel.logDetailed(message + Const.CR);
break;
case DEBUG:
logChannel.logDebug(message + Const.CR);
break;
case ROWLEVEL:
logChannel.logRowlevel(message + Const.CR);
break;
default :
break;
}
return true;
}
 catch (Exception e) {
result.setNrErrors(1);
log.logError(BaseMessages.getString(PKG,"WriteToLog.Error.Label"),BaseMessages.getString(PKG,"WriteToLog.Error.Description") + " : " + e.toString());
return false;
}
}
