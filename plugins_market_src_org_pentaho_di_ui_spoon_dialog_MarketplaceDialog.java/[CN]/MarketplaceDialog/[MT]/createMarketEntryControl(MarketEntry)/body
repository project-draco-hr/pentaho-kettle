{
  final ScrolledComposite scrollBox=new ScrolledComposite(expandBar,SWT.V_SCROLL);
  scrollBox.setExpandHorizontal(true);
  scrollBox.setExpandVertical(true);
  final Composite composite=new Composite(scrollBox,SWT.NONE);
  composite.setData("marketEntry",marketEntry);
  FormLayout layout=new FormLayout();
  layout.marginHeight=margin;
  layout.marginWidth=margin;
  composite.setLayout(layout);
  props.setLook(composite);
  composite.addListener(SWT.Paint,new Listener(){
    int width=-1;
    public void handleEvent(    Event e){
      int newWidth=composite.getSize().x;
      if (newWidth != width) {
        scrollBox.setMinHeight(composite.computeSize(newWidth,SWT.DEFAULT).y + 15);
        width=newWidth;
      }
    }
  }
);
  scrollBox.setContent(composite);
  Control lastControl=null;
  addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.ID.label"),lastControl);
  lastControl=addRightLabel(composite,Const.NVL(marketEntry.getId(),""),lastControl);
  addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.Name.label"),lastControl);
  lastControl=addRightLabel(composite,Const.NVL(marketEntry.getName(),""),lastControl);
  addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.AvailableVersion.label"),lastControl);
  lastControl=addRightLabel(composite,Const.NVL(marketEntry.getVersion(),""),lastControl);
  if (!Const.isEmpty(marketEntry.getMinPdiVersion())) {
    System.out.println(Const.NVL(marketEntry.getName(),"") + "No " + marketEntry.getMinPdiVersion());
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.MinPdiVersion.label"),lastControl);
    lastControl=addRightLabel(composite,Const.NVL(marketEntry.getMinPdiVersion(),""),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getMaxPdiVersion())) {
    System.out.println(Const.NVL(marketEntry.getName(),"") + "No " + marketEntry.getMaxPdiVersion());
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.MaxPdiVersion.label"),lastControl);
    lastControl=addRightLabel(composite,Const.NVL(marketEntry.getMaxPdiVersion(),""),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getAuthor())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.Author.label"),lastControl);
    lastControl=addRightLabel(composite,Const.NVL(marketEntry.getAuthor(),""),lastControl);
  }
  addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.InstallPath.label"),lastControl);
  lastControl=addRightLabel(composite,new File(Market.buildPluginsFolderPath(marketEntry)).getAbsolutePath(),lastControl);
  if (!Const.isEmpty(marketEntry.getDescription())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.Description.label"),lastControl);
    lastControl=addRightLabel(composite,marketEntry.getDescription(),lastControl);
  }
  addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.PackageURL.label"),lastControl);
  lastControl=addRightURL(composite,marketEntry.getPackageUrl(),lastControl);
  if (!Const.isEmpty(marketEntry.getDocumentationUrl())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.Documentation.label"),lastControl);
    lastControl=addRightURL(composite,marketEntry.getDocumentationUrl(),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getCasesUrl())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.CaseTracking.label"),lastControl);
    lastControl=addRightURL(composite,marketEntry.getCasesUrl(),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getSourceUrl())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.SourceCode.label"),lastControl);
    lastControl=addRightURL(composite,marketEntry.getSourceUrl(),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getLicenseName())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.License.label"),lastControl);
    lastControl=addRightLabel(composite,Const.NVL(marketEntry.getLicenseName(),""),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getLicenseText())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.LicenseDetails.label"),lastControl);
    lastControl=addRightLabel(composite,Const.NVL(marketEntry.getLicenseText(),""),lastControl);
  }
  addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.SupportLevel.label"),lastControl);
  lastControl=addRightLabel(composite,marketEntry.getSupportLevel().getDescription(),lastControl);
  if (!Const.isEmpty(marketEntry.getSupportMessage())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.SupportMessage.label"),lastControl);
    lastControl=addRightLabel(composite,marketEntry.getSupportMessage(),lastControl);
  }
  if (!Const.isEmpty(marketEntry.getSupportUrl())) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.SupportURL.label"),lastControl);
    lastControl=addRightURL(composite,marketEntry.getSupportUrl(),lastControl);
  }
  Market.discoverInstalledVersion(marketEntry);
  if (marketEntry.isInstalled()) {
    addLeftLabel(composite,BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.InstalledVersion.label"),lastControl);
    lastControl=addRightLabel(composite,marketEntry.getInstalledVersion(),lastControl);
  }
  final Button installedButton=new Button(composite,SWT.PUSH);
  installedButton.setData("id","installedButton");
  setButtonLabel(installedButton,marketEntry.isInstalled());
  installedButton.addSelectionListener(installSelectionListener);
  final Button upgradeButton=new Button(composite,SWT.PUSH);
  upgradeButton.setData("id","upgradeButton");
  upgradeButton.setText(BaseMessages.getString(MARKET_PKG,"MarketplacesDialog.UpgradeTo.button",marketEntry.getVersion()));
  upgradeButton.addSelectionListener(upgradeSelectionListener);
  BaseStepDialog.positionBottomButtons(composite,new Button[]{installedButton,upgradeButton},margin,lastControl);
  boolean showUpgradeButton=marketEntry.isInstalled() && (marketEntry.getInstalledVersion() == null || marketEntry.getVersion() == null || marketEntry.getInstalledVersion().compareTo(marketEntry.getVersion()) < 0);
  upgradeButton.setVisible(showUpgradeButton);
  Label wlName=new Label(composite,SWT.LEFT);
  props.setLook(wlName);
  wlName.setText("Name:");
  FormData fdlName=new FormData();
  fdlName.top=new FormAttachment(0,0);
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,0);
  wlName.setLayoutData(fdlName);
  return scrollBox;
}
