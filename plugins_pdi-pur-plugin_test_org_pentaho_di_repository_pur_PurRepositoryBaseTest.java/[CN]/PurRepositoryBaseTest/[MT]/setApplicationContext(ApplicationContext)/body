{
  unifiedRepository=applicationContext.getBean("unifiedRepository",IUnifiedRepository.class);
  tenantManager=applicationContext.getBean("tenantMgrProxy",ITenantManager.class);
  userRoleDao=applicationContext.getBean("userRoleDao",IUserRoleDao.class);
  authorizationPolicy=applicationContext.getBean("authorizationPolicy",IAuthorizationPolicy.class);
  roleBindingDaoTarget=(IRoleAuthorizationPolicyRoleBindingDao)applicationContext.getBean("roleAuthorizationPolicyRoleBindingDaoTarget");
  SessionFactory jcrSessionFactory=(SessionFactory)applicationContext.getBean("jcrSessionFactory");
  testJcrTemplate=new JcrTemplate(jcrSessionFactory);
  testJcrTemplate.setAllowCreate(true);
  testJcrTemplate.setExposeNativeSession(true);
  txnTemplate=applicationContext.getBean("jcrTransactionTemplate",TransactionTemplate.class);
  repositoryFileDao=(IRepositoryFileDao)applicationContext.getBean("repositoryFileDao");
  superAdminRole=applicationContext.getBean("superAdminAuthorityName",String.class);
  repositoryAdmin=applicationContext.getBean("repositoryAdminUsername",String.class);
  systemAdmin=(String)applicationContext.getBean("superAdminUserName");
  tenantAdminRole=applicationContext.getBean("singleTenantAdminAuthorityName",String.class);
  tenantAuthenticatedRole=applicationContext.getBean("singleTenantAuthenticatedAuthorityName",String.class);
  TestPrincipalProvider.userRoleDao=userRoleDao;
  TestPrincipalProvider.adminCredentialsStrategy=(CredentialsStrategy)applicationContext.getBean("jcrAdminCredentialsStrategy");
  TestPrincipalProvider.repository=(Repository)applicationContext.getBean("jcrRepository");
  doSetApplicationContext(applicationContext);
}
