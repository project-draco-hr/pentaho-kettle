{
  JobHistoryLogTab model=models[index];
  LogTableInterface logTable=model.logTable;
  if (logTable.isDefined()) {
    String schemaTable=logTable.getQuotedSchemaTableCombination();
    DatabaseMeta databaseMeta=logTable.getDatabaseMeta();
    MessageBox mb=new MessageBox(jobGraph.getShell(),SWT.YES | SWT.NO | SWT.ICON_QUESTION);
    mb.setMessage(BaseMessages.getString(PKG,"JobGraph.Dialog.AreYouSureYouWantToRemoveAllLogEntries.Message",schemaTable));
    mb.setText(BaseMessages.getString(PKG,"JobGraph.Dialog.AreYouSureYouWantToRemoveAllLogEntries.Title"));
    if (mb.open() == SWT.YES) {
      Database database=new Database(loggingObject,databaseMeta);
      try {
        database.connect();
        database.truncateTable(schemaTable);
      }
 catch (      Exception e) {
        new ErrorDialog(jobGraph.getShell(),BaseMessages.getString(PKG,"JobGraph.Dialog.ErrorClearningLoggingTable.Title"),BaseMessages.getString(PKG,"JobGraph.Dialog.AreYouSureYouWantToRemoveAllLogEntries.Message"),e);
      }
 finally {
        database.disconnect();
        refreshHistory();
        if (model.logDisplayText != null) {
          model.logDisplayText.setText("");
        }
      }
    }
  }
}
