{
  this.status=UiPostActionStatus.NONE;
  Database theDatabase=new Database(null,this.model.getDatabaseMeta());
  try {
    theDatabase.connect();
    GetDatabaseInfoProgressDialog gdipd=new GetDatabaseInfoProgressDialog((Shell)this.dbExplorerDialog.getRootObject(),this.model.getDatabaseMeta());
    DatabaseMetaInformation dmi=gdipd.open();
    DatabaseExplorerNode theDatabaseNode=new DatabaseExplorerNode();
    theDatabaseNode.setName(this.model.getDatabaseMeta().getName());
    theDatabaseNode.setImage(DATABASE_IMAGE);
    this.model.getDatabase().add(theDatabaseNode);
    DatabaseExplorerNode theSchemasNode=new DatabaseExplorerNode();
    theSchemasNode.setName(STRING_SCHEMAS);
    theSchemasNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theSchemasNode);
    DatabaseExplorerNode theTablesNode=new DatabaseExplorerNode();
    theTablesNode.setName(STRING_TABLES);
    theTablesNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theTablesNode);
    DatabaseExplorerNode theViewsNode=new DatabaseExplorerNode();
    theViewsNode.setName(STRING_VIEWS);
    theViewsNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theViewsNode);
    DatabaseExplorerNode theSynonymsNode=new DatabaseExplorerNode();
    theSynonymsNode.setName(STRING_SYNONYMS);
    theSynonymsNode.setImage(FOLDER_IMAGE);
    theDatabaseNode.add(theSynonymsNode);
    Schema[] schemas=dmi.getSchemas();
    if (schemas != null) {
      DatabaseExplorerNode theSchemaNode=null;
      for (int i=0; i < schemas.length; i++) {
        theSchemaNode=new DatabaseExplorerNode();
        theSchemaNode.setName(schemas[i].getSchemaName());
        theSchemaNode.setImage(SCHEMA_IMAGE);
        theSchemaNode.setIsSchema(true);
        theSchemasNode.add(theSchemaNode);
        String[] theTableNames=schemas[i].getItems();
        if (theTableNames != null) {
          for (int i2=0; i2 < theTableNames.length; i2++) {
            DatabaseExplorerNode theTableNode=new DatabaseExplorerNode();
            theTableNode.setIsTable(true);
            theTableNode.setSchema(schemas[i].getSchemaName());
            theTableNode.setName(theTableNames[i2]);
            theTableNode.setImage(TABLE_IMAGE);
            theSchemaNode.add(theTableNode);
            theTableNode.setParent(theSchemaNode);
          }
        }
      }
    }
    Map<String,Collection<String>> tableMap=dmi.getTableMap();
    List<String> tableKeys=new ArrayList<String>(tableMap.keySet());
    Collections.sort(tableKeys);
    for (    String schema : tableKeys) {
      List<String> tables=new ArrayList<String>(tableMap.get(schema));
      Collections.sort(tables);
      for (      String table : tables) {
        DatabaseExplorerNode theTableNode=new DatabaseExplorerNode();
        theTableNode.setIsTable(true);
        theTableNode.setName(table);
        theTableNode.setImage(TABLE_IMAGE);
        theTablesNode.add(theTableNode);
      }
    }
    Map<String,Collection<String>> viewMap=dmi.getViewMap();
    if (viewMap != null) {
      List<String> viewKeys=new ArrayList<String>(viewMap.keySet());
      Collections.sort(viewKeys);
      for (      String schema : viewKeys) {
        List<String> views=new ArrayList<String>(viewMap.get(schema));
        Collections.sort(views);
        for (        String view : views) {
          DatabaseExplorerNode theViewNode=new DatabaseExplorerNode();
          theViewNode.setIsTable(true);
          theViewNode.setName(view);
          theViewNode.setImage(TABLE_IMAGE);
          theViewsNode.add(theViewNode);
        }
      }
    }
    Map<String,Collection<String>> synonymMap=dmi.getSynonymMap();
    if (synonymMap != null) {
      List<String> synonymKeys=new ArrayList<String>(synonymMap.keySet());
      Collections.sort(synonymKeys);
      for (      String schema : synonymKeys) {
        List<String> synonyms=new ArrayList<String>(synonymMap.get(schema));
        Collections.sort(synonyms);
        for (        String synonym : synonyms) {
          DatabaseExplorerNode theSynonymNode=new DatabaseExplorerNode();
          theSynonymNode.setIsTable(true);
          theSynonymNode.setName(synonym);
          theSynonymNode.setImage(TABLE_IMAGE);
          theSynonymsNode.add(theSynonymNode);
        }
      }
    }
  }
 catch (  Exception e) {
    this.status=UiPostActionStatus.ERROR;
    theDatabase.disconnect();
    new ErrorDialog(shell,"Error","Unexpected explorer error:",e);
    this.status=UiPostActionStatus.ERROR_DIALOG_SHOWN;
    return;
  }
 finally {
    if (theDatabase != null) {
      try {
        theDatabase.disconnect();
      }
 catch (      Exception ignored) {
      }
      theDatabase=null;
    }
  }
  this.status=UiPostActionStatus.OK;
}
