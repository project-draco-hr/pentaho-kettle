{
  List<MetricsDuration> durations=MetricsUtil.getAllDurations(jobGraph.job.getLogChannelId());
  if (Const.isEmpty(durations)) {
    return;
  }
  Collections.sort(durations,new Comparator<MetricsDuration>(){
    @Override public int compare(    MetricsDuration o1,    MetricsDuration o2){
      return o1.getDate().compareTo(o2.getDate());
    }
  }
);
  Rectangle bounds=canvas.getBounds();
  if (bounds.width <= 0 || bounds.height <= 0) {
    return;
  }
  if (jobGraph.job == null) {
    image=null;
    return;
  }
  if (image != null && (System.currentTimeMillis() - lastRefreshTime) < 5000) {
    return;
  }
  lastRefreshTime=System.currentTimeMillis();
  if (image != null) {
    image.dispose();
    image=null;
  }
  org.eclipse.swt.graphics.Point textExtent=canvasGc.textExtent("AagKkiw");
  int barHeight=textExtent.y + 8;
  bounds.height=Math.max(durations.size() * barHeight,bounds.height);
  canvas.setSize(bounds.width,bounds.height);
  SWTGC gc=new SWTGC(Display.getCurrent(),new Point(bounds.width,bounds.height),PropsUI.getInstance().getIconSize());
  MetricsPainter painter=new MetricsPainter(gc,barHeight);
  drawAreas=painter.paint(durations);
  image=(Image)gc.getImage();
  sMetricsComposite.layout(true,true);
  gc.dispose();
  canvas.redraw();
}
