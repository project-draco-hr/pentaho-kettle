{
  boolean insert=true;
  if (transGridView == null || transGridView.isDisposed())   return;
  if (refresh_busy)   return;
  refresh_busy=true;
  Table table=transGridView.table;
  long time=new Date().getTime();
  long msSinceLastUpdate=time - lastUpdateView;
  if (transGraph.trans != null && msSinceLastUpdate > UPDATE_TIME_VIEW) {
    lastUpdateView=time;
    int nrSteps=transGraph.trans.nrSteps();
    if (hideInactiveSteps)     nrSteps=transGraph.trans.nrActiveSteps();
    if (table.getItemCount() != nrSteps) {
      table.removeAll();
    }
 else {
      insert=false;
    }
    if (nrSteps == 0) {
      if (table.getItemCount() == 0)       new TableItem(table,SWT.NONE);
    }
    int nr=0;
    for (int i=0; i < transGraph.trans.nrSteps(); i++) {
      BaseStep baseStep=transGraph.trans.getRunThread(i);
      if ((hideInactiveSteps && baseStep.isAlive()) || (!hideInactiveSteps && baseStep.getStatus() != StepDataInterface.STATUS_EMPTY)) {
        StepStatus stepStatus=new StepStatus(baseStep);
        TableItem ti;
        if (insert) {
          ti=new TableItem(table,SWT.NONE);
        }
 else {
          ti=table.getItem(nr);
        }
        String fields[]=stepStatus.getTransLogFields();
        for (int f=1; f < fields.length; f++) {
          if (!fields[f].equalsIgnoreCase(ti.getText(f))) {
            ti.setText(f,fields[f]);
          }
        }
        if (baseStep.getErrors() > 0) {
          ti.setBackground(GUIResource.getInstance().getColorRed());
        }
 else {
          ti.setBackground(GUIResource.getInstance().getColorWhite());
        }
        nr++;
      }
    }
    transGridView.setRowNums();
    transGridView.optWidth(true);
  }
 else {
    if (table.getItemCount() == 0)     new TableItem(table,SWT.NONE);
  }
  refresh_busy=false;
}
