{
  try {
    filename=Const.NVL(XMLHandler.getTagValue(stepnode,"filename"),"");
    addResultFile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"addResultFile"));
    nrRowsToSkip=Const.NVL(XMLHandler.getTagValue(stepnode,"nrRowsToSkip"),"0");
    rowLimit=Const.NVL(XMLHandler.getTagValue(stepnode,"rowLimit"),"0");
    defaultStringLen=Const.NVL(XMLHandler.getTagValue(stepnode,"defaultStringLen"),DEFAULT_STRING_LEN);
    encoding=Const.NVL(XMLHandler.getTagValue(stepnode,"encoding"),DEFAULT_ENCODING);
    enableNamespaces="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"enableNamespaces"));
    enableTrim="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"enableTrim"));
    includeFilenameField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeFilenameField"));
    filenameField=Const.NVL(XMLHandler.getTagValue(stepnode,"filenameField"),filenameField);
    includeRowNumberField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeRowNumberField"));
    rowNumberField=Const.NVL(XMLHandler.getTagValue(stepnode,"rowNumberField"),rowNumberField);
    includeXmlDataTypeNumericField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeDataTypeNumericField"));
    xmlDataTypeNumericField=Const.NVL(XMLHandler.getTagValue(stepnode,"dataTypeNumericField"),xmlDataTypeNumericField);
    includeXmlDataTypeDescriptionField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeDataTypeDescriptionField"));
    xmlDataTypeDescriptionField=Const.NVL(XMLHandler.getTagValue(stepnode,"dataTypeDescriptionField"),xmlDataTypeDescriptionField);
    includeXmlLocationLineField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlLocationLineField"));
    xmlLocationLineField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlLocationLineField"),xmlLocationLineField);
    includeXmlLocationColumnField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlLocationColumnField"));
    xmlLocationColumnField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlLocationColumnField"),xmlLocationColumnField);
    includeXmlElementIDField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlElementIDField"));
    xmlElementIDField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlElementIDField"),xmlElementIDField);
    includeXmlParentElementIDField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlParentElementIDField"));
    xmlParentElementIDField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlParentElementIDField"),xmlParentElementIDField);
    includeXmlElementLevelField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlElementLevelField"));
    xmlElementLevelField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlElementLevelField"),xmlElementLevelField);
    includeXmlPathField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlPathField"));
    xmlPathField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlPathField"),xmlPathField);
    includeXmlParentPathField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlParentPathField"));
    xmlParentPathField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlParentPathField"),xmlParentPathField);
    includeXmlDataNameField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlDataNameField"));
    xmlDataNameField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlDataNameField"),xmlDataNameField);
    includeXmlDataValueField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"includeXmlDataValueField"));
    xmlDataValueField=Const.NVL(XMLHandler.getTagValue(stepnode,"xmlDataValueField"),xmlDataValueField);
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
