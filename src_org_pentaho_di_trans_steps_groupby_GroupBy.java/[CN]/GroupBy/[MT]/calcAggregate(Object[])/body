{
  for (int i=0; i < data.subjectnrs.length; i++) {
    Object subj=r[data.subjectnrs[i]];
    ValueMetaInterface subjMeta=data.inputRowMeta.getValueMeta(data.subjectnrs[i]);
    Object value=data.agg[i];
    ValueMetaInterface valueMeta=data.aggMeta.getValueMeta(i);
switch (meta.getAggregateType()[i]) {
case GroupByMeta.TYPE_GROUP_SUM:
      data.agg[i]=ValueDataUtil.sum(valueMeta,value,subjMeta,subj);
    break;
case GroupByMeta.TYPE_GROUP_AVERAGE:
  if (!subjMeta.isNull(subj)) {
    data.agg[i]=ValueDataUtil.sum(valueMeta,value,subjMeta,subj);
    data.counts[i]++;
  }
break;
case GroupByMeta.TYPE_GROUP_STANDARD_DEVIATION:
if (!subjMeta.isNull(subj)) {
data.counts[i]++;
double n=data.counts[i];
double x=subjMeta.getNumber(subj);
double sum=(Double)value;
double mean=data.mean[i];
double delta=x - mean;
mean=mean + (delta / n);
sum=sum + delta * (x - mean);
data.mean[i]=mean;
data.agg[i]=sum;
}
break;
case GroupByMeta.TYPE_GROUP_COUNT_DISTINCT:
if (!subjMeta.isNull(subj)) {
if (data.distinctObjs == null) {
data.distinctObjs=new Set[meta.getSubjectField().length];
}
if (data.distinctObjs[i] == null) {
data.distinctObjs[i]=new TreeSet<Object>();
}
Object obj=subjMeta.convertToNormalStorageType(subj);
if (!data.distinctObjs[i].contains(obj)) {
data.distinctObjs[i].add(obj);
data.agg[i]=(Long)value + 1;
}
}
case GroupByMeta.TYPE_GROUP_COUNT_ALL:
if (!subjMeta.isNull(subj)) {
data.counts[i]++;
}
break;
case GroupByMeta.TYPE_GROUP_MIN:
if (subjMeta.isSortedDescending()) {
if (subjMeta.compare(value,valueMeta,subj) < 0) data.agg[i]=subj;
}
 else {
if (subjMeta.compare(subj,valueMeta,value) < 0) data.agg[i]=subj;
}
break;
case GroupByMeta.TYPE_GROUP_MAX:
if (subjMeta.isSortedDescending()) {
if (subjMeta.compare(value,valueMeta,subj) > 0) data.agg[i]=subj;
}
 else {
if (subjMeta.compare(subj,valueMeta,value) > 0) data.agg[i]=subj;
}
break;
case GroupByMeta.TYPE_GROUP_FIRST:
if (!(subj == null) && value == null) data.agg[i]=subj;
break;
case GroupByMeta.TYPE_GROUP_LAST:
if (!(subj == null)) data.agg[i]=subj;
break;
case GroupByMeta.TYPE_GROUP_FIRST_INCL_NULL:
break;
case GroupByMeta.TYPE_GROUP_LAST_INCL_NULL:
data.agg[i]=subj;
break;
case GroupByMeta.TYPE_GROUP_CONCAT_COMMA:
if (!(subj == null)) {
String vString=valueMeta.getString(value);
if (vString.length() > 0) vString=vString + ", ";
data.agg[i]=vString + subjMeta.getString(subj);
}
break;
case GroupByMeta.TYPE_GROUP_CONCAT_STRING:
if (!(subj == null)) {
String separator="";
if (!Const.isEmpty(meta.getValueField()[i])) separator=environmentSubstitute(meta.getValueField()[i]);
String vString=valueMeta.getString(value);
if (vString.length() > 0) vString=vString + separator;
data.agg[i]=vString + subjMeta.getString(subj);
}
break;
default :
break;
}
}
}
