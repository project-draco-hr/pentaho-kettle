{
  tree.removeAll();
  for (int m=0; m < metaStoreList.size(); m++) {
    IMetaStore metaStore=metaStoreList.get(m);
    TreeItem metaStoreItem=new TreeItem(tree,SWT.NONE);
    metaStoreItem.setText(0,Const.NVL(metaStore.getName(),"metastore-" + (m + 1)));
    metaStoreItem.setText(1,Const.NVL(metaStore.getDescription(),""));
    List<String> namespaces=metaStore.getNamespaces();
    for (    String namespace : namespaces) {
      TreeItem namespaceItem=new TreeItem(metaStoreItem,SWT.NONE);
      namespaceItem.setText(0,Const.NVL(namespace,""));
      List<IMetaStoreElementType> elementTypes=metaStore.getElementTypes(namespace);
      for (      IMetaStoreElementType elementType : elementTypes) {
        TreeItem elementTypeItem=new TreeItem(namespaceItem,SWT.NONE);
        elementTypeItem.setText(0,Const.NVL(elementType.getName(),""));
        elementTypeItem.setText(1,Const.NVL(elementType.getDescription(),""));
        List<IMetaStoreElement> elements=metaStore.getElements(namespace,elementType);
        for (        final IMetaStoreElement element : elements) {
          TreeItem elementItem=new TreeItem(elementTypeItem,SWT.NONE);
          elementItem.setText(0,Const.NVL(element.getName(),""));
          elementItem.setText(2,Const.NVL(element.getId(),""));
          elementItem.addListener(SWT.Selection,new Listener(){
            @Override public void handleEvent(            Event event){
              log.logBasic("Selected : " + element.getName());
            }
          }
);
          addAttributesToTree(elementItem,element);
        }
      }
    }
  }
  TreeUtil.setOptimalWidthOnColumns(tree);
}
