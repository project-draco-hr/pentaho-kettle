{
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  shell.setImage(GUIResource.getInstance().getImageSpoon());
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"MetaStoreExplorerDialog.Dialog.Title"));
  int margin=Const.MARGIN;
  closeButton=new Button(shell,SWT.PUSH);
  closeButton.setText(BaseMessages.getString(PKG,"System.Button.Close"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{closeButton},margin,null);
  closeButton.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      close();
    }
  }
);
  tree=new Tree(shell,SWT.SINGLE | SWT.BORDER | SWT.H_SCROLL| SWT.V_SCROLL);
  props.setLook(tree);
  tree.setHeaderVisible(true);
  FormData treeFormData=new FormData();
  treeFormData.left=new FormAttachment(0,0);
  treeFormData.top=new FormAttachment(0,0);
  treeFormData.right=new FormAttachment(100,0);
  treeFormData.bottom=new FormAttachment(closeButton,-margin * 2);
  tree.setLayoutData(treeFormData);
  TreeColumn keyColumn=new TreeColumn(tree,SWT.LEFT);
  keyColumn.setText("Metastore, Namespace, Element type, element name");
  keyColumn.setWidth(300);
  TreeColumn valueColumn=new TreeColumn(tree,SWT.LEFT);
  valueColumn.setText("Description or value");
  valueColumn.setWidth(300);
  TreeColumn idColumn=new TreeColumn(tree,SWT.LEFT);
  idColumn.setText("id");
  idColumn.setWidth(300);
  tree.addMenuDetectListener(new MenuDetectListener(){
    @Override public void menuDetected(    MenuDetectEvent event){
      if (tree.getSelectionCount() < 1)       return;
      TreeItem treeItem=tree.getSelection()[0];
      if (treeItem != null) {
        String[] labels=ConstUI.getTreeStrings(treeItem);
        int depth=ConstUI.getTreeLevel(treeItem);
        if (depth == 3) {
          final String metaStoreName=labels[0];
          final String namespace=labels[1];
          final String elementTypeName=labels[2];
          final String elementName=labels[3];
          Menu menu=new Menu(tree);
          MenuItem removeItem=new MenuItem(menu,SWT.POP_UP);
          removeItem.setText("Remove element");
          removeItem.addSelectionListener(new SelectionAdapter(){
            @Override public void widgetSelected(            SelectionEvent arg0){
              removeElement(metaStoreName,namespace,elementTypeName,elementName);
            }
          }
);
          tree.setMenu(menu);
          menu.setVisible(true);
        }
      }
    }
  }
);
  TreeMemory.addTreeListener(tree,META_STORE_EXPLORER_DIALOG_TREE);
  try {
    refreshTree();
  }
 catch (  Exception e) {
    new ErrorDialog(shell,"Error","Unexpected error displaying metastore information",e);
  }
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      close();
    }
  }
);
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
}
