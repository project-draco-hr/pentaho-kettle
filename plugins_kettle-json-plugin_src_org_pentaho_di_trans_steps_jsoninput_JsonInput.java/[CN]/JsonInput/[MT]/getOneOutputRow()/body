{
  if (meta.isInFields() && !data.hasFirstRow) {
    return null;
  }
  Object[] rawReaderRow=null;
  while ((rawReaderRow=data.readerRowSet.getRow()) == null) {
    if (data.inputs.hasNext() && data.readerRowSet.isDone()) {
      try (InputStream nextIn=data.inputs.next()){
        boolean parsed=parseNextInputToRowSet(nextIn);
        if (parsed && shouldOutputEmpty()) {
          return buildBaseOutputRow();
        }
      }
 catch (      IOException e) {
        logError(BaseMessages.getString(PKG,"JsonInput.Log.UnexpectedError",e.toString()),e);
        incrementErrors();
      }
    }
 else {
      if (isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"JsonInput.Log.FinishedProcessing"));
      }
      return null;
    }
  }
  Object[] outputRow=rowOutputConverter.getRow(buildBaseOutputRow(),rawReaderRow,data);
  addExtraFields(outputRow,data);
  return outputRow;
}
