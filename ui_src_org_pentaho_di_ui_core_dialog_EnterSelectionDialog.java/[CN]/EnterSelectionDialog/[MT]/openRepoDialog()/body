{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | (modal ? SWT.APPLICATION_MODAL | SWT.SHEET : SWT.NONE) | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(shellText);
  shell.setImage(GUIResource.getInstance().getImageSpoon());
  wlSelection=new Label(shell,SWT.NONE);
  wlSelection.setText(lineText);
  props.setLook(wlSelection);
  fdlSelection=new FormData();
  fdlSelection.left=new FormAttachment(0,10);
  fdlSelection.top=new FormAttachment(0,10);
  wlSelection.setLayoutData(fdlSelection);
  int options=SWT.LEFT | SWT.BORDER | SWT.V_SCROLL| SWT.H_SCROLL;
  wSelection=new List(shell,options);
  String pentRepo="";
  boolean found=false;
  for (int i=0; i < choices.length; i++) {
    if (choices[i] != null && choices[i].startsWith(BaseMessages.getString(PKG,"EnterSelectionDialog.PentahoRepo"))) {
      pentRepo=choices[i];
      found=true;
    }
 else {
      wSelection.add(choices[i]);
    }
  }
  if (found) {
    wSelection.add(pentRepo,0);
    wSelection.select(0);
  }
  int width=75;
  Label separator=new Label(shell,SWT.SEPARATOR | SWT.HORIZONTAL);
  FormData fd_separator=new FormData();
  fd_separator.top=new FormAttachment(wSelection,35);
  fd_separator.right=new FormAttachment(100,-10);
  fd_separator.left=new FormAttachment(0,10);
  separator.setLayoutData(fd_separator);
  Button btnHelp=new Button(shell,SWT.PUSH);
  btnHelp.setImage(GUIResource.getInstance().getImageHelpWeb());
  FormData fd_btnHelp=new FormData();
  fd_btnHelp.top=new FormAttachment(separator,12);
  fd_btnHelp.left=new FormAttachment(0,10);
  fd_btnHelp.bottom=new FormAttachment(100,-10);
  fd_btnHelp.width=width;
  btnHelp.setLayoutData(fd_btnHelp);
  btnHelp.setText(BaseMessages.getString(PKG,"System.Button.Help"));
  btnHelp.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent arg0){
      HelpUtils.openHelpDialog(shell,BaseMessages.getString(PKG,"EnterSelectionDialog.Help.Title"),Const.getDocUrl(BaseMessages.getString(PKG,"EnterSelectionDialog.Help")),BaseMessages.getString(PKG,"EnterSelectionDialog.Help.Header"));
    }
  }
);
  wCancel=new Button(shell,SWT.PUSH);
  FormData fd_wCancel=new FormData();
  fd_wCancel.top=new FormAttachment(separator,12);
  fd_wCancel.right=new FormAttachment(100,-10);
  fd_wCancel.bottom=new FormAttachment(100,-10);
  fd_wCancel.width=width;
  wCancel.setLayoutData(fd_wCancel);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel").trim());
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  FormData fd_wOK=new FormData();
  fd_wOK.top=new FormAttachment(separator,12);
  fd_wOK.right=new FormAttachment(wCancel,-5);
  fd_wOK.bottom=new FormAttachment(100,-10);
  fd_wOK.width=width;
  wOK.setLayoutData(fd_wOK);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  fdSelection=new FormData();
  fdSelection.left=new FormAttachment(0,10);
  fdSelection.right=new FormAttachment(100,-10);
  fdSelection.top=new FormAttachment(wlSelection,10);
  fdSelection.bottom=new FormAttachment(separator,-12);
  wSelection.setLayoutData(fdSelection);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wSelection.addSelectionListener(lsDef);
  wSelection.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.character == SWT.CR) {
        ok();
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  wOK.setFocus();
  shell.pack();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return selection;
}
