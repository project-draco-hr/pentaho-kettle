{
  if (Const.isEmpty(name))   return methodCodes[PARTITIONING_METHOD_NONE];
  for (int i=0; i < methodDescriptions.length; i++) {
    if (methodDescriptions[i].equalsIgnoreCase(name)) {
      return methodCodes[i];
    }
  }
  for (int i=0; i < methodCodes.length; i++) {
    if (methodCodes[i].equalsIgnoreCase(name))     return methodCodes[i];
  }
  PluginRegistry registry=PluginRegistry.getInstance();
  PluginInterface plugin=registry.findPluginWithName(PartitionerPluginType.getInstance(),name);
  if (plugin != null) {
    return name;
  }
  plugin=registry.findPluginWithId(PartitionerPluginType.getInstance(),name);
  if (plugin != null) {
    return name;
  }
  return methodCodes[PARTITIONING_METHOD_NONE];
}
