{
  MergeJoinMeta meta=new MergeJoinMeta();
  meta.allocate(2,3);
  meta.setKeyFields1(new String[]{"kf1-1","kf1-2"});
  meta.setKeyFields2(new String[]{"kf2-1","kf2-2","kf2-3"});
  meta.setJoinType("INNER");
  MergeJoinMeta aClone=(MergeJoinMeta)meta.clone();
  assertFalse(aClone == meta);
  assertTrue(Arrays.equals(meta.getKeyFields1(),aClone.getKeyFields1()));
  assertTrue(Arrays.equals(meta.getKeyFields2(),aClone.getKeyFields2()));
  assertEquals(meta.getJoinType(),aClone.getJoinType());
  assertNotNull(aClone.getStepIOMeta());
  assertFalse(meta.getStepIOMeta() == aClone.getStepIOMeta());
  List<StreamInterface> infoStreams=meta.getStepIOMeta().getInfoStreams();
  List<StreamInterface> cloneInfoStreams=aClone.getStepIOMeta().getInfoStreams();
  assertFalse(infoStreams == cloneInfoStreams);
  int streamSize=infoStreams.size();
  assertTrue(streamSize == cloneInfoStreams.size());
  for (int i=0; i < streamSize; i++) {
    assertFalse(infoStreams.get(i) == cloneInfoStreams.get(i));
  }
}
