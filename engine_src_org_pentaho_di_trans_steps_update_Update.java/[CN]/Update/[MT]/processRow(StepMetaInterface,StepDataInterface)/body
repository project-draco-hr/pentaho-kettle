{
  meta=(UpdateMeta)smi;
  data=(UpdateData)sdi;
  boolean sendToErrorRow=false;
  String errorMessage=null;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    data.schemaTable=meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),environmentSubstitute(meta.getTableName()));
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"Update.Log.CheckingRow") + getInputRowMeta().getString(r));
    ArrayList<Integer> keynrs=new ArrayList<Integer>(meta.getKeyStream().length);
    ArrayList<Integer> keynrs2=new ArrayList<Integer>(meta.getKeyStream().length);
    for (int i=0; i < meta.getKeyStream().length; i++) {
      int keynr=getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);
      if (keynr < 0 && !"IS NULL".equalsIgnoreCase(meta.getKeyCondition()[i]) && !"IS NOT NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(BaseMessages.getString(PKG,"Update.Exception.FieldRequired",meta.getKeyStream()[i]));
      }
      keynrs.add(keynr);
      if ("= ~NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        keynrs.add(keynr);
        keynrs2.add(-1);
      }
      int keynr2=getInputRowMeta().indexOfValue(meta.getKeyStream2()[i]);
      if (keynr2 < 0 && "BETWEEN".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(BaseMessages.getString(PKG,"Update.Exception.FieldRequired",meta.getKeyStream2()[i]));
      }
      keynrs2.add(keynr2);
      if (log.isDebug())       logDebug(BaseMessages.getString(PKG,"Update.Log.FieldHasDataNumbers",meta.getKeyStream()[i]) + "" + keynrs.get(keynrs.size() - 1));
    }
    data.keynrs=ArrayUtils.toPrimitive(keynrs.toArray(new Integer[0]));
    data.keynrs2=ArrayUtils.toPrimitive(keynrs2.toArray(new Integer[0]));
    data.valuenrs=new int[meta.getUpdateLookup().length];
    for (int i=0; i < meta.getUpdateLookup().length; i++) {
      data.valuenrs[i]=getInputRowMeta().indexOfValue(meta.getUpdateStream()[i]);
      if (data.valuenrs[i] < 0) {
        throw new KettleStepException(BaseMessages.getString(PKG,"Update.Exception.FieldRequired",meta.getUpdateStream()[i]));
      }
      if (log.isDebug())       logDebug(BaseMessages.getString(PKG,"Update.Log.FieldHasDataNumbers",meta.getUpdateStream()[i]) + "" + data.valuenrs[i]);
    }
    if (meta.isSkipLookup()) {
      data.lookupParameterRowMeta=new RowMeta();
      for (int i=0; i < meta.getKeyLookup().length; i++) {
        if ("BETWEEN".equalsIgnoreCase(meta.getKeyCondition()[i])) {
          data.lookupParameterRowMeta.addValueMeta(getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]));
          data.lookupParameterRowMeta.addValueMeta(getInputRowMeta().searchValueMeta(meta.getKeyStream2()[i]));
        }
 else {
          if ("= ~NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
            data.lookupParameterRowMeta.addValueMeta(getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]));
            data.lookupParameterRowMeta.addValueMeta(getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]).clone());
          }
 else           if (!"IS NULL".equalsIgnoreCase(meta.getKeyCondition()[i]) && !"IS NOT NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
            data.lookupParameterRowMeta.addValueMeta(getInputRowMeta().searchValueMeta(meta.getKeyStream()[i]));
          }
        }
      }
    }
 else {
      setLookup(getInputRowMeta());
    }
    prepareUpdate(getInputRowMeta());
  }
  try {
    Object[] outputRow=lookupValues(getInputRowMeta(),r);
    if (outputRow != null)     putRow(data.outputRowMeta,outputRow);
    if (checkFeedback(getLinesRead())) {
      if (log.isBasic())       logBasic(BaseMessages.getString(PKG,"Update.Log.LineNumber") + getLinesRead());
    }
  }
 catch (  KettleException e) {
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(BaseMessages.getString(PKG,"Update.Log.ErrorInStep"),e);
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,null,"UPD001");
    }
  }
  return true;
}
