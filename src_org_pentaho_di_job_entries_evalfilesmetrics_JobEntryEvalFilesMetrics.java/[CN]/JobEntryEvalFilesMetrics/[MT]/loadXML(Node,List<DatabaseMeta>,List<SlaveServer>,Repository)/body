{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    Node fields=XMLHandler.getSubNode(entrynode,"fields");
    int nrFields=XMLHandler.countNodes(fields,"field");
    source_filefolder=new String[nrFields];
    wildcard=new String[nrFields];
    includeSubFolders=new String[nrFields];
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      source_filefolder[i]=XMLHandler.getTagValue(fnode,"source_filefolder");
      wildcard[i]=XMLHandler.getTagValue(fnode,"wildcard");
      includeSubFolders[i]=XMLHandler.getTagValue(fnode,"include_subFolders");
    }
    resultFilenamesWildcard=XMLHandler.getTagValue(entrynode,"result_filenames_wildcard");
    ResultFieldFile=XMLHandler.getTagValue(entrynode,"result_field_file");
    ResultFieldWildcard=XMLHandler.getTagValue(entrynode,"result_field_wildcard");
    ResultFieldIncludesubFolders=XMLHandler.getTagValue(entrynode,"result_field_includesubfolders");
    comparevalue=XMLHandler.getTagValue(entrynode,"comparevalue");
    minvalue=XMLHandler.getTagValue(entrynode,"minvalue");
    maxvalue=XMLHandler.getTagValue(entrynode,"maxvalue");
    successnumbercondition=JobEntrySimpleEval.getSuccessNumberConditionByCode(Const.NVL(XMLHandler.getTagValue(entrynode,"successnumbercondition"),""));
    sourceFiles=getSourceFilesByCode(Const.NVL(XMLHandler.getTagValue(entrynode,"source_files"),""));
    evaluationType=getEvaluationTypeByCode(Const.NVL(XMLHandler.getTagValue(entrynode,"evaluation_type"),""));
    scale=getScaleByCode(Const.NVL(XMLHandler.getTagValue(entrynode,"scale"),""));
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"JobEvalFilesMetrics.Error.Exception.UnableLoadXML"),xe);
  }
}
