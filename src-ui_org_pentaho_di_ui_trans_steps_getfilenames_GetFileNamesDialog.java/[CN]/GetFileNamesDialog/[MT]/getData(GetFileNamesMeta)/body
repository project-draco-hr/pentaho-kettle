{
  final GetFileNamesMeta in=meta;
  if (in.getFileName() != null) {
    wFilenameList.removeAll();
    for (int i=0; i < meta.getFileName().length; i++) {
      wFilenameList.add(new String[]{in.getFileName()[i],in.getFileMask()[i],in.getExludeFileMask()[i],in.getRequiredFilesDesc(in.getFileRequired()[i]),in.getRequiredFilesDesc(in.getIncludeSubFolders()[i])});
    }
    wFilenameList.removeEmptyRows();
    wFilenameList.setRowNums();
    wFilenameList.optWidth(true);
    if (in.getFileTypeFilter() != null) {
      wFilterFileType.select(in.getFileTypeFilter().ordinal());
    }
 else {
      wFilterFileType.select(0);
    }
    wInclRownum.setSelection(in.includeRowNumber());
    wAddResult.setSelection(in.isAddResultFile());
    wFileField.setSelection(in.isFileField());
    if (in.getRowNumberField() != null)     wInclRownumField.setText(in.getRowNumberField());
    if (in.getDynamicFilenameField() != null)     wFilenameField.setText(in.getDynamicFilenameField());
    if (in.getDynamicWildcardField() != null)     wWildcardField.setText(in.getDynamicWildcardField());
    wLimit.setText("" + in.getRowLimit());
    wIncludeSubFolder.setSelection(in.isDynamicIncludeSubFolders());
  }
  wStepname.selectAll();
}
