{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    schemaname=XMLHandler.getTagValue(entrynode,"schemaname");
    tablename=XMLHandler.getTagValue(entrynode,"tablename");
    filename=XMLHandler.getTagValue(entrynode,"filename");
    separator=XMLHandler.getTagValue(entrynode,"separator");
    enclosed=XMLHandler.getTagValue(entrynode,"enclosed");
    lineterminated=XMLHandler.getTagValue(entrynode,"lineterminated");
    limitlines=XMLHandler.getTagValue(entrynode,"limitlines");
    listcolumn=XMLHandler.getTagValue(entrynode,"listcolumn");
    highpriority="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"highpriority"));
    optionenclosed="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"optionenclosed"));
    outdumpvalue=Const.toInt(XMLHandler.getTagValue(entrynode,"outdumpvalue"),-1);
    iffileexists=Const.toInt(XMLHandler.getTagValue(entrynode,"iffileexists"),-1);
    String dbname=XMLHandler.getTagValue(entrynode,"connection");
    connection=DatabaseMeta.findDatabase(databases,dbname);
    addfiletoresult="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"addfiletoresult"));
  }
 catch (  KettleException e) {
    throw new KettleXMLException("Unable to load job entry of type 'table exists' from XML node",e);
  }
}
