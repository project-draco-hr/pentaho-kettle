{
  try {
    rep.saveJobEntryAttribute(id_job,getObjectId(),"copy_empty_folders",copy_empty_folders);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"arg_from_previous",arg_from_previous);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"overwrite_files",overwrite_files);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"include_subfolders",include_subfolders);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"remove_source_files",remove_source_files);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_result_filesname",add_result_filesname);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"destination_is_a_file",destination_is_a_file);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"create_destination_folder",create_destination_folder);
    if (source_filefolder != null) {
      for (int i=0; i < source_filefolder.length; i++) {
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"source_filefolder",source_filefolder[i]);
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"destination_filefolder",destination_filefolder[i]);
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"wildcard",wildcard[i]);
      }
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobCopyFiles.Error.Exception.UnableSaveRep") + id_job,dbe);
  }
}
