{
  try {
    rep.saveDatabaseMetaStepAttribute(idTransformation,idStep,"connection",databaseMeta);
    rep.saveStepAttribute(idTransformation,idStep,"cube",this.cube);
    rep.saveStepAttribute(idTransformation,idStep,"measuretype",this.measureType);
    rep.saveStepAttribute(idTransformation,idStep,"updateMode",this.updateMode);
    rep.saveStepAttribute(idTransformation,idStep,"splashMode",this.splashMode);
    rep.saveStepAttribute(idTransformation,idStep,"clearcube",this.clearCube);
    rep.saveStepAttribute(idTransformation,idStep,"preloadDimensionCache",this.preloadDimensionCache);
    rep.saveStepAttribute(idTransformation,idStep,"enableDimensionCache",this.enableDimensionCache);
    rep.saveStepAttribute(idTransformation,idStep,"commitSize",this.commitSize);
    rep.saveStepAttribute(idTransformation,idStep,"measurename",this.measureField.getDimensionName());
    rep.saveStepAttribute(idTransformation,idStep,"measurefieldname",this.measureField.getFieldName());
    rep.saveStepAttribute(idTransformation,idStep,"measurefieldtype",this.measureField.getFieldType());
    for (int i=0; i < this.fields.size(); i++) {
      rep.saveStepAttribute(idTransformation,idStep,i,"dimensionname",this.fields.get(i).getDimensionName());
      rep.saveStepAttribute(idTransformation,idStep,i,"fieldname",this.fields.get(i).getFieldName());
      rep.saveStepAttribute(idTransformation,idStep,i,"fieldtype",this.fields.get(i).getFieldType());
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for idStep=" + idStep,e);
  }
}
