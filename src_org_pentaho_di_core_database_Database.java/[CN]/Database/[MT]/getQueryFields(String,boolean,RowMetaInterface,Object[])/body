{
  RowMetaInterface fields;
  DBCache dbcache=DBCache.getInstance();
  DBCacheEntry entry=null;
  if (dbcache != null) {
    entry=new DBCacheEntry(databaseMeta.getName(),sql);
    fields=dbcache.get(entry);
    if (fields != null) {
      return fields;
    }
  }
  if (connection == null)   return null;
  PreparedStatement preparedStatement=null;
  try {
    preparedStatement=connection.prepareStatement(databaseMeta.stripCR(sql),ResultSet.TYPE_FORWARD_ONLY,ResultSet.CONCUR_READ_ONLY);
    ResultSetMetaData rsmd=preparedStatement.getMetaData();
    fields=getRowInfo(rsmd,false,false);
  }
 catch (  SQLException ex) {
    throw new KettleDatabaseException("Couldn't get field info from [" + sql + "]"+ Const.CR,ex);
  }
catch (  Exception e) {
    throw new KettleDatabaseException("Couldn't get field info",e);
  }
 finally {
    if (preparedStatement != null) {
      try {
        preparedStatement.close();
      }
 catch (      SQLException e) {
        throw new KettleDatabaseException("Unable to close prepared statement after determining SQL layout",e);
      }
    }
  }
  if (dbcache != null && entry != null) {
    if (fields != null) {
      dbcache.put(entry,fields);
    }
  }
  return fields;
}
