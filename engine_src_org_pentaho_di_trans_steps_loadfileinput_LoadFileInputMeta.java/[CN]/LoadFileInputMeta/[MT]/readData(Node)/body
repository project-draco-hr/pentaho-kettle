{
  try {
    includeFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,INCLUDE));
    filenameField=XMLHandler.getTagValue(stepnode,INCLUDE_FIELD);
    addresultfile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,ADDRESULTFILE));
    IsIgnoreEmptyFile="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,IS_IGNORE_EMPTY_FILE));
    includeRowNumber="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,ROWNUM));
    rowNumberField=XMLHandler.getTagValue(stepnode,ROWNUM_FIELD);
    encoding=XMLHandler.getTagValue(stepnode,ENCODING);
    Node filenode=XMLHandler.getSubNode(stepnode,FILE);
    Node fields=XMLHandler.getSubNode(stepnode,FIELDS);
    int nrFiles=XMLHandler.countNodes(filenode,NAME);
    int nrFields=XMLHandler.countNodes(fields,"field");
    allocate(nrFiles,nrFields);
    for (int i=0; i < nrFiles; i++) {
      Node filenamenode=XMLHandler.getSubNodeByNr(filenode,NAME,i);
      Node filemasknode=XMLHandler.getSubNodeByNr(filenode,FILEMASK,i);
      Node excludefilemasknode=XMLHandler.getSubNodeByNr(filenode,EXCLUDE_FILEMASK,i);
      Node fileRequirednode=XMLHandler.getSubNodeByNr(filenode,FILE_REQUIRED,i);
      Node includeSubFoldersnode=XMLHandler.getSubNodeByNr(filenode,INCLUDE_SUBFOLDERS,i);
      fileName[i]=XMLHandler.getNodeValue(filenamenode);
      fileMask[i]=XMLHandler.getNodeValue(filemasknode);
      excludeFileMask[i]=XMLHandler.getNodeValue(excludefilemasknode);
      fileRequired[i]=XMLHandler.getNodeValue(fileRequirednode);
      includeSubFolders[i]=XMLHandler.getNodeValue(includeSubFoldersnode);
    }
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      LoadFileInputField field=new LoadFileInputField(fnode);
      inputFields[i]=field;
    }
    rowLimit=Const.toLong(XMLHandler.getTagValue(stepnode,LIMIT),0L);
    fileinfield="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,IS_IN_FIELDS));
    DynamicFilenameField=XMLHandler.getTagValue(stepnode,DYNAMIC_FILENAME_FIELD);
    shortFileFieldName=XMLHandler.getTagValue(stepnode,SHORT_FILE_FIELD_NAME);
    pathFieldName=XMLHandler.getTagValue(stepnode,PATH_FIELD_NAME);
    hiddenFieldName=XMLHandler.getTagValue(stepnode,HIDDEN_FIELD_NAME);
    lastModificationTimeFieldName=XMLHandler.getTagValue(stepnode,LAST_MODIFICATION_TIME_FIELD_NAME);
    uriNameFieldName=XMLHandler.getTagValue(stepnode,URI_NAME_FIELD_NAME);
    rootUriNameFieldName=XMLHandler.getTagValue(stepnode,ROOT_URI_NAME_FIELD_NAME);
    extensionFieldName=XMLHandler.getTagValue(stepnode,EXTENSION_FIELD_NAME);
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"LoadFileInputMeta.Exception.ErrorLoadingXML",e.toString()));
  }
}
