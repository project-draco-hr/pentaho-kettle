{
  if (!getIsInFields()) {
    r.clear();
  }
  int i;
  for (i=0; i < inputFields.length; i++) {
    LoadFileInputField field=inputFields[i];
    int type=field.getType();
switch (field.getElementType()) {
case LoadFileInputField.ELEMENT_TYPE_FILECONTENT:
      if (type == ValueMetaInterface.TYPE_NONE) {
        type=ValueMetaInterface.TYPE_STRING;
      }
    break;
case LoadFileInputField.ELEMENT_TYPE_FILESIZE:
  if (type == ValueMetaInterface.TYPE_NONE) {
    type=ValueMetaInterface.TYPE_INTEGER;
  }
break;
default :
break;
}
try {
ValueMetaInterface v=ValueMetaFactory.createValueMeta(space.environmentSubstitute(field.getName()),type);
v.setLength(field.getLength());
v.setPrecision(field.getPrecision());
v.setConversionMask(field.getFormat());
v.setCurrencySymbol(field.getCurrencySymbol());
v.setDecimalSymbol(field.getDecimalSymbol());
v.setGroupingSymbol(field.getGroupSymbol());
v.setTrimType(field.getTrimType());
v.setOrigin(name);
r.addValueMeta(v);
}
 catch (Exception e) {
throw new KettleStepException(e);
}
}
if (includeFilename) {
ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(filenameField));
v.setLength(250);
v.setPrecision(-1);
v.setOrigin(name);
r.addValueMeta(v);
}
if (includeRowNumber) {
ValueMetaInterface v=new ValueMetaInteger(space.environmentSubstitute(rowNumberField));
v.setLength(ValueMetaInterface.DEFAULT_INTEGER_LENGTH,0);
v.setOrigin(name);
r.addValueMeta(v);
}
if (getShortFileNameField() != null && getShortFileNameField().length() > 0) {
ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(getShortFileNameField()));
v.setLength(100,-1);
v.setOrigin(name);
r.addValueMeta(v);
}
if (getExtensionField() != null && getExtensionField().length() > 0) {
ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(getExtensionField()));
v.setLength(100,-1);
v.setOrigin(name);
r.addValueMeta(v);
}
if (getPathField() != null && getPathField().length() > 0) {
ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(getPathField()));
v.setLength(100,-1);
v.setOrigin(name);
r.addValueMeta(v);
}
if (isHiddenField() != null && isHiddenField().length() > 0) {
ValueMetaInterface v=new ValueMetaBoolean(space.environmentSubstitute(isHiddenField()));
v.setOrigin(name);
r.addValueMeta(v);
}
if (getLastModificationDateField() != null && getLastModificationDateField().length() > 0) {
ValueMetaInterface v=new ValueMetaDate(space.environmentSubstitute(getLastModificationDateField()));
v.setOrigin(name);
r.addValueMeta(v);
}
if (getUriField() != null && getUriField().length() > 0) {
ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(getUriField()));
v.setLength(100,-1);
v.setOrigin(name);
r.addValueMeta(v);
}
if (getRootUriField() != null && getRootUriField().length() > 0) {
ValueMetaInterface v=new ValueMetaString(space.environmentSubstitute(getRootUriField()));
v.setLength(100,-1);
v.setOrigin(name);
r.addValueMeta(v);
}
}
