{
  try {
    rep.saveStepAttribute(id_transformation,id_step,INCLUDE,includeFilename);
    rep.saveStepAttribute(id_transformation,id_step,INCLUDE_FIELD,filenameField);
    rep.saveStepAttribute(id_transformation,id_step,ADDRESULTFILE,addresultfile);
    rep.saveStepAttribute(id_transformation,id_step,IS_IGNORE_EMPTY_FILE,IsIgnoreEmptyFile);
    rep.saveStepAttribute(id_transformation,id_step,ROWNUM,includeRowNumber);
    rep.saveStepAttribute(id_transformation,id_step,ROWNUM_FIELD,rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,LIMIT,rowLimit);
    rep.saveStepAttribute(id_transformation,id_step,ENCODING,encoding);
    for (int i=0; i < fileName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,FILE_NAME_REP,fileName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,FILE_MASK_REP,fileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,EXCLUDEFILE_MASK_REP,excludeFileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,FILE_REQUIRED,fileRequired[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,INCLUDE_SUBFOLDERS,includeSubFolders[i]);
    }
    for (int i=0; i < inputFields.length; i++) {
      LoadFileInputField field=inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_NAME_REP,field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,ELEMENT_TYPE_REP,field.getElementTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_TYPE_REP,field.getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_FORMAT_REP,field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_CURRENCY_REP,field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_DECIMAL_REP,field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_GROUP_REP,field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_LENGTH_REP,field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_PRECISION_REP,field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_TRIM_TYPE_REP,field.getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,FIELD_REPEAT_REP,field.isRepeated());
    }
    rep.saveStepAttribute(id_transformation,id_step,IS_IN_FIELDS,fileinfield);
    rep.saveStepAttribute(id_transformation,id_step,DYNAMIC_FILENAME_FIELD,DynamicFilenameField);
    rep.saveStepAttribute(id_transformation,id_step,SHORT_FILE_FIELD_NAME,shortFileFieldName);
    rep.saveStepAttribute(id_transformation,id_step,PATH_FIELD_NAME,pathFieldName);
    rep.saveStepAttribute(id_transformation,id_step,HIDDEN_FIELD_NAME,hiddenFieldName);
    rep.saveStepAttribute(id_transformation,id_step,LAST_MODIFICATION_TIME_FIELD_NAME,lastModificationTimeFieldName);
    rep.saveStepAttribute(id_transformation,id_step,URI_NAME_FIELD_NAME,uriNameFieldName);
    rep.saveStepAttribute(id_transformation,id_step,ROOT_URI_NAME_FIELD_NAME,rootUriNameFieldName);
    rep.saveStepAttribute(id_transformation,id_step,EXTENSION_FIELD_NAME,extensionFieldName);
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"LoadFileInputMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
