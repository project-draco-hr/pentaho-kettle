{
  if (spoon.getTransMeta().nrSelectedSteps() == 0)   return;
  StepMeta steps[]=new StepMeta[spoon.getTransMeta().nrSelectedSteps()];
  Point before[]=new Point[spoon.getTransMeta().nrSelectedSteps()];
  Point after[]=new Point[spoon.getTransMeta().nrSelectedSteps()];
  int nr=0;
  int max=-99999;
  for (int i=0; i < spoon.getTransMeta().nrSteps(); i++) {
    StepMeta stepMeta=spoon.getTransMeta().getStep(i);
    if (stepMeta.isSelected()) {
      Point p=stepMeta.getLocation();
      if (p.x > max)       max=p.x;
    }
  }
  for (int i=0; i < spoon.getTransMeta().nrSteps(); i++) {
    StepMeta stepMeta=spoon.getTransMeta().getStep(i);
    if (stepMeta.isSelected()) {
      steps[nr]=stepMeta;
      Point p=stepMeta.getLocation();
      before[nr]=new Point(p.x,p.y);
      stepMeta.setLocation(max,p.y);
      after[nr]=new Point(max,p.y);
      nr++;
    }
  }
  spoon.addUndoPosition(steps,spoon.getTransMeta().getStepIndexes(steps),before,after);
  redraw();
}
