{
  if (spoon.transMeta.nrSelectedSteps() == 0)   return;
  StepMeta steps[]=new StepMeta[spoon.transMeta.nrSelectedSteps()];
  Point before[]=new Point[spoon.transMeta.nrSelectedSteps()];
  Point after[]=new Point[spoon.transMeta.nrSelectedSteps()];
  int nr=0;
  int min=99999;
  for (int i=0; i < spoon.transMeta.nrSteps(); i++) {
    StepMeta stepMeta=spoon.transMeta.getStep(i);
    if (stepMeta.isSelected()) {
      Point p=stepMeta.getLocation();
      if (p.x < min)       min=p.x;
    }
  }
  for (int i=0; i < spoon.transMeta.nrSteps(); i++) {
    StepMeta stepMeta=spoon.transMeta.getStep(i);
    if (stepMeta.isSelected()) {
      steps[nr]=stepMeta;
      Point p=stepMeta.getLocation();
      before[nr]=new Point(p.x,p.y);
      stepMeta.setLocation(min,p.y);
      after[nr]=new Point(min,p.y);
      nr++;
    }
  }
  spoon.addUndoPosition(steps,spoon.transMeta.getStepIndexes(steps),before,after);
  redraw();
}
