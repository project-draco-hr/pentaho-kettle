{
  if (chef.getJobMeta().nrSelected() == 0)   return;
  JobEntryCopy jobentries[]=new JobEntryCopy[chef.jobMeta.nrSelected()];
  Point before[]=new Point[chef.jobMeta.nrSelected()];
  Point after[]=new Point[chef.jobMeta.nrSelected()];
  int nr=0;
  int min=99999;
  for (int i=0; i < chef.jobMeta.nrJobEntries(); i++) {
    JobEntryCopy si=chef.jobMeta.getJobEntry(i);
    if (si.isSelected()) {
      Point p=si.getLocation();
      if (p.x < min)       min=p.x;
    }
  }
  for (int i=0; i < chef.jobMeta.nrJobEntries(); i++) {
    JobEntryCopy si=chef.jobMeta.getJobEntry(i);
    if (si.isSelected()) {
      jobentries[nr]=si;
      Point p=si.getLocation();
      before[nr]=new Point(p.x,p.y);
      si.setLocation(min,p.y);
      after[nr]=new Point(min,p.y);
      nr++;
    }
  }
  chef.addUndoPosition(jobentries,chef.jobMeta.getEntryIndexes(jobentries),before,after);
  redraw();
}
