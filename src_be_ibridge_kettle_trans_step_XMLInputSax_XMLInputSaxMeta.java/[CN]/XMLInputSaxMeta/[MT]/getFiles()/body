{
  String files[]=null;
  final String realfile[]=StringUtil.environmentSubstitute(fileName);
  final String realmask[]=StringUtil.environmentSubstitute(fileMask);
  ArrayList filelist=new ArrayList();
  for (int i=0; i < realfile.length; i++) {
    final String onefile=realfile[i];
    final String onemask=realmask[i];
    if (onemask != null && onemask.length() > 0) {
      File file=new File(onefile);
      try {
        files=file.list(new FilenameFilter(){
          public boolean accept(          File dir,          String name){
            return Pattern.matches(onemask,name);
          }
        }
);
        for (int j=0; j < files.length; j++) {
          if (!onefile.endsWith(Const.FILE_SEPARATOR)) {
            files[j]=onefile + Const.FILE_SEPARATOR + files[j];
          }
 else {
            files[j]=onefile + files[j];
          }
        }
      }
 catch (      Exception e) {
        files=null;
      }
    }
 else {
      File file=new File(onefile);
      if (file.exists() && file.isFile() && file.canRead()) {
        files=new String[]{onefile};
      }
 else {
        files=null;
      }
    }
    if (files != null)     for (int x=0; x < files.length; x++) {
      filelist.add(files[x]);
    }
  }
  Collections.sort(filelist);
  files=(String[])filelist.toArray(new String[filelist.size()]);
  return files;
}
