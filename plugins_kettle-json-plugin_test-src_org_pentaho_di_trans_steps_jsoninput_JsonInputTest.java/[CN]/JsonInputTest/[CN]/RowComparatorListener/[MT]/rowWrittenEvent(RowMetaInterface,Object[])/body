{
  if (rowNbr >= data.length) {
    throw new ComparisonFailure("too many output rows","" + data.length,"" + rowNbr);
  }
 else {
    for (int i=0; i < data[rowNbr].length; i++) {
      try {
        boolean eq=true;
        if (comparators.containsKey(i)) {
          Comparison<Object> comp=comparators.get(i);
          if (comp != null) {
            eq=comp.equals(data[rowNbr][i],row[i]);
          }
        }
 else {
          ValueMetaInterface valueMeta=rowMeta.getValueMeta(i);
          eq=valueMeta.compare(data[rowNbr][i],row[i]) == 0;
        }
        if (!eq) {
          throw new ComparisonFailure(String.format("Mismatch row %d, column %d",rowNbr,i),rowMeta.getString(data[rowNbr]),rowMeta.getString(row));
        }
      }
 catch (      Exception e) {
        throw new AssertionError(String.format("Value type at row %d, column %d",rowNbr,i),e);
      }
    }
    rowNbr++;
  }
}
