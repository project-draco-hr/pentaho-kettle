{
  List<JobEntryCopy> list=jobMeta.getSelectedEntries();
  for (int i=0; i < jobMeta.nrJobHops(); i++) {
    JobHopMeta hop=jobMeta.getJobHop(i);
    if (list.contains(hop.getFromEntry()) && list.contains(hop.getToEntry())) {
      JobHopMeta before=(JobHopMeta)hop.clone();
      hop.setEnabled(enabled);
      JobHopMeta after=(JobHopMeta)hop.clone();
      spoon.addUndoChange(jobMeta,new JobHopMeta[]{before},new JobHopMeta[]{after},new int[]{jobMeta.indexOfJobHop(hop)});
    }
  }
  spoon.refreshGraph();
}
