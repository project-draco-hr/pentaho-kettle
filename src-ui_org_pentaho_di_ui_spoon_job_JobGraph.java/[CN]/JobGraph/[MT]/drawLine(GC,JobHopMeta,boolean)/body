{
  int line[]=getLine(hop.from_entry,hop.to_entry);
  gc.setLineWidth(linewidth);
  Color col;
  if (hop.from_entry.isLaunchingInParallel()) {
    gc.setLineAttributes(new LineAttributes((float)linewidth,SWT.CAP_FLAT,SWT.JOIN_MITER,SWT.LINE_CUSTOM,new float[]{5,3},0,10));
  }
 else {
    gc.setLineStyle(SWT.LINE_SOLID);
  }
  if (is_candidate) {
    col=GUIResource.getInstance().getColorBlue();
  }
 else   if (hop.isEnabled()) {
    if (hop.isUnconditional()) {
      col=GUIResource.getInstance().getColorBlack();
    }
 else {
      if (hop.getEvaluation()) {
        col=GUIResource.getInstance().getColorGreen();
      }
 else {
        col=GUIResource.getInstance().getColorRed();
      }
    }
  }
 else {
    col=GUIResource.getInstance().getColorGray();
  }
  gc.setForeground(col);
  if (hop.isSplit())   gc.setLineWidth(linewidth + 2);
  drawArrow(gc,line);
  if (hop.isSplit())   gc.setLineWidth(linewidth);
  gc.setForeground(GUIResource.getInstance().getColorBlack());
  gc.setBackground(GUIResource.getInstance().getColorBackground());
  gc.setLineStyle(SWT.LINE_SOLID);
}
