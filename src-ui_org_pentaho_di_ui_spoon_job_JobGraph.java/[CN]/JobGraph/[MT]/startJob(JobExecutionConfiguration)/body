{
  if (job == null || job.isFinished() && !job.isActive()) {
    if (jobMeta.hasChanged()) {
      if (spoon.props.getAutoSave()) {
        if (log.isDetailed())         log.logDetailed(BaseMessages.getString(PKG,"JobLog.Log.AutoSaveFileBeforeRunning"));
        System.out.println(BaseMessages.getString(PKG,"JobLog.Log.AutoSaveFileBeforeRunning2"));
        spoon.saveToFile(jobMeta);
      }
 else {
        MessageDialogWithToggle md=new MessageDialogWithToggle(shell,BaseMessages.getString(PKG,"JobLog.Dialog.SaveChangedFile.Title"),null,BaseMessages.getString(PKG,"JobLog.Dialog.SaveChangedFile.Message") + Const.CR + BaseMessages.getString(PKG,"JobLog.Dialog.SaveChangedFile.Message2")+ Const.CR,MessageDialog.QUESTION,new String[]{BaseMessages.getString(PKG,"System.Button.Yes"),BaseMessages.getString(PKG,"System.Button.No")},0,BaseMessages.getString(PKG,"JobLog.Dialog.SaveChangedFile.Toggle"),spoon.props.getAutoSave());
        int answer=md.open();
        if ((answer & 0xFF) == 0) {
          spoon.saveToFile(jobMeta);
        }
        spoon.props.setAutoSave(md.getToggleState());
      }
    }
    if (((jobMeta.getName() != null && jobMeta.getObjectId() != null && spoon.rep != null) || (jobMeta.getFilename() != null && spoon.rep == null)) && !jobMeta.hasChanged()) {
      if (job == null || (job != null && !job.isActive())) {
        try {
          if (executionConfiguration.isClearingLog()) {
            jobLogDelegate.clearLog();
          }
          if (job != null) {
            CentralLogStore.discardLines(job.getLogChannelId(),true);
          }
          JobMeta runJobMeta;
          if (spoon.rep != null) {
            runJobMeta=spoon.rep.loadJob(jobMeta.getName(),jobMeta.getRepositoryDirectory(),null,null);
          }
 else {
            runJobMeta=new JobMeta(jobMeta.getFilename(),null,null);
          }
          job=new Job(spoon.rep,runJobMeta);
          job.setLogLevel(executionConfiguration.getLogLevel());
          job.getJobMeta().setArguments(jobMeta.getArguments());
          job.shareVariablesWith(jobMeta);
          job.setInteractive(true);
          job.addJobEntryListener(createRefreshJobEntryListener());
          Map<String,String> paramMap=executionConfiguration.getParams();
          Set<String> keys=paramMap.keySet();
          for (          String key : keys) {
            job.getJobMeta().setParameterValue(key,Const.NVL(paramMap.get(key),""));
          }
          job.getJobMeta().activateParameters();
          log.logMinimal(BaseMessages.getString(PKG,"JobLog.Log.StartingJob"));
          job.start();
          jobGridDelegate.previousNrItems=-1;
          jobGridDelegate.jobTracker=job.getJobTracker();
          job.addJobListener(new JobListener(){
            public void jobFinished(            Job job){
              JobGraph.this.jobFinished();
            }
          }
);
          addAllTabs();
        }
 catch (        KettleException e) {
          new ErrorDialog(shell,BaseMessages.getString(PKG,"JobLog.Dialog.CanNotOpenJob.Title"),BaseMessages.getString(PKG,"JobLog.Dialog.CanNotOpenJob.Message"),e);
          job=null;
        }
      }
 else {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(BaseMessages.getString(PKG,"JobLog.Dialog.JobIsAlreadyRunning.Title"));
        m.setMessage(BaseMessages.getString(PKG,"JobLog.Dialog.JobIsAlreadyRunning.Message"));
        m.open();
      }
    }
 else {
      if (jobMeta.hasChanged()) {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(BaseMessages.getString(PKG,"JobLog.Dialog.JobHasChangedSave.Title"));
        m.setMessage(BaseMessages.getString(PKG,"JobLog.Dialog.JobHasChangedSave.Message"));
        m.open();
      }
 else       if (spoon.rep != null && jobMeta.getName() == null) {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(BaseMessages.getString(PKG,"JobLog.Dialog.PleaseGiveThisJobAName.Title"));
        m.setMessage(BaseMessages.getString(PKG,"JobLog.Dialog.PleaseGiveThisJobAName.Message"));
        m.open();
      }
 else {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(BaseMessages.getString(PKG,"JobLog.Dialog.NoFilenameSaveYourJobFirst.Title"));
        m.setMessage(BaseMessages.getString(PKG,"JobLog.Dialog.NoFilenameSaveYourJobFirst.Message"));
        m.open();
      }
    }
    setControlStates();
  }
}
