{
  try {
    toolbar=XulHelper.createToolbar(XUL_FILE_JOB_TOOLBAR,JobGraph.this,JobGraph.this,new XulMessages());
    ToolBar toolBar=(ToolBar)toolbar.getNativeObject();
    toolBar.pack();
    int h=toolBar.getBounds().height;
    ToolItem sep=new ToolItem(toolBar,SWT.SEPARATOR);
    Composite zoom=new Composite(toolBar,SWT.LEFT);
    zoom.setLayout(new FormLayout());
    final Scale zoomScale=new Scale(zoom,SWT.HORIZONTAL);
    zoomScale.setMinimum(0);
    zoomScale.setMaximum(TransPainter.magnifications.length - 1);
    zoomScale.setIncrement(1);
    zoomScale.setPageIncrement(1);
    zoomScale.setSelection(magnificationIndex);
    zoomScale.addSelectionListener(new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent arg0){
        magnificationIndex=zoomScale.getSelection();
        magnification=TransPainter.magnifications[magnificationIndex];
        redraw();
      }
    }
);
    zoomScale.addKeyListener(spoon.defKeys);
    zoomScale.setSize(150,h);
    FormData fdScale=new FormData();
    fdScale.left=new FormAttachment(0,0);
    fdScale.right=new FormAttachment(50,0);
    fdScale.top=new FormAttachment(0,0);
    fdScale.bottom=new FormAttachment(100,0);
    zoomScale.setLayoutData(fdScale);
    zoomLabel=new Label(zoom,SWT.LEFT);
    setZoomLabel();
    zoomLabel.pack();
    FormData fdLabel=new FormData();
    fdLabel.left=new FormAttachment(50,0);
    fdLabel.right=new FormAttachment(100,0);
    fdLabel.top=new FormAttachment(zoomScale,0,SWT.CENTER);
    zoomLabel.setLayoutData(fdLabel);
    zoom.setSize(100,h);
    zoom.layout();
    sep.setWidth(100);
    sep.setControl(zoom);
    toolBar.pack();
    toolBar.addKeyListener(spoon.defKeys);
    addToolBarListeners();
  }
 catch (  Throwable t) {
    log.logError(toString(),Const.getStackTracker(t));
    new ErrorDialog(shell,Messages.getString("Spoon.Exception.ErrorReadingXULFile.Title"),Messages.getString("Spoon.Exception.ErrorReadingXULFile.Message",XUL_FILE_JOB_TOOLBAR),new Exception(t));
  }
}
