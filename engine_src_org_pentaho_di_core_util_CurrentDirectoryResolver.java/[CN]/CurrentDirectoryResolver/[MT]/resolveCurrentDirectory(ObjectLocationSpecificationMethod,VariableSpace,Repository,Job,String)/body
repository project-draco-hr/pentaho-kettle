{
  RepositoryDirectoryInterface directory=null;
  if (repository != null && specificationMethod.equals(ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME) && job != null && job.getJobMeta() != null && job.getJobMeta().getRepositoryDirectory() != null) {
    directory=job.getJobMeta().getRepositoryDirectory();
  }
 else   if (job != null && repository == null && specificationMethod.equals(ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME)) {
    filename=job.getFilename();
  }
 else   if (job != null && job.getJobMeta() != null && repository != null && specificationMethod.equals(ObjectLocationSpecificationMethod.FILENAME)) {
    directory=job.getJobMeta().getRepositoryDirectory();
  }
 else   if (job != null && filename == null) {
    filename=job.getFilename();
  }
 else   if (repository != null && JobMeta.class.isAssignableFrom(parentVariables.getClass())) {
    JobMeta realParent=null;
    realParent=(JobMeta)parentVariables;
    if (realParent != null && realParent.getRepositoryDirectory() != null) {
      directory=realParent.getRepositoryDirectory();
    }
  }
 else   if (JobMeta.class.isAssignableFrom(parentVariables.getClass())) {
    JobMeta realParent=null;
    realParent=(JobMeta)parentVariables;
    filename=realParent.getFilename();
  }
  return resolveCurrentDirectory(parentVariables,directory,filename);
}
