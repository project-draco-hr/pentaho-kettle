{
  Shell parent=getParent();
  dircolor=GUIResource.getInstance().getColorDirectory();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL | SWT.RESIZE| SWT.MIN| SWT.MAX);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(shellText);
  int margin=Const.MARGIN;
  wlTree=new Label(shell,SWT.NONE);
  wlTree.setText(lineText);
  props.setLook(wlTree);
  fdlTree=new FormData();
  fdlTree.left=new FormAttachment(0,0);
  fdlTree.top=new FormAttachment(0,margin);
  wlTree.setLayoutData(fdlTree);
  wTree=new Tree(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  props.setLook(wTree);
  fdTree=new FormData();
  fdTree.left=new FormAttachment(0,0);
  fdTree.right=new FormAttachment(100,0);
  fdTree.top=new FormAttachment(wlTree,margin);
  fdTree.bottom=new FormAttachment(100,-30);
  wTree.setLayoutData(fdTree);
  wOK=new Button(shell,SWT.PUSH);
  fdOK=new FormData();
  wOK.setText("  &OK  ");
  fdOK.left=new FormAttachment(33,0);
  fdOK.bottom=new FormAttachment(100,0);
  wOK.setLayoutData(fdOK);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText("  &Cancel  ");
  fdCancel=new FormData();
  fdCancel.left=new FormAttachment(66,0);
  fdCancel.bottom=new FormAttachment(100,0);
  wCancel.setLayoutData(fdCancel);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wTree.addSelectionListener(lsDef);
  wTree.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.character == SWT.CR)       ok();
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  WindowProperty winprop=props.getScreen(shell.getText());
  if (winprop != null)   winprop.setShell(shell);
 else   shell.pack();
  shell.open();
  while (!shell.isDisposed()) {
    if (!shell.getDisplay().readAndDispatch())     shell.getDisplay().sleep();
  }
  return objectName;
}
