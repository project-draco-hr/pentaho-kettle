{
  KettleDatabaseRepositoryMeta repositoryMeta;
  KettleDatabaseRepository repository;
  UserInfo userInfo;
  repositoryMeta=new KettleDatabaseRepositoryMeta();
  repositoryMeta.setName("Kettle Database Repository");
  repositoryMeta.setDescription("Kettle database test repository");
  DatabaseMeta connection=new DatabaseMeta();
  connection.setDatabaseType("Hypersonic");
  connection.setHostname("localhost");
  connection.setDBName("kettle_repository_4x");
  connection.setDBPort("9002");
  connection.setUsername("sa");
  repositoryMeta.setConnection(connection);
  ProfileMeta adminProfile=new ProfileMeta("admin","Administrator");
  adminProfile.addPermission(Permission.ADMIN);
  userInfo=new UserInfo("admin","admin","Administrator","The system administrator",true,adminProfile);
  repository=new KettleDatabaseRepository();
  repository.init(repositoryMeta,userInfo);
  RepositoryExplorerCallback cb=new RepositoryExplorerCallback(){
    public boolean open(    RepositoryElementLocationInterface element,    String revision){
      System.out.println("Name: ".concat(element.getName()));
      System.out.println("Type: ".concat(element.getRepositoryElementType().name()));
      System.out.println("Directory: ".concat(element.getRepositoryDirectory().toString()));
      System.out.println("Revision: ".concat(revision == null ? "null" : revision));
      return false;
    }
  }
;
  try {
    repository.connect();
    RepositoryExplorer explorer=new RepositoryExplorer(repository,cb,null);
    explorer.show();
  }
 catch (  KettleSecurityException e) {
    e.printStackTrace();
  }
catch (  KettleException e) {
    e.printStackTrace();
  }
}
