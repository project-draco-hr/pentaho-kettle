{
  KettleDatabaseRepositoryMeta repositoryMeta;
  KettleDatabaseRepository repository;
  @SuppressWarnings("unused") UserInfo userInfo;
  repositoryMeta=new KettleDatabaseRepositoryMeta();
  repositoryMeta.setName("Kettle Database Repository");
  repositoryMeta.setDescription("Kettle database test repository");
  DatabaseMeta connection=new DatabaseMeta();
  connection.setDatabaseType("Hypersonic");
  connection.setHostname("localhost");
  connection.setDBName("kettle_repository_4x");
  connection.setDBPort("9002");
  connection.setUsername("sa");
  repositoryMeta.setConnection(connection);
  userInfo=new UserInfo("admin","admin","Administrator","The system administrator",true);
  repository=new KettleDatabaseRepository();
  repository.init(repositoryMeta);
  @SuppressWarnings("unused") RepositoryExplorerCallback cb=new RepositoryExplorerCallback(){
    public boolean open(    UIRepositoryContent element,    String revision) throws Exception {
      System.out.println("Name: ".concat(element.getName()));
      System.out.println("Type: ".concat(element.getRepositoryElementType().name()));
      System.out.println("Directory: ".concat(element.getRepositoryDirectory().toString()));
      System.out.println("Revision: ".concat(revision == null ? "null" : revision));
      return false;
    }
    @Override public boolean error(    String message) throws Exception {
      System.out.println("Error message: ".concat(message));
      return true;
    }
  }
;
}
