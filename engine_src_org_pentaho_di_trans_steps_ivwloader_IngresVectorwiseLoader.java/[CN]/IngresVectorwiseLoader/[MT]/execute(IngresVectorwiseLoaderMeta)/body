{
  Runtime rt=Runtime.getRuntime();
  try {
    data.fifoFilename=environmentSubstitute(meta.getFifoFileName());
    File fifoFile=new File(data.fifoFilename);
    if (!fifoFile.exists()) {
      String mkFifoCmd="mkfifo -m 666 [" + data.fifoFilename + "]";
      String[] args=new String[]{"mkfifo","-m","666",data.fifoFilename};
      logDetailed("Creating FIFO file using this command : " + mkFifoCmd);
      Process mkFifoProcess=rt.exec(args);
      StreamLogger errorLogger=new StreamLogger(log,mkFifoProcess.getErrorStream(),"mkFifoError");
      StreamLogger outputLogger=new StreamLogger(log,mkFifoProcess.getInputStream(),"mkFifoOuptut");
      new Thread(errorLogger).start();
      new Thread(outputLogger).start();
      int result=mkFifoProcess.waitFor();
      if (result != 0) {
        throw new Exception("Return code " + result + " received from statement : "+ mkFifoCmd);
      }
    }
    String cmd=createCommandLine(meta);
    String logMessage=masqueradPassword(cmd);
    if (meta.isUseDynamicVNode()) {
      logMessage=masqueradPassword(cmd);
    }
    logDetailed("Executing command: " + logMessage);
    try {
      data.sqlProcess=rt.exec(cmd);
    }
 catch (    IOException ex) {
      throw new KettleException("Error while executing psql : " + logMessage,ex);
    }
    data.errorLogger=new StreamLogger(log,data.sqlProcess.getErrorStream(),"ERR_SQL",true);
    new Thread(data.errorLogger).start();
    data.outputLogger=new StreamLogger(log,data.sqlProcess.getInputStream(),"OUT_SQL");
    data.sqlOutputStream=data.sqlProcess.getOutputStream();
    logWriter=new LogWriter(data.sqlProcess.getInputStream());
    logWriteThread=new Thread(logWriter,"IngresVecorWiseStepLogWriter");
    logWriteThread.start();
    vwLoadMonitor=new VWloadMonitor(data.sqlProcess,logWriter,logWriteThread);
    vwLoadMonitorThread=new Thread(vwLoadMonitor);
    vwLoadMonitorThread.start();
    logDetailed("Connected to VectorWise with the 'sql' command.");
    String loadCommand=createLoadCommand();
    logDetailed("Executing command: " + loadCommand);
    data.sqlRunner=new SqlRunner(data,loadCommand);
    data.sqlRunner.start();
    logDetailed("LOAD TABLE command started");
    openFifoFile();
    logDetailed("Fifo stream opened");
    waitForAConnection();
    logDetailed("Ready to start bulk loading!");
  }
 catch (  Exception ex) {
    throw new KettleException(ex);
  }
  return true;
}
