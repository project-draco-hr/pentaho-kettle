{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"servername",serverName);
    rep.saveStepAttribute(id_transformation,id_step,"serverport",serverPort);
    rep.saveStepAttribute(id_transformation,id_step,"username",userName);
    rep.saveStepAttribute(id_transformation,id_step,"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveStepAttribute(id_transformation,id_step,"sourceFileFieldName",sourceFileFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"remoteDirectoryFieldName",remoteDirectoryFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"inputIsStream",inputIsStream);
    rep.saveStepAttribute(id_transformation,id_step,"addFilenameResut",addFilenameResut);
    rep.saveStepAttribute(id_transformation,id_step,"usekeyfilename",usekeyfilename);
    rep.saveStepAttribute(id_transformation,id_step,"keyfilename",keyfilename);
    rep.saveStepAttribute(id_transformation,id_step,"keyfilepass",Encr.encryptPasswordIfNotUsingVariables(keyfilepass));
    rep.saveStepAttribute(id_transformation,id_step,"compression",compression);
    rep.saveStepAttribute(id_transformation,id_step,"proxyType",proxyType);
    rep.saveStepAttribute(id_transformation,id_step,"proxyHost",proxyHost);
    rep.saveStepAttribute(id_transformation,id_step,"proxyPort",proxyPort);
    rep.saveStepAttribute(id_transformation,id_step,"proxyUsername",proxyUsername);
    rep.saveStepAttribute(id_transformation,id_step,"proxyPassword",Encr.encryptPasswordIfNotUsingVariables(proxyPassword));
    rep.saveStepAttribute(id_transformation,id_step,"aftersftpput",JobEntrySFTPPUT.getAfterSFTPPutCode(getAfterFTPS()));
    rep.saveStepAttribute(id_transformation,id_step,"createRemoteFolder",createRemoteFolder);
    rep.saveStepAttribute(id_transformation,id_step,"destinationfolderFieldName",destinationfolderFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"createdestinationfolder",createDestinationFolder);
    rep.saveStepAttribute(id_transformation,id_step,"remoteFilenameFieldName",remoteFilenameFieldName);
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
