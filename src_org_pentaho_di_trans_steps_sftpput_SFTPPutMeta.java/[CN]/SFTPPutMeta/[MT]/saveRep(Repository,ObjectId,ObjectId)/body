{
  try {
    rep.saveJobEntryAttribute(id_step,getObjectId(),"servername",serverName);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"serverport",serverPort);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"username",userName);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveJobEntryAttribute(id_step,getObjectId(),"remoteDirectoryFieldName",remoteDirectoryFieldName);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"sourceFileNameDirectory",sourceFileNameDirectory);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"inputIsStream",inputIsStream);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"addFilenameResut",addFilenameResut);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"usekeyfilename",usekeyfilename);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"keyfilename",keyfilename);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"keyfilepass",Encr.encryptPasswordIfNotUsingVariables(keyfilepass));
    rep.saveJobEntryAttribute(id_step,getObjectId(),"compression",compression);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"proxyType",proxyType);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"proxyHost",proxyHost);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"proxyPort",proxyPort);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"proxyUsername",proxyUsername);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"proxyPassword",Encr.encryptPasswordIfNotUsingVariables(proxyPassword));
    rep.saveJobEntryAttribute(id_step,getObjectId(),"aftersftpput",JobEntrySFTPPUT.getAfterSFTPPutCode(getAfterFTPS()));
    rep.saveJobEntryAttribute(id_step,getObjectId(),"createRemoteFolder",createRemoteFolder);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"destinationfolderFieldName",destinationfolderFieldName);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"createdestinationfolder",createDestinationFolder);
    rep.saveJobEntryAttribute(id_step,getObjectId(),"remoteFilenameFieldName",remoteFilenameFieldName);
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
