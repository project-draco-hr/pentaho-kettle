{
  super(Shape.SHAPE_TYPE_POLYLINE_M);
  int pos;
  box_minx=Converter.getDoubleLittle(content,4);
  box_miny=Converter.getDoubleLittle(content,12);
  box_maxx=Converter.getDoubleLittle(content,20);
  box_maxy=Converter.getDoubleLittle(content,28);
  nrparts=Converter.getIntegerLittle(content,36);
  nrpoints=Converter.getIntegerLittle(content,40);
  int pos_parts=44;
  int pos_points=pos_parts + (nrparts * 4);
  int pos_mmin=pos_points + (16 * nrpoints);
  int pos_mmax=pos_mmin + 8;
  int pos_marray=pos_mmax + 16;
  int tot_length=pos_marray + (8 * nrpoints);
  part_starts=new int[nrparts];
  point=new ShapePoint[nrpoints];
  measures=null;
  for (int i=0; i < nrparts; i++) {
    pos=44 + i * 4;
    part_starts[i]=Converter.getIntegerLittle(content,pos);
  }
  for (int i=0; i < nrpoints; i++) {
    pos=(44 + nrparts * 4) + (16 * i);
    double pointx=Converter.getDoubleLittle(content,pos);
    double pointy=Converter.getDoubleLittle(content,pos + 8);
    point[i]=new ShapePoint(pointx,pointy);
  }
  if (tot_length == content.length + 8) {
    pos=(44 + nrparts * 4) + (16 * nrpoints);
    mmin=Converter.getDoubleLittle(content,pos);
    mmax=Converter.getDoubleLittle(content,pos + 8);
    measures=new double[nrpoints < 0 ? 0 : nrpoints];
    for (int i=0; i < nrpoints; i++) {
      measures[i]=Converter.getDoubleLittle(content,pos + 16 + i * 8);
    }
  }
}
