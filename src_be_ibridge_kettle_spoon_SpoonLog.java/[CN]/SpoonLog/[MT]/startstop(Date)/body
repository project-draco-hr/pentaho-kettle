{
  if (!running) {
    if (spoon.getTransMeta().hasChanged()) {
      if (spoon.props.getAutoSave()) {
        spoon.saveFile();
      }
 else {
        MessageDialogWithToggle md=new MessageDialogWithToggle(shell,Messages.getString("SpoonLog.Dialog.Title.FileHasChanged"),null,Messages.getString("SpoonLog.Dialog.Message.FileHasChanged1") + Const.CR + Messages.getString("SpoonLog.Dialog.Message.FileHasChanged2")+ Const.CR,MessageDialog.QUESTION,new String[]{Messages.getString("System.Yes"),Messages.getString("System.No")},0,Messages.getString("SpoonLog.Dialog.Option.AutoSaveTransformation"),spoon.props.getAutoSave());
        int answer=md.open();
        if (answer == 0) {
          spoon.saveFile();
        }
        spoon.props.setAutoSave(md.getToggleState());
      }
    }
    if (((spoon.getTransMeta().getName() != null && spoon.rep != null) || (spoon.getTransMeta().getFilename() != null && spoon.rep == null)) && !spoon.getTransMeta().hasChanged()) {
      if (trans == null || (trans != null && trans.isFinished())) {
        try {
          trans=new Trans(log,spoon.getTransMeta().getFilename(),spoon.getTransMeta().getName(),new String[]{spoon.getTransMeta().getFilename()});
          trans.setReplayDate(replayDate);
          trans.open(spoon.rep,spoon.getTransMeta().getName(),spoon.getTransMeta().getDirectory().getPath(),spoon.getTransMeta().getFilename());
          trans.setMonitored(true);
          log.logBasic(toString(),Messages.getString("SpoonLog.Log.TransformationOpened"));
        }
 catch (        KettleException e) {
          trans=null;
          new ErrorDialog(shell,spoon.props,Messages.getString("SpoonLog.Dialog.Title.ErrorOpeningTransformation"),Messages.getString("SpoonLog.Dialog.Message.ErrorOpeningTransformation"),e);
        }
        readLog();
        if (trans != null) {
          Row arguments=getArguments(trans.getTransMeta());
          if (arguments != null) {
            String args[]=convertArguments(arguments);
            log.logMinimal(Spoon.APP_NAME,Messages.getString("SpoonLog.Log.LaunchingTransformation") + trans.getTransMeta().getName() + "]...");
            trans.execute(args);
            log.logMinimal(Spoon.APP_NAME,Messages.getString("SpoonLog.Log.StartedExecutionOfTransformation"));
            running=!running;
            wStart.setText(STOP_TEXT);
            readLog();
          }
        }
      }
 else {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("SpoonLog.Dialog.Title.DoNoStartTransformationTwice"));
        m.setMessage(Messages.getString("SpoonLog.Dialog.Message.DoNoStartTransformationTwice"));
        m.open();
      }
    }
 else {
      if (spoon.getTransMeta().hasChanged()) {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("SpoonLog.Dialog.Title.SaveTransformationBeforeRunning"));
        m.setMessage(Messages.getString("SpoonLog.Dialog.Message.SaveTransformationBeforeRunning"));
        m.open();
      }
 else       if (spoon.rep != null && spoon.getTransMeta().getName() == null) {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("SpoonLog.Dialog.Title.GiveTransformationANameBeforeRunning"));
        m.setMessage(Messages.getString("SpoonLog.Dialog.Message.GiveTransformationANameBeforeRunning"));
        m.open();
      }
 else {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("SpoonLog.Dialog.Title.SaveTransformationBeforeRunning2"));
        m.setMessage(Messages.getString("SpoonLog.Dialog.Message.SaveTransformationBeforeRunning2"));
        m.open();
      }
    }
  }
 else {
    trans.stopAll();
    try {
      trans.endProcessing("stop");
      log.logMinimal(Spoon.APP_NAME,Messages.getString("SpoonLog.Log.ProcessingOfTransformationStopped"));
    }
 catch (    KettleException e) {
      new ErrorDialog(shell,spoon.props,Messages.getString("SpoonLog.Dialog.Title.ErrorWritingLogRecord"),Messages.getString("SpoonLog.Dialog.Message.ErrorWritingLogRecord"),e);
    }
    wStart.setText(START_TEXT);
    running=!running;
    if (preview) {
      preview=false;
      showPreview();
    }
  }
}
