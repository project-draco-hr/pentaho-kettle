{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  ModifyListener lsTableMod=new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  SelectionListener lsSelection=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  backupChanged=input.hasChanged();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"TableOutputDialog.DialogTitle"));
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1) {
    wConnection.select(0);
  }
  wConnection.addModifyListener(lsMod);
  wConnection.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent event){
      setFlags();
    }
  }
);
  wConnection.addSelectionListener(lsSelection);
  wlSchema=new Label(shell,SWT.RIGHT);
  wlSchema.setText(BaseMessages.getString(PKG,"TableOutputDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin * 2);
  wlSchema.setLayoutData(fdlSchema);
  wbSchema=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSchema);
  wbSchema.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbSchema=new FormData();
  fdbSchema.top=new FormAttachment(wConnection,2 * margin);
  fdbSchema.right=new FormAttachment(100,0);
  wbSchema.setLayoutData(fdbSchema);
  wSchema=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsTableMod);
  fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin * 2);
  fdSchema.right=new FormAttachment(wbSchema,-margin);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(BaseMessages.getString(PKG,"TableOutputDialog.TargetTable.Label"));
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wbSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wbSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsTableMod);
  fdTable=new FormData();
  fdTable.top=new FormAttachment(wbSchema,margin);
  fdTable.left=new FormAttachment(middle,0);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText(BaseMessages.getString(PKG,"TableOutputDialog.CommitSize.Label"));
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.right=new FormAttachment(middle,-margin);
  fdlCommit.top=new FormAttachment(wbTable,margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wbTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlTruncate=new Label(shell,SWT.RIGHT);
  wlTruncate.setText(BaseMessages.getString(PKG,"TableOutputDialog.TruncateTable.Label"));
  props.setLook(wlTruncate);
  fdlTruncate=new FormData();
  fdlTruncate.left=new FormAttachment(0,0);
  fdlTruncate.top=new FormAttachment(wCommit,margin);
  fdlTruncate.right=new FormAttachment(middle,-margin);
  wlTruncate.setLayoutData(fdlTruncate);
  wTruncate=new Button(shell,SWT.CHECK);
  props.setLook(wTruncate);
  fdTruncate=new FormData();
  fdTruncate.left=new FormAttachment(middle,0);
  fdTruncate.top=new FormAttachment(wCommit,margin);
  fdTruncate.right=new FormAttachment(100,0);
  wTruncate.setLayoutData(fdTruncate);
  SelectionAdapter lsSelMod=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wTruncate.addSelectionListener(lsSelMod);
  wlIgnore=new Label(shell,SWT.RIGHT);
  wlIgnore.setText(BaseMessages.getString(PKG,"TableOutputDialog.IgnoreInsertErrors.Label"));
  props.setLook(wlIgnore);
  fdlIgnore=new FormData();
  fdlIgnore.left=new FormAttachment(0,0);
  fdlIgnore.top=new FormAttachment(wTruncate,margin);
  fdlIgnore.right=new FormAttachment(middle,-margin);
  wlIgnore.setLayoutData(fdlIgnore);
  wIgnore=new Button(shell,SWT.CHECK);
  props.setLook(wIgnore);
  fdIgnore=new FormData();
  fdIgnore.left=new FormAttachment(middle,0);
  fdIgnore.top=new FormAttachment(wTruncate,margin);
  fdIgnore.right=new FormAttachment(100,0);
  wIgnore.setLayoutData(fdIgnore);
  wIgnore.addSelectionListener(lsSelMod);
  wlSpecifyFields=new Label(shell,SWT.RIGHT);
  wlSpecifyFields.setText(BaseMessages.getString(PKG,"TableOutputDialog.SpecifyFields.Label"));
  props.setLook(wlSpecifyFields);
  fdlSpecifyFields=new FormData();
  fdlSpecifyFields.left=new FormAttachment(0,0);
  fdlSpecifyFields.top=new FormAttachment(wIgnore,margin);
  fdlSpecifyFields.right=new FormAttachment(middle,-margin);
  wlSpecifyFields.setLayoutData(fdlSpecifyFields);
  wSpecifyFields=new Button(shell,SWT.CHECK);
  props.setLook(wSpecifyFields);
  fdSpecifyFields=new FormData();
  fdSpecifyFields.left=new FormAttachment(middle,0);
  fdSpecifyFields.top=new FormAttachment(wIgnore,margin);
  fdSpecifyFields.right=new FormAttachment(100,0);
  wSpecifyFields.setLayoutData(fdSpecifyFields);
  wSpecifyFields.addSelectionListener(lsSelMod);
  wSpecifyFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wMainTab=new CTabItem(wTabFolder,SWT.NONE);
  wMainTab.setText(BaseMessages.getString(PKG,"TableOutputDialog.MainTab.CTabItem"));
  FormLayout mainLayout=new FormLayout();
  mainLayout.marginWidth=3;
  mainLayout.marginHeight=3;
  Composite wMainComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wMainComp);
  wMainComp.setLayout(mainLayout);
  wlUsePart=new Label(wMainComp,SWT.RIGHT);
  wlUsePart.setText(BaseMessages.getString(PKG,"TableOutputDialog.UsePart.Label"));
  wlUsePart.setToolTipText(BaseMessages.getString(PKG,"TableOutputDialog.UsePart.Tooltip"));
  props.setLook(wlUsePart);
  fdlUsePart=new FormData();
  fdlUsePart.left=new FormAttachment(0,0);
  fdlUsePart.top=new FormAttachment(wSpecifyFields,margin * 5);
  fdlUsePart.right=new FormAttachment(middle,-margin);
  wlUsePart.setLayoutData(fdlUsePart);
  wUsePart=new Button(wMainComp,SWT.CHECK);
  props.setLook(wUsePart);
  fdUsePart=new FormData();
  fdUsePart.left=new FormAttachment(middle,0);
  fdUsePart.top=new FormAttachment(wSpecifyFields,margin * 5);
  fdUsePart.right=new FormAttachment(100,0);
  wUsePart.setLayoutData(fdUsePart);
  wUsePart.addSelectionListener(lsSelMod);
  wUsePart.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      if (wUsePart.getSelection())       wNameInField.setSelection(false);
      setFlags();
    }
  }
);
  wlPartField=new Label(wMainComp,SWT.RIGHT);
  wlPartField.setText(BaseMessages.getString(PKG,"TableOutputDialog.PartField.Label"));
  props.setLook(wlPartField);
  fdlPartField=new FormData();
  fdlPartField.top=new FormAttachment(wUsePart,margin);
  fdlPartField.left=new FormAttachment(0,0);
  fdlPartField.right=new FormAttachment(middle,-margin);
  wlPartField.setLayoutData(fdlPartField);
  wPartField=new ComboVar(transMeta,wMainComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPartField);
  wPartField.addModifyListener(lsMod);
  fdPartField=new FormData();
  fdPartField.top=new FormAttachment(wUsePart,margin);
  fdPartField.left=new FormAttachment(middle,0);
  fdPartField.right=new FormAttachment(100,0);
  wPartField.setLayoutData(fdPartField);
  wPartField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlPartMonthly=new Label(wMainComp,SWT.RIGHT);
  wlPartMonthly.setText(BaseMessages.getString(PKG,"TableOutputDialog.PartMonthly.Label"));
  wlPartMonthly.setToolTipText(BaseMessages.getString(PKG,"TableOutputDialog.PartMonthly.Tooltip"));
  props.setLook(wlPartMonthly);
  fdlPartMonthly=new FormData();
  fdlPartMonthly.left=new FormAttachment(0,0);
  fdlPartMonthly.top=new FormAttachment(wPartField,margin);
  fdlPartMonthly.right=new FormAttachment(middle,-margin);
  wlPartMonthly.setLayoutData(fdlPartMonthly);
  wPartMonthly=new Button(wMainComp,SWT.RADIO);
  props.setLook(wPartMonthly);
  fdPartMonthly=new FormData();
  fdPartMonthly.left=new FormAttachment(middle,0);
  fdPartMonthly.top=new FormAttachment(wPartField,margin);
  fdPartMonthly.right=new FormAttachment(100,0);
  wPartMonthly.setLayoutData(fdPartMonthly);
  wPartMonthly.addSelectionListener(lsSelMod);
  wPartMonthly.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wPartMonthly.setSelection(true);
      wPartDaily.setSelection(false);
    }
  }
);
  wlPartDaily=new Label(wMainComp,SWT.RIGHT);
  wlPartDaily.setText(BaseMessages.getString(PKG,"TableOutputDialog.PartDaily.Label"));
  wlPartDaily.setToolTipText(BaseMessages.getString(PKG,"TableOutputDialog.PartDaily.Tooltip"));
  props.setLook(wlPartDaily);
  fdlPartDaily=new FormData();
  fdlPartDaily.left=new FormAttachment(0,0);
  fdlPartDaily.top=new FormAttachment(wPartMonthly,margin);
  fdlPartDaily.right=new FormAttachment(middle,-margin);
  wlPartDaily.setLayoutData(fdlPartDaily);
  wPartDaily=new Button(wMainComp,SWT.RADIO);
  props.setLook(wPartDaily);
  fdPartDaily=new FormData();
  fdPartDaily.left=new FormAttachment(middle,0);
  fdPartDaily.top=new FormAttachment(wPartMonthly,margin);
  fdPartDaily.right=new FormAttachment(100,0);
  wPartDaily.setLayoutData(fdPartDaily);
  wPartDaily.addSelectionListener(lsSelMod);
  wPartDaily.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wPartDaily.setSelection(true);
      wPartMonthly.setSelection(false);
    }
  }
);
  wlBatch=new Label(wMainComp,SWT.RIGHT);
  wlBatch.setText(BaseMessages.getString(PKG,"TableOutputDialog.Batch.Label"));
  props.setLook(wlBatch);
  fdlBatch=new FormData();
  fdlBatch.left=new FormAttachment(0,0);
  fdlBatch.top=new FormAttachment(wPartDaily,5 * margin);
  fdlBatch.right=new FormAttachment(middle,-margin);
  wlBatch.setLayoutData(fdlBatch);
  wBatch=new Button(wMainComp,SWT.CHECK);
  props.setLook(wBatch);
  fdBatch=new FormData();
  fdBatch.left=new FormAttachment(middle,0);
  fdBatch.top=new FormAttachment(wPartDaily,5 * margin);
  fdBatch.right=new FormAttachment(100,0);
  wBatch.setLayoutData(fdBatch);
  wBatch.addSelectionListener(lsSelMod);
  wBatch.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlNameInField=new Label(wMainComp,SWT.RIGHT);
  wlNameInField.setText(BaseMessages.getString(PKG,"TableOutputDialog.NameInField.Label"));
  props.setLook(wlNameInField);
  fdlNameInField=new FormData();
  fdlNameInField.left=new FormAttachment(0,0);
  fdlNameInField.top=new FormAttachment(wBatch,margin * 5);
  fdlNameInField.right=new FormAttachment(middle,-margin);
  wlNameInField.setLayoutData(fdlNameInField);
  wNameInField=new Button(wMainComp,SWT.CHECK);
  props.setLook(wNameInField);
  fdNameInField=new FormData();
  fdNameInField.left=new FormAttachment(middle,0);
  fdNameInField.top=new FormAttachment(wBatch,margin * 5);
  fdNameInField.right=new FormAttachment(100,0);
  wNameInField.setLayoutData(fdNameInField);
  wNameInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent se){
      if (wNameInField.getSelection()) {
        wUsePart.setSelection(false);
      }
      setFlags();
    }
  }
);
  wlNameField=new Label(wMainComp,SWT.RIGHT);
  wlNameField.setText(BaseMessages.getString(PKG,"TableOutputDialog.NameField.Label"));
  props.setLook(wlNameField);
  fdlNameField=new FormData();
  fdlNameField.left=new FormAttachment(0,0);
  fdlNameField.top=new FormAttachment(wNameInField,margin);
  fdlNameField.right=new FormAttachment(middle,-margin);
  wlNameField.setLayoutData(fdlNameField);
  wNameField=new ComboVar(transMeta,wMainComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wNameField);
  wNameField.addModifyListener(lsMod);
  fdNameField=new FormData();
  fdNameField.left=new FormAttachment(middle,0);
  fdNameField.top=new FormAttachment(wNameInField,margin);
  fdNameField.right=new FormAttachment(100,0);
  wNameField.setLayoutData(fdNameField);
  wNameField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      getFields();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlNameInTable=new Label(wMainComp,SWT.RIGHT);
  wlNameInTable.setText(BaseMessages.getString(PKG,"TableOutputDialog.NameInTable.Label"));
  props.setLook(wlNameInTable);
  fdlNameInTable=new FormData();
  fdlNameInTable.left=new FormAttachment(0,0);
  fdlNameInTable.top=new FormAttachment(wNameField,margin);
  fdlNameInTable.right=new FormAttachment(middle,-margin);
  wlNameInTable.setLayoutData(fdlNameInTable);
  wNameInTable=new Button(wMainComp,SWT.CHECK);
  props.setLook(wNameInTable);
  fdNameInTable=new FormData();
  fdNameInTable.left=new FormAttachment(middle,0);
  fdNameInTable.top=new FormAttachment(wNameField,margin);
  fdNameInTable.right=new FormAttachment(100,0);
  wNameInTable.setLayoutData(fdNameInTable);
  wNameInTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlReturnKeys=new Label(wMainComp,SWT.RIGHT);
  wlReturnKeys.setText(BaseMessages.getString(PKG,"TableOutputDialog.ReturnKeys.Label"));
  wlReturnKeys.setToolTipText(BaseMessages.getString(PKG,"TableOutputDialog.ReturnKeys.Tooltip"));
  props.setLook(wlReturnKeys);
  fdlReturnKeys=new FormData();
  fdlReturnKeys.left=new FormAttachment(0,0);
  fdlReturnKeys.top=new FormAttachment(wNameInTable,margin * 5);
  fdlReturnKeys.right=new FormAttachment(middle,-margin);
  wlReturnKeys.setLayoutData(fdlReturnKeys);
  wReturnKeys=new Button(wMainComp,SWT.CHECK);
  props.setLook(wReturnKeys);
  fdReturnKeys=new FormData();
  fdReturnKeys.left=new FormAttachment(middle,0);
  fdReturnKeys.top=new FormAttachment(wNameInTable,margin * 5);
  fdReturnKeys.right=new FormAttachment(100,0);
  wReturnKeys.setLayoutData(fdReturnKeys);
  wReturnKeys.addSelectionListener(lsSelMod);
  wReturnKeys.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setFlags();
    }
  }
);
  wlReturnField=new Label(wMainComp,SWT.RIGHT);
  wlReturnField.setText(BaseMessages.getString(PKG,"TableOutputDialog.ReturnField.Label"));
  props.setLook(wlReturnField);
  fdlReturnField=new FormData();
  fdlReturnField.left=new FormAttachment(0,0);
  fdlReturnField.right=new FormAttachment(middle,-margin);
  fdlReturnField.top=new FormAttachment(wReturnKeys,margin);
  wlReturnField.setLayoutData(fdlReturnField);
  wReturnField=new TextVar(transMeta,wMainComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wReturnField);
  wReturnField.addModifyListener(lsMod);
  fdReturnField=new FormData();
  fdReturnField.left=new FormAttachment(middle,0);
  fdReturnField.top=new FormAttachment(wReturnKeys,margin);
  fdReturnField.right=new FormAttachment(100,0);
  wReturnField.setLayoutData(fdReturnField);
  fdMainComp=new FormData();
  fdMainComp.left=new FormAttachment(0,0);
  fdMainComp.top=new FormAttachment(0,0);
  fdMainComp.right=new FormAttachment(100,0);
  fdMainComp.bottom=new FormAttachment(100,0);
  wMainComp.setLayoutData(fdMainComp);
  wMainComp.layout();
  wMainTab.setControl(wMainComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"TableOutputDialog.FieldsTab.CTabItem.Title"));
  Composite wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFieldsComp);
  FormLayout fieldsCompLayout=new FormLayout();
  fieldsCompLayout.marginWidth=Const.FORM_MARGIN;
  fieldsCompLayout.marginHeight=Const.FORM_MARGIN;
  wFieldsComp.setLayout(fieldsCompLayout);
  wlFields=new Label(wFieldsComp,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"TableOutputDialog.InsertFields.Label"));
  props.setLook(wlFields);
  FormData fdlUpIns=new FormData();
  fdlUpIns.left=new FormAttachment(0,0);
  fdlUpIns.top=new FormAttachment(0,margin);
  wlFields.setLayoutData(fdlUpIns);
  int tableCols=2;
  int UpInsRows=(input.getFieldStream() != null ? input.getFieldStream().length : 1);
  ciFields=new ColumnInfo[tableCols];
  ciFields[0]=new ColumnInfo(BaseMessages.getString(PKG,"TableOutputDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciFields[1]=new ColumnInfo(BaseMessages.getString(PKG,"TableOutputDialog.ColumnInfo.StreamField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  tableFieldColumns.add(ciFields[0]);
  wFields=new TableView(transMeta,wFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciFields,UpInsRows,lsMod,props);
  wGetFields=new Button(wFieldsComp,SWT.PUSH);
  wGetFields.setText(BaseMessages.getString(PKG,"TableOutputDialog.GetFields.Button"));
  fdGetFields=new FormData();
  fdGetFields.top=new FormAttachment(wlFields,margin);
  fdGetFields.right=new FormAttachment(100,0);
  wGetFields.setLayoutData(fdGetFields);
  wDoMapping=new Button(wFieldsComp,SWT.PUSH);
  wDoMapping.setText(BaseMessages.getString(PKG,"TableOutputDialog.DoMapping.Button"));
  fdDoMapping=new FormData();
  fdDoMapping.top=new FormAttachment(wGetFields,margin);
  fdDoMapping.right=new FormAttachment(100,0);
  wDoMapping.setLayoutData(fdDoMapping);
  wDoMapping.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      generateMappings();
    }
  }
);
  FormData fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wGetFields,-margin);
  fdFields.bottom=new FormAttachment(100,-2 * margin);
  wFields.setLayoutData(fdFields);
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCreate=new Button(shell,SWT.PUSH);
  wCreate.setText(BaseMessages.getString(PKG,"System.Button.SQL"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wCreate},margin,null);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wSpecifyFields,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(wOK,-margin);
  wTabFolder.setLayoutData(fdTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCreate=new Listener(){
    public void handleEvent(    Event e){
      sql();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCreate.addListener(SWT.Selection,lsCreate);
  wCancel.addListener(SWT.Selection,lsCancel);
  wGetFields.addListener(SWT.Selection,lsGet);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wCommit.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wPartField.addSelectionListener(lsDef);
  wNameField.addSelectionListener(lsDef);
  wReturnField.addSelectionListener(lsDef);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wbSchema.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getSchemaNames();
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  setTableFieldCombo();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
