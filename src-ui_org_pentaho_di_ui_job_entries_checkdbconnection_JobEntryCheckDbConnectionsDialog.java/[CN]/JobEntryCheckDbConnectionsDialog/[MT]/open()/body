{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobCheckDbConnections.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobCheckDbConnections.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"JobCheckDbConnections.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wName,2 * margin);
  wlFields.setLayoutData(fdlFields);
  wbdSourceFileFolder=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdSourceFileFolder);
  wbdSourceFileFolder.setText("Supprimer");
  wbdSourceFileFolder.setToolTipText(BaseMessages.getString(PKG,"JobCheckDbConnections.DeleteSourceFileButton.Label"));
  fdbdSourceFileFolder=new FormData();
  fdbdSourceFileFolder.right=new FormAttachment(100,-margin);
  fdbdSourceFileFolder.top=new FormAttachment(wlFields,50);
  wbdSourceFileFolder.setLayoutData(fdbdSourceFileFolder);
  wbgetConnections=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbgetConnections);
  wbgetConnections.setText("Connexions");
  wbgetConnections.setToolTipText("R???cup???rer les connexions disponibles");
  fdbgetConnections=new FormData();
  fdbgetConnections.right=new FormAttachment(100,-margin);
  fdbgetConnections.top=new FormAttachment(wlFields,20);
  wbgetConnections.setLayoutData(fdbgetConnections);
  addDatabases();
  int rows=jobEntry.connections == null ? 1 : (jobEntry.connections.length == 0 ? 0 : jobEntry.connections.length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"JobCheckDbConnections.Fields.Argument.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,connections,false),new ColumnInfo(BaseMessages.getString(PKG,"JobCheckDbConnections.Fields.WaitFor.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"JobCheckDbConnections.Fields.WaitForTime.Label"),ColumnInfo.COLUMN_TYPE_CCOMBO,JobEntryCheckDbConnections.unitTimeDesc,false)};
  colinf[0].setToolTip(BaseMessages.getString(PKG,"JobCheckDbConnections.Fields.Column"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(BaseMessages.getString(PKG,"JobCheckDbConnections.WaitFor.ToolTip"));
  wFields=new TableView(jobMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wbgetConnections,-margin);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  FormData fd=new FormData();
  fd.right=new FormAttachment(50,-10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wOK.setLayoutData(fd);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  fd=new FormData();
  fd.left=new FormAttachment(50,10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wCancel.setLayoutData(fd);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wFields);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wbdSourceFileFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx[]=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wbgetConnections.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      getDatabases();
    }
  }
);
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobCheckDbConnectionsDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
