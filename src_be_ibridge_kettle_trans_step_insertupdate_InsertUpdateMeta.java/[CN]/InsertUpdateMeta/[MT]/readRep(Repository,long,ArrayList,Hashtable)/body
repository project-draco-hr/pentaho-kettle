{
  try {
    long id_connection=rep.getStepAttributeInteger(id_step,"id_connection");
    database=Const.findDatabase(databases,id_connection);
    commitSize=(int)rep.getStepAttributeInteger(id_step,"commit");
    tableName=rep.getStepAttributeString(id_step,"table");
    updateBypassed=rep.getStepAttributeBoolean(id_step,"update_bypassed");
    int nrkeys=rep.countNrStepAttributes(id_step,"key_name");
    int nrvalues=rep.countNrStepAttributes(id_step,"value_name");
    allocate(nrkeys,nrvalues);
    for (int i=0; i < nrkeys; i++) {
      keyStream[i]=rep.getStepAttributeString(id_step,i,"key_name");
      keyLookup[i]=rep.getStepAttributeString(id_step,i,"key_field");
      keyCondition[i]=rep.getStepAttributeString(id_step,i,"key_condition");
      keyStream2[i]=rep.getStepAttributeString(id_step,i,"key_name2");
    }
    for (int i=0; i < nrvalues; i++) {
      updateLookup[i]=rep.getStepAttributeString(id_step,i,"value_name");
      updateStream[i]=rep.getStepAttributeString(id_step,i,"value_rename");
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
