{
  assertNull(meta.getNotes());
  meta.clear();
  assertNotNull(meta.getNotes());
  assertTrue(meta.getNotes().isEmpty());
  Exception e=null;
  try {
    assertNull(meta.getNote(0));
  }
 catch (  IndexOutOfBoundsException ioobe) {
    e=ioobe;
  }
  assertNotNull(e);
  assertNull(meta.getNote(20,20));
  NotePadMeta note1=mock(NotePadMeta.class);
  meta.removeNote(0);
  assertFalse(meta.hasChanged());
  meta.addNote(note1);
  assertTrue(meta.hasChanged());
  NotePadMeta note2=mock(NotePadMeta.class);
  when(note2.getLocation()).thenReturn(new Point(0,0));
  when(note2.isSelected()).thenReturn(true);
  meta.addNote(1,note2);
  assertEquals(note2,meta.getNote(0,0));
  List<NotePadMeta> selectedNotes=meta.getSelectedNotes();
  assertNotNull(selectedNotes);
  assertEquals(1,selectedNotes.size());
  assertEquals(note2,selectedNotes.get(0));
  assertEquals(1,meta.indexOfNote(note2));
  meta.removeNote(2);
  assertEquals(2,meta.nrNotes());
  meta.removeNote(1);
  assertEquals(1,meta.nrNotes());
  assertTrue(meta.haveNotesChanged());
  meta.clearChanged();
  assertFalse(meta.haveNotesChanged());
  meta.addNote(1,note2);
  meta.lowerNote(1);
  assertTrue(meta.haveNotesChanged());
  meta.clearChanged();
  assertFalse(meta.haveNotesChanged());
  meta.raiseNote(0);
  assertTrue(meta.haveNotesChanged());
  meta.clearChanged();
  assertFalse(meta.haveNotesChanged());
  int[] indexes=meta.getNoteIndexes(Arrays.asList(note1,note2));
  assertNotNull(indexes);
  assertEquals(2,indexes.length);
}
