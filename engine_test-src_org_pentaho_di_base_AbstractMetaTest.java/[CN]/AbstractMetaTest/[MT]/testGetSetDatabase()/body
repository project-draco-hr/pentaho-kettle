{
  assertEquals(0,meta.nrDatabases());
  assertNull(meta.getDatabases());
  assertFalse(meta.haveConnectionsChanged());
  meta.clear();
  assertTrue(meta.getDatabases().isEmpty());
  assertEquals(0,meta.nrDatabases());
  assertFalse(meta.haveConnectionsChanged());
  DatabaseMeta db1=mock(DatabaseMeta.class);
  when(db1.getName()).thenReturn("db1");
  when(db1.getDisplayName()).thenReturn("db1");
  meta.addDatabase(db1);
  assertEquals(1,meta.nrDatabases());
  assertFalse(meta.getDatabases().isEmpty());
  assertTrue(meta.haveConnectionsChanged());
  DatabaseMeta db2=mock(DatabaseMeta.class);
  when(db2.getName()).thenReturn("db2");
  when(db2.getDisplayName()).thenReturn("db2");
  meta.addDatabase(db2);
  assertEquals(2,meta.nrDatabases());
  meta.addDatabase(db1,true);
  assertEquals(2,meta.nrDatabases());
  meta.addOrReplaceDatabase(db1);
  assertEquals(2,meta.nrDatabases());
  meta.addDatabase(db2,false);
  assertEquals(2,meta.nrDatabases());
  DatabaseMeta db3=mock(DatabaseMeta.class);
  when(db3.getName()).thenReturn("db3");
  meta.addDatabase(db3,false);
  assertEquals(3,meta.nrDatabases());
  assertEquals(db1,meta.getDatabase(0));
  assertEquals(0,meta.indexOfDatabase(db1));
  assertEquals(db2,meta.getDatabase(1));
  assertEquals(1,meta.indexOfDatabase(db2));
  assertEquals(db3,meta.getDatabase(2));
  assertEquals(2,meta.indexOfDatabase(db3));
  DatabaseMeta db4=mock(DatabaseMeta.class);
  when(db4.getName()).thenReturn("db4");
  meta.addDatabase(3,db4);
  assertEquals(4,meta.nrDatabases());
  assertEquals(db4,meta.getDatabase(3));
  assertEquals(3,meta.indexOfDatabase(db4));
  meta.removeDatabase(3);
  assertEquals(3,meta.nrDatabases());
  assertTrue(meta.haveConnectionsChanged());
  meta.clearChangedDatabases();
  assertFalse(meta.haveConnectionsChanged());
  List<DatabaseMeta> list=Arrays.asList(db2,db1);
  meta.setDatabases(list);
  assertEquals(2,meta.nrDatabases());
  assertEquals("db1",meta.getDatabaseNames()[0]);
  assertEquals(0,meta.indexOfDatabase(db1));
  meta.removeDatabase(-1);
  assertEquals(2,meta.nrDatabases());
  meta.removeDatabase(2);
  assertEquals(2,meta.nrDatabases());
  assertEquals(db1,meta.findDatabase("db1"));
  assertNull(meta.findDatabase(""));
}
