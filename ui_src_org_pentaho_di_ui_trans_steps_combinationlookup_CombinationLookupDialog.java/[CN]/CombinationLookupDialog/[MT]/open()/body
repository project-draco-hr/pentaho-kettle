{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  ModifyListener lsTableMod=new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  SelectionListener lsSelection=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setTableFieldCombo();
    }
  }
;
  backupChanged=input.hasChanged();
  ci=input.getDatabaseMeta();
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1) {
    wConnection.select(0);
  }
  wConnection.addModifyListener(lsMod);
  wConnection.addSelectionListener(lsSelection);
  wConnection.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      ci=transMeta.findDatabase(wConnection.getText());
      setAutoincUse();
      setSequence();
      input.setChanged();
    }
  }
);
  wlSchema=new Label(shell,SWT.RIGHT);
  wlSchema.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  FormData fdlSchema=new FormData();
  fdlSchema.left=new FormAttachment(0,0);
  fdlSchema.right=new FormAttachment(middle,-margin);
  fdlSchema.top=new FormAttachment(wConnection,margin);
  wlSchema.setLayoutData(fdlSchema);
  wbSchema=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSchema);
  wbSchema.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbSchema=new FormData();
  fdbSchema.top=new FormAttachment(wConnection,margin);
  fdbSchema.right=new FormAttachment(100,0);
  wbSchema.setLayoutData(fdbSchema);
  wSchema=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsTableMod);
  FormData fdSchema=new FormData();
  fdSchema.left=new FormAttachment(middle,0);
  fdSchema.top=new FormAttachment(wConnection,margin);
  fdSchema.right=new FormAttachment(wbSchema,-margin);
  wSchema.setLayoutData(fdSchema);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Target.Label"));
  props.setLook(wlTable);
  FormData fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wbSchema,margin);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.BrowseTable.Button"));
  FormData fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wbSchema,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsTableMod);
  FormData fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wbSchema,margin);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Commitsize.Label"));
  props.setLook(wlCommit);
  FormData fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.right=new FormAttachment(middle,-margin);
  fdlCommit.top=new FormAttachment(wTable,margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  FormData fdCommit=new FormData();
  fdCommit.top=new FormAttachment(wTable,margin);
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.right=new FormAttachment(middle + (100 - middle) / 3,-margin);
  wCommit.setLayoutData(fdCommit);
  wlCachesize=new Label(shell,SWT.RIGHT);
  wlCachesize.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Cachesize.Label"));
  props.setLook(wlCachesize);
  FormData fdlCachesize=new FormData();
  fdlCachesize.top=new FormAttachment(wTable,margin);
  fdlCachesize.left=new FormAttachment(wCommit,margin);
  fdlCachesize.right=new FormAttachment(middle + 2 * (100 - middle) / 3,-margin);
  wlCachesize.setLayoutData(fdlCachesize);
  wCachesize=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCachesize);
  wCachesize.addModifyListener(lsMod);
  FormData fdCachesize=new FormData();
  fdCachesize.top=new FormAttachment(wTable,margin);
  fdCachesize.left=new FormAttachment(wlCachesize,margin);
  fdCachesize.right=new FormAttachment(100,0);
  wCachesize.setLayoutData(fdCachesize);
  wCachesize.setToolTipText(BaseMessages.getString(PKG,"CombinationLookupDialog.Cachesize.ToolTip"));
  wlPreloadCache=new Label(shell,SWT.RIGHT);
  wlPreloadCache.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.PreloadCache.Label"));
  props.setLook(wlPreloadCache);
  FormData fdlPreloadCache=new FormData();
  fdlPreloadCache.top=new FormAttachment(wCachesize,margin);
  fdlPreloadCache.left=new FormAttachment(wCommit,margin);
  fdlPreloadCache.right=new FormAttachment(middle + 2 * (100 - middle) / 3,-margin);
  wlPreloadCache.setLayoutData(fdlPreloadCache);
  wPreloadCache=new Button(shell,SWT.CHECK);
  props.setLook(wPreloadCache);
  FormData fdPreloadCache=new FormData();
  fdPreloadCache.top=new FormAttachment(wCachesize,margin);
  fdPreloadCache.left=new FormAttachment(wlPreloadCache,margin);
  fdPreloadCache.right=new FormAttachment(100,0);
  wPreloadCache.setLayoutData(fdPreloadCache);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Keyfields.Label"));
  props.setLook(wlKey);
  FormData fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wlPreloadCache,margin);
  fdlKey.right=new FormAttachment(100,0);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=2;
  int nrKeyRows=(input.getKeyField() != null ? input.getKeyField().length : 1);
  ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo(BaseMessages.getString(PKG,"CombinationLookupDialog.ColumnInfo.DimensionField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciKey[1]=new ColumnInfo(BaseMessages.getString(PKG,"CombinationLookupDialog.ColumnInfo.FieldInStream"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  tableFieldColumns.add(ciKey[0]);
  wKey=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.GetFields.Button"));
  wCreate=new Button(shell,SWT.PUSH);
  wCreate.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wGet,wCreate},margin,null);
  wlLastUpdateField=new Label(shell,SWT.RIGHT);
  wlLastUpdateField.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.LastUpdateField.Label"));
  props.setLook(wlLastUpdateField);
  FormData fdlLastUpdateField=new FormData();
  fdlLastUpdateField.left=new FormAttachment(0,0);
  fdlLastUpdateField.right=new FormAttachment(middle,-margin);
  fdlLastUpdateField.bottom=new FormAttachment(wOK,-2 * margin);
  wlLastUpdateField.setLayoutData(fdlLastUpdateField);
  wLastUpdateField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLastUpdateField);
  wLastUpdateField.addModifyListener(lsMod);
  FormData fdLastUpdateField=new FormData();
  fdLastUpdateField.left=new FormAttachment(middle,0);
  fdLastUpdateField.right=new FormAttachment(100,0);
  fdLastUpdateField.bottom=new FormAttachment(wOK,-2 * margin);
  wLastUpdateField.setLayoutData(fdLastUpdateField);
  wlHashfield=new Label(shell,SWT.RIGHT);
  wlHashfield.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Hashfield.Label"));
  props.setLook(wlHashfield);
  FormData fdlHashfield=new FormData();
  fdlHashfield.left=new FormAttachment(0,0);
  fdlHashfield.right=new FormAttachment(middle,-margin);
  fdlHashfield.bottom=new FormAttachment(wLastUpdateField,-margin);
  wlHashfield.setLayoutData(fdlHashfield);
  wHashfield=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wHashfield);
  wHashfield.addModifyListener(lsMod);
  FormData fdHashfield=new FormData();
  fdHashfield.left=new FormAttachment(middle,0);
  fdHashfield.right=new FormAttachment(100,0);
  fdHashfield.bottom=new FormAttachment(wLastUpdateField,-margin);
  wHashfield.setLayoutData(fdHashfield);
  wlHashcode=new Label(shell,SWT.RIGHT);
  wlHashcode.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Hashcode.Label"));
  props.setLook(wlHashcode);
  FormData fdlHashcode=new FormData();
  fdlHashcode.left=new FormAttachment(0,0);
  fdlHashcode.right=new FormAttachment(middle,-margin);
  fdlHashcode.bottom=new FormAttachment(wHashfield,-margin);
  wlHashcode.setLayoutData(fdlHashcode);
  wHashcode=new Button(shell,SWT.CHECK);
  props.setLook(wHashcode);
  FormData fdHashcode=new FormData();
  fdHashcode.left=new FormAttachment(middle,0);
  fdHashcode.right=new FormAttachment(100,0);
  fdHashcode.bottom=new FormAttachment(wHashfield,-margin);
  wHashcode.setLayoutData(fdHashcode);
  wHashcode.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      enableFields();
    }
  }
);
  wlReplace=new Label(shell,SWT.RIGHT);
  wlReplace.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Replace.Label"));
  props.setLook(wlReplace);
  FormData fdlReplace=new FormData();
  fdlReplace.left=new FormAttachment(0,0);
  fdlReplace.right=new FormAttachment(middle,-margin);
  fdlReplace.bottom=new FormAttachment(wHashcode,-margin);
  wlReplace.setLayoutData(fdlReplace);
  wReplace=new Button(shell,SWT.CHECK);
  props.setLook(wReplace);
  FormData fdReplace=new FormData();
  fdReplace.left=new FormAttachment(middle,0);
  fdReplace.bottom=new FormAttachment(wHashcode,-margin);
  fdReplace.right=new FormAttachment(100,0);
  wReplace.setLayoutData(fdReplace);
  wReplace.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      enableFields();
    }
  }
);
  gTechGroup=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gTechGroup.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.TechGroup.Label"));
  GridLayout gridLayout=new GridLayout(3,false);
  gTechGroup.setLayout(gridLayout);
  fdTechGroup=new FormData();
  fdTechGroup.left=new FormAttachment(middle,0);
  fdTechGroup.bottom=new FormAttachment(wReplace,-margin);
  fdTechGroup.right=new FormAttachment(100,0);
  gTechGroup.setBackground(shell.getBackground());
  gTechGroup.setLayoutData(fdTechGroup);
  wTableMax=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wTableMax);
  wTableMax.setSelection(false);
  GridData gdTableMax=new GridData();
  wTableMax.setLayoutData(gdTableMax);
  wTableMax.setToolTipText(BaseMessages.getString(PKG,"CombinationLookupDialog.TableMaximum.Tooltip",Const.CR));
  wlTableMax=new Label(gTechGroup,SWT.LEFT);
  wlTableMax.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.TableMaximum.Label"));
  props.setLook(wlTableMax);
  GridData gdlTableMax=new GridData(GridData.FILL_BOTH);
  gdlTableMax.horizontalSpan=2;
  gdlTableMax.verticalSpan=1;
  wlTableMax.setLayoutData(gdlTableMax);
  wSeqButton=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wSeqButton);
  wSeqButton.setSelection(false);
  GridData gdSeqButton=new GridData();
  wSeqButton.setLayoutData(gdSeqButton);
  wSeqButton.setToolTipText(BaseMessages.getString(PKG,"CombinationLookupDialog.Sequence.Tooltip",Const.CR));
  wlSeqButton=new Label(gTechGroup,SWT.LEFT);
  wlSeqButton.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Sequence.Label"));
  props.setLook(wlSeqButton);
  GridData gdlSeqButton=new GridData();
  wlSeqButton.setLayoutData(gdlSeqButton);
  wSeq=new Text(gTechGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSeq);
  wSeq.addModifyListener(lsMod);
  GridData gdSeq=new GridData(GridData.FILL_HORIZONTAL);
  wSeq.setLayoutData(gdSeq);
  wSeq.addFocusListener(new FocusListener(){
    public void focusGained(    FocusEvent arg0){
      input.setTechKeyCreation(CombinationLookupMeta.CREATION_METHOD_SEQUENCE);
      wSeqButton.setSelection(true);
      wAutoinc.setSelection(false);
      wTableMax.setSelection(false);
    }
    public void focusLost(    FocusEvent arg0){
    }
  }
);
  wAutoinc=new Button(gTechGroup,SWT.RADIO);
  props.setLook(wAutoinc);
  wAutoinc.setSelection(false);
  GridData gdAutoinc=new GridData();
  wAutoinc.setLayoutData(gdAutoinc);
  wAutoinc.setToolTipText(BaseMessages.getString(PKG,"CombinationLookupDialog.AutoincButton.Tooltip",Const.CR));
  wlAutoinc=new Label(gTechGroup,SWT.LEFT);
  wlAutoinc.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.Autoincrement.Label"));
  props.setLook(wlAutoinc);
  GridData gdlAutoinc=new GridData();
  wlAutoinc.setLayoutData(gdlAutoinc);
  setTableMax();
  setSequence();
  setAutoincUse();
  wlTk=new Label(shell,SWT.RIGHT);
  wlTk.setText(BaseMessages.getString(PKG,"CombinationLookupDialog.TechnicalKey.Label"));
  props.setLook(wlTk);
  FormData fdlTk=new FormData();
  fdlTk.left=new FormAttachment(0,0);
  fdlTk.right=new FormAttachment(middle,-margin);
  fdlTk.bottom=new FormAttachment(gTechGroup,-margin);
  wlTk.setLayoutData(fdlTk);
  wTk=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTk);
  FormData fdTk=new FormData();
  fdTk.left=new FormAttachment(middle,0);
  fdTk.bottom=new FormAttachment(gTechGroup,-margin);
  fdTk.right=new FormAttachment(100,0);
  wTk.setLayoutData(fdTk);
  FormData fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(100,0);
  fdKey.bottom=new FormAttachment(wTk,-margin);
  wKey.setLayoutData(fdKey);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),i);
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCreate=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCreate.addListener(SWT.Selection,lsCreate);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wCommit.addSelectionListener(lsDef);
  wSeq.addSelectionListener(lsDef);
  wTk.addSelectionListener(lsDef);
  wCachesize.addSelectionListener(lsDef);
  wHashfield.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbSchema.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getSchemaNames();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  setTableFieldCombo();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
