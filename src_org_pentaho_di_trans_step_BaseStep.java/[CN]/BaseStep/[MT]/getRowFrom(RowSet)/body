{
  while (paused.get() && !stopped.get()) {
    try {
      Thread.sleep(10);
    }
 catch (    InterruptedException e) {
      throw new KettleStepException(e);
    }
  }
  if (isUsingThreadPriorityManagment() && !rowSet.isDone() && rowSet.size() <= lowerBufferBoundary && !isStopped()) {
    try {
      Thread.sleep(0,1);
    }
 catch (    InterruptedException e) {
    }
  }
  Object[] rowData=rowSet.getRow();
  while (rowData == null && !rowSet.isDone() && !stopped.get()) {
    rowData=rowSet.getRow();
  }
  if (rowData == null && rowSet.isDone()) {
    rowData=rowSet.getRow();
  }
  if (stopped.get()) {
    if (log.isDebug())     logDebug(Messages.getString("BaseStep.Log.StopLookingForMoreRows"));
    stopAll();
    return null;
  }
  if (rowData == null && rowSet.isDone()) {
    rowData=rowSet.getRow();
    if (rowData == null) {
      inputRowSets.remove(rowSet);
      return null;
    }
  }
  incrementLinesRead();
  for (int i=0; i < rowListeners.size(); i++) {
    RowListener rowListener=(RowListener)rowListeners.get(i);
    rowListener.rowReadEvent(rowSet.getRowMeta(),rowData);
  }
  return rowData;
}
