{
  if (trans.isSafeModeEnabled()) {
    if (rowMeta.size() > row.length) {
      throw new KettleStepException(BaseMessages.getString(PKG,"BaseStep.Exception.MetadataDoesntMatchDataRowSize",Integer.toString(rowMeta.size()),Integer.toString(row != null ? row.length : 0)));
    }
  }
  StepErrorMeta stepErrorMeta=stepMeta.getStepErrorMeta();
  if (errorRowMeta == null) {
    errorRowMeta=rowMeta.clone();
    RowMetaInterface add=stepErrorMeta.getErrorRowMeta(nrErrors,errorDescriptions,fieldNames,errorCodes);
    errorRowMeta.addRowMeta(add);
  }
  Object[] errorRowData=RowDataUtil.allocateRowData(errorRowMeta.size());
  if (row != null) {
    System.arraycopy(row,0,errorRowData,0,rowMeta.size());
  }
  stepErrorMeta.addErrorRowData(errorRowData,rowMeta.size(),nrErrors,errorDescriptions,fieldNames,errorCodes);
synchronized (this) {
    for (int i=0; i < rowListeners.size(); i++) {
      RowListener rowListener=rowListeners.get(i);
      rowListener.errorRowWrittenEvent(rowMeta,row);
    }
  }
  setPassingData(true);
  try {
    if (errorRowSet != null) {
      while (!errorRowSet.putRow(errorRowMeta,errorRowData) && !isStopped())       ;
      incrementLinesRejected();
    }
    verifyRejectionRates();
  }
  finally {
    setPassingData(false);
  }
}
