{
  RowSet inputFull=null;
  RowSet inputEmpty=null;
synchronized (getInputRowSets()) {
    for (Iterator<RowSet> iterator=getInputRowSets().iterator(); iterator.hasNext(); ) {
      RowSet rowSet=iterator.next();
      if (rowSet.size() == transMeta.getSizeRowset()) {
        inputFull=rowSet;
      }
 else       if (rowSet.size() == 0) {
        inputEmpty=rowSet;
      }
    }
  }
  if (inputFull != null && inputEmpty != null) {
    for (    StepMetaDataCombi combi : trans.getSteps()) {
      int inputSize=0;
      int totalSize=combi.step.getInputRowSets().size() * transMeta.getSizeRowset();
synchronized (combi.step.getInputRowSets()) {
        for (Iterator<RowSet> iterator=getInputRowSets().iterator(); iterator.hasNext(); ) {
          RowSet rowSet=iterator.next();
          inputSize+=rowSet.size();
        }
      }
      if (inputSize > 0 && inputSize == totalSize && combi.step.getOutputRowSets().size() > 1) {
        RowSet outputFull=null;
        RowSet outputEmpty=null;
synchronized (combi.step.getOutputRowSets()) {
          for (          RowSet rowSet : combi.step.getOutputRowSets()) {
            if (rowSet.size() == transMeta.getSizeRowset()) {
              outputFull=rowSet;
            }
 else             if (rowSet.size() == 0) {
              outputEmpty=rowSet;
            }
          }
        }
        if (outputFull != null && outputEmpty != null) {
          if (transMeta.findPrevious(stepMeta,combi.stepMeta)) {
            throw new KettleStepException("A deadlock was detected between steps '" + combi.stepname + "' and '"+ stepname+ "'.  The steps are both waiting for each other because a series of row set buffers filled up.");
          }
        }
      }
    }
  }
}
