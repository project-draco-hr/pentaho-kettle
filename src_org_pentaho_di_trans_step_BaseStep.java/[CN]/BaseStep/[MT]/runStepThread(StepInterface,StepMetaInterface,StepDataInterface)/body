{
  LogWriter log=LogWriter.getInstance();
  try {
    if (log.isDetailed())     log.logDetailed(stepInterface.toString(),BaseMessages.getString(PKG,"System.Log.StartingToRun"));
    while (stepInterface.processRow(meta,data) && !stepInterface.isStopped())     ;
  }
 catch (  Throwable t) {
    try {
      if (t instanceof OutOfMemoryError) {
        log.logError(stepInterface.toString(),"UnexpectedError: " + t.toString());
      }
 else {
        log.logError(stepInterface.toString(),BaseMessages.getString(PKG,"System.Log.UnexpectedError") + " : ");
      }
      log.logError(stepInterface.toString(),Const.getStackTracker(t));
    }
 catch (    OutOfMemoryError e) {
      e.printStackTrace();
    }
 finally {
      stepInterface.setErrors(1);
      stepInterface.stopAll();
    }
  }
 finally {
    stepInterface.dispose(meta,data);
    try {
      long li=stepInterface.getLinesInput();
      long lo=stepInterface.getLinesOutput();
      long lr=stepInterface.getLinesRead();
      long lw=stepInterface.getLinesWritten();
      long lu=stepInterface.getLinesUpdated();
      long lj=stepInterface.getLinesRejected();
      long e=stepInterface.getErrors();
      if (li > 0 || lo > 0 || lr > 0 || lw > 0 || lu > 0 || lj > 0 || e > 0)       log.logBasic(stepInterface.toString(),BaseMessages.getString(PKG,"BaseStep.Log.SummaryInfo",String.valueOf(li),String.valueOf(lo),String.valueOf(lr),String.valueOf(lw),String.valueOf(lu),String.valueOf(e + lj)));
 else       log.logDetailed(stepInterface.toString(),BaseMessages.getString(PKG,"BaseStep.Log.SummaryInfo",String.valueOf(li),String.valueOf(lo),String.valueOf(lr),String.valueOf(lw),String.valueOf(lu),String.valueOf(e + lj)));
    }
 catch (    Throwable t) {
      log.logError(stepInterface.toString(),"UnexpectedError: " + t.toString());
    }
 finally {
      stepInterface.markStop();
    }
  }
}
