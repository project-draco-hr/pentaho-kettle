{
  LogWriter log=LogWriter.getInstance();
  try {
    log.logBasic(stepInterface.toString(),Messages.getString("System.Log.StartingToRun"));
    while (stepInterface.processRow(meta,data) && !stepInterface.isStopped())     ;
  }
 catch (  Throwable t) {
    if (t.toString().startsWith("java.lang.OutOfMemoryError")) {
      log.logError(stepInterface.toString(),"UnexpectedError: " + t.toString());
    }
 else {
      log.logError(stepInterface.toString(),Messages.getString("System.Log.UnexpectedError") + " : ");
    }
    log.logError(stepInterface.toString(),Const.getStackTracker(t));
    stepInterface.setErrors(1);
    stepInterface.stopAll();
  }
 finally {
    stepInterface.dispose(meta,data);
    try {
      log.logBasic(stepInterface.toString(),Messages.getString("BaseStep.Log.SummaryInfo",String.valueOf(stepInterface.getLinesInput()),String.valueOf(stepInterface.getLinesOutput()),String.valueOf(stepInterface.getLinesRead()),String.valueOf(stepInterface.getLinesWritten()),String.valueOf(stepInterface.getLinesUpdated()),String.valueOf(stepInterface.getErrors() + stepInterface.getLinesRejected())));
    }
 catch (    Throwable t) {
      log.logError(stepInterface.toString(),"UnexpectedError: " + t.toString());
    }
 finally {
      stepInterface.markStop();
    }
  }
}
