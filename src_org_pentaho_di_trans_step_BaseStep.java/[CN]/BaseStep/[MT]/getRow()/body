{
  if (stopped.get()) {
    if (log.isDebug())     logDebug(Messages.getString("BaseStep.Log.StopLookingForMoreRows"));
    stopAll();
    return null;
  }
  if (this.checkTransRunning == false) {
    while (!trans.isRunning() && !stopped.get()) {
      try {
        Thread.sleep(1);
      }
 catch (      InterruptedException e) {
      }
    }
    this.checkTransRunning=true;
  }
  if (inputRowSetsSize == 0) {
    return null;
  }
  RowSet in=currentInputStream();
  Object[] row=in.getRow();
  while (!in.isDone() && row == null && !stopped.get()) {
    row=in.getRow();
  }
  if (stopped.get()) {
    if (log.isDebug())     logDebug(Messages.getString("BaseStep.Log.StopLookingForMoreRows"));
    stopAll();
    return null;
  }
  if (inputRowMeta == null)   inputRowMeta=in.getRowMeta();
  linesRead++;
  for (int i=0; i < rowListeners.size(); i++) {
    RowListener rowListener=(RowListener)rowListeners.get(i);
    rowListener.rowReadEvent(inputRowMeta,row);
  }
  nextInputStream();
  if (safeModeEnabled) {
  }
  verifyRejectionRates();
  return row;
}
