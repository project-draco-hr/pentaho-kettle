{
  while (paused.get() && !stopped.get()) {
    try {
      Thread.sleep(100);
    }
 catch (    InterruptedException e) {
      throw new KettleStepException(e);
    }
  }
  if (stopped.get()) {
    if (log.isDebug())     logDebug(Messages.getString("BaseStep.Log.StopLookingForMoreRows"));
    stopAll();
    return null;
  }
  if (this.checkTransRunning == false) {
    while (!trans.isRunning() && !stopped.get()) {
      try {
        Thread.sleep(1);
      }
 catch (      InterruptedException e) {
      }
    }
    this.checkTransRunning=true;
  }
  openRemoteInputStepSocketsOnce();
  if (inputRowSets.isEmpty()) {
    return null;
  }
  RowSet inputRowSet=null;
  Object[] row=null;
  if (blockPointer >= NR_OF_ROWS_IN_BLOCK) {
    for (int r=0; r < inputRowSets.size() && row == null; r++) {
      nextInputStream();
      inputRowSet=currentInputStream();
      row=inputRowSet.getRowImmediate();
    }
    if (row != null)     linesRead++;
  }
 else {
    inputRowSet=currentInputStream();
  }
  if (isUsingThreadPriorityManagment() && !inputRowSet.isDone() && inputRowSet.size() <= (transMeta.getSizeRowset() >> 6) && !isStopped()) {
    try {
      Thread.sleep(0,1);
    }
 catch (    InterruptedException e) {
    }
  }
  while (row == null && !isStopped()) {
    row=inputRowSet.getRowWait(1,TimeUnit.MILLISECONDS);
    if (row != null) {
      linesRead++;
      blockPointer++;
    }
 else {
      if (inputRowSet.isDone()) {
        row=inputRowSet.getRowWait(1,TimeUnit.MILLISECONDS);
        if (row == null) {
          inputRowSets.remove(currentInputRowSetNr);
          if (inputRowSets.isEmpty())           return null;
        }
 else {
          linesRead++;
        }
      }
      nextInputStream();
      inputRowSet=currentInputStream();
    }
  }
  while (row == null && !stopped.get()) {
    if (inputRowSets.isEmpty())     return null;
    nextInputStream();
    inputRowSet=currentInputStream();
    row=getRowFrom(inputRowSet);
  }
  if (inputRowMeta == null) {
    inputRowMeta=inputRowSet.getRowMeta();
  }
  if (row != null) {
    if (safeModeEnabled) {
      safeModeChecking(inputRowSet.getRowMeta(),inputRowMeta);
      if (row.length < inputRowMeta.size()) {
        throw new KettleException("Safe mode check noticed that the length of the row data is smaller (" + row.length + ") than the row metadata size ("+ inputRowMeta.size()+ ")");
      }
    }
    for (int i=0; i < rowListeners.size(); i++) {
      RowListener rowListener=(RowListener)rowListeners.get(i);
      rowListener.rowReadEvent(inputRowMeta,row);
    }
  }
  verifyRejectionRates();
  return row;
}
