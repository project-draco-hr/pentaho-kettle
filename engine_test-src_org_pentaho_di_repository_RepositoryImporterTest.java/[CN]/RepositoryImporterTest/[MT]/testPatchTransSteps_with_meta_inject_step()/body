{
  Repository repository=mock(Repository.class);
  LogChannelInterface log=mock(LogChannelInterface.class);
  RepositoryImporter importer=spy(new RepositoryImporter(repository,log));
  importer.setBaseDirectory(mock(RepositoryDirectoryInterface.class));
  doReturn("TEST_PATH").when(importer).resolvePath(anyString(),anyString());
  MetaInjectMeta metaInjectMeta=mock(MetaInjectMeta.class);
  doReturn(ObjectLocationSpecificationMethod.REPOSITORY_BY_NAME).when(metaInjectMeta).getSpecificationMethod();
  StepMeta stepMeta=mock(StepMeta.class);
  doReturn(metaInjectMeta).when(stepMeta).getStepMetaInterface();
  doReturn(true).when(stepMeta).isEtlMetaInject();
  TransMeta transMeta=mock(TransMeta.class);
  doReturn(Collections.singletonList(stepMeta)).when(transMeta).getSteps();
  importer.patchTransSteps(transMeta);
  verify(metaInjectMeta).setDirectoryPath("TEST_PATH");
}
