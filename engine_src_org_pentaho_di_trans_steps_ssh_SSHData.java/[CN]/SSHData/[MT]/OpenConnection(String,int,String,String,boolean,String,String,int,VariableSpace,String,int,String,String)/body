{
  Connection conn=null;
  boolean isAuthenticated=false;
  File keyFile=null;
  try {
    if (useKey) {
      if (Const.isEmpty(keyFilename)) {
        throw new KettleException(BaseMessages.getString(SSHMeta.PKG,"SSH.Error.PrivateKeyFileMissing"));
      }
      keyFile=new File(keyFilename);
      if (!keyFile.exists()) {
        throw new KettleException(BaseMessages.getString(SSHMeta.PKG,"SSH.Error.PrivateKeyNotExist",keyFilename));
      }
    }
    conn=new Connection(serveur,port);
    if (!Const.isEmpty(proxyhost)) {
      if (!Const.isEmpty(proxyusername)) {
        conn.setProxyData(new HTTPProxyData(proxyhost,proxyport,proxyusername,proxypassword));
      }
 else {
        conn.setProxyData(new HTTPProxyData(proxyhost,proxyport));
      }
    }
    if (timeOut == 0) {
      conn.connect();
    }
 else {
      conn.connect(null,0,timeOut * 1000);
    }
    if (useKey) {
      isAuthenticated=conn.authenticateWithPublicKey(username,keyFile,space.environmentSubstitute(passPhrase));
    }
 else {
      isAuthenticated=conn.authenticateWithPassword(username,password);
    }
    if (isAuthenticated == false) {
      throw new KettleException(BaseMessages.getString(SSHMeta.PKG,"SSH.Error.AuthenticationFailed",username));
    }
  }
 catch (  Exception e) {
    if (conn != null) {
      conn.close();
    }
    throw new KettleException(BaseMessages.getString(SSHMeta.PKG,"SSH.Error.ErrorConnecting",serveur,username),e);
  }
  return conn;
}
