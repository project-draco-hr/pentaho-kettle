{
  Result result=previousResult;
  if (isStart()) {
    try {
      long sleepTime=getNextExecutionTime();
      if (sleepTime > 0) {
        parentJob.getLog().logBasic(parentJob.getName(),"Sleeping: " + (sleepTime / 1000 / 60) + " minutes (sleep time="+ sleepTime+ ")");
        long totalSleep=0L;
        while (totalSleep < sleepTime && !parentJob.isStopped()) {
          Thread.sleep(1000L);
          totalSleep+=1000L;
        }
      }
    }
 catch (    InterruptedException e) {
      throw new KettleJobException(e);
    }
    result=previousResult;
    result.setResult(true);
  }
 else   if (isDummy()) {
    result=previousResult;
  }
  return result;
}
