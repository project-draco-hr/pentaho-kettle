{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL | SWT.RESIZE| SWT.MAX| SWT.MIN);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("License");
  int margin=Const.MARGIN;
  if (Math.random() * 10 > 5.0) {
    wOK=new Button(shell,SWT.PUSH);
    wOK.setText("  I Agree  ");
    wCancel=new Button(shell,SWT.PUSH);
    wCancel.setText("  No thanks  ");
    fdOK=new FormData();
    fdOK.left=new FormAttachment(40,0);
    fdOK.bottom=new FormAttachment(100,-margin);
    wOK.setLayoutData(fdOK);
    fdCancel=new FormData();
    fdCancel.left=new FormAttachment(wOK,10);
    fdCancel.bottom=new FormAttachment(100,-margin);
    wCancel.setLayoutData(fdCancel);
  }
 else {
    wCancel=new Button(shell,SWT.PUSH);
    wCancel.setText("  No thanks  ");
    wOK=new Button(shell,SWT.PUSH);
    wOK.setText("  I Aggree  ");
    fdCancel=new FormData();
    fdCancel.left=new FormAttachment(40,0);
    fdCancel.bottom=new FormAttachment(100,-margin);
    wCancel.setLayoutData(fdCancel);
    fdOK=new FormData();
    fdOK.left=new FormAttachment(wCancel,10);
    fdOK.bottom=new FormAttachment(100,-margin);
    wOK.setLayoutData(fdOK);
  }
  wLicence=new StyledText(shell,SWT.MULTI | SWT.READ_ONLY | SWT.WRAP);
  String message="Thank you for your time trying out Kettle." + Const.CR + Const.CR+ "If you find that this software is useful, licenses can be obtained at very low prices."+ Const.CR+ "Kettle is free for students, schools and charities."+ Const.CR+ Const.CR+ "Without a licence, you can use this software for 30 days."+ Const.CR+ "After 30 days, you will need to obtain a license."+ Const.CR+ Const.CR+ "For more information, support and/or advice, send an e-mail to info@kettle.be "+ Const.CR+ "or visit our website at http://www.kettle.be"+ Const.CR+ Const.CR+ "This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."+ Const.CR+ Const.CR+ "Kettle is (c) 2001-2005 by i-Bridge bvba : http://www.kettle.be";
  wLicence.setText(message);
  String boldPiece="Without a licence, you can use this software for 30 days." + Const.CR + "After 30 days, you will need to obtain a license."+ Const.CR;
  int fromBold=message.indexOf(boldPiece);
  int boldLength=boldPiece.length();
  StyleRange boldStyleRange=new StyleRange();
  boldStyleRange.start=fromBold;
  boldStyleRange.length=boldLength;
  boldStyleRange.fontStyle=SWT.BOLD;
  wLicence.setStyleRange(boldStyleRange);
  props.setLook(wLicence);
  FontData fontData=display.getSystemFont().getFontData()[0];
  fontData.setHeight(fontData.getHeight() + 4);
  final Font font=new Font(display,fontData);
  wLicence.setFont(font);
  shell.addDisposeListener(new DisposeListener(){
    public void widgetDisposed(    DisposeEvent e){
      font.dispose();
    }
  }
);
  fdLicence=new FormData();
  fdLicence.left=new FormAttachment(0,0);
  fdLicence.right=new FormAttachment(100,0);
  fdLicence.bottom=new FormAttachment(wOK,-margin);
  wLicence.setLayoutData(fdLicence);
  wCanvas=new Canvas(shell,SWT.BORDER | SWT.NO_BACKGROUND);
  props.setLook(wCanvas);
  wCanvas.addPaintListener(new PaintListener(){
    public void paintControl(    PaintEvent pe){
      repaint(pe.gc,pe.width,pe.height);
    }
  }
);
  fdCanvas=new FormData();
  fdCanvas.left=new FormAttachment(0,0);
  fdCanvas.top=new FormAttachment(0,margin);
  fdCanvas.right=new FormAttachment(100,0);
  fdCanvas.bottom=new FormAttachment(wLicence,-margin);
  wCanvas.setLayoutData(fdCanvas);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  shell.setSize(640,700);
  getData();
  shell.layout();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return retval;
}
