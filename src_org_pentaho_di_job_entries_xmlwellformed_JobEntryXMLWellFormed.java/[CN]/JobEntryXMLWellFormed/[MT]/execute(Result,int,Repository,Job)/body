{
  LogWriter log=LogWriter.getInstance();
  Result result=previousResult;
  List<RowMetaAndData> rows=result.getRows();
  RowMetaAndData resultRow=null;
  NrErrors=0;
  NrWellFormed=0;
  NrBadFormed=0;
  String vsourcefilefolder[]=source_filefolder;
  String vwildcard[]=wildcard;
  result.setResult(true);
  if (arg_from_previous) {
    if (log.isDetailed())     log.logDetailed(toString(),Messages.getString("JobXMLWellFormed.Log.ArgFromPrevious.Found",(rows != null ? rows.size() : 0) + ""));
  }
  if (arg_from_previous && rows != null) {
    for (int iteration=0; iteration < rows.size(); iteration++) {
      resultRow=rows.get(iteration);
      String vsourcefilefolder_previous=resultRow.getString(0,null);
      String vwildcard_previous=resultRow.getString(1,null);
      if (log.isDetailed())       log.logDetailed(toString(),Messages.getString("JobXMLWellFormed.Log.ProcessingRow",vsourcefilefolder_previous,vwildcard_previous));
    }
  }
 else   if (vsourcefilefolder != null) {
    for (int i=0; i < vsourcefilefolder.length; i++) {
      if (log.isDetailed())       log.logDetailed(toString(),Messages.getString("JobXMLWellFormed.Log.ProcessingRow",vsourcefilefolder[i],vwildcard[i]));
      ProcessFileFolder(vsourcefilefolder[i],vwildcard[i],parentJob,result);
    }
  }
  if (getStatus())   result.setResult(true);
 else {
    result.setResult(false);
    result.setNrErrors(NrErrors);
  }
  result.setNrLinesWritten(NrWellFormed);
  if (log.isDetailed()) {
    log.logDetailed(toString(),"=======================================");
    log.logDetailed(toString(),Messages.getString("JobXMLWellFormed.Log.Info.FilesInError","" + NrErrors));
    log.logDetailed(toString(),Messages.getString("JobXMLWellFormed.Log.Info.FilesInBadFormed","" + NrBadFormed));
    log.logDetailed(toString(),Messages.getString("JobXMLWellFormed.Log.Info.FilesInWellFormed","" + NrWellFormed));
    log.logDetailed(toString(),"=======================================");
  }
  return result;
}
