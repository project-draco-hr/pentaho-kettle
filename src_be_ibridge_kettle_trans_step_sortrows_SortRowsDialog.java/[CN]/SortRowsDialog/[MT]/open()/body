{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("SortRowsDialog.DialogTitle"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlSortDir=new Label(shell,SWT.RIGHT);
  wlSortDir.setText(Messages.getString("SortRowsDialog.SortDir.Label"));
  props.setLook(wlSortDir);
  fdlSortDir=new FormData();
  fdlSortDir.left=new FormAttachment(0,0);
  fdlSortDir.right=new FormAttachment(middle,-margin);
  fdlSortDir.top=new FormAttachment(wStepname,margin);
  wlSortDir.setLayoutData(fdlSortDir);
  wbSortDir=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSortDir);
  wbSortDir.setText(Messages.getString("System.Button.Browse"));
  fdbSortDir=new FormData();
  fdbSortDir.right=new FormAttachment(100,0);
  fdbSortDir.top=new FormAttachment(wStepname,margin);
  wbSortDir.setLayoutData(fdbSortDir);
  wbcSortDir=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbcSortDir);
  wbcSortDir.setText(Messages.getString("System.Button.Variable"));
  fdbcSortDir=new FormData();
  fdbcSortDir.right=new FormAttachment(wbSortDir,-margin);
  fdbcSortDir.top=new FormAttachment(wStepname,margin);
  wbcSortDir.setLayoutData(fdbcSortDir);
  wSortDir=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wSortDir.setText("temp");
  props.setLook(wSortDir);
  wSortDir.addModifyListener(lsMod);
  fdSortDir=new FormData();
  fdSortDir.left=new FormAttachment(middle,0);
  fdSortDir.top=new FormAttachment(wStepname,margin);
  fdSortDir.right=new FormAttachment(wbcSortDir,-margin);
  wSortDir.setLayoutData(fdSortDir);
  wbSortDir.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      DirectoryDialog dd=new DirectoryDialog(shell,SWT.NONE);
      dd.setFilterPath(wSortDir.getText());
      String dir=dd.open();
      if (dir != null) {
        wSortDir.setText(dir);
      }
    }
  }
);
  wSortDir.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wSortDir.setToolTipText(StringUtil.environmentSubstitute(wSortDir.getText()));
    }
  }
);
  wbcSortDir.addSelectionListener(VariableButtonListenerFactory.getSelectionAdapter(shell,wSortDir));
  wlPrefix=new Label(shell,SWT.RIGHT);
  wlPrefix.setText("TMP-file prefix ");
  props.setLook(wlPrefix);
  fdlPrefix=new FormData();
  fdlPrefix.left=new FormAttachment(0,0);
  fdlPrefix.right=new FormAttachment(middle,-margin);
  fdlPrefix.top=new FormAttachment(wbSortDir,margin * 2);
  wlPrefix.setLayoutData(fdlPrefix);
  wPrefix=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPrefix);
  wPrefix.addModifyListener(lsMod);
  fdPrefix=new FormData();
  fdPrefix.left=new FormAttachment(middle,0);
  fdPrefix.top=new FormAttachment(wbSortDir,margin * 2);
  fdPrefix.right=new FormAttachment(100,0);
  wPrefix.setLayoutData(fdPrefix);
  wPrefix.setText("srt");
  wlSortSize=new Label(shell,SWT.RIGHT);
  wlSortSize.setText(Messages.getString("SortRowsDialog.SortSize.Label"));
  props.setLook(wlSortSize);
  fdlSortSize=new FormData();
  fdlSortSize.left=new FormAttachment(0,0);
  fdlSortSize.right=new FormAttachment(middle,-margin);
  fdlSortSize.top=new FormAttachment(wPrefix,margin * 2);
  wlSortSize.setLayoutData(fdlSortSize);
  wSortSize=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSortSize);
  wSortSize.addModifyListener(lsMod);
  fdSortSize=new FormData();
  fdSortSize.left=new FormAttachment(middle,0);
  fdSortSize.top=new FormAttachment(wPrefix,margin * 2);
  fdSortSize.right=new FormAttachment(100,0);
  wSortSize.setLayoutData(fdSortSize);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(Messages.getString("System.Button.GetFields"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,null);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(Messages.getString("SortRowsDialog.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(wSortSize,margin);
  wlFields.setLayoutData(fdlFields);
  final int FieldsCols=2;
  final int FieldsRows=input.getFieldName().length;
  ColumnInfo[] colinf=new ColumnInfo[FieldsCols];
  colinf[0]=new ColumnInfo(Messages.getString("SortRowsDialog.Fieldname.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinf[1]=new ColumnInfo(Messages.getString("SortRowsDialog.Ascending.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{Messages.getString("System.Combo.Yes"),Messages.getString("System.Combo.No")});
  wFields=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wOK,-2 * margin);
  wFields.setLayoutData(fdFields);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSortDir.addSelectionListener(lsDef);
  wPrefix.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
