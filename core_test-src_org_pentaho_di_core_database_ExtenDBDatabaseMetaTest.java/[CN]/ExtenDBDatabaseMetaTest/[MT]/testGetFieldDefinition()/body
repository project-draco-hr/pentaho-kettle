{
  assertEquals("FOO TIMESTAMP",nativeMeta.getFieldDefinition(new ValueMetaDate("FOO"),"","",false,true,false));
  assertEquals("TIMESTAMP",nativeMeta.getFieldDefinition(new ValueMetaTimestamp("FOO"),"","",false,false,false));
  String[] typeCk=new String[]{"CHAR(1)","BOOLEAN","CHAR(1)"};
  int i=(nativeMeta.supportsBooleanDataType() ? 1 : 0);
  assertEquals(typeCk[i],nativeMeta.getFieldDefinition(new ValueMetaBoolean("FOO"),"","",false,false,false));
  odbcMeta.setSupportsBooleanDataType(!(odbcMeta.supportsBooleanDataType()));
  assertEquals(typeCk[i + 1],odbcMeta.getFieldDefinition(new ValueMetaBoolean("FOO"),"","",false,false,false));
  odbcMeta.setSupportsBooleanDataType(!(odbcMeta.supportsBooleanDataType()));
  assertEquals("BIGSERIAL",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",10,0),"FOO","",false,false,false));
  assertEquals("SERIAL",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",8,0),"","FOO",false,false,false));
  assertEquals("NUMERIC(19, 0)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",19,0),"","",false,false,false));
  assertEquals("NUMERIC(22, 7)",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO",22,7),"","",false,false,false));
  assertEquals("DOUBLE PRECISION",nativeMeta.getFieldDefinition(new ValueMetaNumber("FOO"),"","",false,false,false));
  assertEquals("BIGINT",nativeMeta.getFieldDefinition(new ValueMetaBigNumber("FOO",10,0),"","",false,false,false));
  assertEquals("SMALLINT",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",3,0),"","",false,false,false));
  assertEquals("INTEGER",nativeMeta.getFieldDefinition(new ValueMetaInteger("FOO",5,0),"","",false,false,false));
  assertEquals("VARCHAR()",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",0,0),"","",false,false,false));
  assertEquals("VARCHAR(15)",nativeMeta.getFieldDefinition(new ValueMetaString("FOO",15,0),"","",false,false,false));
  assertEquals(" UNKNOWN",nativeMeta.getFieldDefinition(new ValueMetaBinary("FOO",0,0),"","",false,false,false));
  assertEquals(" UNKNOWN",nativeMeta.getFieldDefinition(new ValueMetaInternetAddress("FOO"),"","",false,false,false));
  assertEquals(" UNKNOWN" + System.getProperty("line.separator"),nativeMeta.getFieldDefinition(new ValueMetaInternetAddress("FOO"),"","",false,false,true));
}
