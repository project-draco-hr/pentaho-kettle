{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("Delete");
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText("Step name ");
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabase() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlTable=new Label(shell,SWT.RIGHT);
  wlTable.setText("Target table ");
  props.setLook(wlTable);
  fdlTable=new FormData();
  fdlTable.left=new FormAttachment(0,0);
  fdlTable.right=new FormAttachment(middle,-margin);
  fdlTable.top=new FormAttachment(wConnection,margin * 2);
  wlTable.setLayoutData(fdlTable);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText("&Browse...");
  fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wConnection,margin);
  wbTable.setLayoutData(fdbTable);
  wTable=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  fdTable=new FormData();
  fdTable.left=new FormAttachment(middle,0);
  fdTable.top=new FormAttachment(wConnection,margin * 2);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  wlCommit=new Label(shell,SWT.RIGHT);
  wlCommit.setText("Commit size ");
  props.setLook(wlCommit);
  fdlCommit=new FormData();
  fdlCommit.left=new FormAttachment(0,0);
  fdlCommit.top=new FormAttachment(wTable,margin);
  fdlCommit.right=new FormAttachment(middle,-margin);
  wlCommit.setLayoutData(fdlCommit);
  wCommit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCommit);
  wCommit.addModifyListener(lsMod);
  fdCommit=new FormData();
  fdCommit.left=new FormAttachment(middle,0);
  fdCommit.top=new FormAttachment(wTable,margin);
  fdCommit.right=new FormAttachment(100,0);
  wCommit.setLayoutData(fdCommit);
  wlErrorIgnored=new Label(shell,SWT.RIGHT);
  wlErrorIgnored.setText("Ignore lookup failure? ");
  props.setLook(wlErrorIgnored);
  fdlErrorIgnored=new FormData();
  fdlErrorIgnored.left=new FormAttachment(0,0);
  fdlErrorIgnored.top=new FormAttachment(wCommit,margin);
  fdlErrorIgnored.right=new FormAttachment(middle,-margin);
  wlErrorIgnored.setLayoutData(fdlErrorIgnored);
  wErrorIgnored=new Button(shell,SWT.CHECK);
  props.setLook(wErrorIgnored);
  wErrorIgnored.setToolTipText("Check this to add a flag field (boolean) to see if the key was found.");
  fdErrorIgnored=new FormData();
  fdErrorIgnored.left=new FormAttachment(middle,0);
  fdErrorIgnored.top=new FormAttachment(wCommit,margin);
  wErrorIgnored.setLayoutData(fdErrorIgnored);
  wErrorIgnored.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setFlags();
    }
  }
);
  wlIgnoreFlagField=new Label(shell,SWT.LEFT);
  wlIgnoreFlagField.setText("Flag field (key found) ");
  props.setLook(wlIgnoreFlagField);
  fdlIgnoreFlagField=new FormData();
  fdlIgnoreFlagField.left=new FormAttachment(wErrorIgnored,margin);
  fdlIgnoreFlagField.top=new FormAttachment(wCommit,margin);
  wlIgnoreFlagField.setLayoutData(fdlIgnoreFlagField);
  wIgnoreFlagField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wIgnoreFlagField);
  wIgnoreFlagField.addModifyListener(lsMod);
  fdIgnoreFlagField=new FormData();
  fdIgnoreFlagField.left=new FormAttachment(wlIgnoreFlagField,margin);
  fdIgnoreFlagField.top=new FormAttachment(wCommit,margin);
  fdIgnoreFlagField.right=new FormAttachment(100,0);
  wIgnoreFlagField.setLayoutData(fdIgnoreFlagField);
  wlKey=new Label(shell,SWT.NONE);
  wlKey.setText("The key(s) to look up the value(s): ");
  props.setLook(wlKey);
  fdlKey=new FormData();
  fdlKey.left=new FormAttachment(0,0);
  fdlKey.top=new FormAttachment(wIgnoreFlagField,margin);
  wlKey.setLayoutData(fdlKey);
  int nrKeyCols=4;
  int nrKeyRows=(input.getKeyStream() != null ? input.getKeyStream().length : 1);
  ColumnInfo[] ciKey=new ColumnInfo[nrKeyCols];
  ciKey[0]=new ColumnInfo("Table field",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[1]=new ColumnInfo("Comparator",ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"=","<>","<","<=",">",">=","LIKE","BETWEEN","IS NULL","IS NOT NULL"});
  ciKey[2]=new ColumnInfo("Stream field1",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciKey[3]=new ColumnInfo("Stream field2",ColumnInfo.COLUMN_TYPE_TEXT,false);
  wKey=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKey,nrKeyRows,lsMod,props);
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(" &Get fields ");
  fdGet=new FormData();
  fdGet.right=new FormAttachment(100,0);
  fdGet.top=new FormAttachment(wlKey,margin);
  wGet.setLayoutData(fdGet);
  fdKey=new FormData();
  fdKey.left=new FormAttachment(0,0);
  fdKey.top=new FormAttachment(wlKey,margin);
  fdKey.right=new FormAttachment(wGet,-margin);
  fdKey.bottom=new FormAttachment(wlKey,190);
  wKey.setLayoutData(fdKey);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(" &SQL ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  setButtonPositions(new Button[]{wOK,wSQL,wCancel},margin,null);
  wlReturn=new Label(shell,SWT.NONE);
  wlReturn.setText("Delete fields: ");
  props.setLook(wlReturn);
  fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(wKey,margin);
  wlReturn.setLayoutData(fdlReturn);
  int UpInsCols=2;
  int UpInsRows=(input.getUpdateLookup() != null ? input.getUpdateLookup().length : 1);
  ColumnInfo[] ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo("Table field",ColumnInfo.COLUMN_TYPE_TEXT,false);
  ciReturn[1]=new ColumnInfo("Stream field",ColumnInfo.COLUMN_TYPE_TEXT,false);
  wReturn=new TableView(shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  wGetLU=new Button(shell,SWT.PUSH);
  wGetLU.setText(" Get &delete fields ");
  fdGetLU=new FormData();
  fdGetLU.top=new FormAttachment(wlReturn,margin);
  fdGetLU.right=new FormAttachment(100,0);
  wGetLU.setLayoutData(fdGetLU);
  fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlReturn,margin);
  fdReturn.right=new FormAttachment(wGetLU,-margin);
  fdReturn.bottom=new FormAttachment(wOK,-2 * margin);
  wReturn.setLayoutData(fdReturn);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getUpdate();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
