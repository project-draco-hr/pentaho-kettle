{
  this();
  Node mastersNode=XMLHandler.getSubNode(node,XML_TAG_MASTERS);
  int nrMasters=XMLHandler.countNodes(mastersNode,SlaveServer.XML_TAG);
  for (int i=0; i < nrMasters; i++) {
    Node masterSlaveNode=XMLHandler.getSubNodeByNr(mastersNode,SlaveServer.XML_TAG,i);
    SlaveServer masterSlaveServer=new SlaveServer(masterSlaveNode);
    checkNetworkInterfaceSetting(log,masterSlaveNode,masterSlaveServer);
    masters.add(masterSlaveServer);
  }
  reportingToMasters="Y".equalsIgnoreCase(XMLHandler.getTagValue(node,"report_to_masters"));
  Node slaveNode=XMLHandler.getSubNode(node,SlaveServer.XML_TAG);
  if (slaveNode != null) {
    slaveServer=new SlaveServer(slaveNode);
    checkNetworkInterfaceSetting(log,slaveNode,slaveServer);
  }
  joining="Y".equalsIgnoreCase(XMLHandler.getTagValue(node,"joining"));
  maxLogLines=Const.toInt(XMLHandler.getTagValue(node,"max_log_lines"),0);
  maxLogTimeoutMinutes=Const.toInt(XMLHandler.getTagValue(node,"max_log_timeout_minutes"),0);
  objectTimeoutMinutes=Const.toInt(XMLHandler.getTagValue(node,"object_timeout_minutes"),0);
  List<Node> dbNodes=XMLHandler.getNodes(node,DatabaseMeta.XML_TAG);
  for (  Node dbNode : dbNodes) {
    databases.add(new DatabaseMeta(dbNode));
  }
  Node sequencesNode=XMLHandler.getSubNode(node,"sequences");
  List<Node> seqNodes=XMLHandler.getNodes(sequencesNode,SlaveSequence.XML_TAG);
  for (  Node seqNode : seqNodes) {
    slaveSequences.add(new SlaveSequence(seqNode,databases));
  }
  Node autoSequenceNode=XMLHandler.getSubNode(node,XML_TAG_AUTOSEQUENCE);
  if (autoSequenceNode != null) {
    autoSequence=new SlaveSequence(autoSequenceNode,databases);
    automaticCreationAllowed="Y".equalsIgnoreCase(XMLHandler.getTagValue(autoSequenceNode,XML_TAG_AUTO_CREATE));
  }
  Node servicesNode=XMLHandler.getSubNode(node,XML_TAG_SERVICES);
  List<Node> servicesNodes=XMLHandler.getNodes(servicesNode,XML_TAG_SERVICE);
  for (  Node serviceNode : servicesNodes) {
    TransDataService service=new TransDataService(serviceNode);
    services.add(service);
  }
  setUpJettyOptions(node);
  Node repositoryNode=XMLHandler.getSubNode(node,XML_TAG_REPOSITORY);
  repositoryId=XMLHandler.getTagValue(repositoryNode,"name");
  repositoryUsername=XMLHandler.getTagValue(repositoryNode,"username");
  repositoryPassword=XMLHandler.getTagValue(repositoryNode,"password");
}
