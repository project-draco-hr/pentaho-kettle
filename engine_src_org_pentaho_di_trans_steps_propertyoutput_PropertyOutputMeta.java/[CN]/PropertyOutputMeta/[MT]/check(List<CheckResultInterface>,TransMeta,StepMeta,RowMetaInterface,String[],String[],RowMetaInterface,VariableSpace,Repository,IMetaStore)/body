{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.FieldsReceived","" + prev.size()),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.NoFields"),stepMeta);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.ExpectedInputOk"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.ExpectedInputError"),stepMeta);
    remarks.add(cr);
  }
  if (!Utils.isEmpty(fileName)) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.FilenameOk"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.FilenameError"),stepMeta);
    remarks.add(cr);
  }
  ValueMetaInterface v=prev.searchValueMeta(keyfield);
  if (v == null) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.KeyFieldMissing"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.KeyFieldOk"),stepMeta);
    remarks.add(cr);
  }
  v=prev.searchValueMeta(valuefield);
  if (v == null) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.ValueFieldMissing"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,BaseMessages.getString(PKG,"PropertyOutputMeta.CheckResult.ValueFieldOk"),stepMeta);
    remarks.add(cr);
  }
}
