{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.DialogTitle"));
  getFields();
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.GeneralTab.TabTitle"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wFields=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wFields);
  wFields.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.Group.Fields.Label"));
  FormLayout groupFieldsLayout=new FormLayout();
  groupFieldsLayout.marginWidth=10;
  groupFieldsLayout.marginHeight=10;
  wFields.setLayout(groupFieldsLayout);
  wlKeyField=new Label(wFields,SWT.RIGHT);
  wlKeyField.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.KeyField.Label"));
  props.setLook(wlKeyField);
  fdlKeyField=new FormData();
  fdlKeyField.left=new FormAttachment(0,0);
  fdlKeyField.top=new FormAttachment(0,3 * margin);
  fdlKeyField.right=new FormAttachment(middle,-margin);
  wlKeyField.setLayoutData(fdlKeyField);
  wKeyField=new CCombo(wFields,SWT.BORDER | SWT.READ_ONLY);
  wKeyField.setEditable(true);
  wKeyField.setItems(fieldNames);
  props.setLook(wKeyField);
  wKeyField.addModifyListener(lsMod);
  fdKeyField=new FormData();
  fdKeyField.left=new FormAttachment(middle,0);
  fdKeyField.top=new FormAttachment(0,3 * margin);
  fdKeyField.right=new FormAttachment(100,0);
  wKeyField.setLayoutData(fdKeyField);
  wlValueField=new Label(wFields,SWT.RIGHT);
  wlValueField.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.ValueField.Label"));
  props.setLook(wlValueField);
  fdlValueField=new FormData();
  fdlValueField.left=new FormAttachment(0,0);
  fdlValueField.top=new FormAttachment(wKeyField,margin);
  fdlValueField.right=new FormAttachment(middle,-margin);
  wlValueField.setLayoutData(fdlValueField);
  wValueField=new CCombo(wFields,SWT.BORDER | SWT.READ_ONLY);
  wValueField.setEditable(true);
  wValueField.setItems(fieldNames);
  props.setLook(wValueField);
  wValueField.addModifyListener(lsMod);
  fdValueField=new FormData();
  fdValueField.left=new FormAttachment(middle,0);
  fdValueField.top=new FormAttachment(wKeyField,margin);
  fdValueField.right=new FormAttachment(100,0);
  wValueField.setLayoutData(fdValueField);
  wlComment=new Label(wGeneralComp,SWT.RIGHT);
  wlComment.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.Comment.Label"));
  props.setLook(wlComment);
  fdlComment=new FormData();
  fdlComment.left=new FormAttachment(0,0);
  fdlComment.top=new FormAttachment(wFields,2 * margin);
  fdlComment.right=new FormAttachment(middle,-margin);
  wlComment.setLayoutData(fdlComment);
  wComment=new Text(wGeneralComp,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.V_SCROLL| SWT.H_SCROLL);
  wComment.setToolTipText(BaseMessages.getString(PKG,"PropertyOutputDialog.Comment.Tooltip"));
  props.setLook(wComment);
  wComment.addModifyListener(lsMod);
  fdComment=new FormData();
  fdComment.left=new FormAttachment(middle,0);
  fdComment.top=new FormAttachment(wFields,2 * margin);
  fdComment.right=new FormAttachment(100,0);
  fdComment.bottom=new FormAttachment(100,-margin);
  wComment.setLayoutData(fdComment);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,margin);
  fdFields.top=new FormAttachment(0,margin);
  fdFields.right=new FormAttachment(100,-margin);
  wFields.setLayoutData(fdFields);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.ContentTab.TabTitle"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wFileName=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wFileName);
  wFileName.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.Group.File.Label"));
  FormLayout groupFileLayout=new FormLayout();
  groupFileLayout.marginWidth=10;
  groupFileLayout.marginHeight=10;
  wFileName.setLayout(groupFileLayout);
  wlFilename=new Label(wFileName,SWT.RIGHT);
  wlFilename.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wFields,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(wFileName,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wFields,0);
  wbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(transMeta,wFileName,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(wFields,margin);
  fdFilename.right=new FormAttachment(wbFilename,-margin);
  wFilename.setLayoutData(fdFilename);
  wlAppend=new Label(wFileName,SWT.RIGHT);
  wlAppend.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.Append.Label"));
  props.setLook(wlAppend);
  fdlAppend=new FormData();
  fdlAppend.left=new FormAttachment(0,0);
  fdlAppend.top=new FormAttachment(wFilename,margin);
  fdlAppend.right=new FormAttachment(middle,-margin);
  wlAppend.setLayoutData(fdlAppend);
  wAppend=new Button(wFileName,SWT.CHECK);
  props.setLook(wAppend);
  wAppend.setToolTipText(BaseMessages.getString(PKG,"PropertyOutputDialog.Append.Tooltip"));
  fdAppend=new FormData();
  fdAppend.left=new FormAttachment(middle,0);
  fdAppend.top=new FormAttachment(wFilename,margin);
  fdAppend.right=new FormAttachment(100,0);
  wAppend.setLayoutData(fdAppend);
  wAppend.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
);
  wlCreateParentFolder=new Label(wFileName,SWT.RIGHT);
  wlCreateParentFolder.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.CreateParentFolder.Label"));
  props.setLook(wlCreateParentFolder);
  fdlCreateParentFolder=new FormData();
  fdlCreateParentFolder.left=new FormAttachment(0,0);
  fdlCreateParentFolder.top=new FormAttachment(wAppend,margin);
  fdlCreateParentFolder.right=new FormAttachment(middle,-margin);
  wlCreateParentFolder.setLayoutData(fdlCreateParentFolder);
  wCreateParentFolder=new Button(wFileName,SWT.CHECK);
  wCreateParentFolder.setToolTipText(BaseMessages.getString(PKG,"PropertyOutputDialog.CreateParentFolder.Tooltip"));
  props.setLook(wCreateParentFolder);
  fdCreateParentFolder=new FormData();
  fdCreateParentFolder.left=new FormAttachment(middle,0);
  fdCreateParentFolder.top=new FormAttachment(wAppend,margin);
  fdCreateParentFolder.right=new FormAttachment(100,0);
  wCreateParentFolder.setLayoutData(fdCreateParentFolder);
  wCreateParentFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlFileNameInField=new Label(wFileName,SWT.RIGHT);
  wlFileNameInField.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.FileNameInField.Label"));
  props.setLook(wlFileNameInField);
  fdlFileNameInField=new FormData();
  fdlFileNameInField.left=new FormAttachment(0,0);
  fdlFileNameInField.top=new FormAttachment(wCreateParentFolder,margin);
  fdlFileNameInField.right=new FormAttachment(middle,-margin);
  wlFileNameInField.setLayoutData(fdlFileNameInField);
  wFileNameInField=new Button(wFileName,SWT.CHECK);
  wlFileNameInField.setToolTipText(BaseMessages.getString(PKG,"PropertyOutputDialog.FileNameInField.Label"));
  props.setLook(wFileNameInField);
  fdFileNameInField=new FormData();
  fdFileNameInField.left=new FormAttachment(middle,0);
  fdFileNameInField.top=new FormAttachment(wCreateParentFolder,margin);
  fdFileNameInField.right=new FormAttachment(100,0);
  wFileNameInField.setLayoutData(fdFileNameInField);
  wFileNameInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      activeFilenameInField();
    }
  }
);
  wlFileNameField=new Label(wFileName,SWT.RIGHT);
  wlFileNameField.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.FileNameField.Label"));
  props.setLook(wlFileNameField);
  fdlFileNameField=new FormData();
  fdlFileNameField.left=new FormAttachment(0,0);
  fdlFileNameField.right=new FormAttachment(middle,-margin);
  fdlFileNameField.top=new FormAttachment(wFileNameInField,margin);
  wlFileNameField.setLayoutData(fdlFileNameField);
  wFileNameField=new ComboVar(transMeta,wFileName,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFileNameField);
  wFileNameField.addModifyListener(lsMod);
  fdFileNameField=new FormData();
  fdFileNameField.left=new FormAttachment(middle,0);
  fdFileNameField.top=new FormAttachment(wFileNameInField,margin);
  fdFileNameField.right=new FormAttachment(100,0);
  wFileNameField.setLayoutData(fdFileNameField);
  wFileNameField.setEnabled(false);
  wFileNameField.setItems(fieldNames);
  wlExtension=new Label(wFileName,SWT.RIGHT);
  wlExtension.setText(BaseMessages.getString(PKG,"System.Label.Extension"));
  props.setLook(wlExtension);
  fdlExtension=new FormData();
  fdlExtension.left=new FormAttachment(0,0);
  fdlExtension.top=new FormAttachment(wFileNameField,margin);
  fdlExtension.right=new FormAttachment(middle,-margin);
  wlExtension.setLayoutData(fdlExtension);
  wExtension=new TextVar(transMeta,wFileName,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wExtension);
  wExtension.addModifyListener(lsMod);
  fdExtension=new FormData();
  fdExtension.left=new FormAttachment(middle,0);
  fdExtension.top=new FormAttachment(wFileNameField,margin);
  fdExtension.right=new FormAttachment(100,-margin);
  wExtension.setLayoutData(fdExtension);
  wlAddStepnr=new Label(wFileName,SWT.RIGHT);
  wlAddStepnr.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.AddStepnr.Label"));
  props.setLook(wlAddStepnr);
  fdlAddStepnr=new FormData();
  fdlAddStepnr.left=new FormAttachment(0,0);
  fdlAddStepnr.top=new FormAttachment(wExtension,2 * margin);
  fdlAddStepnr.right=new FormAttachment(middle,-margin);
  wlAddStepnr.setLayoutData(fdlAddStepnr);
  wAddStepnr=new Button(wFileName,SWT.CHECK);
  props.setLook(wAddStepnr);
  fdAddStepnr=new FormData();
  fdAddStepnr.left=new FormAttachment(middle,0);
  fdAddStepnr.top=new FormAttachment(wExtension,2 * margin);
  fdAddStepnr.right=new FormAttachment(100,0);
  wAddStepnr.setLayoutData(fdAddStepnr);
  wAddStepnr.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddDate=new Label(wFileName,SWT.RIGHT);
  wlAddDate.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.AddDate.Label"));
  props.setLook(wlAddDate);
  fdlAddDate=new FormData();
  fdlAddDate.left=new FormAttachment(0,0);
  fdlAddDate.top=new FormAttachment(wAddStepnr,margin);
  fdlAddDate.right=new FormAttachment(middle,-margin);
  wlAddDate.setLayoutData(fdlAddDate);
  wAddDate=new Button(wFileName,SWT.CHECK);
  props.setLook(wAddDate);
  fdAddDate=new FormData();
  fdAddDate.left=new FormAttachment(middle,0);
  fdAddDate.top=new FormAttachment(wAddStepnr,margin);
  fdAddDate.right=new FormAttachment(100,0);
  wAddDate.setLayoutData(fdAddDate);
  wAddDate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlAddTime=new Label(wFileName,SWT.RIGHT);
  wlAddTime.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.AddTime.Label"));
  props.setLook(wlAddTime);
  fdlAddTime=new FormData();
  fdlAddTime.left=new FormAttachment(0,0);
  fdlAddTime.top=new FormAttachment(wAddDate,margin);
  fdlAddTime.right=new FormAttachment(middle,-margin);
  wlAddTime.setLayoutData(fdlAddTime);
  wAddTime=new Button(wFileName,SWT.CHECK);
  props.setLook(wAddTime);
  fdAddTime=new FormData();
  fdAddTime.left=new FormAttachment(middle,0);
  fdAddTime.top=new FormAttachment(wAddDate,margin);
  fdAddTime.right=new FormAttachment(100,0);
  wAddTime.setLayoutData(fdAddTime);
  wAddTime.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wbShowFiles=new Button(wFileName,SWT.PUSH | SWT.CENTER);
  props.setLook(wbShowFiles);
  wbShowFiles.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.ShowFiles.Button"));
  fdbShowFiles=new FormData();
  fdbShowFiles.left=new FormAttachment(middle,0);
  fdbShowFiles.top=new FormAttachment(wAddTime,margin * 2);
  wbShowFiles.setLayoutData(fdbShowFiles);
  wbShowFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      PropertyOutputMeta tfoi=new PropertyOutputMeta();
      getInfo(tfoi);
      String files[]=tfoi.getFiles(transMeta);
      if (files != null && files.length > 0) {
        EnterSelectionDialog esd=new EnterSelectionDialog(shell,files,BaseMessages.getString(PKG,"PropertyOutputDialog.SelectOutputFiles.DialogTitle"),BaseMessages.getString(PKG,"PropertyOutputDialog.SelectOutputFiles.DialogMessage"));
        esd.setViewOnly();
        esd.open();
      }
 else {
        MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
        mb.setMessage(BaseMessages.getString(PKG,"PropertyOutputDialog.NoFilesFound.DialogMessage"));
        mb.setText(BaseMessages.getString(PKG,"System.DialogTitle.Error"));
        mb.open();
      }
    }
  }
);
  fdFileName=new FormData();
  fdFileName.left=new FormAttachment(0,margin);
  fdFileName.top=new FormAttachment(wFields,margin);
  fdFileName.right=new FormAttachment(100,-margin);
  wFileName.setLayoutData(fdFileName);
  wResultFile=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wResultFile);
  wResultFile.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.Group.ResultFile.Label"));
  FormLayout groupResultFile=new FormLayout();
  groupResultFile.marginWidth=10;
  groupResultFile.marginHeight=10;
  wResultFile.setLayout(groupResultFile);
  wlAddToResult=new Label(wResultFile,SWT.RIGHT);
  wlAddToResult.setText(BaseMessages.getString(PKG,"PropertyOutputDialog.AddFileToResult.Label"));
  props.setLook(wlAddToResult);
  fdlAddToResult=new FormData();
  fdlAddToResult.left=new FormAttachment(0,0);
  fdlAddToResult.top=new FormAttachment(wFileName,margin);
  fdlAddToResult.right=new FormAttachment(middle,-margin);
  wlAddToResult.setLayoutData(fdlAddToResult);
  wAddToResult=new Button(wResultFile,SWT.CHECK);
  wAddToResult.setToolTipText(BaseMessages.getString(PKG,"PropertyOutputDialog.AddFileToResult.Tooltip"));
  props.setLook(wAddToResult);
  fdAddToResult=new FormData();
  fdAddToResult.left=new FormAttachment(middle,0);
  fdAddToResult.top=new FormAttachment(wFileName,margin);
  fdAddToResult.right=new FormAttachment(100,0);
  wAddToResult.setLayoutData(fdAddToResult);
  SelectionAdapter lsSelAR=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wAddToResult.addSelectionListener(lsSelAR);
  fdResultFile=new FormData();
  fdResultFile.left=new FormAttachment(0,margin);
  fdResultFile.top=new FormAttachment(wFileName,margin);
  fdResultFile.right=new FormAttachment(100,-margin);
  wResultFile.setLayoutData(fdResultFile);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(wContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.SAVE);
      dialog.setFilterExtensions(new String[]{"*.txt","*.TXT","*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(transMeta.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"System.FileType.TextFiles"),BaseMessages.getString(PKG,"System.FileType.CSVFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
      if (dialog.open() != null) {
        String extension=wExtension.getText();
        if (extension != null && dialog.getFileName() != null && dialog.getFileName().endsWith("." + extension)) {
          String fileName=dialog.getFileName();
          wFilename.setText(dialog.getFilterPath() + System.getProperty("file.separator") + fileName.substring(0,fileName.length() - (extension.length() + 1)));
        }
 else {
          wFilename.setText(dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName());
        }
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  activeFilenameInField();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
