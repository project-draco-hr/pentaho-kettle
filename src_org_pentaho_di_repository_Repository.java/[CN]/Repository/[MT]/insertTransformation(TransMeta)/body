{
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMeta("ID_TRANSFORMATION",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getId()));
  table.addValue(new ValueMeta("NAME",ValueMetaInterface.TYPE_STRING),transMeta.getName());
  table.addValue(new ValueMeta("DESCRIPTION",ValueMetaInterface.TYPE_STRING),transMeta.getDescription());
  table.addValue(new ValueMeta("EXTENDED_DESCRIPTION",ValueMetaInterface.TYPE_STRING),transMeta.getExtendedDescription());
  table.addValue(new ValueMeta("TRANS_VERSION",ValueMetaInterface.TYPE_STRING),transMeta.getTransversion());
  table.addValue(new ValueMeta("TRANS_STATUS",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getTransstatus() < 0 ? -1L : transMeta.getTransstatus()));
  table.addValue(new ValueMeta("ID_STEP_READ",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getReadStep() == null ? -1L : transMeta.getReadStep().getID()));
  table.addValue(new ValueMeta("ID_STEP_WRITE",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getWriteStep() == null ? -1L : transMeta.getWriteStep().getID()));
  table.addValue(new ValueMeta("ID_STEP_INPUT",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getInputStep() == null ? -1L : transMeta.getInputStep().getID()));
  table.addValue(new ValueMeta("ID_STEP_OUTPUT",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getOutputStep() == null ? -1L : transMeta.getOutputStep().getID()));
  table.addValue(new ValueMeta("ID_STEP_UPDATE",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getUpdateStep() == null ? -1L : transMeta.getUpdateStep().getID()));
  table.addValue(new ValueMeta("ID_DATABASE_LOG",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getLogConnection() == null ? -1L : transMeta.getLogConnection().getID()));
  table.addValue(new ValueMeta("TABLE_NAME_LOG",ValueMetaInterface.TYPE_STRING),transMeta.getLogTable());
  table.addValue(new ValueMeta("USE_BATCHID",ValueMetaInterface.TYPE_BOOLEAN),new Boolean(transMeta.isBatchIdUsed()));
  table.addValue(new ValueMeta("USE_LOGFIELD",ValueMetaInterface.TYPE_BOOLEAN),new Boolean(transMeta.isLogfieldUsed()));
  table.addValue(new ValueMeta("ID_DATABASE_MAXDATE",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getMaxDateConnection() == null ? -1L : transMeta.getMaxDateConnection().getID()));
  table.addValue(new ValueMeta("TABLE_NAME_MAXDATE",ValueMetaInterface.TYPE_STRING),transMeta.getMaxDateTable());
  table.addValue(new ValueMeta("FIELD_NAME_MAXDATE",ValueMetaInterface.TYPE_STRING),transMeta.getMaxDateField());
  table.addValue(new ValueMeta("OFFSET_MAXDATE",ValueMetaInterface.TYPE_NUMBER),new Double(transMeta.getMaxDateOffset()));
  table.addValue(new ValueMeta("DIFF_MAXDATE",ValueMetaInterface.TYPE_NUMBER),new Double(transMeta.getMaxDateDifference()));
  table.addValue(new ValueMeta("CREATED_USER",ValueMetaInterface.TYPE_STRING),transMeta.getCreatedUser());
  table.addValue(new ValueMeta("CREATED_DATE",ValueMetaInterface.TYPE_DATE),transMeta.getCreatedDate());
  table.addValue(new ValueMeta("MODIFIED_USER",ValueMetaInterface.TYPE_STRING),transMeta.getModifiedUser());
  table.addValue(new ValueMeta("MODIFIED_DATE",ValueMetaInterface.TYPE_DATE),transMeta.getModifiedDate());
  table.addValue(new ValueMeta("SIZE_ROWSET",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getSizeRowset()));
  table.addValue(new ValueMeta("ID_DIRECTORY",ValueMetaInterface.TYPE_INTEGER),new Long(transMeta.getDirectory().getID()));
  database.prepareInsert(table.getRowMeta(),"R_TRANSFORMATION");
  database.setValuesInsert(table);
  database.insertRow();
  database.closeInsert();
  if (transMeta.getRejectedStep() != null) {
    insertTransAttribute(transMeta.getId(),0,"ID_STEP_REJECTED",transMeta.getRejectedStep().getID(),null);
  }
  insertTransAttribute(transMeta.getId(),0,"UNIQUE_CONNECTIONS",0,transMeta.isUsingUniqueConnections() ? "Y" : "N");
  insertTransAttribute(transMeta.getId(),0,"FEEDBACK_SHOWN",0,transMeta.isFeedbackShown() ? "Y" : "N");
  insertTransAttribute(transMeta.getId(),0,"FEEDBACK_SIZE",transMeta.getFeedbackSize(),"");
  insertTransAttribute(transMeta.getId(),0,"USING_THREAD_PRIORITIES",0,transMeta.isUsingThreadPriorityManagment() ? "Y" : "N");
  insertTransAttribute(transMeta.getId(),0,"SHARED_FILE",0,transMeta.getSharedObjectsFile());
  if (transMeta.getLogConnection() != null)   insertStepDatabase(transMeta.getId(),-1L,transMeta.getLogConnection().getID());
  if (transMeta.getMaxDateConnection() != null)   insertStepDatabase(transMeta.getId(),-1L,transMeta.getMaxDateConnection().getID());
}
