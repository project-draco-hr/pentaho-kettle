{
  Object[] key=new Object[]{new Long(id_step),code,new Long(nr)};
  final int[] keyPositions=new int[]{0,1,2};
  int index=Collections.binarySearch(stepAttributesBuffer,key,new Comparator<Object[]>(){
    public int compare(    Object[] r1,    Object[] r2){
      try {
        return stepAttributesRowMeta.compare(r1,r2,keyPositions);
      }
 catch (      KettleValueException e) {
        return 0;
      }
    }
  }
);
  if (index >= stepAttributesBuffer.size() || index < 0)   return -1;
  Object[] look=stepAttributesBuffer.get(index);
  if (stepAttributesRowMeta.compare(look,key,keyPositions) == 0) {
    return index;
  }
  return -1;
}
