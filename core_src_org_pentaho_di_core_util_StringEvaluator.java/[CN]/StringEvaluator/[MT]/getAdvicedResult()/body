{
  if (evaluationResults.isEmpty()) {
    ValueMetaInterface adviced=new ValueMeta("adviced",ValueMetaInterface.TYPE_STRING);
    adviced.setLength(maxLength);
    int nrNulls=0;
    String min=null;
    String max=null;
    for (    String string : values) {
      if (string != null) {
        if (min == null || min.compareTo(string) > 0) {
          min=string;
        }
        if (max == null || max.compareTo(string) < 0) {
          max=string;
        }
      }
 else {
        nrNulls++;
      }
    }
    StringEvaluationResult result=new StringEvaluationResult(adviced);
    result.setNrNull(nrNulls);
    result.setMin(min);
    result.setMax(max);
    return result;
  }
 else {
    if (containsInteger() && containsNumber()) {
      for (Iterator<StringEvaluationResult> iterator=evaluationResults.iterator(); iterator.hasNext(); ) {
        StringEvaluationResult result=iterator.next();
        if (maxPrecision == 0 && result.getConversionMeta().isNumber()) {
          iterator.remove();
        }
 else         if (maxPrecision > 0 && result.getConversionMeta().isInteger()) {
          iterator.remove();
        }
      }
    }
    if (containsInteger() && containsDate()) {
      for (Iterator<StringEvaluationResult> iterator=evaluationResults.iterator(); iterator.hasNext(); ) {
        StringEvaluationResult result=iterator.next();
        if (result.getConversionMeta().isInteger()) {
          iterator.remove();
        }
      }
    }
    Comparator<StringEvaluationResult> compare=null;
    if (containsDate()) {
      compare=new Comparator<StringEvaluationResult>(){
        @Override public int compare(        StringEvaluationResult r1,        StringEvaluationResult r2){
          Integer length1=r1.getConversionMeta().getConversionMask() == null ? 0 : r1.getConversionMeta().getConversionMask().length();
          Integer length2=r2.getConversionMeta().getConversionMask() == null ? 0 : r2.getConversionMeta().getConversionMask().length();
          return length2.compareTo(length1);
        }
      }
;
    }
 else {
      compare=new Comparator<StringEvaluationResult>(){
        @Override public int compare(        StringEvaluationResult r1,        StringEvaluationResult r2){
          Integer length1=r1.getConversionMeta().getConversionMask() == null ? 0 : r1.getConversionMeta().getConversionMask().length();
          Integer length2=r2.getConversionMeta().getConversionMask() == null ? 0 : r2.getConversionMeta().getConversionMask().length();
          return length1.compareTo(length2);
        }
      }
;
    }
    Collections.sort(evaluationResults,compare);
    StringEvaluationResult result=evaluationResults.get(0);
    ValueMetaInterface conversionMeta=result.getConversionMeta();
    if (conversionMeta.isNumber() && conversionMeta.getCurrencySymbol() == null) {
      conversionMeta.setPrecision(maxPrecision);
      if (maxPrecision > 0 && maxLength > 0) {
        conversionMeta.setLength(maxLength);
      }
    }
    return result;
  }
}
