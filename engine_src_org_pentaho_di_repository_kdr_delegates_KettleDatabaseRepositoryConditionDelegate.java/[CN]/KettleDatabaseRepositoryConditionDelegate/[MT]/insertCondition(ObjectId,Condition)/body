{
  ObjectId id=repository.connectionDelegate.getNextConditionID();
  String tablename=KettleDatabaseRepository.TABLE_R_CONDITION;
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_CONDITION_ID_CONDITION),id);
  table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_CONDITION_ID_CONDITION_PARENT),id_condition_parent);
  table.addValue(new ValueMetaBoolean(KettleDatabaseRepository.FIELD_CONDITION_NEGATED),Boolean.valueOf(condition.isNegated()));
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_CONDITION_OPERATOR),condition.getOperatorDesc());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_CONDITION_LEFT_NAME),condition.getLeftValuename());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_CONDITION_CONDITION_FUNCTION),condition.getFunctionDesc());
  table.addValue(new ValueMetaString(KettleDatabaseRepository.FIELD_CONDITION_RIGHT_NAME),condition.getRightValuename());
  ObjectId id_value=null;
  ValueMetaAndData v=condition.getRightExact();
  if (v != null) {
    ValueMetaInterface valueMeta=v.getValueMeta();
    valueMeta.setDecimalSymbol(ValueMetaAndData.VALUE_REPOSITORY_DECIMAL_SYMBOL);
    valueMeta.setGroupingSymbol(ValueMetaAndData.VALUE_REPOSITORY_GROUPING_SYMBOL);
switch (valueMeta.getType()) {
case ValueMetaInterface.TYPE_NUMBER:
      valueMeta.setConversionMask(ValueMetaAndData.VALUE_REPOSITORY_NUMBER_CONVERSION_MASK);
    break;
case ValueMetaInterface.TYPE_INTEGER:
  valueMeta.setConversionMask(ValueMetaAndData.VALUE_REPOSITORY_INTEGER_CONVERSION_MASK);
break;
case ValueMetaInterface.TYPE_DATE:
valueMeta.setConversionMask(ValueMetaAndData.VALUE_REPOSITORY_DATE_CONVERSION_MASK);
break;
default :
break;
}
String stringValue=valueMeta.getString(v.getValueData());
id_value=insertValue(valueMeta.getName(),valueMeta.getTypeDesc(),stringValue,valueMeta.isNull(v.getValueData()),condition.getRightExactID());
condition.setRightExactID(id_value);
}
table.addValue(new ValueMetaInteger(KettleDatabaseRepository.FIELD_CONDITION_ID_VALUE_RIGHT),id_value);
repository.connectionDelegate.getDatabase().prepareInsert(table.getRowMeta(),tablename);
repository.connectionDelegate.getDatabase().setValuesInsert(table);
repository.connectionDelegate.getDatabase().insertRow();
repository.connectionDelegate.getDatabase().closeInsert();
return id;
}
