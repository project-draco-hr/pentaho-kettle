{
  try {
    fieldname=rep.getStepAttributeString(id_step,"fieldname");
    isContains=rep.getStepAttributeBoolean(id_step,"use_contains");
    caseValueType=ValueMeta.getType(rep.getStepAttributeString(id_step,"case_value_type"));
    caseValueFormat=rep.getStepAttributeString(id_step,"case_value_format");
    caseValueDecimal=rep.getStepAttributeString(id_step,"case_value_decimal");
    caseValueGroup=rep.getStepAttributeString(id_step,"case_value_group");
    defaultTargetStepname=rep.getStepAttributeString(id_step,"default_target_step");
    int nrCases=rep.countNrStepAttributes(id_step,"case_value");
    allocate(nrCases);
    for (int i=0; i < nrCases; i++) {
      caseValues[i]=rep.getStepAttributeString(id_step,i,"case_value");
      caseTargetStepnames[i]=rep.getStepAttributeString(id_step,i,"case_target_step");
    }
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("SwitchCaseMeta.Exception.UnexpectedErrorInReadingStepInfoFromRepository"),e);
  }
}
