{
  if (optionsParameterTree == null) {
    return;
  }
  if (extraOptions != null) {
    removeTypedOptions(extraOptions);
    Iterator<String> keys=extraOptions.keySet().iterator();
    Object connection=connectionBox.getSelectedItem();
    String currentType=null;
    if (connection != null) {
      currentType=connectionMap.get(connection.toString()).getPluginId();
    }
    while (keys.hasNext()) {
      String parameter=keys.next();
      String value=extraOptions.get(parameter);
      if ((value == null) || (value.trim().length() <= 0) || (value.equals(DatabaseMeta.EMPTY_OPTIONS_STRING))) {
        value="";
      }
      int dotIndex=parameter.indexOf('.');
      if (dotIndex >= 0) {
        String parameterOption=parameter.substring(dotIndex + 1);
        String databaseTypeString=parameter.substring(0,dotIndex);
        String databaseType=databaseTypeString;
        if (currentType != null && currentType.equals(databaseType)) {
          XulTreeRow row=optionsParameterTree.getRootChildren().addNewRow();
          row.addCellText(0,parameterOption);
          row.addCellText(1,value);
        }
      }
    }
  }
  int numToAdd=5;
  int numSet=optionsParameterTree.getRootChildren().getItemCount();
  if (numSet < numToAdd) {
    numToAdd-=numSet;
  }
 else {
    numToAdd=1;
  }
  while (numToAdd-- > 0) {
    XulTreeRow row=optionsParameterTree.getRootChildren().addNewRow();
    row.addCellText(0,"");
    row.addCellText(1,"");
  }
}
