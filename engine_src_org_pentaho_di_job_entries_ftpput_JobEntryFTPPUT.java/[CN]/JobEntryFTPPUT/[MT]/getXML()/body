{
  StringBuffer retval=new StringBuffer(200);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("servername",serverName));
  retval.append("      ").append(XMLHandler.addTagValue("serverport",serverPort));
  retval.append("      ").append(XMLHandler.addTagValue("username",userName));
  retval.append("      ").append(XMLHandler.addTagValue("password",Encr.encryptPasswordIfNotUsingVariables(getPassword())));
  retval.append("      ").append(XMLHandler.addTagValue("remoteDirectory",remoteDirectory));
  retval.append("      ").append(XMLHandler.addTagValue("localDirectory",localDirectory));
  retval.append("      ").append(XMLHandler.addTagValue("wildcard",wildcard));
  retval.append("      ").append(XMLHandler.addTagValue("binary",binaryMode));
  retval.append("      ").append(XMLHandler.addTagValue("timeout",timeout));
  retval.append("      ").append(XMLHandler.addTagValue("remove",remove));
  retval.append("      ").append(XMLHandler.addTagValue("only_new",onlyPuttingNewFiles));
  retval.append("      ").append(XMLHandler.addTagValue("active",activeConnection));
  retval.append("      ").append(XMLHandler.addTagValue("control_encoding",controlEncoding));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_host",proxyHost));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_port",proxyPort));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_username",proxyUsername));
  retval.append("      ").append(XMLHandler.addTagValue("proxy_password",Encr.encryptPasswordIfNotUsingVariables(proxyPassword)));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_host",socksProxyHost));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_port",socksProxyPort));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_username",socksProxyUsername));
  retval.append("      ").append(XMLHandler.addTagValue("socksproxy_password",Encr.encryptPasswordIfNotUsingVariables(socksProxyPassword)));
  return retval.toString();
}
