{
  try {
    headerEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"header"));
    footerEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"footer"));
    encoding=XMLHandler.getTagValue(stepnode,"encoding");
    append="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"append"));
    String addToResult=XMLHandler.getTagValue(stepnode,"add_to_result_filenames");
    if (Utils.isEmpty(addToResult)) {
      addToResultFilenames=true;
    }
 else {
      addToResultFilenames="Y".equalsIgnoreCase(addToResult);
    }
    fileName=XMLHandler.getTagValue(stepnode,"file","name");
    extension=XMLHandler.getTagValue(stepnode,"file","extention");
    doNotOpenNewFileInit="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","do_not_open_newfile_init"));
    createparentfolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","create_parent_folder"));
    stepNrInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","split"));
    dateInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_date"));
    timeInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_time"));
    SpecifyFormat="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","SpecifyFormat"));
    date_time_format=XMLHandler.getTagValue(stepnode,"file","date_time_format");
    usetempfiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","usetempfiles"));
    tempdirectory=XMLHandler.getTagValue(stepnode,"file","tempdirectory");
    autoSizeColumns="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","autosizecolums"));
    nullIsBlank="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","nullisblank"));
    protectsheet="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","protect_sheet"));
    password=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode,"file","password"));
    splitEvery=Const.toInt(XMLHandler.getTagValue(stepnode,"file","splitevery"),0);
    templateEnabled="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"template","enabled"));
    templateAppend="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"template","append"));
    templateFileName=XMLHandler.getTagValue(stepnode,"template","filename");
    sheetname=XMLHandler.getTagValue(stepnode,"file","sheetname");
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      outputFields[i]=new ExcelField();
      outputFields[i].setName(XMLHandler.getTagValue(fnode,"name"));
      outputFields[i].setType(XMLHandler.getTagValue(fnode,"type"));
      outputFields[i].setFormat(XMLHandler.getTagValue(fnode,"format"));
    }
    Node customnode=XMLHandler.getSubNode(stepnode,"custom");
    header_font_name=getFontNameByCode(Const.NVL(XMLHandler.getTagValue(customnode,"header_font_name"),""));
    header_font_size=Const.NVL(XMLHandler.getTagValue(customnode,"header_font_size"),"" + DEFAULT_FONT_SIZE);
    header_font_bold="Y".equalsIgnoreCase(XMLHandler.getTagValue(customnode,"header_font_bold"));
    header_font_italic="Y".equalsIgnoreCase(XMLHandler.getTagValue(customnode,"header_font_italic"));
    header_font_underline=getFontUnderlineByCode(Const.NVL(XMLHandler.getTagValue(customnode,"header_font_underline"),""));
    header_font_orientation=getFontOrientationByCode(Const.NVL(XMLHandler.getTagValue(customnode,"header_font_orientation"),""));
    header_font_color=getFontColorByCode(Const.NVL(XMLHandler.getTagValue(customnode,"header_font_color"),"" + FONT_COLOR_BLACK));
    header_background_color=getFontColorByCode(Const.NVL(XMLHandler.getTagValue(customnode,"header_background_color"),"" + FONT_COLOR_NONE));
    header_row_height=XMLHandler.getTagValue(customnode,"header_row_height");
    header_alignment=getFontAlignmentByCode(Const.NVL(XMLHandler.getTagValue(customnode,"header_alignment"),""));
    header_image=XMLHandler.getTagValue(customnode,"header_image");
    row_font_name=getFontNameByCode(Const.NVL(XMLHandler.getTagValue(customnode,"row_font_name"),""));
    row_font_size=Const.NVL(XMLHandler.getTagValue(customnode,"row_font_size"),"" + DEFAULT_FONT_SIZE);
    row_font_color=getFontColorByCode(Const.NVL(XMLHandler.getTagValue(customnode,"row_font_color"),"" + FONT_COLOR_BLACK));
    row_background_color=getFontColorByCode(Const.NVL(XMLHandler.getTagValue(customnode,"row_background_color"),"" + FONT_COLOR_NONE));
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
