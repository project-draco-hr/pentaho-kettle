{
  if (!checkTableExists(tablename))   return false;
  log.logDebug(toString(),"CheckIndexExists() tablename = " + tablename + " type = "+ databaseMeta.getDatabaseTypeDesc());
  boolean exists[]=new boolean[idx_fields.length];
  for (int i=0; i < exists.length; i++)   exists[i]=false;
  try {
switch (databaseMeta.getDatabaseType()) {
case DatabaseMeta.TYPE_DATABASE_MSSQL:
{
        String sql="select i.name table_name, c.name column_name ";
        sql+="from     sysindexes i, sysindexkeys k, syscolumns c ";
        sql+="where    i.name = '" + tablename + "' ";
        sql+="AND      i.id = k.id ";
        sql+="AND      i.id = c.id ";
        sql+="AND      k.colid = c.colid ";
        ResultSet res=openQuery(sql);
        if (res != null) {
          Row row=getRow(res);
          while (row != null) {
            String column=row.getString("column_name","");
            int idx=Const.indexOfString(column,idx_fields);
            if (idx >= 0)             exists[idx]=true;
            row=getRow(res);
          }
          closeQuery(res);
        }
 else {
          return false;
        }
      }
    break;
case DatabaseMeta.TYPE_DATABASE_ORACLE:
{
    String sql="SELECT * FROM USER_IND_COLUMNS WHERE TABLE_NAME = '" + tablename.toUpperCase() + "'";
    ResultSet res=openQuery(sql);
    if (res != null) {
      Row row=getRow(res);
      while (row != null) {
        String column=row.getString("COLUMN_NAME","");
        int idx=Const.indexOfString(column,idx_fields);
        if (idx >= 0) {
          exists[idx]=true;
        }
        row=getRow(res);
      }
      closeQuery(res);
    }
 else {
      return false;
    }
  }
break;
case DatabaseMeta.TYPE_DATABASE_ACCESS:
{
ResultSet indexList=getDatabaseMetaData().getIndexInfo(null,null,tablename,false,true);
while (indexList.next()) {
  String column=indexList.getString("COLUMN_NAME");
  int idx=Const.indexOfString(column,idx_fields);
  if (idx >= 0) {
    exists[idx]=true;
  }
}
indexList.close();
}
break;
default :
{
ResultSet indexList=getDatabaseMetaData().getIndexInfo(null,null,tablename,false,true);
while (indexList.next()) {
String column=indexList.getString("COLUMN_NAME");
int idx=Const.indexOfString(column,idx_fields);
if (idx >= 0) {
exists[idx]=true;
}
}
indexList.close();
}
break;
}
boolean all=true;
for (int i=0; i < exists.length && all; i++) if (!exists[i]) all=false;
return all;
}
 catch (Exception e) {
e.printStackTrace();
throw new KettleDatabaseException("Unable to determine if indexes exists on table [" + tablename + "]",e);
}
}
