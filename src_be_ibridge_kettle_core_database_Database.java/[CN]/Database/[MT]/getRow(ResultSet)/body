{
  Row row;
  int nrcols, i;
  Value val;
  try {
    nrcols=rsmd.getColumnCount();
    if (rs.next()) {
      row=new Row();
      for (i=0; i < nrcols; i++) {
        val=new Value(rowinfo.getValue(i));
switch (val.getType()) {
case Value.VALUE_TYPE_BOOLEAN:
          val.setValue(rs.getBoolean(i + 1));
        break;
case Value.VALUE_TYPE_NUMBER:
      val.setValue(rs.getDouble(i + 1));
    break;
case Value.VALUE_TYPE_BIGNUMBER:
  val.setValue(rs.getBigDecimal(i + 1));
break;
case Value.VALUE_TYPE_INTEGER:
val.setValue(rs.getLong(i + 1));
break;
case Value.VALUE_TYPE_STRING:
val.setValue(rs.getString(i + 1));
break;
case Value.VALUE_TYPE_DATE:
if (databaseMeta.supportsTimeStampToDateConversion()) {
val.setValue(rs.getTimestamp(i + 1));
break;
}
 else {
val.setValue(rs.getDate(i + 1));
break;
}
default :
break;
}
if (rs.wasNull()) val.setNull();
row.addValue(val);
}
}
 else {
row=null;
}
return row;
}
 catch (SQLException ex) {
throw new KettleDatabaseException("Couldn't get row from result set",ex);
}
}
