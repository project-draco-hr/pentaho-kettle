{
  try {
    TransMeta transMeta=new TransMeta();
    transMeta.setVariable("TablespaceDDLFragmentTest_DATA_TABLESPACE_1","TABLES");
    transMeta.setVariable("TablespaceDDLFragmentTest_INDEX_TABLESPACE_1","INDEXES");
    transMeta.setVariable("TablespaceDDLFragmentTest_DATA_TABLESPACE_2","TABLE");
    transMeta.setVariable("TablespaceDDLFragmentTest_INDEX_TABLESPACE_2","INDEX");
    String ddlFragment="";
    DatabaseMeta databaseMeta=new DatabaseMeta(OracleDatabaseXMLWithoutTablespaces);
    ddlFragment=databaseMeta.getDatabaseInterface().getDataTablespaceDDL(transMeta,databaseMeta);
    assertEquals(ddlFragment,"");
    ddlFragment=databaseMeta.getDatabaseInterface().getIndexTablespaceDDL(transMeta,databaseMeta);
    assertEquals(ddlFragment,"");
    databaseMeta=new DatabaseMeta(OracleDatabaseXMLWithTablespacesAsValues);
    ddlFragment=databaseMeta.getDatabaseInterface().getDataTablespaceDDL(transMeta,databaseMeta);
    assertEquals(ddlFragment,"TABLESPACE TABLES");
    ddlFragment=databaseMeta.getDatabaseInterface().getIndexTablespaceDDL(transMeta,databaseMeta);
    assertEquals(ddlFragment,"TABLESPACE INDEXES");
    databaseMeta=new DatabaseMeta(OracleDatabaseXMLWithTablespacesAsVariables);
    ddlFragment=databaseMeta.getDatabaseInterface().getDataTablespaceDDL(transMeta,databaseMeta);
    assertEquals(ddlFragment,"TABLESPACE TABLES");
    ddlFragment=databaseMeta.getDatabaseInterface().getIndexTablespaceDDL(transMeta,databaseMeta);
    assertEquals(ddlFragment,"TABLESPACE INDEXES");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
