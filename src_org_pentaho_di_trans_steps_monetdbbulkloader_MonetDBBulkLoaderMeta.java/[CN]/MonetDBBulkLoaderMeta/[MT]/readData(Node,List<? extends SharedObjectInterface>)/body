{
  try {
    dbConnectionName=XMLHandler.getTagValue(stepnode,"connection");
    databaseMeta=DatabaseMeta.findDatabase(databases,dbConnectionName);
    bufferSize=XMLHandler.getTagValue(stepnode,"buffer_size");
    schemaName=XMLHandler.getTagValue(stepnode,"schema");
    tableName=XMLHandler.getTagValue(stepnode,"table");
    logFile=XMLHandler.getTagValue(stepnode,"log_file");
    encoding=XMLHandler.getTagValue(stepnode,"encoding");
    truncate="Y".equals(XMLHandler.getTagValue(stepnode,"truncate"));
    autoSchema="Y".equals(XMLHandler.getTagValue(stepnode,"auto_schema"));
    autoStringWidths="Y".equals(XMLHandler.getTagValue(stepnode,"auto_string_widths"));
    int nrvalues=XMLHandler.countNodes(stepnode,"mapping");
    allocate(nrvalues);
    for (int i=0; i < nrvalues; i++) {
      Node vnode=XMLHandler.getSubNodeByNr(stepnode,"mapping",i);
      fieldTable[i]=XMLHandler.getTagValue(vnode,"stream_name");
      fieldStream[i]=XMLHandler.getTagValue(vnode,"field_name");
      if (fieldStream[i] == null)       fieldStream[i]=fieldTable[i];
      fieldFormatOk[i]="Y".equalsIgnoreCase(XMLHandler.getTagValue(vnode,"field_format_ok"));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"MonetDBBulkLoaderMeta.Exception.UnableToReadStepInfoFromXML"),e);
  }
}
