{
  if (kidDirectoryCache != null && kidDirectoryCache.isEmpty() == false) {
    return kidDirectoryCache;
  }
  if (kidDirectoryCache == null) {
    kidDirectoryCache=new UIRepositoryDirectories(){
      public void onRemove(      UIRepositoryObject child){
        if (rd.getChildren() != null) {
          Iterator<RepositoryDirectoryInterface> iter=rd.getChildren().iterator();
          while (iter.hasNext()) {
            RepositoryDirectoryInterface c=iter.next();
            if (c.getObjectId().equals(child.getObjectId())) {
              iter.remove();
              return;
            }
          }
        }
      }
    }
;
  }
  if (rd.getChildren() == null) {
    return kidDirectoryCache;
  }
  for (  RepositoryDirectoryInterface child : rd.getChildren()) {
    try {
      kidDirectoryCache.add(UIObjectRegistry.getInstance().constructUIRepositoryDirectory(child,this,rep));
    }
 catch (    UIObjectCreationException e) {
      kidDirectoryCache.add(new UIRepositoryDirectory(child,this,rep));
    }
  }
  return kidDirectoryCache;
}
