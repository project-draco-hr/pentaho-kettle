{
  try {
    connection=rep.loadDatabaseMetaFromJobEntryAttribute(id_jobentry,"id_database");
    if (connection == null) {
      connection=DatabaseMeta.findDatabase(databases,rep.getJobEntryAttributeString(id_jobentry,"connection"));
    }
    this.argFromPrevious=rep.getJobEntryAttributeBoolean(id_jobentry,"arg_from_previous");
    int argnr=rep.countNrJobEntryAttributes(id_jobentry,"name");
    this.arguments=new String[argnr];
    this.schemaname=new String[argnr];
    for (int a=0; a < argnr; a++) {
      this.arguments[a]=rep.getJobEntryAttributeString(id_jobentry,a,"name");
      this.schemaname[a]=rep.getJobEntryAttributeString(id_jobentry,a,"schemaname");
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEntryTruncateTables.UnableLoadRep","" + id_jobentry),dbe);
  }
}
