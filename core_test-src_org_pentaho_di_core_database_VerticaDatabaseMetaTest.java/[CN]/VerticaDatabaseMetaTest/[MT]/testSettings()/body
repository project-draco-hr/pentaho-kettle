{
  assertArrayEquals(new int[]{DatabaseMeta.TYPE_ACCESS_NATIVE,DatabaseMeta.TYPE_ACCESS_ODBC,DatabaseMeta.TYPE_ACCESS_JNDI},nativeMeta.getAccessTypeList());
  assertEquals(5433,nativeMeta.getDefaultDatabasePort());
  assertEquals(5433,odbcMeta.getDefaultDatabasePort());
  assertEquals("com.vertica.Driver",nativeMeta.getDriverClass());
  assertEquals("sun.jdbc.odbc.JdbcOdbcDriver",odbcMeta.getDriverClass());
  assertEquals("jdbc:odbc:FOO",odbcMeta.getURL("IGNORED","IGNORED","FOO"));
  assertEquals("jdbc:vertica://FOO:BAR/WIBBLE",nativeMeta.getURL("FOO","BAR","WIBBLE"));
  assertEquals("jdbc:vertica://FOO:/WIBBLE",nativeMeta.getURL("FOO","","WIBBLE"));
  assertFalse(nativeMeta.isFetchSizeSupported());
  assertFalse(nativeMeta.supportsBitmapIndex());
  assertArrayEquals(new String[]{"vertica_2.5_jdk_5.jar"},nativeMeta.getUsedLibraries());
  assertEquals(4000,nativeMeta.getMaxVARCHARLength());
  assertArrayEquals(new String[]{"ABORT","ABSOLUTE","ACCESS","ACTION","ADD","AFTER","AGGREGATE","ALL","ALSO","ALTER","ANALYSE","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASSERTION","ASSIGNMENT","AT","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BIT","BLOCK_DICT","BLOCKDICT_COMP","BOOLEAN","BOTH","BY","CACHE","CALLED","CASCADE","CASE","CAST","CATALOG_PATH","CHAIN","CHAR","CHARACTER","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLUMN","COMMENT","COMMIT","COMMITTED","COMMONDELTA_COMP","CONSTRAINT","CONSTRAINTS","CONVERSION","CONVERT","COPY","CORRELATION","CREATE","CREATEDB","CREATEUSER","CROSS","CSV","CURRENT_DATABASE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPATH","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DELTARANGE_COMP","DELTARANGE_COMP_SP","DELTAVAL","DESC","DETERMINES","DIRECT","DISTINCT","DISTVALINDEX","DO","DOMAIN","DOUBLE","DROP","EACH","ELSE","ENCODING","ENCRYPTED","END","EPOCH","ERROR","ESCAPE","EXCEPT","EXCEPTIONS","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXTERNAL","EXTRACT","FALSE","FETCH","FIRST","FLOAT","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","GLOBAL","GRANT","GROUP","HANDLER","HAVING","HOLD","HOUR","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IN","IN_P","INCLUDING","INCREMENT","INDEX","INHERITS","INITIALLY","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LANCOMPILER","LANGUAGE","LARGE","LAST","LATEST","LEADING","LEFT","LESS","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCK","MATCH","MAXVALUE","MERGEOUT","MINUTE","MINVALUE","MOBUF","MODE","MONTH","MOVE","MOVEOUT","MULTIALGORITHM_COMP","MULTIALGORITHM_COMP_SP","NAMES","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NO","NOCREATEDB","NOCREATEUSER","NODE","NODES","NONE","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NUMERIC","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OR","ORDER","OUT","OUTER","OVERLAPS","OVERLAY","OWNER","PARTIAL","PARTITION","PASSWORD","PLACING","POSITION","PRECISION","PREPARE","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROJECTION","QUOTE","READ","REAL","RECHECK","RECORD","RECOVER","REFERENCES","REFRESH","REINDEX","REJECTED","RELATIVE","RELEASE","RENAME","REPEATABLE","REPLACE","RESET","RESTART","RESTRICT","RETURNS","REVOKE","RIGHT","RLE","ROLLBACK","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCROLL","SECOND","SECURITY","SEGMENTED","SELECT","SEQUENCE","SERIALIZABLE","SESSION","SESSION_USER","SET","SETOF","SHARE","SHOW","SIMILAR","SIMPLE","SMALLINT","SOME","SPLIT","STABLE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STRICT","SUBSTRING","SYSID","TABLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","TERMINATOR","THAN","THEN","TIME","TIMESTAMP","TIMESTAMPTZ","TIMETZ","TO","TOAST","TRAILING","TRANSACTION","TREAT","TRIGGER","TRIM","TRUE","TRUE_P","TRUNCATE","TRUSTED","TYPE","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNSEGMENTED","UNTIL","UPDATE","USAGE","USER","USING","VACUUM","VALID","VALIDATOR","VALINDEX","VALUES","VARCHAR","VARYING","VERBOSE","VIEW","VOLATILE","WHEN","WHERE","WITH","WITHOUT","WORK","WRITE","YEAR","ZONE"},nativeMeta.getReservedWords());
  assertArrayEquals(new String[]{},nativeMeta.getViewTypes());
  assertFalse(nativeMeta.supportsAutoInc());
  assertTrue(nativeMeta.supportsBooleanDataType());
  assertTrue(nativeMeta.requiresCastToVariousForIsNull());
  assertEquals("?",nativeMeta.getExtraOptionIndicator());
  assertEquals("&",nativeMeta.getExtraOptionSeparator());
  assertTrue(nativeMeta.supportsSequences());
  assertFalse(nativeMeta.supportsTimeStampToDateConversion());
  assertFalse(nativeMeta.supportsGetBlob());
  assertTrue(nativeMeta.isDisplaySizeTwiceThePrecision());
}
