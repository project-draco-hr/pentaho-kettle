{
  Result result=previousResult;
  result.setResult(true);
  int nrerrors=0;
  int nrsuccess=0;
  if (connections != null) {
    for (int i=0; i < connections.length && !parentJob.isStopped(); i++) {
      Database db=new Database(this,connections[i]);
      db.shareVariablesWith(this);
      try {
        db.connect(parentJob.getTransactionId(),null);
        if (isDetailed())         logDetailed(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.Connected",connections[i].getDatabaseName(),connections[i].getName()));
        int iMaximumTimeout=Const.toInt(environmentSubstitute(waitfors[i]),0);
        if (iMaximumTimeout > 0) {
          int Multiple=1;
          String waitTimeMessage=unitTimeDesc[0];
switch (waittimes[i]) {
case JobEntryCheckDbConnections.UNIT_TIME_SECOND:
            Multiple=1000;
          waitTimeMessage=unitTimeDesc[1];
        break;
case JobEntryCheckDbConnections.UNIT_TIME_MINUTE:
      Multiple=60000;
    waitTimeMessage=unitTimeDesc[2];
  break;
case JobEntryCheckDbConnections.UNIT_TIME_HOUR:
Multiple=3600000;
waitTimeMessage=unitTimeDesc[3];
break;
default :
Multiple=1000;
waitTimeMessage=unitTimeDesc[1];
break;
}
if (isDetailed()) logDetailed(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.Wait","" + iMaximumTimeout,waitTimeMessage));
long timeStart=System.currentTimeMillis() / Multiple;
boolean continueLoop=true;
while (continueLoop && !parentJob.isStopped()) {
long now=System.currentTimeMillis() / Multiple;
if ((now >= (timeStart + iMaximumTimeout))) {
if (isDetailed()) logDetailed(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.WaitTimeIsElapsed.Label",connections[i].getDatabaseName(),connections[i].getName()));
continueLoop=false;
}
 else {
try {
Thread.sleep(100);
}
 catch (Exception e) {
}
}
}
}
nrsuccess++;
if (isDetailed()) logDetailed(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.ConnectionOK",connections[i].getDatabaseName(),connections[i].getName()));
}
 catch (KettleDatabaseException e) {
nrerrors++;
logError(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.Exception",connections[i].getDatabaseName(),connections[i].getName(),e.toString()));
}
 finally {
if (db != null) try {
db.disconnect();
db=null;
}
 catch (Exception e) {
}
;
}
}
}
if (nrerrors > 0) {
result.setNrErrors(nrerrors);
result.setResult(false);
}
if (isDetailed()) {
logDetailed("=======================================");
logDetailed(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.Log.Info.ConnectionsInError","" + nrerrors));
logDetailed(BaseMessages.getString(PKG,"JobEntryCheckDbConnections.Log.Info.ConnectionsInSuccess","" + nrsuccess));
logDetailed("=======================================");
}
return result;
}
