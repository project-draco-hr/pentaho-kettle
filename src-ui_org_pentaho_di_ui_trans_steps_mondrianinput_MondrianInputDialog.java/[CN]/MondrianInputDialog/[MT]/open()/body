{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("MondrianInputDialog.MondrianInput"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("MondrianInputDialog.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wConnection=addConnectionLine(shell,wStepname,middle,margin);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(Messages.getString("System.Button.Preview"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wPreview},margin,null);
  wlCatalog=new Label(shell,SWT.RIGHT);
  wlCatalog.setText(Messages.getString("MondrianInputDialog.Catalog"));
  props.setLook(wlCatalog);
  fdlCatalog=new FormData();
  fdlCatalog.left=new FormAttachment(0,0);
  fdlCatalog.right=new FormAttachment(middle,-margin);
  fdlCatalog.bottom=new FormAttachment(wOK,-2 * margin);
  wlCatalog.setLayoutData(fdlCatalog);
  wCatalog=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wCatalog);
  wCatalog.addModifyListener(lsMod);
  fdCatalog=new FormData();
  fdCatalog.left=new FormAttachment(middle,0);
  fdCatalog.right=new FormAttachment(100,0);
  fdCatalog.bottom=new FormAttachment(wOK,-2 * margin);
  wCatalog.setLayoutData(fdCatalog);
  wlVariables=new Label(shell,SWT.RIGHT);
  wlVariables.setText(Messages.getString("MondrianInputDialog.ReplaceVariables"));
  props.setLook(wlVariables);
  fdlVariables=new FormData();
  fdlVariables.left=new FormAttachment(0,0);
  fdlVariables.right=new FormAttachment(middle,-margin);
  fdlVariables.bottom=new FormAttachment(wCatalog,-margin);
  wlVariables.setLayoutData(fdlVariables);
  wVariables=new Button(shell,SWT.CHECK);
  wlVariables.setToolTipText(Messages.getString("MondrianInputDialog.ReplaceVariables.Tooltip"));
  props.setLook(wVariables);
  fdVariables=new FormData();
  fdVariables.left=new FormAttachment(middle,0);
  fdVariables.right=new FormAttachment(100,0);
  fdVariables.bottom=new FormAttachment(wCatalog,-margin);
  wVariables.setLayoutData(fdVariables);
  wVariables.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      setSQLToolTip();
    }
  }
);
  wlPosition=new Label(shell,SWT.NONE);
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(0,0);
  fdlPosition.right=new FormAttachment(100,0);
  fdlPosition.bottom=new FormAttachment(wVariables,-margin);
  wlPosition.setLayoutData(fdlPosition);
  wlSQL=new Label(shell,SWT.NONE);
  wlSQL.setText(Messages.getString("MondrianInputDialog.SQL"));
  props.setLook(wlSQL);
  fdlSQL=new FormData();
  fdlSQL.left=new FormAttachment(0,0);
  fdlSQL.top=new FormAttachment(wConnection,margin * 2);
  wlSQL.setLayoutData(fdlSQL);
  wSQL=new StyledTextComp(shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wSQL,Props.WIDGET_STYLE_FIXED);
  wSQL.addModifyListener(lsMod);
  fdSQL=new FormData();
  fdSQL.left=new FormAttachment(0,0);
  fdSQL.top=new FormAttachment(wlSQL,margin);
  fdSQL.right=new FormAttachment(100,0);
  fdSQL.bottom=new FormAttachment(wlPosition,-margin);
  wSQL.setLayoutData(fdSQL);
  wSQL.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setSQLToolTip();
      setPosition();
    }
  }
);
  wSQL.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      setPosition();
    }
    public void keyReleased(    KeyEvent e){
      setPosition();
    }
  }
);
  wSQL.addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      setPosition();
    }
    public void focusLost(    FocusEvent e){
      setPosition();
    }
  }
);
  wSQL.addMouseListener(new MouseAdapter(){
    public void mouseDoubleClick(    MouseEvent e){
      setPosition();
    }
    public void mouseDown(    MouseEvent e){
      setPosition();
    }
    public void mouseUp(    MouseEvent e){
      setPosition();
    }
  }
);
  lineStyler=new MDXValuesHighlight();
  wSQL.addLineStyleListener(lineStyler);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wPreview.addListener(SWT.Selection,lsPreview);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wCatalog.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  input.setChanged(changed);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
