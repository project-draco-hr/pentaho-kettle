{
  if (repository == null) {
    JobMeta jobMeta=new JobMeta(job,repository);
    return jobMeta;
  }
 else {
    String directoryPath;
    String name;
    int lastSlash=job.lastIndexOf(RepositoryDirectory.DIRECTORY_SEPARATOR);
    if (lastSlash < 0) {
      directoryPath="/";
      name=job;
    }
 else {
      directoryPath=job.substring(0,lastSlash);
      name=job.substring(lastSlash + 1);
    }
    RepositoryDirectoryInterface directory=repository.loadRepositoryDirectoryTree().findDirectory(directoryPath);
    if (directory == null) {
      throw new KettleException("Unable to find directory path '" + directoryPath + "' in the repository");
    }
    ObjectId jobID=repository.getJobId(name,directory);
    if (jobID == null) {
      throw new KettleException("Unable to find job '" + name + "' in directory :"+ directory);
    }
    JobMeta jobMeta=repository.loadJob(jobID,null);
    return jobMeta;
  }
}
