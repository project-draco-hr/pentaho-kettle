{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  List<String> attributes=Arrays.asList("fieldToUse","targetField","nonMatchDefault","sourceValue","targetValue");
  Map<String,String> getterMap=new HashMap<String,String>(){
{
      put("fieldToUse","getFieldToUse");
      put("targetField","getTargetField");
      put("nonMatchDefault","getNonMatchDefault");
      put("sourceValue","getSourceValue");
      put("targetValue","getTargetValue");
    }
  }
;
  Map<String,String> setterMap=new HashMap<String,String>(){
{
      put("fieldToUse","setFieldToUse");
      put("targetField","setTargetField");
      put("nonMatchDefault","setNonMatchDefault");
      put("sourceValue","setSourceValue");
      put("targetValue","setTargetValue");
    }
  }
;
  FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),5);
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("sourceValue",stringArrayLoadSaveValidator);
  attrValidatorMap.put("targetValue",stringArrayLoadSaveValidator);
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,new ArrayList<String>(),new ArrayList<String>(),getterMap,setterMap,attrValidatorMap,typeValidatorMap,this);
}
