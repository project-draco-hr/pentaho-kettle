{
  CheckResult checkResult;
  try {
    RowMetaInterface tableFields=getRequiredFields(transmeta);
    checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,MESSAGES.getString("TeraFastMeta.Message.ConnectionEstablished"),stepMeta);
    remarks.add(checkResult);
    checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,MESSAGES.getString("TeraFastMeta.Message.TableExists"),stepMeta);
    remarks.add(checkResult);
    boolean error=false;
    for (    String field : this.tableFieldList.getValue()) {
      if (tableFields.searchValueMeta(field) == null) {
        error=true;
        checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,MESSAGES.getString("TeraFastMeta.Exception.TableFieldNotFound"),stepMeta);
        remarks.add(checkResult);
      }
    }
    if (!error) {
      checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,MESSAGES.getString("TeraFastMeta.Message.AllTableFieldsFound"),stepMeta);
      remarks.add(checkResult);
    }
    if (prev != null && prev.size() > 0) {
      checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,MESSAGES.getString("TeraFastMeta.Message.StepInputDataFound"),stepMeta);
      remarks.add(checkResult);
      error=false;
      for (      String field : this.streamFieldList.getValue()) {
        if (prev.searchValueMeta(field) == null) {
          error=true;
          checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,MESSAGES.getString("TeraFastMeta.Exception.StreamFieldNotFound"),stepMeta);
          remarks.add(checkResult);
        }
      }
      if (!error) {
        checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,MESSAGES.getString("TeraFastMeta.Message.AllStreamFieldsFound"),stepMeta);
        remarks.add(checkResult);
      }
    }
  }
 catch (  KettleDatabaseException e) {
    checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,MESSAGES.getString("TeraFastMeta.Exception.ConnectionFailed"),stepMeta);
    remarks.add(checkResult);
  }
catch (  KettleException e) {
    checkResult=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,e.getMessage(),stepMeta);
    remarks.add(checkResult);
  }
}
