{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobWriteToFile.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobWriteToFile.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,null);
  wFileGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wFileGroup);
  wFileGroup.setText(BaseMessages.getString(PKG,"JobWriteToFile.Group.File.Label"));
  FormLayout FileGroupLayout=new FormLayout();
  FileGroupLayout.marginWidth=10;
  FileGroupLayout.marginHeight=10;
  wFileGroup.setLayout(FileGroupLayout);
  wlFilename=new Label(wFileGroup,SWT.RIGHT);
  wlFilename.setText(BaseMessages.getString(PKG,"JobWriteToFile.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wName,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(wFileGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wName,0);
  wbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(jobMeta,wFileGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(wName,margin);
  fdFilename.right=new FormAttachment(wbFilename,-margin);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(jobMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.SAVE);
      dialog.setFilterExtensions(new String[]{"*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlCreateParentFolder=new Label(wFileGroup,SWT.RIGHT);
  wlCreateParentFolder.setText(BaseMessages.getString(PKG,"JobWriteToFile.CreateParentFolder.Label"));
  props.setLook(wlCreateParentFolder);
  fdlCreateParentFolder=new FormData();
  fdlCreateParentFolder.left=new FormAttachment(0,0);
  fdlCreateParentFolder.top=new FormAttachment(wFilename,margin);
  fdlCreateParentFolder.right=new FormAttachment(middle,-margin);
  wlCreateParentFolder.setLayoutData(fdlCreateParentFolder);
  wCreateParentFolder=new Button(wFileGroup,SWT.CHECK);
  props.setLook(wCreateParentFolder);
  wCreateParentFolder.setToolTipText(BaseMessages.getString(PKG,"JobWriteToFile.CreateParentFolder.Tooltip"));
  fdCreateParentFolder=new FormData();
  fdCreateParentFolder.left=new FormAttachment(middle,0);
  fdCreateParentFolder.top=new FormAttachment(wFilename,margin);
  fdCreateParentFolder.right=new FormAttachment(100,0);
  wCreateParentFolder.setLayoutData(fdCreateParentFolder);
  wCreateParentFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlAppendFile=new Label(wFileGroup,SWT.RIGHT);
  wlAppendFile.setText(BaseMessages.getString(PKG,"JobWriteToFile.AppendFile.Label"));
  props.setLook(wlAppendFile);
  fdlAppendFile=new FormData();
  fdlAppendFile.left=new FormAttachment(0,0);
  fdlAppendFile.top=new FormAttachment(wCreateParentFolder,margin);
  fdlAppendFile.right=new FormAttachment(middle,-margin);
  wlAppendFile.setLayoutData(fdlAppendFile);
  wAppendFile=new Button(wFileGroup,SWT.CHECK);
  props.setLook(wAppendFile);
  wAppendFile.setToolTipText(BaseMessages.getString(PKG,"JobWriteToFile.AppendFile.Tooltip"));
  fdAppendFile=new FormData();
  fdAppendFile.left=new FormAttachment(middle,0);
  fdAppendFile.top=new FormAttachment(wCreateParentFolder,margin);
  fdAppendFile.right=new FormAttachment(100,0);
  wAppendFile.setLayoutData(fdAppendFile);
  wAppendFile.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdFileGroup=new FormData();
  fdFileGroup.left=new FormAttachment(0,margin);
  fdFileGroup.top=new FormAttachment(wName,margin);
  fdFileGroup.right=new FormAttachment(100,-margin);
  wFileGroup.setLayoutData(fdFileGroup);
  wContentGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wContentGroup);
  wContentGroup.setText(BaseMessages.getString(PKG,"JobWriteToFile.Group.Content.Label"));
  FormLayout ContentGroupLayout=new FormLayout();
  ContentGroupLayout.marginWidth=10;
  ContentGroupLayout.marginHeight=10;
  wContentGroup.setLayout(ContentGroupLayout);
  wlEncoding=new Label(wContentGroup,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"JobWriteToFile.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,-margin);
  fdlEncoding.top=new FormAttachment(wAppendFile,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new ComboVar(jobMeta,wContentGroup,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(wAppendFile,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setEncodings();
    }
  }
);
  wlContent=new Label(wContentGroup,SWT.RIGHT);
  wlContent.setText(BaseMessages.getString(PKG,"JobWriteToFile.Content.Label"));
  props.setLook(wlContent);
  fdlContent=new FormData();
  fdlContent.left=new FormAttachment(0,0);
  fdlContent.top=new FormAttachment(wEncoding,margin);
  fdlContent.right=new FormAttachment(middle,-margin);
  wlContent.setLayoutData(fdlContent);
  wContent=new Text(wContentGroup,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL);
  props.setLook(wContent,PropsUI.WIDGET_STYLE_FIXED);
  wContent.addModifyListener(lsMod);
  fdContent=new FormData();
  fdContent.left=new FormAttachment(middle,0);
  fdContent.top=new FormAttachment(wEncoding,margin);
  fdContent.right=new FormAttachment(100,0);
  fdContent.bottom=new FormAttachment(100,-margin);
  wContent.setLayoutData(fdContent);
  fdContentGroup=new FormData();
  fdContentGroup.left=new FormAttachment(0,margin);
  fdContentGroup.top=new FormAttachment(wFileGroup,margin);
  fdContentGroup.right=new FormAttachment(100,-margin);
  fdContentGroup.bottom=new FormAttachment(wOK,-margin);
  wContentGroup.setLayoutData(fdContentGroup);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wFilename.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
