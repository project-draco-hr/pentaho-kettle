{
  try {
    argFromPrevious=rep.getJobEntryAttributeBoolean(id_jobentry,"arg_from_previous");
    includeSubfolders=rep.getJobEntryAttributeBoolean(id_jobentry,"include_subfolders");
    int numberOfArgs=rep.countNrJobEntryAttributes(id_jobentry,"name");
    allocate(numberOfArgs);
    for (int i=0; i < numberOfArgs; i++) {
      arguments[i]=rep.getJobEntryAttributeString(id_jobentry,i,"name");
      filemasks[i]=rep.getJobEntryAttributeString(id_jobentry,i,"filemask");
    }
  }
 catch (  KettleException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEntryDeleteFiles.UnableToLoadFromRepo",String.valueOf(id_jobentry)),dbe);
  }
}
