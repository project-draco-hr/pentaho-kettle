{
  LogWriter log=LogWriter.getInstance();
  Result result=previousResult;
  List<RowMetaAndData> rows=result.getRows();
  RowMetaAndData resultRow=null;
  NrErrors=0;
  NrSuccess=0;
  DoNotProcessRest=false;
  String MoveToFolder=environmentSubstitute(destinationFolder);
  String vsourcefilefolder[]=source_filefolder;
  String vdestinationfilefolder[]=destination_filefolder;
  String vwildcard[]=wildcard;
  result.setResult(true);
  if (iffileexists.equals("move_file")) {
    if (Const.isEmpty(MoveToFolder)) {
      log.logError(toString(),Messages.getString("JobMoveFiles.Log.Error.MoveToFolderMissing"));
      result.setResult(false);
      result.setNrErrors(1);
      return result;
    }
    FileObject folder=null;
    try {
      folder=KettleVFS.getFileObject(MoveToFolder);
      if (!folder.exists()) {
        if (log.isDetailed())         log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.Error.FolderMissing",MoveToFolder));
        if (create_move_to_folder) {
          folder.createFolder();
        }
 else {
          log.logError(toString(),Messages.getString("JobMoveFiles.Log.Error.FolderMissing",MoveToFolder));
          result.setResult(false);
          result.setNrErrors(1);
          return result;
        }
      }
      if (!folder.getType().equals(FileType.FOLDER)) {
        log.logError(toString(),Messages.getString("JobMoveFiles.Log.Error.NotFolder",MoveToFolder));
        result.setResult(false);
        result.setNrErrors(1);
        return result;
      }
    }
 catch (    Exception e) {
      log.logError(toString(),Messages.getString("JobMoveFiles.Log.Error.GettingMoveToFolder",MoveToFolder,e.getMessage()));
      result.setResult(false);
      result.setNrErrors(1);
      return result;
    }
 finally {
      if (folder != null) {
        try {
          folder.close();
        }
 catch (        IOException ex) {
        }
        ;
      }
    }
  }
  if (arg_from_previous) {
    if (log.isDetailed())     log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.ArgFromPrevious.Found",(rows != null ? rows.size() : 0) + ""));
  }
  if (arg_from_previous && rows != null) {
    for (int iteration=0; iteration < rows.size(); iteration++) {
      resultRow=rows.get(iteration);
      String vsourcefilefolder_previous=resultRow.getString(0,null);
      String vdestinationfilefolder_previous=resultRow.getString(1,null);
      String vwildcard_previous=resultRow.getString(2,null);
      if (!Const.isEmpty(vsourcefilefolder_previous) && !Const.isEmpty(vdestinationfilefolder_previous)) {
        if (!DoNotProcessRest) {
          if (log.isDetailed())           log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.ProcessingRow",vsourcefilefolder_previous,vdestinationfilefolder_previous,vwildcard_previous));
          if (!ProcessFileFolder(vsourcefilefolder_previous,vdestinationfilefolder_previous,vwildcard_previous,parentJob,result,MoveToFolder)) {
            updateErrors();
          }
        }
 else {
          if (log.isDetailed())           log.logDetailed(toString(),Messages.getString("JobEntryMoveFiles.log.IgnoringFile",vsourcefilefolder_previous));
        }
      }
 else {
        if (log.isDetailed())         log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.IgnoringRow",vsourcefilefolder[iteration],vdestinationfilefolder[iteration],vwildcard[iteration]));
      }
    }
  }
 else   if (vsourcefilefolder != null && vdestinationfilefolder != null) {
    for (int i=0; i < vsourcefilefolder.length; i++) {
      if (!Const.isEmpty(vsourcefilefolder[i]) && !Const.isEmpty(vdestinationfilefolder[i])) {
        if (!DoNotProcessRest) {
          if (log.isDetailed())           log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.ProcessingRow",vsourcefilefolder[i],vdestinationfilefolder[i],vwildcard[i]));
          if (!ProcessFileFolder(vsourcefilefolder[i],vdestinationfilefolder[i],vwildcard[i],parentJob,result,MoveToFolder)) {
            updateErrors();
          }
        }
 else {
          if (log.isDetailed())           log.logDetailed(toString(),Messages.getString("JobEntryMoveFiles.log.IgnoringFile",vsourcefilefolder[i]));
        }
      }
 else {
        if (log.isDetailed())         log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.IgnoringRow",vsourcefilefolder[i],vdestinationfilefolder[i],vwildcard[i]));
      }
    }
  }
  if (getStatus()) {
    result.setResult(false);
    result.setNrErrors(NrErrors);
  }
 else   result.setResult(true);
  result.setNrLinesWritten(NrSuccess);
  if (log.isDetailed()) {
    log.logDetailed(toString(),"----------------------------");
    log.logDetailed(toString(),"Total files in error : " + NrErrors);
    log.logDetailed(toString(),"Total files moved : " + NrSuccess);
    log.logDetailed(toString(),"----------------------------");
  }
  return result;
}
