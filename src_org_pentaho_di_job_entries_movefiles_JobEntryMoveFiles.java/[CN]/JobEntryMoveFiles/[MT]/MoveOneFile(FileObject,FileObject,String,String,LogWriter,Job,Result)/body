{
  boolean entrystatus=false;
  FileObject file_name=null;
  try {
    if (!Currentfile.toString().equals(sourcefilefolder.toString())) {
      String shortfilename=Currentfile.getName().getBaseName();
      try {
        shortfilename=getDestinationFilename(Currentfile.getName().getBaseName());
      }
 catch (      Exception e) {
        log.logError(toString(),Messages.getString(Messages.getString("JobMoveFiles.Error.GettingFilename",Currentfile.getName().getBaseName(),e.toString())));
        return entrystatus;
      }
      int lenCurrent=Currentfile.getName().getBaseName().length();
      String short_filename_from_basefolder=shortfilename;
      if (!isDoNotKeepFolderStructure())       short_filename_from_basefolder=Currentfile.toString().substring(sourcefilefolder.toString().length(),Currentfile.toString().length());
      short_filename_from_basefolder=short_filename_from_basefolder.substring(0,short_filename_from_basefolder.length() - lenCurrent) + shortfilename;
      file_name=KettleVFS.getFileObject(realDestinationFilefoldername + Const.FILE_SEPARATOR + short_filename_from_basefolder);
      if (!Currentfile.getParent().toString().equals(sourcefilefolder.toString())) {
        if (include_subfolders) {
          if (Currentfile.getType() == FileType.FOLDER) {
            if (include_subfolders && move_empty_folders && Const.isEmpty(wildcard)) {
              if (!file_name.exists()) {
                Currentfile.moveTo(file_name);
                if (log.isDetailed()) {
                  log.logDetailed(toString()," ------ ");
                  log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FolderMoved",Currentfile.getName().toString(),file_name.getName().toString()));
                }
                if (add_result_filesname)                 addFileToResultFilenames(file_name.toString(),log,result,parentJob);
              }
 else {
                if (log.isDetailed()) {
                  log.logDetailed(toString()," ------ ");
                  log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FolderExists",file_name.toString()));
                }
                if (overwrite_files) {
                  Currentfile.moveTo(file_name);
                  if (log.isDetailed())                   log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileOverwrite",file_name.getName().toString()));
                  if (add_result_filesname)                   addFileToResultFilenames(file_name.toString(),log,result,parentJob);
                }
              }
            }
          }
 else {
            if (GetFileWildcard(shortfilename,realWildcard)) {
              if (!file_name.exists()) {
                Currentfile.moveTo(file_name);
                if (log.isDetailed()) {
                  log.logDetailed(toString()," ------ ");
                  log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileMoved",Currentfile.toString(),file_name.toString()));
                }
                if (add_result_filesname)                 addFileToResultFilenames(file_name.toString(),log,result,parentJob);
              }
 else {
                if (log.isDetailed()) {
                  log.logDetailed(toString()," ------ ");
                  log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileExists",file_name.getName().toString()));
                }
                if (overwrite_files) {
                  Currentfile.moveTo(file_name);
                  if (log.isDetailed())                   log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileOverwrite",file_name.toString()));
                  if (add_result_filesname)                   addFileToResultFilenames(file_name.toString(),log,result,parentJob);
                }
              }
            }
          }
        }
      }
 else {
        if (Currentfile.getType() == FileType.FOLDER) {
          if (include_subfolders && move_empty_folders && Const.isEmpty(wildcard)) {
            if (!file_name.exists()) {
              Currentfile.moveTo(file_name);
              if (log.isDetailed()) {
                log.logDetailed(toString()," ------ ");
                log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileMoved",Currentfile.toString(),file_name.toString()));
              }
              if (add_result_filesname)               addFileToResultFilenames(file_name.toString(),log,result,parentJob);
            }
 else {
              if (log.isDetailed()) {
                log.logDetailed(toString()," ------ ");
                log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileExists",file_name.getName().toString()));
              }
              if (overwrite_files) {
                Currentfile.moveTo(file_name);
                if (log.isDetailed())                 log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileOverwrite",file_name.toString()));
                if (add_result_filesname)                 addFileToResultFilenames(file_name.toString(),log,result,parentJob);
              }
            }
          }
        }
 else {
          if (GetFileWildcard(shortfilename,realWildcard)) {
            if (!file_name.exists()) {
              Currentfile.moveTo(file_name);
              if (log.isDetailed()) {
                log.logDetailed(toString()," ------ ");
                log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileMoved",Currentfile.toString(),file_name.toString()));
              }
              if (add_result_filesname)               addFileToResultFilenames(file_name.toString(),log,result,parentJob);
            }
 else {
              if (log.isDetailed()) {
                log.logDetailed(toString()," ------ ");
                log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileExists",file_name.getName().toString()));
              }
              if (overwrite_files) {
                Currentfile.moveTo(file_name);
                if (log.isDetailed())                 log.logDetailed(toString(),Messages.getString("JobMoveFiles.Log.FileOverwrite",file_name.toString()));
                if (add_result_filesname)                 addFileToResultFilenames(file_name.toString(),log,result,parentJob);
              }
            }
          }
        }
      }
    }
    entrystatus=true;
  }
 catch (  Exception e) {
    log.logError(toString(),Messages.getString("JobMoveFiles.Log.Error",e.toString()));
  }
 finally {
    if (file_name != null) {
      try {
        file_name.close();
      }
 catch (      IOException ex) {
      }
      ;
    }
  }
  return entrystatus;
}
