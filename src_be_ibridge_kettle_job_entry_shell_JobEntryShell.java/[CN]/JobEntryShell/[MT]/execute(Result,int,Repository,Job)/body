{
  LogWriter log=LogWriter.getInstance();
  Result result=prev_result;
  result.setEntryNr(nr);
  try {
    String cmd[]=null;
    String base[]=null;
    if (System.getProperty("os.name").startsWith("Windows")) {
      base=new String[]{getFileName()};
    }
 else {
      base=new String[]{getFileName()};
    }
    if (argFromPrevious && prev_result.rows != null) {
      ArrayList cmds=new ArrayList();
      for (int i=0; i < base.length; i++)       cmds.add(base[i]);
      for (int i=0; i < prev_result.rows.size(); i++) {
        Row r=(Row)prev_result.rows.get(i);
        for (int j=0; j < r.size(); j++) {
          cmds.add(r.getValue(j).toString());
        }
      }
      cmd=(String[])cmds.toArray(new String[cmds.size()]);
    }
 else     if (arguments != null) {
      ArrayList cmds=new ArrayList();
      for (int i=0; i < base.length; i++)       cmds.add(base[i]);
      for (int i=0; i < arguments.length; i++) {
        cmds.add(arguments[i]);
      }
      cmd=(String[])cmds.toArray(new String[cmds.size()]);
    }
    log.logDetailed(toString(),"Passing " + (cmd.length - 1) + " arguments to command : ["+ cmd[0]+ "]");
    Process proc=java.lang.Runtime.getRuntime().exec(cmd);
    proc.waitFor();
    log.logDetailed(toString(),"command [" + cmd[0] + "] has finished");
    result.exitStatus=proc.exitValue();
    if (result.exitStatus != 0) {
      log.logDetailed(toString(),"Exit status of shell [" + getFileName() + "] was "+ result.exitStatus);
      result.setNrErrors(1);
    }
  }
 catch (  IOException ioe) {
    log.logError(toString(),"Error running shell [" + getFileName() + "] : "+ ioe.toString());
    result.setNrErrors(1);
  }
catch (  InterruptedException ie) {
    log.logError(toString(),"Shell [" + getFileName() + "] was interupted : "+ ie.toString());
    result.setNrErrors(1);
  }
catch (  Exception e) {
    log.logError(toString(),"Unexpected error running shell [" + getFileName() + "] : "+ e.toString());
    result.setNrErrors(1);
  }
  if (result.getNrErrors() > 0) {
    result.setResult(false);
  }
 else {
    result.setResult(true);
  }
  return result;
}
