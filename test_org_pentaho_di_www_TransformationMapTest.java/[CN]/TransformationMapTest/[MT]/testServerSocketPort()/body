{
  TransformationMap map=new TransformationMap();
  SocketPortAllocation port;
  port=map.allocateServerSocketPort(40000,"host1","id1","trans1","slave-1","source1","0","slave-2","target1","0");
  assertEquals(40000,port.getPort());
  port=map.allocateServerSocketPort(40000,"host2","id2","trans1","slave-2","source1","0","slave-3","target1","0");
  assertEquals(40000,port.getPort());
  port=map.allocateServerSocketPort(40000,"host1","id1","trans1","slave-2","source1","0","slave-3","target1","0");
  assertEquals(40001,port.getPort());
  port=map.allocateServerSocketPort(40000,"host1","id2","trans2","slave-2","source1","0","slave-3","target1","0");
  assertEquals(40002,port.getPort());
  port=map.allocateServerSocketPort(40000,"host1","id2","trans2","slave-2","source1","1","slave-3","target1","1");
  assertEquals(40003,port.getPort());
  assertEquals(40000,map.allocateServerSocketPort(40000,"host1","id1","trans1","slave-1","source1","0","slave-2","target1","0").getPort());
  assertEquals(40000,map.allocateServerSocketPort(40000,"host2","id1","trans1","slave-2","source1","0","slave-3","target1","0").getPort());
  assertEquals(40001,map.allocateServerSocketPort(40000,"host1","id1","trans1","slave-2","source1","0","slave-3","target1","0").getPort());
  assertEquals(40002,map.allocateServerSocketPort(40000,"host1","id2","trans2","slave-2","source1","0","slave-3","target1","0").getPort());
  assertEquals(40003,map.allocateServerSocketPort(40000,"host1","id2","trans2","slave-2","source1","1","slave-3","target1","1").getPort());
  assertEquals(40000,map.allocateServerSocketPort(40000,"host1","id2","trans1","slave-1","source1","0","slave-2","target1","0").getPort());
  map.deallocateServerSocketPort(40002,"host1");
  assertEquals(40002,map.allocateServerSocketPort(40000,"host1","id2","trans2","slave-2","source1","0","slave-3","target1","0").getPort());
}
