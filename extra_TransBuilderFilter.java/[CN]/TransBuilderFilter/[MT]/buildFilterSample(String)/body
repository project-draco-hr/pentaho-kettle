{
  KettleEnvironment.init();
  try {
    TransMeta transMeta=null;
    try {
      transMeta=DomainObjectRegistry.getInstance().constructTransMeta(new Class[]{},new Object[]{});
    }
 catch (    DomainObjectCreationException doce) {
      transMeta=new TransMeta();
    }
    transMeta.setName(transformationName);
    RowGeneratorMeta aMeta=new RowGeneratorMeta();
    aMeta.allocate(1);
    aMeta.setRowLimit("100");
    aMeta.getFieldName()[0]="id";
    aMeta.getFieldType()[0]="Integer";
    aMeta.getFieldFormat()[0]="#";
    aMeta.getValue()[0]="5";
    StepMeta aStep=new StepMeta("A",aMeta);
    aStep.setLocation(50,50);
    aStep.setDraw(true);
    transMeta.addStep(aStep);
    RowGeneratorMeta bMeta=new RowGeneratorMeta();
    bMeta.allocate(1);
    bMeta.setRowLimit("100");
    bMeta.getFieldName()[0]="id";
    bMeta.getFieldType()[0]="Integer";
    bMeta.getFieldFormat()[0]="#";
    bMeta.getValue()[0]="9";
    StepMeta bStep=new StepMeta("B",bMeta);
    bStep.setLocation(50,150);
    bStep.setDraw(true);
    transMeta.addStep(bStep);
    TextFileOutputMeta dMeta=new TextFileOutputMeta();
    dMeta.setDefault();
    dMeta.allocate(1);
    dMeta.setFileName("${java.io.tmpdir}/dOutput");
    dMeta.setExtension("txt");
    TextFileField dField=new TextFileField();
    dField.setName("id");
    dField.setFormat("000");
    dField.setType(ValueMetaInterface.TYPE_INTEGER);
    dMeta.getOutputFields()[0]=dField;
    StepMeta dStep=new StepMeta("D",dMeta);
    dStep.setLocation(350,50);
    dStep.setDraw(true);
    transMeta.addStep(dStep);
    TextFileOutputMeta eMeta=new TextFileOutputMeta();
    eMeta.setDefault();
    eMeta.allocate(1);
    eMeta.setFileName("${java.io.tmpdir}/eOutput");
    eMeta.setExtension("txt");
    TextFileField eField=new TextFileField();
    eField.setName("id");
    eField.setFormat("000");
    eField.setType(ValueMetaInterface.TYPE_INTEGER);
    eMeta.getOutputFields()[0]=eField;
    StepMeta eStep=new StepMeta("E",dMeta);
    eStep.setLocation(350,150);
    eStep.setDraw(true);
    transMeta.addStep(eStep);
    FilterRowsMeta cMeta=new FilterRowsMeta();
    Condition condition=new Condition();
    condition.setLeftValuename("id");
    condition.setFunction(Condition.FUNC_SMALLER);
    condition.setRightExact(new ValueMetaAndData("constant",new Long(6)));
    cMeta.setCondition(condition);
    cMeta.getStepIOMeta().getTargetStreams().get(0).setStepMeta(dStep);
    cMeta.getStepIOMeta().getTargetStreams().get(1).setStepMeta(eStep);
    StepMeta cStep=new StepMeta("C",cMeta);
    cStep.setLocation(200,100);
    cStep.setDraw(true);
    transMeta.addStep(cStep);
    transMeta.addTransHop(new TransHopMeta(aStep,cStep));
    transMeta.addTransHop(new TransHopMeta(bStep,cStep));
    transMeta.addTransHop(new TransHopMeta(cStep,dStep));
    transMeta.addTransHop(new TransHopMeta(cStep,eStep));
    return transMeta;
  }
 catch (  Exception e) {
    throw new KettleException("An unexpected error occurred creating the new transformation",e);
  }
}
