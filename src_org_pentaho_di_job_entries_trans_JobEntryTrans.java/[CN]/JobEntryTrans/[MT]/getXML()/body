{
  StringBuffer retval=new StringBuffer(300);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("filename",filename));
  retval.append("      ").append(XMLHandler.addTagValue("transname",transname));
  if (directory != null) {
    retval.append("      ").append(XMLHandler.addTagValue("directory",directory));
  }
 else   if (directoryPath != null) {
    retval.append("      ").append(XMLHandler.addTagValue("directory",directoryPath));
  }
  retval.append("      ").append(XMLHandler.addTagValue("arg_from_previous",argFromPrevious));
  retval.append("      ").append(XMLHandler.addTagValue("exec_per_row",execPerRow));
  retval.append("      ").append(XMLHandler.addTagValue("clear_rows",clearResultRows));
  retval.append("      ").append(XMLHandler.addTagValue("clear_files",clearResultFiles));
  retval.append("      ").append(XMLHandler.addTagValue("set_logfile",setLogfile));
  retval.append("      ").append(XMLHandler.addTagValue("logfile",logfile));
  retval.append("      ").append(XMLHandler.addTagValue("logext",logext));
  retval.append("      ").append(XMLHandler.addTagValue("add_date",addDate));
  retval.append("      ").append(XMLHandler.addTagValue("add_time",addTime));
  retval.append("      ").append(XMLHandler.addTagValue("loglevel",LogWriter.getLogLevelDesc(loglevel)));
  retval.append("      ").append(XMLHandler.addTagValue("cluster",clustering));
  retval.append("      ").append(XMLHandler.addTagValue("slave_server_name",remoteSlaveServerName));
  retval.append("      ").append(XMLHandler.addTagValue("set_append_logfile",setAppendLogfile));
  retval.append("      ").append(XMLHandler.addTagValue("wait_until_finished",waitingToFinish));
  retval.append("      ").append(XMLHandler.addTagValue("follow_abort_remote",followingAbortRemotely));
  if (arguments != null)   for (int i=0; i < arguments.length; i++) {
    retval.append("      ").append(XMLHandler.addTagValue("argument" + i,arguments[i]));
  }
  if (parameters != null) {
    retval.append("      ").append(XMLHandler.openTag("parameters"));
    retval.append("        ").append(XMLHandler.addTagValue("pass_all_parameters",passingAllParameters));
    for (int i=0; i < parameters.length; i++) {
      retval.append("            ").append(XMLHandler.openTag("parameter"));
      retval.append("            ").append(XMLHandler.addTagValue("name",parameters[i]));
      retval.append("            ").append(XMLHandler.addTagValue("stream_name",parameterFieldNames[i]));
      retval.append("            ").append(XMLHandler.addTagValue("value",parameterValues[i]));
      retval.append("            ").append(XMLHandler.closeTag("parameter"));
    }
    retval.append("      ").append(XMLHandler.closeTag("parameters"));
  }
  return retval.toString();
}
