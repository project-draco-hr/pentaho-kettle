{
  LogWriter log=LogWriter.getInstance();
  EnvUtil.environmentInit();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("injectortest");
  StepLoader steploader=StepLoader.getInstance();
  String injectorStepname="injector step";
  InjectorMeta im=new InjectorMeta();
  String injectorPid=steploader.getStepPluginID(im);
  StepMeta injectorStep=new StepMeta(injectorPid,injectorStepname,(StepMetaInterface)im);
  transMeta.addStep(injectorStep);
  String dummyStepname="dummy step";
  DummyTransMeta dm=new DummyTransMeta();
  String dummyPid=steploader.getStepPluginID(dm);
  StepMeta dummyStep=new StepMeta(dummyPid,dummyStepname,(StepMetaInterface)dm);
  transMeta.addStep(dummyStep);
  TransHopMeta hi=new TransHopMeta(injectorStep,dummyStep);
  transMeta.addTransHop(hi);
  Trans trans=new Trans(log,transMeta);
  trans.prepareExecution(null);
  StepInterface si=trans.getStepInterface(dummyStepname,0);
  RowStepCollector rc=new RowStepCollector();
  si.addRowListener(rc);
  RowProducer rp=trans.addRowProducer(injectorStepname,0);
  trans.startThreads();
  List inputList=createData();
  Iterator it=inputList.iterator();
  while (it.hasNext()) {
    RowMetaAndData rm=(RowMetaAndData)it.next();
    rp.putRow(rm.getRowMeta(),rm.getData());
  }
  rp.finished();
  trans.waitUntilFinished();
  List resultRows=rc.getRowsRead();
  checkRows(resultRows,inputList);
}
