{
  final Display display=getParent().getDisplay();
  shell=new Shell(getParent(),SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormData fd;
  labelStepName=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(0,margin);
  labelStepName.setLayoutData(fd);
  textStepName=new Text(shell,SWT.BORDER);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(0,margin);
  textStepName.setLayoutData(fd);
  addConnectionLine=addConnectionLine(shell,textStepName,Const.MIDDLE_PCT,margin);
  labelClearCube=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(addConnectionLine,margin);
  labelClearCube.setLayoutData(fd);
  buttonClearCube=new Button(shell,SWT.CHECK);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(addConnectionLine,margin);
  buttonClearCube.setLayoutData(fd);
  labelCube=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(buttonClearCube,margin);
  labelCube.setLayoutData(fd);
  comboCube=new Combo(shell,SWT.READ_ONLY);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(buttonClearCube,margin);
  comboCube.setLayoutData(fd);
  labelMeasureType=new Label(shell,SWT.RIGHT);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(comboCube,margin);
  labelMeasureType.setLayoutData(fd);
  comboMeasureType=new Combo(shell,SWT.READ_ONLY | SWT.FILL);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(comboCube,margin);
  comboMeasureType.setLayoutData(fd);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      meta.setChanged();
    }
  }
;
  colinf=new ColumnInfo[]{new ColumnInfo(getLocalizedColumn(0),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(getLocalizedColumn(1),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{},true)};
  tableViewFields=new TableView(null,shell,SWT.NONE | SWT.BORDER,colinf,10,true,lsMod,props);
  tableViewFields.setSize(477,105);
  tableViewFields.setBounds(5,250,477,105);
  tableViewFields.setReadonly(true);
  tableViewFields.setSortable(false);
  tableViewFields.table.removeAll();
  fd=new FormData();
  fd.left=new FormAttachment(0,margin);
  fd.top=new FormAttachment(comboMeasureType,3 * margin);
  fd.right=new FormAttachment(100,-150);
  fd.bottom=new FormAttachment(100,-50);
  tableViewFields.setLayoutData(fd);
  buttonGetFields=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewFields,margin);
  fd.top=new FormAttachment(comboMeasureType,3 * margin);
  fd.right=new FormAttachment(100,0);
  buttonGetFields.setLayoutData(fd);
  buttonClearFields=new Button(shell,SWT.NONE);
  fd=new FormData();
  fd.left=new FormAttachment(tableViewFields,margin);
  fd.top=new FormAttachment(buttonGetFields,margin);
  fd.right=new FormAttachment(100,0);
  buttonClearFields.setLayoutData(fd);
  buttonOk=new Button(shell,SWT.CENTER);
  buttonCancel=new Button(shell,SWT.CENTER);
  buttonOk.setText(BaseMessages.getString("System.Button.OK"));
  buttonCancel.setText(BaseMessages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{buttonOk,buttonCancel},margin,null);
  buttonGetFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      doGetFields();
    }
  }
);
  buttonClearFields.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      doClearFields();
    }
  }
);
  buttonCancel.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      cancel();
    }
  }
);
  buttonOk.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ok();
    }
  }
);
  addConnectionLine.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      doSelectConnection(false);
    }
  }
);
  comboCube.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      doSelectCube();
    }
  }
);
  this.fillLocalizedData();
  this.fillStoredData();
  this.doSelectConnection(false);
  props.setLook(tableViewFields);
  props.setLook(textStepName);
  props.setLook(comboCube);
  props.setLook(comboMeasureType);
  props.setLook(labelStepName);
  props.setLook(labelCube);
  props.setLook(labelMeasureType);
  props.setLook(buttonClearFields);
  props.setLook(buttonGetFields);
  props.setLook(buttonOk);
  props.setLook(buttonCancel);
  props.setLook(addConnectionLine);
  props.setLook(buttonClearCube);
  props.setLook(labelClearCube);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  meta.setChanged(changed);
  setSize();
  shell.open();
  PaloCellInputDialog.showPaloLibWarningDialog(shell);
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
