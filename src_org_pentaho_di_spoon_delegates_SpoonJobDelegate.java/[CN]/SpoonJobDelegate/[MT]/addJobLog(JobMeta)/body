{
  String tabName=spoon.delegates.tabs.makeJobLogTabName(jobMeta);
  TabItem tabItem=spoon.delegates.tabs.findTabItem(tabName,TabMapEntry.OBJECT_TYPE_JOB_LOG);
  if (tabItem == null) {
    JobLog jobLog=new JobLog(spoon.tabfolder.getSwtTabset(),spoon,jobMeta);
    tabItem=new TabItem(spoon.tabfolder,tabName,tabName);
    tabItem.setText(tabName);
    tabItem.setToolTipText(Messages.getString("Spoon.Title.ExecLogJobView.Tooltip",spoon.delegates.tabs.makeJobGraphTabName(jobMeta)));
    tabItem.setControl(jobLog);
    JobHistory jobHistory=findJobHistoryOfJob(jobMeta);
    TabItem historyItem=spoon.delegates.tabs.findTabItem(spoon.delegates.tabs.makeJobHistoryTabName(jobMeta),TabMapEntry.OBJECT_TYPE_JOB_HISTORY);
    if (jobHistory != null && historyItem != null) {
      JobHistoryRefresher jobHistoryRefresher=new JobHistoryRefresher(historyItem,jobHistory);
      spoon.tabfolder.addListener(jobHistoryRefresher);
      jobLog.setJobHistoryRefresher(jobHistoryRefresher);
    }
    spoon.delegates.tabs.addTab(tabName,new TabMapEntry(tabItem,tabName,jobLog,TabMapEntry.OBJECT_TYPE_JOB_LOG));
  }
  int idx=spoon.tabfolder.indexOf(tabItem);
  spoon.tabfolder.setSelected(idx);
}
