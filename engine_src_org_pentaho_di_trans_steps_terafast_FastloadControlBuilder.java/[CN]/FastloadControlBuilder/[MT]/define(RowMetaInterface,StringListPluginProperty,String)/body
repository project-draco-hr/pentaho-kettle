{
  Assert.assertNotNull(targetTableFields,"fields cannot be null");
  Assert.assertNotNull(dataFile,"dataFile cannot be null");
  this.builder.append("DEFINE ");
  for (int i=0; i < targetTableFields.size(); i++) {
    ValueMetaInterface value=targetTableFields.getValueMeta(i);
    int tableIndex=tableFieldList.getValue().indexOf(value.getName());
    if (tableIndex >= 0) {
      this.builder.append(value.getName());
      int length=0;
      if (value.getType() == ValueMetaInterface.TYPE_DATE) {
        length=DEFAULT_DATE_FORMAT.length();
      }
 else {
        length=value.getLength();
      }
      this.builder.append("(" + "VARCHAR(" + length + "), nullif = '"+ String.format("%1$#" + length + "s",DEFAULT_NULL_VALUE)+ "'), ");
      this.builder.append(SystemUtils.LINE_SEPARATOR);
    }
  }
  this.builder.append(" NEWLINECHAR(VARCHAR(" + SystemUtils.LINE_SEPARATOR.length() + "))");
  this.builder.append(" FILE=" + dataFile);
  return this.newline();
}
