{
  long in_proc=Math.max(baseStep.getLinesInput(),baseStep.getLinesRead());
  long out_proc=Math.max(baseStep.getLinesOutput() + baseStep.getLinesUpdated(),baseStep.getLinesWritten() + baseStep.getLinesRejected());
  float lapsed=((float)baseStep.getRuntime()) / 1000;
  double in_speed=0;
  double out_speed=0;
  if (lapsed != 0) {
    in_speed=Math.floor(10 * (in_proc / lapsed)) / 10;
    out_speed=Math.floor(10 * (out_proc / lapsed)) / 10;
  }
  this.stepname=baseStep.getStepname();
  this.copy=baseStep.getCopy();
  this.linesRead=baseStep.getLinesRead();
  this.linesWritten=baseStep.getLinesWritten();
  this.linesInput=baseStep.getLinesInput();
  this.linesOutput=baseStep.getLinesOutput();
  this.linesUpdated=baseStep.getLinesUpdated();
  this.linesRejected=baseStep.getLinesRejected();
  this.errors=baseStep.getErrors();
  this.statusDescription=baseStep.getStatusDescription();
  this.seconds=Math.floor((lapsed * 10) + 0.5) / 10;
  this.speed=lapsed == 0 ? "-" : "" + (in_speed > out_speed ? in_speed : out_speed);
  this.priority=baseStep.isAlive() ? "" + baseStep.rowsetInputSize() + "/"+ baseStep.rowsetOutputSize() : "-";
  this.stopped=baseStep.isStopped();
}
