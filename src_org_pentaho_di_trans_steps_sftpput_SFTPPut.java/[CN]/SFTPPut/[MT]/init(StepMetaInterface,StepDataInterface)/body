{
  meta=(SFTPPutMeta)smi;
  data=(SFTPPutData)sdi;
  if (super.init(smi,sdi)) {
    try {
      String realServerName=environmentSubstitute(meta.getServerName());
      String realServerPort=environmentSubstitute(meta.getServerPort());
      String realUsername=environmentSubstitute(meta.getUserName());
      String realPassword=Encr.decryptPasswordOptionallyEncrypted(environmentSubstitute(meta.getPassword()));
      String realKeyFilename=null;
      String realPassPhrase=null;
      if (meta.isUseKeyFile()) {
        realKeyFilename=environmentSubstitute(meta.getKeyFilename());
        if (Const.isEmpty(realKeyFilename)) {
          logError(BaseMessages.getString(PKG,"SFTPPut.Error.KeyFileMissing"));
          return false;
        }
        if (!KettleVFS.fileExists(realKeyFilename)) {
          logError(BaseMessages.getString(PKG,"SFTPPut.Error.KeyFileNotFound",realKeyFilename));
          return false;
        }
        realPassPhrase=environmentSubstitute(meta.getKeyPassPhrase());
      }
      data.sftpclient=new SFTPClient(InetAddress.getByName(realServerName),Const.toInt(realServerPort,22),realUsername,realKeyFilename,realPassPhrase);
      if (isDetailed())       logDetailed(BaseMessages.getString(PKG,"SFTPPUT.Log.OpenedConnection",realServerName,realServerPort,realUsername));
      data.sftpclient.setCompression(meta.getCompression());
      String realProxyHost=environmentSubstitute(meta.getProxyHost());
      if (!Const.isEmpty(realProxyHost)) {
        data.sftpclient.setProxy(realProxyHost,environmentSubstitute(meta.getProxyPort()),environmentSubstitute(meta.getProxyUsername()),environmentSubstitute(meta.getProxyPassword()),meta.getProxyType());
      }
      data.sftpclient.login(realPassword);
    }
 catch (    Exception e) {
      logError(BaseMessages.getString(PKG,"SFTPPut.ErrorInit"),e);
      logError(Const.getStackTracker(e));
      return false;
    }
    return true;
  }
  return false;
}
