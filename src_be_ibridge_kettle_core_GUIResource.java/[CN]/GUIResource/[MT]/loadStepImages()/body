{
  imagesSteps=new Hashtable();
  imagesStepsSmall=new Hashtable();
  StepLoader steploader=StepLoader.getInstance();
  StepPlugin steps[]=steploader.getStepsWithType(StepPlugin.TYPE_ALL);
  for (int i=0; i < steps.length; i++) {
    Image image=null;
    Image small_image=null;
    if (steps[i].isNative()) {
      image=new Image(display,getClass().getResourceAsStream(steps[i].getIconFilename()));
    }
 else {
      String filename=steps[i].getIconFilename();
      image=new Image(display,filename);
    }
    if (image != null) {
      int xsize=image.getBounds().width;
      int ysize=image.getBounds().height;
      small_image=new Image(display,16,16);
      GC gc=new GC(small_image);
      gc.drawImage(image,0,0,xsize,ysize,0,0,16,16);
      gc.dispose();
    }
    imagesSteps.put(steps[i].getID(),image);
    imagesStepsSmall.put(steps[i].getID(),small_image);
  }
  imageHop=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "HOP.png"));
  imageConnection=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "CNC.png"));
  imageBol=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "BOL.png"));
  imageKettle=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "kettle_logo.png"));
  imageCredits=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "credits.png"));
  imageStart=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "STR.png"));
  imageDummy=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "DUM.png"));
  imageSpoon=new Image(display,getClass().getResourceAsStream(Const.IMAGE_DIRECTORY + "spoon32.png"));
}
