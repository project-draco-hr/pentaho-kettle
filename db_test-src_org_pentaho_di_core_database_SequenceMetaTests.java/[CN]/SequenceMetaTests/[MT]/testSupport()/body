{
  DatabaseInterface databaseInterface;
  databaseInterface=new OracleDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new OracleRDBDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new VerticaDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new PostgreSQLDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new GreenplumDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new AS400DatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new DB2DatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new HypersonicDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new KingbaseESDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new NetezzaDatabaseMeta();
  assertTrue(databaseInterface.supportsSequences());
  databaseInterface=new MySQLDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new InfiniDbDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new InfobrightDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new DbaseDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new DerbyDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new ExtenDBDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new FirebirdDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new GenericDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new GuptaDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new H2DatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new InformixDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new IngresDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new InterbaseDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new LucidDBDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new MonetDBDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new MSAccessDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new MSSQLServerDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new MSSQLServerNativeDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new NeoviewDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new RemedyActionRequestSystemDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new SAPDBDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new SAPR3DatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new SQLiteDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new SybaseDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new SybaseIQDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new TeradataDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
  databaseInterface=new UniVerseDatabaseMeta();
  assertFalse(databaseInterface.supportsSequences());
}
