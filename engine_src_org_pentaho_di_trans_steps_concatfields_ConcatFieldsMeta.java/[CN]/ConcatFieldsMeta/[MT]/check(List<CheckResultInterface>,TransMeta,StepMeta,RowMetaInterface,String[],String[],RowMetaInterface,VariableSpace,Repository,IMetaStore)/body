{
  CheckResult cr;
  if (Const.isEmpty(targetFieldName)) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"ConcatFieldsMeta.CheckResult.TargetFieldNameMissing"),stepMeta);
    remarks.add(cr);
  }
  if (targetFieldLength <= 0 && isFastDump()) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_WARNING,BaseMessages.getString(PKG,"ConcatFieldsMeta.CheckResult.TargetFieldLengthMissingFastDataDump"),stepMeta);
    remarks.add(cr);
  }
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,BaseMessages.getString(PKG,"ConcatFieldsMeta.CheckResult.FieldsReceived","" + prev.size()),stepMeta);
    remarks.add(cr);
    String error_message="";
    boolean error_found=false;
    for (int i=0; i < getOutputFields().length; i++) {
      int idx=prev.indexOfValue(getOutputFields()[i].getName());
      if (idx < 0) {
        error_message+="\t\t" + getOutputFields()[i].getName() + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message=BaseMessages.getString(PKG,"ConcatFieldsMeta.CheckResult.FieldsNotFound",error_message);
      cr=new CheckResult(CheckResultInterface.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResultInterface.TYPE_RESULT_OK,BaseMessages.getString(PKG,"ConcatFieldsMeta.CheckResult.AllFieldsFound"),stepMeta);
      remarks.add(cr);
    }
  }
}
