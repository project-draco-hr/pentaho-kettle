{
  Result result=new Result();
  for (  StepStatus stepStatus : stepStatusList) {
    result.setNrErrors(result.getNrErrors() + stepStatus.getErrors() + (result.isStopped() ? 1 : 0));
    if (transMeta.getReadStep() != null && stepStatus.getStepname().equals(transMeta.getReadStep().getName())) {
      result.setNrLinesRead(result.getNrLinesRead() + stepStatus.getLinesRead());
    }
    if (transMeta.getInputStep() != null && stepStatus.getStepname().equals(transMeta.getInputStep().getName())) {
      result.setNrLinesInput(result.getNrLinesInput() + stepStatus.getLinesInput());
    }
    if (transMeta.getWriteStep() != null && stepStatus.getStepname().equals(transMeta.getWriteStep().getName())) {
      result.setNrLinesWritten(result.getNrLinesWritten() + stepStatus.getLinesWritten());
    }
    if (transMeta.getOutputStep() != null && stepStatus.getStepname().equals(transMeta.getOutputStep().getName())) {
      result.setNrLinesOutput(result.getNrLinesOutput() + stepStatus.getLinesOutput());
    }
    if (transMeta.getUpdateStep() != null && stepStatus.getStepname().equals(transMeta.getUpdateStep().getName())) {
      result.setNrLinesUpdated(result.getNrLinesUpdated() + stepStatus.getLinesUpdated());
    }
    if (transMeta.getRejectedStep() != null && stepStatus.getStepname().equals(transMeta.getRejectedStep().getName())) {
      result.setNrLinesRejected(result.getNrLinesRejected() + stepStatus.getLinesRejected());
    }
    if (stepStatus.isStopped()) {
      result.setStopped(true);
      result.setResult(false);
    }
  }
  return result;
}
