{
  KettleEnvironment.init();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("csvinput1");
  PluginRegistry registry=PluginRegistry.getInstance();
  String fileName=writeInputFile();
  String injectorStepname="injector step";
  InjectorMeta im=new InjectorMeta();
  String injectorPid=registry.getPluginId(StepPluginType.class,im);
  StepMeta injectorStep=new StepMeta(injectorPid,injectorStepname,im);
  transMeta.addStep(injectorStep);
  String csvInputName="csv input step";
  CsvInputMeta cim=new CsvInputMeta();
  String csvInputPid=registry.getPluginId(StepPluginType.class,cim);
  StepMeta csvInputStep=new StepMeta(csvInputPid,csvInputName,cim);
  transMeta.addStep(csvInputStep);
  TextFileInputField[] fields=new TextFileInputField[5];
  for (int idx=0; idx < fields.length; idx++) {
    fields[idx]=new TextFileInputField();
  }
  fields[0].setName("a");
  fields[0].setType(ValueMetaInterface.TYPE_INTEGER);
  fields[0].setFormat("");
  fields[0].setLength(-1);
  fields[0].setPrecision(-1);
  fields[0].setCurrencySymbol("");
  fields[0].setDecimalSymbol("");
  fields[0].setGroupSymbol("");
  fields[0].setTrimType(ValueMetaInterface.TRIM_TYPE_NONE);
  fields[1].setName("b");
  fields[1].setType(ValueMetaInterface.TYPE_STRING);
  fields[1].setFormat("");
  fields[1].setLength(-1);
  fields[1].setPrecision(-1);
  fields[1].setCurrencySymbol("");
  fields[1].setDecimalSymbol("");
  fields[1].setGroupSymbol("");
  fields[1].setTrimType(ValueMetaInterface.TRIM_TYPE_NONE);
  fields[2].setName("c");
  fields[2].setType(ValueMetaInterface.TYPE_STRING);
  fields[2].setFormat("");
  fields[2].setLength(-1);
  fields[2].setPrecision(-1);
  fields[2].setCurrencySymbol("");
  fields[2].setDecimalSymbol("");
  fields[2].setGroupSymbol("");
  fields[2].setTrimType(ValueMetaInterface.TRIM_TYPE_NONE);
  fields[3].setName("d");
  fields[3].setType(ValueMetaInterface.TYPE_STRING);
  fields[3].setFormat("");
  fields[3].setLength(-1);
  fields[3].setPrecision(-1);
  fields[3].setCurrencySymbol("");
  fields[3].setDecimalSymbol("");
  fields[3].setGroupSymbol("");
  fields[3].setTrimType(ValueMetaInterface.TRIM_TYPE_NONE);
  fields[4].setName("e");
  fields[4].setType(ValueMetaInterface.TYPE_STRING);
  fields[4].setFormat("");
  fields[4].setLength(-1);
  fields[4].setPrecision(-1);
  fields[4].setCurrencySymbol("");
  fields[4].setDecimalSymbol("");
  fields[4].setGroupSymbol("");
  fields[4].setTrimType(ValueMetaInterface.TRIM_TYPE_NONE);
  cim.setIncludingFilename(true);
  cim.setFilename("");
  cim.setFilenameField("filename");
  cim.setDelimiter(";");
  cim.setEnclosure("\"");
  cim.setBufferSize("50000");
  cim.setLazyConversionActive(false);
  cim.setHeaderPresent(true);
  cim.setAddResultFile(false);
  cim.setIncludingFilename(true);
  cim.setRowNumField("");
  cim.setRunningInParallel(false);
  cim.setInputFields(fields);
  TransHopMeta hi=new TransHopMeta(injectorStep,csvInputStep);
  transMeta.addTransHop(hi);
  String dummyStepname1="dummy step 1";
  DummyTransMeta dm1=new DummyTransMeta();
  String dummyPid1=registry.getPluginId(StepPluginType.class,dm1);
  StepMeta dummyStep1=new StepMeta(dummyPid1,dummyStepname1,dm1);
  transMeta.addStep(dummyStep1);
  TransHopMeta hi1=new TransHopMeta(csvInputStep,dummyStep1);
  transMeta.addTransHop(hi1);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  StepInterface si=trans.getStepInterface(dummyStepname1,0);
  RowStepCollector dummyRc1=new RowStepCollector();
  si.addRowListener(dummyRc1);
  RowProducer rp=trans.addRowProducer(injectorStepname,0);
  trans.startThreads();
  List<RowMetaAndData> inputList=createData(fileName);
  Iterator<RowMetaAndData> it=inputList.iterator();
  while (it.hasNext()) {
    RowMetaAndData rm=it.next();
    rp.putRow(rm.getRowMeta(),rm.getData());
  }
  rp.finished();
  trans.waitUntilFinished();
  List<RowMetaAndData> resultRows=dummyRc1.getRowsWritten();
  List<RowMetaAndData> goldenImageRows=createResultData1();
  checkRows(goldenImageRows,resultRows,5);
}
