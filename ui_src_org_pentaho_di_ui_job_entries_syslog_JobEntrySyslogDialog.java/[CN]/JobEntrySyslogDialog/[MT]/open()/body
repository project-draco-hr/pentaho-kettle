{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobEntrySyslog.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wName=new LabelText(shell,BaseMessages.getString(PKG,"JobEntrySyslog.Name.Label"),BaseMessages.getString(PKG,"JobEntrySyslog.Name.Tooltip"));
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.top=new FormAttachment(0,0);
  fdName.left=new FormAttachment(0,0);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"JobEntrySyslog.Tab.General.Label"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wServerSettings=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wServerSettings);
  wServerSettings.setText(BaseMessages.getString(PKG,"JobEntrySyslog.ServerSettings.Group.Label"));
  FormLayout ServerSettingsgroupLayout=new FormLayout();
  ServerSettingsgroupLayout.marginWidth=10;
  ServerSettingsgroupLayout.marginHeight=10;
  wServerSettings.setLayout(ServerSettingsgroupLayout);
  wServerName=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobEntrySyslog.Server.Label"),BaseMessages.getString(PKG,"JobEntrySyslog.Server.Tooltip"));
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(0,0);
  fdServerName.top=new FormAttachment(wName,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wPort=new LabelTextVar(jobMeta,wServerSettings,BaseMessages.getString(PKG,"JobEntrySyslog.Port.Label"),BaseMessages.getString(PKG,"JobEntrySyslog.Port.Tooltip"));
  props.setLook(wPort);
  wPort.addModifyListener(lsMod);
  fdPort=new FormData();
  fdPort.left=new FormAttachment(0,0);
  fdPort.top=new FormAttachment(wServerName,margin);
  fdPort.right=new FormAttachment(100,0);
  wPort.setLayoutData(fdPort);
  wTest=new Button(wServerSettings,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"JobEntrySyslog.TestConnection.Label"));
  props.setLook(wTest);
  fdTest=new FormData();
  wTest.setToolTipText(BaseMessages.getString(PKG,"JobEntrySyslog.TestConnection.Tooltip"));
  fdTest.top=new FormAttachment(wPort,2 * margin);
  fdTest.right=new FormAttachment(100,0);
  wTest.setLayoutData(fdTest);
  fdServerSettings=new FormData();
  fdServerSettings.left=new FormAttachment(0,margin);
  fdServerSettings.top=new FormAttachment(wName,margin);
  fdServerSettings.right=new FormAttachment(100,-margin);
  wServerSettings.setLayoutData(fdServerSettings);
  wLogSettings=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wLogSettings);
  wLogSettings.setText(BaseMessages.getString(PKG,"JobEntrySyslog.LogSettings.Group.Label"));
  FormLayout LogSettingsgroupLayout=new FormLayout();
  LogSettingsgroupLayout.marginWidth=10;
  LogSettingsgroupLayout.marginHeight=10;
  wLogSettings.setLayout(LogSettingsgroupLayout);
  wlFacility=new Label(wLogSettings,SWT.RIGHT);
  wlFacility.setText(BaseMessages.getString(PKG,"JobEntrySyslog.Facility.Label"));
  props.setLook(wlFacility);
  fdlFacility=new FormData();
  fdlFacility.left=new FormAttachment(0,margin);
  fdlFacility.right=new FormAttachment(middle,-margin);
  fdlFacility.top=new FormAttachment(wServerSettings,margin);
  wlFacility.setLayoutData(fdlFacility);
  wFacility=new CCombo(wLogSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wFacility.setItems(SyslogDefs.FACILITYS);
  props.setLook(wFacility);
  fdFacility=new FormData();
  fdFacility.left=new FormAttachment(middle,margin);
  fdFacility.top=new FormAttachment(wServerSettings,margin);
  fdFacility.right=new FormAttachment(100,0);
  wFacility.setLayoutData(fdFacility);
  wFacility.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlPriority=new Label(wLogSettings,SWT.RIGHT);
  wlPriority.setText(BaseMessages.getString(PKG,"JobEntrySyslog.Priority.Label"));
  props.setLook(wlPriority);
  fdlPriority=new FormData();
  fdlPriority.left=new FormAttachment(0,margin);
  fdlPriority.right=new FormAttachment(middle,-margin);
  fdlPriority.top=new FormAttachment(wFacility,margin);
  wlPriority.setLayoutData(fdlPriority);
  wPriority=new CCombo(wLogSettings,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wPriority.setItems(SyslogDefs.PRIORITYS);
  props.setLook(wPriority);
  fdPriority=new FormData();
  fdPriority.left=new FormAttachment(middle,margin);
  fdPriority.top=new FormAttachment(wFacility,margin);
  fdPriority.right=new FormAttachment(100,0);
  wPriority.setLayoutData(fdPriority);
  wPriority.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  fdLogSettings=new FormData();
  fdLogSettings.left=new FormAttachment(0,margin);
  fdLogSettings.top=new FormAttachment(wServerSettings,margin);
  fdLogSettings.right=new FormAttachment(100,-margin);
  wLogSettings.setLayoutData(fdLogSettings);
  wMessageGroup=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wMessageGroup);
  wMessageGroup.setText(BaseMessages.getString(PKG,"JobEntrySyslog.MessageGroup.Group.Label"));
  FormLayout MessageGroupgroupLayout=new FormLayout();
  MessageGroupgroupLayout.marginWidth=10;
  MessageGroupgroupLayout.marginHeight=10;
  wMessageGroup.setLayout(MessageGroupgroupLayout);
  wlAddHostName=new Label(wMessageGroup,SWT.RIGHT);
  wlAddHostName.setText(BaseMessages.getString(PKG,"JobEntrySyslog.AddHostName.Label"));
  props.setLook(wlAddHostName);
  fdlAddHostName=new FormData();
  fdlAddHostName.left=new FormAttachment(0,0);
  fdlAddHostName.top=new FormAttachment(wLogSettings,margin);
  fdlAddHostName.right=new FormAttachment(middle,-margin);
  wlAddHostName.setLayoutData(fdlAddHostName);
  wAddHostName=new Button(wMessageGroup,SWT.CHECK);
  props.setLook(wAddHostName);
  wAddHostName.setToolTipText(BaseMessages.getString(PKG,"JobEntrySyslog.AddHostName.Tooltip"));
  fdAddHostName=new FormData();
  fdAddHostName.left=new FormAttachment(middle,margin);
  fdAddHostName.top=new FormAttachment(wLogSettings,margin);
  fdAddHostName.right=new FormAttachment(100,0);
  wAddHostName.setLayoutData(fdAddHostName);
  wAddHostName.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlAddTimestamp=new Label(wMessageGroup,SWT.RIGHT);
  wlAddTimestamp.setText(BaseMessages.getString(PKG,"JobEntrySyslog.AddTimestamp.Label"));
  props.setLook(wlAddTimestamp);
  fdlAddTimestamp=new FormData();
  fdlAddTimestamp.left=new FormAttachment(0,0);
  fdlAddTimestamp.top=new FormAttachment(wAddHostName,margin);
  fdlAddTimestamp.right=new FormAttachment(middle,-margin);
  wlAddTimestamp.setLayoutData(fdlAddTimestamp);
  wAddTimestamp=new Button(wMessageGroup,SWT.CHECK);
  props.setLook(wAddTimestamp);
  wAddTimestamp.setToolTipText(BaseMessages.getString(PKG,"JobEntrySyslog.AddTimestamp.Tooltip"));
  fdAddTimestamp=new FormData();
  fdAddTimestamp.left=new FormAttachment(middle,margin);
  fdAddTimestamp.top=new FormAttachment(wAddHostName,margin);
  fdAddTimestamp.right=new FormAttachment(100,0);
  wAddTimestamp.setLayoutData(fdAddTimestamp);
  wAddTimestamp.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeAddTimestamp();
      jobEntry.setChanged();
    }
  }
);
  wlDatePattern=new Label(wMessageGroup,SWT.RIGHT);
  wlDatePattern.setText(BaseMessages.getString(PKG,"JobEntrySyslog.DatePattern.Label"));
  props.setLook(wlDatePattern);
  fdlDatePattern=new FormData();
  fdlDatePattern.left=new FormAttachment(0,margin);
  fdlDatePattern.right=new FormAttachment(middle,-margin);
  fdlDatePattern.top=new FormAttachment(wAddTimestamp,margin);
  wlDatePattern.setLayoutData(fdlDatePattern);
  wDatePattern=new ComboVar(jobMeta,wMessageGroup,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wDatePattern.setItems(Const.getDateFormats());
  props.setLook(wDatePattern);
  fdDatePattern=new FormData();
  fdDatePattern.left=new FormAttachment(middle,margin);
  fdDatePattern.top=new FormAttachment(wAddTimestamp,margin);
  fdDatePattern.right=new FormAttachment(100,0);
  wDatePattern.setLayoutData(fdDatePattern);
  wDatePattern.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlMessage=new Label(wMessageGroup,SWT.RIGHT);
  wlMessage.setText(BaseMessages.getString(PKG,"JobEntrySyslog.Message.Label"));
  props.setLook(wlMessage);
  fdlMessage=new FormData();
  fdlMessage.left=new FormAttachment(0,margin);
  fdlMessage.top=new FormAttachment(wLogSettings,margin);
  fdlMessage.right=new FormAttachment(middle,-margin);
  wlMessage.setLayoutData(fdlMessage);
  wMessage=new StyledTextComp(jobEntry,wMessageGroup,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  props.setLook(wMessage);
  wMessage.addModifyListener(lsMod);
  fdMessage=new FormData();
  fdMessage.left=new FormAttachment(middle,margin);
  fdMessage.top=new FormAttachment(wDatePattern,margin);
  fdMessage.right=new FormAttachment(100,-2 * margin);
  fdMessage.bottom=new FormAttachment(100,-margin);
  wMessage.setLayoutData(fdMessage);
  fdMessageGroup=new FormData();
  fdMessageGroup.left=new FormAttachment(0,margin);
  fdMessageGroup.top=new FormAttachment(wLogSettings,margin);
  fdMessageGroup.right=new FormAttachment(100,-margin);
  fdMessageGroup.bottom=new FormAttachment(100,-margin);
  wMessageGroup.setLayoutData(fdMessageGroup);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wName,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsTest=new Listener(){
    public void handleEvent(    Event e){
      test();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  wTest.addListener(SWT.Selection,lsTest);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wServerName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  activeAddTimestamp();
  wTabFolder.setSelection(0);
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobEntrySyslogDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
