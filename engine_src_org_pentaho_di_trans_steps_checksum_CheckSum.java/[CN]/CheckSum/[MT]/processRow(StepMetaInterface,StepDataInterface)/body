{
  meta=(CheckSumMeta)smi;
  data=(CheckSumData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    data.nrInfields=data.outputRowMeta.size();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    if (meta.getFieldName() == null || meta.getFieldName().length > 0) {
      data.fieldnrs=new int[meta.getFieldName().length];
      for (int i=0; i < meta.getFieldName().length; i++) {
        data.fieldnrs[i]=getInputRowMeta().indexOfValue(meta.getFieldName()[i]);
        if (data.fieldnrs[i] < 0) {
          logError(BaseMessages.getString(PKG,"CheckSum.Log.CanNotFindField",meta.getFieldName()[i]));
          throw new KettleException(BaseMessages.getString(PKG,"CheckSum.Log.CanNotFindField",meta.getFieldName()[i]));
        }
      }
    }
 else {
      data.fieldnrs=new int[r.length];
      for (int i=0; i < r.length; i++) {
        data.fieldnrs[i]=i;
      }
    }
    data.fieldnr=data.fieldnrs.length;
    try {
      if (meta.getCheckSumType().equals(CheckSumMeta.TYPE_MD5) || meta.getCheckSumType().equals(CheckSumMeta.TYPE_SHA1)) {
        data.digest=MessageDigest.getInstance(meta.getCheckSumType());
      }
    }
 catch (    Exception e) {
      throw new KettleException(BaseMessages.getString(PKG,"CheckSum.Error.Digest"),e);
    }
  }
  Object[] outputRowData=null;
  try {
    if (meta.getCheckSumType().equals(CheckSumMeta.TYPE_ADLER32) || meta.getCheckSumType().equals(CheckSumMeta.TYPE_CRC32)) {
      Long checksum=calculCheckSum(r);
      outputRowData=RowDataUtil.addValueData(r,data.nrInfields,checksum);
    }
 else {
      byte[] o=createCheckSum(r);
switch (meta.getResultType()) {
case CheckSumMeta.result_TYPE_BINARY:
        outputRowData=RowDataUtil.addValueData(r,data.nrInfields,o);
      break;
case CheckSumMeta.result_TYPE_HEXADECIMAL:
    String hex=meta.isCompatibilityMode() ? byteToHexEncode_compatible(o) : new String(Hex.encodeHex(o));
  outputRowData=RowDataUtil.addValueData(r,data.nrInfields,hex);
break;
default :
outputRowData=RowDataUtil.addValueData(r,data.nrInfields,getStringFromBytes(o));
break;
}
}
if (checkFeedback(getLinesRead())) {
if (log.isDetailed()) logDetailed(BaseMessages.getString(PKG,"CheckSum.Log.LineNumber","" + getLinesRead()));
}
putRow(data.outputRowMeta,outputRowData);
}
 catch (Exception e) {
boolean sendToErrorRow=false;
String errorMessage=null;
if (getStepMeta().isDoingErrorHandling()) {
sendToErrorRow=true;
errorMessage=e.toString();
}
 else {
logError(BaseMessages.getString(PKG,"CheckSum.ErrorInStepRunning") + e.getMessage());
setErrors(1);
stopAll();
setOutputDone();
return false;
}
if (sendToErrorRow) {
putError(getInputRowMeta(),r,1,errorMessage,meta.getResultFieldName(),"CheckSum001");
}
}
return true;
}
