{
  init(rowMeta);
  if (partitionColumnIndex < 0) {
    partitionColumnIndex=rowMeta.indexOfValue(fieldName);
    if (partitionColumnIndex < 0) {
      throw new KettleStepException("Unable to find partitioning field name [" + fieldName + "] in the output row..."+ rowMeta);
    }
  }
  long value;
  ValueMetaInterface valueMeta=rowMeta.getValueMeta(partitionColumnIndex);
  Object valueData=row[partitionColumnIndex];
switch (valueMeta.getType()) {
case ValueMetaInterface.TYPE_INTEGER:
    Long longValue=rowMeta.getInteger(row,partitionColumnIndex);
  if (longValue == null) {
    value=valueMeta.hashCode(valueData);
  }
 else {
    value=longValue.longValue();
  }
break;
default :
value=valueMeta.hashCode(valueData);
}
int targetLocation=(int)(Math.abs(value) % nrPartitions);
return targetLocation;
}
