{
  meta=(StringCutMeta)smi;
  data=(StringCutData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    data.inputFieldsNr=data.outputRowMeta.size();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    data.inStreamNrs=new int[meta.getFieldInStream().length];
    for (int i=0; i < meta.getFieldInStream().length; i++) {
      data.inStreamNrs[i]=getInputRowMeta().indexOfValue(meta.getFieldInStream()[i]);
      if (data.inStreamNrs[i] < 0)       throw new KettleStepException(Messages.getString("StringCut.Exception.FieldRequired",meta.getFieldInStream()[i]));
      if (getInputRowMeta().getValueMeta(data.inStreamNrs[i]).getType() != ValueMeta.TYPE_STRING)       throw new KettleStepException(Messages.getString("StringCut.Exception.FieldTypeNotString",meta.getFieldInStream()[i]));
    }
    data.outStreamNrs=new String[meta.getFieldInStream().length];
    for (int i=0; i < meta.getFieldInStream().length; i++) {
      data.outStreamNrs[i]=environmentSubstitute(meta.getFieldOutStream()[i]);
    }
    data.cutFrom=new int[meta.getFieldInStream().length];
    data.cutTo=new int[meta.getFieldInStream().length];
    for (int i=0; i < meta.getFieldInStream().length; i++) {
      if (Const.isEmpty(meta.getCutFrom()[i]))       data.cutFrom[i]=0;
 else       data.cutFrom[i]=Const.toInt(meta.getCutFrom()[i],0);
      if (Const.isEmpty(meta.getCutTo()[i]))       data.cutTo[i]=0;
 else       data.cutTo[i]=Const.toInt(meta.getCutTo()[i],0);
    }
  }
  try {
    Object[] output=getOneRow(getInputRowMeta(),r);
    putRow(data.outputRowMeta,output);
    if (checkFeedback(getLinesRead())) {
      if (log.isDetailed())       logDetailed(Messages.getString("StringCut.Log.LineNumber") + getLinesRead());
    }
  }
 catch (  KettleException e) {
    boolean sendToErrorRow=false;
    String errorMessage=null;
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(Messages.getString("StringCut.Log.ErrorInStep",e.getMessage()));
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,null,"StringCut001");
    }
  }
  return true;
}
