{
  debug="processRow";
  Row r=getRow();
  if (r == null) {
    if (data.processed > 0) {
      data.previousRow.removeValue(data.fieldNr);
      data.previousRow.addRow(data.targetResult);
      putRow(data.previousRow);
    }
    setOutputDone();
    return false;
  }
  if (first) {
    data.fieldNr=r.searchValueIndex(meta.getFieldName());
    if (data.fieldNr < 0) {
      logError(Messages.getString("Flattener.Log.FieldCouldNotFound",meta.getFieldName()));
      setErrors(1);
      stopAll();
      return false;
    }
    data.targetRow=new Row();
    Value flattenValue=r.getValue(data.fieldNr);
    for (int i=0; i < meta.getTargetField().length; i++) {
      Value v=new Value(meta.getTargetField()[i],flattenValue.getType());
      v.setLength(flattenValue.getLength());
      v.setPrecision(flattenValue.getPrecision());
      v.setNull();
      data.targetRow.addValue(v);
    }
    data.targetResult=new Row(data.targetRow);
    first=false;
  }
  Value flat=r.getValue(data.fieldNr);
  data.targetResult.getValue(data.processed).setValue(flat);
  data.processed++;
  if (data.processed >= meta.getTargetField().length) {
    r.removeValue(data.fieldNr);
    r.addRow(data.targetResult);
    putRow(r);
    data.targetResult=new Row(data.targetRow);
    data.processed=0;
  }
  data.previousRow=r;
  if ((linesRead > 0) && (linesRead % Const.ROWS_UPDATE) == 0)   logBasic(Messages.getString("Flattener.Log.LineNumber") + linesRead);
  return true;
}
