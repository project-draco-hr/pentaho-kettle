{
  List<UIRepositoryDirectory> previousVal=null;
  UIRepositoryObjects previousRepoObjects=null;
  try {
    if (repositoryDirectories != null && repositoryDirectories.size() > 0) {
      previousVal=new ArrayList<UIRepositoryDirectory>();
      previousVal.addAll(repositoryDirectories);
      previousRepoObjects=getSelectedRepoDirChildren();
    }
    if (this.repositoryDirectories != null && this.repositoryDirectories.size() > 0) {
      this.repositoryDirectories.get(0).getRepositoryObjects().removePropertyChangeListener(fileChildrenListener);
    }
    this.repositoryDirectories=selectedFolderItems;
    if (this.repositoryDirectories != null && this.repositoryDirectories.size() > 0) {
      this.repositoryDirectories.get(0).getRepositoryObjects().addPropertyChangeListener("children",fileChildrenListener);
    }
  }
 catch (  KettleException e) {
    if (mainController == null || !mainController.handleLostRepository(e)) {
      throw new RuntimeException(e);
    }
  }
  fireFoldersAndItemsChange(previousVal,previousRepoObjects);
}
