{
  try {
    for (    Object object : fileTable.getSelectedItems()) {
      if (object instanceof UIRepositoryObject) {
        final UIRepositoryObject repoObject=(UIRepositoryObject)object;
        if (repoObject != null) {
          Callable<Void> deleteCallable=new Callable<Void>(){
            @Override public Void call() throws Exception {
              deleteContent(repoObject);
              return null;
            }
          }
;
          if (repoObject instanceof UIRepositoryDirectory && (((UIRepositoryDirectory)repoObject).getChildren().size() > 0 || ((UIRepositoryDirectory)repoObject).getRepositoryObjects().size() > 0)) {
            confirm("BrowseController.DeleteNonEmptyFolderWarningTitle","BrowseController.DeleteNonEmptyFolderWarningMessage",deleteCallable);
          }
 else {
            confirm("BrowseController.DeleteFileWarningTitle","BrowseController.DeleteFileWarningMessage",deleteCallable);
          }
        }
      }
    }
  }
 catch (  KettleException ke) {
    messageBox.setTitle(BaseMessages.getString(PKG,"Dialog.Error"));
    messageBox.setAcceptLabel(BaseMessages.getString(PKG,"Dialog.Ok"));
    messageBox.setMessage(BaseMessages.getString(PKG,ke.getLocalizedMessage()));
    messageBox.open();
  }
}
