{
  VariableSpace variableSpace=mock(VariableSpace.class);
  ResourceNamingInterface resourceNamingInterface=mock(ResourceNamingInterface.class);
  Repository repository=mock(Repository.class);
  IMetaStore metaStore=mock(IMetaStore.class);
  MetaInjectMeta injectMetaSpy=spy(metaInjectMeta);
  TransMeta transMeta=mock(TransMeta.class);
  Map<String,ResourceDefinition> definitions=Collections.<String,ResourceDefinition>emptyMap();
  doReturn(TEST_FILE_NAME).when(transMeta).exportResources(transMeta,definitions,resourceNamingInterface,repository,metaStore);
  doReturn(transMeta).when(injectMetaSpy).loadTransformationMeta(repository,variableSpace);
  String actualExportedFileName=injectMetaSpy.exportResources(variableSpace,definitions,resourceNamingInterface,repository,metaStore);
  assertEquals(TEST_FILE_NAME,actualExportedFileName);
  assertEquals(EXPORTED_FILE_NAME,injectMetaSpy.getFileName());
  verify(transMeta).exportResources(transMeta,definitions,resourceNamingInterface,repository,metaStore);
}
