{
  String slaveServerName="";
  try {
    Collection<UISlave> slaves=slavesTable.getSelectedItems();
    if (slaves != null && !slaves.isEmpty()) {
      for (      Object obj : slaves) {
        if (obj != null && obj instanceof UISlave) {
          UISlave slave=(UISlave)obj;
          SlaveServer slaveServer=slave.getSlaveServer();
          slaveServerName=slaveServer.getName();
          ObjectId slaveId=repository.getSlaveID(slaveServer.getName());
          if (slaveId == null) {
            MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
            mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.DoesNotExists.Message",slaveServerName));
            mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.Title"));
            mb.open();
          }
 else {
            repository.deleteSlave(slaveId);
          }
        }
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.ICON_ERROR | SWT.OK);
      mb.setMessage(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.NoItemSelected.Message"));
      mb.setText(BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    if (mainController == null || !mainController.handleLostRepository(e)) {
      new ErrorDialog(shell,BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.Title"),BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.Delete.UnexpectedError.Message") + slaveServerName + "]",e);
    }
  }
 finally {
    refreshSlaves();
  }
}
