{
  meta=(UniqueRowsMeta)smi;
  data=(UniqueRowsData)sdi;
  Object[] r=getRow();
  if (r == null) {
    if (data.previous != null) {
      Object[] outputRow=addCounter(getInputRowMeta(),data.previous,data.counter);
      putRow(data.outputRowMeta,outputRow);
    }
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=(RowMetaInterface)getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null);
    data.previous=getInputRowMeta().cloneRow(r);
    data.fieldnrs=new int[meta.getCompareFields().length];
    data.ascending=new boolean[meta.getCompareFields().length];
    data.caseInsensitive=new boolean[meta.getCaseInsensitive().length];
    for (int i=0; i < meta.getCompareFields().length; i++) {
      data.ascending[i]=false;
      data.fieldnrs[i]=getInputRowMeta().indexOfValue(meta.getCompareFields()[i]);
      data.caseInsensitive[i]=meta.getCaseInsensitive()[i];
      if (data.fieldnrs[i] < 0) {
        logError(Messages.getString("UniqueRows.Log.CouldNotFindFieldInRow",meta.getCompareFields()[i]));
        setErrors(1);
        stopAll();
        return false;
      }
    }
  }
  boolean isEqual=false;
  if (meta.getCompareFields() == null || meta.getCompareFields().length == 0) {
    isEqual=getInputRowMeta().compare(r,data.previous) == 0;
  }
 else {
    isEqual=getInputRowMeta().compare(r,data.previous,data.fieldnrs) == 0;
  }
  if (!isEqual) {
    Object[] outputRow=addCounter(getInputRowMeta(),data.previous,data.counter);
    putRow(data.outputRowMeta,outputRow);
    data.previous=getInputRowMeta().cloneRow(r);
    data.counter=1;
  }
 else {
    data.counter++;
  }
  if (checkFeedback(linesRead))   logBasic(Messages.getString("UniqueRows.Log.LineNumber") + linesRead);
  return true;
}
