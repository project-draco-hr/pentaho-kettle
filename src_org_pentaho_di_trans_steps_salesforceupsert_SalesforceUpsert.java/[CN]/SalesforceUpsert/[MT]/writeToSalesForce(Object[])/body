{
  try {
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"SalesforceUpsert.CalledWrite",data.iBufferPos,meta.getBatchSizeInt()));
    if (data.iBufferPos < meta.getBatchSizeInt()) {
      ArrayList<String> fieldsToNull=new ArrayList<String>();
      ArrayList<MessageElement> upsertfields=new ArrayList<MessageElement>();
      for (int i=0; i < data.nrfields; i++) {
        if (data.inputRowMeta.isNull(rowData,data.fieldnrs[i])) {
          fieldsToNull.add(meta.getUpdateLookup()[i]);
        }
 else {
          upsertfields.add(newMessageElement(meta.getUpdateLookup()[i],rowData[data.fieldnrs[i]]));
        }
      }
      SObject sobjPass=new SObject();
      sobjPass.setType(data.realModule);
      if (upsertfields.size() > 0) {
        sobjPass.set_any((MessageElement[])upsertfields.toArray(new MessageElement[upsertfields.size()]));
      }
      if (fieldsToNull.size() > 0) {
        sobjPass.setFieldsToNull((String[])fieldsToNull.toArray(new String[fieldsToNull.size()]));
      }
      data.sfBuffer[data.iBufferPos]=sobjPass;
      data.outputBuffer[data.iBufferPos]=rowData;
      data.iBufferPos++;
    }
    if (data.iBufferPos >= meta.getBatchSizeInt()) {
      if (log.isDetailed())       logDetailed("Calling flush buffer from writeToSalesForce");
      flushBuffers();
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceUpsert.FailedInWrite",e.toString()));
  }
}
