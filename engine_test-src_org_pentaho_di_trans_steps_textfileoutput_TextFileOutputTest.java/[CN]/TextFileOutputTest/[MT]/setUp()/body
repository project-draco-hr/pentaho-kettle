{
  stepMockHelper=new StepMockHelper<TextFileOutputMeta,TextFileOutputData>("TEXT FILE OUTPUT TEST",TextFileOutputMeta.class,TextFileOutputData.class);
  when(stepMockHelper.logChannelInterfaceFactory.create(any(),any(LoggingObjectInterface.class))).thenReturn(stepMockHelper.logChannelInterface);
  verify(stepMockHelper.logChannelInterface,never()).logError(anyString());
  verify(stepMockHelper.logChannelInterface,never()).logError(anyString(),anyObject());
  verify(stepMockHelper.logChannelInterface,never()).logError(anyString(),(Throwable)anyObject());
  when(stepMockHelper.trans.isRunning()).thenReturn(true);
  verify(stepMockHelper.trans,never()).stopAll();
  stepMockHelper.stepDataInterface.previouslyOpenedFiles=new ArrayList<String>();
  when(stepMockHelper.processRowsStepMetaInterface.getSeparator()).thenReturn(" ");
  when(stepMockHelper.processRowsStepMetaInterface.getEnclosure()).thenReturn("\"");
  when(stepMockHelper.processRowsStepMetaInterface.getNewline()).thenReturn("\n");
  when(stepMockHelper.transMeta.listVariables()).thenReturn(new String[0]);
}
