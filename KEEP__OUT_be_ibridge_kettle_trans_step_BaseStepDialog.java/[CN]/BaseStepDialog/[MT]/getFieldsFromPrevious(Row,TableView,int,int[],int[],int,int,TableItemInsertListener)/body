{
  if (row == null || row.size() == 0)   return;
  Table table=tableView.table;
  List keys=new ArrayList();
  for (int i=0; i < table.getItemCount(); i++) {
    TableItem tableItem=table.getItem(i);
    String key=tableItem.getText(keyColumn);
    if (!Const.isEmpty(key) && keys.indexOf(key) < 0)     keys.add(key);
  }
  int choice=0;
  if (keys.size() > 0) {
    MessageDialog md=new MessageDialog(tableView.getShell(),Messages.getString("BaseStepDialog.GetFieldsChoice.Title"),null,Messages.getString("BaseStepDialog.GetFieldsChoice.Message","" + keys.size(),"" + row.size()),MessageDialog.WARNING,new String[]{Messages.getString("BaseStepDialog.AddNew"),Messages.getString("BaseStepDialog.Add"),Messages.getString("BaseStepDialog.ClearAndAdd"),Messages.getString("BaseStepDialog.Cancel")},0);
    int idx=md.open();
    choice=idx & 0xFF;
  }
  if (choice == 3 || choice == 255)   return;
  if (choice == 2) {
    tableView.clearAll(false);
  }
  for (int i=0; i < row.size(); i++) {
    Value v=row.getValue(i);
    boolean add=true;
    if (choice == 0) {
      if (keys.indexOf(v.getName()) >= 0)       add=false;
    }
    if (add) {
      TableItem tableItem=new TableItem(table,SWT.NONE);
      for (int c=0; c < nameColumn.length; c++) {
        tableItem.setText(nameColumn[c],Const.NVL(v.getName(),""));
      }
      for (int c=0; c < dataTypeColumn.length; c++) {
        tableItem.setText(dataTypeColumn[c],v.getTypeDesc());
      }
      if (lengthColumn > 0) {
        if (v.getLength() >= 0)         tableItem.setText(lengthColumn,Integer.toString(v.getLength()));
      }
      if (precisionColumn > 0) {
        if (v.getPrecision() >= 0)         tableItem.setText(precisionColumn,Integer.toString(v.getPrecision()));
      }
      if (listener != null) {
        if (!listener.tableItemInserted(tableItem,v)) {
          tableItem.dispose();
        }
      }
    }
  }
  tableView.removeEmptyRows();
  tableView.setRowNums();
  tableView.optWidth(true);
}
