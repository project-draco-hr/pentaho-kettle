{
  ResolverUtil<RepositoryPluginMeta> resolver=new ResolverUtil<RepositoryPluginMeta>();
  String allPackages=packages;
  String extraPackages=System.getProperty(Const.KETTLE_PLUGIN_PACKAGES);
  if (!Const.isEmpty(extraPackages)) {
    allPackages+="," + extraPackages;
  }
  resolver.find(new ResolverUtil.AnnotatedWith(RepositoryPlugin.class),allPackages != null ? allPackages.split(",") : new String[]{});
  Collection<RepositoryPluginMeta> steps=new LinkedHashSet<RepositoryPluginMeta>(resolver.size());
  for (  Class<?> clazz : resolver.getClasses()) {
    RepositoryPlugin repositoryPlugin=clazz.getAnnotation(RepositoryPlugin.class);
    String id=repositoryPlugin.id();
    String packageName=repositoryPlugin.i18nPackageName();
    if (Const.isEmpty(packageName))     packageName=StepInterface.class.getPackage().getName();
    String metaClassName=repositoryPlugin.metaClass();
    String dialogClassName=repositoryPlugin.dialogClass();
    String versionBrowserClassName=repositoryPlugin.versionBrowserClass();
    String name=BaseMessages.getString(packageName,repositoryPlugin.name());
    if (name.startsWith("!") && name.endsWith("!")) {
      name=BaseMessages.getString(PKG,repositoryPlugin.name());
    }
    String description=BaseMessages.getString(packageName,repositoryPlugin.description());
    if (description.startsWith("!") && description.endsWith("!")) {
      description=BaseMessages.getString(PKG,repositoryPlugin.description());
    }
    steps.add(new RepositoryPluginMeta(id,name,description,clazz.getName(),metaClassName,dialogClassName,versionBrowserClassName,null,null,null));
  }
  return (Collection<T>)steps;
}
