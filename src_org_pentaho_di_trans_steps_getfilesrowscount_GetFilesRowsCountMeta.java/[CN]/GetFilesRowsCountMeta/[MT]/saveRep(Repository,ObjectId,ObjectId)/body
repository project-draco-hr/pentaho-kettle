{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"files_count",includeFilesCount);
    rep.saveStepAttribute(id_transformation,id_step,"files_count_fieldname",filesCountFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"rows_count_fieldname",rowsCountFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"rowseparator_format",RowSeparator_format);
    rep.saveStepAttribute(id_transformation,id_step,"row_separator",RowSeparator);
    rep.saveStepAttribute(id_transformation,id_step,"isaddresult",isaddresult);
    rep.saveStepAttribute(id_transformation,id_step,"filefield",filefield);
    rep.saveStepAttribute(id_transformation,id_step,"filename_Field",outputFilenameField);
    for (int i=0; i < fileName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"file_name",fileName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_mask",fileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"exclude_file_mask",excludeFileMask[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"file_required",fileRequired[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"include_subfolders",includeSubFolders[i]);
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"GetFilesRowsCountMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
