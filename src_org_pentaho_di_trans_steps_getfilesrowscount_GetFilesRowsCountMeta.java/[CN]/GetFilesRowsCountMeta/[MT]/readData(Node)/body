{
  try {
    includeFilesCount="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"files_count"));
    filesCountFieldName=XMLHandler.getTagValue(stepnode,"files_count_fieldname");
    rowsCountFieldName=XMLHandler.getTagValue(stepnode,"rows_count_fieldname");
    RowSeparator_format=scrubOldRowSeparator(XMLHandler.getTagValue(stepnode,"rowseparator_format"));
    RowSeparator=XMLHandler.getTagValue(stepnode,"row_separator");
    smartCount="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"smartCount"));
    String addresult=XMLHandler.getTagValue(stepnode,"addresult");
    if (Const.isEmpty(addresult))     isaddresult=true;
 else     isaddresult="Y".equalsIgnoreCase(addresult);
    filefield="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"filefield"));
    outputFilenameField=XMLHandler.getTagValue(stepnode,"filename_Field");
    Node filenode=XMLHandler.getSubNode(stepnode,"file");
    int nrFiles=XMLHandler.countNodes(filenode,"name");
    allocate(nrFiles);
    for (int i=0; i < nrFiles; i++) {
      Node filenamenode=XMLHandler.getSubNodeByNr(filenode,"name",i);
      Node filemasknode=XMLHandler.getSubNodeByNr(filenode,"filemask",i);
      Node excludefilemasknode=XMLHandler.getSubNodeByNr(filenode,"exclude_filemask",i);
      Node fileRequirednode=XMLHandler.getSubNodeByNr(filenode,"file_required",i);
      Node includeSubFoldersnode=XMLHandler.getSubNodeByNr(filenode,"include_subfolders",i);
      fileName[i]=XMLHandler.getNodeValue(filenamenode);
      fileMask[i]=XMLHandler.getNodeValue(filemasknode);
      excludeFileMask[i]=XMLHandler.getNodeValue(excludefilemasknode);
      fileRequired[i]=XMLHandler.getNodeValue(fileRequirednode);
      includeSubFolders[i]=XMLHandler.getNodeValue(includeSubFoldersnode);
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
