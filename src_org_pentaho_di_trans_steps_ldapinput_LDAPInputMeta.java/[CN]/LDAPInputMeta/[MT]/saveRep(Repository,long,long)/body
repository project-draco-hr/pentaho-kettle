{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"useauthentication",useAuthentication);
    rep.saveStepAttribute(id_transformation,id_step,"rownum",includeRowNumber);
    rep.saveStepAttribute(id_transformation,id_step,"rownum_field",rowNumberField);
    rep.saveStepAttribute(id_transformation,id_step,"host",Host);
    rep.saveStepAttribute(id_transformation,id_step,"username",userName);
    rep.saveStepAttribute(id_transformation,id_step,"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveStepAttribute(id_transformation,id_step,"port",port);
    rep.saveStepAttribute(id_transformation,id_step,"filterstring",filterString);
    rep.saveStepAttribute(id_transformation,id_step,"searchbase",searchBase);
    rep.saveStepAttribute(id_transformation,id_step,"limit",rowLimit);
    rep.saveStepAttribute(id_transformation,id_step,"timelimit",timeLimit);
    rep.saveStepAttribute(id_transformation,id_step,"multivaluedseparator",multiValuedSeparator);
    for (int i=0; i < inputFields.length; i++) {
      LDAPInputField field=inputFields[i];
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",field.getName());
      rep.saveStepAttribute(id_transformation,id_step,i,"fied_attribute",field.getAttribute());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_type",field.getTypeDesc());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_format",field.getFormat());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_currency",field.getCurrencySymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_decimal",field.getDecimalSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_group",field.getGroupSymbol());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_length",field.getLength());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_precision",field.getPrecision());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_trim_type",field.getTrimTypeCode());
      rep.saveStepAttribute(id_transformation,id_step,i,"field_repeat",field.isRepeated());
    }
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("LDAPInputMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
