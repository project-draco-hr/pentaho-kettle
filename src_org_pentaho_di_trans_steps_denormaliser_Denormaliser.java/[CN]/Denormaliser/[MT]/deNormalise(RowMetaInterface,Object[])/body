{
  ValueMetaInterface valueMeta=rowMeta.getValueMeta(data.keyFieldNr);
  Object valueData=rowData[data.keyFieldNr];
  String key=valueMeta.getCompatibleString(valueData);
  if (!Const.isEmpty(key)) {
    List<Integer> indexes=data.keyValue.get(key);
    if (indexes != null) {
      for (int i=0; i < indexes.size(); i++) {
        Integer keyNr=indexes.get(i);
        if (keyNr != null) {
          int idx=keyNr.intValue();
          DenormaliserTargetField field=meta.getDenormaliserTargetField()[idx];
          ValueMetaInterface sourceMeta=rowMeta.getValueMeta(data.fieldNameIndex[idx]);
          Object sourceData=rowData[data.fieldNameIndex[idx]];
          ValueMetaInterface targetMeta=data.outputRowMeta.getValueMeta(data.inputRowMeta.size() - data.removeNrs.length + idx);
          Object targetData=targetMeta.convertData(sourceMeta,sourceData);
          Object prevTargetData=data.targetResult[idx];
switch (field.getTargetAggregationType()) {
case DenormaliserTargetField.TYPE_AGGR_SUM:
            if (prevTargetData != null) {
              prevTargetData=ValueDataUtil.plus(targetMeta,prevTargetData,targetMeta,targetData);
            }
 else {
              prevTargetData=targetData;
            }
          break;
case DenormaliserTargetField.TYPE_AGGR_MIN:
        if (sourceMeta.compare(sourceData,targetMeta,prevTargetData) < 0) {
          prevTargetData=targetMeta.convertData(sourceMeta,sourceData);
        }
      break;
case DenormaliserTargetField.TYPE_AGGR_MAX:
    if (sourceMeta.compare(sourceData,targetMeta,prevTargetData) > 0) {
      prevTargetData=targetMeta.convertData(sourceMeta,sourceData);
    }
  break;
case DenormaliserTargetField.TYPE_AGGR_COUNT_ALL:
if (!targetMeta.isNull(sourceData)) prevTargetData=((Integer)prevTargetData) + 1;
;
break;
case DenormaliserTargetField.TYPE_AGGR_AVERAGE:
if (!sourceMeta.isNull(sourceData)) {
data.counters[idx]++;
if (data.sum[idx] == null) {
data.sum[idx]=targetData;
}
 else {
data.sum[idx]=ValueDataUtil.plus(targetMeta,data.sum[idx],targetMeta,targetData);
}
}
break;
case DenormaliserTargetField.TYPE_AGGR_NONE:
default :
prevTargetData=targetData;
break;
}
data.targetResult[idx]=prevTargetData;
}
}
}
}
}
