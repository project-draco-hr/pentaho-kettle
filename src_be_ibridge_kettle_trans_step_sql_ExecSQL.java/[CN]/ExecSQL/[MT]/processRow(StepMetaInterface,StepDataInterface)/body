{
  meta=(ExecSQLMeta)smi;
  data=(ExecSQLData)sdi;
  debug=Messages.getString("ExecSQL.Debug.ExecuteSQLStart");
  Row row=null;
  if (!meta.isExecutedEachInputRow()) {
    debug=Messages.getString("ExecSQL.Debug.ExecuteOnce");
    row=getResultRow(data.result,meta.getUpdateField(),meta.getInsertField(),meta.getDeleteField(),meta.getReadField());
    putRow(row);
    setOutputDone();
    return false;
  }
  row=getRow();
  if (row == null) {
    setOutputDone();
    return false;
  }
  StringBuffer sql=new StringBuffer(meta.getSql());
  if (first) {
    first=false;
    debug=Messages.getString("ExecSQL.Debug.FindIndexsOfArguments");
    data.argumentIndexes=new int[meta.getArguments().length];
    for (int i=0; i < meta.getArguments().length; i++) {
      data.argumentIndexes[i]=row.searchValueIndex(meta.getArguments()[i]);
      if (data.argumentIndexes[i] < 0) {
        logError(Messages.getString("ExecSQL.Log.ErrorFindingField") + meta.getArguments()[i] + "]");
        throw new KettleStepException(Messages.getString("ExecSQL.Exception.CouldNotFindField",meta.getArguments()[i]));
      }
    }
    debug=Messages.getString("ExecSQL.Debug.FindLocationsOfQuestionMarks");
    data.markerPositions=new ArrayList();
    int len=sql.length();
    int pos=len - 1;
    while (pos >= 0) {
      if (sql.charAt(pos) == '?')       data.markerPositions.add(new Integer(pos));
      pos--;
    }
  }
  debug=Messages.getString("ExecSQL.Debug.ReplaceValuesInSQLString");
  for (int i=0; i < data.markerPositions.size(); i++) {
    Value value=row.getValue(data.argumentIndexes[data.markerPositions.size() - i - 1]);
    int pos=((Integer)data.markerPositions.get(i)).intValue();
    sql.replace(pos,pos + 1,value.getString());
  }
  debug=Messages.getString("ExecSQL.Debug.ExecuteSQL") + sql;
  if (log.isRowLevel())   logRowlevel(Messages.getString("ExecSQL.Log.ExecutingSQLScript") + Const.CR + sql);
  data.result=data.db.execStatements(sql.toString());
  debug=Messages.getString("ExecSQL.Debug.GetResult");
  Row add=getResultRow(data.result,meta.getUpdateField(),meta.getInsertField(),meta.getDeleteField(),meta.getReadField());
  row.addRow(add);
  if (!data.db.isAutoCommit())   data.db.commit();
  putRow(row);
  if ((linesWritten > 0) && (linesWritten % Const.ROWS_UPDATE) == 0)   logBasic(Messages.getString("ExecSQL.Log.LineNumber") + linesWritten);
  return true;
}
