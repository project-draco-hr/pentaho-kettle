{
  EnvUtil.environmentInit();
  Trans trans=null;
  StepLoader steploader=StepLoader.getInstance();
  if (!steploader.read()) {
    addFailure("Error loading steps... halting!" + getPath(fileName));
    log.logError("BlackBoxTest","Error loading steps... halting!" + getPath(fileName));
    return false;
  }
  JobEntryLoader jeloader=JobEntryLoader.getInstance();
  if (!jeloader.read()) {
    addFailure("Error loading job entries & plugins... halting!" + getPath(fileName));
    log.logError("BlackBoxTest","Error loading job entries & plugins... halting!" + getPath(fileName));
    return false;
  }
  TransMeta transMeta=new TransMeta();
  try {
    transMeta=new TransMeta(fileName);
    trans=new Trans(transMeta);
  }
 catch (  Exception e) {
    trans=null;
    transMeta=null;
    addFailure("Processing has stopped because of an error: " + getPath(fileName));
    log.logError("BlackBoxTest","Processing has stopped because of an error: " + getPath(fileName),e);
    return false;
  }
  if (trans == null) {
    addFailure("Can't continue because the transformation couldn't be loaded." + getPath(fileName));
    log.logError("BlackBoxTest","Can't continue because the transformation couldn't be loaded." + getPath(fileName));
    return false;
  }
  try {
    trans.initializeVariablesFrom(null);
    trans.getTransMeta().setInternalKettleVariables(trans);
    trans.setSafeModeEnabled(true);
    List<CheckResultInterface> remarks=new ArrayList<CheckResultInterface>();
    trans.getTransMeta().checkSteps(remarks,false,null);
    for (    CheckResultInterface remark : remarks) {
      if (remark.getType() == CheckResultInterface.TYPE_RESULT_ERROR) {
        addFailure("Check error: " + getPath(fileName) + ", "+ remark.getErrorCode());
        log.logError("BlackBoxTest","Check error: " + getPath(fileName) + ", "+ remark.getErrorCode());
      }
    }
    TransMeta clone=(TransMeta)trans.getTransMeta().clone();
    clone.setName(trans.getTransMeta().getName());
    clone.setModifiedDate(trans.getTransMeta().getModifiedDate());
    String xml=clone.getXML();
    String tmpFileName=fileName.substring(0,fileName.length() - 4) + "-tmp.ktr";
    File tmpFile=new File(tmpFileName);
    try {
      OutputStream stream=new FileOutputStream(tmpFile);
      stream.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n".getBytes());
      stream.write(xml.getBytes("UTF-8"));
      stream.close();
      fileCompare(new File(fileName),tmpFile,log);
      tmpFile.delete();
    }
 catch (    Exception e) {
      addFailure("Could not write to tmp file: " + getPath(tmpFileName));
      log.logError("BlackBoxTest","Could not write to tmp file: " + getPath(tmpFileName),e);
    }
    boolean ok=trans.execute(null);
    if (!ok) {
      addFailure("Unable to prepare and initialize this transformation: " + getPath(fileName));
      log.logError("BlackBoxTest","Unable to prepare and initialize this transformation: " + getPath(fileName));
      return false;
    }
    trans.waitUntilFinished();
    trans.endProcessing("end");
    return true;
  }
 catch (  KettleException ke) {
    addFailure("Unexpected error occurred: " + getPath(fileName));
    log.logError("BlackBoxTest","Unexpected error occurred: " + getPath(fileName),ke);
  }
  return false;
}
