{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"all_rows",passAllRows);
    rep.saveStepAttribute(id_transformation,id_step,"ignore_aggregate",aggregateIgnored);
    rep.saveStepAttribute(id_transformation,id_step,"field_ignore",aggregateIgnoredField);
    rep.saveStepAttribute(id_transformation,id_step,"directory",directory);
    rep.saveStepAttribute(id_transformation,id_step,"prefix",prefix);
    rep.saveStepAttribute(id_transformation,id_step,"add_linenr",addingLineNrInGroup);
    rep.saveStepAttribute(id_transformation,id_step,"linenr_fieldname",lineNrInGroupField);
    rep.saveStepAttribute(id_transformation,id_step,"give_back_row",alwaysGivingBackOneRow);
    for (int i=0; i < groupField.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"group_name",groupField[i]);
    }
    for (int i=0; i < subjectField.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"aggregate_name",aggregateField[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"aggregate_subject",subjectField[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"aggregate_type",getTypeDesc(aggregateType[i]));
      rep.saveStepAttribute(id_transformation,id_step,i,"value_field",valueField[i]);
    }
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("GroupByMeta.Exception.UnableToSaveStepInfoToRepository") + id_step,e);
  }
}
