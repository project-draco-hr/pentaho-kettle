{
  RowMetaInterface fields=new RowMeta();
  if (!passAllRows) {
    for (int i=0; i < groupField.length; i++) {
      ValueMetaInterface valueMeta=r.searchValueMeta(groupField[i]);
      if (valueMeta != null) {
        fields.addValueMeta(valueMeta);
      }
    }
  }
 else {
    fields.addRowMeta(r);
  }
  for (int i=0; i < subjectField.length; i++) {
    ValueMetaInterface subj=r.searchValueMeta(subjectField[i]);
    if (subj != null) {
      String value_name=aggregateField[i];
      int value_type=ValueMetaInterface.TYPE_NONE;
      int length=-1;
      int precision=-1;
switch (aggregateType[i]) {
case TYPE_GROUP_SUM:
        value_type=subj.getType();
      break;
case TYPE_GROUP_AVERAGE:
case TYPE_GROUP_COUNT_ALL:
    value_type=ValueMetaInterface.TYPE_INTEGER;
  break;
case TYPE_GROUP_FIRST:
case TYPE_GROUP_LAST:
case TYPE_GROUP_FIRST_INCL_NULL:
case TYPE_GROUP_LAST_INCL_NULL:
case TYPE_GROUP_MIN:
case TYPE_GROUP_MAX:
value_type=subj.getType();
break;
case TYPE_GROUP_CONCAT_COMMA:
value_type=ValueMetaInterface.TYPE_STRING;
break;
default :
break;
}
if (aggregateType[i] == TYPE_GROUP_COUNT_ALL) {
length=ValueMetaInterface.DEFAULT_INTEGER_LENGTH;
precision=0;
}
 else {
length=subj.getLength();
precision=subj.getPrecision();
}
if (value_type != ValueMetaInterface.TYPE_NONE) {
ValueMetaInterface v=new ValueMeta(value_name,value_type);
v.setOrigin(origin);
v.setLength(length,precision);
fields.addValueMeta(v);
}
}
}
if (passAllRows) {
if (addingLineNrInGroup && !Const.isEmpty(lineNrInGroupField)) {
ValueMetaInterface lineNr=new ValueMeta(lineNrInGroupField,ValueMetaInterface.TYPE_INTEGER);
lineNr.setLength(ValueMetaInterface.DEFAULT_INTEGER_LENGTH,0);
lineNr.setOrigin(origin);
fields.addValueMeta(lineNr);
}
}
r.clear();
r.addRowMeta(fields);
}
