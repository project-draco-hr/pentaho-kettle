{
  XulToolbar mainToolbar=(XulToolbar)domContainer.getDocumentRoot().getElementById("main-toolbar");
  SwtDeck deck=(SwtDeck)domContainer.getDocumentRoot().getElementById("canvas-deck");
  int y=0;
  int perspectiveIdx=0;
  Class<? extends SpoonPerspective> perClass=null;
  List<SpoonPerspective> perspectives=getPerspectives();
  if (this.startupPerspective != null) {
    for (int i=0; i < perspectives.size(); i++) {
      if (perspectives.get(i).getId().equals(this.startupPerspective)) {
        perspectiveIdx=i;
        break;
      }
    }
  }
  for (  SpoonPerspective per : getPerspectives()) {
    if (installedPerspectives.contains(per)) {
      y++;
      continue;
    }
    String name=per.getDisplayName(LanguageChoice.getInstance().getDefaultLocale());
    InputStream in=per.getPerspectiveIcon();
    SwtToolbarbutton btn=null;
    try {
      btn=(SwtToolbarbutton)domContainer.getDocumentRoot().createElement("toolbarbutton");
    }
 catch (    XulException e) {
      e.printStackTrace();
    }
    btn.setType("toggle");
    btn.setLabel(name);
    btn.setTooltiptext(name);
    btn.setOnclick("spoon.loadPerspective(" + y + ")");
    btn.setId("perspective-btn-" + per.getId());
    mainToolbar.addChild(btn);
    if (in != null) {
      btn.setImageFromStream(in);
      try {
        in.close();
      }
 catch (      IOException e1) {
      }
    }
    XulVbox box=deck.createVBoxCard();
    box.setId("perspective-" + per.getId());
    box.setFlex(1);
    deck.addChild(box);
    PerspectiveInitializer perspectiveInitializer=new PerspectiveInitializer(per,box,mainToolbar,btn);
    if (perspectiveIdx == y || y == 0) {
      if (perspectiveIdx == y) {
        btn.setSelected(true);
        perClass=per.getClass();
      }
      perspectiveInitializer.initialize();
    }
 else {
      initializerMap.put(per,perspectiveInitializer);
    }
    y++;
    installedPerspectives.add(per);
  }
  deck.setSelectedIndex(perspectiveIdx);
  if (perClass != null) {
    try {
      activatePerspective(perClass);
      SpoonPerspectiveManager.getInstance().setForcePerspective(true);
    }
 catch (    KettleException e) {
    }
  }
}
