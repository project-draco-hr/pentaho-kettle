{
  this.logBasic("Getting Dimension Row Meta.");
  final RowMetaInterface rowMeta=data.helper.getDimensionRowMeta(meta.getDimension(),meta.getLevels(),meta.getBaseElementsOnly());
  this.logBasic("Getting Dimension Rows.");
  listener=new ListenerWithException(){
    public void resume(){
    }
    public void stop(){
    }
    public void cancel(){
    }
    public boolean getStop(){
      return false;
    }
    public void prepareElements(    int numElements){
    }
    public boolean getCancel(){
      return false;
    }
    public void oneMoreElement(    Object element){
      final Object[] row=(Object[])element;
      try {
        assert(rowMeta.size() != row.length);
        incrementLinesInput();
        putRow(rowMeta,row);
      }
 catch (      Exception ex) {
        this.throwedException=ex;
        this.cancel();
      }
    }
  }
;
  data.helper.getDimensionRows(meta.getDimension(),rowMeta,meta.getBaseElementsOnly(),listener);
  if (listener.throwedException != null)   throw new KettleException("Failed to fetch some row",listener.throwedException);
  this.logBasic("Process Ended.");
  setOutputDone();
  return false;
}
