{
  meta=(DBProcMeta)smi;
  data=(DBProcData)sdi;
  boolean sendToErrorRow=false;
  String errorMessage=null;
  Object[] r;
  if (data.readsRows) {
    r=getRow();
    if (r == null) {
      setOutputDone();
      return false;
    }
    data.inputRowMeta=getInputRowMeta();
  }
 else {
    r=new Object[]{};
    linesRead++;
    data.inputRowMeta=new RowMeta();
    data.readsRows=true;
  }
  try {
    Object[] outputRowData=runProc(data.inputRowMeta,r);
    putRow(data.outputMeta,outputRowData);
    if (checkFeedback(linesRead)) {
      if (log.isBasic())       logBasic(Messages.getString("DBProc.LineNumber") + linesRead);
    }
  }
 catch (  KettleException e) {
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(Messages.getString("DBProc.ErrorInStepRunning") + e.getMessage());
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(data.outputMeta,r,1,errorMessage,null,"DBP001");
    }
  }
  return true;
}
