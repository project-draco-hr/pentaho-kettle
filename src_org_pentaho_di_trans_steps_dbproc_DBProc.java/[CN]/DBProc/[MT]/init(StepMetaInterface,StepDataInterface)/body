{
  meta=(DBProcMeta)smi;
  data=(DBProcData)sdi;
  if (super.init(smi,sdi)) {
    data.readsRows=false;
    List<StepMeta> previous=getTransMeta().findPreviousSteps(getStepMeta());
    if (previous != null && previous.size() > 0) {
      data.readsRows=true;
    }
    data.db=new Database(meta.getDatabase());
    data.db.shareVariablesWith(this);
    try {
      if (getTransMeta().isUsingUniqueConnections()) {
synchronized (getTrans()) {
          data.db.connect(getTrans().getThreadName(),getPartitionID());
        }
      }
 else {
        data.db.connect(getPartitionID());
      }
      if (!meta.isAutoCommit()) {
        if (log.isDetailed())         logDetailed(Messages.getString("DBProc.Log.AutoCommit"));
        data.db.setCommit(9999);
      }
      if (log.isDetailed())       logDetailed(Messages.getString("DBProc.Log.ConnectedToDB"));
      return true;
    }
 catch (    KettleException e) {
      logError(Messages.getString("DBProc.Log.DBException") + e.getMessage());
      if (data.db != null) {
        data.db.disconnect();
      }
    }
  }
  return false;
}
