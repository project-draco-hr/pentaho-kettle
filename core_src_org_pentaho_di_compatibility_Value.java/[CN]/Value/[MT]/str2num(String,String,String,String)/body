{
  if (isNull()) {
    setType(VALUE_TYPE_STRING);
  }
 else {
    if (getType() == VALUE_TYPE_STRING) {
      if (getString() == null) {
        setNull();
        setValue(0.0);
      }
 else {
        NumberFormat nf=NumberFormat.getInstance();
        DecimalFormat df=(DecimalFormat)nf;
        DecimalFormatSymbols dfs=new DecimalFormatSymbols();
        if (!Utils.isEmpty(pattern)) {
          df.applyPattern(pattern);
        }
        if (!Utils.isEmpty(decimal)) {
          dfs.setDecimalSeparator(decimal.charAt(0));
        }
        if (!Utils.isEmpty(grouping)) {
          dfs.setGroupingSeparator(grouping.charAt(0));
        }
        if (!Utils.isEmpty(currency)) {
          dfs.setCurrencySymbol(currency);
        }
        try {
          df.setDecimalFormatSymbols(dfs);
          setValue(df.parse(getString()).doubleValue());
        }
 catch (        Exception e) {
          String message="Couldn't convert string to number " + e.toString();
          if (!Utils.isEmpty(pattern)) {
            message+=" pattern=" + pattern;
          }
          if (!Utils.isEmpty(decimal)) {
            message+=" decimal=" + decimal;
          }
          if (!Utils.isEmpty(grouping)) {
            message+=" grouping=" + grouping.charAt(0);
          }
          if (!Utils.isEmpty(currency)) {
            message+=" currency=" + currency;
          }
          throw new KettleValueException(message);
        }
      }
    }
 else {
      throw new KettleValueException("Function STR2NUM works only on strings");
    }
  }
  return this;
}
