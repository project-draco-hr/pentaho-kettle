{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"PropertyInputDialog.DialogTitle"));
  middle=props.getMiddlePct();
  margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wFileTab=new CTabItem(wTabFolder,SWT.NONE);
  wFileTab.setText(BaseMessages.getString(PKG,"PropertyInputDialog.File.Tab"));
  wFileComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wFileComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wFileComp.setLayout(fileLayout);
  wOriginFiles=new Group(wFileComp,SWT.SHADOW_NONE);
  props.setLook(wOriginFiles);
  wOriginFiles.setText(BaseMessages.getString(PKG,"PropertyInputDialog.wOriginFiles.Label"));
  FormLayout OriginFilesgroupLayout=new FormLayout();
  OriginFilesgroupLayout.marginWidth=10;
  OriginFilesgroupLayout.marginHeight=10;
  wOriginFiles.setLayout(OriginFilesgroupLayout);
  wlFileField=new Label(wOriginFiles,SWT.RIGHT);
  wlFileField.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FileField.Label"));
  props.setLook(wlFileField);
  fdlFileField=new FormData();
  fdlFileField.left=new FormAttachment(0,0);
  fdlFileField.top=new FormAttachment(0,margin);
  fdlFileField.right=new FormAttachment(middle,-margin);
  wlFileField.setLayoutData(fdlFileField);
  wFileField=new Button(wOriginFiles,SWT.CHECK);
  props.setLook(wFileField);
  wFileField.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.FileField.Tooltip"));
  fdFileField=new FormData();
  fdFileField.left=new FormAttachment(middle,margin);
  fdFileField.top=new FormAttachment(0,margin);
  wFileField.setLayoutData(fdFileField);
  SelectionAdapter lfilefield=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      ActiveFileField();
      input.setChanged();
    }
  }
;
  wFileField.addSelectionListener(lfilefield);
  wlFilenameField=new Label(wOriginFiles,SWT.RIGHT);
  wlFilenameField.setText(BaseMessages.getString(PKG,"PropertyInputDialog.wlFilenameField.Label"));
  props.setLook(wlFilenameField);
  fdlFilenameField=new FormData();
  fdlFilenameField.left=new FormAttachment(0,0);
  fdlFilenameField.top=new FormAttachment(wFileField,margin);
  fdlFilenameField.right=new FormAttachment(middle,-margin);
  wlFilenameField.setLayoutData(fdlFilenameField);
  wFilenameField=new CCombo(wOriginFiles,SWT.BORDER | SWT.READ_ONLY);
  wFilenameField.setEditable(true);
  props.setLook(wFilenameField);
  wFilenameField.addModifyListener(lsMod);
  fdFilenameField=new FormData();
  fdFilenameField.left=new FormAttachment(middle,margin);
  fdFilenameField.top=new FormAttachment(wFileField,margin);
  fdFilenameField.right=new FormAttachment(100,-margin);
  wFilenameField.setLayoutData(fdFilenameField);
  wFilenameField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setFileField();
    }
  }
);
  fdOriginFiles=new FormData();
  fdOriginFiles.left=new FormAttachment(0,margin);
  fdOriginFiles.top=new FormAttachment(wFilenameList,margin);
  fdOriginFiles.right=new FormAttachment(100,-margin);
  wOriginFiles.setLayoutData(fdOriginFiles);
  middle=middle / 2;
  wlFilename=new Label(wFileComp,SWT.RIGHT);
  wlFilename.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wOriginFiles,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbbFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbFilename);
  wbbFilename.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameBrowse.Button"));
  wbbFilename.setToolTipText(BaseMessages.getString(PKG,"System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wOriginFiles,margin);
  wbbFilename.setLayoutData(fdbFilename);
  wbaFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaFilename);
  wbaFilename.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameAdd.Button"));
  wbaFilename.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameAdd.Tooltip"));
  fdbaFilename=new FormData();
  fdbaFilename.right=new FormAttachment(wbbFilename,-margin);
  fdbaFilename.top=new FormAttachment(wOriginFiles,margin);
  wbaFilename.setLayoutData(fdbaFilename);
  wFilename=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.right=new FormAttachment(wbaFilename,-margin);
  fdFilename.top=new FormAttachment(wOriginFiles,margin);
  wFilename.setLayoutData(fdFilename);
  wlFilemask=new Label(wFileComp,SWT.RIGHT);
  wlFilemask.setText(BaseMessages.getString(PKG,"PropertyInputDialog.RegExp.Label"));
  props.setLook(wlFilemask);
  fdlFilemask=new FormData();
  fdlFilemask.left=new FormAttachment(0,0);
  fdlFilemask.top=new FormAttachment(wFilename,2 * margin);
  fdlFilemask.right=new FormAttachment(middle,-margin);
  wlFilemask.setLayoutData(fdlFilemask);
  wFilemask=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilemask);
  wFilemask.addModifyListener(lsMod);
  fdFilemask=new FormData();
  fdFilemask.left=new FormAttachment(middle,0);
  fdFilemask.top=new FormAttachment(wFilename,2 * margin);
  fdFilemask.right=new FormAttachment(100,0);
  wFilemask.setLayoutData(fdFilemask);
  wlExcludeFilemask=new Label(wFileComp,SWT.RIGHT);
  wlExcludeFilemask.setText(BaseMessages.getString(PKG,"PropertyInputDialog.ExcludeFilemask.Label"));
  props.setLook(wlExcludeFilemask);
  fdlExcludeFilemask=new FormData();
  fdlExcludeFilemask.left=new FormAttachment(0,0);
  fdlExcludeFilemask.top=new FormAttachment(wFilemask,margin);
  fdlExcludeFilemask.right=new FormAttachment(middle,-margin);
  wlExcludeFilemask.setLayoutData(fdlExcludeFilemask);
  wExcludeFilemask=new TextVar(transMeta,wFileComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wExcludeFilemask);
  wExcludeFilemask.addModifyListener(lsMod);
  fdExcludeFilemask=new FormData();
  fdExcludeFilemask.left=new FormAttachment(middle,0);
  fdExcludeFilemask.top=new FormAttachment(wFilemask,margin);
  fdExcludeFilemask.right=new FormAttachment(wFilename,0,SWT.RIGHT);
  wExcludeFilemask.setLayoutData(fdExcludeFilemask);
  wlFilenameList=new Label(wFileComp,SWT.RIGHT);
  wlFilenameList.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameList.Label"));
  props.setLook(wlFilenameList);
  fdlFilenameList=new FormData();
  fdlFilenameList.left=new FormAttachment(0,0);
  fdlFilenameList.top=new FormAttachment(wExcludeFilemask,margin);
  fdlFilenameList.right=new FormAttachment(middle,-margin);
  wlFilenameList.setLayoutData(fdlFilenameList);
  wbdFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdFilename);
  wbdFilename.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameRemove.Button"));
  wbdFilename.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameRemove.Tooltip"));
  fdbdFilename=new FormData();
  fdbdFilename.right=new FormAttachment(100,0);
  fdbdFilename.top=new FormAttachment(wExcludeFilemask,40);
  wbdFilename.setLayoutData(fdbdFilename);
  wbeFilename=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeFilename);
  wbeFilename.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameEdit.Button"));
  wbeFilename.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.FilenameEdit.Tooltip"));
  fdbeFilename=new FormData();
  fdbeFilename.right=new FormAttachment(100,0);
  fdbeFilename.top=new FormAttachment(wbdFilename,margin);
  wbeFilename.setLayoutData(fdbeFilename);
  wbShowFiles=new Button(wFileComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbShowFiles);
  wbShowFiles.setText(BaseMessages.getString(PKG,"PropertyInputDialog.ShowFiles.Button"));
  fdbShowFiles=new FormData();
  fdbShowFiles.left=new FormAttachment(middle,0);
  fdbShowFiles.bottom=new FormAttachment(100,0);
  wbShowFiles.setLayoutData(fdbShowFiles);
  ColumnInfo[] colinfo=new ColumnInfo[5];
  colinfo[0]=new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.Files.Filename.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinfo[1]=new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.Files.Wildcard.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinfo[2]=new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.Files.ExcludeWildcard.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false);
  colinfo[3]=new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.Required.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,YES_NO_COMBO);
  colinfo[4]=new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.IncludeSubDirs.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,YES_NO_COMBO);
  colinfo[0].setUsingVariables(true);
  colinfo[1].setUsingVariables(true);
  colinfo[1].setToolTip(BaseMessages.getString(PKG,"PropertyInputDialog.Files.Wildcard.Tooltip"));
  colinfo[2].setUsingVariables(true);
  colinfo[2].setToolTip(BaseMessages.getString(PKG,"PropertyInputDialog.Files.ExcludeWildcard.Tooltip"));
  colinfo[3].setToolTip(BaseMessages.getString(PKG,"PropertyInputDialog.Required.Tooltip"));
  colinfo[4].setToolTip(BaseMessages.getString(PKG,"PropertyInputDialog.IncludeSubDirs.Tooltip"));
  wFilenameList=new TableView(transMeta,wFileComp,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfo,2,lsMod,props);
  props.setLook(wFilenameList);
  fdFilenameList=new FormData();
  fdFilenameList.left=new FormAttachment(middle,0);
  fdFilenameList.right=new FormAttachment(wbdFilename,-margin);
  fdFilenameList.top=new FormAttachment(wExcludeFilemask,margin);
  fdFilenameList.bottom=new FormAttachment(wbShowFiles,-margin);
  wFilenameList.setLayoutData(fdFilenameList);
  fdFileComp=new FormData();
  fdFileComp.left=new FormAttachment(0,0);
  fdFileComp.top=new FormAttachment(0,0);
  fdFileComp.right=new FormAttachment(100,0);
  fdFileComp.bottom=new FormAttachment(100,0);
  wFileComp.setLayoutData(fdFileComp);
  wFileComp.layout();
  wFileTab.setControl(wFileComp);
  middle=props.getMiddlePct();
  wContentTab=new CTabItem(wTabFolder,SWT.NONE);
  wContentTab.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Content.Tab"));
  FormLayout contentLayout=new FormLayout();
  contentLayout.marginWidth=3;
  contentLayout.marginHeight=3;
  wContentComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wContentComp);
  wContentComp.setLayout(contentLayout);
  wSettingsGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wSettingsGroup);
  wSettingsGroup.setText(BaseMessages.getString(PKG,"PropertyInputDialog.SettingsGroup.Label"));
  FormLayout settingsGroupLayout=new FormLayout();
  settingsGroupLayout.marginWidth=10;
  settingsGroupLayout.marginHeight=10;
  wSettingsGroup.setLayout(settingsGroupLayout);
  wlFileType=new Label(wSettingsGroup,SWT.RIGHT);
  wlFileType.setText(BaseMessages.getString(PKG,"PropertyInputDialog.FileType.Label"));
  props.setLook(wlFileType);
  fdlFileType=new FormData();
  fdlFileType.left=new FormAttachment(0,0);
  fdlFileType.top=new FormAttachment(0,margin);
  fdlFileType.right=new FormAttachment(middle,-margin);
  wlFileType.setLayoutData(fdlFileType);
  wFileType=new CCombo(wSettingsGroup,SWT.BORDER | SWT.READ_ONLY);
  wFileType.setEditable(true);
  wFileType.setItems(PropertyInputMeta.fileTypeDesc);
  props.setLook(wFileType);
  wFileType.addModifyListener(lsMod);
  fdFileType=new FormData();
  fdFileType.left=new FormAttachment(middle,0);
  fdFileType.top=new FormAttachment(0,margin);
  fdFileType.right=new FormAttachment(100,0);
  wFileType.setLayoutData(fdFileType);
  wFileType.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setFileType();
    }
  }
);
  wlEncoding=new Label(wSettingsGroup,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  fdlEncoding=new FormData();
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.top=new FormAttachment(wFileType,margin);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new ComboVar(transMeta,wSettingsGroup,SWT.BORDER | SWT.READ_ONLY);
  wEncoding.setEditable(true);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  fdEncoding=new FormData();
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.top=new FormAttachment(wFileType,margin);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setEncodings();
    }
  }
);
  wlSection=new Label(wSettingsGroup,SWT.RIGHT);
  wlSection.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Section.Label"));
  props.setLook(wlSection);
  fdlSection=new FormData();
  fdlSection.left=new FormAttachment(0,0);
  fdlSection.top=new FormAttachment(wEncoding,margin);
  fdlSection.right=new FormAttachment(middle,-margin);
  wlSection.setLayoutData(fdlSection);
  wbbSection=new Button(wSettingsGroup,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbSection);
  wbbSection.setText(BaseMessages.getString(PKG,"PropertyInputDialog.SectionBrowse.Button"));
  fdbSection=new FormData();
  fdbSection.right=new FormAttachment(100,0);
  fdbSection.top=new FormAttachment(wEncoding,margin);
  wbbSection.setLayoutData(fdbSection);
  wbbSection.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getSections();
    }
  }
);
  wSection=new TextVar(transMeta,wSettingsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wSection.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.Section.Tooltip"));
  props.setLook(wSection);
  wSection.addModifyListener(lsMod);
  fdSection=new FormData();
  fdSection.left=new FormAttachment(middle,0);
  fdSection.top=new FormAttachment(wEncoding,margin);
  fdSection.right=new FormAttachment(wbbSection,-margin);
  wSection.setLayoutData(fdSection);
  wlLimit=new Label(wSettingsGroup,SWT.RIGHT);
  wlLimit.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Limit.Label"));
  props.setLook(wlLimit);
  fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,0);
  fdlLimit.top=new FormAttachment(wbbSection,margin);
  fdlLimit.right=new FormAttachment(middle,-margin);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new Text(wSettingsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,0);
  fdLimit.top=new FormAttachment(wbbSection,margin);
  fdLimit.right=new FormAttachment(100,0);
  wLimit.setLayoutData(fdLimit);
  wlresolveValueVariable=new Label(wSettingsGroup,SWT.RIGHT);
  wlresolveValueVariable.setText(BaseMessages.getString(PKG,"PropertyInputDialog.resolveValueVariable.Label"));
  props.setLook(wlresolveValueVariable);
  fdlresolveValueVariable=new FormData();
  fdlresolveValueVariable.left=new FormAttachment(0,0);
  fdlresolveValueVariable.top=new FormAttachment(wLimit,margin);
  fdlresolveValueVariable.right=new FormAttachment(middle,-margin);
  wlresolveValueVariable.setLayoutData(fdlresolveValueVariable);
  wresolveValueVariable=new Button(wSettingsGroup,SWT.CHECK);
  props.setLook(wresolveValueVariable);
  wresolveValueVariable.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.resolveValueVariable.Tooltip"));
  fdresolveValueVariable=new FormData();
  fdresolveValueVariable.left=new FormAttachment(middle,0);
  fdresolveValueVariable.top=new FormAttachment(wLimit,margin);
  wresolveValueVariable.setLayoutData(fdresolveValueVariable);
  fdSettingsGroup=new FormData();
  fdSettingsGroup.left=new FormAttachment(0,margin);
  fdSettingsGroup.top=new FormAttachment(wresolveValueVariable,margin);
  fdSettingsGroup.right=new FormAttachment(100,-margin);
  wSettingsGroup.setLayoutData(fdSettingsGroup);
  wAdditionalGroup=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wAdditionalGroup);
  wAdditionalGroup.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Group.AdditionalGroup.Label"));
  FormLayout additionalgroupLayout=new FormLayout();
  additionalgroupLayout.marginWidth=10;
  additionalgroupLayout.marginHeight=10;
  wAdditionalGroup.setLayout(additionalgroupLayout);
  wlInclFilename=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclFilename.setText(BaseMessages.getString(PKG,"PropertyInputDialog.InclFilename.Label"));
  props.setLook(wlInclFilename);
  fdlInclFilename=new FormData();
  fdlInclFilename.left=new FormAttachment(0,0);
  fdlInclFilename.top=new FormAttachment(wSettingsGroup,margin);
  fdlInclFilename.right=new FormAttachment(middle,-margin);
  wlInclFilename.setLayoutData(fdlInclFilename);
  wInclFilename=new Button(wAdditionalGroup,SWT.CHECK);
  props.setLook(wInclFilename);
  wInclFilename.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.InclFilename.Tooltip"));
  fdInclFilename=new FormData();
  fdInclFilename.left=new FormAttachment(middle,0);
  fdInclFilename.top=new FormAttachment(wSettingsGroup,margin);
  wInclFilename.setLayoutData(fdInclFilename);
  wlInclFilenameField=new Label(wAdditionalGroup,SWT.LEFT);
  wlInclFilenameField.setText(BaseMessages.getString(PKG,"PropertyInputDialog.InclFilenameField.Label"));
  props.setLook(wlInclFilenameField);
  fdlInclFilenameField=new FormData();
  fdlInclFilenameField.left=new FormAttachment(wInclFilename,margin);
  fdlInclFilenameField.top=new FormAttachment(wSettingsGroup,margin);
  wlInclFilenameField.setLayoutData(fdlInclFilenameField);
  wInclFilenameField=new TextVar(transMeta,wAdditionalGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclFilenameField);
  wInclFilenameField.addModifyListener(lsMod);
  fdInclFilenameField=new FormData();
  fdInclFilenameField.left=new FormAttachment(wlInclFilenameField,margin);
  fdInclFilenameField.top=new FormAttachment(wSettingsGroup,margin);
  fdInclFilenameField.right=new FormAttachment(100,0);
  wInclFilenameField.setLayoutData(fdInclFilenameField);
  wlInclRownum=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclRownum.setText(BaseMessages.getString(PKG,"PropertyInputDialog.InclRownum.Label"));
  props.setLook(wlInclRownum);
  fdlInclRownum=new FormData();
  fdlInclRownum.left=new FormAttachment(0,0);
  fdlInclRownum.top=new FormAttachment(wInclFilenameField,margin);
  fdlInclRownum.right=new FormAttachment(middle,-margin);
  wlInclRownum.setLayoutData(fdlInclRownum);
  wInclRownum=new Button(wAdditionalGroup,SWT.CHECK);
  props.setLook(wInclRownum);
  wInclRownum.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.InclRownum.Tooltip"));
  fdRownum=new FormData();
  fdRownum.left=new FormAttachment(middle,0);
  fdRownum.top=new FormAttachment(wInclFilenameField,margin);
  wInclRownum.setLayoutData(fdRownum);
  wlInclRownumField=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclRownumField.setText(BaseMessages.getString(PKG,"PropertyInputDialog.InclRownumField.Label"));
  props.setLook(wlInclRownumField);
  fdlInclRownumField=new FormData();
  fdlInclRownumField.left=new FormAttachment(wInclRownum,margin);
  fdlInclRownumField.top=new FormAttachment(wInclFilenameField,margin);
  wlInclRownumField.setLayoutData(fdlInclRownumField);
  wInclRownumField=new TextVar(transMeta,wAdditionalGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclRownumField);
  wInclRownumField.addModifyListener(lsMod);
  fdInclRownumField=new FormData();
  fdInclRownumField.left=new FormAttachment(wlInclRownumField,margin);
  fdInclRownumField.top=new FormAttachment(wInclFilenameField,margin);
  fdInclRownumField.right=new FormAttachment(100,0);
  wInclRownumField.setLayoutData(fdInclRownumField);
  wlResetRownum=new Label(wAdditionalGroup,SWT.RIGHT);
  wlResetRownum.setText(BaseMessages.getString(PKG,"PropertyInputDialog.ResetRownum.Label"));
  props.setLook(wlResetRownum);
  fdlResetRownum=new FormData();
  fdlResetRownum.left=new FormAttachment(wInclRownum,margin);
  fdlResetRownum.top=new FormAttachment(wInclRownumField,margin);
  wlResetRownum.setLayoutData(fdlResetRownum);
  wResetRownum=new Button(wAdditionalGroup,SWT.CHECK);
  props.setLook(wResetRownum);
  wResetRownum.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.ResetRownum.Tooltip"));
  fdRownum=new FormData();
  fdRownum.left=new FormAttachment(wlResetRownum,margin);
  fdRownum.top=new FormAttachment(wInclRownumField,margin);
  wResetRownum.setLayoutData(fdRownum);
  wlInclINIsection=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclINIsection.setText(BaseMessages.getString(PKG,"PropertyInputDialog.InclINIsection.Label"));
  props.setLook(wlInclINIsection);
  fdlInclINIsection=new FormData();
  fdlInclINIsection.left=new FormAttachment(0,0);
  fdlInclINIsection.top=new FormAttachment(wResetRownum,margin);
  fdlInclINIsection.right=new FormAttachment(middle,-margin);
  wlInclINIsection.setLayoutData(fdlInclINIsection);
  wInclINIsection=new Button(wAdditionalGroup,SWT.CHECK);
  props.setLook(wInclINIsection);
  wInclINIsection.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.InclINIsection.Tooltip"));
  fdRownum=new FormData();
  fdRownum.left=new FormAttachment(middle,0);
  fdRownum.top=new FormAttachment(wResetRownum,margin);
  wInclINIsection.setLayoutData(fdRownum);
  wlInclINIsectionField=new Label(wAdditionalGroup,SWT.RIGHT);
  wlInclINIsectionField.setText(BaseMessages.getString(PKG,"PropertyInputDialog.InclINIsectionField.Label"));
  props.setLook(wlInclINIsectionField);
  fdlInclINIsectionField=new FormData();
  fdlInclINIsectionField.left=new FormAttachment(wInclINIsection,margin);
  fdlInclINIsectionField.top=new FormAttachment(wResetRownum,margin);
  wlInclINIsectionField.setLayoutData(fdlInclINIsectionField);
  wInclINIsectionField=new TextVar(transMeta,wAdditionalGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclINIsectionField);
  wInclINIsectionField.addModifyListener(lsMod);
  fdInclINIsectionField=new FormData();
  fdInclINIsectionField.left=new FormAttachment(wlInclINIsectionField,margin);
  fdInclINIsectionField.top=new FormAttachment(wResetRownum,margin);
  fdInclINIsectionField.right=new FormAttachment(100,0);
  wInclINIsectionField.setLayoutData(fdInclINIsectionField);
  fdAdditionalGroup=new FormData();
  fdAdditionalGroup.left=new FormAttachment(0,margin);
  fdAdditionalGroup.top=new FormAttachment(wSettingsGroup,margin);
  fdAdditionalGroup.right=new FormAttachment(100,-margin);
  wAdditionalGroup.setLayoutData(fdAdditionalGroup);
  wAddFileResult=new Group(wContentComp,SWT.SHADOW_NONE);
  props.setLook(wAddFileResult);
  wAddFileResult.setText(BaseMessages.getString(PKG,"PropertyInputDialog.wAddFileResult.Label"));
  FormLayout AddFileResultgroupLayout=new FormLayout();
  AddFileResultgroupLayout.marginWidth=10;
  AddFileResultgroupLayout.marginHeight=10;
  wAddFileResult.setLayout(AddFileResultgroupLayout);
  wlAddResult=new Label(wAddFileResult,SWT.RIGHT);
  wlAddResult.setText(BaseMessages.getString(PKG,"PropertyInputDialog.AddResult.Label"));
  props.setLook(wlAddResult);
  fdlAddResult=new FormData();
  fdlAddResult.left=new FormAttachment(0,0);
  fdlAddResult.top=new FormAttachment(wAdditionalGroup,margin);
  fdlAddResult.right=new FormAttachment(middle,-margin);
  wlAddResult.setLayoutData(fdlAddResult);
  wAddResult=new Button(wAddFileResult,SWT.CHECK);
  props.setLook(wAddResult);
  wAddResult.setToolTipText(BaseMessages.getString(PKG,"PropertyInputDialog.AddResult.Tooltip"));
  fdAddResult=new FormData();
  fdAddResult.left=new FormAttachment(middle,0);
  fdAddResult.top=new FormAttachment(wAdditionalGroup,margin);
  wAddResult.setLayoutData(fdAddResult);
  fdAddFileResult=new FormData();
  fdAddFileResult.left=new FormAttachment(0,margin);
  fdAddFileResult.top=new FormAttachment(wAdditionalGroup,margin);
  fdAddFileResult.right=new FormAttachment(100,-margin);
  wAddFileResult.setLayoutData(fdAddFileResult);
  fdContentComp=new FormData();
  fdContentComp.left=new FormAttachment(0,0);
  fdContentComp.top=new FormAttachment(0,0);
  fdContentComp.right=new FormAttachment(100,0);
  fdContentComp.bottom=new FormAttachment(100,0);
  wContentComp.setLayoutData(fdContentComp);
  wContentComp.layout();
  wContentTab.setControl(wContentComp);
  wFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wFieldsTab.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Fields.Tab"));
  FormLayout fieldsLayout=new FormLayout();
  fieldsLayout.marginWidth=Const.FORM_MARGIN;
  fieldsLayout.marginHeight=Const.FORM_MARGIN;
  wFieldsComp=new Composite(wTabFolder,SWT.NONE);
  wFieldsComp.setLayout(fieldsLayout);
  props.setLook(wFieldsComp);
  wGet=new Button(wFieldsComp,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"PropertyInputDialog.GetFields.Button"));
  fdGet=new FormData();
  fdGet.left=new FormAttachment(50,0);
  fdGet.bottom=new FormAttachment(100,0);
  wGet.setLayoutData(fdGet);
  final int FieldsRows=input.getInputFields().length;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Name.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Attribut.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,PropertyInputField.ColumnDesc,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Type.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes(),true),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Format.Column"),ColumnInfo.COLUMN_TYPE_FORMAT,3),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Length.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Precision.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Currency.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Decimal.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Group.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.TrimType.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,PropertyInputField.trimTypeDesc,true),new ColumnInfo(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Repeat.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{BaseMessages.getString(PKG,"System.Combo.Yes"),BaseMessages.getString(PKG,"System.Combo.No")},true)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Name.Column.Tooltip"));
  colinf[1].setToolTip(BaseMessages.getString(PKG,"PropertyInputDialog.FieldsTable.Attribut.Column.Tooltip"));
  wFields=new TableView(transMeta,wFieldsComp,SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(wGet,-margin);
  wFields.setLayoutData(fdFields);
  fdFieldsComp=new FormData();
  fdFieldsComp.left=new FormAttachment(0,0);
  fdFieldsComp.top=new FormAttachment(0,0);
  fdFieldsComp.right=new FormAttachment(100,0);
  fdFieldsComp.bottom=new FormAttachment(100,0);
  wFieldsComp.setLayoutData(fdFieldsComp);
  wFieldsComp.layout();
  wFieldsTab.setControl(wFieldsComp);
  addAdditionalFieldsTab();
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"PropertyInputDialog.Button.PreviewRows"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wPreview.addListener(SWT.Selection,lsPreview);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wLimit.addSelectionListener(lsDef);
  wInclRownumField.addSelectionListener(lsDef);
  wInclFilenameField.addSelectionListener(lsDef);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFilenameList.add(new String[]{wFilename.getText(),wFilemask.getText(),wExcludeFilemask.getText(),PropertyInputMeta.RequiredFilesCode[0],PropertyInputMeta.RequiredFilesCode[0]});
      wFilename.setText("");
      wFilemask.setText("");
      wExcludeFilemask.setText("");
      wFilenameList.removeEmptyRows();
      wFilenameList.setRowNums();
      wFilenameList.optWidth(true);
    }
  }
;
  wbaFilename.addSelectionListener(selA);
  wFilename.addSelectionListener(selA);
  wbdFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int[] idx=wFilenameList.getSelectionIndices();
      wFilenameList.remove(idx);
      wFilenameList.removeEmptyRows();
      wFilenameList.setRowNums();
    }
  }
);
  wbeFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFilenameList.getSelectionIndex();
      if (idx >= 0) {
        String[] string=wFilenameList.getItem(idx);
        wFilename.setText(string[0]);
        wFilemask.setText(string[1]);
        wExcludeFilemask.setText(string[2]);
        wFilenameList.remove(idx);
      }
      wFilenameList.removeEmptyRows();
      wFilenameList.setRowNums();
    }
  }
);
  wbShowFiles.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      try {
        PropertyInputMeta tfii=new PropertyInputMeta();
        getInfo(tfii);
        FileInputList fileInputList=tfii.getFiles(transMeta);
        String[] files=fileInputList.getFileStrings();
        if (files.length > 0) {
          EnterSelectionDialog esd=new EnterSelectionDialog(shell,files,BaseMessages.getString(PKG,"PropertyInputDialog.FilesReadSelection.DialogTitle"),BaseMessages.getString(PKG,"PropertyInputDialog.FilesReadSelection.DialogMessage"));
          esd.setViewOnly();
          esd.open();
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setMessage(BaseMessages.getString(PKG,"PropertyInputDialog.NoFileFound.DialogMessage"));
          mb.setText(BaseMessages.getString(PKG,"System.Dialog.Error.Title"));
          mb.open();
        }
      }
 catch (      Exception ex) {
        new ErrorDialog(shell,BaseMessages.getString(PKG,"PropertyInputDialog.ErrorParsingData.DialogTitle"),BaseMessages.getString(PKG,"PropertyInputDialog.ErrorParsingData.DialogMessage"),ex);
      }
    }
  }
);
  wInclFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setIncludeFilename();
    }
  }
);
  wInclINIsection.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setIncludeSection();
    }
  }
);
  wInclRownum.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setIncludeRownum();
    }
  }
);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText("");
    }
  }
);
  wbbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      if (!Const.isEmpty(wFilemask.getText()) || !Const.isEmpty(wExcludeFilemask.getText())) {
        DirectoryDialog dialog=new DirectoryDialog(shell,SWT.OPEN);
        if (wFilename.getText() != null) {
          String fpath="";
          dialog.setFilterPath(fpath);
        }
        if (dialog.open() != null) {
          String str=dialog.getFilterPath();
          wFilename.setText(str);
        }
      }
 else {
        FileDialog dialog=new FileDialog(shell,SWT.OPEN);
        if (PropertyInputMeta.getFileTypeByDesc(wFileType.getText()) == PropertyInputMeta.FILE_TYPE_PROPERTY) {
          dialog.setFilterExtensions(new String[]{"*.properties;*.PROPERTIES","*"});
          dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"PropertyInputDialog.FileType.PropertiesFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
        }
 else {
          dialog.setFilterExtensions(new String[]{"*.ini;*.INI","*"});
          dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"PropertyInputDialog.FileType.INIFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
        }
        if (wFilename.getText() != null) {
          String fname="";
          dialog.setFileName(fname);
        }
        if (dialog.open() != null) {
          String str=dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName();
          wFilename.setText(str);
        }
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData(input);
  setFileType();
  input.setChanged(changed);
  ActiveFileField();
  wFields.optWidth(true);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
