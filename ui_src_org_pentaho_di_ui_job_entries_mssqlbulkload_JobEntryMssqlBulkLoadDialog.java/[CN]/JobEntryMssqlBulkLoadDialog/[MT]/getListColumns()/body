{
  if (!Const.isEmpty(wTablename.getText())) {
    DatabaseMeta databaseMeta=jobMeta.findDatabase(wConnection.getText());
    if (databaseMeta != null) {
      Database database=new Database(loggingObject,databaseMeta);
      database.shareVariablesWith(jobMeta);
      try {
        database.connect();
        String schemaTable=databaseMeta.getQuotedSchemaTableCombination(wSchemaname.getText(),wTablename.getText());
        RowMetaInterface row=database.getTableFields(schemaTable);
        String available[]=row.getFieldNames();
        String source[]=wOrderBy.getText().split(",");
        for (int i=0; i < source.length; i++)         source[i]=Const.trim(source[i]);
        int idxSource[]=Const.indexsOfStrings(source,available);
        EnterSelectionDialog dialog=new EnterSelectionDialog(shell,available,BaseMessages.getString(PKG,"JobMssqlBulkLoad.SelectColumns.Title"),BaseMessages.getString(PKG,"JobMssqlBulkLoad.SelectColumns.Message"));
        dialog.setMulti(true);
        dialog.setAvoidQuickSearch();
        dialog.setSelectedNrs(idxSource);
        if (dialog.open() != null) {
          String columns="";
          int idx[]=dialog.getSelectionIndeces();
          for (int i=0; i < idx.length; i++) {
            if (i > 0)             columns+=", ";
            columns+=available[idx[i]];
          }
          wOrderBy.setText(columns);
        }
      }
 catch (      KettleDatabaseException e) {
        new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.Error.Title"),BaseMessages.getString(PKG,"JobMssqlBulkLoad.ConnectionError2.DialogMessage"),e);
      }
 finally {
        database.disconnect();
      }
    }
  }
}
