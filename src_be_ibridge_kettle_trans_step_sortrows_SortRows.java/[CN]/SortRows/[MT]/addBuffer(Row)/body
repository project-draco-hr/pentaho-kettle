{
  if (r != null) {
    data.buffer.add(r);
  }
  if (data.files.size() == 0 && r == null) {
    quickSort(data.buffer);
  }
  if (data.buffer.size() == meta.getSortSize() || (data.files.size() > 0 && r == null && data.buffer.size() > 0)) {
    quickSort(data.buffer);
    File fil;
    FileOutputStream fos;
    DataOutputStream dos;
    GZIPOutputStream gzos;
    int p;
    try {
      fil=File.createTempFile(meta.getPrefix(),".tmp",new File(StringUtil.environmentSubstitute(meta.getDirectory())));
      fil.deleteOnExit();
      data.files.add(fil);
      fos=new FileOutputStream(fil);
      if (meta.getCompress()) {
        gzos=new GZIPOutputStream(fos);
        dos=new DataOutputStream(gzos);
      }
 else {
        dos=new DataOutputStream(fos);
        gzos=null;
      }
      dos.writeInt(data.buffer.size());
      for (p=0; p < data.buffer.size(); p++) {
        ((Row)data.buffer.get(p)).write(dos);
      }
      dos.close();
      if (gzos != null)       gzos.close();
      fos.close();
    }
 catch (    Exception e) {
      logError("Error processing temp-file: " + e.toString());
      return false;
    }
    data.buffer.removeAllElements();
  }
  return true;
}
