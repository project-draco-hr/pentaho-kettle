{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    serverName=XMLHandler.getTagValue(entrynode,"servername");
    userName=XMLHandler.getTagValue(entrynode,"username");
    password=XMLHandler.getTagValue(entrynode,"password");
    serverPort=XMLHandler.getTagValue(entrynode,"serverport");
    ftpDirectory=XMLHandler.getTagValue(entrynode,"ftpdirectory");
    localDirectory=XMLHandler.getTagValue(entrynode,"localdirectory");
    wildcard=XMLHandler.getTagValue(entrynode,"wildcard");
    onlyGettingNewFiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"only_new"));
    usehttpproxy="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"usehttpproxy"));
    httpproxyhost=XMLHandler.getTagValue(entrynode,"httpproxyhost");
    httpproxyport=XMLHandler.getTagValue(entrynode,"httpproxyport");
    httpproxyusername=XMLHandler.getTagValue(entrynode,"httpproxyusername");
    httpProxyPassword=XMLHandler.getTagValue(entrynode,"httpproxypassword");
    publicpublickey="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"publicpublickey"));
    keyFilename=XMLHandler.getTagValue(entrynode,"keyfilename");
    keyFilePass=XMLHandler.getTagValue(entrynode,"keyfilepass");
    useBasicAuthentication="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"usebasicauthentication"));
    createRemoteFolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"createremotefolder"));
    afterFtpPut=XMLHandler.getTagValue(entrynode,"afterftpput");
    destinationfolder=XMLHandler.getTagValue(entrynode,"destinationfolder");
    createDestinationFolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"createdestinationfolder"));
    cachehostkey="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"cachehostkey"));
    timeout=Const.toInt(XMLHandler.getTagValue(entrynode,"timeout"),0);
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"JobSSH2PUT.Log.UnableLoadXML",xe.getMessage()));
  }
}
