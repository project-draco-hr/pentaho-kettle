{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    @Override public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobTruncateTables.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobTruncateTables.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wConnection=addConnectionLine(shell,wName,middle,margin);
  if (jobEntry.getDatabase() == null && jobMeta.nrDatabases() == 1) {
    wConnection.select(0);
  }
  wConnection.addModifyListener(lsMod);
  wlPrevious=new Label(shell,SWT.RIGHT);
  wlPrevious.setText(BaseMessages.getString(PKG,"JobTruncateTables.Previous.Label"));
  props.setLook(wlPrevious);
  fdlPrevious=new FormData();
  fdlPrevious.left=new FormAttachment(0,0);
  fdlPrevious.top=new FormAttachment(wConnection,margin);
  fdlPrevious.right=new FormAttachment(middle,-margin);
  wlPrevious.setLayoutData(fdlPrevious);
  wPrevious=new Button(shell,SWT.CHECK);
  props.setLook(wPrevious);
  wPrevious.setToolTipText(BaseMessages.getString(PKG,"JobTruncateTables.Previous.Tooltip"));
  fdPrevious=new FormData();
  fdPrevious.left=new FormAttachment(middle,0);
  fdPrevious.top=new FormAttachment(wConnection,margin);
  fdPrevious.right=new FormAttachment(100,0);
  wPrevious.setLayoutData(fdPrevious);
  wPrevious.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      setPrevious();
      jobEntry.setChanged();
    }
  }
);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"JobTruncateTables.GetTablenamesList.Auto"));
  FormData fdbTable=new FormData();
  fdbTable.left=new FormAttachment(0,margin);
  fdbTable.right=new FormAttachment(100,-margin);
  fdbTable.top=new FormAttachment(wPrevious,2 * margin);
  wbTable.setLayoutData(fdbTable);
  wbTable.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wbdTablename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdTablename);
  wbdTablename.setText(BaseMessages.getString(PKG,"JobTruncateTables.TableDelete.Button"));
  wbdTablename.setToolTipText(BaseMessages.getString(PKG,"JobTruncateTables.TableDelete.Tooltip"));
  fdbdTablename=new FormData();
  fdbdTablename.right=new FormAttachment(100,0);
  fdbdTablename.top=new FormAttachment(wbTable,2 * middle);
  wbdTablename.setLayoutData(fdbdTablename);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"JobTruncateTables.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wbTable,2 * margin);
  wlFields.setLayoutData(fdlFields);
  int rows=jobEntry.arguments == null ? 1 : (jobEntry.arguments.length == 0 ? 0 : jobEntry.arguments.length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"JobTruncateTables.Fields.Table.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"JobTruncateTables.Fields.Schema.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(BaseMessages.getString(PKG,"JobTruncateTables.Fields.Table.Tooltip"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(BaseMessages.getString(PKG,"JobTruncateTables.Fields.Schema.Tooltip"));
  wFields=new TableView(jobMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wbdTablename,-margin);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wbdTablename.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent arg0){
      int[] idx=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  FormData fd=new FormData();
  fd.right=new FormAttachment(50,-10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wOK.setLayoutData(fd);
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  fd=new FormData();
  fd.left=new FormAttachment(50,10);
  fd.bottom=new FormAttachment(100,0);
  fd.width=100;
  wCancel.setLayoutData(fd);
  lsCancel=new Listener(){
    @Override public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    @Override public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wFields);
  lsDef=new SelectionAdapter(){
    @Override public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    @Override public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setPrevious();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobTruncateTablesDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
