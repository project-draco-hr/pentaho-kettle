{
  final String DUMMY_EXECUTING_SERVER="dummy.executing.server";
  final String DUMMY_EXECUTING_USER="dummy.executing.user";
  final String DUMMY_JOB_NAME="dummy.job.name";
  final String DUMMY_JOB_FILENAME="dummy.job.filename";
  final String DUMMY_JOB_XML_CONTENT="<dummy-job>content</dummy-job>";
  final String DUMMY_LOG_CHANNEL_ID="dummy.log.channel.id";
  final long DUMMY_BATCH_ID=123;
  final Date DUMMY_START_DATE=new Date();
  Job mockJob=mock(Job.class);
  JobMeta mockJobMeta=mock(JobMeta.class);
  when(mockJob.getExecutingServer()).thenReturn(DUMMY_EXECUTING_SERVER);
  when(mockJob.getExecutingUser()).thenReturn(DUMMY_EXECUTING_USER);
  when(mockJobMeta.getName()).thenReturn(DUMMY_JOB_NAME);
  when(mockJobMeta.getFilename()).thenReturn(DUMMY_JOB_FILENAME);
  when(mockJobMeta.getXML()).thenReturn(DUMMY_JOB_XML_CONTENT);
  when(mockJob.getLogChannelId()).thenReturn(DUMMY_LOG_CHANNEL_ID);
  when(mockJob.getBatchId()).thenReturn(DUMMY_BATCH_ID);
  when(mockJob.getCurrentDate()).thenReturn(DUMMY_START_DATE);
  when(mockJob.getJobMeta()).thenReturn(mockJobMeta);
  Assert.assertNull(jobStartMonitor.toKettleEvent(new String("not a Job Object")));
  Assert.assertNull(jobMetaLoadedMonitor.toKettleEvent(new String("not a Job Meta Object")));
  Assert.assertNull(jobFinishMonitor.toKettleEvent(new String("not a Job Object")));
  IKettleMonitoringEvent event=jobStartMonitor.toKettleEvent(mockJob);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof JobEvent);
  Assert.assertTrue(EventType.Job.STARTED == ((JobEvent)event).getEventType());
  Assert.assertTrue(DUMMY_EXECUTING_SERVER.equals(((JobEvent)event).getExecutingServer()));
  Assert.assertTrue(DUMMY_EXECUTING_USER.equals(((JobEvent)event).getExecutingUser()));
  Assert.assertTrue(DUMMY_JOB_NAME.equals(((JobEvent)event).getName()));
  Assert.assertTrue(DUMMY_JOB_XML_CONTENT.equals(((JobEvent)event).getXml()));
  Assert.assertTrue(DUMMY_LOG_CHANNEL_ID.equals(((JobEvent)event).getLogChannelId()));
  Assert.assertTrue(DUMMY_BATCH_ID == ((JobEvent)event).getBatchId());
  Assert.assertTrue(EventType.Job.STARTED.getSnmpId() == ((JobEvent)event).getStatus());
  Assert.assertTrue(DUMMY_START_DATE.getTime() == ((JobEvent)event).getStartTimeMillis());
  event=jobMetaLoadedMonitor.toKettleEvent(mockJobMeta);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof JobEvent);
  Assert.assertTrue(EventType.Job.META_LOADED == ((JobEvent)event).getEventType());
  Assert.assertTrue(DUMMY_JOB_NAME.equals(((JobEvent)event).getName()));
  Assert.assertTrue(DUMMY_JOB_XML_CONTENT.equals(((JobEvent)event).getXml()));
  event=jobFinishMonitor.toKettleEvent(mockJob);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof JobEvent);
  Assert.assertTrue(EventType.Job.FINISHED == ((JobEvent)event).getEventType());
  Assert.assertTrue(DUMMY_EXECUTING_SERVER.equals(((JobEvent)event).getExecutingServer()));
  Assert.assertTrue(DUMMY_EXECUTING_USER.equals(((JobEvent)event).getExecutingUser()));
  Assert.assertTrue(DUMMY_JOB_NAME.equals(((JobEvent)event).getName()));
  Assert.assertTrue(DUMMY_JOB_XML_CONTENT.equals(((JobEvent)event).getXml()));
  Assert.assertTrue(DUMMY_LOG_CHANNEL_ID.equals(((JobEvent)event).getLogChannelId()));
  Assert.assertTrue(DUMMY_BATCH_ID == ((JobEvent)event).getBatchId());
  Assert.assertTrue(EventType.Job.FINISHED.getSnmpId() == ((JobEvent)event).getStatus());
  Assert.assertTrue(DUMMY_START_DATE.getTime() == ((JobEvent)event).getStartTimeMillis());
  Assert.assertTrue(((JobEvent)event).getEndTimeMillis() > DUMMY_START_DATE.getTime());
  Assert.assertTrue(((JobEvent)event).getRuntimeInMillis() > 0);
}
