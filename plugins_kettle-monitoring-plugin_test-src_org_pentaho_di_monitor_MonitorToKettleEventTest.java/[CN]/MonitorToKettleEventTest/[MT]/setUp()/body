{
  carteStartupMonitor=mock(CarteStartupMonitor.class);
  when(carteStartupMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(carteStartupMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  carteShutdownMonitor=mock(CarteShutdownMonitor.class);
  when(carteShutdownMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(carteShutdownMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  databaseConnectedMonitor=mock(DatabaseConnectedMonitor.class);
  when(databaseConnectedMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(databaseConnectedMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  databaseDisconnectedMonitor=mock(DatabaseDisconnectedMonitor.class);
  when(databaseDisconnectedMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(databaseDisconnectedMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  jobStartMonitor=mock(JobStartMonitor.class);
  when(jobStartMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(jobStartMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  jobFinishMonitor=mock(JobFinishMonitor.class);
  when(jobFinishMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(jobFinishMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  jobMetaLoadedMonitor=mock(JobMetaLoadedMonitor.class);
  when(jobMetaLoadedMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(jobMetaLoadedMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  transformationPrepareExecutionMonitor=mock(TransformationPrepareExecutionMonitor.class);
  when(transformationPrepareExecutionMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(transformationPrepareExecutionMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  transformationStartMonitor=mock(TransformationStartMonitor.class);
  when(transformationStartMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(transformationStartMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  transformationFinishMonitor=mock(TransformationFinishMonitor.class);
  when(transformationFinishMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(transformationFinishMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  stepBeforeInitializeMonitor=mock(StepBeforeInitializeMonitor.class);
  when(stepBeforeInitializeMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(stepBeforeInitializeMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  stepAfterInitializeMonitor=mock(StepAfterInitializeMonitor.class);
  when(stepAfterInitializeMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(stepAfterInitializeMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  stepBeforeStartMonitor=mock(StepBeforeStartMonitor.class);
  when(stepBeforeStartMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(stepBeforeStartMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
  stepFinishedMonitor=mock(StepFinishedMonitor.class);
  when(stepFinishedMonitor.getLogChannelInterface()).thenReturn(mockLogChannel);
  when(stepFinishedMonitor.toKettleEvent(anyObject())).thenCallRealMethod();
}
