{
  final String DUMMY_EXECUTING_SERVER="dummy.executing.server";
  final String DUMMY_EXECUTING_USER="dummy.executing.user";
  final String DUMMY_TRANS_NAME="dummy.job.name";
  final String DUMMY_TRANS_XML_CONTENT="<dummy-trans>content</dummy-trans>";
  Trans mockTrans=mock(Trans.class);
  TransMeta mockTransMeta=mock(TransMeta.class);
  when(mockTrans.getExecutingServer()).thenReturn(DUMMY_EXECUTING_SERVER);
  when(mockTrans.getExecutingUser()).thenReturn(DUMMY_EXECUTING_USER);
  when(mockTransMeta.getName()).thenReturn(DUMMY_TRANS_NAME);
  when(mockTransMeta.getXML()).thenReturn(DUMMY_TRANS_XML_CONTENT);
  when(mockTrans.getTransMeta()).thenReturn(mockTransMeta);
  Assert.assertNull(transformationPrepareExecutionMonitor.toKettleEvent(new String("not a Trans Object")));
  Assert.assertNull(transformationStartMonitor.toKettleEvent(new String("not a Trans Meta Object")));
  Assert.assertNull(transformationFinishMonitor.toKettleEvent(new String("not a Trans Object")));
  IKettleMonitoringEvent event=transformationPrepareExecutionMonitor.toKettleEvent(mockTrans);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof TransformationEvent);
  Assert.assertTrue(EventType.Transformation.BEGIN_PREPARE_EXECUTION == ((TransformationEvent)event).getEventType());
  Assert.assertTrue(DUMMY_EXECUTING_SERVER.equals(((TransformationEvent)event).getExecutingServer()));
  Assert.assertTrue(DUMMY_EXECUTING_USER.equals(((TransformationEvent)event).getExecutingUser()));
  Assert.assertTrue(DUMMY_TRANS_NAME.equals(((TransformationEvent)event).getName()));
  Assert.assertTrue(DUMMY_TRANS_XML_CONTENT.equals(((TransformationEvent)event).getXml()));
  event=transformationStartMonitor.toKettleEvent(mockTrans);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof TransformationEvent);
  Assert.assertTrue(EventType.Transformation.STARTED == ((TransformationEvent)event).getEventType());
  Assert.assertTrue(DUMMY_EXECUTING_SERVER.equals(((TransformationEvent)event).getExecutingServer()));
  Assert.assertTrue(DUMMY_EXECUTING_USER.equals(((TransformationEvent)event).getExecutingUser()));
  Assert.assertTrue(DUMMY_TRANS_NAME.equals(((TransformationEvent)event).getName()));
  Assert.assertTrue(DUMMY_TRANS_XML_CONTENT.equals(((TransformationEvent)event).getXml()));
  event=transformationFinishMonitor.toKettleEvent(mockTrans);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof TransformationEvent);
  Assert.assertTrue(EventType.Transformation.FINISHED == ((TransformationEvent)event).getEventType());
  Assert.assertTrue(DUMMY_EXECUTING_SERVER.equals(((TransformationEvent)event).getExecutingServer()));
  Assert.assertTrue(DUMMY_EXECUTING_USER.equals(((TransformationEvent)event).getExecutingUser()));
  Assert.assertTrue(DUMMY_TRANS_NAME.equals(((TransformationEvent)event).getName()));
  Assert.assertTrue(DUMMY_TRANS_XML_CONTENT.equals(((TransformationEvent)event).getXml()));
}
