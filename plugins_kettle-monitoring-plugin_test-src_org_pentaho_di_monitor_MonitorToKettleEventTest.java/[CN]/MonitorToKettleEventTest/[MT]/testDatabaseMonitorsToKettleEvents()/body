{
  final String DUMMY_CONNECTION_URL="dummy.connection.url";
  final String DUMMY_DATABASE_NAME="dummy.database.name";
  final String DUMMY_DRIVER_CLASS="dummy.driver.class";
  Database mockDatabase=mock(Database.class);
  DatabaseMeta mockDatabaseMeta=mock(DatabaseMeta.class);
  when(mockDatabaseMeta.getURL()).thenReturn(DUMMY_CONNECTION_URL);
  when(mockDatabaseMeta.getDatabaseName()).thenReturn(DUMMY_DATABASE_NAME);
  when(mockDatabaseMeta.getDriverClass()).thenReturn(DUMMY_DRIVER_CLASS);
  when(mockDatabase.getDatabaseMeta()).thenReturn(mockDatabaseMeta);
  Assert.assertNull(databaseConnectedMonitor.toKettleEvent(new String("not a Database Object")));
  Assert.assertNull(databaseDisconnectedMonitor.toKettleEvent(new String("not a Database Object")));
  IKettleMonitoringEvent event=databaseConnectedMonitor.toKettleEvent(mockDatabase);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof DatabaseEvent);
  Assert.assertTrue(EventType.Database.CONNECTED == ((DatabaseEvent)event).getEventType());
  Assert.assertTrue(DUMMY_CONNECTION_URL.equals(((DatabaseEvent)event).getConnectionUrl()));
  Assert.assertTrue(DUMMY_DATABASE_NAME == ((DatabaseEvent)event).getDatabaseName());
  Assert.assertTrue(DUMMY_DRIVER_CLASS == ((DatabaseEvent)event).getDriver());
  event=databaseDisconnectedMonitor.toKettleEvent(mockDatabase);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof DatabaseEvent);
  Assert.assertTrue(EventType.Database.DISCONNECTED == ((DatabaseEvent)event).getEventType());
  Assert.assertTrue(DUMMY_CONNECTION_URL.equals(((DatabaseEvent)event).getConnectionUrl()));
  Assert.assertTrue(DUMMY_DATABASE_NAME == ((DatabaseEvent)event).getDatabaseName());
  Assert.assertTrue(DUMMY_DRIVER_CLASS == ((DatabaseEvent)event).getDriver());
}
