{
  final String DUMMY_CONNECTION_URL="dummy.connection.url";
  final String DUMMY_DATABASE_NAME="dummy.database.name";
  final String DUMMY_DATABASE_HOSTNAME="dummy.localhost";
  final String DUMMY_DATABASE_PORT_AS_STRING="1234";
  final String DUMMY_DRIVER_CLASS_NAME="dummy.driver.class.name";
  final String DUMMY_DATABASE_TYPE="postgres";
  final int DUMMY_DATABASE_ACCESS_TYPE_INT=DatabaseMeta.TYPE_ACCESS_NATIVE;
  final String DUMMY_DATABASE_ACCESS_TYPE_NAME=DatabaseMeta.getAccessTypeDesc(DUMMY_DATABASE_ACCESS_TYPE_INT);
  final int DUMMY_POOL_SIZE=10;
  Database mockDatabase=mock(Database.class);
  DatabaseMeta mockDatabaseMeta=mock(DatabaseMeta.class);
  DatabaseMetaData mockDatabaseMetaData=mock(DatabaseMetaData.class);
  DatabaseInterface mockDatabaseInterface=mock(DatabaseInterface.class);
  when(mockDatabaseMeta.getURL()).thenReturn(DUMMY_CONNECTION_URL);
  when(mockDatabaseMeta.getDatabaseName()).thenReturn(DUMMY_DATABASE_NAME);
  when(mockDatabaseMeta.getHostname()).thenReturn(DUMMY_DATABASE_HOSTNAME);
  when(mockDatabaseMeta.getDatabasePortNumberString()).thenReturn(DUMMY_DATABASE_PORT_AS_STRING);
  when(mockDatabaseMeta.getInitialPoolSize()).thenReturn(DUMMY_POOL_SIZE);
  when(mockDatabaseMeta.getMaximumPoolSize()).thenReturn(DUMMY_POOL_SIZE * 2);
  when(mockDatabaseMetaData.getDriverName()).thenReturn(DUMMY_DRIVER_CLASS_NAME);
  when(mockDatabaseInterface.getPluginName()).thenReturn(DUMMY_DATABASE_TYPE);
  when(mockDatabaseInterface.getAccessType()).thenReturn(DUMMY_DATABASE_ACCESS_TYPE_INT);
  when(mockDatabaseMeta.getDatabaseInterface()).thenReturn(mockDatabaseInterface);
  when(mockDatabase.getDatabaseMeta()).thenReturn(mockDatabaseMeta);
  when(mockDatabase.getDatabaseMetaData()).thenReturn(mockDatabaseMetaData);
  Assert.assertNull(databaseConnectedMonitor.toKettleEvent(new String("not a Database Object")));
  Assert.assertNull(databaseDisconnectedMonitor.toKettleEvent(new String("not a Database Object")));
  IKettleMonitoringEvent event=databaseConnectedMonitor.toKettleEvent(mockDatabase);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof DatabaseEvent);
  Assert.assertTrue(EventType.Database.CONNECTED == ((DatabaseEvent)event).getEventType());
  Assert.assertTrue(DUMMY_CONNECTION_URL.equals(((DatabaseEvent)event).getConnectionUrl()));
  Assert.assertTrue(DUMMY_DATABASE_NAME == ((DatabaseEvent)event).getDatabaseName());
  Assert.assertTrue(DUMMY_DRIVER_CLASS_NAME == ((DatabaseEvent)event).getDriverName());
  Assert.assertTrue(DUMMY_DATABASE_HOSTNAME == ((DatabaseEvent)event).getHostname());
  Assert.assertTrue(Integer.parseInt(DUMMY_DATABASE_PORT_AS_STRING) == ((DatabaseEvent)event).getPort());
  Assert.assertTrue(EventType.Boolean.TRUE.getValue() == ((DatabaseEvent)event).getConnected());
  Assert.assertTrue(((DatabaseEvent)event).getInitialPoolSize() == DUMMY_POOL_SIZE);
  Assert.assertTrue(((DatabaseEvent)event).getMaxPoolSize() == (DUMMY_POOL_SIZE * 2));
  Assert.assertTrue(((DatabaseEvent)event).getDatabaseType().equals(DUMMY_DATABASE_TYPE));
  Assert.assertTrue(((DatabaseEvent)event).getDatabaseAccessType().equals(DUMMY_DATABASE_ACCESS_TYPE_NAME));
  event=databaseDisconnectedMonitor.toKettleEvent(mockDatabase);
  Assert.assertNotNull(event);
  Assert.assertTrue(event instanceof DatabaseEvent);
  Assert.assertTrue(EventType.Database.DISCONNECTED == ((DatabaseEvent)event).getEventType());
  Assert.assertTrue(DUMMY_CONNECTION_URL.equals(((DatabaseEvent)event).getConnectionUrl()));
  Assert.assertTrue(DUMMY_DATABASE_NAME == ((DatabaseEvent)event).getDatabaseName());
  Assert.assertTrue(DUMMY_DRIVER_CLASS_NAME == ((DatabaseEvent)event).getDriverName());
  Assert.assertTrue(DUMMY_DATABASE_HOSTNAME == ((DatabaseEvent)event).getHostname());
  Assert.assertTrue(Integer.parseInt(DUMMY_DATABASE_PORT_AS_STRING) == ((DatabaseEvent)event).getPort());
  Assert.assertTrue(EventType.Boolean.FALSE.getValue() == ((DatabaseEvent)event).getConnected());
  Assert.assertTrue(((DatabaseEvent)event).getInitialPoolSize() == DUMMY_POOL_SIZE);
  Assert.assertTrue(((DatabaseEvent)event).getMaxPoolSize() == (DUMMY_POOL_SIZE * 2));
  Assert.assertTrue(((DatabaseEvent)event).getDatabaseType().equals(DUMMY_DATABASE_TYPE));
  Assert.assertTrue(((DatabaseEvent)event).getDatabaseAccessType().equals(DUMMY_DATABASE_ACCESS_TYPE_NAME));
}
