{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    String dbname=XMLHandler.getTagValue(entrynode,"connection");
    this.connection=DatabaseMeta.findDatabase(databases,dbname);
    this.argFromPrevious="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"arg_from_previous"));
    Node fields=XMLHandler.getSubNode(entrynode,"fields");
    int nrFields=XMLHandler.countNodes(fields,"field");
    allocate(nrFields);
    for (int i=0; i < nrFields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      this.arguments[i]=XMLHandler.getTagValue(fnode,"name");
      this.schemaname[i]=XMLHandler.getTagValue(fnode,"schemaname");
    }
  }
 catch (  KettleException e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"JobEntryTruncateTables.UnableLoadXML"),e);
  }
}
