{
  Value vs=new Value("Name",Value.VALUE_TYPE_NUMBER);
  assertFalse(vs.isNull());
  assertFalse(vs.isEmpty());
  assertEquals("Name",vs.getName());
  assertEquals(Value.VALUE_TYPE_NUMBER,vs.getType());
  assertTrue(vs.isNumber());
  assertTrue(vs.isNumeric());
  Value vs1=new Value("Name",Value.VALUE_TYPE_STRING);
  assertFalse(vs1.isNull());
  assertFalse(vs1.isEmpty());
  assertEquals("Name",vs1.getName());
  assertEquals(Value.VALUE_TYPE_STRING,vs1.getType());
  assertTrue(vs1.isString());
  Value vs2=new Value("Name",Value.VALUE_TYPE_DATE);
  assertFalse(vs2.isNull());
  assertFalse(vs2.isEmpty());
  assertEquals("Name",vs2.getName());
  assertEquals(Value.VALUE_TYPE_DATE,vs2.getType());
  assertTrue(vs2.isDate());
  Value vs3=new Value("Name",Value.VALUE_TYPE_BOOLEAN);
  assertFalse(vs3.isNull());
  assertFalse(vs3.isEmpty());
  assertEquals("Name",vs3.getName());
  assertEquals(Value.VALUE_TYPE_BOOLEAN,vs3.getType());
  assertTrue(vs3.isBoolean());
  Value vs4=new Value("Name",Value.VALUE_TYPE_INTEGER);
  assertFalse(vs4.isNull());
  assertFalse(vs4.isEmpty());
  assertEquals("Name",vs4.getName());
  assertEquals(Value.VALUE_TYPE_INTEGER,vs4.getType());
  assertTrue(vs4.isInteger());
  assertTrue(vs4.isNumeric());
  Value vs5=new Value("Name",Value.VALUE_TYPE_BIGNUMBER);
  assertFalse(vs5.isNull());
  assertFalse(vs5.isEmpty());
  assertEquals("Name",vs5.getName());
  assertEquals(Value.VALUE_TYPE_BIGNUMBER,vs5.getType());
  assertTrue(vs5.isBigNumber());
  assertTrue(vs5.isNumeric());
  Value vs6=new Value("Name",1000000);
  assertEquals(Value.VALUE_TYPE_NONE,vs6.getType());
}
