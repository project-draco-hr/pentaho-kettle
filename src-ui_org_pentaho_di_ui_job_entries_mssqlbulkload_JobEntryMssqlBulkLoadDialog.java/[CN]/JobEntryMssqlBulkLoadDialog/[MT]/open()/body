{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobMssqlBulkLoad.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobMssqlBulkLoad.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,0);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wConnection=addConnectionLine(shell,wName,middle,margin);
  if (jobEntry.getDatabase() == null && jobMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSchemaname=new Label(shell,SWT.RIGHT);
  wlSchemaname.setText(Messages.getString("JobMssqlBulkLoad.Schemaname.Label"));
  props.setLook(wlSchemaname);
  fdlSchemaname=new FormData();
  fdlSchemaname.left=new FormAttachment(0,0);
  fdlSchemaname.right=new FormAttachment(middle,0);
  fdlSchemaname.top=new FormAttachment(wConnection,margin);
  wlSchemaname.setLayoutData(fdlSchemaname);
  wSchemaname=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchemaname);
  wSchemaname.setToolTipText(Messages.getString("JobMssqlBulkLoad.Schemaname.Tooltip"));
  wSchemaname.addModifyListener(lsMod);
  fdSchemaname=new FormData();
  fdSchemaname.left=new FormAttachment(middle,0);
  fdSchemaname.top=new FormAttachment(wConnection,margin);
  fdSchemaname.right=new FormAttachment(100,0);
  wSchemaname.setLayoutData(fdSchemaname);
  wlTablename=new Label(shell,SWT.RIGHT);
  wlTablename.setText(Messages.getString("JobMssqlBulkLoad.Tablename.Label"));
  props.setLook(wlTablename);
  fdlTablename=new FormData();
  fdlTablename.left=new FormAttachment(0,0);
  fdlTablename.right=new FormAttachment(middle,0);
  fdlTablename.top=new FormAttachment(wSchemaname,margin);
  wlTablename.setLayoutData(fdlTablename);
  wbTable=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(Messages.getString("System.Button.Browse"));
  FormData fdbTable=new FormData();
  fdbTable.right=new FormAttachment(100,0);
  fdbTable.top=new FormAttachment(wSchemaname,margin / 2);
  wbTable.setLayoutData(fdbTable);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wTablename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTablename);
  wTablename.addModifyListener(lsMod);
  fdTablename=new FormData();
  fdTablename.left=new FormAttachment(middle,0);
  fdTablename.top=new FormAttachment(wSchemaname,margin);
  fdTablename.right=new FormAttachment(wbTable,-margin);
  wTablename.setLayoutData(fdTablename);
  wlFilename=new Label(shell,SWT.RIGHT);
  wlFilename.setText(Messages.getString("JobMssqlBulkLoad.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wTablename,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(Messages.getString("System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wTablename,0);
  wbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(wTablename,margin);
  fdFilename.right=new FormAttachment(wbFilename,-margin);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(jobMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.txt","*.csv","*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlDataFiletype=new Label(shell,SWT.RIGHT);
  wlDataFiletype.setText(Messages.getString("JobMysqlBulkLoad.DataFiletype.Label"));
  props.setLook(wlDataFiletype);
  fdlDataFiletype=new FormData();
  fdlDataFiletype.left=new FormAttachment(0,0);
  fdlDataFiletype.right=new FormAttachment(middle,0);
  fdlDataFiletype.top=new FormAttachment(wFilename,margin);
  wlDataFiletype.setLayoutData(fdlDataFiletype);
  wDataFiletype=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wDataFiletype.add("char");
  wDataFiletype.add("native");
  wDataFiletype.add("widechar");
  wDataFiletype.add("widenative");
  wDataFiletype.select(0);
  props.setLook(wDataFiletype);
  fdDataFiletype=new FormData();
  fdDataFiletype.left=new FormAttachment(middle,0);
  fdDataFiletype.top=new FormAttachment(wFilename,margin);
  fdDataFiletype.right=new FormAttachment(100,0);
  wDataFiletype.setLayoutData(fdDataFiletype);
  wDataFiletype.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setDataType();
    }
  }
);
  wlFieldTerminator=new Label(shell,SWT.RIGHT);
  wlFieldTerminator.setText(Messages.getString("JobMssqlBulkLoad.FieldTerminator.Label"));
  props.setLook(wlFieldTerminator);
  fdlFieldTerminator=new FormData();
  fdlFieldTerminator.left=new FormAttachment(0,0);
  fdlFieldTerminator.right=new FormAttachment(middle,0);
  fdlFieldTerminator.top=new FormAttachment(wDataFiletype,margin);
  wlFieldTerminator.setLayoutData(fdlFieldTerminator);
  wFieldTerminator=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFieldTerminator);
  wFieldTerminator.setToolTipText(Messages.getString("JobMssqlBulkLoad.FieldTerminator.Tooltip"));
  wFieldTerminator.addModifyListener(lsMod);
  fdFieldTerminator=new FormData();
  fdFieldTerminator.left=new FormAttachment(middle,0);
  fdFieldTerminator.top=new FormAttachment(wDataFiletype,margin);
  fdFieldTerminator.right=new FormAttachment(100,0);
  wFieldTerminator.setLayoutData(fdFieldTerminator);
  wlLineterminated=new Label(shell,SWT.RIGHT);
  wlLineterminated.setText(Messages.getString("JobMssqlBulkLoad.Lineterminated.Label"));
  props.setLook(wlLineterminated);
  fdlLineterminated=new FormData();
  fdlLineterminated.left=new FormAttachment(0,0);
  fdlLineterminated.right=new FormAttachment(middle,0);
  fdlLineterminated.top=new FormAttachment(wFieldTerminator,margin);
  wlLineterminated.setLayoutData(fdlLineterminated);
  wLineterminated=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLineterminated);
  wLineterminated.addModifyListener(lsMod);
  fdLineterminated=new FormData();
  fdLineterminated.left=new FormAttachment(middle,0);
  fdLineterminated.top=new FormAttachment(wFieldTerminator,margin);
  fdLineterminated.right=new FormAttachment(100,0);
  wLineterminated.setLayoutData(fdLineterminated);
  wlCodePage=new Label(shell,SWT.RIGHT);
  wlCodePage.setText(Messages.getString("JobMysqlBulkLoad.CodePage.Label"));
  props.setLook(wlCodePage);
  fdlCodePage=new FormData();
  fdlCodePage.left=new FormAttachment(0,0);
  fdlCodePage.right=new FormAttachment(middle,0);
  fdlCodePage.top=new FormAttachment(wLineterminated,margin);
  wlCodePage.setLayoutData(fdlCodePage);
  wCodePage=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wCodePage.add("ACP");
  wCodePage.add("OEM");
  wCodePage.add("RAW");
  wCodePage.add(Messages.getString("JobMssqlBulkLoad.CodePage.Specific"));
  wCodePage.select(0);
  props.setLook(wCodePage);
  fdCodePage=new FormData();
  fdCodePage.left=new FormAttachment(middle,0);
  fdCodePage.top=new FormAttachment(wLineterminated,margin);
  fdCodePage.right=new FormAttachment(100,0);
  wCodePage.setLayoutData(fdCodePage);
  wCodePage.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setCodeType();
    }
  }
);
  wlSpecificCodePage=new Label(shell,SWT.RIGHT);
  wlSpecificCodePage.setText(Messages.getString("JobMssqlBulkLoad.SpecificCodePage.Label"));
  props.setLook(wlSpecificCodePage);
  fdlSpecificCodePage=new FormData();
  fdlSpecificCodePage.left=new FormAttachment(0,0);
  fdlSpecificCodePage.right=new FormAttachment(middle,0);
  fdlSpecificCodePage.top=new FormAttachment(wCodePage,margin);
  wlSpecificCodePage.setLayoutData(fdlSpecificCodePage);
  wSpecificCodePage=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSpecificCodePage);
  wSpecificCodePage.addModifyListener(lsMod);
  fdSpecificCodePage=new FormData();
  fdSpecificCodePage.left=new FormAttachment(middle,0);
  fdSpecificCodePage.top=new FormAttachment(wCodePage,margin);
  fdSpecificCodePage.right=new FormAttachment(100,0);
  wSpecificCodePage.setLayoutData(fdSpecificCodePage);
  wlFortmatFilename=new Label(shell,SWT.RIGHT);
  wlFortmatFilename.setText(Messages.getString("JobMssqlBulkLoad.FortmatFilename.Label"));
  props.setLook(wlFortmatFilename);
  fdlFortmatFilename=new FormData();
  fdlFortmatFilename.left=new FormAttachment(0,0);
  fdlFortmatFilename.top=new FormAttachment(wSpecificCodePage,margin);
  fdlFortmatFilename.right=new FormAttachment(middle,-margin);
  wlFortmatFilename.setLayoutData(fdlFortmatFilename);
  wbFortmatFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFortmatFilename);
  wbFortmatFilename.setText(Messages.getString("System.Button.Browse"));
  fdbFortmatFilename=new FormData();
  fdbFortmatFilename.right=new FormAttachment(100,0);
  fdbFortmatFilename.top=new FormAttachment(wSpecificCodePage,0);
  wbFortmatFilename.setLayoutData(fdbFortmatFilename);
  wFortmatFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFortmatFilename);
  wFortmatFilename.setToolTipText(Messages.getString("JobMssqlBulkLoad.FortmatFilename.Tooltip"));
  wFortmatFilename.addModifyListener(lsMod);
  fdFortmatFilename=new FormData();
  fdFortmatFilename.left=new FormAttachment(middle,0);
  fdFortmatFilename.top=new FormAttachment(wSpecificCodePage,margin);
  fdFortmatFilename.right=new FormAttachment(wbFortmatFilename,-margin);
  wFortmatFilename.setLayoutData(fdFortmatFilename);
  wFortmatFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFortmatFilename.setToolTipText(jobMeta.environmentSubstitute(wFortmatFilename.getText()));
    }
  }
);
  wbFortmatFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.txt","*.csv","*"});
      if (wFortmatFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wFortmatFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wFortmatFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlFireTriggers=new Label(shell,SWT.RIGHT);
  wlFireTriggers.setText(Messages.getString("JobMssqlBulkLoad.FireTriggers.Label"));
  props.setLook(wlFireTriggers);
  fdlFireTriggers=new FormData();
  fdlFireTriggers.left=new FormAttachment(0,0);
  fdlFireTriggers.top=new FormAttachment(wFortmatFilename,margin);
  fdlFireTriggers.right=new FormAttachment(middle,-margin);
  wlFireTriggers.setLayoutData(fdlFireTriggers);
  wFireTriggers=new Button(shell,SWT.CHECK);
  props.setLook(wFireTriggers);
  wFireTriggers.setToolTipText(Messages.getString("JobMssqlBulkLoad.FireTriggers.Tooltip"));
  fdFireTriggers=new FormData();
  fdFireTriggers.left=new FormAttachment(middle,0);
  fdFireTriggers.top=new FormAttachment(wFortmatFilename,margin);
  fdFireTriggers.right=new FormAttachment(100,0);
  wFireTriggers.setLayoutData(fdFireTriggers);
  wFireTriggers.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlCheckConstraints=new Label(shell,SWT.RIGHT);
  wlCheckConstraints.setText(Messages.getString("JobMssqlBulkLoad.CheckConstraints.Label"));
  props.setLook(wlCheckConstraints);
  fdlCheckConstraints=new FormData();
  fdlCheckConstraints.left=new FormAttachment(0,0);
  fdlCheckConstraints.top=new FormAttachment(wFireTriggers,margin);
  fdlCheckConstraints.right=new FormAttachment(middle,-margin);
  wlCheckConstraints.setLayoutData(fdlCheckConstraints);
  wCheckConstraints=new Button(shell,SWT.CHECK);
  props.setLook(wCheckConstraints);
  wCheckConstraints.setToolTipText(Messages.getString("JobMssqlBulkLoad.CheckConstraints.Tooltip"));
  fdCheckConstraints=new FormData();
  fdCheckConstraints.left=new FormAttachment(middle,0);
  fdCheckConstraints.top=new FormAttachment(wFireTriggers,margin);
  fdCheckConstraints.right=new FormAttachment(100,0);
  wCheckConstraints.setLayoutData(fdCheckConstraints);
  wCheckConstraints.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlKeepNulls=new Label(shell,SWT.RIGHT);
  wlKeepNulls.setText(Messages.getString("JobMssqlBulkLoad.KeepNulls.Label"));
  props.setLook(wlKeepNulls);
  fdlKeepNulls=new FormData();
  fdlKeepNulls.left=new FormAttachment(0,0);
  fdlKeepNulls.top=new FormAttachment(wCheckConstraints,margin);
  fdlKeepNulls.right=new FormAttachment(middle,-margin);
  wlKeepNulls.setLayoutData(fdlKeepNulls);
  wKeepNulls=new Button(shell,SWT.CHECK);
  props.setLook(wKeepNulls);
  wKeepNulls.setToolTipText(Messages.getString("JobMssqlBulkLoad.KeepNulls.Tooltip"));
  fdKeepNulls=new FormData();
  fdKeepNulls.left=new FormAttachment(middle,0);
  fdKeepNulls.top=new FormAttachment(wCheckConstraints,margin);
  fdKeepNulls.right=new FormAttachment(100,0);
  wKeepNulls.setLayoutData(fdKeepNulls);
  wKeepNulls.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlTablock=new Label(shell,SWT.RIGHT);
  wlTablock.setText(Messages.getString("JobMssqlBulkLoad.Tablock.Label"));
  props.setLook(wlTablock);
  fdlTablock=new FormData();
  fdlTablock.left=new FormAttachment(0,0);
  fdlTablock.top=new FormAttachment(wKeepNulls,margin);
  fdlTablock.right=new FormAttachment(middle,-margin);
  wlTablock.setLayoutData(fdlTablock);
  wTablock=new Button(shell,SWT.CHECK);
  props.setLook(wTablock);
  wTablock.setToolTipText(Messages.getString("JobMssqlBulkLoad.Tablock.Tooltip"));
  fdTablock=new FormData();
  fdTablock.left=new FormAttachment(middle,0);
  fdTablock.top=new FormAttachment(wKeepNulls,margin);
  fdTablock.right=new FormAttachment(100,0);
  wTablock.setLayoutData(fdTablock);
  wTablock.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlStartFile=new Label(shell,SWT.RIGHT);
  wlStartFile.setText(Messages.getString("JobMssqlBulkLoad.StartFile.Label"));
  props.setLook(wlStartFile);
  fdlStartFile=new FormData();
  fdlStartFile.left=new FormAttachment(0,0);
  fdlStartFile.right=new FormAttachment(middle,0);
  fdlStartFile.top=new FormAttachment(wTablock,margin);
  wlStartFile.setLayoutData(fdlStartFile);
  wStartFile=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wStartFile);
  wStartFile.setToolTipText(Messages.getString("JobMssqlBulkLoad.StartFile.Tooltip"));
  wStartFile.addModifyListener(lsMod);
  fdStartFile=new FormData();
  fdStartFile.left=new FormAttachment(middle,0);
  fdStartFile.top=new FormAttachment(wTablock,margin);
  fdStartFile.right=new FormAttachment(100,0);
  wStartFile.setLayoutData(fdStartFile);
  wlEndFile=new Label(shell,SWT.RIGHT);
  wlEndFile.setText(Messages.getString("JobMssqlBulkLoad.EndFile.Label"));
  props.setLook(wlEndFile);
  fdlEndFile=new FormData();
  fdlEndFile.left=new FormAttachment(0,0);
  fdlEndFile.right=new FormAttachment(middle,0);
  fdlEndFile.top=new FormAttachment(wStartFile,margin);
  wlEndFile.setLayoutData(fdlEndFile);
  wEndFile=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEndFile);
  wEndFile.setToolTipText(Messages.getString("JobMssqlBulkLoad.EndFile.Tooltip"));
  wEndFile.addModifyListener(lsMod);
  fdEndFile=new FormData();
  fdEndFile.left=new FormAttachment(middle,0);
  fdEndFile.top=new FormAttachment(wStartFile,margin);
  fdEndFile.right=new FormAttachment(100,0);
  wEndFile.setLayoutData(fdEndFile);
  wlOrderBy=new Label(shell,SWT.RIGHT);
  wlOrderBy.setText(Messages.getString("JobMssqlBulkLoad.OrderBy.Label"));
  props.setLook(wlOrderBy);
  fdlOrderBy=new FormData();
  fdlOrderBy.left=new FormAttachment(0,0);
  fdlOrderBy.right=new FormAttachment(middle,0);
  fdlOrderBy.top=new FormAttachment(wEndFile,margin);
  wlOrderBy.setLayoutData(fdlOrderBy);
  wbOrderBy=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbOrderBy);
  wbOrderBy.setText(Messages.getString("System.Button.Edit"));
  FormData fdbListattribut=new FormData();
  fdbListattribut.right=new FormAttachment(100,0);
  fdbListattribut.top=new FormAttachment(wEndFile,margin);
  wbOrderBy.setLayoutData(fdbListattribut);
  wbOrderBy.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getListColumns();
    }
  }
);
  wOrderBy=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wOrderBy);
  wOrderBy.setToolTipText(Messages.getString("JobMssqlBulkLoad.OrderBy.Tooltip"));
  wOrderBy.addModifyListener(lsMod);
  fdOrderBy=new FormData();
  fdOrderBy.left=new FormAttachment(middle,0);
  fdOrderBy.top=new FormAttachment(wEndFile,margin);
  fdOrderBy.right=new FormAttachment(wbOrderBy,-margin);
  wOrderBy.setLayoutData(fdOrderBy);
  wlOrderDirection=new Label(shell,SWT.RIGHT);
  wlOrderDirection.setText(Messages.getString("JobMysqlBulkLoad.OrderDirection.Label"));
  props.setLook(wlOrderDirection);
  fdlOrderDirection=new FormData();
  fdlOrderDirection.left=new FormAttachment(0,0);
  fdlOrderDirection.right=new FormAttachment(middle,0);
  fdlOrderDirection.top=new FormAttachment(wOrderBy,margin);
  wlOrderDirection.setLayoutData(fdlOrderDirection);
  wOrderDirection=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wOrderDirection.add(Messages.getString("JobMysqlBulkLoad.OrderDirectionAsc.Label"));
  wOrderDirection.add(Messages.getString("JobMysqlBulkLoad.OrderDirectionDesc.Label"));
  wOrderDirection.select(0);
  props.setLook(wOrderDirection);
  fdOrderDirection=new FormData();
  fdOrderDirection.left=new FormAttachment(middle,0);
  fdOrderDirection.top=new FormAttachment(wOrderBy,margin);
  fdOrderDirection.right=new FormAttachment(100,0);
  wOrderDirection.setLayoutData(fdOrderDirection);
  wlErrorFilename=new Label(shell,SWT.RIGHT);
  wlErrorFilename.setText(Messages.getString("JobMysqlBulkLoad.ErrorFilename.Label"));
  props.setLook(wlErrorFilename);
  fdlErrorFilename=new FormData();
  fdlErrorFilename.left=new FormAttachment(0,0);
  fdlErrorFilename.top=new FormAttachment(wOrderDirection,margin);
  fdlErrorFilename.right=new FormAttachment(middle,-margin);
  wlErrorFilename.setLayoutData(fdlErrorFilename);
  wbErrorFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbErrorFilename);
  wbErrorFilename.setText(Messages.getString("System.Button.Browse"));
  fdbErrorFilename=new FormData();
  fdbErrorFilename.right=new FormAttachment(100,0);
  fdbErrorFilename.top=new FormAttachment(wOrderDirection,0);
  wbErrorFilename.setLayoutData(fdbErrorFilename);
  wErrorFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wErrorFilename);
  wErrorFilename.addModifyListener(lsMod);
  fdErrorFilename=new FormData();
  fdErrorFilename.left=new FormAttachment(middle,0);
  fdErrorFilename.top=new FormAttachment(wOrderDirection,margin);
  fdErrorFilename.right=new FormAttachment(wbErrorFilename,-margin);
  wErrorFilename.setLayoutData(fdErrorFilename);
  wErrorFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wErrorFilename.setToolTipText(jobMeta.environmentSubstitute(wErrorFilename.getText()));
    }
  }
);
  wbErrorFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog dialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wErrorFilename.getText() != null) {
        dialog.setFilterPath(jobMeta.environmentSubstitute(wErrorFilename.getText()));
      }
      String dir=dialog.open();
      if (dir != null) {
        wErrorFilename.setText(dir);
      }
    }
  }
);
  wlAddDateTime=new Label(shell,SWT.RIGHT);
  wlAddDateTime.setText(Messages.getString("JobMssqlBulkLoad.AddDateTime.Label"));
  props.setLook(wlAddDateTime);
  fdlAddDateTime=new FormData();
  fdlAddDateTime.left=new FormAttachment(0,0);
  fdlAddDateTime.top=new FormAttachment(wErrorFilename,margin);
  fdlAddDateTime.right=new FormAttachment(middle,-margin);
  wlAddDateTime.setLayoutData(fdlAddDateTime);
  wAddDateTime=new Button(shell,SWT.CHECK);
  props.setLook(wAddDateTime);
  wAddDateTime.setToolTipText(Messages.getString("JobMssqlBulkLoad.AddDateTime.Tooltip"));
  fdAddDateTime=new FormData();
  fdAddDateTime.left=new FormAttachment(middle,0);
  fdAddDateTime.top=new FormAttachment(wErrorFilename,margin);
  fdAddDateTime.right=new FormAttachment(100,0);
  wAddDateTime.setLayoutData(fdAddDateTime);
  wAddDateTime.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlMaxErrors=new Label(shell,SWT.RIGHT);
  wlMaxErrors.setText(Messages.getString("JobMssqlBulkLoad.MaxErrors.Label"));
  props.setLook(wlMaxErrors);
  fdlMaxErrors=new FormData();
  fdlMaxErrors.left=new FormAttachment(0,0);
  fdlMaxErrors.right=new FormAttachment(middle,0);
  fdlMaxErrors.top=new FormAttachment(wAddDateTime,margin);
  wlMaxErrors.setLayoutData(fdlMaxErrors);
  wMaxErrors=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wMaxErrors);
  wlMaxErrors.setToolTipText(Messages.getString("JobMssqlBulkLoad.MaxErrors.Tooltip"));
  wMaxErrors.addModifyListener(lsMod);
  fdMaxErrors=new FormData();
  fdMaxErrors.left=new FormAttachment(middle,0);
  fdMaxErrors.top=new FormAttachment(wAddDateTime,margin);
  fdMaxErrors.right=new FormAttachment(100,0);
  wMaxErrors.setLayoutData(fdMaxErrors);
  wlBatchSize=new Label(shell,SWT.RIGHT);
  wlBatchSize.setText(Messages.getString("JobMssqlBulkLoad.BatchSize.Label"));
  props.setLook(wlBatchSize);
  fdlBatchSize=new FormData();
  fdlBatchSize.left=new FormAttachment(0,0);
  fdlBatchSize.right=new FormAttachment(middle,0);
  fdlBatchSize.top=new FormAttachment(wMaxErrors,margin);
  wlBatchSize.setLayoutData(fdlBatchSize);
  wBatchSize=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wBatchSize);
  wBatchSize.setToolTipText(Messages.getString("JobMssqlBulkLoad.BatchSize.Tooltip"));
  wBatchSize.addModifyListener(lsMod);
  fdBatchSize=new FormData();
  fdBatchSize.left=new FormAttachment(middle,0);
  fdBatchSize.top=new FormAttachment(wMaxErrors,margin);
  fdBatchSize.right=new FormAttachment(100,0);
  wBatchSize.setLayoutData(fdBatchSize);
  wlKiloPerBatch=new Label(shell,SWT.RIGHT);
  wlKiloPerBatch.setText(Messages.getString("JobMssqlBulkLoad.KiloPerBatch.Label"));
  props.setLook(wlKiloPerBatch);
  fdlKiloPerBatch=new FormData();
  fdlKiloPerBatch.left=new FormAttachment(0,0);
  fdlKiloPerBatch.right=new FormAttachment(middle,0);
  fdlKiloPerBatch.top=new FormAttachment(wBatchSize,margin);
  wlKiloPerBatch.setLayoutData(fdlKiloPerBatch);
  wKiloPerBatch=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wKiloPerBatch);
  wKiloPerBatch.setToolTipText(Messages.getString("JobMssqlBulkLoad.KiloPerBatch.Label"));
  wKiloPerBatch.addModifyListener(lsMod);
  fdKiloPerBatch=new FormData();
  fdKiloPerBatch.left=new FormAttachment(middle,0);
  fdKiloPerBatch.top=new FormAttachment(wBatchSize,margin);
  fdKiloPerBatch.right=new FormAttachment(100,0);
  wKiloPerBatch.setLayoutData(fdKiloPerBatch);
  wFileResult=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wFileResult);
  wFileResult.setText(Messages.getString("JobMssqlBulkLoad.FileResult.Group.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wFileResult.setLayout(groupLayout);
  wlAddFileToResult=new Label(wFileResult,SWT.RIGHT);
  wlAddFileToResult.setText(Messages.getString("JobMssqlBulkLoad.AddFileToResult.Label"));
  props.setLook(wlAddFileToResult);
  fdlAddFileToResult=new FormData();
  fdlAddFileToResult.left=new FormAttachment(0,0);
  fdlAddFileToResult.top=new FormAttachment(wKiloPerBatch,margin);
  fdlAddFileToResult.right=new FormAttachment(middle,-margin);
  wlAddFileToResult.setLayoutData(fdlAddFileToResult);
  wAddFileToResult=new Button(wFileResult,SWT.CHECK);
  props.setLook(wAddFileToResult);
  wAddFileToResult.setToolTipText(Messages.getString("JobMssqlBulkLoad.AddFileToResult.Tooltip"));
  fdAddFileToResult=new FormData();
  fdAddFileToResult.left=new FormAttachment(middle,0);
  fdAddFileToResult.top=new FormAttachment(wKiloPerBatch,margin);
  fdAddFileToResult.right=new FormAttachment(100,0);
  wAddFileToResult.setLayoutData(fdAddFileToResult);
  wAddFileToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdFileResult=new FormData();
  fdFileResult.left=new FormAttachment(0,margin);
  fdFileResult.top=new FormAttachment(wKiloPerBatch,margin);
  fdFileResult.right=new FormAttachment(100,-margin);
  wFileResult.setLayoutData(fdFileResult);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wFileResult);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wTablename.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setDataType();
  setCodeType();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobMssqlBulkLoadDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
