{
  if (data.bufferIndex == 0)   return;
  try {
    StringBuffer cmdBuff=new StringBuffer();
    if (meta.isTruncate()) {
      logBasic(BaseMessages.getString(PKG,"MonetDBBulkLoader.writeBufferToMonetDB - Truncating the destination table using SQL DELETE FROM syntax.",""));
      cmdBuff.append("DELETE FROM " + data.schemaTable + ";");
    }
    cmdBuff.append("COPY ").append(data.bufferIndex).append(" RECORDS INTO ").append(data.schemaTable).append(" FROM STDIN USING DELIMITERS '").append(new String(data.separator)).append("','" + Const.CR + "','").append(new String(data.quote)).append("' NULL AS '" + new String(data.nullrepresentation) + ";");
    String cmd=cmdBuff.toString();
    if (log.isDetailed())     logDetailed(cmd);
    data.out.write('s');
    data.out.write(cmdBuff.toString());
    data.out.newLine();
    for (int i=0; i < data.bufferIndex; i++) {
      String buffer=data.rowBuffer[i];
      data.out.write(buffer);
      if (log.isRowLevel())       logRowlevel(buffer);
    }
    String error=data.in.waitForPrompt();
    if (error != null) {
      throw new KettleException("Error loading data: " + error);
    }
    data.out.writeLine("");
    error=data.in.waitForPrompt();
    if (error != null) {
      throw new KettleException("Error loading data: " + error);
    }
    data.out.writeLine("");
    error=data.in.waitForPrompt();
    if (error != null) {
      throw new KettleException("Error loading data: " + error);
    }
    if (log.isRowLevel())     logRowlevel(Const.CR);
    data.bufferIndex=0;
  }
 catch (  Exception e) {
    throw new KettleException("An error occurred writing data to the MonetDB API (MAPI) process",e);
  }
}
