{
  StringBuffer sb=new StringBuffer(300);
  String osName=System.getProperty("os.name");
  boolean isWindows=osName.toLowerCase().indexOf("windows") != -1;
  if (!Const.isEmpty(meta.getMClientPath())) {
    try {
      FileObject fileObject=KettleVFS.getFileObject(environmentSubstitute(meta.getMClientPath()),getTransMeta());
      String psqlexec=KettleVFS.getFilename(fileObject);
      psqlexec=escapeOsPath(psqlexec,isWindows);
      sb.append(psqlexec);
    }
 catch (    KettleFileException ex) {
      throw new KettleException("Error retrieving mclient application string",ex);
    }
  }
 else {
    throw new KettleException("No mclient application specified");
  }
  String enclosure=isWindows ? "\"" : "";
  if (isWindows) {
    sb.append(" /STARTED-FROM-MENU");
  }
  if (lSql) {
    sb.append(" -lsql");
  }
  if (!Const.isEmpty(meta.getEncoding())) {
    sb.append(" ").append(enclosure).append("--encoding=");
    sb.append(environmentSubstitute(meta.getEncoding())).append(enclosure);
  }
  DatabaseMeta dm=meta.getDatabaseMeta();
  if (dm != null) {
    String hostname=environmentSubstitute(Const.NVL(dm.getHostname(),""));
    String portnum=environmentSubstitute(Const.NVL(dm.getDatabasePortNumberString(),""));
    String dbname=environmentSubstitute(Const.NVL(dm.getDatabaseName(),""));
    if (!Const.isEmpty(hostname)) {
      sb.append(" ").append(enclosure).append("--host=").append(hostname).append(enclosure);
    }
    if (!Const.isEmpty(portnum) && Const.toInt(portnum,-1) > 0) {
      sb.append(" ").append(enclosure).append("--port=").append(portnum).append(enclosure);
    }
    if (!Const.isEmpty(dbname)) {
      sb.append(" ").append(enclosure).append("--database=").append(dbname).append(enclosure);
    }
  }
 else {
    throw new KettleException("No connection specified");
  }
  return sb.toString();
}
