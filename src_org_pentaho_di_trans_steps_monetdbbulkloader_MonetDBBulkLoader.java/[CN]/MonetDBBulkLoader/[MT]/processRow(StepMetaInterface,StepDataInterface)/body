{
  meta=(MonetDBBulkLoaderMeta)smi;
  data=(MonetDBBulkLoaderData)sdi;
  try {
    Object[] r=getRow();
    if (r == null) {
      setOutputDone();
      writeBufferToMonetDB();
      if (data.monetOutputStream != null) {
        data.monetOutputStream.flush();
        data.monetOutputStream.close();
        int exitVal=data.mClientlProcess.waitFor();
        logBasic(BaseMessages.getString(PKG,"MonetDBBulkLoader.Log.ExitValuePsqlPath","" + exitVal));
      }
      util.updateMetadata(meta,rowsWritten);
      return false;
    }
    if (first) {
      first=false;
      data.keynrs=new int[meta.getFieldStream().length];
      for (int i=0; i < data.keynrs.length; i++) {
        data.keynrs[i]=getInputRowMeta().indexOfValue(meta.getFieldStream()[i]);
      }
      execute(meta,true);
    }
    writeRowToMonetDB(getInputRowMeta(),r);
    putRow(getInputRowMeta(),r);
    incrementLinesOutput();
    return true;
  }
 catch (  MonetDBRowLimitException me) {
    logDebug(me.getMessage());
    stopAll();
    setOutputDone();
    return true;
  }
catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"MonetDBBulkLoader.Log.ErrorInStep"),e);
    setErrors(1);
    stopAll();
    setOutputDone();
    return false;
  }
}
