{
  if (visited.add(new VisitedObject(obj))) {
    if (obj == null)     out.println(dotName(obj) + "[label=\"null\"" + ", shape=plaintext];");
 else {
      Class c=obj.getClass();
      if (c.isArray()) {
        if (ctx.looksLikePrimitiveArray(obj))         processPrimitiveArray(obj,out);
 else         processObjectArray(ctx,obj,out,visited);
      }
 else {
        Field[] fs=c.getDeclaredFields();
        if (!ctx.ignorePrivateFields)         AccessibleObject.setAccessible(fs,true);
        if (hasPrimitiveFields(ctx,fs,obj))         labelObjectWithSomePrimitiveFields(ctx,obj,fs,out);
 else         labelObjectWithNoPrimitiveFields(ctx,obj,out);
        processFields(ctx,obj,fs,out,visited);
      }
    }
  }
}
