{
  JobMeta jobMeta=jobGraph.getManagedObject();
  if (jobMeta != null && !Const.isEmpty(jobMeta.getName())) {
    if (jobMeta.getLogConnection() != null) {
      if (!Const.isEmpty(jobMeta.getLogTable())) {
        Database database=null;
        try {
          database=new Database(jobMeta.getLogConnection());
          database.shareVariablesWith(jobMeta);
          database.connect();
          RowMetaAndData params=new RowMetaAndData();
          params.addValue(new ValueMeta("transname",ValueMetaInterface.TYPE_STRING),jobMeta.getName());
          ResultSet resultSet=database.openQuery("SELECT * FROM " + jobMeta.getLogTable() + " WHERE JOBNAME = ? ORDER BY ID_JOB desc",params.getRowMeta(),params.getData());
          rowList=new ArrayList<RowMetaAndData>();
          Object[] rowData=database.getRow(resultSet);
          while (rowData != null) {
            RowMetaInterface rowMeta=database.getReturnRowMeta();
            rowList.add(new RowMetaAndData(rowMeta,rowData));
            rowData=database.getRow(resultSet);
          }
          database.closeQuery(resultSet);
          if (rowList.size() > 0) {
            RowMetaInterface displayMeta=null;
            if (wFields.table.isDisposed())             return;
            wFields.table.clearAll();
            for (int i=0; i < rowList.size(); i++) {
              RowMetaAndData row=rowList.get(i);
              if (displayMeta == null) {
                displayMeta=row.getRowMeta();
                for (int v=0; v < displayMeta.size(); v++) {
                  ValueMetaInterface valueMeta=displayMeta.getValueMeta(v);
                  if (valueMeta.isNumeric()) {
                    valueMeta.setLength(-1,-1);
                  }
                  if (valueMeta.isDate()) {
                    valueMeta.setConversionMask("yyyy/MM/dd HH:mm:ss");
                  }
                }
                colinf[0].setValueMeta(displayMeta.searchValueMeta("JOBNAME"));
                colinf[1].setValueMeta(displayMeta.searchValueMeta("ID_JOB"));
                colinf[2].setValueMeta(displayMeta.searchValueMeta("STATUS"));
                colinf[3].setValueMeta(durationMeta);
                colinf[4].setValueMeta(displayMeta.searchValueMeta("LINES_READ"));
                colinf[5].setValueMeta(displayMeta.searchValueMeta("LINES_WRITTEN"));
                colinf[6].setValueMeta(displayMeta.searchValueMeta("LINES_UPDATED"));
                colinf[7].setValueMeta(displayMeta.searchValueMeta("LINES_INPUT"));
                colinf[8].setValueMeta(displayMeta.searchValueMeta("LINES_OUTPUT"));
                colinf[9].setValueMeta(displayMeta.searchValueMeta("ERRORS"));
                colinf[10].setValueMeta(displayMeta.searchValueMeta("STARTDATE"));
                colinf[11].setValueMeta(displayMeta.searchValueMeta("ENDDATE"));
                colinf[12].setValueMeta(displayMeta.searchValueMeta("LOGDATE"));
                colinf[13].setValueMeta(displayMeta.searchValueMeta("DEPDATE"));
                replayDateMeta=displayMeta.searchValueMeta("REPLAYDATE");
                colinf[14].setValueMeta(replayDateMeta);
              }
              TableItem item=new TableItem(wFields.table,SWT.NONE);
              String batchID=row.getString("ID_JOB","");
              if (batchID != null)               item.setText(1,batchID);
              item.setText(2,Const.NVL(row.getString("STATUS",""),""));
              item.setText(3,Const.NVL(row.getString("LINES_READ",""),""));
              item.setText(4,Const.NVL(row.getString("LINES_WRITTEN",""),""));
              item.setText(5,Const.NVL(row.getString("LINES_UPDATED",""),""));
              item.setText(6,Const.NVL(row.getString("LINES_INPUT",""),""));
              item.setText(7,Const.NVL(row.getString("LINES_OUTPUT",""),""));
              item.setText(8,Const.NVL(row.getString("ERRORS",""),""));
              item.setText(9,Const.NVL(row.getString("STARTDATE",""),""));
              item.setText(10,Const.NVL(row.getString("ENDDATE",""),""));
              item.setText(11,Const.NVL(row.getString("LOGDATE",""),""));
              item.setText(12,Const.NVL(row.getString("DEPDATE",""),""));
              String replayDate=row.getString("REPLAYDATE","");
              if (replayDate == null)               replayDate=Const.NULL_STRING;
              item.setText(13,replayDate);
            }
            wFields.removeEmptyRows();
            wFields.setRowNums();
            wFields.optWidth(true);
            wFields.table.setSelection(0);
            showLogEntry();
          }
        }
 catch (        KettleException e) {
          new ErrorDialog(jobGraph.getShell(),Messages.getString("JobHistory.Error.GettingLoggingInfo"),Messages.getString("JobHistory.Error.GettingInfoFromLoggingTable"),e);
          wFields.clearAll(false);
        }
 finally {
          if (database != null)           database.disconnect();
        }
      }
 else {
        if (!wFields.isDisposed())         wFields.clearAll(false);
      }
    }
 else {
      if (!wFields.isDisposed())       wFields.clearAll(false);
    }
  }
 else {
    if (!wFields.isDisposed())     wFields.clearAll(false);
  }
}
