{
  List<UIRepositoryObjectAcl> originalUIAcls=Arrays.asList(new UIRepositoryObjectAcl[]{objectAcl1,objectAcl2,objectAcl3});
  UIRepositoryObjectAcls repositoryObjectAcls=new UIRepositoryObjectAcls();
  repositoryObjectAcls.setObjectAcl(new RepositoryObjectAcl(new RepositoryObjectRecipient(RECIPIENT1,Type.USER)));
  assertFalse(repositoryObjectAcls.isModelDirty());
  assertFalse(repositoryObjectAcls.isRemoveEnabled());
  assertFalse(repositoryObjectAcls.hasManageAclAccess());
  assertTrue(repositoryObjectAcls.isEntriesInheriting());
  repositoryObjectAcls.addAcls(originalUIAcls);
  assertTrue(repositoryObjectAcls.isModelDirty());
  assertTrue(repositoryObjectAcls.isEntriesInheriting());
  assertFalse(repositoryObjectAcls.isRemoveEnabled());
  repositoryObjectAcls.setRemoveEnabled(true);
  assertTrue(repositoryObjectAcls.isRemoveEnabled());
  repositoryObjectAcls.setModelDirty(true);
  assertTrue(repositoryObjectAcls.isModelDirty());
  assertTrue(repositoryObjectAcls.isRemoveEnabled());
  assertTrue(repositoryObjectAcls.isEntriesInheriting());
  repositoryObjectAcls.setModelDirty(false);
  assertFalse(repositoryObjectAcls.isModelDirty());
  assertTrue(repositoryObjectAcls.isEntriesInheriting());
  repositoryObjectAcls.setEntriesInheriting(true);
  assertFalse(repositoryObjectAcls.isModelDirty());
  assertTrue(repositoryObjectAcls.isEntriesInheriting());
  repositoryObjectAcls.setEntriesInheriting(false);
  assertTrue(repositoryObjectAcls.isModelDirty());
  assertFalse(repositoryObjectAcls.isRemoveEnabled());
  assertFalse(repositoryObjectAcls.isEntriesInheriting());
  repositoryObjectAcls.setHasManageAclAccess(true);
  assertTrue(repositoryObjectAcls.hasManageAclAccess());
}
