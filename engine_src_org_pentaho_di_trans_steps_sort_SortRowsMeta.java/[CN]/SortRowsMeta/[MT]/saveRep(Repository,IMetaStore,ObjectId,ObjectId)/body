{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"directory",directory);
    rep.saveStepAttribute(id_transformation,id_step,"prefix",prefix);
    rep.saveStepAttribute(id_transformation,id_step,"sort_size",sortSize);
    rep.saveStepAttribute(id_transformation,id_step,"free_memory",freeMemoryLimit);
    rep.saveStepAttribute(id_transformation,id_step,"compress",compressFiles);
    rep.saveStepAttribute(id_transformation,id_step,"compress_variable",compressFilesVariable);
    rep.saveStepAttribute(id_transformation,id_step,"unique_rows",onlyPassingUniqueRows);
    for (int i=0; i < fieldName.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",fieldName[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_ascending",ascending[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_case_sensitive",caseSensitive[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_collator_enabled",collatorEnabled[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_collator_strength",collatorStrength[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_presorted",preSortedField[i]);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
