{
  try {
    directory=XMLHandler.getTagValue(stepnode,"directory");
    prefix=XMLHandler.getTagValue(stepnode,"prefix");
    sortSize=XMLHandler.getTagValue(stepnode,"sort_size");
    freeMemoryLimit=XMLHandler.getTagValue(stepnode,"free_memory");
    compressFiles="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"compress"));
    compressFilesVariable=XMLHandler.getTagValue(stepnode,"compress_variable");
    onlyPassingUniqueRows="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"unique_rows"));
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      fieldName[i]=XMLHandler.getTagValue(fnode,"name");
      String asc=XMLHandler.getTagValue(fnode,"ascending");
      ascending[i]="Y".equalsIgnoreCase(asc);
      String sens=XMLHandler.getTagValue(fnode,"case_sensitive");
      caseSensitive[i]=Const.isEmpty(sens) || "Y".equalsIgnoreCase(sens);
      String presorted=XMLHandler.getTagValue(fnode,"presorted");
      preSortedField[i]="Y".equalsIgnoreCase(presorted);
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
