{
  meta=(UniqueRowsByHashSetMeta)smi;
  data=(UniqueRowsByHashSetData)sdi;
  Object[] r=getRow();
  if (r == null) {
    data.clearHashSet();
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.inputRowMeta=getInputRowMeta().clone();
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
    data.storeValues=meta.getStoreValues();
    data.fieldnrs=new int[meta.getCompareFields().length];
    for (int i=0; i < meta.getCompareFields().length; i++) {
      data.fieldnrs[i]=getInputRowMeta().indexOfValue(meta.getCompareFields()[i]);
      if (data.fieldnrs[i] < 0) {
        logError(BaseMessages.getString(PKG,"UniqueRowsByHashSet.Log.CouldNotFindFieldInRow",meta.getCompareFields()[i]));
        setErrors(1);
        stopAll();
        return false;
      }
      if (data.sendDuplicateRows) {
        data.compareFields=data.compareFields == null ? meta.getCompareFields()[i] : data.compareFields + "," + meta.getCompareFields()[i];
      }
    }
    if (data.sendDuplicateRows && !Const.isEmpty(meta.getErrorDescription())) {
      data.realErrorDescription=environmentSubstitute(meta.getErrorDescription());
    }
  }
  if (isUniqueRow(r)) {
    putRow(data.outputRowMeta,r);
  }
 else {
    incrementLinesRejected();
    if (data.sendDuplicateRows) {
      putError(getInputRowMeta(),r,1,data.realErrorDescription,Const.isEmpty(data.compareFields) ? null : data.compareFields,"UNRH001");
    }
  }
  if (checkFeedback(getLinesRead())) {
    if (log.isBasic()) {
      logBasic(BaseMessages.getString(PKG,"UniqueRowsByHashSet.Log.LineNumber") + getLinesRead());
    }
  }
  return true;
}
