{
  boolean retval=true;
  IRunnableWithProgress op=new IRunnableWithProgress(){
    public void run(    IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
      LocalVariables.getInstance().createKettleVariables(Thread.currentThread(),kettleVariables.getLocalThread(),true);
      try {
        jobInfo.saveRep(rep,monitor);
      }
 catch (      KettleException e) {
        throw new InvocationTargetException(e,"Error saving job");
      }
    }
  }
;
  try {
    ProgressMonitorDialog pmd=new ProgressMonitorDialog(shell);
    pmd.run(true,true,op);
  }
 catch (  InvocationTargetException e) {
    new ErrorDialog(shell,props,"Error saving job","An error occured saving the job!",e);
    retval=false;
  }
catch (  InterruptedException e) {
    new ErrorDialog(shell,props,"Error saving job","An error occured saving the job!",e);
    retval=false;
  }
  return retval;
}
