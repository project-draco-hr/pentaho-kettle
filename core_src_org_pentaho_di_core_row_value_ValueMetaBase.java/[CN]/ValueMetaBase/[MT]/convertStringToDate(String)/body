{
  string=Const.trimToType(string,getTrimType());
  if (Const.isEmpty(string)) {
    return null;
  }
  try {
    String df=(getDateFormat() != null) ? getDateFormat().toPattern() : null;
    if (df != null) {
      if (getQuotesBeforeSymbol(df,"Z") % 2 == 0) {
        if (string.contains("Z")) {
          string=string.replace("Z","UTC");
        }
 else         if (string.matches(".*[\\+|\\-]\\d\\d:\\d\\d")) {
          int lPos=string.lastIndexOf(":");
          string=string.substring(0,lPos) + string.substring(lPos + 1);
        }
      }
    }
    return getDateFormat().parse(string);
  }
 catch (  ParseException e) {
    String dateFormat=(getDateFormat() != null) ? getDateFormat().toPattern() : "null";
    throw new KettleValueException(toString() + " : couldn't convert string [" + string+ "] to a date using format ["+ dateFormat+ "] on offset location "+ e.getErrorOffset(),e);
  }
}
