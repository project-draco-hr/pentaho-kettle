{
switch (storageType) {
case STORAGE_TYPE_NORMAL:
    String valueString=XMLHandler.getNodeValue(node);
  if (Utils.isEmpty(valueString)) {
    return null;
  }
switch (getType()) {
case TYPE_STRING:
  return valueString;
case TYPE_NUMBER:
return Double.parseDouble(valueString);
case TYPE_INTEGER:
return Long.parseLong(valueString);
case TYPE_DATE:
return XMLHandler.stringToDate(valueString);
case TYPE_BIGNUMBER:
return new BigDecimal(valueString);
case TYPE_BOOLEAN:
return Boolean.valueOf("Y".equalsIgnoreCase(valueString));
case TYPE_BINARY:
return XMLHandler.stringToBinary(XMLHandler.getTagValue(node,"binary-value"));
default :
throw new KettleException(toString() + " : Unable to de-serialize '" + valueString+ "' from XML for data type "+ getType());
}
case STORAGE_TYPE_BINARY_STRING:
String binaryString=XMLHandler.getTagValue(node,"binary-string");
if (Utils.isEmpty(binaryString)) {
return null;
}
return XMLHandler.stringToBinary(binaryString);
case STORAGE_TYPE_INDEXED:
String indexString=XMLHandler.getTagValue(node,"index-value");
if (Utils.isEmpty(indexString)) {
return null;
}
return Integer.parseInt(indexString);
default :
throw new KettleException(toString() + " : Unknown storage type " + getStorageType());
}
}
