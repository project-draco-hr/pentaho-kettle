{
  string=Const.trimToType(string,getTrimType());
  if (Const.isEmpty(string)) {
    return null;
  }
  try {
    Number number;
    if (lenientStringToNumber) {
      number=getDecimalFormat(bigNumberFormatting).parse(string);
    }
 else {
      ParsePosition parsePosition=new ParsePosition(0);
      number=getDecimalFormat(bigNumberFormatting).parse(string,parsePosition);
      if (parsePosition.getIndex() < string.length()) {
        throw new KettleValueException(toString() + " : couldn't convert String to number : non-numeric character found at position " + (parsePosition.getIndex() + 1)+ " for value ["+ string+ "]");
      }
    }
    return (BigDecimal)number;
  }
 catch (  Exception e) {
    try {
      return new BigDecimal(string);
    }
 catch (    NumberFormatException ex) {
      throw new KettleValueException(toString() + " : couldn't convert string value '" + string+ "' to a big number.",ex);
    }
  }
}
