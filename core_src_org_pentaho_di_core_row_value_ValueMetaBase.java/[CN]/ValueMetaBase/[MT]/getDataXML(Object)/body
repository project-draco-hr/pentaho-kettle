{
  StringBuffer xml=new StringBuffer();
  String string;
  if (object != null) {
    try {
switch (storageType) {
case STORAGE_TYPE_NORMAL:
switch (getType()) {
case TYPE_STRING:
          string=(String)object;
        break;
case TYPE_NUMBER:
      string=Double.toString((Double)object);
    break;
case TYPE_INTEGER:
  string=Long.toString((Long)object);
break;
case TYPE_DATE:
string=XMLHandler.date2string((Date)object);
break;
case TYPE_BIGNUMBER:
string=((BigDecimal)object).toString();
break;
case TYPE_BOOLEAN:
string=Boolean.toString((Boolean)object);
break;
case TYPE_BINARY:
string=XMLHandler.encodeBinaryData((byte[])object);
break;
case TYPE_TIMESTAMP:
string=XMLHandler.timestamp2string((Timestamp)object);
break;
case TYPE_INET:
string=((InetAddress)object).toString();
break;
default :
throw new IOException(toString() + " : Unable to serialize data type to XML " + getType());
}
break;
case STORAGE_TYPE_BINARY_STRING:
string=XMLHandler.addTagValue("binary-string",(byte[])object);
break;
case STORAGE_TYPE_INDEXED:
string=XMLHandler.addTagValue("index-value",(Integer)object);
break;
default :
throw new IOException(toString() + " : Unknown storage type " + getStorageType());
}
}
 catch (ClassCastException e) {
throw new RuntimeException(toString() + " : There was a data type error: the data type of " + object.getClass().getName()+ " object ["+ object+ "] does not correspond to value meta ["+ toStringMeta()+ "]",e);
}
catch (Exception e) {
throw new RuntimeException(toString() + " : there was a value XML encoding error",e);
}
}
 else {
string="";
}
xml.append(XMLHandler.addTagValue(XML_DATA_TAG,string));
return xml.toString();
}
