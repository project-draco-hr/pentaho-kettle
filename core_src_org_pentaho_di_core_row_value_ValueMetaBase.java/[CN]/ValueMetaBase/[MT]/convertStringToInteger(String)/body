{
  string=Const.trimToType(string,getTrimType());
  if (Utils.isEmpty(string)) {
    return null;
  }
  try {
    Number number;
    if (lenientStringToNumber) {
      number=new Long(getDecimalFormat(false).parse(string).longValue());
    }
 else {
      ParsePosition parsePosition=new ParsePosition(0);
      number=getDecimalFormat(false).parse(string,parsePosition);
      if (parsePosition.getIndex() < string.length()) {
        throw new KettleValueException(toString() + " : couldn't convert String to number : non-numeric character found at position " + (parsePosition.getIndex() + 1)+ " for value ["+ string+ "]");
      }
    }
    return new Long(number.longValue());
  }
 catch (  Exception e) {
    throw new KettleValueException(toString() + " : couldn't convert String to Integer",e);
  }
}
