{
  List<String> attributes=Arrays.asList("directory","prefix","sort_size","free_memory","compress","compress_variable","unique_rows","name","ascending","case_sensitive","presorted");
  Map<String,String> getterMap=new HashMap<String,String>();
  getterMap.put("sort_size","getSortSize");
  getterMap.put("free_memory","getFreeMemoryLimit");
  getterMap.put("compress","getCompressFiles");
  getterMap.put("compress_variable","getCompressFilesVariable");
  getterMap.put("unique_rows","isOnlyPassingUniqueRows");
  getterMap.put("name","getFieldName");
  getterMap.put("case_sensitive","getCaseSensitive");
  getterMap.put("presorted","getPreSortedField");
  Map<String,String> setterMap=new HashMap<String,String>();
  setterMap.put("sort_size","setSortSize");
  setterMap.put("free_memory","setFreeMemoryLimit");
  setterMap.put("compress","setCompressFiles");
  setterMap.put("compress_variable","setCompressFilesVariable");
  setterMap.put("name","setFieldName");
  setterMap.put("case_sensitive","setCaseSensitive");
  setterMap.put("presorted","setPreSortedField");
  Map<String,FieldLoadSaveValidator<?>> fieldLoadSaveValidatorAttributeMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),25);
  FieldLoadSaveValidator<boolean[]> booleanArrayLoadSaveValidator=new PrimitiveBooleanArrayLoadSaveValidator(new BooleanLoadSaveValidator(),25);
  fieldLoadSaveValidatorAttributeMap.put("name",stringArrayLoadSaveValidator);
  fieldLoadSaveValidatorAttributeMap.put("ascending",booleanArrayLoadSaveValidator);
  fieldLoadSaveValidatorAttributeMap.put("case_sensitive",booleanArrayLoadSaveValidator);
  fieldLoadSaveValidatorAttributeMap.put("presorted",booleanArrayLoadSaveValidator);
  LoadSaveTester loadSaveTester=new LoadSaveTester(SortRowsMeta.class,attributes,getterMap,setterMap,fieldLoadSaveValidatorAttributeMap,new HashMap<String,FieldLoadSaveValidator<?>>());
  loadSaveTester.testRepoRoundTrip();
  loadSaveTester.testXmlRoundTrip();
}
