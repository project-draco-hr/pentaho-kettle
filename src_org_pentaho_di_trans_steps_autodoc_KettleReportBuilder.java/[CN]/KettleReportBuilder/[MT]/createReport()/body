{
  report=new MasterReport();
  KettleFileTableModel transMetaTableModel=new KettleFileTableModel(parentObject,filenames);
  TableDataFactory dataFactory=new TableDataFactory("default",transMetaTableModel);
  report.setDataFactory(dataFactory);
  ReportHeader reportHeader=new ReportHeader();
  report.setReportHeader(reportHeader);
  ReportFooter reportFooter=new ReportFooter();
  report.setReportFooter(reportFooter);
  RelationalGroup group=new RelationalGroup();
  group.addField("filename");
  GroupDataBody groupData=new GroupDataBody();
  ItemBand itemBand=new ItemBand();
  itemBand.setVisible(true);
  groupData.setItemBand(itemBand);
  group.setBody(groupData);
  report.setRootGroup(group);
  Float fontHeight=12f;
  int pagePosition=0;
  int labelWidth=120;
  boolean labelUnderline=false;
  boolean labelBold=false;
  boolean labelItalic=true;
  reportHeader.getStyle().setStyleProperty(TextStyleKeys.BOLD,true);
  LabelElementFactory labelElementFactory=new LabelElementFactory();
  labelElementFactory.setText("Filename: ");
  labelElementFactory.setMinimumWidth((float)labelWidth);
  labelElementFactory.setMinimumHeight(fontHeight);
  labelElementFactory.setUnderline(labelUnderline);
  labelElementFactory.setBold(labelBold);
  labelElementFactory.setItalic(labelItalic);
  Element label=labelElementFactory.createElement();
  itemBand.addElement(label);
  TextFieldElementFactory textFactory=new TextFieldElementFactory();
  textFactory.setFieldname("filename");
  textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
  textFactory.setMinimumWidth(500f);
  textFactory.setMinimumHeight(fontHeight);
  Element filenameElement=textFactory.createElement();
  itemBand.addElement(filenameElement);
  pagePosition+=fontHeight;
  if (options.isIncludingName()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Name: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("name");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(250f);
    textFactory.setMinimumHeight(fontHeight);
    Element nameElement=textFactory.createElement();
    itemBand.addElement(nameElement);
    pagePosition+=fontHeight;
  }
  if (options.isIncludingDescription()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Description: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("description");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(500f);
    textFactory.setMinimumHeight(fontHeight);
    Element descriptionElement=textFactory.createElement();
    itemBand.addElement(descriptionElement);
    pagePosition+=fontHeight;
  }
  if (options.isIncludingDescription()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Long description: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("extended_description");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(500f);
    textFactory.setMinimumHeight(fontHeight);
    Element descriptionElement=textFactory.createElement();
    itemBand.addElement(descriptionElement);
    pagePosition+=fontHeight;
  }
  if (options.isIncludingLoggingConfiguration()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Logging: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("logging");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(500f);
    textFactory.setMinimumHeight(fontHeight);
    Element loggingElement=textFactory.createElement();
    itemBand.addElement(loggingElement);
    pagePosition+=fontHeight;
  }
  if (options.isIncludingCreated()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Creation: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("creation");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(500f);
    textFactory.setMinimumHeight(fontHeight);
    Element loggingElement=textFactory.createElement();
    itemBand.addElement(loggingElement);
    pagePosition+=fontHeight;
  }
  if (options.isIncludingModified()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Modification: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("modification");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(500f);
    textFactory.setMinimumHeight(fontHeight);
    Element loggingElement=textFactory.createElement();
    itemBand.addElement(loggingElement);
    pagePosition+=fontHeight;
  }
  if (options.isIncludingLastExecutionResult()) {
    labelElementFactory=new LabelElementFactory();
    labelElementFactory.setText("Last execution result: ");
    labelElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    labelElementFactory.setMinimumWidth((float)labelWidth);
    labelElementFactory.setMinimumHeight(fontHeight);
    labelElementFactory.setUnderline(labelUnderline);
    labelElementFactory.setBold(labelBold);
    labelElementFactory.setItalic(labelItalic);
    label=labelElementFactory.createElement();
    itemBand.addElement(label);
    textFactory=new TextFieldElementFactory();
    textFactory.setFieldname("last_exec_result");
    textFactory.setAbsolutePosition(new Point(labelWidth,pagePosition));
    textFactory.setMinimumWidth(500f);
    textFactory.setMinimumHeight(fontHeight);
    Element loggingElement=textFactory.createElement();
    itemBand.addElement(loggingElement);
    pagePosition+=fontHeight;
  }
  String packName=KettleReportBuilder.class.getPackage().getName();
  if (options.isIncludingImage()) {
    String bshCode="Object getValue() " + Const.CR + "{ "+ Const.CR+ "  "+ packName+ ".ReportSubjectLocation location = dataRow.get(\"location\");"+ Const.CR+ "  if (location.isTransformation()) { "+ Const.CR+ "    "+ packName+ ".TransformationInformation ti = "+ packName+ ".TransformationInformation.getInstance();"+ Const.CR+ "    return ti.getImage(location);"+ Const.CR+ "  } else { "+ Const.CR+ "    "+ packName+ ".JobInformation ji = "+ packName+ ".JobInformation.getInstance();"+ Const.CR+ "    return ji.getImage(location);"+ Const.CR+ "  } "+ Const.CR+ "}";
    BSHExpression bshExpression=new BSHExpression();
    bshExpression.setExpression(bshCode);
    bshExpression.setName("getImage");
    report.addExpression(bshExpression);
    ContentElementFactory contentElementFactory=new ContentElementFactory();
    contentElementFactory.setName("image");
    contentElementFactory.setAbsolutePosition(new Point(0,pagePosition));
    contentElementFactory.setMinimumWidth(750f);
    contentElementFactory.setMaximumWidth(750f);
    contentElementFactory.setScale(true);
    contentElementFactory.setDynamicHeight(true);
    Element imageElement=contentElementFactory.createElement();
    imageElement.setAttributeExpression(AttributeNames.Core.NAMESPACE,AttributeNames.Core.VALUE,bshExpression);
    imageElement.setAttribute(AttributeNames.Core.NAMESPACE,AttributeNames.Core.IMAGE_ENCODING_QUALITY,"9");
    imageElement.setAttribute(AttributeNames.Core.NAMESPACE,AttributeNames.Core.IMAGE_ENCODING_TYPE,"PNG");
    itemBand.addElement(imageElement);
  }
  PageFormat pageFormat=new PageFormat();
  pageFormat.setOrientation(PageFormat.LANDSCAPE);
  Paper paper=new Paper();
  paper.setSize(595,842);
  paper.setImageableArea(43,43,509,756);
  pageFormat.setPaper(paper);
  SimplePageDefinition pageDefinition=new SimplePageDefinition(pageFormat);
  report.setPageDefinition(pageDefinition);
}
