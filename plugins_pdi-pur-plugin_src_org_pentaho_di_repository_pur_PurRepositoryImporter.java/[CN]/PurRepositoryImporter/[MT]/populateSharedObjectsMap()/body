{
  sharedObjectsByType=new HashMap<Class<?>,List<?>>();
  for (  Entry<RepositoryObjectType,List<? extends SharedObjectInterface>> entry : rep.loadAndCacheSharedObjects().entrySet()) {
    Class<?> clazz=null;
switch (entry.getKey()) {
case DATABASE:
      clazz=DatabaseMeta.class;
    break;
case SLAVE_SERVER:
  clazz=SlaveServer.class;
break;
case PARTITION_SCHEMA:
clazz=PartitionSchema.class;
break;
case CLUSTER_SCHEMA:
clazz=ClusterSchema.class;
break;
default :
break;
}
if (clazz != null) {
sharedObjectsByType.put(clazz,new ArrayList<Object>(entry.getValue()));
}
}
}
