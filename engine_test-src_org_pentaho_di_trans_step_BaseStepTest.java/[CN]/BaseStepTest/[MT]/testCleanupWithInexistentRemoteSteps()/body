{
  when(mockHelper.logChannelInterfaceFactory.create(any(),any(LoggingObjectInterface.class))).thenReturn(mockHelper.logChannelInterface);
  BaseStep baseStep=spy(new BaseStep(mockHelper.stepMeta,mockHelper.stepDataInterface,0,mockHelper.transMeta,mockHelper.trans));
  ServerSocket serverSocketMock=mock(ServerSocket.class);
  doReturn(0).when(serverSocketMock).getLocalPort();
  baseStep.setServerSockets(Collections.singletonList(serverSocketMock));
  SocketRepository socketRepositoryMock=mock(SocketRepository.class);
  baseStep.setSocketRepository(socketRepositoryMock);
  RemoteStep inputStep=mock(RemoteStep.class);
  doReturn(Collections.singletonList(inputStep)).when(baseStep).getRemoteInputSteps();
  RemoteStep outputStep=mock(RemoteStep.class);
  doReturn(Collections.singletonList(outputStep)).when(baseStep).getRemoteOutputSteps();
  baseStep.cleanup();
  verify(inputStep).cleanup();
  verify(outputStep).cleanup();
  verify(socketRepositoryMock).releaseSocket(0);
}
