{
  data.document=row.getDocument();
  if (meta.isNamespaceAware()) {
    prepareNSMap(data.document.getRootElement());
  }
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"GetXMLData.Log.StreamingMode.ApplyXPath"));
  }
  if (data.PathValue.equals(data.prunePath)) {
    data.an.set(0,(AbstractNode)row);
    data.nodesize=1;
    data.nodenr=0;
    if (log.isDebug()) {
      logDebug(BaseMessages.getString(PKG,"GetXMLData.Log.StreamingMode.ProcessingRows"));
    }
    Object[] r=getXMLRowPutRowWithErrorhandling();
    if (!data.errorInRowButContinue) {
      putRowOut(r);
    }
    data.nodesize=0;
    data.nodenr=0;
    return;
  }
 else {
    if (!applyXPath()) {
      throw new KettleException(BaseMessages.getString(PKG,"GetXMLData.Log.UnableApplyXPath"));
    }
  }
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"GetXMLData.Log.StreamingMode.ProcessingRows"));
  }
  boolean cont=true;
  while (data.nodenr < data.nodesize && cont && !isStopped()) {
    Object[] r=getXMLRowPutRowWithErrorhandling();
    if (data.errorInRowButContinue) {
      continue;
    }
    cont=putRowOut(r);
  }
  if (log.isDebug()) {
    logDebug(BaseMessages.getString(PKG,"GetXMLData.Log.StreamingMode.FreeMemory"));
  }
  data.an.clear();
  data.nodesize=data.an.size();
  data.nodenr=0;
}
