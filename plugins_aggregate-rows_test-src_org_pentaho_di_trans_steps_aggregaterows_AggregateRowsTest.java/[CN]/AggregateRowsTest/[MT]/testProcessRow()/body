{
  AggregateRows aggregateRows=new AggregateRows(stepMockHelper.stepMeta,stepMockHelper.stepDataInterface,0,stepMockHelper.transMeta,stepMockHelper.trans);
  aggregateRows.init(stepMockHelper.initStepMetaInterface,stepMockHelper.initStepDataInterface);
  aggregateRows.setInputRowSets(new ArrayList<RowSet>(asList(createSourceRowSet("TEST"))));
  int fieldSize=stepMockHelper.initStepMetaInterface.getFieldName().length;
  AggregateRowsData data=new AggregateRowsData();
  data.fieldnrs=new int[fieldSize];
  data.counts=new long[fieldSize];
  data.values=new Object[fieldSize];
  assertTrue(aggregateRows.processRow(stepMockHelper.initStepMetaInterface,data));
  assertTrue(aggregateRows.getErrors() == 0);
  assertTrue(aggregateRows.getLinesRead() > 0);
  RowMetaInterface outputRowMeta=mock(RowMetaInterface.class);
  when(outputRowMeta.size()).thenReturn(fieldSize);
  data.outputRowMeta=outputRowMeta;
  assertFalse(aggregateRows.processRow(stepMockHelper.initStepMetaInterface,data));
  assertTrue(aggregateRows.getLinesWritten() > 0);
}
