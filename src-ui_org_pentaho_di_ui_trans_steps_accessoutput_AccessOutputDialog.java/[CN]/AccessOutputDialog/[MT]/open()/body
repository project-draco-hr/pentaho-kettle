{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  SelectionAdapter lsSelMod=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"AccessOutputDialog.DialogTitle"));
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,0);
  fdlStepname.top=new FormAttachment(0,0);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,margin);
  fdStepname.top=new FormAttachment(0,0);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlFilename=new Label(shell,SWT.RIGHT);
  wlFilename.setText(BaseMessages.getString(PKG,"AccessOutputDialog.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wStepname,margin);
  fdlFilename.right=new FormAttachment(middle,0);
  wlFilename.setLayoutData(fdlFilename);
  wbbFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbFilename);
  wbbFilename.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  wbbFilename.setToolTipText(BaseMessages.getString(PKG,"System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wStepname,margin);
  wbbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wFilename.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.Filename.Tooltip"));
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,margin);
  fdFilename.right=new FormAttachment(wbbFilename,-margin);
  fdFilename.top=new FormAttachment(wStepname,margin);
  wFilename.setLayoutData(fdFilename);
  wlDoNotOpenNewFileInit=new Label(shell,SWT.RIGHT);
  wlDoNotOpenNewFileInit.setText(BaseMessages.getString(PKG,"AccessOutputDialog.DoNotOpenNewFileInit.Label"));
  props.setLook(wlDoNotOpenNewFileInit);
  fdlDoNotOpenNewFileInit=new FormData();
  fdlDoNotOpenNewFileInit.left=new FormAttachment(0,0);
  fdlDoNotOpenNewFileInit.top=new FormAttachment(wFilename,margin);
  fdlDoNotOpenNewFileInit.right=new FormAttachment(middle,-margin);
  wlDoNotOpenNewFileInit.setLayoutData(fdlDoNotOpenNewFileInit);
  wDoNotOpenNewFileInit=new Button(shell,SWT.CHECK);
  wDoNotOpenNewFileInit.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.DoNotOpenNewFileInit.Tooltip"));
  props.setLook(wDoNotOpenNewFileInit);
  fdDoNotOpenNewFileInit=new FormData();
  fdDoNotOpenNewFileInit.left=new FormAttachment(middle,margin);
  fdDoNotOpenNewFileInit.top=new FormAttachment(wFilename,margin);
  fdDoNotOpenNewFileInit.right=new FormAttachment(100,0);
  wDoNotOpenNewFileInit.setLayoutData(fdDoNotOpenNewFileInit);
  wDoNotOpenNewFileInit.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
);
  wlCreateFile=new Label(shell,SWT.RIGHT);
  wlCreateFile.setText(BaseMessages.getString(PKG,"AccessOutputDialog.CreateFile.Label"));
  wlCreateFile.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.CreateFile.Tooltip"));
  props.setLook(wlCreateFile);
  fdlCreateFile=new FormData();
  fdlCreateFile.left=new FormAttachment(0,0);
  fdlCreateFile.top=new FormAttachment(wDoNotOpenNewFileInit,margin);
  fdlCreateFile.right=new FormAttachment(middle,0);
  wlCreateFile.setLayoutData(fdlCreateFile);
  wCreateFile=new Button(shell,SWT.CHECK);
  wCreateFile.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.CreateFile.Tooltip"));
  props.setLook(wCreateFile);
  fdCreateFile=new FormData();
  fdCreateFile.left=new FormAttachment(middle,margin);
  fdCreateFile.top=new FormAttachment(wDoNotOpenNewFileInit,margin);
  fdCreateFile.right=new FormAttachment(100,0);
  wCreateFile.setLayoutData(fdCreateFile);
  wCreateFile.addSelectionListener(lsSelMod);
  wbbTablename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbTablename);
  wbbTablename.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  fdbTablename=new FormData();
  fdbTablename.right=new FormAttachment(100,0);
  fdbTablename.top=new FormAttachment(wCreateFile,margin);
  wbbTablename.setLayoutData(fdbTablename);
  wlTablename=new Label(shell,SWT.RIGHT);
  wlTablename.setText(BaseMessages.getString(PKG,"AccessOutputDialog.TargetTable.Label"));
  props.setLook(wlTablename);
  fdlTablename=new FormData();
  fdlTablename.left=new FormAttachment(0,0);
  fdlTablename.top=new FormAttachment(wCreateFile,margin);
  fdlTablename.right=new FormAttachment(middle,0);
  wlTablename.setLayoutData(fdlTablename);
  wTablename=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wTablename.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.TargetTable.Tooltip"));
  props.setLook(wTablename);
  fdTablename=new FormData();
  fdTablename.left=new FormAttachment(middle,margin);
  fdTablename.right=new FormAttachment(wbbTablename,-margin);
  fdTablename.top=new FormAttachment(wCreateFile,margin);
  wTablename.setLayoutData(fdTablename);
  wlCreateTable=new Label(shell,SWT.RIGHT);
  wlCreateTable.setText(BaseMessages.getString(PKG,"AccessOutputDialog.CreateTable.Label"));
  wlCreateTable.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.CreateTable.Tooltip"));
  props.setLook(wlCreateTable);
  fdlCreateTable=new FormData();
  fdlCreateTable.left=new FormAttachment(0,0);
  fdlCreateTable.top=new FormAttachment(wTablename,margin);
  fdlCreateTable.right=new FormAttachment(middle,0);
  wlCreateTable.setLayoutData(fdlCreateTable);
  wCreateTable=new Button(shell,SWT.CHECK);
  wCreateTable.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.CreateTable.Tooltip"));
  props.setLook(wCreateTable);
  fdCreateTable=new FormData();
  fdCreateTable.left=new FormAttachment(middle,margin);
  fdCreateTable.top=new FormAttachment(wTablename,margin);
  fdCreateTable.right=new FormAttachment(100,0);
  wCreateTable.setLayoutData(fdCreateTable);
  wCreateTable.addSelectionListener(lsSelMod);
  wlCommitSize=new Label(shell,SWT.RIGHT);
  wlCommitSize.setText(BaseMessages.getString(PKG,"AccessOutputDialog.CommitSize.Label"));
  props.setLook(wlCommitSize);
  fdlCommitSize=new FormData();
  fdlCommitSize.left=new FormAttachment(0,0);
  fdlCommitSize.top=new FormAttachment(wCreateTable,margin);
  fdlCommitSize.right=new FormAttachment(middle,0);
  wlCommitSize.setLayoutData(fdlCommitSize);
  wCommitSize=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wCommitSize.setToolTipText(BaseMessages.getString(PKG,"AccessOutputDialog.CommitSize.Tooltip"));
  props.setLook(wCommitSize);
  fdCommitSize=new FormData();
  fdCommitSize.left=new FormAttachment(middle,margin);
  fdCommitSize.right=new FormAttachment(100,0);
  fdCommitSize.top=new FormAttachment(wCreateTable,margin);
  wCommitSize.setLayoutData(fdCommitSize);
  wlAddToResult=new Label(shell,SWT.RIGHT);
  wlAddToResult.setText(BaseMessages.getString(PKG,"AccessOutputMeta.AddFileToResult.Label"));
  props.setLook(wlAddToResult);
  fdlAddToResult=new FormData();
  fdlAddToResult.left=new FormAttachment(0,0);
  fdlAddToResult.top=new FormAttachment(wCommitSize,2 * margin);
  fdlAddToResult.right=new FormAttachment(middle,-margin);
  wlAddToResult.setLayoutData(fdlAddToResult);
  wAddToResult=new Button(shell,SWT.CHECK);
  wAddToResult.setToolTipText(BaseMessages.getString(PKG,"AccessOutputMeta.AddFileToResult.Tooltip"));
  props.setLook(wAddToResult);
  fdAddToResult=new FormData();
  fdAddToResult.left=new FormAttachment(middle,margin);
  fdAddToResult.top=new FormAttachment(wCommitSize,2 * margin);
  fdAddToResult.right=new FormAttachment(100,0);
  wAddToResult.setLayoutData(fdAddToResult);
  SelectionAdapter lsSelR=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wAddToResult.addSelectionListener(lsSelR);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wAddToResult);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wTablename.addSelectionListener(lsDef);
  wbbTablename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  wbbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.SAVE);
      dialog.setFilterExtensions(new String[]{"*.mdb;*.MDB;*.accdb;*.ACCDB","*"});
      if (!Const.isEmpty(wFilename.getText())) {
        String fname=transMeta.environmentSubstitute(wFilename.getText());
        dialog.setFileName(fname);
      }
      dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"AccessOutputDialog.FileType.AccessFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
      if (dialog.open() != null) {
        String str=dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName();
        wFilename.setText(str);
      }
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(backupChanged);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
