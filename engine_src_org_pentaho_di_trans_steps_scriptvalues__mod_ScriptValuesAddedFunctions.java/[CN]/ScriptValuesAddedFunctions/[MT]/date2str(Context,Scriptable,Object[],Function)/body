{
  Object oRC=new Object();
switch (ArgList.length) {
case 0:
    throw Context.reportRuntimeError("Please provide a valid date to the function call date2str.");
case 1:
  try {
    if (isNull(ArgList)) {
      return null;
    }
 else     if (isUndefined(ArgList)) {
      return Context.getUndefinedValue();
    }
    java.util.Date dArg1=(java.util.Date)Context.jsToJava(ArgList[0],java.util.Date.class);
    if (dArg1.equals(null)) {
      return null;
    }
    Format dfFormatter=new SimpleDateFormat();
    oRC=dfFormatter.format(dArg1);
  }
 catch (  Exception e) {
    throw Context.reportRuntimeError("Could not convert to local format.");
  }
break;
case 2:
try {
if (isNull(ArgList,new int[]{0,1})) {
  return null;
}
 else if (isUndefined(ArgList,new int[]{0,1})) {
  return Context.getUndefinedValue();
}
java.util.Date dArg1=(java.util.Date)Context.jsToJava(ArgList[0],java.util.Date.class);
String sArg2=Context.toString(ArgList[1]);
Format dfFormatter=new SimpleDateFormat(sArg2);
oRC=dfFormatter.format(dArg1);
}
 catch (Exception e) {
throw Context.reportRuntimeError("Could not convert to the given format.");
}
break;
case 3:
try {
if (isNull(ArgList,new int[]{0,1,2})) {
return null;
}
 else if (isUndefined(ArgList,new int[]{0,1,2})) {
return Context.getUndefinedValue();
}
java.util.Date dArg1=(java.util.Date)Context.jsToJava(ArgList[0],java.util.Date.class);
DateFormat dfFormatter;
String sArg2=Context.toString(ArgList[1]);
String sArg3=Context.toString(ArgList[2]);
if (sArg3.length() == 2) {
Locale dfLocale=EnvUtil.createLocale(sArg3.toLowerCase());
dfFormatter=new SimpleDateFormat(sArg2,dfLocale);
oRC=dfFormatter.format(dArg1);
}
 else {
throw Context.reportRuntimeError("Locale is not 2 characters long.");
}
}
 catch (Exception e) {
throw Context.reportRuntimeError("Could not convert to the given local format.");
}
break;
case 4:
try {
if (isNull(ArgList,new int[]{0,1,2,3})) {
return null;
}
 else if (isUndefined(ArgList,new int[]{0,1,2,3})) {
return Context.getUndefinedValue();
}
java.util.Date dArg1=(java.util.Date)Context.jsToJava(ArgList[0],java.util.Date.class);
DateFormat dfFormatter;
String sArg2=Context.toString(ArgList[1]);
String sArg3=Context.toString(ArgList[2]);
String sArg4=Context.toString(ArgList[3]);
TimeZone tz=TimeZone.getTimeZone(sArg4);
if (sArg3.length() == 2) {
Locale dfLocale=EnvUtil.createLocale(sArg3.toLowerCase());
dfFormatter=new SimpleDateFormat(sArg2,dfLocale);
dfFormatter.setTimeZone(tz);
oRC=dfFormatter.format(dArg1);
}
 else {
throw Context.reportRuntimeError("Locale is not 2 characters long.");
}
}
 catch (Exception e) {
throw Context.reportRuntimeError("Could not convert to the given local format.");
}
break;
default :
throw Context.reportRuntimeError("The function call date2str requires 1, 2, 3, or 4 arguments.");
}
return oRC;
}
