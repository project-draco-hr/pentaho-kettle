{
  try {
    if (ArgList.length == 3 && !isNull(ArgList[0]) && !isNull(ArgList[1]) && !isUndefined(ArgList[0]) && !isUndefined(ArgList[1])) {
      FileObject fileSource=null, fileDestination=null;
      try {
        fileSource=KettleVFS.getFileObject(Context.toString(ArgList[0]));
        fileDestination=KettleVFS.getFileObject(Context.toString(ArgList[1]));
        if (fileSource.exists()) {
          if (fileSource.getType() == FileType.FILE) {
            boolean overwrite=false;
            if (!ArgList[1].equals(null))             overwrite=Context.toBoolean(ArgList[2]);
            boolean destinationExists=fileDestination.exists();
            if ((destinationExists && overwrite) || !destinationExists)             fileSource.moveTo(fileDestination);
          }
        }
 else {
          Context.reportRuntimeError("file to move [" + Context.toString(ArgList[0]) + "] can not be found!");
        }
      }
 catch (      IOException e) {
        throw Context.reportRuntimeError("The function call moveFile throw an error : " + e.toString());
      }
 finally {
        if (fileSource != null)         try {
          fileSource.close();
        }
 catch (        Exception e) {
        }
        if (fileDestination != null)         try {
          fileDestination.close();
        }
 catch (        Exception e) {
        }
      }
    }
 else {
      throw Context.reportRuntimeError("The function call copyFile is not valid.");
    }
  }
 catch (  Exception e) {
    throw Context.reportRuntimeError(e.toString());
  }
}
