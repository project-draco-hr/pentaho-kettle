{
  try {
    if (wList.getSelectionCount() > 0) {
      String languages[]=getSelectedLocale();
      System.out.println("Selected languages: " + languages.length);
      shell.setCursor(display.getSystemCursor(SWT.CURSOR_WAIT));
      wGrid.table.clearAll();
      for (int i=0; i < wList.getSelectionCount(); i++) {
        String dir=wList.getSelection()[i];
        for (        String filename : files.keySet()) {
          if (getPath(filename).equals(dir)) {
            Properties properties=files.get(filename);
            ArrayList<Object> entryObjects=new ArrayList<Object>(properties.keySet());
            ArrayList<String> entries=new ArrayList<String>();
            for (            Object object : entryObjects) {
              entries.add((String)object);
            }
            Collections.sort(entries);
            for (int e=0; e < entries.size(); e++) {
              String entry=entries.get(e);
              String value=properties.getProperty(entry,"");
              String locale=getLocale(filename);
              String classname=getClassname(entry);
              String key=entry.length() > classname.length() ? entry.substring(classname.length() + 1) : entry;
              boolean systemKey=entry.startsWith(SYSTEM_KEY_PREFIX);
              String fileContent="";
              if (wVerify.getSelection()) {
                if (systemKey) {
                  fileContent="";
                }
 else {
                  String javaFile=dir + "/" + classname+ ".java";
                  fileContent=javaFiles.get(javaFile);
                  if (fileContent == null) {
                    fileContent=loadJava(javaFile,filename,entry);
                    javaFiles.put(javaFile,fileContent);
                  }
                }
              }
              boolean localeSelected=(locales.get(locale)).booleanValue();
              if (localeSelected) {
                String used="?";
                if (systemKey) {
                  used="System key";
                }
 else {
                  if (wVerify.getSelection()) {
                    String keyString="\"" + entry + "\"";
                    used=fileContent.indexOf(keyString) >= 0 ? "Y" : "N";
                  }
                }
                boolean notUsed="N".equalsIgnoreCase(used);
                if (key.equalsIgnoreCase("Log.FinishedProcessing")) {
                  System.out.println("Debug!");
                }
                String available=checkAvailability(dir,entry,locale,languages);
                if (!wUsed.getSelection() || notUsed) {
                  TableItem item=new TableItem(wGrid.table,SWT.NONE);
                  int pos=1;
                  item.setText(pos++,locale);
                  item.setText(pos++,dir);
                  item.setText(pos++,classname);
                  item.setText(pos++,key);
                  item.setText(pos++,value);
                  item.setText(pos++,used);
                  item.setText(pos++,available);
                  if (notUsed)                   item.setBackground(unusedColor);
                }
              }
            }
          }
        }
      }
    }
  }
 catch (  Exception e) {
    new ErrorDialog(shell,"Error loading data","There was an unexpected error loading data for the translation grid",e);
  }
 finally {
    shell.setCursor(null);
  }
  if (wGrid.table.getItemCount() == 0)   new TableItem(wGrid.table,SWT.NONE);
  wGrid.removeEmptyRows();
  wGrid.setRowNums();
  wGrid.optWidth(true);
  TableColumn col=wGrid.table.getColumn(5);
  if (col.getWidth() > 200)   col.setWidth(200);
}
