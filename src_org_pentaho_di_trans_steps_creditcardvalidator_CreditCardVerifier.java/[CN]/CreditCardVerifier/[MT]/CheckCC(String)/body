{
  ReturnIndicator ri=new ReturnIndicator();
  if (Const.isEmpty(CardNumber)) {
    ri.UnValidMsg=BaseMessages.getString(PKG,"CreditCardValidator.Log.EmptyNumber");
    return ri;
  }
  Matcher m=Pattern.compile("[^\\d\\s.-]").matcher(CardNumber);
  if (m.find()) {
    ri.UnValidMsg="Credit card number can only contain numbers, spaces, \"-\", and \".\"";
    return ri;
  }
  int cardId=getCardID(CardNumber);
  if (cardId > -1) {
    if (luhnValidate(CardNumber)) {
      ri.CardValid=true;
      ri.CardType=getCardName(cardId);
    }
 else {
      ri.CardValid=false;
      ri.UnValidMsg=getNotValidCardNames(cardId);
    }
  }
 else {
    if (luhnValidate(CardNumber)) {
      ri.CardValid=true;
    }
 else {
      ri.UnValidMsg=BaseMessages.getString(PKG,"CreditCardValidator.Log.CardNotValid");
    }
  }
  return ri;
}
