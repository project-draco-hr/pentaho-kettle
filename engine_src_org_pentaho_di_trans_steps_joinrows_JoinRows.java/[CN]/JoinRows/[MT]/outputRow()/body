{
  data.joinrow[data.filenr]=getRowData(data.filenr);
  if (data.joinrow[data.filenr] == null) {
    while (!isStopped() && getRow() != null) {
    }
    setOutputDone();
    return false;
  }
  if (data.filenr >= data.file.length - 1) {
    if (data.outputRowMeta == null) {
      data.outputRowMeta=createOutputRowMeta(data.fileRowMeta);
    }
    Object[] sum=new Object[data.outputRowMeta.size()];
    int sumIndex=0;
    for (int f=0; f <= data.filenr; f++) {
      for (int c=0; c < data.fileRowMeta[f].size(); c++) {
        sum[sumIndex]=data.joinrow[f][c];
        sumIndex++;
      }
    }
    if (meta.getCondition() != null && !meta.getCondition().isEmpty()) {
      if (meta.getCondition().evaluate(data.outputRowMeta,sum)) {
        putRow(data.outputRowMeta,sum);
      }
    }
 else {
      putRow(data.outputRowMeta,sum);
    }
    while (data.restart[data.filenr]) {
      data.filenr--;
    }
  }
 else {
    data.filenr++;
  }
  return true;
}
