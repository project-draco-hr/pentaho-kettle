{
  if (rowData == null) {
    if (log.isDetailed()) {
      logDetailed("Last line inserted: stop");
    }
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta();
    try {
      String realTablename=environmentSubstitute(meta.getTablename());
      data.table=data.db.getTable(realTablename);
      if (data.table == null) {
        if (meta.isTableCreated()) {
          data.createTable(realTablename,data.outputRowMeta);
        }
 else {
          logError(BaseMessages.getString(PKG,"AccessOutput.Error.TableDoesNotExist",realTablename));
          setErrors(1);
          stopAll();
          return false;
        }
      }
 else       if (meta.isTableTruncated()) {
        data.truncateTable();
      }
    }
 catch (    Exception e) {
      logError(BaseMessages.getString(PKG,"AccessOutput.Exception.UnexpectedErrorCreatingTable",e.toString()));
      logError(Const.getStackTracker(e));
      setErrors(1);
      stopAll();
      return false;
    }
  }
  Object[] columnValues=AccessOutputMeta.createObjectsForRow(data.outputRowMeta,rowData);
  try {
    data.rows.add(columnValues);
    if (meta.getCommitSize() > 0) {
      if (data.rows.size() >= meta.getCommitSize()) {
        data.addRowsToTable(data.rows);
        data.rows.clear();
      }
    }
 else {
      data.addRowToTable(columnValues);
    }
  }
 catch (  IOException e) {
    logError(BaseMessages.getString(PKG,"AccessOutput.Exception.UnexpectedErrorWritingRow",data.outputRowMeta.getString(rowData)));
    logError(Const.getStackTracker(e));
    setErrors(1);
    stopAll();
    return false;
  }
  return true;
}
