{
  meta=(TableExistsMeta)smi;
  data=(TableExistsData)sdi;
  boolean sendToErrorRow=false;
  String errorMessage=null;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  boolean tablexists=false;
  try {
    if (first) {
      first=false;
      data.outputRowMeta=getInputRowMeta().clone();
      meta.getFields(data.outputRowMeta,getStepname(),null,null,this,repository,metaStore);
      if (Const.isEmpty(meta.getDynamicTablenameField())) {
        logError(BaseMessages.getString(PKG,"TableExists.Error.TablenameFieldMissing"));
        throw new KettleException(BaseMessages.getString(PKG,"TableExists.Error.TablenameFieldMissing"));
      }
      if (data.indexOfTablename < 0) {
        data.indexOfTablename=getInputRowMeta().indexOfValue(meta.getDynamicTablenameField());
        if (data.indexOfTablename < 0) {
          logError(BaseMessages.getString(PKG,"TableExists.Exception.CouldnotFindField") + "[" + meta.getDynamicTablenameField()+ "]");
          throw new KettleException(BaseMessages.getString(PKG,"TableExists.Exception.CouldnotFindField",meta.getDynamicTablenameField()));
        }
      }
    }
    String tablename=getInputRowMeta().getString(r,data.indexOfTablename);
    if (data.realSchemaname != null)     tablename=data.db.getDatabaseMeta().getQuotedSchemaTableCombination(data.realSchemaname,tablename);
 else     tablename=data.db.getDatabaseMeta().quoteField(tablename);
    tablexists=data.db.checkTableExists(tablename);
    Object[] outputRowData=RowDataUtil.addValueData(r,getInputRowMeta().size(),tablexists);
    putRow(data.outputRowMeta,outputRowData);
    if (log.isRowLevel())     logRowlevel(BaseMessages.getString(PKG,"TableExists.LineNumber",getLinesRead() + " : " + getInputRowMeta().getString(r)));
  }
 catch (  KettleException e) {
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(BaseMessages.getString(PKG,"TableExists.ErrorInStepRunning" + " : " + e.getMessage()));
      throw new KettleStepException(BaseMessages.getString(PKG,"TableExists.Log.ErrorInStep"),e);
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,meta.getResultFieldName(),"TableExistsO01");
    }
  }
  return true;
}
