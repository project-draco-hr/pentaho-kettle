{
  super(parent,SWT.NONE);
  this.spoon=spoon;
  this.shell=parent.getShell();
  this.jobMeta=jobMeta;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  setLayout(formLayout);
  setVisible(true);
  spoon.props.setLook(this);
  SashForm sash=new SashForm(this,SWT.VERTICAL);
  spoon.props.setLook(sash);
  sash.setLayout(new FillLayout());
  final int FieldsRows=1;
  colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("ChefHistory.Column.BatchID"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Status"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Read"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Written"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Updated"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Input"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Output"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.Errors"),ColumnInfo.COLUMN_TYPE_TEXT,true,true),new ColumnInfo(Messages.getString("ChefHistory.Column.StartDate"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("ChefHistory.Column.EndDate"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("ChefHistory.Column.LogDate"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("ChefHistory.Column.DependencyDate"),ColumnInfo.COLUMN_TYPE_TEXT,false,true),new ColumnInfo(Messages.getString("ChefHistory.Column.ReplayDate"),ColumnInfo.COLUMN_TYPE_TEXT,false,true)};
  for (int i=0; i < colinf.length; i++)   colinf[i].setAllignement(SWT.RIGHT);
  wFields=new TableView(sash,SWT.BORDER | SWT.FULL_SELECTION | SWT.SINGLE,colinf,FieldsRows,true,null,spoon.props);
  wText=new Text(sash,SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL| SWT.READ_ONLY);
  spoon.props.setLook(wText);
  wText.setVisible(true);
  wRefresh=new Button(this,SWT.PUSH);
  wRefresh.setText(Messages.getString("ChefHistory.Button.Refresh"));
  fdRefresh=new FormData();
  fdRefresh.left=new FormAttachment(15,0);
  fdRefresh.bottom=new FormAttachment(100,0);
  wRefresh.setLayoutData(fdRefresh);
  wReplay=new Button(this,SWT.PUSH);
  wReplay.setText(Messages.getString("ChefHistory.Button.Replay"));
  fdReplay=new FormData();
  fdReplay.left=new FormAttachment(wRefresh,Const.MARGIN);
  fdReplay.bottom=new FormAttachment(100,0);
  wReplay.setLayoutData(fdReplay);
  fdText=new FormData();
  fdText.left=new FormAttachment(0,0);
  fdText.top=new FormAttachment(0,0);
  fdText.right=new FormAttachment(100,0);
  fdText.bottom=new FormAttachment(100,0);
  wText.setLayoutData(fdText);
  fdSash=new FormData();
  fdSash.left=new FormAttachment(0,0);
  fdSash.top=new FormAttachment(0,0);
  fdSash.right=new FormAttachment(100,0);
  fdSash.bottom=new FormAttachment(wRefresh,-5);
  sash.setLayoutData(fdSash);
  pack();
  setupReplayListener();
  SelectionAdapter lsRefresh=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      refreshHistory();
    }
  }
;
  wRefresh.addSelectionListener(lsRefresh);
  wFields.table.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      showLogEntry();
    }
  }
);
  wFields.table.addKeyListener(new KeyListener(){
    public void keyReleased(    KeyEvent e){
      showLogEntry();
    }
    public void keyPressed(    KeyEvent e){
    }
  }
);
}
