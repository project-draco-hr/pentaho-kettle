{
  boolean retval=true;
  IRunnableWithProgress op=new IRunnableWithProgress(){
    public void run(    IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
      LocalVariables.getInstance().createKettleVariables(Thread.currentThread().getName(),parentThread.getName(),true);
      try {
        rep.exportAllObjects(monitor,filename);
      }
 catch (      KettleException e) {
        e.printStackTrace();
        throw new InvocationTargetException(e,Messages.getString("RepositoryExportDialog.Error.CreateUpdate",e.getMessage()));
      }
    }
  }
;
  try {
    ProgressMonitorDialog pmd=new ProgressMonitorDialog(shell);
    pmd.run(true,true,op);
  }
 catch (  InvocationTargetException e) {
    LogWriter.getInstance().logError(RepositoryExportProgressDialog.class.toString(),"Error creating repository: " + e.toString());
    e.printStackTrace();
    new ErrorDialog(shell,Messages.getString("RepositoryExportDialog.ErrorExport.Title"),Messages.getString("RepositoryExportDialog.ErrorExport.Message"),e);
    retval=false;
  }
catch (  InterruptedException e) {
    LogWriter.getInstance().logError(RepositoryExportProgressDialog.class.toString(),"Error creating repository: " + e.toString());
    e.printStackTrace();
    new ErrorDialog(shell,Messages.getString("RepositoryExportDialog.ErrorExport.Title"),Messages.getString("RepositoryExportDialog.ErrorExport.Message"),e);
    retval=false;
  }
  return retval;
}
