{
  try {
    valuetype=getValueTypeByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"valuetype"),""));
    fieldname=rep.getJobEntryAttributeString(id_jobentry,"fieldname");
    variablename=rep.getJobEntryAttributeString(id_jobentry,"variablename");
    fieldtype=getFieldTypeByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"fieldtype"),""));
    mask=rep.getJobEntryAttributeString(id_jobentry,"mask");
    comparevalue=rep.getJobEntryAttributeString(id_jobentry,"comparevalue");
    minvalue=rep.getJobEntryAttributeString(id_jobentry,"minvalue");
    maxvalue=rep.getJobEntryAttributeString(id_jobentry,"maxvalue");
    successcondition=getSuccessConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"successcondition"),""));
    successnumbercondition=getSuccessNumberConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"successnumbercondition"),""));
    successbooleancondition=getSuccessBooleanConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"successbooleancondition"),""));
    successwhenvarset=rep.getJobEntryAttributeBoolean(id_jobentry,"successwhenvarset");
  }
 catch (  KettleException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEntrySimple.Error.Exception.UnableLoadRep") + id_jobentry,dbe);
  }
}
