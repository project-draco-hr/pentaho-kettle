{
  try {
    super.loadRep(rep,id_jobentry,databases,slaveServers);
    valuetype=getValueTypeByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"valuetype"),""));
    fieldname=rep.getJobEntryAttributeString(id_jobentry,"fieldname");
    variablename=rep.getJobEntryAttributeString(id_jobentry,"variablename");
    fieldtype=getFieldTypeByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"fieldtype"),""));
    mask=rep.getJobEntryAttributeString(id_jobentry,"mask");
    comparevalue=rep.getJobEntryAttributeString(id_jobentry,"comparevalue");
    minvalue=rep.getJobEntryAttributeString(id_jobentry,"minvalue");
    maxvalue=rep.getJobEntryAttributeString(id_jobentry,"maxvalue");
    successcondition=getSuccessConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"successcondition"),""));
    successnumbercondition=getSuccessNumberConditionByCode(Const.NVL(rep.getJobEntryAttributeString(id_jobentry,"successnumbercondition"),""));
  }
 catch (  KettleException dbe) {
    throw new KettleException(Messages.getString("JobEntrySimple.Error.Exception.UnableLoadRep") + id_jobentry,dbe);
  }
}
