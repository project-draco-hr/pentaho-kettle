{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText("Get files by FTP...");
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wName=new LabelText(shell,"Job entry name ","Name of this job entry");
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.top=new FormAttachment(0,0);
  fdName.left=new FormAttachment(0,0);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wServerName=new LabelTextVar(shell,"FTP-server name (IP) ","The FTP server name or IP address");
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(0,0);
  fdServerName.top=new FormAttachment(wName,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wUserName=new LabelTextVar(shell,"Username ","Enter the FTP server username");
  props.setLook(wUserName);
  wUserName.addModifyListener(lsMod);
  fdUserName=new FormData();
  fdUserName.left=new FormAttachment(0,0);
  fdUserName.top=new FormAttachment(wServerName,margin);
  fdUserName.right=new FormAttachment(100,0);
  wUserName.setLayoutData(fdUserName);
  wPassword=new LabelTextVar(shell,"Password ","The FTP server password");
  props.setLook(wPassword);
  wPassword.setEchoChar('*');
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(0,0);
  fdPassword.top=new FormAttachment(wUserName,margin);
  fdPassword.right=new FormAttachment(100,0);
  wPassword.setLayoutData(fdPassword);
  wPassword.getTextWidget().addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      checkPasswordVisible();
    }
  }
);
  wFtpDirectory=new LabelTextVar(shell,"Remote directory ","The directory on the FTP server");
  props.setLook(wFtpDirectory);
  wFtpDirectory.addModifyListener(lsMod);
  fdFtpDirectory=new FormData();
  fdFtpDirectory.left=new FormAttachment(0,0);
  fdFtpDirectory.top=new FormAttachment(wPassword,margin);
  fdFtpDirectory.right=new FormAttachment(100,0);
  wFtpDirectory.setLayoutData(fdFtpDirectory);
  wTargetDirectory=new LabelTextVar(shell,"Target directory ","The target directory on the local server");
  props.setLook(wTargetDirectory);
  wTargetDirectory.addModifyListener(lsMod);
  fdTargetDirectory=new FormData();
  fdTargetDirectory.left=new FormAttachment(0,0);
  fdTargetDirectory.top=new FormAttachment(wFtpDirectory,margin);
  fdTargetDirectory.right=new FormAttachment(100,0);
  wTargetDirectory.setLayoutData(fdTargetDirectory);
  wWildcard=new LabelTextVar(shell,"Wildcard (regular expression) ","Enter a regular expression to specify the filenames to retrieve.\nFor example .*\\.txt$ : get all text files.");
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(0,0);
  fdWildcard.top=new FormAttachment(wTargetDirectory,margin);
  fdWildcard.right=new FormAttachment(100,0);
  wWildcard.setLayoutData(fdWildcard);
  wlBinaryMode=new Label(shell,SWT.RIGHT);
  wlBinaryMode.setText("Use binary mode? ");
  props.setLook(wlBinaryMode);
  fdlBinaryMode=new FormData();
  fdlBinaryMode.left=new FormAttachment(0,0);
  fdlBinaryMode.top=new FormAttachment(wWildcard,margin);
  fdlBinaryMode.right=new FormAttachment(middle,0);
  wlBinaryMode.setLayoutData(fdlBinaryMode);
  wBinaryMode=new Button(shell,SWT.CHECK);
  props.setLook(wBinaryMode);
  fdBinaryMode=new FormData();
  fdBinaryMode.left=new FormAttachment(middle,margin);
  fdBinaryMode.top=new FormAttachment(wWildcard,margin);
  fdBinaryMode.right=new FormAttachment(100,0);
  wBinaryMode.setLayoutData(fdBinaryMode);
  wTimeout=new LabelTextVar(shell,"Timeout ","The timeout in seconds");
  props.setLook(wTimeout);
  wTimeout.addModifyListener(lsMod);
  fdTimeout=new FormData();
  fdTimeout.left=new FormAttachment(0,0);
  fdTimeout.top=new FormAttachment(wlBinaryMode,margin);
  fdTimeout.right=new FormAttachment(100,0);
  wTimeout.setLayoutData(fdTimeout);
  wlRemove=new Label(shell,SWT.RIGHT);
  wlRemove.setText("Remove files after retrieval? ");
  props.setLook(wlRemove);
  fdlRemove=new FormData();
  fdlRemove.left=new FormAttachment(0,0);
  fdlRemove.top=new FormAttachment(wTimeout,margin);
  fdlRemove.right=new FormAttachment(middle,0);
  wlRemove.setLayoutData(fdlRemove);
  wRemove=new Button(shell,SWT.CHECK);
  props.setLook(wRemove);
  fdRemove=new FormData();
  fdRemove.left=new FormAttachment(middle,margin);
  fdRemove.top=new FormAttachment(wTimeout,margin);
  fdRemove.right=new FormAttachment(100,0);
  wRemove.setLayoutData(fdRemove);
  wlOnlyNew=new Label(shell,SWT.RIGHT);
  wlOnlyNew.setText("Don't overwrite files");
  props.setLook(wlOnlyNew);
  fdlOnlyNew=new FormData();
  fdlOnlyNew.left=new FormAttachment(0,0);
  fdlOnlyNew.top=new FormAttachment(wRemove,margin);
  fdlOnlyNew.right=new FormAttachment(middle,0);
  wlOnlyNew.setLayoutData(fdlOnlyNew);
  wOnlyNew=new Button(shell,SWT.CHECK);
  props.setLook(wOnlyNew);
  fdOnlyNew=new FormData();
  fdOnlyNew.left=new FormAttachment(middle,margin);
  fdOnlyNew.top=new FormAttachment(wRemove,margin);
  fdOnlyNew.right=new FormAttachment(100,0);
  wOnlyNew.setLayoutData(fdOnlyNew);
  wlActive=new Label(shell,SWT.RIGHT);
  wlActive.setText("Use active FTP connection ");
  props.setLook(wlActive);
  fdlActive=new FormData();
  fdlActive.left=new FormAttachment(0,0);
  fdlActive.top=new FormAttachment(wOnlyNew,margin);
  fdlActive.right=new FormAttachment(middle,0);
  wlActive.setLayoutData(fdlActive);
  wActive=new Button(shell,SWT.CHECK);
  props.setLook(wActive);
  fdActive=new FormData();
  fdActive.left=new FormAttachment(middle,margin);
  fdActive.top=new FormAttachment(wOnlyNew,margin);
  fdActive.right=new FormAttachment(100,0);
  wActive.setLayoutData(fdActive);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(" &OK ");
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(" &Cancel ");
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wActive);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wServerName.addSelectionListener(lsDef);
  wUserName.addSelectionListener(lsDef);
  wPassword.addSelectionListener(lsDef);
  wFtpDirectory.addSelectionListener(lsDef);
  wTargetDirectory.addSelectionListener(lsDef);
  wFtpDirectory.addSelectionListener(lsDef);
  wWildcard.addSelectionListener(lsDef);
  wTimeout.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
