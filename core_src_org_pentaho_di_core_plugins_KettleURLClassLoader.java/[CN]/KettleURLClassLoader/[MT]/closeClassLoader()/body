{
  HashSet<String> closedFiles=new HashSet<String>();
  try {
    Object obj=getFieldObject(URLClassLoader.class,"ucp",this);
    ArrayList<?> loaders=(ArrayList<?>)getFieldObject(obj.getClass(),"loaders",obj);
    for (    Object ldr : loaders) {
      try {
        JarFile file=(JarFile)getFieldObject(ldr.getClass(),"jar",ldr);
        closedFiles.add(file.getName());
        file.close();
      }
 catch (      Exception e) {
      }
    }
  }
 catch (  Exception e) {
  }
  try {
    Vector<?> nativeLibArr=(Vector<?>)getFieldObject(ClassLoader.class,"nativeLibraries",this);
    for (    Object lib : nativeLibArr) {
      try {
        Method fMethod=lib.getClass().getDeclaredMethod("finalize",new Class[0]);
        fMethod.setAccessible(true);
        fMethod.invoke(lib,new Object[0]);
      }
 catch (      Exception e) {
      }
    }
  }
 catch (  Exception e) {
  }
  HashMap<?,?> uCache=null;
  HashMap<?,?> fCache=null;
  try {
    Class<?> jarUrlConnClass=null;
    try {
      ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();
      jarUrlConnClass=contextClassLoader.loadClass("sun.net.www.protocol.jar.JarURLConnection");
    }
 catch (    Throwable skip) {
    }
    if (jarUrlConnClass == null) {
      jarUrlConnClass=Class.forName("sun.net.www.protocol.jar.JarURLConnection");
    }
    Class<?> factory=getFieldObject(jarUrlConnClass,"factory",null).getClass();
    try {
      fCache=(HashMap<?,?>)getFieldObject(factory,"fileCache",null);
    }
 catch (    Exception e) {
    }
    try {
      uCache=(HashMap<?,?>)getFieldObject(factory,"urlCache",null);
    }
 catch (    Exception e) {
    }
    if (uCache != null) {
      for (      Object file : ((HashMap<?,?>)uCache.clone()).keySet()) {
        if (file instanceof JarFile) {
          JarFile jar=(JarFile)file;
          if (!closedFiles.contains(jar.getName()))           continue;
          try {
            jar.close();
          }
 catch (          IOException e) {
          }
          if (fCache != null)           fCache.remove(uCache.get(jar));
          uCache.remove(jar);
        }
      }
    }
 else     if (fCache != null) {
      for (      Object key : ((HashMap<?,?>)fCache.clone()).keySet()) {
        Object file=fCache.get(key);
        if (file instanceof JarFile) {
          JarFile jar=(JarFile)file;
          if (!closedFiles.contains(jar.getName()))           continue;
          try {
            jar.close();
          }
 catch (          IOException e) {
          }
          fCache.remove(key);
        }
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
