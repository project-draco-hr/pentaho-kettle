{
  if (!request.getRequestURI().equals(CONTEXT_PATH + "/"))   return;
  if (log.isDebug())   log.logDebug(toString(),"Addition of job requested");
  boolean useXML="Y".equalsIgnoreCase(request.getParameter("xml"));
  PrintWriter out=response.getWriter();
  InputStream is=request.getInputStream();
  if (useXML) {
    response.setContentType("text/xml");
    out.print(XMLHandler.getXMLHeader());
  }
 else {
    response.setContentType("text/html");
    out.println("<HTML>");
    out.println("<HEAD><TITLE>Add job</TITLE></HEAD>");
    out.println("<BODY>");
  }
  response.setStatus(HttpServletResponse.SC_OK);
  try {
    int c;
    StringBuffer xml=new StringBuffer();
    while ((c=is.read()) != -1) {
      xml.append((char)c);
    }
    JobConfiguration jobConfiguration=JobConfiguration.fromXML(xml.toString());
    JobMeta jobMeta=jobConfiguration.getJobMeta();
    JobExecutionConfiguration jobExecutionConfiguration=jobConfiguration.getJobExecutionConfiguration();
    log.setLogLevel(jobExecutionConfiguration.getLogLevel());
    jobMeta.setArguments(jobExecutionConfiguration.getArgumentStrings());
    final Repository repository=jobConfiguration.getJobExecutionConfiguration().getRepository();
    final Job job=new Job(LogWriter.getInstance(),StepLoader.getInstance(),repository,jobMeta);
    Job oldOne=jobMap.getJob(job.getName());
    if (oldOne != null) {
      if (oldOne.isActive()) {
        throw new Exception("A job with the same name exists and is not idle." + Const.CR + "Please stop this job first.");
      }
    }
    Appender appender=jobMap.getAppender(job.getName());
    if (appender != null) {
      log.removeAppender(appender);
      appender.close();
    }
    job.initializeVariablesFrom(null);
    job.getJobMeta().setInternalKettleVariables(job);
    job.injectVariables(jobConfiguration.getJobExecutionConfiguration().getVariables());
    jobMap.addJob(jobMeta.getName(),job,jobConfiguration);
    if (repository != null) {
      job.addJobListener(new JobListener(){
        public void JobFinished(        Job job){
          repository.disconnect();
        }
      }
);
    }
    String message;
    if (oldOne != null) {
      message="Job '" + job.getName() + "' was replaced in the list.";
    }
 else {
      message="Job '" + job.getName() + "' was added to the list.";
    }
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_OK,message));
    }
 else {
      out.println("<H1>" + message + "</H1>");
      out.println("<p><a href=\"/kettle/jobStatus?name=" + job.getName() + "\">Go to the job status page</a><p>");
    }
  }
 catch (  Exception ex) {
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_ERROR,Const.getStackTracker(ex)));
    }
 else {
      out.println("<p>");
      out.println("<pre>");
      ex.printStackTrace(out);
      out.println("</pre>");
    }
  }
  if (!useXML) {
    out.println("<p>");
    out.println("</BODY>");
    out.println("</HTML>");
  }
}
