{
synchronized (repository) {
    PluginRegistry registry=PluginRegistry.getInstance();
    List<PluginInterface> jobPlugins=registry.getPlugins(JobEntryPluginType.getInstance());
    for (int i=0; i < jobPlugins.size(); i++) {
      PluginInterface jobPlugin=jobPlugins.get(i);
      String type_desc=jobPlugin.getIds()[0];
      String type_desc_long=jobPlugin.getName();
      ObjectId id=null;
      if (!create)       id=repository.jobEntryDelegate.getJobEntryTypeID(type_desc);
      if (id == null) {
        id=new LongObjectId(i + 1);
        if (!create)         id=repository.connectionDelegate.getNextJobEntryTypeID();
        RowMetaAndData table=new RowMetaAndData();
        table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_JOBENTRY_TYPE_ID_JOBENTRY_TYPE,ValueMetaInterface.TYPE_INTEGER),id);
        table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_JOBENTRY_TYPE_CODE,ValueMetaInterface.TYPE_STRING),type_desc);
        table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_JOBENTRY_TYPE_DESCRIPTION,ValueMetaInterface.TYPE_STRING),type_desc_long);
        if (dryrun) {
          String sql=database.getSQLOutput(null,KettleDatabaseRepository.TABLE_R_JOBENTRY_TYPE,table.getRowMeta(),table.getData(),null);
          statements.add(sql);
        }
 else {
          database.prepareInsert(table.getRowMeta(),null,KettleDatabaseRepository.TABLE_R_JOBENTRY_TYPE);
          database.setValuesInsert(table);
          database.insertRow();
          database.closeInsert();
        }
      }
    }
  }
}
