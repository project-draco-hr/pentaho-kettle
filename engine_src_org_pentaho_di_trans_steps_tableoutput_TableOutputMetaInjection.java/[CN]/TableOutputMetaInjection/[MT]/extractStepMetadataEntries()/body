{
  List<StepInjectionMetaEntry> list=new ArrayList<StepInjectionMetaEntry>();
  list.add(StepInjectionUtil.getEntry(Entry.TARGET_SCHEMA,meta.getSchemaName()));
  list.add(StepInjectionUtil.getEntry(Entry.TARGET_TABLE,meta.getTableName()));
  list.add(StepInjectionUtil.getEntry(Entry.COMMIT_SIZE,meta.getCommitSize()));
  list.add(StepInjectionUtil.getEntry(Entry.TRUNCATE_TABLE,meta.truncateTable()));
  list.add(StepInjectionUtil.getEntry(Entry.SPECIFY_DATABASE_FIELDS,meta.specifyFields()));
  list.add(StepInjectionUtil.getEntry(Entry.IGNORE_INSERT_ERRORS,meta.ignoreErrors()));
  list.add(StepInjectionUtil.getEntry(Entry.USE_BATCH_UPDATE,meta.useBatchUpdate()));
  list.add(StepInjectionUtil.getEntry(Entry.PARTITION_OVER_TABLES,meta.isPartitioningEnabled()));
  list.add(StepInjectionUtil.getEntry(Entry.PARTITIONING_FIELD,meta.getPartitioningField()));
  list.add(StepInjectionUtil.getEntry(Entry.PARTITION_DATA_PER,meta.isPartitioningDaily() ? "DAY" : meta.isPartitioningMonthly() ? "MONTH" : ""));
  list.add(StepInjectionUtil.getEntry(Entry.TABLE_NAME_DEFINED_IN_FIELD,meta.isTableNameInField()));
  list.add(StepInjectionUtil.getEntry(Entry.TABLE_NAME_FIELD,meta.getTableNameField()));
  list.add(StepInjectionUtil.getEntry(Entry.STORE_TABLE_NAME,meta.isTableNameInTable()));
  list.add(StepInjectionUtil.getEntry(Entry.RETURN_AUTO_GENERATED_KEY,meta.isReturningGeneratedKeys()));
  list.add(StepInjectionUtil.getEntry(Entry.AUTO_GENERATED_KEY_FIELD,meta.getGeneratedKeyField()));
  StepInjectionMetaEntry fieldsEntry=StepInjectionUtil.getEntry(Entry.DATABASE_FIELDS);
  list.add(fieldsEntry);
  for (int i=0; i < meta.getFieldDatabase().length; i++) {
    StepInjectionMetaEntry fieldEntry=StepInjectionUtil.getEntry(Entry.DATABASE_FIELD);
    List<StepInjectionMetaEntry> details=fieldEntry.getDetails();
    details.add(StepInjectionUtil.getEntry(Entry.DATABASE_FIELDNAME,meta.getFieldDatabase()[i]));
    details.add(StepInjectionUtil.getEntry(Entry.STREAM_FIELDNAME,meta.getFieldStream()[i]));
    fieldsEntry.getDetails().add(fieldEntry);
  }
  return list;
}
