{
  List<StepInjectionMetaEntry> all=new ArrayList<StepInjectionMetaEntry>();
  Entry[] topEntries=new Entry[]{Entry.TARGET_SCHEMA,Entry.TARGET_TABLE,Entry.COMMIT_SIZE,Entry.TRUNCATE_TABLE,Entry.SPECIFY_DATABASE_FIELDS,Entry.IGNORE_INSERT_ERRORS,Entry.USE_BATCH_UPDATE,Entry.PARTITION_OVER_TABLES,Entry.PARTITIONING_FIELD,Entry.PARTITION_DATA_PER,Entry.TABLE_NAME_DEFINED_IN_FIELD,Entry.TABLE_NAME_FIELD,Entry.STORE_TABLE_NAME,Entry.RETURN_AUTO_GENERATED_KEY,Entry.AUTO_GENERATED_KEY_FIELD};
  for (  Entry topEntry : topEntries) {
    all.add(new StepInjectionMetaEntry(topEntry.name(),topEntry.getValueType(),topEntry.getDescription()));
  }
  StepInjectionMetaEntry fieldsEntry=new StepInjectionMetaEntry(Entry.DATABASE_FIELDS.name(),ValueMetaInterface.TYPE_NONE,Entry.DATABASE_FIELDS.description);
  all.add(fieldsEntry);
  StepInjectionMetaEntry fieldEntry=new StepInjectionMetaEntry(Entry.DATABASE_FIELD.name(),ValueMetaInterface.TYPE_NONE,Entry.DATABASE_FIELD.description);
  fieldsEntry.getDetails().add(fieldEntry);
  Entry[] fieldsEntries=new Entry[]{Entry.DATABASE_FIELDNAME,Entry.STREAM_FIELDNAME};
  for (  Entry entry : fieldsEntries) {
    StepInjectionMetaEntry metaEntry=new StepInjectionMetaEntry(entry.name(),entry.getValueType(),entry.getDescription());
    fieldEntry.getDetails().add(metaEntry);
  }
  return all;
}
