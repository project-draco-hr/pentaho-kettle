{
  try {
    serverName=rep.getJobEntryAttributeString(id_jobentry,"servername");
    serverPort=rep.getJobEntryAttributeString(id_jobentry,"serverport");
    userName=rep.getJobEntryAttributeString(id_jobentry,"username");
    password=Encr.decryptPasswordOptionallyEncrypted(rep.getJobEntryAttributeString(id_jobentry,"password"));
    sftpDirectory=rep.getJobEntryAttributeString(id_jobentry,"sftpdirectory");
    targetDirectory=rep.getJobEntryAttributeString(id_jobentry,"targetdirectory");
    wildcard=rep.getJobEntryAttributeString(id_jobentry,"wildcard");
    remove=rep.getJobEntryAttributeBoolean(id_jobentry,"remove");
    String addToResult=rep.getStepAttributeString(id_jobentry,"add_to_result_filenames");
    if (Const.isEmpty(addToResult)) {
      isaddresult=true;
    }
 else {
      isaddresult=rep.getStepAttributeBoolean(id_jobentry,"add_to_result_filenames");
    }
    createtargetfolder=rep.getJobEntryAttributeBoolean(id_jobentry,"createtargetfolder");
    copyprevious=rep.getJobEntryAttributeBoolean(id_jobentry,"copyprevious");
    usekeyfilename=rep.getJobEntryAttributeBoolean(id_jobentry,"usekeyfilename");
    keyfilename=rep.getJobEntryAttributeString(id_jobentry,"keyfilename");
    keyfilepass=Encr.decryptPasswordOptionallyEncrypted(rep.getJobEntryAttributeString(id_jobentry,"keyfilepass"));
    compression=rep.getJobEntryAttributeString(id_jobentry,"compression");
    proxyType=rep.getJobEntryAttributeString(id_jobentry,"proxyType");
    proxyHost=rep.getJobEntryAttributeString(id_jobentry,"proxyHost");
    proxyPort=rep.getJobEntryAttributeString(id_jobentry,"proxyPort");
    proxyUsername=rep.getJobEntryAttributeString(id_jobentry,"proxyUsername");
    proxyPassword=Encr.decryptPasswordOptionallyEncrypted(rep.getJobEntryAttributeString(id_jobentry,"proxyPassword"));
  }
 catch (  KettleException dbe) {
    throw new KettleException("Unable to load job entry of type 'SFTP' from the repository for id_jobentry=" + id_jobentry,dbe);
  }
}
