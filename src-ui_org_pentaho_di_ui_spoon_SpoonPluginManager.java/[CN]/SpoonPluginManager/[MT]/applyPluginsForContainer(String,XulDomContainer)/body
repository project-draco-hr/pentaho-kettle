{
  List<SpoonPluginInterface> plugins=pluginCategoryMap.get(category);
  if (plugins != null) {
    for (    SpoonPluginInterface sp : plugins) {
      sp.applyToContainer(category,container);
    }
  }
  PluginRegistry.getInstance().addPluginListener(SpoonPluginType.class,new PluginTypeListener(){
    public void pluginAdded(    final Object serviceObject){
      ((Spoon)SpoonFactory.getInstance()).getDisplay().asyncExec(new Runnable(){
        public void run(){
          try {
            final SpoonPluginInterface sp=loadPlugin((SpoonPluginInterface)PluginRegistry.getInstance().loadClass((PluginInterface)serviceObject));
            if (sp == null) {
              return;
            }
            ((Spoon)SpoonFactory.getInstance()).getDisplay().syncExec(new Runnable(){
              public void run(){
                try {
                  sp.applyToContainer(category,container);
                }
 catch (                XulException e) {
                  e.printStackTrace();
                }
              }
            }
);
          }
 catch (          KettlePluginException e) {
            e.printStackTrace();
          }
        }
      }
);
    }
    public void pluginRemoved(    Object serviceObject){
    }
    public void pluginChanged(    Object serviceObject){
    }
  }
);
}
