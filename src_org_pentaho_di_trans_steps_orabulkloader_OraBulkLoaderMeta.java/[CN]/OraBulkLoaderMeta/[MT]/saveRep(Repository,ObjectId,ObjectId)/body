{
  try {
    rep.saveDatabaseMetaStepAttribute(id_transformation,id_step,"id_connection",databaseMeta);
    rep.saveStepAttribute(id_transformation,id_step,"commit",commitSize);
    rep.saveStepAttribute(id_transformation,id_step,"bind_size",bindSize);
    rep.saveStepAttribute(id_transformation,id_step,"read_size",readSize);
    rep.saveStepAttribute(id_transformation,id_step,"errors",maxErrors);
    rep.saveStepAttribute(id_transformation,id_step,"schema",schemaName);
    rep.saveStepAttribute(id_transformation,id_step,"table",tableName);
    rep.saveStepAttribute(id_transformation,id_step,"load_method",loadMethod);
    rep.saveStepAttribute(id_transformation,id_step,"load_action",loadAction);
    rep.saveStepAttribute(id_transformation,id_step,"sqlldr",sqlldr);
    rep.saveStepAttribute(id_transformation,id_step,"control_file",controlFile);
    rep.saveStepAttribute(id_transformation,id_step,"data_file",dataFile);
    rep.saveStepAttribute(id_transformation,id_step,"log_file",logFile);
    rep.saveStepAttribute(id_transformation,id_step,"bad_file",badFile);
    rep.saveStepAttribute(id_transformation,id_step,"discard_file",discardFile);
    rep.saveStepAttribute(id_transformation,id_step,"direct_path",directPath);
    rep.saveStepAttribute(id_transformation,id_step,"erase_files",eraseFiles);
    rep.saveStepAttribute(id_transformation,id_step,"encoding",encoding);
    rep.saveStepAttribute(id_transformation,id_step,"dbname_override",dbNameOverride);
    rep.saveStepAttribute(id_transformation,id_step,"character_set",characterSetName);
    rep.saveStepAttribute(id_transformation,id_step,"fail_on_warning",failOnWarning);
    rep.saveStepAttribute(id_transformation,id_step,"fail_on_error",failOnError);
    rep.saveStepAttribute(id_transformation,id_step,"parallel",parallel);
    rep.saveStepAttribute(id_transformation,id_step,"alt_rec_term",altRecordTerm);
    for (int i=0; i < fieldTable.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"stream_name",fieldTable[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",fieldStream[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"date_mask",dateMask[i]);
    }
    if (databaseMeta != null)     rep.insertStepDatabase(id_transformation,id_step,databaseMeta.getObjectId());
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"OraBulkLoaderMeta.Exception.UnableToSaveStepInfoToRepository") + id_step,e);
  }
}
