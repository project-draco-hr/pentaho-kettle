{
  this.repsinfo=new RepositoriesMeta(log);
  if (!this.repsinfo.readData()) {
    log.logError(toString(),BaseMessages.getString(PKG,"JobExportRepository.Error.NoRep"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.NoRep"));
  }
  this.repinfo=this.repsinfo.findRepository(realrepName);
  if (this.repinfo == null) {
    log.logError(toString(),BaseMessages.getString(PKG,"JobExportRepository.Error.NoRepSystem"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.NoRepSystem"));
  }
  this.repository=new KettleDatabaseRepository(this.repinfo,this.userinfo);
  if (!this.repository.connect("Export job entry")) {
    log.logError(toString(),BaseMessages.getString(PKG,"JobExportRepository.Error.CanNotConnectRep"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.CanNotConnectRep"));
  }
  if (log.isDebug())   log.logDebug(toString(),BaseMessages.getString(PKG,"JobExportRepository.Log.CheckSuppliedUserPass"));
  this.userinfo=this.repository.loadUserInfo(realusername,realpassword);
  if (log.isDebug())   log.logDebug(toString(),BaseMessages.getString(PKG,"JobExportRepository.Log.CheckingUser",userinfo.getUsername()));
  if (this.userinfo.getID() <= 0) {
    log.logError(toString(),BaseMessages.getString(PKG,"JobExportRepository.Error.CanNotVerifyUserPass"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.CanNotVerifyUserPass"));
  }
  if (log.isDebug())   log.logDebug(toString(),BaseMessages.getString(PKG,"JobExportRepository.Log.SuppliedUserPassVerified"));
}
