{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    repositoryname=XMLHandler.getTagValue(entrynode,"repositoryname");
    username=XMLHandler.getTagValue(entrynode,"username");
    password=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(entrynode,"password"));
    targetfilename=XMLHandler.getTagValue(entrynode,"targetfilename");
    iffileexists=XMLHandler.getTagValue(entrynode,"iffileexists");
    export_type=XMLHandler.getTagValue(entrynode,"export_type");
    directoryPath=XMLHandler.getTagValue(entrynode,"directoryPath");
    add_date="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_date"));
    add_time="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_time"));
    SpecifyFormat="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"SpecifyFormat"));
    date_time_format=XMLHandler.getTagValue(entrynode,"date_time_format");
    createfolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"createfolder"));
    newfolder="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"newfolder"));
    add_result_filesname="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"add_result_filesname"));
    nr_errors_less_than=XMLHandler.getTagValue(entrynode,"nr_errors_less_than");
    success_condition=XMLHandler.getTagValue(entrynode,"success_condition");
  }
 catch (  KettleXMLException xe) {
    throw new KettleXMLException(Messages.getString("JobExportRepository.Meta.UnableLoadXML"),xe);
  }
}
