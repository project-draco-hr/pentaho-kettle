{
  String hostConcrete="host_concrete";
  String portConcrete="12345";
  Set<String> binaryAttributes=new HashSet<String>();
  String attr1="TEST_ATTR_1";
  String attr2="TEST_ATTR_2";
  String attr3="TEST_ATTR_3";
  binaryAttributes.add(attr1);
  binaryAttributes.add(attr2);
  binaryAttributes.add(attr3);
  when(mockLdapMeta.getHost()).thenReturn(hostConcrete);
  when(mockLdapMeta.getPort()).thenReturn(portConcrete);
  when(mockLdapMeta.getDerefAliases()).thenReturn("always");
  when(mockLdapMeta.getReferrals()).thenReturn("follow");
  when(mockVariableSpace.environmentSubstitute(eq(hostConcrete))).thenReturn(hostConcrete);
  when(mockVariableSpace.environmentSubstitute(eq(portConcrete))).thenReturn(portConcrete);
  TestableLdapProtocol testableLdapProtocol=new TestableLdapProtocol(mockLogChannelInterface,mockVariableSpace,mockLdapMeta,binaryAttributes);
  testableLdapProtocol.connect(null,null);
  String attributesString=testableLdapProtocol.contextEnv.get("java.naming.ldap.attributes.binary");
  String[] splitString=attributesString.split(" ");
  Set<String> boundAttributes=new HashSet<String>(Arrays.asList(splitString));
  assertEquals(binaryAttributes,boundAttributes);
}
