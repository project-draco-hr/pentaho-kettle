{
  String hostConcrete="host_concrete";
  String portConcrete="12345";
  String username="TEST_USERNAME";
  String password="TEST_PASSWORD";
  when(mockLdapMeta.getHost()).thenReturn(hostConcrete);
  when(mockLdapMeta.getPort()).thenReturn(portConcrete);
  when(mockLdapMeta.getDerefAliases()).thenReturn("always");
  when(mockLdapMeta.getReferrals()).thenReturn("follow");
  when(mockVariableSpace.environmentSubstitute(eq(hostConcrete))).thenReturn(hostConcrete);
  when(mockVariableSpace.environmentSubstitute(eq(portConcrete))).thenReturn(portConcrete);
  TestableLdapProtocol testableLdapProtocol=new TestableLdapProtocol(mockLogChannelInterface,mockVariableSpace,mockLdapMeta,null);
  testableLdapProtocol.connect(username,password);
  assertEquals(username,testableLdapProtocol.contextEnv.get(Context.SECURITY_PRINCIPAL));
  assertEquals(password,testableLdapProtocol.contextEnv.get(Context.SECURITY_CREDENTIALS));
  assertEquals("simple",testableLdapProtocol.contextEnv.get(Context.SECURITY_AUTHENTICATION));
}
