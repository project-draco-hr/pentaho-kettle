{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("AddXMLMeta.CheckResult.FieldsReceived","" + prev.size()),stepMeta);
    remarks.add(cr);
    String error_message="";
    boolean error_found=false;
    for (int i=0; i < outputFields.length; i++) {
      int idx=prev.indexOfValue(outputFields[i].getFieldName());
      if (idx < 0) {
        error_message+="\t\t" + outputFields[i].getFieldName() + Const.CR;
        error_found=true;
      }
    }
    if (error_found) {
      error_message=Messages.getString("AddXMLMeta.CheckResult.FieldsNotFound",error_message);
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,error_message,stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("AddXMLMeta.CheckResult.AllFieldsFound"),stepMeta);
      remarks.add(cr);
    }
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,Messages.getString("AddXMLMeta.CheckResult.ExpectedInputOk"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,Messages.getString("AddXMLMeta.CheckResult.ExpectedInputError"),stepMeta);
    remarks.add(cr);
  }
  cr=new CheckResult(CheckResult.TYPE_RESULT_COMMENT,Messages.getString("AddXMLMeta.CheckResult.FilesNotChecked"),stepMeta);
  remarks.add(cr);
}
