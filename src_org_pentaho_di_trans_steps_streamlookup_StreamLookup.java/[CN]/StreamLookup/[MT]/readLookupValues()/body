{
  data.infoStream=meta.getStepIOMeta().getInfoStreams()[0];
  if (data.infoStream.getStepMeta() == null) {
    logError(BaseMessages.getString(PKG,"StreamLookup.Log.NoLookupStepSpecified"));
    return false;
  }
  if (log.isDetailed())   logDetailed(BaseMessages.getString(PKG,"StreamLookup.Log.ReadingFromStream") + data.infoStream.getStepname() + "]");
  int[] keyNrs=new int[meta.getKeylookup().length];
  int[] valueNrs=new int[meta.getValue().length];
  boolean firstRun=true;
  RowSet rowSet=findInputRowSet(data.infoStream.getStepname());
  Object[] rowData=getRowFrom(rowSet);
  while (rowData != null) {
    if (log.isRowLevel())     logRowlevel(BaseMessages.getString(PKG,"StreamLookup.Log.ReadLookupRow") + rowSet.getRowMeta().getString(rowData));
    if (firstRun) {
      firstRun=false;
      data.hasLookupRows=true;
      data.infoMeta=rowSet.getRowMeta().clone();
      data.keyMeta=new RowMeta();
      data.valueMeta=new RowMeta();
      for (int i=0; i < meta.getKeylookup().length; i++) {
        keyNrs[i]=rowSet.getRowMeta().indexOfValue(meta.getKeylookup()[i]);
        if (keyNrs[i] < 0) {
          throw new KettleStepException(BaseMessages.getString(PKG,"StreamLookup.Exception.UnableToFindField",meta.getKeylookup()[i]));
        }
        data.keyMeta.addValueMeta(rowSet.getRowMeta().getValueMeta(keyNrs[i]));
      }
      if (data.keyTypes == null) {
        data.keyTypes=data.keyMeta.clone();
      }
      for (int i=0; i < keyNrs.length; i++) {
        data.keyMeta.getValueMeta(i).setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
      }
      for (int v=0; v < meta.getValue().length; v++) {
        valueNrs[v]=rowSet.getRowMeta().indexOfValue(meta.getValue()[v]);
        if (valueNrs[v] < 0) {
          throw new KettleStepException(BaseMessages.getString(PKG,"StreamLookup.Exception.UnableToFindField",meta.getValue()[v]));
        }
        data.valueMeta.addValueMeta(rowSet.getRowMeta().getValueMeta(valueNrs[v]));
      }
    }
    Object[] keyData=new Object[keyNrs.length];
    for (int i=0; i < keyNrs.length; i++) {
      ValueMetaInterface keyMeta=data.keyTypes.getValueMeta(i);
      keyData[i]=keyMeta.convertToNormalStorageType(rowData[keyNrs[i]]);
      keyMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
    }
    Object[] valueData=new Object[valueNrs.length];
    for (int i=0; i < valueNrs.length; i++) {
      ValueMetaInterface valueMeta=data.valueMeta.getValueMeta(i);
      valueData[i]=valueMeta.convertToNormalStorageType(rowData[valueNrs[i]]);
    }
    addToCache(data.keyMeta,keyData,data.valueMeta,valueData);
    rowData=getRowFrom(rowSet);
  }
  return true;
}
