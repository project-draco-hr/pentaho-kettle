{
  meta=(StreamLookupMeta)smi;
  data=(StreamLookupData)sdi;
  if (data.readLookupValues) {
    data.readLookupValues=false;
    logBasic(Messages.getString("StreamLookup.Log.ReadingLookupValuesFromStep") + meta.getLookupFromStep() + "]");
    if (!readLookupValues()) {
      logError(Messages.getString("StreamLookup.Log.UnableToReadDataFromLookupStream"));
      setErrors(1);
      stopAll();
      return false;
    }
  }
  Object[] r=getRow();
  if (r == null) {
    if (log.isDetailed())     logDetailed(Messages.getString("StreamLookup.Log.StoppedProcessingWithEmpty",linesRead + ""));
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.keynrs=new int[meta.getKeystream().length];
    data.lookupMeta=new RowMeta();
    data.convertKeysToNative=new boolean[meta.getKeystream().length];
    for (int i=0; i < meta.getKeystream().length; i++) {
      data.keynrs[i]=getInputRowMeta().indexOfValue(meta.getKeystream()[i]);
      if (data.keynrs[i] < 0) {
        throw new KettleStepException(Messages.getString("StreamLookup.Log.FieldNotFound",meta.getKeystream()[i],"" + getInputRowMeta().getString(r)));
      }
 else {
        if (log.isDetailed())         logDetailed(Messages.getString("StreamLookup.Log.FieldInfo",meta.getKeystream()[i],"" + data.keynrs[i]));
      }
      data.lookupMeta.addValueMeta(getInputRowMeta().getValueMeta(data.keynrs[i]).clone());
      data.convertKeysToNative[i]=getInputRowMeta().getValueMeta(data.keynrs[i]).isStorageBinaryString();
    }
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),new RowMetaInterface[]{data.infoMeta},null,this);
    handleNullIf();
  }
  Object[] outputRow=lookupValues(getInputRowMeta(),r);
  if (outputRow == null) {
    setOutputDone();
    return false;
  }
  putRow(data.outputRowMeta,outputRow);
  if (checkFeedback(linesRead))   logBasic(Messages.getString("StreamLookup.Log.LineNumber") + linesRead);
  return true;
}
