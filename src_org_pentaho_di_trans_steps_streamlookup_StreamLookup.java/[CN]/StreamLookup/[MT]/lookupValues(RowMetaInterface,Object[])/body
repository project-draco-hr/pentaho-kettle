{
  if (isStopped())   return null;
  if (data.lookupColumnIndex == null) {
    String names[]=data.lookupMeta.getFieldNames();
    data.lookupColumnIndex=new int[names.length];
    for (int i=0; i < names.length; i++) {
      data.lookupColumnIndex[i]=rowMeta.indexOfValue(names[i]);
      if (data.lookupColumnIndex[i] < 0) {
        throw new KettleStepException("The lookup column '" + names[i] + "' could not be found");
      }
    }
  }
  Object[] lu=RowDataUtil.resizeArray(row,data.keynrs.length);
  if (data.keyTypes != null) {
    for (int i=0; i < data.lookupMeta.size(); i++) {
      ValueMetaInterface inputValue=data.lookupMeta.getValueMeta(i);
      ValueMetaInterface lookupValue=data.keyTypes.getValueMeta(i);
      if (inputValue.getType() != lookupValue.getType()) {
        try {
          lu[i]=inputValue.convertData(lookupValue,lu[i]);
        }
 catch (        KettleValueException e) {
          throw new KettleStepException("Error converting data while looking up value",e);
        }
      }
    }
  }
  Object[] add;
  try {
    if (meta.getKeystream().length > 0) {
      Object lookupData[]=new Object[data.lookupColumnIndex.length];
      for (int i=0; i < lookupData.length; i++)       lookupData[i]=row[data.lookupColumnIndex[i]];
      add=getFromCache(data.lookupMeta,lookupData);
    }
 else {
      throw new KettleStepException(Messages.getString("StreamLookup.Log.GotRowWithoutKeys"));
    }
  }
 catch (  Exception e) {
    throw new KettleStepException(e);
  }
  if (add == null) {
    add=new Object[meta.getValue().length];
  }
  return RowDataUtil.addRowData(row,rowMeta.size(),add);
}
