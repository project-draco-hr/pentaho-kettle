{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobUnZip.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobUnZip.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlZipFilename=new Label(shell,SWT.RIGHT);
  wlZipFilename.setText(Messages.getString("JobUnZip.ZipFilename.Label"));
  props.setLook(wlZipFilename);
  fdlZipFilename=new FormData();
  fdlZipFilename.left=new FormAttachment(0,0);
  fdlZipFilename.top=new FormAttachment(wName,margin);
  fdlZipFilename.right=new FormAttachment(middle,-margin);
  wlZipFilename.setLayoutData(fdlZipFilename);
  wbZipFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbZipFilename);
  wbZipFilename.setText(Messages.getString("System.Button.Browse"));
  fdbZipFilename=new FormData();
  fdbZipFilename.right=new FormAttachment(100,0);
  fdbZipFilename.top=new FormAttachment(wName,0);
  wbZipFilename.setLayoutData(fdbZipFilename);
  wZipFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wZipFilename);
  wZipFilename.addModifyListener(lsMod);
  fdZipFilename=new FormData();
  fdZipFilename.left=new FormAttachment(middle,0);
  fdZipFilename.top=new FormAttachment(wName,margin);
  fdZipFilename.right=new FormAttachment(wbZipFilename,-margin);
  wZipFilename.setLayoutData(fdZipFilename);
  wZipFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wZipFilename.setToolTipText(jobMeta.environmentSubstitute(wZipFilename.getText()));
    }
  }
);
  wbZipFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.zip;*.ZIP","*"});
      if (wZipFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wZipFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wZipFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlTargetDirectory=new Label(shell,SWT.RIGHT);
  wlTargetDirectory.setText(Messages.getString("JobUnZip.TargetDir.Label"));
  props.setLook(wlTargetDirectory);
  fdlTargetDirectory=new FormData();
  fdlTargetDirectory.left=new FormAttachment(0,0);
  fdlTargetDirectory.top=new FormAttachment(wZipFilename,margin);
  fdlTargetDirectory.right=new FormAttachment(middle,-margin);
  wlTargetDirectory.setLayoutData(fdlTargetDirectory);
  wbTargetDirectory=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTargetDirectory);
  wbTargetDirectory.setText(Messages.getString("JobUnZip.BrowseFolders.Label"));
  fdbTargetDirectory=new FormData();
  fdbTargetDirectory.right=new FormAttachment(100,0);
  fdbTargetDirectory.top=new FormAttachment(wZipFilename,margin);
  wbTargetDirectory.setLayoutData(fdbTargetDirectory);
  wTargetDirectory=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobUnZip.TargetDir.Tooltip"));
  props.setLook(wTargetDirectory);
  wTargetDirectory.addModifyListener(lsMod);
  fdTargetDirectory=new FormData();
  fdTargetDirectory.left=new FormAttachment(middle,0);
  fdTargetDirectory.top=new FormAttachment(wZipFilename,margin);
  fdTargetDirectory.right=new FormAttachment(wbTargetDirectory,-margin);
  wTargetDirectory.setLayoutData(fdTargetDirectory);
  wlWildcard=new Label(shell,SWT.RIGHT);
  wlWildcard.setText(Messages.getString("JobUnZip.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wTargetDirectory,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobUnZip.Wildcard.Tooltip"));
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wTargetDirectory,margin);
  fdWildcard.right=new FormAttachment(100,0);
  wWildcard.setLayoutData(fdWildcard);
  wlWildcardExclude=new Label(shell,SWT.RIGHT);
  wlWildcardExclude.setText(Messages.getString("JobUnZip.WildcardExclude.Label"));
  props.setLook(wlWildcardExclude);
  fdlWildcardExclude=new FormData();
  fdlWildcardExclude.left=new FormAttachment(0,0);
  fdlWildcardExclude.top=new FormAttachment(wWildcard,margin);
  fdlWildcardExclude.right=new FormAttachment(middle,-margin);
  wlWildcardExclude.setLayoutData(fdlWildcardExclude);
  wWildcardExclude=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobUnZip.WildcardExclude.Tooltip"));
  props.setLook(wWildcardExclude);
  wWildcardExclude.addModifyListener(lsMod);
  fdWildcardExclude=new FormData();
  fdWildcardExclude.left=new FormAttachment(middle,0);
  fdWildcardExclude.top=new FormAttachment(wWildcard,margin);
  fdWildcardExclude.right=new FormAttachment(100,0);
  wWildcardExclude.setLayoutData(fdWildcardExclude);
  wlAfterUnZip=new Label(shell,SWT.RIGHT);
  wlAfterUnZip.setText(Messages.getString("JobUnZip.AfterUnZip.Label"));
  props.setLook(wlAfterUnZip);
  fdlAfterUnZip=new FormData();
  fdlAfterUnZip.left=new FormAttachment(0,0);
  fdlAfterUnZip.right=new FormAttachment(middle,0);
  fdlAfterUnZip.top=new FormAttachment(wWildcardExclude,margin);
  wlAfterUnZip.setLayoutData(fdlAfterUnZip);
  wAfterUnZip=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wAfterUnZip.add(Messages.getString("JobUnZip.Do_Nothing_AfterUnZip.Label"));
  wAfterUnZip.add(Messages.getString("JobUnZip.Delete_Files_AfterUnZip.Label"));
  wAfterUnZip.add(Messages.getString("JobUnZip.Move_Files_AfterUnZip.Label"));
  wAfterUnZip.select(0);
  props.setLook(wAfterUnZip);
  fdAfterUnZip=new FormData();
  fdAfterUnZip.left=new FormAttachment(middle,0);
  fdAfterUnZip.top=new FormAttachment(wWildcardExclude,margin);
  fdAfterUnZip.right=new FormAttachment(100,0);
  wAfterUnZip.setLayoutData(fdAfterUnZip);
  wAfterUnZip.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      AfterUnZipActivate();
    }
  }
);
  wlMovetoDirectory=new Label(shell,SWT.RIGHT);
  wlMovetoDirectory.setText(Messages.getString("JobUnZip.MovetoDirectory.Label"));
  props.setLook(wlMovetoDirectory);
  fdlMovetoDirectory=new FormData();
  fdlMovetoDirectory.left=new FormAttachment(0,0);
  fdlMovetoDirectory.top=new FormAttachment(wAfterUnZip,margin);
  fdlMovetoDirectory.right=new FormAttachment(middle,-margin);
  wlMovetoDirectory.setLayoutData(fdlMovetoDirectory);
  wMovetoDirectory=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobUnZip.MovetoDirectory.Tooltip"));
  props.setLook(wMovetoDirectory);
  wbMovetoDirectory=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbMovetoDirectory);
  wbMovetoDirectory.setText(Messages.getString("JobUnZip.BrowseFolders.Label"));
  fdbMovetoDirectory=new FormData();
  fdbMovetoDirectory.right=new FormAttachment(100,0);
  fdbMovetoDirectory.top=new FormAttachment(wAfterUnZip,margin);
  wbMovetoDirectory.setLayoutData(fdbMovetoDirectory);
  wMovetoDirectory.addModifyListener(lsMod);
  fdMovetoDirectory=new FormData();
  fdMovetoDirectory.left=new FormAttachment(middle,0);
  fdMovetoDirectory.top=new FormAttachment(wAfterUnZip,margin);
  fdMovetoDirectory.right=new FormAttachment(wbMovetoDirectory,-margin);
  wMovetoDirectory.setLayoutData(fdMovetoDirectory);
  wFileResult=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wFileResult);
  wFileResult.setText(Messages.getString("JobUnZip.FileResult.Group.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wFileResult.setLayout(groupLayout);
  wlAddFileToResult=new Label(wFileResult,SWT.RIGHT);
  wlAddFileToResult.setText(Messages.getString("JobUnZip.AddFileToResult.Label"));
  props.setLook(wlAddFileToResult);
  fdlAddFileToResult=new FormData();
  fdlAddFileToResult.left=new FormAttachment(0,0);
  fdlAddFileToResult.top=new FormAttachment(wMovetoDirectory,margin);
  fdlAddFileToResult.right=new FormAttachment(middle,-margin);
  wlAddFileToResult.setLayoutData(fdlAddFileToResult);
  wAddFileToResult=new Button(wFileResult,SWT.CHECK);
  props.setLook(wAddFileToResult);
  wAddFileToResult.setToolTipText(Messages.getString("JobUnZip.AddFileToResult.Tooltip"));
  fdAddFileToResult=new FormData();
  fdAddFileToResult.left=new FormAttachment(middle,0);
  fdAddFileToResult.top=new FormAttachment(wMovetoDirectory,margin);
  fdAddFileToResult.right=new FormAttachment(100,0);
  wAddFileToResult.setLayoutData(fdAddFileToResult);
  wAddFileToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdFileResult=new FormData();
  fdFileResult.left=new FormAttachment(0,margin);
  fdFileResult.top=new FormAttachment(wMovetoDirectory,margin);
  fdFileResult.right=new FormAttachment(100,-margin);
  wFileResult.setLayoutData(fdFileResult);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wFileResult);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wbTargetDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wTargetDirectory.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wTargetDirectory.setText(dir);
      }
    }
  }
);
  wbMovetoDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wMovetoDirectory.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wMovetoDirectory.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wMovetoDirectory.setText(dir);
      }
    }
  }
);
  wName.addSelectionListener(lsDef);
  wZipFilename.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  AfterUnZipActivate();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
