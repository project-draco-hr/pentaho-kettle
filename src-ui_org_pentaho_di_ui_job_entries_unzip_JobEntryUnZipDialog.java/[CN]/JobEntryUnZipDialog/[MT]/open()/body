{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobUnZip.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobUnZip.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"JobUnZip.Tab.General.Label"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wSource=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wSource);
  wSource.setText(BaseMessages.getString(PKG,"JobUnZip.Source.Group.Label"));
  FormLayout groupSourceLayout=new FormLayout();
  groupSourceLayout.marginWidth=10;
  groupSourceLayout.marginHeight=10;
  wSource.setLayout(groupSourceLayout);
  wlArgsPrevious=new Label(wSource,SWT.RIGHT);
  wlArgsPrevious.setText(BaseMessages.getString(PKG,"JobUnZip.ArgsPrevious.Label"));
  props.setLook(wlArgsPrevious);
  fdlArgsPrevious=new FormData();
  fdlArgsPrevious.left=new FormAttachment(0,0);
  fdlArgsPrevious.top=new FormAttachment(0,margin);
  fdlArgsPrevious.right=new FormAttachment(middle,-margin);
  wlArgsPrevious.setLayoutData(fdlArgsPrevious);
  wArgsPrevious=new Button(wSource,SWT.CHECK);
  props.setLook(wArgsPrevious);
  wArgsPrevious.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.ArgsPrevious.Tooltip"));
  fdArgsPrevious=new FormData();
  fdArgsPrevious.left=new FormAttachment(middle,0);
  fdArgsPrevious.top=new FormAttachment(0,margin);
  fdArgsPrevious.right=new FormAttachment(100,0);
  wArgsPrevious.setLayoutData(fdArgsPrevious);
  wArgsPrevious.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setArgdPrevious();
      jobEntry.setChanged();
    }
  }
);
  wlZipFilename=new Label(wSource,SWT.RIGHT);
  wlZipFilename.setText(BaseMessages.getString(PKG,"JobUnZip.ZipFilename.Label"));
  props.setLook(wlZipFilename);
  fdlZipFilename=new FormData();
  fdlZipFilename.left=new FormAttachment(0,0);
  fdlZipFilename.top=new FormAttachment(wArgsPrevious,margin);
  fdlZipFilename.right=new FormAttachment(middle,-margin);
  wlZipFilename.setLayoutData(fdlZipFilename);
  wbSourceDirectory=new Button(wSource,SWT.PUSH | SWT.CENTER);
  props.setLook(wbSourceDirectory);
  wbSourceDirectory.setText(BaseMessages.getString(PKG,"JobUnZip.BrowseFolders.Label"));
  fdbSourceDirectory=new FormData();
  fdbSourceDirectory.right=new FormAttachment(100,0);
  fdbSourceDirectory.top=new FormAttachment(wArgsPrevious,margin);
  wbSourceDirectory.setLayoutData(fdbSourceDirectory);
  wbSourceDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wZipFilename.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wZipFilename.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wZipFilename.setText(dir);
      }
    }
  }
);
  wbZipFilename=new Button(wSource,SWT.PUSH | SWT.CENTER);
  props.setLook(wbZipFilename);
  wbZipFilename.setText(BaseMessages.getString(PKG,"JobUnZip.BrowseFiles.Label"));
  fdbZipFilename=new FormData();
  fdbZipFilename.right=new FormAttachment(wbSourceDirectory,-margin);
  fdbZipFilename.top=new FormAttachment(wArgsPrevious,margin);
  wbZipFilename.setLayoutData(fdbZipFilename);
  wZipFilename=new TextVar(jobMeta,wSource,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wZipFilename);
  wZipFilename.addModifyListener(lsMod);
  fdZipFilename=new FormData();
  fdZipFilename.left=new FormAttachment(middle,0);
  fdZipFilename.top=new FormAttachment(wArgsPrevious,margin);
  fdZipFilename.right=new FormAttachment(wbZipFilename,-margin);
  wZipFilename.setLayoutData(fdZipFilename);
  wZipFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wZipFilename.setToolTipText(jobMeta.environmentSubstitute(wZipFilename.getText()));
    }
  }
);
  wbZipFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*.zip;*.ZIP","*.jar;*.JAR","*"});
      if (wZipFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wZipFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wZipFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlWildcardSource=new Label(wSource,SWT.RIGHT);
  wlWildcardSource.setText(BaseMessages.getString(PKG,"JobUnZip.WildcardSource.Label"));
  props.setLook(wlWildcardSource);
  fdlWildcardSource=new FormData();
  fdlWildcardSource.left=new FormAttachment(0,0);
  fdlWildcardSource.top=new FormAttachment(wZipFilename,margin);
  fdlWildcardSource.right=new FormAttachment(middle,-margin);
  wlWildcardSource.setLayoutData(fdlWildcardSource);
  wWildcardSource=new TextVar(jobMeta,wSource,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobUnZip.WildcardSource.Tooltip"));
  props.setLook(wWildcardSource);
  wWildcardSource.addModifyListener(lsMod);
  fdWildcardSource=new FormData();
  fdWildcardSource.left=new FormAttachment(middle,0);
  fdWildcardSource.top=new FormAttachment(wZipFilename,margin);
  fdWildcardSource.right=new FormAttachment(100,0);
  wWildcardSource.setLayoutData(fdWildcardSource);
  fdSource=new FormData();
  fdSource.left=new FormAttachment(0,margin);
  fdSource.top=new FormAttachment(wName,margin);
  fdSource.right=new FormAttachment(100,-margin);
  wSource.setLayoutData(fdSource);
  wUnzippedFiles=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wUnzippedFiles);
  wUnzippedFiles.setText(BaseMessages.getString(PKG,"JobUnZip.UnzippedFiles.Group.Label"));
  FormLayout groupLayoutUnzipped=new FormLayout();
  groupLayoutUnzipped.marginWidth=10;
  groupLayoutUnzipped.marginHeight=10;
  wUnzippedFiles.setLayout(groupLayoutUnzipped);
  wlRootZip=new Label(wUnzippedFiles,SWT.RIGHT);
  wlRootZip.setText(BaseMessages.getString(PKG,"JobUnZip.RootZip.Label"));
  props.setLook(wlRootZip);
  fdlRootZip=new FormData();
  fdlRootZip.left=new FormAttachment(0,0);
  fdlRootZip.top=new FormAttachment(wSource,margin);
  fdlRootZip.right=new FormAttachment(middle,-margin);
  wlRootZip.setLayoutData(fdlRootZip);
  wRootZip=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wRootZip);
  wRootZip.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.RootZip.Tooltip"));
  fdRootZip=new FormData();
  fdRootZip.left=new FormAttachment(middle,0);
  fdRootZip.top=new FormAttachment(wSource,margin);
  fdRootZip.right=new FormAttachment(100,0);
  wRootZip.setLayoutData(fdRootZip);
  wRootZip.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlTargetDirectory=new Label(wUnzippedFiles,SWT.RIGHT);
  wlTargetDirectory.setText(BaseMessages.getString(PKG,"JobUnZip.TargetDir.Label"));
  props.setLook(wlTargetDirectory);
  fdlTargetDirectory=new FormData();
  fdlTargetDirectory.left=new FormAttachment(0,0);
  fdlTargetDirectory.top=new FormAttachment(wRootZip,margin);
  fdlTargetDirectory.right=new FormAttachment(middle,-margin);
  wlTargetDirectory.setLayoutData(fdlTargetDirectory);
  wbTargetDirectory=new Button(wUnzippedFiles,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTargetDirectory);
  wbTargetDirectory.setText(BaseMessages.getString(PKG,"JobUnZip.BrowseFolders.Label"));
  fdbTargetDirectory=new FormData();
  fdbTargetDirectory.right=new FormAttachment(100,0);
  fdbTargetDirectory.top=new FormAttachment(wRootZip,margin);
  wbTargetDirectory.setLayoutData(fdbTargetDirectory);
  wTargetDirectory=new TextVar(jobMeta,wUnzippedFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobUnZip.TargetDir.Tooltip"));
  props.setLook(wTargetDirectory);
  wTargetDirectory.addModifyListener(lsMod);
  fdTargetDirectory=new FormData();
  fdTargetDirectory.left=new FormAttachment(middle,0);
  fdTargetDirectory.top=new FormAttachment(wRootZip,margin);
  fdTargetDirectory.right=new FormAttachment(wbTargetDirectory,-margin);
  wTargetDirectory.setLayoutData(fdTargetDirectory);
  wlCreateFolder=new Label(wUnzippedFiles,SWT.RIGHT);
  wlCreateFolder.setText(BaseMessages.getString(PKG,"JobUnZip.CreateFolder.Label"));
  props.setLook(wlCreateFolder);
  fdlCreateFolder=new FormData();
  fdlCreateFolder.left=new FormAttachment(0,0);
  fdlCreateFolder.top=new FormAttachment(wTargetDirectory,margin);
  fdlCreateFolder.right=new FormAttachment(middle,-margin);
  wlCreateFolder.setLayoutData(fdlCreateFolder);
  wCreateFolder=new Button(wUnzippedFiles,SWT.CHECK);
  wCreateFolder.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.CreateFolder.Tooltip"));
  props.setLook(wCreateFolder);
  fdCreateFolder=new FormData();
  fdCreateFolder.left=new FormAttachment(middle,0);
  fdCreateFolder.top=new FormAttachment(wTargetDirectory,margin);
  fdCreateFolder.right=new FormAttachment(100,0);
  wCreateFolder.setLayoutData(fdCreateFolder);
  wCreateFolder.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlWildcard=new Label(wUnzippedFiles,SWT.RIGHT);
  wlWildcard.setText(BaseMessages.getString(PKG,"JobUnZip.Wildcard.Label"));
  props.setLook(wlWildcard);
  fdlWildcard=new FormData();
  fdlWildcard.left=new FormAttachment(0,0);
  fdlWildcard.top=new FormAttachment(wCreateFolder,margin);
  fdlWildcard.right=new FormAttachment(middle,-margin);
  wlWildcard.setLayoutData(fdlWildcard);
  wWildcard=new TextVar(jobMeta,wUnzippedFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobUnZip.Wildcard.Tooltip"));
  props.setLook(wWildcard);
  wWildcard.addModifyListener(lsMod);
  fdWildcard=new FormData();
  fdWildcard.left=new FormAttachment(middle,0);
  fdWildcard.top=new FormAttachment(wCreateFolder,margin);
  fdWildcard.right=new FormAttachment(100,0);
  wWildcard.setLayoutData(fdWildcard);
  wlWildcardExclude=new Label(wUnzippedFiles,SWT.RIGHT);
  wlWildcardExclude.setText(BaseMessages.getString(PKG,"JobUnZip.WildcardExclude.Label"));
  props.setLook(wlWildcardExclude);
  fdlWildcardExclude=new FormData();
  fdlWildcardExclude.left=new FormAttachment(0,0);
  fdlWildcardExclude.top=new FormAttachment(wWildcard,margin);
  fdlWildcardExclude.right=new FormAttachment(middle,-margin);
  wlWildcardExclude.setLayoutData(fdlWildcardExclude);
  wWildcardExclude=new TextVar(jobMeta,wUnzippedFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobUnZip.WildcardExclude.Tooltip"));
  props.setLook(wWildcardExclude);
  wWildcardExclude.addModifyListener(lsMod);
  fdWildcardExclude=new FormData();
  fdWildcardExclude.left=new FormAttachment(middle,0);
  fdWildcardExclude.top=new FormAttachment(wWildcard,margin);
  fdWildcardExclude.right=new FormAttachment(100,0);
  wWildcardExclude.setLayoutData(fdWildcardExclude);
  wlAddDate=new Label(wUnzippedFiles,SWT.RIGHT);
  wlAddDate.setText(BaseMessages.getString(PKG,"JobUnZip.AddDate.Label"));
  props.setLook(wlAddDate);
  fdlAddDate=new FormData();
  fdlAddDate.left=new FormAttachment(0,0);
  fdlAddDate.top=new FormAttachment(wWildcardExclude,margin);
  fdlAddDate.right=new FormAttachment(middle,-margin);
  wlAddDate.setLayoutData(fdlAddDate);
  wAddDate=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wAddDate);
  wAddDate.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.AddDate.Tooltip"));
  fdAddDate=new FormData();
  fdAddDate.left=new FormAttachment(middle,0);
  fdAddDate.top=new FormAttachment(wWildcardExclude,margin);
  fdAddDate.right=new FormAttachment(100,0);
  wAddDate.setLayoutData(fdAddDate);
  wAddDate.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
      setDateTime();
    }
  }
);
  wlAddTime=new Label(wUnzippedFiles,SWT.RIGHT);
  wlAddTime.setText(BaseMessages.getString(PKG,"JobUnZip.AddTime.Label"));
  props.setLook(wlAddTime);
  fdlAddTime=new FormData();
  fdlAddTime.left=new FormAttachment(0,0);
  fdlAddTime.top=new FormAttachment(wAddDate,margin);
  fdlAddTime.right=new FormAttachment(middle,-margin);
  wlAddTime.setLayoutData(fdlAddTime);
  wAddTime=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wAddTime);
  wAddTime.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.AddTime.Tooltip"));
  fdAddTime=new FormData();
  fdAddTime.left=new FormAttachment(middle,0);
  fdAddTime.top=new FormAttachment(wAddDate,margin);
  fdAddTime.right=new FormAttachment(100,0);
  wAddTime.setLayoutData(fdAddTime);
  wAddTime.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
      setDateTime();
    }
  }
);
  wlSpecifyFormat=new Label(wUnzippedFiles,SWT.RIGHT);
  wlSpecifyFormat.setText(BaseMessages.getString(PKG,"JobUnZip.SpecifyFormat.Label"));
  props.setLook(wlSpecifyFormat);
  fdlSpecifyFormat=new FormData();
  fdlSpecifyFormat.left=new FormAttachment(0,0);
  fdlSpecifyFormat.top=new FormAttachment(wAddTime,margin);
  fdlSpecifyFormat.right=new FormAttachment(middle,-margin);
  wlSpecifyFormat.setLayoutData(fdlSpecifyFormat);
  wSpecifyFormat=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wSpecifyFormat);
  wSpecifyFormat.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.SpecifyFormat.Tooltip"));
  fdSpecifyFormat=new FormData();
  fdSpecifyFormat.left=new FormAttachment(middle,0);
  fdSpecifyFormat.top=new FormAttachment(wAddTime,margin);
  fdSpecifyFormat.right=new FormAttachment(100,0);
  wSpecifyFormat.setLayoutData(fdSpecifyFormat);
  wSpecifyFormat.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
      setDateTimeFormat();
    }
  }
);
  String dats[]=Const.getDateFormats();
  wlDateTimeFormat=new Label(wUnzippedFiles,SWT.RIGHT);
  wlDateTimeFormat.setText(BaseMessages.getString(PKG,"JobUnZip.DateTimeFormat.Label"));
  props.setLook(wlDateTimeFormat);
  fdlDateTimeFormat=new FormData();
  fdlDateTimeFormat.left=new FormAttachment(0,0);
  fdlDateTimeFormat.top=new FormAttachment(wSpecifyFormat,margin);
  fdlDateTimeFormat.right=new FormAttachment(middle,-margin);
  wlDateTimeFormat.setLayoutData(fdlDateTimeFormat);
  wDateTimeFormat=new CCombo(wUnzippedFiles,SWT.BORDER | SWT.READ_ONLY);
  wDateTimeFormat.setEditable(true);
  props.setLook(wDateTimeFormat);
  wDateTimeFormat.addModifyListener(lsMod);
  fdDateTimeFormat=new FormData();
  fdDateTimeFormat.left=new FormAttachment(middle,0);
  fdDateTimeFormat.top=new FormAttachment(wSpecifyFormat,margin);
  fdDateTimeFormat.right=new FormAttachment(100,0);
  wDateTimeFormat.setLayoutData(fdDateTimeFormat);
  for (int x=0; x < dats.length; x++)   wDateTimeFormat.add(dats[x]);
  wlAddOriginalTimestamp=new Label(wUnzippedFiles,SWT.RIGHT);
  wlAddOriginalTimestamp.setText(BaseMessages.getString(PKG,"JobUnZip.AddOriginalTimestamp.Label"));
  props.setLook(wlAddOriginalTimestamp);
  fdlAddOriginalTimestamp=new FormData();
  fdlAddOriginalTimestamp.left=new FormAttachment(0,0);
  fdlAddOriginalTimestamp.top=new FormAttachment(wDateTimeFormat,margin);
  fdlAddOriginalTimestamp.right=new FormAttachment(middle,-margin);
  wlAddOriginalTimestamp.setLayoutData(fdlAddOriginalTimestamp);
  wAddOriginalTimestamp=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wAddOriginalTimestamp);
  wAddOriginalTimestamp.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.AddOriginalTimestamp.Tooltip"));
  fdAddOriginalTimestamp=new FormData();
  fdAddOriginalTimestamp.left=new FormAttachment(middle,0);
  fdAddOriginalTimestamp.top=new FormAttachment(wDateTimeFormat,margin);
  fdAddOriginalTimestamp.right=new FormAttachment(100,0);
  wAddOriginalTimestamp.setLayoutData(fdAddOriginalTimestamp);
  wAddOriginalTimestamp.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlSetModificationDateToOriginal=new Label(wUnzippedFiles,SWT.RIGHT);
  wlSetModificationDateToOriginal.setText(BaseMessages.getString(PKG,"JobUnZip.SetModificationDateToOriginal.Label"));
  props.setLook(wlSetModificationDateToOriginal);
  fdlSetModificationDateToOriginal=new FormData();
  fdlSetModificationDateToOriginal.left=new FormAttachment(0,0);
  fdlSetModificationDateToOriginal.top=new FormAttachment(wAddOriginalTimestamp,margin);
  fdlSetModificationDateToOriginal.right=new FormAttachment(middle,-margin);
  wlSetModificationDateToOriginal.setLayoutData(fdlSetModificationDateToOriginal);
  wSetModificationDateToOriginal=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wSetModificationDateToOriginal);
  wSetModificationDateToOriginal.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.SetModificationDateToOriginal.Tooltip"));
  fdSetModificationDateToOriginal=new FormData();
  fdSetModificationDateToOriginal.left=new FormAttachment(middle,0);
  fdSetModificationDateToOriginal.top=new FormAttachment(wAddOriginalTimestamp,margin);
  fdSetModificationDateToOriginal.right=new FormAttachment(100,0);
  wSetModificationDateToOriginal.setLayoutData(fdSetModificationDateToOriginal);
  wSetModificationDateToOriginal.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlIfFileExists=new Label(wUnzippedFiles,SWT.RIGHT);
  wlIfFileExists.setText(BaseMessages.getString(PKG,"JobUnZip.IfFileExists.Label"));
  props.setLook(wlIfFileExists);
  fdlIfFileExists=new FormData();
  fdlIfFileExists.left=new FormAttachment(0,0);
  fdlIfFileExists.right=new FormAttachment(middle,-margin);
  fdlIfFileExists.top=new FormAttachment(wSetModificationDateToOriginal,margin);
  wlIfFileExists.setLayoutData(fdlIfFileExists);
  wIfFileExists=new CCombo(wUnzippedFiles,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wIfFileExists.setItems(JobEntryUnZip.typeIfFileExistsDesc);
  wIfFileExists.select(0);
  props.setLook(wIfFileExists);
  fdIfFileExists=new FormData();
  fdIfFileExists.left=new FormAttachment(middle,0);
  fdIfFileExists.top=new FormAttachment(wSetModificationDateToOriginal,margin);
  fdIfFileExists.right=new FormAttachment(100,0);
  wIfFileExists.setLayoutData(fdIfFileExists);
  wIfFileExists.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
    }
  }
);
  wlAfterUnZip=new Label(wUnzippedFiles,SWT.RIGHT);
  wlAfterUnZip.setText(BaseMessages.getString(PKG,"JobUnZip.AfterUnZip.Label"));
  props.setLook(wlAfterUnZip);
  fdlAfterUnZip=new FormData();
  fdlAfterUnZip.left=new FormAttachment(0,0);
  fdlAfterUnZip.right=new FormAttachment(middle,0);
  fdlAfterUnZip.top=new FormAttachment(wIfFileExists,margin);
  wlAfterUnZip.setLayoutData(fdlAfterUnZip);
  wAfterUnZip=new CCombo(wUnzippedFiles,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wAfterUnZip.add(BaseMessages.getString(PKG,"JobUnZip.Do_Nothing_AfterUnZip.Label"));
  wAfterUnZip.add(BaseMessages.getString(PKG,"JobUnZip.Delete_Files_AfterUnZip.Label"));
  wAfterUnZip.add(BaseMessages.getString(PKG,"JobUnZip.Move_Files_AfterUnZip.Label"));
  wAfterUnZip.select(0);
  props.setLook(wAfterUnZip);
  fdAfterUnZip=new FormData();
  fdAfterUnZip.left=new FormAttachment(middle,0);
  fdAfterUnZip.top=new FormAttachment(wIfFileExists,margin);
  fdAfterUnZip.right=new FormAttachment(100,0);
  wAfterUnZip.setLayoutData(fdAfterUnZip);
  wAfterUnZip.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      AfterUnZipActivate();
    }
  }
);
  wlMovetoDirectory=new Label(wUnzippedFiles,SWT.RIGHT);
  wlMovetoDirectory.setText(BaseMessages.getString(PKG,"JobUnZip.MovetoDirectory.Label"));
  props.setLook(wlMovetoDirectory);
  fdlMovetoDirectory=new FormData();
  fdlMovetoDirectory.left=new FormAttachment(0,0);
  fdlMovetoDirectory.top=new FormAttachment(wAfterUnZip,margin);
  fdlMovetoDirectory.right=new FormAttachment(middle,-margin);
  wlMovetoDirectory.setLayoutData(fdlMovetoDirectory);
  wMovetoDirectory=new TextVar(jobMeta,wUnzippedFiles,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobUnZip.MovetoDirectory.Tooltip"));
  props.setLook(wMovetoDirectory);
  wbMovetoDirectory=new Button(wUnzippedFiles,SWT.PUSH | SWT.CENTER);
  props.setLook(wbMovetoDirectory);
  wbMovetoDirectory.setText(BaseMessages.getString(PKG,"JobUnZip.BrowseFolders.Label"));
  fdbMovetoDirectory=new FormData();
  fdbMovetoDirectory.right=new FormAttachment(100,0);
  fdbMovetoDirectory.top=new FormAttachment(wAfterUnZip,margin);
  wbMovetoDirectory.setLayoutData(fdbMovetoDirectory);
  wMovetoDirectory.addModifyListener(lsMod);
  fdMovetoDirectory=new FormData();
  fdMovetoDirectory.left=new FormAttachment(middle,0);
  fdMovetoDirectory.top=new FormAttachment(wAfterUnZip,margin);
  fdMovetoDirectory.right=new FormAttachment(wbMovetoDirectory,-margin);
  wMovetoDirectory.setLayoutData(fdMovetoDirectory);
  wlcreateMoveToDirectory=new Label(wUnzippedFiles,SWT.RIGHT);
  wlcreateMoveToDirectory.setText(BaseMessages.getString(PKG,"JobUnZip.createMoveToFolder.Label"));
  props.setLook(wlcreateMoveToDirectory);
  fdlcreateMoveToDirectory=new FormData();
  fdlcreateMoveToDirectory.left=new FormAttachment(0,0);
  fdlcreateMoveToDirectory.top=new FormAttachment(wMovetoDirectory,margin);
  fdlcreateMoveToDirectory.right=new FormAttachment(middle,-margin);
  wlcreateMoveToDirectory.setLayoutData(fdlcreateMoveToDirectory);
  wcreateMoveToDirectory=new Button(wUnzippedFiles,SWT.CHECK);
  props.setLook(wcreateMoveToDirectory);
  wcreateMoveToDirectory.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.createMoveToFolder.Tooltip"));
  fdcreateMoveToDirectory=new FormData();
  fdcreateMoveToDirectory.left=new FormAttachment(middle,0);
  fdcreateMoveToDirectory.top=new FormAttachment(wMovetoDirectory,margin);
  fdcreateMoveToDirectory.right=new FormAttachment(100,0);
  wcreateMoveToDirectory.setLayoutData(fdcreateMoveToDirectory);
  wcreateMoveToDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdUnzippedFiles=new FormData();
  fdUnzippedFiles.left=new FormAttachment(0,margin);
  fdUnzippedFiles.top=new FormAttachment(wSource,margin);
  fdUnzippedFiles.right=new FormAttachment(100,-margin);
  wUnzippedFiles.setLayoutData(fdUnzippedFiles);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(500,-margin);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  wAdvancedTab=new CTabItem(wTabFolder,SWT.NONE);
  wAdvancedTab.setText(BaseMessages.getString(PKG,"JobUnZip.Tab.Advanced.Label"));
  wAdvancedComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wAdvancedComp);
  FormLayout advancedLayout=new FormLayout();
  advancedLayout.marginWidth=3;
  advancedLayout.marginHeight=3;
  wAdvancedComp.setLayout(advancedLayout);
  wFileResult=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wFileResult);
  wFileResult.setText(BaseMessages.getString(PKG,"JobUnZip.FileResult.Group.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wFileResult.setLayout(groupLayout);
  wlAddFileToResult=new Label(wFileResult,SWT.RIGHT);
  wlAddFileToResult.setText(BaseMessages.getString(PKG,"JobUnZip.AddFileToResult.Label"));
  props.setLook(wlAddFileToResult);
  fdlAddFileToResult=new FormData();
  fdlAddFileToResult.left=new FormAttachment(0,0);
  fdlAddFileToResult.top=new FormAttachment(wSource,margin);
  fdlAddFileToResult.right=new FormAttachment(middle,-margin);
  wlAddFileToResult.setLayoutData(fdlAddFileToResult);
  wAddFileToResult=new Button(wFileResult,SWT.CHECK);
  props.setLook(wAddFileToResult);
  wAddFileToResult.setToolTipText(BaseMessages.getString(PKG,"JobUnZip.AddFileToResult.Tooltip"));
  fdAddFileToResult=new FormData();
  fdAddFileToResult.left=new FormAttachment(middle,0);
  fdAddFileToResult.top=new FormAttachment(wSource,margin);
  fdAddFileToResult.right=new FormAttachment(100,0);
  wAddFileToResult.setLayoutData(fdAddFileToResult);
  wAddFileToResult.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  fdFileResult=new FormData();
  fdFileResult.left=new FormAttachment(0,margin);
  fdFileResult.top=new FormAttachment(wUnzippedFiles,margin);
  fdFileResult.right=new FormAttachment(100,-margin);
  wFileResult.setLayoutData(fdFileResult);
  wSuccessOn=new Group(wAdvancedComp,SWT.SHADOW_NONE);
  props.setLook(wSuccessOn);
  wSuccessOn.setText(BaseMessages.getString(PKG,"JobUnZip.SuccessOn.Group.Label"));
  FormLayout successongroupLayout=new FormLayout();
  successongroupLayout.marginWidth=10;
  successongroupLayout.marginHeight=10;
  wSuccessOn.setLayout(successongroupLayout);
  wlSuccessCondition=new Label(wSuccessOn,SWT.RIGHT);
  wlSuccessCondition.setText(BaseMessages.getString(PKG,"JobUnZip.SuccessCondition.Label") + " ");
  props.setLook(wlSuccessCondition);
  fdlSuccessCondition=new FormData();
  fdlSuccessCondition.left=new FormAttachment(0,0);
  fdlSuccessCondition.right=new FormAttachment(middle,0);
  fdlSuccessCondition.top=new FormAttachment(wFileResult,margin);
  wlSuccessCondition.setLayoutData(fdlSuccessCondition);
  wSuccessCondition=new CCombo(wSuccessOn,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobUnZip.SuccessWhenAllWorksFine.Label"));
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobUnZip.SuccessWhenAtLeat.Label"));
  wSuccessCondition.add(BaseMessages.getString(PKG,"JobUnZip.SuccessWhenNrErrorsLessThan.Label"));
  wSuccessCondition.select(0);
  props.setLook(wSuccessCondition);
  fdSuccessCondition=new FormData();
  fdSuccessCondition.left=new FormAttachment(middle,0);
  fdSuccessCondition.top=new FormAttachment(wFileResult,margin);
  fdSuccessCondition.right=new FormAttachment(100,0);
  wSuccessCondition.setLayoutData(fdSuccessCondition);
  wSuccessCondition.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeSuccessCondition();
    }
  }
);
  wlNrErrorsLessThan=new Label(wSuccessOn,SWT.RIGHT);
  wlNrErrorsLessThan.setText(BaseMessages.getString(PKG,"JobUnZip.NrBadFormedLessThan.Label") + " ");
  props.setLook(wlNrErrorsLessThan);
  fdlNrErrorsLessThan=new FormData();
  fdlNrErrorsLessThan.left=new FormAttachment(0,0);
  fdlNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdlNrErrorsLessThan.right=new FormAttachment(middle,-margin);
  wlNrErrorsLessThan.setLayoutData(fdlNrErrorsLessThan);
  wNrErrorsLessThan=new TextVar(jobMeta,wSuccessOn,SWT.SINGLE | SWT.LEFT | SWT.BORDER,BaseMessages.getString(PKG,"JobUnZip.NrBadFormedLessThan.Tooltip"));
  props.setLook(wNrErrorsLessThan);
  wNrErrorsLessThan.addModifyListener(lsMod);
  fdNrErrorsLessThan=new FormData();
  fdNrErrorsLessThan.left=new FormAttachment(middle,0);
  fdNrErrorsLessThan.top=new FormAttachment(wSuccessCondition,margin);
  fdNrErrorsLessThan.right=new FormAttachment(100,-margin);
  wNrErrorsLessThan.setLayoutData(fdNrErrorsLessThan);
  fdSuccessOn=new FormData();
  fdSuccessOn.left=new FormAttachment(0,margin);
  fdSuccessOn.top=new FormAttachment(wFileResult,margin);
  fdSuccessOn.right=new FormAttachment(100,-margin);
  wSuccessOn.setLayoutData(fdSuccessOn);
  fdAdvancedComp=new FormData();
  fdAdvancedComp.left=new FormAttachment(0,0);
  fdAdvancedComp.top=new FormAttachment(0,0);
  fdAdvancedComp.right=new FormAttachment(100,0);
  fdAdvancedComp.bottom=new FormAttachment(500,-margin);
  wAdvancedComp.setLayoutData(fdAdvancedComp);
  wAdvancedComp.layout();
  wAdvancedTab.setControl(wAdvancedComp);
  props.setLook(wAdvancedComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wName,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wbTargetDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wTargetDirectory.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wTargetDirectory.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wTargetDirectory.setText(dir);
      }
    }
  }
);
  wbMovetoDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      DirectoryDialog ddialog=new DirectoryDialog(shell,SWT.OPEN);
      if (wMovetoDirectory.getText() != null) {
        ddialog.setFilterPath(jobMeta.environmentSubstitute(wMovetoDirectory.getText()));
      }
      String dir=ddialog.open();
      if (dir != null) {
        wMovetoDirectory.setText(dir);
      }
    }
  }
);
  wName.addSelectionListener(lsDef);
  wZipFilename.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setArgdPrevious();
  AfterUnZipActivate();
  setDateTimeFormat();
  activeSuccessCondition();
  wTabFolder.setSelection(0);
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
