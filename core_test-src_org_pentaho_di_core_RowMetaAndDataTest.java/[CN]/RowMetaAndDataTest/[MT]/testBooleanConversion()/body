{
  row=new RowMetaAndData(rowsMeta,null,true,null);
  assertEquals(true,row.getAsJavaType("bool",boolean.class,converter));
  assertEquals(true,row.getAsJavaType("bool",Boolean.class,converter));
  assertEquals(1,row.getAsJavaType("bool",int.class,converter));
  assertEquals(1,row.getAsJavaType("bool",Integer.class,converter));
  assertEquals(1L,row.getAsJavaType("bool",long.class,converter));
  assertEquals(1L,row.getAsJavaType("bool",Long.class,converter));
  assertEquals("Y",row.getAsJavaType("bool",String.class,converter));
  row=new RowMetaAndData(rowsMeta,null,false,null);
  assertEquals(false,row.getAsJavaType("bool",boolean.class,converter));
  assertEquals(false,row.getAsJavaType("bool",Boolean.class,converter));
  assertEquals(0,row.getAsJavaType("bool",int.class,converter));
  assertEquals(0,row.getAsJavaType("bool",Integer.class,converter));
  assertEquals(0L,row.getAsJavaType("bool",long.class,converter));
  assertEquals(0L,row.getAsJavaType("bool",Long.class,converter));
  assertEquals("N",row.getAsJavaType("bool",String.class,converter));
  row=new RowMetaAndData(rowsMeta,null,null,null);
  assertEquals(null,row.getAsJavaType("bool",String.class,converter));
  assertEquals(null,row.getAsJavaType("bool",Integer.class,converter));
  assertEquals(null,row.getAsJavaType("bool",Long.class,converter));
  assertEquals(null,row.getAsJavaType("bool",Boolean.class,converter));
}
