{
  TransMeta transMeta=new TransMeta("transFile","myTrans");
  StepMeta step1=new StepMeta("name1",null);
  StepMeta step2=new StepMeta("name2",null);
  StepMeta step3=new StepMeta("name3",null);
  StepMeta step4=new StepMeta("name4",null);
  TransHopMeta hopMeta1=new TransHopMeta(step1,step2,true);
  TransHopMeta hopMeta2=new TransHopMeta(step2,step3,true);
  TransHopMeta hopMeta3=new TransHopMeta(step3,step4,false);
  transMeta.addTransHop(0,hopMeta1);
  transMeta.addTransHop(1,hopMeta2);
  transMeta.addTransHop(2,hopMeta3);
  List<StepMeta> hops=transMeta.getTransHopSteps(true);
  assertSame(step1,hops.get(0));
  assertSame(step2,hops.get(1));
  assertSame(step3,hops.get(2));
  assertSame(step4,hops.get(3));
  assertEquals(hopMeta2,transMeta.findTransHop("name2 --> name3 (enabled)"));
  assertEquals(hopMeta3,transMeta.findTransHopFrom(step3));
  assertEquals(hopMeta2,transMeta.findTransHop(hopMeta2));
  assertEquals(hopMeta1,transMeta.findTransHop(step1,step2));
  assertEquals(null,transMeta.findTransHop(step3,step4,false));
  assertEquals(hopMeta3,transMeta.findTransHop(step3,step4,true));
  assertEquals(hopMeta2,transMeta.findTransHopTo(step3));
  transMeta.removeTransHop(0);
  hops=transMeta.getTransHopSteps(true);
  assertSame(step2,hops.get(0));
  assertSame(step3,hops.get(1));
  assertSame(step4,hops.get(2));
  transMeta.removeTransHop(hopMeta2);
  hops=transMeta.getTransHopSteps(true);
  assertSame(step3,hops.get(0));
  assertSame(step4,hops.get(1));
}
