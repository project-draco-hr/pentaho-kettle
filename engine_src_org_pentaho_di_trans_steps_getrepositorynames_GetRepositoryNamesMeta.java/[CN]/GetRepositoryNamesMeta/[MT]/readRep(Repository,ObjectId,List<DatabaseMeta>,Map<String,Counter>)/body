{
  try {
    int nrfiles=rep.countNrStepAttributes(id_step,"directory");
    String objectTypeString=rep.getStepAttributeString(id_step,"object_type");
    if (objectTypeSelection != null) {
      objectTypeSelection=ObjectTypeSelection.valueOf(objectTypeString);
    }
    if (objectTypeSelection == null)     objectTypeSelection=ObjectTypeSelection.All;
    includeRowNumber=rep.getStepAttributeBoolean(id_step,"rownum");
    rowNumberField=rep.getStepAttributeString(id_step,"rownum_field");
    allocate(nrfiles);
    for (int i=0; i < nrfiles; i++) {
      directory[i]=rep.getStepAttributeString(id_step,i,"directory");
      nameMask[i]=rep.getStepAttributeString(id_step,i,"name_mask");
      excludeNameMask[i]=rep.getStepAttributeString(id_step,i,"exclude_name_mask");
      includeSubFolders[i]=rep.getStepAttributeBoolean(id_step,i,"include_subfolders");
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
