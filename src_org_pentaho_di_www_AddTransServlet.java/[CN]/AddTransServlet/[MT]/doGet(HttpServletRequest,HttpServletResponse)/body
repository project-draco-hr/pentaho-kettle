{
  if (isJettyMode() && !request.getRequestURI().startsWith(CONTEXT_PATH))   return;
  if (log.isDebug())   logDebug("Addition of transformation requested");
  boolean useXML="Y".equalsIgnoreCase(request.getParameter("xml"));
  PrintWriter out=response.getWriter();
  BufferedReader in=request.getReader();
  if (log.isDetailed())   logDetailed("Encoding: " + request.getCharacterEncoding());
  if (useXML) {
    response.setContentType("text/xml");
    out.print(XMLHandler.getXMLHeader());
  }
 else {
    response.setContentType("text/html");
    out.println("<HTML>");
    out.println("<HEAD><TITLE>Add transformation</TITLE></HEAD>");
    out.println("<BODY>");
  }
  response.setStatus(HttpServletResponse.SC_OK);
  try {
    StringBuilder xml=new StringBuilder(request.getContentLength());
    int c;
    while ((c=in.read()) != -1) {
      xml.append((char)c);
    }
    TransConfiguration transConfiguration=TransConfiguration.fromXML(xml.toString());
    TransMeta transMeta=transConfiguration.getTransMeta();
    TransExecutionConfiguration transExecutionConfiguration=transConfiguration.getTransExecutionConfiguration();
    transMeta.setLogLevel(transExecutionConfiguration.getLogLevel());
    if (log.isDetailed()) {
      logDetailed("Logging level set to " + log.getLogLevel().getDescription());
    }
    transMeta.injectVariables(transExecutionConfiguration.getVariables());
    Map<String,String> params=transExecutionConfiguration.getParams();
    for (    String param : params.keySet()) {
      String value=params.get(param);
      transMeta.setParameterValue(param,value);
    }
    TransExecutionConfiguration executionConfiguration=transConfiguration.getTransExecutionConfiguration();
    final Repository repository=transConfiguration.getTransExecutionConfiguration().getRepository();
    String carteObjectId=UUID.randomUUID().toString();
    SimpleLoggingObject servletLoggingObject=new SimpleLoggingObject(CONTEXT_PATH,LoggingObjectType.CARTE,null);
    servletLoggingObject.setContainerObjectId(carteObjectId);
    servletLoggingObject.setLogLevel(executionConfiguration.getLogLevel());
    final Trans trans=new Trans(transMeta,servletLoggingObject);
    trans.setRepository(repository);
    trans.setSocketRepository(getSocketRepository());
    getTransformationMap().addTransformation(transMeta.getName(),carteObjectId,trans,transConfiguration);
    trans.setContainerObjectId(carteObjectId);
    if (repository != null) {
      trans.addTransListener(new TransAdapter(){
        public void transFinished(        Trans trans){
          repository.disconnect();
        }
      }
);
    }
    String message="Transformation '" + trans.getName() + "' was added to Carte with id "+ carteObjectId;
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_OK,message,carteObjectId));
    }
 else {
      out.println("<H1>" + message + "</H1>");
      out.println("<p><a href=\"" + convertContextPath(GetTransStatusServlet.CONTEXT_PATH) + "?name="+ trans.getName()+ "&id="+ carteObjectId+ "\">Go to the transformation status page</a><p>");
    }
  }
 catch (  Exception ex) {
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_ERROR,Const.getStackTracker(ex)));
    }
 else {
      out.println("<p>");
      out.println("<pre>");
      ex.printStackTrace(out);
      out.println("</pre>");
    }
  }
  if (!useXML) {
    out.println("<p>");
    out.println("</BODY>");
    out.println("</HTML>");
  }
}
