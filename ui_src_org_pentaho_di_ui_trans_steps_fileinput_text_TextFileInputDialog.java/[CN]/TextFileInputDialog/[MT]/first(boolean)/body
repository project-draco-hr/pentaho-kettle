{
  TextFileInputMeta info=new TextFileInputMeta();
  getInfo(info,true);
  try {
    if (info.getTextFileList(transMeta).nrOfFiles() > 0) {
      String shellText=BaseMessages.getString(PKG,"TextFileInputDialog.LinesToView.DialogTitle");
      String lineText=BaseMessages.getString(PKG,"TextFileInputDialog.LinesToView.DialogMessage");
      EnterNumberDialog end=new EnterNumberDialog(shell,100,shellText,lineText);
      int nrLines=end.open();
      if (nrLines >= 0) {
        List<String> linesList=getFirst(nrLines,skipHeaders);
        if (linesList != null && linesList.size() > 0) {
          String firstlines="";
          for (          String aLinesList : linesList) {
            firstlines+=aLinesList + Const.CR;
          }
          EnterTextDialog etd=new EnterTextDialog(shell,BaseMessages.getString(PKG,"TextFileInputDialog.ContentOfFirstFile.DialogTitle"),(nrLines == 0 ? BaseMessages.getString(PKG,"TextFileInputDialog.ContentOfFirstFile.AllLines.DialogMessage") : BaseMessages.getString(PKG,"TextFileInputDialog.ContentOfFirstFile.NLines.DialogMessage","" + nrLines)),firstlines,true);
          etd.setReadOnly();
          etd.open();
        }
 else {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setMessage(BaseMessages.getString(PKG,"TextFileInputDialog.UnableToReadLines.DialogMessage"));
          mb.setText(BaseMessages.getString(PKG,"TextFileInputDialog.UnableToReadLines.DialogTitle"));
          mb.open();
        }
      }
    }
 else {
      MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
      mb.setMessage(BaseMessages.getString(PKG,"TextFileInputDialog.NoValidFile.DialogMessage"));
      mb.setText(BaseMessages.getString(PKG,"System.Dialog.Error.Title"));
      mb.open();
    }
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"System.Dialog.Error.Title"),BaseMessages.getString(PKG,"TextFileInputDialog.ErrorGettingData.DialogMessage"),e);
  }
}
