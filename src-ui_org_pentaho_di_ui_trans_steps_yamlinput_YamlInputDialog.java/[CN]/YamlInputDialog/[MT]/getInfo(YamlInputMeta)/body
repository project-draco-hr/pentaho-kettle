{
  stepname=wStepname.getText();
  in.setRowLimit(Const.toLong(wLimit.getText(),0L));
  in.setFilenameField(wInclFilenameField.getText());
  in.setRowNumberField(wInclRownumField.getText());
  in.setAddResultFile(wAddResult.getSelection());
  in.setIncludeFilename(wInclFilename.getSelection());
  in.setIncludeRowNumber(wInclRownum.getSelection());
  in.setIgnoreEmptyFile(wIgnoreEmptyFile.getSelection());
  in.setdoNotFailIfNoFile(wdoNotFailIfNoFile.getSelection());
  in.setInFields(wYAMLStreamField.getSelection());
  in.setIsAFile(wYAMLIsAFile.getSelection());
  in.setYamlField(wYAMLLField.getText());
  int nrFiles=wFilenameList.getItemCount();
  int nrFields=wFields.nrNonEmpty();
  in.allocate(nrFiles,nrFields);
  in.setFileName(wFilenameList.getItems(0));
  in.setFileMask(wFilenameList.getItems(1));
  in.setFileRequired(wFilenameList.getItems(2));
  in.setIncludeSubFolders(wFilenameList.getItems(3));
  for (int i=0; i < nrFields; i++) {
    YamlInputField field=new YamlInputField();
    TableItem item=wFields.getNonEmpty(i);
    field.setName(item.getText(1));
    field.setPath(item.getText(2));
    field.setType(ValueMeta.getType(item.getText(3)));
    field.setFormat(item.getText(4));
    field.setLength(Const.toInt(item.getText(5),-1));
    field.setPrecision(Const.toInt(item.getText(6),-1));
    field.setCurrencySymbol(item.getText(7));
    field.setDecimalSymbol(item.getText(8));
    field.setGroupSymbol(item.getText(9));
    field.setTrimType(YamlInputField.getTrimTypeByDesc(item.getText(10)));
    in.getInputFields()[i]=field;
  }
}
