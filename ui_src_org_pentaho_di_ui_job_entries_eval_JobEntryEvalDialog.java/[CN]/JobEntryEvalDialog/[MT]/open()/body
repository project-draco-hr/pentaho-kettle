{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobEval.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,null);
  wlName=new Label(shell,SWT.NONE);
  wlName.setText(BaseMessages.getString(PKG,"JobEval.Jobname.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlPosition=new Label(shell,SWT.NONE);
  wlPosition.setText(BaseMessages.getString(PKG,"JobEval.LineNr.Label","0"));
  props.setLook(wlPosition);
  fdlPosition=new FormData();
  fdlPosition.left=new FormAttachment(0,0);
  fdlPosition.bottom=new FormAttachment(wOK,-margin);
  wlPosition.setLayoutData(fdlPosition);
  wlScript=new Label(shell,SWT.NONE);
  wlScript.setText(BaseMessages.getString(PKG,"JobEval.Script.Label"));
  props.setLook(wlScript);
  fdlScript=new FormData();
  fdlScript.left=new FormAttachment(0,0);
  fdlScript.top=new FormAttachment(wName,margin);
  wlScript.setLayoutData(fdlScript);
  wScript=new StyledTextComp(jobEntry,shell,SWT.MULTI | SWT.LEFT | SWT.BORDER| SWT.H_SCROLL| SWT.V_SCROLL,"");
  wScript.setText(BaseMessages.getString(PKG,"JobEval.Script.Default"));
  props.setLook(wScript,Props.WIDGET_STYLE_FIXED);
  wScript.addModifyListener(lsMod);
  fdScript=new FormData();
  fdScript.left=new FormAttachment(0,0);
  fdScript.top=new FormAttachment(wlScript,margin);
  fdScript.right=new FormAttachment(100,-10);
  fdScript.bottom=new FormAttachment(wlPosition,-margin);
  wScript.setLayoutData(fdScript);
  wScript.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent arg0){
      setPosition();
    }
  }
);
  wScript.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      setPosition();
    }
    public void keyReleased(    KeyEvent e){
      setPosition();
    }
  }
);
  wScript.addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      setPosition();
    }
    public void focusLost(    FocusEvent e){
      setPosition();
    }
  }
);
  wScript.addMouseListener(new MouseAdapter(){
    public void mouseDoubleClick(    MouseEvent e){
      setPosition();
    }
    public void mouseDown(    MouseEvent e){
      setPosition();
    }
    public void mouseUp(    MouseEvent e){
      setPosition();
    }
  }
);
  wScript.addModifyListener(lsMod);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell,250,250,false);
  shell.open();
  props.setDialogSize(shell,"JobEvalDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntry;
}
