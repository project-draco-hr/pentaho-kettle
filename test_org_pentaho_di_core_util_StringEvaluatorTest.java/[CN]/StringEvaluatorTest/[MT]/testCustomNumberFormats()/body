{
  PluginRegistry registry=PluginRegistry.getInstance();
  assertNotNull("Registry singleton was not found!",registry);
  PluginRegistry.addPluginType(ValueMetaPluginType.getInstance());
  Exception initException=null;
  try {
    PluginRegistry.init();
  }
 catch (  Exception e) {
    initException=e;
  }
  assertNull(initException);
  List<Class<? extends PluginTypeInterface>> pluginTypes=registry.getPluginTypes();
  assertTrue("At least two plugin types expected in the registry",pluginTypes.size() > 1);
  List<PluginInterface> valueMetaPlugins=registry.getPlugins(ValueMetaPluginType.class);
  assertTrue("Size of plugins list expected to be >1",valueMetaPlugins.size() > 1);
  Locale orig=Locale.getDefault();
  Locale.setDefault(Locale.US);
  StringEvaluator eval=new StringEvaluator();
  String[] goodValues=new String[]{"200.00","999.99","4,309.88"};
  String[] badValues=new String[]{"9 00","$30.00","3.999,00"};
  for (  String value : goodValues) {
    eval.evaluateString(value);
  }
  assertEquals(goodValues.length,eval.getCount());
  StringEvaluationResult result=eval.getAdvicedResult();
  assertEquals("Not a number detected",result.getConversionMeta().getTypeDesc(),"Number");
  eval=new StringEvaluator();
  for (  String value : badValues) {
    eval.evaluateString(value);
  }
  assertEquals(badValues.length,eval.getCount());
  result=eval.getAdvicedResult();
  assertFalse("Number detected",result.getConversionMeta().getType() == ValueMetaInterface.TYPE_NUMBER);
  Locale.setDefault(orig);
}
