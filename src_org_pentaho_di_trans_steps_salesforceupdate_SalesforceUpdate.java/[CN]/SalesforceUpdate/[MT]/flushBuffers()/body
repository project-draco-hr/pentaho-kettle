{
  try {
    data.saveResult=data.connection.update(data.sfBuffer);
    for (int j=0; j < data.saveResult.length; j++) {
      if (data.saveResult[j].isSuccess()) {
        String id=data.saveResult[j].getId();
        if (log.isDetailed())         logDetailed("Row updated with id: " + id);
        Object[] newRow=RowDataUtil.resizeArray(data.outputBuffer[j],data.outputRowMeta.size());
        if (log.isDetailed())         logDetailed("The new row has an id value of : " + newRow[0]);
        putRow(data.outputRowMeta,newRow);
        incrementLinesOutput();
        if (checkFeedback(getLinesInput())) {
          if (log.isDetailed())           logDetailed(BaseMessages.getString(PKG,"SalesforceUpdate.log.LineRow","" + getLinesInput()));
        }
      }
 else {
        boolean sendToErrorRow=false;
        String errorMessage=null;
        if (getStepMeta().isDoingErrorHandling()) {
          sendToErrorRow=true;
          errorMessage=null;
          for (int i=0; i < data.saveResult[j].getErrors().length; i++) {
            com.sforce.soap.partner.Error err=data.saveResult[j].getErrors()[i];
            errorMessage=errorMessage + ": Errors were found on item " + new Integer(j).toString()+ " Error code is: "+ err.getStatusCode().toString()+ " Error message: "+ err.getMessage();
          }
        }
 else {
          if (log.isDetailed())           logDetailed("Found error from SalesForce and raising the exception");
          for (int i=0; i < data.saveResult[j].getErrors().length; i++) {
            com.sforce.soap.partner.Error err=data.saveResult[j].getErrors()[i];
            throw new KettleException("Errors were found on item " + new Integer(j).toString() + " Error code is: "+ err.getStatusCode().toString()+ " Error message: "+ err.getMessage());
          }
        }
        if (sendToErrorRow) {
          if (log.isDetailed())           logDetailed("Passing row to error step");
          putError(getInputRowMeta(),data.outputBuffer[j],1,errorMessage,null,"SalesforceUpdate001");
        }
      }
    }
    data.sfBuffer=new SObject[meta.getBatchSizeInt()];
    data.outputBuffer=new Object[meta.getBatchSizeInt()][];
    data.iBufferPos=0;
  }
 catch (  Exception e) {
    throw new KettleException("\nFailed to upsert object, error message was: \n" + e.getMessage());
  }
 finally {
    if (data.saveResult != null)     data.saveResult=null;
  }
}
