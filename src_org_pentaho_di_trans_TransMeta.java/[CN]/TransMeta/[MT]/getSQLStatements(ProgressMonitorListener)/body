{
  if (monitor != null)   monitor.beginTask(BaseMessages.getString(PKG,"TransMeta.Monitor.GettingTheSQLForTransformationTask.Title"),nrSteps() + 1);
  List<SQLStatement> stats=new ArrayList<SQLStatement>();
  for (int i=0; i < nrSteps(); i++) {
    StepMeta stepMeta=getStep(i);
    if (monitor != null)     monitor.subTask(BaseMessages.getString(PKG,"TransMeta.Monitor.GettingTheSQLForStepTask.Title","" + stepMeta));
    RowMetaInterface prev=getPrevStepFields(stepMeta);
    SQLStatement sql=stepMeta.getStepMetaInterface().getSQLStatements(this,stepMeta,prev);
    if (sql.getSQL() != null || sql.hasError()) {
      stats.add(sql);
    }
    if (monitor != null)     monitor.worked(1);
  }
  if (monitor != null)   monitor.subTask(BaseMessages.getString(PKG,"TransMeta.Monitor.GettingTheSQLForTransformationTask.Title2"));
  if (transLogTable.getDatabaseMeta() != null && (!Const.isEmpty(transLogTable.getTableName()) || !Const.isEmpty(performanceLogTable.getTableName()))) {
    try {
      for (      LogTableInterface logTable : new LogTableInterface[]{transLogTable,performanceLogTable,channelLogTable,stepLogTable}) {
        if (logTable.getDatabaseMeta() != null && !Const.isEmpty(logTable.getTableName())) {
          Database db=null;
          try {
            db=new Database(this,transLogTable.getDatabaseMeta());
            db.shareVariablesWith(this);
            db.connect();
            RowMetaInterface fields=logTable.getLogRecord(LogStatus.START,null).getRowMeta();
            String schemaTable=logTable.getDatabaseMeta().getSchemaTableCombination(logTable.getSchemaName(),logTable.getTableName());
            String sql=db.getDDL(schemaTable,fields);
            if (!Const.isEmpty(sql)) {
              SQLStatement stat=new SQLStatement("<this transformation>",transLogTable.getDatabaseMeta(),sql);
              stats.add(stat);
            }
          }
 catch (          Exception e) {
            throw new KettleDatabaseException("Unable to connect to logging database [" + logTable.getDatabaseMeta() + "]",e);
          }
 finally {
            if (db != null) {
              db.disconnect();
            }
          }
        }
      }
    }
 catch (    KettleDatabaseException dbe) {
      SQLStatement stat=new SQLStatement("<this transformation>",transLogTable.getDatabaseMeta(),null);
      stat.setError(BaseMessages.getString(PKG,"TransMeta.SQLStatement.ErrorDesc.ErrorObtainingTransformationLogTableInfo") + dbe.getMessage());
      stats.add(stat);
    }
  }
  if (monitor != null)   monitor.worked(1);
  if (monitor != null)   monitor.done();
  return stats;
}
