{
  assertEquals(Double.valueOf("2.0"),calculate("2","1",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Double.valueOf("2.0"),calculate("4","2",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Double.valueOf("0.5"),calculate("10","20",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Double.valueOf("2.0"),calculate("100","50",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Long.valueOf("2"),calculate("2","1",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Long.valueOf("2"),calculate("4","2",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Long.valueOf("0"),calculate("10","20",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(Long.valueOf("2"),calculate("100","50",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(BigDecimal.valueOf(Long.valueOf("2")),calculate("2","1",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(BigDecimal.valueOf(Long.valueOf("2")),calculate("4","2",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(BigDecimal.valueOf(Double.valueOf("0.5")),calculate("10","20",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_DIVIDE));
  assertEquals(BigDecimal.valueOf(Long.valueOf("2")),calculate("100","50",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_DIVIDE));
}
