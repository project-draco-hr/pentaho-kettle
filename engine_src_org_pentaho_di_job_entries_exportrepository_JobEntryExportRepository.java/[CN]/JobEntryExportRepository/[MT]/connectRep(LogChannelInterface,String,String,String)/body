{
  this.repsinfo=new RepositoriesMeta();
  this.repsinfo.getLog().setLogLevel(log.getLogLevel());
  try {
    this.repsinfo.readData();
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"JobExportRepository.Error.NoRep"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.NoRep"));
  }
  this.repositoryMeta=this.repsinfo.findRepository(realrepName);
  if (this.repositoryMeta == null) {
    logError(BaseMessages.getString(PKG,"JobExportRepository.Error.NoRepSystem"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.NoRepSystem"));
  }
  this.repository=PluginRegistry.getInstance().loadClass(RepositoryPluginType.class,this.repositoryMeta,Repository.class);
  this.repository.init(repositoryMeta);
  try {
    this.repository.connect(realusername,realpassword);
  }
 catch (  Exception e) {
    logError(BaseMessages.getString(PKG,"JobExportRepository.Error.CanNotConnectRep"));
    throw new Exception(BaseMessages.getString(PKG,"JobExportRepository.Error.CanNotConnectRep"),e);
  }
}
