{
  String baseUrl;
  String hostname;
  String port;
  String databaseName;
  if (isPartitioned() && !Const.isEmpty(partitionId)) {
    PartitionDatabaseMeta partition=getPartitionMeta(partitionId);
    hostname=environmentSubstitute(partition.getHostname());
    port=environmentSubstitute(partition.getPort());
    databaseName=environmentSubstitute(partition.getDatabaseName());
  }
 else {
    hostname=environmentSubstitute(getHostname());
    port=environmentSubstitute(getDatabasePortNumberString());
    databaseName=environmentSubstitute(getDatabaseName());
  }
  baseUrl=databaseInterface.getURL(hostname,port,databaseName);
  StringBuffer url=new StringBuffer(environmentSubstitute(baseUrl));
  if (databaseInterface.supportsOptionsInURL()) {
    String optionIndicator=getExtraOptionIndicator();
    String optionSeparator=getExtraOptionSeparator();
    String valueSeparator=getExtraOptionValueSeparator();
    Map<String,String> map=getExtraOptions();
    if (map.size() > 0) {
      Iterator<String> iterator=map.keySet().iterator();
      boolean first=true;
      while (iterator.hasNext()) {
        String typedParameter=iterator.next();
        int dotIndex=typedParameter.indexOf('.');
        if (dotIndex >= 0) {
          String typeCode=typedParameter.substring(0,dotIndex);
          String parameter=typedParameter.substring(dotIndex + 1);
          String value=map.get(typedParameter);
          if (databaseInterface.getPluginId().equals(typeCode)) {
            if (first && url.indexOf(valueSeparator) == -1) {
              url.append(optionIndicator);
            }
 else {
              url.append(optionSeparator);
            }
            url.append(parameter);
            if (!Const.isEmpty(value) && !value.equals(EMPTY_OPTIONS_STRING)) {
              url.append(valueSeparator).append(value);
            }
            first=false;
          }
        }
      }
    }
  }
  return url.toString();
}
