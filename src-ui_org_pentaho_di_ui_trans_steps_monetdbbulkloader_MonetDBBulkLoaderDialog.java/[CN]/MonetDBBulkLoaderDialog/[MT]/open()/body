{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  FocusListener lsFocusLost=new FocusAdapter(){
    public void focusLost(    FocusEvent arg0){
      setTableFieldCombo();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.LEFT);
  wlStepname.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Stepname.Label"));
  props.setLook(wlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralSettingsTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralSettingsTab.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.GeneralSettings.Label"));
  wGeneralSettingsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralSettingsComp);
  FormLayout tabLayout=new FormLayout();
  tabLayout.marginWidth=3;
  tabLayout.marginHeight=3;
  wGeneralSettingsComp.setLayout(tabLayout);
  wGeneralSettingsComp.layout();
  wGeneralSettingsTab.setControl(wGeneralSettingsComp);
  wMonetDBmclientSettingsTab=new CTabItem(wTabFolder,SWT.NONE);
  wMonetDBmclientSettingsTab.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.MonetDBmclientSettings.Label"));
  wMonetDBmclientSettingsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wMonetDBmclientSettingsComp);
  wMonetDBmclientSettingsComp.setLayout(tabLayout);
  wMonetDBmclientSettingsComp.layout();
  wMonetDBmclientSettingsTab.setControl(wMonetDBmclientSettingsComp);
  wMonetDBmclientParamGroup=new Group(wMonetDBmclientSettingsComp,SWT.SHADOW_IN);
  wMonetDBmclientParamGroup.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.MonetDBmclientSettings.ParameterGroup"));
  props.setLook(wMonetDBmclientParamGroup);
  wMonetDBmclientParamGroup.setLayout(tabLayout);
  wMonetDBmclientParamGroup.layout();
  wOutputFieldsTab=new CTabItem(wTabFolder,SWT.NONE);
  wOutputFieldsTab.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.OutputFields"));
  wOutputFieldsComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wOutputFieldsComp);
  wOutputFieldsComp.setLayout(tabLayout);
  wOutputFieldsComp.layout();
  wOutputFieldsTab.setControl(wOutputFieldsComp);
  wTabFolder.setSelection(0);
  wTabFolder.addSelectionListener(new SelectionAdapter(){
    @Override public void widgetSelected(    SelectionEvent arg0){
      wTabFolder.layout(true,true);
    }
  }
);
  wConnection=addConnectionLine(wGeneralSettingsComp,wTabFolder,middle,margin,null,transMeta);
  if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)   wConnection.select(0);
  wConnection.addModifyListener(lsMod);
  wlSchema=new Label(wGeneralSettingsComp,SWT.LEFT);
  wlSchema.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.TargetSchema.Label"));
  props.setLook(wlSchema);
  wSchema=new TextVar(transMeta,wGeneralSettingsComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSchema);
  wSchema.addModifyListener(lsMod);
  wSchema.addFocusListener(lsFocusLost);
  wlTable=new Label(wGeneralSettingsComp,SWT.LEFT);
  wlTable.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.TargetTable.Label"));
  props.setLook(wlTable);
  wbTable=new Button(wGeneralSettingsComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbTable);
  wbTable.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Browse.Button"));
  wTable=new TextVar(transMeta,wGeneralSettingsComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wTable);
  wTable.addModifyListener(lsMod);
  wTable.addFocusListener(lsFocusLost);
  wlBufferSize=new Label(wGeneralSettingsComp,SWT.RIGHT);
  wlBufferSize.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.BufferSize.Label"));
  props.setLook(wlBufferSize);
  wBufferSize=new TextVar(transMeta,wGeneralSettingsComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wBufferSize);
  wBufferSize.addModifyListener(lsMod);
  wlLogFile=new Label(wGeneralSettingsComp,SWT.LEFT);
  wlLogFile.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.LogFile.Label"));
  props.setLook(wlLogFile);
  wbLogFile=new Button(wGeneralSettingsComp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbLogFile);
  wbLogFile.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Browse.Button"));
  wLogFile=new TextVar(transMeta,wGeneralSettingsComp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wLogFile);
  wLogFile.addModifyListener(lsMod);
  wlTruncate=new Label(wGeneralSettingsComp,SWT.LEFT);
  wlTruncate.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Truncate.Label"));
  props.setLook(wlTruncate);
  wTruncate=new Button(wGeneralSettingsComp,SWT.CHECK);
  props.setLook(wTruncate);
  SelectionAdapter lsSelMod=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wTruncate.addSelectionListener(lsSelMod);
  wlFieldSeparator=new Label(wMonetDBmclientParamGroup,SWT.LEFT);
  wlFieldSeparator.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.MonetDBmclientSettings.ParameterGroup.FieldSeparator.Label"));
  props.setLook(wlFieldSeparator);
  wFieldSeparator=new Combo(wMonetDBmclientParamGroup,SWT.SINGLE | SWT.CENTER | SWT.BORDER);
  wFieldSeparator.setItems(fieldSeparators);
  props.setLook(wFieldSeparator);
  wFieldSeparator.addModifyListener(lsMod);
  wlFieldEnclosure=new Label(wMonetDBmclientParamGroup,SWT.LEFT);
  wlFieldEnclosure.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.MonetDBmclientSettings.ParameterGroup.FieldEnclosure.Label"));
  props.setLook(wlFieldEnclosure);
  wFieldEnclosure=new Combo(wMonetDBmclientParamGroup,SWT.SINGLE | SWT.CENTER | SWT.BORDER);
  wFieldEnclosure.setItems(fieldEnclosures);
  wFieldEnclosure.addModifyListener(lsMod);
  wlNULLrepresentation=new Label(wMonetDBmclientParamGroup,SWT.LEFT);
  wlNULLrepresentation.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Tab.MonetDBmclientSettings.ParameterGroup.NULLrepresentation.Label"));
  props.setLook(wlNULLrepresentation);
  wNULLrepresentation=new Combo(wMonetDBmclientParamGroup,SWT.SINGLE | SWT.CENTER | SWT.BORDER);
  wNULLrepresentation.setItems(nullRepresentations);
  wNULLrepresentation.addModifyListener(lsMod);
  wlEncoding=new Label(wMonetDBmclientParamGroup,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  wEncoding=new Combo(wMonetDBmclientParamGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wEncoding.setToolTipText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Encoding.Tooltip"));
  wEncoding.setItems(encodings);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.SQL.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wSQL},margin,null);
  wlReturn=new Label(wOutputFieldsComp,SWT.NONE);
  wlReturn.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.Fields.Label"));
  props.setLook(wlReturn);
  int UpInsCols=3;
  int UpInsRows=(input.getFieldTable() != null ? input.getFieldTable().length : 1);
  ciReturn=new ColumnInfo[UpInsCols];
  ciReturn[0]=new ColumnInfo(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.ColumnInfo.TableField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciReturn[1]=new ColumnInfo(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.ColumnInfo.StreamField"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false);
  ciReturn[2]=new ColumnInfo(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.ColumnInfo.FormatOK"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{"Y","N"},true);
  tableFieldColumns.add(ciReturn[0]);
  wReturn=new TableView(transMeta,wOutputFieldsComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciReturn,UpInsRows,lsMod,props);
  wGetLU=new Button(wOutputFieldsComp,SWT.PUSH);
  wGetLU.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.GetFields.Label"));
  wDoMapping=new Button(wOutputFieldsComp,SWT.PUSH);
  wDoMapping.setText(BaseMessages.getString(PKG,"MonetDBBulkLoaderDialog.EditMapping.Label"));
  wDoMapping.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      generateMappings();
    }
  }
);
  fdlStepname=new FormData();
  fdlStepname.top=new FormAttachment(0,15);
  fdlStepname.left=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(20,0);
  wlStepname.setLayoutData(fdlStepname);
  fdStepname=new FormData();
  fdStepname.top=new FormAttachment(0,15);
  fdStepname.left=new FormAttachment(wlStepname,margin);
  fdStepname.right=new FormAttachment(100,-margin);
  wStepname.setLayoutData(fdStepname);
  FormData fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin + 20);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  fdlSchema=new FormData();
  fdlSchema.top=new FormAttachment(wConnection,margin * 2);
  fdlSchema.left=new FormAttachment(wGeneralSettingsComp,margin);
  wlSchema.setLayoutData(fdlSchema);
  fdSchema=new FormData();
  fdSchema.top=new FormAttachment(wConnection,margin * 2);
  fdSchema.left=new FormAttachment(middle,margin);
  fdSchema.right=new FormAttachment(100,-margin);
  wSchema.setLayoutData(fdSchema);
  fdlTable=new FormData();
  fdlTable.top=new FormAttachment(wSchema,margin);
  fdlTable.left=new FormAttachment(0,margin);
  wlTable.setLayoutData(fdlTable);
  fdbTable=new FormData();
  fdbTable.top=new FormAttachment(wSchema,0);
  fdbTable.right=new FormAttachment(100,-margin);
  wbTable.setLayoutData(fdbTable);
  fdTable=new FormData();
  fdTable.top=new FormAttachment(wSchema,margin);
  fdTable.left=new FormAttachment(middle,margin);
  fdTable.right=new FormAttachment(wbTable,-margin);
  wTable.setLayoutData(fdTable);
  fdlBufferSize=new FormData();
  fdlBufferSize.top=new FormAttachment(wTable,margin);
  fdlBufferSize.left=new FormAttachment(0,margin);
  wlBufferSize.setLayoutData(fdlBufferSize);
  fdBufferSize=new FormData();
  fdBufferSize.top=new FormAttachment(wTable,margin);
  fdBufferSize.left=new FormAttachment(middle,margin);
  fdBufferSize.right=new FormAttachment(100,-margin);
  wBufferSize.setLayoutData(fdBufferSize);
  fdlLogFile=new FormData();
  fdlLogFile.top=new FormAttachment(wBufferSize,margin);
  fdlLogFile.left=new FormAttachment(0,margin);
  wlLogFile.setLayoutData(fdlLogFile);
  fdbLogFile=new FormData();
  fdbLogFile.top=new FormAttachment(wBufferSize,0);
  fdbLogFile.right=new FormAttachment(100,-margin);
  wbLogFile.setLayoutData(fdbLogFile);
  fdLogFile=new FormData();
  fdLogFile.left=new FormAttachment(middle,margin);
  fdLogFile.top=new FormAttachment(wBufferSize,margin);
  fdLogFile.right=new FormAttachment(wbLogFile,-margin);
  wLogFile.setLayoutData(fdLogFile);
  fdlTruncate=new FormData();
  fdlTruncate.left=new FormAttachment(0,margin);
  fdlTruncate.top=new FormAttachment(wLogFile,margin);
  wlTruncate.setLayoutData(fdlTruncate);
  fdTruncate=new FormData();
  fdTruncate.top=new FormAttachment(wLogFile,margin);
  fdTruncate.left=new FormAttachment(wlTruncate,margin);
  fdTruncate.right=new FormAttachment(100,-margin);
  wTruncate.setLayoutData(fdTruncate);
  fdgMonetDBmclientParamGroup=new FormData();
  fdgMonetDBmclientParamGroup.top=new FormAttachment(wMonetDBmclientSettingsComp,margin * 3);
  fdgMonetDBmclientParamGroup.left=new FormAttachment(0,margin);
  fdgMonetDBmclientParamGroup.right=new FormAttachment(100,-margin);
  wMonetDBmclientParamGroup.setLayoutData(fdgMonetDBmclientParamGroup);
  Text text=new Text(shell,SWT.NONE);
  GC gc=new GC(text);
  FontMetrics fm=gc.getFontMetrics();
  int charWidth=fm.getAverageCharWidth();
  int fieldWidth=text.computeSize(charWidth * 20,SWT.DEFAULT).x;
  gc.dispose();
  fdlFieldSeparator=new FormData();
  fdlFieldSeparator.top=new FormAttachment(wMonetDBmclientSettingsComp,3 * margin);
  fdlFieldSeparator.left=new FormAttachment(0,3 * margin);
  wlFieldSeparator.setLayoutData(fdlFieldSeparator);
  fdFieldSeparator=new FormData();
  fdFieldSeparator.top=new FormAttachment(wMonetDBmclientSettingsComp,3 * margin);
  fdFieldSeparator.left=new FormAttachment(middle,margin);
  fdFieldSeparator.width=fieldWidth;
  wFieldSeparator.setLayoutData(fdFieldSeparator);
  fdlFieldEnclosure=new FormData();
  fdlFieldEnclosure.top=new FormAttachment(wFieldSeparator,2 * margin);
  fdlFieldEnclosure.left=new FormAttachment(0,3 * margin);
  wlFieldEnclosure.setLayoutData(fdlFieldEnclosure);
  fdFieldEnclosure=new FormData();
  fdFieldEnclosure.top=new FormAttachment(wFieldSeparator,2 * margin);
  fdFieldEnclosure.left=new FormAttachment(middle,margin);
  fdFieldEnclosure.width=fieldWidth;
  wFieldEnclosure.setLayoutData(fdFieldEnclosure);
  fdlNULLrepresentation=new FormData();
  fdlNULLrepresentation.top=new FormAttachment(wFieldEnclosure,2 * margin);
  fdlNULLrepresentation.left=new FormAttachment(0,3 * margin);
  wlNULLrepresentation.setLayoutData(fdlNULLrepresentation);
  fdNULLrepresentation=new FormData();
  fdNULLrepresentation.top=new FormAttachment(wFieldEnclosure,2 * margin);
  fdNULLrepresentation.left=new FormAttachment(middle,margin);
  fdNULLrepresentation.width=fieldWidth;
  wNULLrepresentation.setLayoutData(fdNULLrepresentation);
  fdlEncoding=new FormData();
  fdlEncoding.top=new FormAttachment(wNULLrepresentation,2 * margin);
  fdlEncoding.left=new FormAttachment(0,3 * margin);
  wlEncoding.setLayoutData(fdlEncoding);
  fdEncoding=new FormData();
  fdEncoding.top=new FormAttachment(wNULLrepresentation,2 * margin);
  fdEncoding.left=new FormAttachment(middle,margin);
  fdEncoding.width=fieldWidth;
  wEncoding.setLayoutData(fdEncoding);
  fdlReturn=new FormData();
  fdlReturn.top=new FormAttachment(wOutputFieldsComp,2 * margin);
  fdlReturn.left=new FormAttachment(0,margin);
  wlReturn.setLayoutData(fdlReturn);
  fdDoMapping=new FormData();
  fdDoMapping.top=new FormAttachment(wOutputFieldsComp,2 * margin);
  fdDoMapping.right=new FormAttachment(100,-margin);
  wDoMapping.setLayoutData(fdDoMapping);
  fdGetLU=new FormData();
  fdGetLU.top=new FormAttachment(wOutputFieldsComp,2 * margin);
  fdGetLU.right=new FormAttachment(wDoMapping,-margin);
  wGetLU.setLayoutData(fdGetLU);
  fdReturn=new FormData();
  fdReturn.top=new FormAttachment(wGetLU,3 * margin);
  fdReturn.left=new FormAttachment(0,margin);
  fdReturn.right=new FormAttachment(100,-margin);
  fdReturn.bottom=new FormAttachment(100,-2 * margin);
  wReturn.setLayoutData(fdReturn);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  wbLogFile.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*"});
      if (wLogFile.getText() != null) {
        dialog.setFileName(wLogFile.getText());
      }
      dialog.setFilterNames(ALL_FILETYPES);
      if (dialog.open() != null) {
        wLogFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGetLU=new Listener(){
    public void handleEvent(    Event e){
      getUpdate();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      create();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGetLU.addListener(SWT.Selection,lsGetLU);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wSchema.addSelectionListener(lsDef);
  wTable.addSelectionListener(lsDef);
  wBufferSize.addSelectionListener(lsDef);
  wLogFile.addSelectionListener(lsDef);
  wFieldSeparator.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  wbTable.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      getTableName();
    }
  }
);
  setSize();
  getData();
  setTableFieldCombo();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
