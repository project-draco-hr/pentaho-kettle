{
  PartitionSchema partitionSchema=(PartitionSchema)element;
  DataNode rootNode=new DataNode(NODE_ROOT);
  ObjectId partitionId=repo.getPartitionSchemaID(partitionSchema.getName());
  if (partitionId != null && !partitionSchema.getObjectId().equals(partitionId)) {
    throw new KettleException("Failed to save object to repository. Object [" + partitionSchema.getName() + "] already exists.");
  }
  rootNode.setProperty(PROP_DYNAMIC_DEFINITION,partitionSchema.isDynamicallyDefined());
  rootNode.setProperty(PROP_PARTITIONS_PER_SLAVE,partitionSchema.getNumberOfPartitionsPerSlave());
  DataNode attrNode=rootNode.addNode(NODE_ATTRIBUTES);
  attrNode.setProperty(PROP_NB_PARTITION_SCHEMA,partitionSchema.getPartitionIDs().size());
  for (int i=0; i < partitionSchema.getPartitionIDs().size(); i++) {
    attrNode.setProperty(String.valueOf(i),partitionSchema.getPartitionIDs().get(i));
  }
  return rootNode;
}
