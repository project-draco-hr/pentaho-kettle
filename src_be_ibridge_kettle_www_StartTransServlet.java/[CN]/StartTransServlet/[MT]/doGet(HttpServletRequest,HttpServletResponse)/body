{
  if (!request.getContextPath().equals(CONTEXT_PATH))   return;
  if (log.isDebug())   log.logDebug(toString(),"Start of transformation requested");
  String transName=request.getParameter("name");
  boolean useXML="Y".equalsIgnoreCase(request.getParameter("xml"));
  response.setStatus(HttpServletResponse.SC_OK);
  PrintWriter out=response.getWriter();
  if (useXML) {
    response.setContentType("text/xml");
    response.setCharacterEncoding(Const.XML_ENCODING);
    out.print(XMLHandler.getXMLHeader(Const.XML_ENCODING));
  }
 else {
    response.setContentType("text/html");
    out.println("<HTML>");
    out.println("<HEAD><TITLE>Start transformation</TITLE></HEAD>");
    out.println("<BODY>");
  }
  try {
    LocalVariables.getInstance().createKettleVariables(Thread.currentThread().getName(),transformationMap.getParentThreadName(),false);
    Trans trans=transformationMap.getTransformation(transName);
    if (trans != null) {
      trans.execute(null);
      String message="Transformation '" + transName + "' was started.";
      if (useXML) {
        out.println(new WebResult(WebResult.STRING_OK,message).getXML());
      }
 else {
        out.println("<H1>" + message + "</H1>");
        out.println("<a href=\"/kettle/transStatus?name=" + transName + "\">Back to the transformation status page</a><p>");
      }
    }
 else {
      String message="The specified transformation [" + transName + "] could not be found";
      if (useXML) {
        out.println(new WebResult(WebResult.STRING_ERROR,message));
      }
 else {
        out.println("<H1>" + message + "</H1>");
        out.println("<a href=\"/kettle/status\">Back to the status page</a><p>");
      }
    }
  }
 catch (  Exception ex) {
    if (useXML) {
      out.println(new WebResult(WebResult.STRING_ERROR,"Unexpected error during transformations start:" + Const.CR + Const.getStackTracker(ex)));
    }
 else {
      out.println("<p>");
      out.println("<pre>");
      ex.printStackTrace(out);
      out.println("</pre>");
    }
  }
  if (!useXML) {
    out.println("<p>");
    out.println("</BODY>");
    out.println("</HTML>");
  }
}
