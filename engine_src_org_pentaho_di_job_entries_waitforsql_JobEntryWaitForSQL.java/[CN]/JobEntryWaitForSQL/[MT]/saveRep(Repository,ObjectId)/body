{
  try {
    rep.saveDatabaseMetaJobEntryAttribute(id_job,getObjectId(),"connection","id_database",connection);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"schemaname",schemaname);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"tablename",tablename);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"success_condition",getSuccessConditionCode(successCondition));
    rep.saveJobEntryAttribute(id_job,getObjectId(),"rows_count_value",rowsCountValue);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"custom_sql",customSQL);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"is_custom_sql",iscustomSQL);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"is_usevars",isUseVars);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_rows_result",isAddRowsResult);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"maximum_timeout",maximumTimeout);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"check_cycle_time",checkCycleTime);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"success_on_timeout",successOnTimeout);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"clear_result_rows",isClearResultList);
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobEntryWaitForSQL.UnableSaveRep","" + id_job),dbe);
  }
}
