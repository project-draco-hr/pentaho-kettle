{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  shell.setImage((Image)GUIResource.getInstance().getImageTransGraph());
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      changed=true;
    }
  }
;
  lsModSel=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      changed=true;
    }
  }
;
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"TransDialog.Shell.Title"));
  middle=props.getMiddlePct();
  margin=Const.MARGIN;
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wTabFolder.setSimple(false);
  addTransTab();
  addParamTab();
  addLogTab();
  addDateTab();
  addDepTab();
  addMiscTab();
  addMonitoringTab();
  addDataServiceTab();
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(0,0);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wSQL=new Button(shell,SWT.PUSH);
  wSQL.setText(BaseMessages.getString(PKG,"System.Button.SQL"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wSQL,wCancel},Const.MARGIN,null);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsSQL=new Listener(){
    public void handleEvent(    Event e){
      sql();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wSQL.addListener(SWT.Selection,lsSQL);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wTransname.addSelectionListener(lsDef);
  wTransdescription.addSelectionListener(lsDef);
  wTransversion.addSelectionListener(lsDef);
  wMaxdatetable.addSelectionListener(lsDef);
  wMaxdatefield.addSelectionListener(lsDef);
  wMaxdateoffset.addSelectionListener(lsDef);
  wMaxdatediff.addSelectionListener(lsDef);
  wSizeRowset.addSelectionListener(lsDef);
  wUniqueConnections.addSelectionListener(lsDef);
  wFeedbackSize.addSelectionListener(lsDef);
  wStepPerfInterval.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  if (currentTab != null) {
    setCurrentTab(currentTab);
  }
 else {
    wTabFolder.setSelection(0);
  }
  getData();
  BaseStepDialog.setSize(shell);
  changed=false;
  sharedObjectsFileChanged=false;
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return transMeta;
}
