{
  LDAPConnection connection=null;
  try {
    LDAPInputMeta meta=new LDAPInputMeta();
    getInfo(meta);
    wFields.removeAll();
    connection=new LDAPConnection(log,transMeta,meta,null);
    if (meta.UseAuthentication()) {
      String username=transMeta.environmentSubstitute(meta.getUserName());
      String password=Encr.decryptPasswordOptionallyEncrypted(transMeta.environmentSubstitute(meta.getPassword()));
      connection.connect(username,password);
    }
 else {
      connection.connect();
    }
    RowMeta listattributes=connection.getFields(transMeta.environmentSubstitute(meta.getSearchBase()));
    String[] fieldsName=new String[listattributes.size()];
    for (int i=0; i < listattributes.size(); i++) {
      ValueMetaInterface v=listattributes.getValueMeta(i);
      fieldsName[i]=v.getName();
      TableItem item=new TableItem(wFields.table,SWT.NONE);
      item.setText(1,v.getName());
      item.setText(2,v.getName());
      if (LDAPInputField.binaryAttributes.contains(v.getName())) {
        item.setText(3,BaseMessages.getString(PKG,"LDAPInputField.FetchAttributeAs.Binary"));
      }
 else {
        item.setText(3,BaseMessages.getString(PKG,"LDAPInputField.FetchAttributeAs.String"));
      }
      item.setText(4,BaseMessages.getString(PKG,"System.Combo.No"));
      item.setText(5,v.getTypeDesc());
    }
    colinf[1].setComboValues(fieldsName);
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 catch (  KettleException e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"LDAPInputDialog.ErrorGettingColums.DialogTitle"),BaseMessages.getString(PKG,"LDAPInputDialog.ErrorGettingColums.DialogMessage"),e);
  }
catch (  Exception e) {
    new ErrorDialog(shell,BaseMessages.getString(PKG,"LDAPInputDialog.ErrorGettingColums.DialogTitle"),BaseMessages.getString(PKG,"LDAPInputDialog.ErrorGettingColums.DialogMessage"),e);
  }
 finally {
    if (connection != null) {
      try {
        connection.close();
      }
 catch (      Exception e) {
      }
    }
  }
}
