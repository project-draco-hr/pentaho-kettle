{
  double dbl;
  if (classType.equalsIgnoreCase("org.mozilla.javascript.Undefined")) {
    return null;
  }
 else {
    if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeDate")) {
      dbl=Context.toNumber(value);
    }
 else     if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeJavaObject") || classType.equalsIgnoreCase("java.util.Date")) {
      try {
        Date dat=(Date)Context.jsToJava(value,java.util.Date.class);
        dbl=dat.getTime();
      }
 catch (      Exception e) {
        try {
          Value v=(Value)Context.jsToJava(value,Value.class);
          return v.getDate();
        }
 catch (        Exception e2) {
          try {
            String string=Context.toString(value);
            return XMLHandler.stringToDate(string);
          }
 catch (          Exception e3) {
            throw new KettleValueException("Can't convert a string to a date");
          }
        }
      }
    }
 else     if (classType.equalsIgnoreCase("java.lang.Double")) {
      dbl=(Double)value;
    }
 else {
      String string=(String)Context.jsToJava(value,String.class);
      dbl=Double.parseDouble(string);
    }
    long lng=Math.round(dbl);
    return new Date(lng);
  }
}
