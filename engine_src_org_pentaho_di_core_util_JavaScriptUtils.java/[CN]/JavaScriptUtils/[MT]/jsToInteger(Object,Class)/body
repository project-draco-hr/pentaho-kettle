{
  if (Number.class.isAssignableFrom(clazz)) {
    return ((Number)value).longValue();
  }
 else {
    String classType=clazz.getName();
    if (classType.equalsIgnoreCase("java.lang.String")) {
      return (new Long((String)value));
    }
 else     if (classType.equalsIgnoreCase("org.mozilla.javascript.Undefined")) {
      return null;
    }
 else     if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeNumber")) {
      Number nb=Context.toNumber(value);
      return nb.longValue();
    }
 else     if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeJavaObject")) {
      try {
        Value v=(Value)Context.jsToJava(value,Value.class);
        return v.getInteger();
      }
 catch (      Exception e2) {
        String string=Context.toString(value);
        return Long.parseLong(Const.trim(string));
      }
    }
 else {
      return Long.parseLong(value.toString());
    }
  }
}
