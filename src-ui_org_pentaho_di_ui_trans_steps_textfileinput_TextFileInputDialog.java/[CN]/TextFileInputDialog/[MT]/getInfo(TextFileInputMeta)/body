{
  stepname=wStepname.getText();
  meta.setAcceptingFilenames(wAccFilenames.getSelection());
  meta.setPassingThruFields(wPassThruFields.getSelection());
  meta.setAcceptingField(wAccField.getText());
  meta.setAcceptingStepName(wAccStep.getText());
  meta.setAcceptingStep(transMeta.findStep(wAccStep.getText()));
  meta.setFileType(wFiletype.getText());
  meta.setFileFormat(wFormat.getText());
  meta.setSeparator(wSeparator.getText());
  meta.setEnclosure(wEnclosure.getText());
  meta.setEscapeCharacter(wEscape.getText());
  meta.setRowLimit(Const.toLong(wLimit.getText(),0L));
  meta.setFilenameField(wInclFilenameField.getText());
  meta.setRowNumberField(wInclRownumField.getText());
  meta.setAddResultFile(wAddResult.getSelection());
  meta.setIncludeFilename(wInclFilename.getSelection());
  meta.setIncludeRowNumber(wInclRownum.getSelection());
  meta.setRowNumberByFile(wRownumByFile.getSelection());
  meta.setHeader(wHeader.getSelection());
  meta.setNrHeaderLines(Const.toInt(wNrHeader.getText(),1));
  meta.setFooter(wFooter.getSelection());
  meta.setNrFooterLines(Const.toInt(wNrFooter.getText(),1));
  meta.setLineWrapped(wWraps.getSelection());
  meta.setNrWraps(Const.toInt(wNrWraps.getText(),1));
  meta.setLayoutPaged(wLayoutPaged.getSelection());
  meta.setNrLinesPerPage(Const.toInt(wNrLinesPerPage.getText(),80));
  meta.setNrLinesDocHeader(Const.toInt(wNrLinesDocHeader.getText(),0));
  meta.setFileCompression(wCompression.getText());
  meta.setDateFormatLenient(wDateLenient.getSelection());
  meta.setNoEmptyLines(wNoempty.getSelection());
  meta.setEncoding(wEncoding.getText());
  int nrfiles=wFilenameList.getItemCount();
  int nrfields=wFields.nrNonEmpty();
  int nrfilters=wFilter.nrNonEmpty();
  meta.allocate(nrfiles,nrfields,nrfilters);
  meta.setFileName(wFilenameList.getItems(0));
  meta.setFileMask(wFilenameList.getItems(1));
  meta.setExcludeFileMask(wFilenameList.getItems(2));
  meta.setFileRequired(wFilenameList.getItems(3));
  meta.setIncludeSubFolders(wFilenameList.getItems(4));
  for (int i=0; i < nrfields; i++) {
    TextFileInputField field=new TextFileInputField();
    TableItem item=wFields.getNonEmpty(i);
    field.setName(item.getText(1));
    field.setType(ValueMeta.getType(item.getText(2)));
    field.setFormat(item.getText(3));
    field.setPosition(Const.toInt(item.getText(4),-1));
    field.setLength(Const.toInt(item.getText(5),-1));
    field.setPrecision(Const.toInt(item.getText(6),-1));
    field.setCurrencySymbol(item.getText(7));
    field.setDecimalSymbol(item.getText(8));
    field.setGroupSymbol(item.getText(9));
    field.setNullString(item.getText(10));
    field.setIfNullValue(item.getText(11));
    field.setTrimType(ValueMeta.getTrimTypeByDesc(item.getText(12)));
    field.setRepeated(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(13)));
    meta.getInputFields()[i]=field;
  }
  for (int i=0; i < nrfilters; i++) {
    TableItem item=wFilter.getNonEmpty(i);
    TextFileFilter filter=new TextFileFilter();
    meta.getFilter()[i]=filter;
    filter.setFilterString(item.getText(1));
    filter.setFilterPosition(Const.toInt(item.getText(2),-1));
    filter.setFilterLastLine(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(3)));
    filter.setFilterPositive(BaseMessages.getString(PKG,"System.Combo.Yes").equalsIgnoreCase(item.getText(4)));
  }
  meta.setErrorIgnored(wErrorIgnored.getSelection());
  meta.setErrorLineSkipped(wSkipErrorLines.getSelection());
  meta.setErrorCountField(wErrorCount.getText());
  meta.setErrorFieldsField(wErrorFields.getText());
  meta.setErrorTextField(wErrorText.getText());
  meta.setWarningFilesDestinationDirectory(wWarnDestDir.getText());
  meta.setWarningFilesExtension(wWarnExt.getText());
  meta.setErrorFilesDestinationDirectory(wErrorDestDir.getText());
  meta.setErrorLineFilesExtension(wErrorExt.getText());
  meta.setLineNumberFilesDestinationDirectory(wLineNrDestDir.getText());
  meta.setLineNumberFilesExtension(wLineNrExt.getText());
  Locale locale=EnvUtil.createLocale(wDateLocale.getText());
  if (!locale.equals(Locale.getDefault())) {
    meta.setDateFormatLocale(locale);
  }
 else {
    meta.setDateFormatLocale(Locale.getDefault());
  }
}
