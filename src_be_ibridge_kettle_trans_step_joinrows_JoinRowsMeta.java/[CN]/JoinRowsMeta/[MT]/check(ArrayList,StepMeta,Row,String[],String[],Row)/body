{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is connected to previous one, receiving " + prev.size() + " fields",stepMeta);
    remarks.add(cr);
    String realDirectory=Const.replEnv(directory);
    File f=new File(realDirectory);
    if (f.exists()) {
      if (f.isDirectory()) {
        cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"[" + realDirectory + "] exists and is a directory",stepMeta);
        remarks.add(cr);
      }
 else {
        cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"[" + realDirectory + "] exists but is not a directory",stepMeta);
        remarks.add(cr);
      }
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Directory [" + realDirectory + "] doesn't exist!",stepMeta);
      remarks.add(cr);
    }
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"Couldn't find fields from previous steps, check the hops...!",stepMeta);
    remarks.add(cr);
  }
  if (input.length > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,"Step is receiving info from other steps.",stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,"No input received from other steps!",stepMeta);
    remarks.add(cr);
  }
}
