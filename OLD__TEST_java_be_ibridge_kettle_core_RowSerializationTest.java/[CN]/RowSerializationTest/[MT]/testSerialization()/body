{
  Value values1[]={new Value("field1","KETTLE"),new Value("field2",123L),new Value("field3",10.5D),new Value("field4",new Date()),new Value("field5",true),new Value("field6",new BigDecimal(123.45))};
  Value values2[]={new Value("field1",""),new Value("field2",0L),new Value("field3",0.0D),new Value("field4",(Date)null),new Value("field5",true),new Value("field6",(BigDecimal)null)};
  Value values3[]={new Value("field1",(String)null),new Value("field2",0L),new Value("field3",0.0D),new Value("field4",(Date)null),new Value("field5",true),new Value("field6",(BigDecimal)null)};
  Row r1=new Row();
  for (int i=0; i < values1.length; i++) {
    r1.addValue(values1[i]);
  }
  Row r1null=new Row();
  for (int i=0; i < values1.length; i++) {
    Value nullValue=(Value)values1[i].clone();
    nullValue.setNull();
    r1null.addValue(nullValue);
  }
  Row r2=new Row();
  for (int i=0; i < values2.length; i++) {
    r2.addValue(values2[i]);
  }
  Row r2null=new Row();
  for (int i=0; i < values2.length; i++) {
    Value nullValue=(Value)values2[i].clone();
    nullValue.setNull();
    r2null.addValue(nullValue);
  }
  Row r3=new Row();
  for (int i=0; i < values3.length; i++) {
    r3.addValue(values3[i]);
  }
  Row r3null=new Row();
  for (int i=0; i < values3.length; i++) {
    Value nullValue=(Value)values3[i].clone();
    nullValue.setNull();
    r3null.addValue(nullValue);
  }
  Vector out=new Vector();
  out.add(r1);
  out.add(r1null);
  out.add(r2);
  out.add(r2null);
  out.add(r3);
  out.add(r3null);
  File fil=null;
  FileOutputStream fos;
  DataOutputStream dos;
  int p;
  try {
    fil=File.createTempFile("sorttmp",".tmp",new File("."));
    fil.deleteOnExit();
    fos=new FileOutputStream(fil);
    dos=new DataOutputStream(fos);
    for (p=0; p < out.size(); p++) {
      ((Row)out.get(p)).write(dos);
    }
    dos.close();
    fos.close();
  }
 catch (  Exception e) {
    fail("raised an unpected error: " + e.toString() + Const.CR+ Const.getStackTracker(e));
  }
  FileInputStream fi=null;
  try {
    fi=new FileInputStream(fil);
    DataInputStream di=new DataInputStream(fi);
    try {
      Row r1i=new Row(di);
      Row r1nulli=new Row(di);
      Row r2i=new Row(di);
      Row r2nulli=new Row(di);
      Row r3i=new Row(di);
      Row r3nulli=new Row(di);
      if (!r1i.toString().equals(r1.toString()))       fail("r1 is load wrongly");
      if (!r1nulli.toString().equals(r1null.toString()))       fail("r1null is load wrongly");
      if (!r2i.toString().equals(r2.toString()))       fail("r2 is loaded wrongly");
      if (!r2nulli.toString().equals(r2null.toString()))       fail("r2null is loaded wrongly");
      if (!r3i.toString().equals(r3.toString()))       fail("r3 is loaded wrongly");
      if (!r3nulli.toString().equals(r3null.toString()))       fail("r3null is loaded wrongly");
    }
 catch (    KettleFileException e) {
      fail("raised an unpected error: " + e.getMessage() + Const.CR+ Const.getStackTracker(e));
    }
  }
 catch (  FileNotFoundException e) {
    fail("raised an unpected error");
  }
}
