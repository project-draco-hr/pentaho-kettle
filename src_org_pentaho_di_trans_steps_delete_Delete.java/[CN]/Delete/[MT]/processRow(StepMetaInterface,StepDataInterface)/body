{
  meta=(DeleteMeta)smi;
  data=(DeleteData)sdi;
  boolean sendToErrorRow=false;
  String errorMessage=null;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    data.schemaTable=meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),environmentSubstitute(meta.getTableName()));
    if (log.isDetailed())     logDetailed(Messages.getString("Delete.Log.CheckingRow") + getInputRowMeta().getString(r));
    data.keynrs=new int[meta.getKeyStream().length];
    data.keynrs2=new int[meta.getKeyStream().length];
    for (int i=0; i < meta.getKeyStream().length; i++) {
      data.keynrs[i]=getInputRowMeta().indexOfValue(meta.getKeyStream()[i]);
      if (data.keynrs[i] < 0 && !"IS NULL".equalsIgnoreCase(meta.getKeyCondition()[i]) && !"IS NOT NULL".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(Messages.getString("Delete.Exception.FieldRequired",meta.getKeyStream()[i]));
      }
      data.keynrs2[i]=getInputRowMeta().indexOfValue(meta.getKeyStream2()[i]);
      if (data.keynrs2[i] < 0 && "BETWEEN".equalsIgnoreCase(meta.getKeyCondition()[i])) {
        throw new KettleStepException(Messages.getString("Delete.Exception.FieldRequired",meta.getKeyStream2()[i]));
      }
      if (log.isDebug())       logDebug(Messages.getString("Delete.Log.FieldInfo",meta.getKeyStream()[i]) + data.keynrs[i]);
    }
    prepareDelete(getInputRowMeta());
  }
  try {
    deleteValues(getInputRowMeta(),r);
    putRow(data.outputRowMeta,r);
    if (checkFeedback(getLinesRead())) {
      if (log.isBasic())       logBasic(Messages.getString("Delete.Log.LineNumber") + getLinesRead());
    }
  }
 catch (  KettleException e) {
    if (getStepMeta().isDoingErrorHandling()) {
      sendToErrorRow=true;
      errorMessage=e.toString();
    }
 else {
      logError(Messages.getString("Delete.Log.ErrorInStep") + e.getMessage());
      setErrors(1);
      stopAll();
      setOutputDone();
      return false;
    }
    if (sendToErrorRow) {
      putError(getInputRowMeta(),r,1,errorMessage,null,"DEL001");
    }
  }
  return true;
}
