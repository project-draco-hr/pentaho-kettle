{
  meta=(StreamLookupMeta)smi;
  data=(StreamLookupData)sdi;
  if (data.readLookupValues) {
    data.readLookupValues=false;
    if (!readLookupValues()) {
      logError(BaseMessages.getString(PKG,"StreamLookup.Log.UnableToReadDataFromLookupStream"));
      setErrors(1);
      stopAll();
      return false;
    }
    if (data.keyMeta != null) {
      for (      ValueMetaInterface valueMeta : data.keyMeta.getValueMetaList()) {
        valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
      }
    }
    if (data.valueMeta != null) {
      for (      ValueMetaInterface valueMeta : data.valueMeta.getValueMetaList()) {
        valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
      }
    }
    return true;
  }
  Object[] r=getRow();
  if (r == null) {
    if (log.isDetailed())     logDetailed(BaseMessages.getString(PKG,"StreamLookup.Log.StoppedProcessingWithEmpty",getLinesRead() + ""));
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.keynrs=new int[meta.getKeystream().length];
    data.lookupMeta=new RowMeta();
    data.convertKeysToNative=new boolean[meta.getKeystream().length];
    for (int i=0; i < meta.getKeystream().length; i++) {
      data.keynrs[i]=getInputRowMeta().indexOfValue(meta.getKeystream()[i]);
      if (data.keynrs[i] < 0) {
        throw new KettleStepException(BaseMessages.getString(PKG,"StreamLookup.Log.FieldNotFound",meta.getKeystream()[i],"" + getInputRowMeta().getString(r)));
      }
 else {
        if (log.isDetailed())         logDetailed(BaseMessages.getString(PKG,"StreamLookup.Log.FieldInfo",meta.getKeystream()[i],"" + data.keynrs[i]));
      }
      data.lookupMeta.addValueMeta(getInputRowMeta().getValueMeta(data.keynrs[i]).clone());
      data.convertKeysToNative[i]=getInputRowMeta().getValueMeta(data.keynrs[i]).isStorageBinaryString();
    }
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),new RowMetaInterface[]{data.infoMeta},null,this,repository,metaStore);
    handleNullIf();
  }
  Object[] outputRow=lookupValues(getInputRowMeta(),r);
  if (outputRow == null) {
    setOutputDone();
    return false;
  }
  putRow(data.outputRowMeta,outputRow);
  if (checkFeedback(getLinesRead())) {
    if (log.isBasic())     logBasic(BaseMessages.getString(PKG,"StreamLookup.Log.LineNumber") + getLinesRead());
  }
  return true;
}
