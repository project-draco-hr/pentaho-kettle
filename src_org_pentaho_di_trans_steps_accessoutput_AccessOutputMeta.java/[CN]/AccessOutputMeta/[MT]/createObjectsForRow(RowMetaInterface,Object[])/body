{
  Object[] values=new Object[rowMeta.size()];
  for (int i=0; i < rowMeta.size(); i++) {
    ValueMetaInterface valueMeta=rowMeta.getValueMeta(i);
    Object valueData=rowData[i];
    if (valueData == null || valueMeta == null) {
      values[i]=null;
      continue;
    }
    int length=valueMeta.getLength();
switch (valueMeta.getType()) {
case ValueMetaInterface.TYPE_INTEGER:
      if (length < 3) {
        values[i]=new Byte(valueMeta.getInteger(valueData).byteValue());
      }
 else {
        if (length < 5) {
          values[i]=new Short(valueMeta.getInteger(valueData).shortValue());
        }
 else {
          values[i]=valueMeta.getInteger(valueData);
        }
      }
    break;
case ValueMetaInterface.TYPE_NUMBER:
  values[i]=valueMeta.getNumber(valueData);
break;
case ValueMetaInterface.TYPE_DATE:
values[i]=valueMeta.getDate(valueData);
break;
case ValueMetaInterface.TYPE_STRING:
values[i]=valueMeta.getString(valueData);
break;
case ValueMetaInterface.TYPE_BINARY:
values[i]=valueMeta.getBinary(valueData);
break;
case ValueMetaInterface.TYPE_BOOLEAN:
values[i]=valueMeta.getBoolean(valueData);
break;
case ValueMetaInterface.TYPE_BIGNUMBER:
values[i]=valueMeta.getNumber(valueData);
break;
default :
break;
}
}
return values;
}
