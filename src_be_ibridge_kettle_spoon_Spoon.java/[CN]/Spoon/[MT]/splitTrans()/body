{
  try {
    TransSplitter transSplitter=new TransSplitter(transMeta);
    transSplitter.generateMasterTransformation();
    TransMeta master=transSplitter.getMaster();
    SlaveServer masterServer=transSplitter.getMasterServer();
    new Spoon(log,shell.getDisplay(),master,rep).open();
    String masterReply=masterServer.sendXML(master.getXML(),AddTransServlet.CONTEXT_PATH + "?xml=Y");
    WebResult webResult=WebResult.fromXMLString(masterReply);
    if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
      throw new KettleException("An error occurred sending the master transformation: " + webResult.getMessage());
    }
    SlaveServer slaves[]=transSplitter.getSlaveTargets();
    for (int i=0; i < slaves.length; i++) {
      TransMeta slaveTrans=(TransMeta)transSplitter.getSlaveTransMap().get(slaves[i]);
      new Spoon(log,shell.getDisplay(),slaveTrans,rep).open();
      String slaveReply=slaves[i].sendXML(slaveTrans.getXML(),AddTransServlet.CONTEXT_PATH + "?xml=Y");
      webResult=WebResult.fromXMLString(slaveReply);
      if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
        throw new KettleException("An error occurred sending a slave transformation: " + webResult.getMessage());
      }
    }
    masterReply=masterServer.getContentFromServer(PrepareExecutionTransHandler.CONTEXT_PATH + "?name=" + master.getName()+ "&xml=Y");
    webResult=WebResult.fromXMLString(masterReply);
    if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
      throw new KettleException("An error occurred while preparing the execution of the master transformation: " + webResult.getMessage());
    }
    for (int i=0; i < slaves.length; i++) {
      TransMeta slaveTrans=(TransMeta)transSplitter.getSlaveTransMap().get(slaves[i]);
      String slaveReply=slaves[i].getContentFromServer(PrepareExecutionTransHandler.CONTEXT_PATH + "?name=" + slaveTrans.getName()+ "&xml=Y");
      webResult=WebResult.fromXMLString(slaveReply);
      if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
        throw new KettleException("An error occurred while preparing the execution of a slave transformation: " + webResult.getMessage());
      }
    }
    masterReply=masterServer.getContentFromServer(StartExecutionTransHandler.CONTEXT_PATH + "?name=" + master.getName()+ "&xml=Y");
    webResult=WebResult.fromXMLString(masterReply);
    if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
      throw new KettleException("An error occurred while starting the execution of the master transformation: " + webResult.getMessage());
    }
    for (int i=0; i < slaves.length; i++) {
      TransMeta slaveTrans=(TransMeta)transSplitter.getSlaveTransMap().get(slaves[i]);
      String slaveReply=slaves[i].getContentFromServer(StartExecutionTransHandler.CONTEXT_PATH + "?name=" + slaveTrans.getName()+ "&xml=Y");
      webResult=WebResult.fromXMLString(slaveReply);
      if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
        throw new KettleException("An error occurred while starting the execution of a slave transformation: " + webResult.getMessage());
      }
    }
    MessageBox box=new MessageBox(shell,SWT.ICON_INFORMATION | SWT.OK);
    box.setText("OK");
    box.setMessage("The transformation was posted succesfully on the cluster\nRefer to the web-interfaces to follow the results.");
    box.open();
  }
 catch (  Exception e) {
    new ErrorDialog(shell,"Split transformation","There was an error during transformation split",e);
  }
}
