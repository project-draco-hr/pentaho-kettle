{
  Collection collection=tabMap.values();
  List list=new ArrayList();
  list.addAll(collection);
  for (Iterator iter=list.iterator(); iter.hasNext(); ) {
    TabMapEntry entry=(TabMapEntry)iter.next();
    if (entry.getTabItem().isDisposed()) {
      tabMap.remove(entry.getObjectName());
      continue;
    }
    String before=entry.getTabItem().getText();
    if (entry.getObject() instanceof SpoonGraph) {
      entry.getTabItem().setText(makeGraphTabName((TransMeta)entry.getObject().getManagedObject()));
    }
    if (entry.getObject() instanceof SpoonLog)     entry.getTabItem().setText(makeLogTabName((TransMeta)entry.getObject().getManagedObject()));
    if (entry.getObject() instanceof SpoonHistory)     entry.getTabItem().setText(makeHistoryTabName((TransMeta)entry.getObject().getManagedObject()));
    String after=entry.getTabItem().getText();
    if (!before.equals(after)) {
      entry.setObjectName(after);
      tabMap.remove(before);
      tabMap.put(after,entry);
      if (entry.getObject() instanceof SpoonGraph) {
        transformationMap.remove(before);
        transformationMap.put(after,entry.getObject().getManagedObject());
      }
      System.out.println("Renamed tab [" + before + "] to ["+ after+ "]");
    }
  }
}
