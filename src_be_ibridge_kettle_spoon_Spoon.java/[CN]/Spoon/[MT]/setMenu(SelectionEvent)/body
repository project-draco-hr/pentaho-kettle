{
  TreeItem ti=(TreeItem)e.item;
  String strti=ti.getText();
  Tree root=ti.getParent();
  log.logDebug(toString(),"Clicked on  " + ti.getText());
  TreeItem sel[]=root.getSelection();
  Menu mCSH=new Menu(shell,SWT.POP_UP);
  TreeItem parent=ti.getParentItem();
  if (parent == null) {
    if (!strti.equalsIgnoreCase(STRING_BASE) && !strti.equalsIgnoreCase(STRING_PLUGIN)) {
      MenuItem miNew=new MenuItem(mCSH,SWT.PUSH);
      miNew.setText("New");
      miNew.addListener(SWT.Selection,lsNew);
    }
    if (strti.equalsIgnoreCase(STRING_STEPS)) {
      MenuItem miNew=new MenuItem(mCSH,SWT.PUSH);
      miNew.setText("Sort steps");
      miNew.addSelectionListener(new SelectionAdapter(){
        public void widgetSelected(        SelectionEvent arg0){
          transMeta.sortSteps();
          refreshTree(true);
        }
      }
);
    }
    if (strti.equalsIgnoreCase(STRING_HOPS)) {
      MenuItem miNew=new MenuItem(mCSH,SWT.PUSH);
      miNew.setText("Sort hops");
      miNew.addSelectionListener(new SelectionAdapter(){
        public void widgetSelected(        SelectionEvent arg0){
          transMeta.sortHops();
          refreshTree(true);
        }
      }
);
    }
    if (strti.equalsIgnoreCase(STRING_CONNECTIONS)) {
      MenuItem miNew=new MenuItem(mCSH,SWT.PUSH);
      miNew.setText("New Connection Wizard");
      miNew.addSelectionListener(new SelectionAdapter(){
        public void widgetSelected(        SelectionEvent arg0){
          createDatabaseWizard();
        }
      }
);
      MenuItem miCache=new MenuItem(mCSH,SWT.PUSH);
      miCache.setText("Clear complete DB Cache");
      miCache.addListener(SWT.Selection,lsCache);
    }
  }
 else {
    String strparent=parent.getText();
    if (strparent.equalsIgnoreCase(STRING_CONNECTIONS)) {
      MenuItem miNew=new MenuItem(mCSH,SWT.PUSH);
      miNew.setText("New");
      MenuItem miEdit=new MenuItem(mCSH,SWT.PUSH);
      miEdit.setText("Edit");
      MenuItem miDupe=new MenuItem(mCSH,SWT.PUSH);
      miDupe.setText("Duplicate");
      MenuItem miCopy=new MenuItem(mCSH,SWT.PUSH);
      miCopy.setText("Copy to clipboard");
      MenuItem miDel=new MenuItem(mCSH,SWT.PUSH);
      miDel.setText("Delete");
      new MenuItem(mCSH,SWT.SEPARATOR);
      MenuItem miSQL=new MenuItem(mCSH,SWT.PUSH);
      miSQL.setText("SQL Editor");
      MenuItem miCache=new MenuItem(mCSH,SWT.PUSH);
      miCache.setText("Clear DB Cache of " + ti.getText());
      new MenuItem(mCSH,SWT.SEPARATOR);
      MenuItem miExpl=new MenuItem(mCSH,SWT.PUSH);
      miExpl.setText("Explore");
      DatabaseMeta dbMeta=transMeta.findDatabase(strti);
      if (dbMeta == null || dbMeta.getDatabaseType() == DatabaseMeta.TYPE_DATABASE_SAPR3)       miExpl.setEnabled(false);
      miNew.addListener(SWT.Selection,lsNew);
      miEdit.addListener(SWT.Selection,lsEdit);
      miDupe.addListener(SWT.Selection,lsDupe);
      miCopy.addListener(SWT.Selection,lsCopy);
      miDel.addListener(SWT.Selection,lsDel);
      miSQL.addListener(SWT.Selection,lsSQL);
      miCache.addListener(SWT.Selection,lsCache);
      miExpl.addListener(SWT.Selection,lsExpl);
    }
    if (strparent.equalsIgnoreCase(STRING_STEPS)) {
      if (sel.length == 2) {
        MenuItem miNewHop=new MenuItem(mCSH,SWT.PUSH);
        miNewHop.setText("New Hop");
        miNewHop.addListener(SWT.Selection,lsNew);
      }
      MenuItem miEdit=new MenuItem(mCSH,SWT.PUSH);
      miEdit.setText("Edit");
      MenuItem miDupe=new MenuItem(mCSH,SWT.PUSH);
      miDupe.setText("Duplicate");
      MenuItem miDel=new MenuItem(mCSH,SWT.PUSH);
      miDel.setText("Delete");
      miEdit.addListener(SWT.Selection,lsEdit);
      miDupe.addListener(SWT.Selection,lsDupe);
      miDel.addListener(SWT.Selection,lsDel);
    }
    if (strparent.equalsIgnoreCase(STRING_HOPS)) {
      MenuItem miEdit=new MenuItem(mCSH,SWT.PUSH);
      miEdit.setText("Edit");
      MenuItem miDel=new MenuItem(mCSH,SWT.PUSH);
      miDel.setText("Delete");
      miEdit.addListener(SWT.Selection,lsEdit);
      miDel.addListener(SWT.Selection,lsDel);
    }
    TreeItem grandparent=parent.getParentItem();
    if (grandparent != null) {
      String strgrandparent=grandparent.getText();
      if (strgrandparent.equalsIgnoreCase(STRING_BASE) || strgrandparent.equalsIgnoreCase(STRING_PLUGIN)) {
        MenuItem miNew=new MenuItem(mCSH,SWT.PUSH);
        miNew.setText("New");
        miNew.addListener(SWT.Selection,lsNew);
      }
    }
  }
  selectionTree.setMenu(mCSH);
}
