{
  final Tree fTree=tree;
  Transfer[] ttypes=new Transfer[]{XMLTransfer.getInstance()};
  DragSource ddSource=new DragSource(fTree,DND.DROP_MOVE);
  ddSource.setTransfer(ttypes);
  ddSource.addDragListener(new DragSourceListener(){
    public void dragStart(    DragSourceEvent event){
    }
    public void dragSetData(    DragSourceEvent event){
      TreeSelection[] treeObjects=getTreeObjects();
      if (treeObjects.length == 0) {
        event.doit=false;
        return;
      }
      int type=0;
      String data=null;
      TreeSelection treeObject=treeObjects[0];
      Object object=treeObject.getSelection();
      if (object instanceof StepMeta) {
        StepMeta stepMeta=(StepMeta)object;
        type=DragAndDropContainer.TYPE_STEP;
        data=stepMeta.getName();
      }
 else       if (object instanceof StepPlugin) {
        StepPlugin stepPlugin=(StepPlugin)object;
        type=DragAndDropContainer.TYPE_BASE_STEP_TYPE;
        data=stepPlugin.getDescription();
      }
 else       if (object instanceof DatabaseMeta) {
        DatabaseMeta databaseMeta=(DatabaseMeta)object;
        type=DragAndDropContainer.TYPE_DATABASE_CONNECTION;
        data=databaseMeta.getName();
      }
 else       if (object instanceof TransHopMeta) {
        TransHopMeta hop=(TransHopMeta)object;
        type=DragAndDropContainer.TYPE_TRANS_HOP;
        data=hop.toString();
      }
 else {
        event.doit=false;
        return;
      }
      event.data=new DragAndDropContainer(type,data);
    }
    public void dragFinished(    DragSourceEvent event){
    }
  }
);
}
