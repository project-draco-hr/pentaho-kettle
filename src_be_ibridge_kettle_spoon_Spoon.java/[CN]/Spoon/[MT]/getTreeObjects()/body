{
  List objects=new ArrayList();
  TreeItem[] selection=selectionTree.getSelection();
  for (int s=0; s < selection.length; s++) {
    TreeItem treeItem=selection[s];
    String[] path=Const.getTreeStrings(treeItem);
    Object object=null;
switch (path.length) {
case 0:
      break;
case 1:
    break;
case 2:
  if (path[0].equals(STRING_CONNECTIONS))   object=transMeta.findDatabase(path[1]);
if (path[0].equals(STRING_STEPS)) object=transMeta.findStep(path[1]);
if (path[0].equals(STRING_HOPS)) object=transMeta.findTransHop(path[1]);
if (path[0].equals(STRING_PARTITIONS)) object=transMeta.findPartitionSchema(path[1]);
if (path[0].equals(STRING_CLUSTERS)) object=transMeta.findClusterSchema(path[1]);
break;
default :
break;
}
if (object != null) {
objects.add(object);
}
}
return (Object[])objects.toArray(new Object[objects.size()]);
}
