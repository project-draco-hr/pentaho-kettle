{
  final Image stepimg;
  if (image == null) {
    stepimg=new Image(shell.getDisplay(),Const.ICON_SIZE,Const.ICON_SIZE);
    composite.addDisposeListener(new DisposeListener(){
      public void widgetDisposed(      DisposeEvent event){
        stepimg.dispose();
      }
    }
);
  }
 else {
    stepimg=image;
  }
  Composite lineComposite=new Composite(composite,SWT.NONE);
  props.setLook(lineComposite);
  lineComposite.setLayout(new FormLayout());
  lineComposite.addKeyListener(defKeys);
  lineComposite.addKeyListener(modKeys);
  Canvas canvas=new Canvas(lineComposite,SWT.NO_BACKGROUND);
  canvas.setToolTipText(pluginDescription);
  props.setLook(canvas);
  canvas.addPaintListener(new PaintListener(){
    public void paintControl(    PaintEvent e){
      e.gc.drawImage(stepimg,0,0);
    }
  }
);
  FormData fdCanvas=new FormData();
  fdCanvas.left=new FormAttachment(0,0);
  fdCanvas.right=new FormAttachment(0,stepimg.getBounds().width);
  fdCanvas.top=new FormAttachment(0,0);
  fdCanvas.bottom=new FormAttachment(0,stepimg.getBounds().height);
  canvas.setLayoutData(fdCanvas);
  Label name=new Label(lineComposite,SWT.LEFT);
  props.setLook(name);
  name.setText(pluginName);
  name.setToolTipText(pluginDescription);
  if (isPlugin)   name.setFont(GUIResource.getInstance().getFontBold());
  FormData fdName=new FormData();
  fdName.left=new FormAttachment(canvas,Const.MARGIN);
  fdName.right=new FormAttachment(100,0);
  fdName.top=new FormAttachment(canvas,0,SWT.CENTER);
  name.setLayoutData(fdName);
  addDragSourceToLine(canvas,plugin);
  addDragSourceToLine(name,plugin);
  lineComposite.setLayoutData(new GridData());
}
