{
  StepMeta inf=null;
  if (rename && transMeta.findStep(name) != null) {
    int i=2;
    String newname=name + " " + i;
    while (transMeta.findStep(newname) != null) {
      i++;
      newname=name + " " + i;
    }
    name=newname;
  }
  StepLoader steploader=StepLoader.getInstance();
  StepPlugin stepPlugin=null;
  try {
    stepPlugin=steploader.findStepPluginWithDescription(description);
    if (stepPlugin != null) {
      StepMetaInterface info=BaseStep.getStepInfo(stepPlugin,steploader);
      info.setDefault();
      if (openit) {
        StepDialogInterface dialog=info.getDialog(shell,info,transMeta,name);
        name=dialog.open();
      }
      inf=new StepMeta(log,stepPlugin.getID(),name,info);
      if (name != null) {
        String newname=name;
        StepMeta stepMeta=transMeta.findStep(newname);
        int nr=2;
        while (stepMeta != null) {
          newname=name + " " + nr;
          stepMeta=transMeta.findStep(newname);
          nr++;
        }
        if (nr > 2) {
          inf.setName(newname);
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_INFORMATION);
          mb.setMessage(Messages.getString("Spoon.Dialog.ChangeStepname.Message",newname));
          mb.setText(Messages.getString("Spoon.Dialog.ChangeStepname.Title"));
          mb.open();
        }
        inf.setLocation(20,20);
        transMeta.addStep(inf);
        if (openit) {
          addUndoNew(new StepMeta[]{inf},new int[]{transMeta.indexOfStep(inf)});
        }
        props.addPluginHistory(stepPlugin.getID());
        refreshTree();
      }
 else {
        return null;
      }
      setShellText();
    }
  }
 catch (  KettleException e) {
    String filename=stepPlugin.getErrorHelpFile();
    if (stepPlugin != null && filename != null) {
      try {
        StringBuffer content=new StringBuffer();
        System.out.println("Filename = " + filename);
        FileInputStream fis=new FileInputStream(new File(filename));
        int ch=fis.read();
        while (ch >= 0) {
          content.append((char)ch);
          ch=fis.read();
        }
        System.out.println("Content = " + content);
        ShowBrowserDialog sbd=new ShowBrowserDialog(shell,Messages.getString("Spoon.Dialog.ErrorHelpText.Title"),content.toString());
        sbd.open();
      }
 catch (      Exception ex) {
        new ErrorDialog(shell,props,Messages.getString("Spoon.Dialog.ErrorShowingHelpText.Title"),Messages.getString("Spoon.Dialog.ErrorShowingHelpText.Message"),ex);
      }
    }
 else {
      new ErrorDialog(shell,props,Messages.getString("Spoon.Dialog.UnableCreateNewStep.Title"),Messages.getString("Spoon.Dialog.UnableCreateNewStep.Message"),e);
    }
    return null;
  }
catch (  Throwable e) {
    new ErrorDialog(shell,props,Messages.getString("Spoon.Dialog.ErrorCreatingStep.Title"),Messages.getString("Spoon.Dialog.UnableCreateNewStep.Message"),new Exception(e));
    return null;
  }
  return inf;
}
