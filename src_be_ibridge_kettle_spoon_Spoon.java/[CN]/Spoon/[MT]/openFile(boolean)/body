{
  if (rep == null || importfile) {
    FileDialog dialog=new FileDialog(shell,SWT.OPEN);
    dialog.setFilterExtensions(Const.STRING_TRANS_AND_JOB_FILTER_EXT);
    dialog.setFilterNames(Const.STRING_TRANS_AND_JOB_FILTER_NAMES);
    String fname=dialog.open();
    if (fname != null) {
      openFile(fname,importfile);
    }
  }
 else {
    SelectObjectDialog sod=new SelectObjectDialog(shell,rep);
    if (sod.open() != null) {
      String type=sod.getObjectType();
      String name=sod.getObjectName();
      RepositoryDirectory repdir=sod.getDirectory();
      if (RepositoryObject.STRING_OBJECT_TYPE_TRANSFORMATION.equals(type)) {
        TransLoadProgressDialog tlpd=new TransLoadProgressDialog(shell,rep,name,repdir);
        TransMeta transMeta=tlpd.open();
        if (transMeta != null) {
          log.logDetailed(toString(),Messages.getString("Spoon.Log.LoadToTransformation",name,repdir.getDirectoryName()));
          props.addLastFile(LastUsedFile.FILE_TYPE_TRANSFORMATION,name,repdir.getPath(),true,rep.getName());
          addMenuLast();
          transMeta.clearChanged();
          transMeta.setFilename(name);
          addSpoonGraph(transMeta);
        }
        refreshGraph();
        refreshTree();
        refreshHistory();
      }
 else       if (RepositoryObject.STRING_OBJECT_TYPE_JOB.equals(type)) {
        JobLoadProgressDialog jlpd=new JobLoadProgressDialog(shell,rep,name,repdir);
        JobMeta jobMeta=jlpd.open();
        if (jobMeta != null) {
          props.addLastFile(LastUsedFile.FILE_TYPE_JOB,name,repdir.getPath(),true,rep.getName());
          saveSettings();
          addMenuLast();
          addChefGraph(jobMeta);
        }
        refreshGraph();
        refreshTree();
      }
    }
  }
}
