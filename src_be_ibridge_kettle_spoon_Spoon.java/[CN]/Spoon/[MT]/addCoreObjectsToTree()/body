{
  boolean showTrans=getActiveTransformation() != null;
  boolean showJob=getActiveJob() != null;
  int nrTabs=tabMap.size();
  if (showTrans || nrTabs == 0) {
    tiTransBase=new TreeItem(coreObjectsTree,SWT.NONE);
    tiTransBase.setText(STRING_TRANS_BASE);
    tiTransBase.setImage(GUIResource.getInstance().getImageBol());
    String locale=LanguageChoice.getInstance().getDefaultLocale().toString().toLowerCase();
    StepLoader steploader=StepLoader.getInstance();
    StepPlugin basesteps[]=steploader.getStepsWithType(StepPlugin.TYPE_ALL);
    String basecat[]=steploader.getCategories(StepPlugin.TYPE_ALL,locale);
    for (int i=0; i < basecat.length; i++) {
      TreeItem tiBaseCat=new TreeItem(tiTransBase,SWT.NONE);
      tiBaseCat.setText(basecat[i]);
      tiBaseCat.setImage(GUIResource.getInstance().getImageBol());
      for (int j=0; j < basesteps.length; j++) {
        if (basesteps[j].getCategory(locale).equalsIgnoreCase(basecat[i])) {
          TreeItem treeItem=new TreeItem(tiBaseCat,0);
          treeItem.setText(basesteps[j].getDescription(locale));
          if (basesteps[j].isPlugin())           treeItem.setFont(GUIResource.getInstance().getFontBold());
          Image stepimg=(Image)GUIResource.getInstance().getImagesStepsSmall().get(basesteps[j].getID()[0]);
          if (stepimg != null) {
            treeItem.setImage(stepimg);
          }
        }
      }
    }
    setCoreObjectsState(STATE_CORE_OBJECTS_SPOON);
  }
  if (showJob || nrTabs == 0) {
    tiJobBase=new TreeItem(coreObjectsTree,SWT.NONE);
    tiJobBase.setText(STRING_JOB_BASE);
    tiJobBase.setImage(GUIResource.getInstance().getImageBol());
    String specialText[]=new String[]{JobMeta.STRING_SPECIAL_START,JobMeta.STRING_SPECIAL_DUMMY};
    Image specialImage[]=new Image[]{GUIResource.getInstance().getImageStart(),GUIResource.getInstance().getImageDummy()};
    for (int i=0; i < specialText.length; i++) {
      TreeItem treeItem=new TreeItem(tiJobBase,SWT.NONE);
      treeItem.setText(specialText[i]);
      treeItem.setImage(specialImage[i]);
    }
    JobEntryLoader jobEntryLoader=JobEntryLoader.getInstance();
    JobPlugin baseEntries[]=jobEntryLoader.getJobEntriesWithType(JobPlugin.TYPE_ALL);
    for (int i=0; i < baseEntries.length; i++) {
      if (!baseEntries[i].getID().equals("SPECIAL")) {
        TreeItem tiBaseItem=new TreeItem(tiJobBase,SWT.NONE);
        tiBaseItem.setText(baseEntries[i].getDescription());
        if (baseEntries[i].isPlugin())         tiBaseItem.setFont(GUIResource.getInstance().getFontBold());
        Image image=(Image)GUIResource.getInstance().getImagesJobentriesSmall().get(baseEntries[i].getID());
        tiBaseItem.setImage(image);
        Image jobEntryImg=(Image)GUIResource.getInstance().getImagesJobentriesSmall().get(baseEntries[i].getID());
        if (jobEntryImg != null) {
          tiBaseItem.setImage(jobEntryImg);
        }
      }
    }
    setCoreObjectsState(STATE_CORE_OBJECTS_CHEF);
  }
  TreeMemory.setExpandedFromMemory(coreObjectsTree,STRING_SPOON_CORE_OBJECTS_TREE);
}
