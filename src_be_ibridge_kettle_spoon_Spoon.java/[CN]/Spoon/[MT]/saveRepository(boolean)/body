{
  log.logDetailed(toString(),Messages.getString("Spoon.Log.SaveToRepository"));
  if (rep != null) {
    boolean answer=true;
    boolean ask=ask_name;
    while (answer && (ask || transMeta.getName() == null || transMeta.getName().length() == 0)) {
      if (!ask) {
        MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        mb.setMessage(Messages.getString("Spoon.Dialog.PromptTransformationName.Message"));
        mb.setText(Messages.getString("Spoon.Dialog.PromptTransformationName.Title"));
        mb.open();
      }
      ask=false;
      answer=setTrans();
    }
    if (answer && transMeta.getName() != null && transMeta.getName().length() > 0) {
      if (!rep.getUserInfo().isReadonly()) {
        int response=SWT.YES;
        if (transMeta.showReplaceWarning(rep)) {
          MessageBox mb=new MessageBox(shell,SWT.YES | SWT.NO | SWT.ICON_QUESTION);
          mb.setMessage(Messages.getString("Spoon.Dialog.PromptOverwriteTransformation.Message",transMeta.getName(),Const.CR));
          mb.setText(Messages.getString("Spoon.Dialog.PromptOverwriteTransformation.Title"));
          response=mb.open();
        }
        if (response == SWT.YES) {
          shell.setCursor(cursor_hourglass);
          transMeta.setModifiedDate(new Value("MODIFIED_DATE",Value.VALUE_TYPE_DATE));
          transMeta.getModifiedDate().sysdate();
          transMeta.setModifiedUser(rep.getUserInfo().getLogin());
          TransSaveProgressDialog tspd=new TransSaveProgressDialog(log,props,shell,rep,transMeta);
          if (tspd.open()) {
            if (!props.getSaveConfirmation()) {
              MessageDialogWithToggle md=new MessageDialogWithToggle(shell,Messages.getString("Spoon.Message.Warning.SaveOK"),null,Messages.getString("Spoon.Message.Warning.TransformationWasStored"),MessageDialog.QUESTION,new String[]{Messages.getString("Spoon.Message.Warning.OK")},0,Messages.getString("Spoon.Message.Warning.NotShowThisMessage"),props.getSaveConfirmation());
              md.open();
              props.setSaveConfirmation(md.getToggleState());
            }
            props.addLastFile(Props.TYPE_PROPERTIES_SPOON,transMeta.getName(),transMeta.getDirectory().getPath(),true,getRepositoryName());
            saveSettings();
            addMenuLast();
            setShellText();
          }
          shell.setCursor(null);
        }
      }
 else {
        MessageBox mb=new MessageBox(shell,SWT.CLOSE | SWT.ICON_ERROR);
        mb.setMessage(Messages.getString("Spoon.Dialog.OnlyreadRepository.Message"));
        mb.setText(Messages.getString("Spoon.Dialog.OnlyreadRepository.Title"));
        mb.open();
      }
    }
  }
 else {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setMessage(Messages.getString("Spoon.Dialog.NoRepositoryConnection.Message"));
    mb.setText(Messages.getString("Spoon.Dialog.NoRepositoryConnection.Title"));
    mb.open();
  }
}
