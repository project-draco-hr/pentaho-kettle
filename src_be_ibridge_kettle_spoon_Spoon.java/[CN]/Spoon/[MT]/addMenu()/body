{
  if (mBar != null) {
    mBar.dispose();
  }
  mBar=new Menu(shell,SWT.BAR);
  shell.setMenuBar(mBar);
  MenuItem mFile=new MenuItem(mBar,SWT.CASCADE);
  mFile.setText(Messages.getString("Spoon.Menu.File"));
  msFile=new Menu(shell,SWT.DROP_DOWN);
  mFile.setMenu(msFile);
  MenuItem miFileNew=new MenuItem(msFile,SWT.CASCADE);
  miFileNew.setText(Messages.getString("Spoon.Menu.File.New"));
  miFileNew.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      newFile();
    }
  }
);
  MenuItem miFileOpen=new MenuItem(msFile,SWT.CASCADE);
  miFileOpen.setText(Messages.getString("Spoon.Menu.File.Open"));
  miFileOpen.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      openFile(false);
    }
  }
);
  MenuItem miFileImport=new MenuItem(msFile,SWT.CASCADE);
  miFileImport.setText(Messages.getString("Spoon.Menu.File.Import"));
  miFileImport.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      openFile(true);
    }
  }
);
  MenuItem miFileExport=new MenuItem(msFile,SWT.CASCADE);
  miFileExport.setText(Messages.getString("Spoon.Menu.File.Export"));
  miFileExport.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      saveXMLFile(getActiveTransformation());
    }
  }
);
  miFileSave=new MenuItem(msFile,SWT.CASCADE);
  miFileSave.setText(Messages.getString("Spoon.Menu.File.Save"));
  miFileSave.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      saveFile(getActiveTransformation());
    }
  }
);
  miFileSaveAs=new MenuItem(msFile,SWT.CASCADE);
  miFileSaveAs.setText(Messages.getString("Spoon.Menu.File.SaveAs"));
  miFileSaveAs.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      saveFileAs(getActiveTransformation());
    }
  }
);
  miFileClose=new MenuItem(msFile,SWT.CASCADE);
  miFileClose.setText(Messages.getString("Spoon.Menu.File.Close"));
  miFileClose.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      closeTransformation(getActiveTransformation());
    }
  }
);
  new MenuItem(msFile,SWT.SEPARATOR);
  miFilePrint=new MenuItem(msFile,SWT.CASCADE);
  miFilePrint.setText(Messages.getString("Spoon.Menu.File.Print"));
  miFilePrint.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      printFile(getActiveTransformation());
    }
  }
);
  new MenuItem(msFile,SWT.SEPARATOR);
  MenuItem miFileQuit=new MenuItem(msFile,SWT.CASCADE);
  miFileQuit.setText(Messages.getString("Spoon.Menu.File.Quit"));
  miFileQuit.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      quitFile();
    }
  }
);
  miFileSep3=new MenuItem(msFile,SWT.SEPARATOR);
  addMenuLast();
  MenuItem mEdit=new MenuItem(mBar,SWT.CASCADE);
  mEdit.setText(Messages.getString("Spoon.Menu.Edit"));
  Menu msEdit=new Menu(shell,SWT.DROP_DOWN);
  mEdit.setMenu(msEdit);
  miEditUndo=new MenuItem(msEdit,SWT.CASCADE);
  miEditUndo.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      undoAction(getActiveTransformation());
    }
  }
);
  miEditRedo=new MenuItem(msEdit,SWT.CASCADE);
  miEditRedo.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      redoAction(getActiveTransformation());
    }
  }
);
  setUndoMenu(getActiveTransformation());
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditSearch=new MenuItem(msEdit,SWT.CASCADE);
  miEditSearch.setText(Messages.getString("Spoon.Menu.Edit.Search"));
  miEditSearch.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      searchMetaData();
    }
  }
);
  MenuItem miEditVars=new MenuItem(msEdit,SWT.CASCADE);
  miEditVars.setText(Messages.getString("Spoon.Menu.Edit.Variables"));
  miEditVars.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      getVariables();
    }
  }
);
  MenuItem miEditSVars=new MenuItem(msEdit,SWT.CASCADE);
  miEditSVars.setText(Messages.getString("Spoon.Menu.Edit.ShowVariables"));
  miEditSVars.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      showVariables();
    }
  }
);
  new MenuItem(msEdit,SWT.SEPARATOR);
  miEditUnselectAll=new MenuItem(msEdit,SWT.CASCADE);
  miEditUnselectAll.setText(Messages.getString("Spoon.Menu.Edit.ClearSelection"));
  miEditUnselectAll.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      editUnselectAll(getActiveTransformation());
    }
  }
);
  miEditSelectAll=new MenuItem(msEdit,SWT.CASCADE);
  miEditSelectAll.setText(Messages.getString("Spoon.Menu.Edit.SelectAllSteps"));
  miEditSelectAll.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      editSelectAll(getActiveTransformation());
    }
  }
);
  new MenuItem(msEdit,SWT.SEPARATOR);
  miEditCopy=new MenuItem(msEdit,SWT.CASCADE);
  miEditCopy.setText(Messages.getString("Spoon.Menu.Edit.CopyToClipboard"));
  miEditCopy.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      TransMeta transMeta=getActiveTransformation();
      copySelected(transMeta,transMeta.getSelectedSteps(),transMeta.getSelectedNotes());
    }
  }
);
  miEditPaste=new MenuItem(msEdit,SWT.CASCADE);
  miEditPaste.setText(Messages.getString("Spoon.Menu.Edit.PasteFromClipboard"));
  miEditPaste.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      pasteSteps();
    }
  }
);
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditRefresh=new MenuItem(msEdit,SWT.CASCADE);
  miEditRefresh.setText(Messages.getString("Spoon.Menu.Edit.Refresh"));
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditOptions=new MenuItem(msEdit,SWT.CASCADE);
  miEditOptions.setText(Messages.getString("Spoon.Menu.Edit.Options"));
  miEditOptions.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      editOptions();
    }
  }
);
  MenuItem mRep=new MenuItem(mBar,SWT.CASCADE);
  mRep.setText(Messages.getString("Spoon.Menu.Repository"));
  Menu msRep=new Menu(shell,SWT.DROP_DOWN);
  mRep.setMenu(msRep);
  MenuItem miRepConnect=new MenuItem(msRep,SWT.CASCADE);
  miRepConnect.setText(Messages.getString("Spoon.Menu.Repository.ConnectToRepository"));
  miRepConnect.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      openRepository();
    }
  }
);
  miRepDisconnect=new MenuItem(msRep,SWT.CASCADE);
  miRepDisconnect.setText(Messages.getString("Spoon.Menu.Repository.DisconnectRepository"));
  miRepDisconnect.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      closeRepository();
    }
  }
);
  miRepExplore=new MenuItem(msRep,SWT.CASCADE);
  miRepExplore.setText(Messages.getString("Spoon.Menu.Repository.ExploreRepository"));
  miRepExplore.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      exploreRepository();
    }
  }
);
  new MenuItem(msRep,SWT.SEPARATOR);
  miRepUser=new MenuItem(msRep,SWT.CASCADE);
  miRepUser.setText(Messages.getString("Spoon.Menu.Repository.EditCurrentUser"));
  miRepUser.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      editRepositoryUser();
    }
  }
);
  MenuItem mTrans=new MenuItem(mBar,SWT.CASCADE);
  mTrans.setText(Messages.getString("Spoon.Menu.Transformation"));
  Menu msTrans=new Menu(shell,SWT.DROP_DOWN);
  mTrans.setMenu(msTrans);
  miTransRun=new MenuItem(msTrans,SWT.CASCADE);
  miTransRun.setText(Messages.getString("Spoon.Menu.Transformation.Run"));
  miTransRun.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      executeTransformation(getActiveTransformation(),true,false,false,false,null);
    }
  }
);
  miTransPreview=new MenuItem(msTrans,SWT.CASCADE);
  miTransPreview.setText(Messages.getString("Spoon.Menu.Transformation.Preview"));
  miTransPreview.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      executeTransformation(getActiveTransformation(),true,false,false,true,null);
    }
  }
);
  miTransCheck=new MenuItem(msTrans,SWT.CASCADE);
  miTransCheck.setText(Messages.getString("Spoon.Menu.Transformation.Verify"));
  miTransCheck.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      checkTrans(getActiveTransformation());
    }
  }
);
  miTransImpact=new MenuItem(msTrans,SWT.CASCADE);
  miTransImpact.setText(Messages.getString("Spoon.Menu.Transformation.Impact"));
  miTransImpact.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      analyseImpact(getActiveTransformation());
    }
  }
);
  miTransSQL=new MenuItem(msTrans,SWT.CASCADE);
  miTransSQL.setText(Messages.getString("Spoon.Menu.Transformation.GetSQL"));
  miTransSQL.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      getSQL(getActiveTransformation());
    }
  }
);
  new MenuItem(msTrans,SWT.SEPARATOR);
  miLastImpact=new MenuItem(msTrans,SWT.CASCADE);
  miLastImpact.setText(Messages.getString("Spoon.Menu.Transformation.ShowLastImpactAnalyses"));
  miLastImpact.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      showLastImpactAnalyses(getActiveTransformation());
    }
  }
);
  miLastCheck=new MenuItem(msTrans,SWT.CASCADE);
  miLastCheck.setText(Messages.getString("Spoon.Menu.Transformation.ShowLastVerifyResults"));
  miLastCheck.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      showLastTransCheck();
    }
  }
);
  miLastPreview=new MenuItem(msTrans,SWT.CASCADE);
  miLastPreview.setText(Messages.getString("Spoon.Menu.Transformation.ShowLastPreviewResults"));
  miLastPreview.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      SpoonLog spoonLog=getActiveSpoonLog();
      if (spoonLog != null)       spoonLog.showPreview();
    }
  }
);
  new MenuItem(msTrans,SWT.SEPARATOR);
  miTransCopy=new MenuItem(msTrans,SWT.CASCADE);
  miTransCopy.setText(Messages.getString("Spoon.Menu.Transformation.CopyTransformationToClipboard"));
  miTransCopy.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      copyTransformation(getActiveTransformation());
    }
  }
);
  miTransPaste=new MenuItem(msTrans,SWT.CASCADE);
  miTransPaste.setText(Messages.getString("Spoon.Menu.Transformation.PasteTransformationFromClipboard"));
  miTransPaste.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      copyTransformationImage(getActiveTransformation());
    }
  }
);
  miTransImage=new MenuItem(msTrans,SWT.CASCADE);
  miTransImage.setText(Messages.getString("Spoon.Menu.Transformation.CopyTransformationImageClipboard"));
  miTransImage.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      pasteTransformation();
    }
  }
);
  new MenuItem(msTrans,SWT.SEPARATOR);
  miTransDetails=new MenuItem(msTrans,SWT.CASCADE);
  miTransDetails.setText(Messages.getString("Spoon.Menu.Transformation.Settings"));
  miTransDetails.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      editTransformationProperties(getActiveTransformation());
    }
  }
);
  MenuItem mWizard=new MenuItem(mBar,SWT.CASCADE);
  mWizard.setText(Messages.getString("Spoon.Menu.Wizard"));
  Menu msWizard=new Menu(shell,SWT.DROP_DOWN);
  mWizard.setMenu(msWizard);
  miWizardNewConnection=new MenuItem(msWizard,SWT.CASCADE);
  miWizardNewConnection.setText(Messages.getString("Spoon.Menu.Wizard.CreateDatabaseConnectionWizard"));
  miWizardNewConnection.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      createDatabaseWizard(getActiveTransformation());
    }
  }
);
  miWizardCopyTable=new MenuItem(msWizard,SWT.CASCADE);
  miWizardCopyTable.setText(Messages.getString("Spoon.Menu.Wizard.CopyTableWizard"));
  miWizardCopyTable.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      copyTableWizard(getActiveTransformation());
    }
  }
);
  MenuItem mHelp=new MenuItem(mBar,SWT.CASCADE);
  mHelp.setText(Messages.getString("Spoon.Menu.Help"));
  Menu msHelp=new Menu(shell,SWT.DROP_DOWN);
  mHelp.setMenu(msHelp);
  MenuItem miHelpCredit=new MenuItem(msHelp,SWT.CASCADE);
  miHelpCredit.setText(Messages.getString("Spoon.Menu.Help.Credits"));
  miHelpCredit.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      ShowCreditsDialog scd=new ShowCreditsDialog(shell,props,GUIResource.getInstance().getImageCredits());
      scd.open();
    }
  }
);
  MenuItem miHelpTOTD=new MenuItem(msHelp,SWT.CASCADE);
  miHelpTOTD.setText(Messages.getString("Spoon.Menu.Help.Tip"));
  miHelpTOTD.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      new TipsDialog(shell,props).open();
    }
  }
);
  new MenuItem(msHelp,SWT.SEPARATOR);
  MenuItem miHelpAbout=new MenuItem(msHelp,SWT.CASCADE);
  miHelpAbout.setText(Messages.getString("Spoon.Menu.About"));
  miHelpAbout.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      helpAbout();
    }
  }
);
}
