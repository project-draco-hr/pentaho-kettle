{
  Menu mBar=new Menu(shell,SWT.BAR);
  shell.setMenuBar(mBar);
  MenuItem mFile=new MenuItem(mBar,SWT.CASCADE);
  mFile.setText("&File");
  msFile=new Menu(shell,SWT.DROP_DOWN);
  mFile.setMenu(msFile);
  MenuItem miFileNew=new MenuItem(msFile,SWT.CASCADE);
  miFileNew.setText("&New \tCTRL-N");
  MenuItem miFileOpen=new MenuItem(msFile,SWT.CASCADE);
  miFileOpen.setText("&Open \tCTRL-O");
  MenuItem miFileImport=new MenuItem(msFile,SWT.CASCADE);
  miFileImport.setText("&Import from an XML file\tCTRL-I");
  MenuItem miFileExport=new MenuItem(msFile,SWT.CASCADE);
  miFileExport.setText("&Export to an XML file");
  MenuItem miFileSave=new MenuItem(msFile,SWT.CASCADE);
  miFileSave.setText("&Save \tCTRL-S");
  MenuItem miFileSaveAs=new MenuItem(msFile,SWT.CASCADE);
  miFileSaveAs.setText("Save &as...");
  new MenuItem(msFile,SWT.SEPARATOR);
  MenuItem miFilePrint=new MenuItem(msFile,SWT.CASCADE);
  miFilePrint.setText("&Print \tCTRL-P");
  new MenuItem(msFile,SWT.SEPARATOR);
  MenuItem miFileQuit=new MenuItem(msFile,SWT.CASCADE);
  miFileQuit.setText("&Quit");
  miFileSep3=new MenuItem(msFile,SWT.SEPARATOR);
  addMenuLast();
  Listener lsFileOpen=new Listener(){
    public void handleEvent(    Event e){
      openFile(false);
    }
  }
;
  Listener lsFileImport=new Listener(){
    public void handleEvent(    Event e){
      openFile(true);
    }
  }
;
  Listener lsFileExport=new Listener(){
    public void handleEvent(    Event e){
      saveXMLFile();
    }
  }
;
  Listener lsFileNew=new Listener(){
    public void handleEvent(    Event e){
      newFile();
    }
  }
;
  Listener lsFileSave=new Listener(){
    public void handleEvent(    Event e){
      saveFile();
    }
  }
;
  Listener lsFileSaveAs=new Listener(){
    public void handleEvent(    Event e){
      saveFileAs();
    }
  }
;
  Listener lsFilePrint=new Listener(){
    public void handleEvent(    Event e){
      printFile();
    }
  }
;
  Listener lsFileQuit=new Listener(){
    public void handleEvent(    Event e){
      quitFile();
    }
  }
;
  miFileOpen.addListener(SWT.Selection,lsFileOpen);
  miFileImport.addListener(SWT.Selection,lsFileImport);
  miFileExport.addListener(SWT.Selection,lsFileExport);
  miFileNew.addListener(SWT.Selection,lsFileNew);
  miFileSave.addListener(SWT.Selection,lsFileSave);
  miFileSaveAs.addListener(SWT.Selection,lsFileSaveAs);
  miFilePrint.addListener(SWT.Selection,lsFilePrint);
  miFileQuit.addListener(SWT.Selection,lsFileQuit);
  MenuItem mEdit=new MenuItem(mBar,SWT.CASCADE);
  mEdit.setText("&Edit");
  Menu msEdit=new Menu(shell,SWT.DROP_DOWN);
  mEdit.setMenu(msEdit);
  miEditUndo=new MenuItem(msEdit,SWT.CASCADE);
  miEditRedo=new MenuItem(msEdit,SWT.CASCADE);
  setUndoMenu();
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditUnselectAll=new MenuItem(msEdit,SWT.CASCADE);
  miEditUnselectAll.setText("&Clear selection \tESC");
  MenuItem miEditSelectAll=new MenuItem(msEdit,SWT.CASCADE);
  miEditSelectAll.setText("&Select all steps \tCTRL-A");
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditCopy=new MenuItem(msEdit,SWT.CASCADE);
  miEditCopy.setText("Copy selected steps to clipboard\tCTRL-C");
  MenuItem miEditPaste=new MenuItem(msEdit,SWT.CASCADE);
  miEditPaste.setText("Paste steps from clipboard\tCTRL-V");
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditRefresh=new MenuItem(msEdit,SWT.CASCADE);
  miEditRefresh.setText("&Refresh \tF5");
  new MenuItem(msEdit,SWT.SEPARATOR);
  MenuItem miEditOptions=new MenuItem(msEdit,SWT.CASCADE);
  miEditOptions.setText("&Options...");
  Listener lsEditUndo=new Listener(){
    public void handleEvent(    Event e){
      undoAction();
    }
  }
;
  Listener lsEditRedo=new Listener(){
    public void handleEvent(    Event e){
      redoAction();
    }
  }
;
  Listener lsEditUnselectAll=new Listener(){
    public void handleEvent(    Event e){
      editUnselectAll();
    }
  }
;
  Listener lsEditSelectAll=new Listener(){
    public void handleEvent(    Event e){
      editSelectAll();
    }
  }
;
  Listener lsEditOptions=new Listener(){
    public void handleEvent(    Event e){
      editOptions();
    }
  }
;
  miEditUndo.addListener(SWT.Selection,lsEditUndo);
  miEditRedo.addListener(SWT.Selection,lsEditRedo);
  miEditUnselectAll.addListener(SWT.Selection,lsEditUnselectAll);
  miEditSelectAll.addListener(SWT.Selection,lsEditSelectAll);
  miEditOptions.addListener(SWT.Selection,lsEditOptions);
  MenuItem mRep=new MenuItem(mBar,SWT.CASCADE);
  mRep.setText("&Repository");
  Menu msRep=new Menu(shell,SWT.DROP_DOWN);
  mRep.setMenu(msRep);
  MenuItem miRepConnect=new MenuItem(msRep,SWT.CASCADE);
  miRepConnect.setText("&Connect to repository \tCTRL-R");
  MenuItem miRepDisconnect=new MenuItem(msRep,SWT.CASCADE);
  miRepDisconnect.setText("&Disconnect repository \tCTRL-D");
  MenuItem miRepExplore=new MenuItem(msRep,SWT.CASCADE);
  miRepExplore.setText("&Explore repository \tCTRL-E");
  new MenuItem(msRep,SWT.SEPARATOR);
  MenuItem miRepUser=new MenuItem(msRep,SWT.CASCADE);
  miRepUser.setText("&Edit current user\tCTRL-U");
  Listener lsRepConnect=new Listener(){
    public void handleEvent(    Event e){
      openRepository();
    }
  }
;
  Listener lsRepDisconnect=new Listener(){
    public void handleEvent(    Event e){
      closeRepository();
    }
  }
;
  Listener lsRepExplore=new Listener(){
    public void handleEvent(    Event e){
      exploreRepository();
    }
  }
;
  Listener lsRepUser=new Listener(){
    public void handleEvent(    Event e){
      editRepositoryUser();
    }
  }
;
  miRepConnect.addListener(SWT.Selection,lsRepConnect);
  miRepDisconnect.addListener(SWT.Selection,lsRepDisconnect);
  miRepExplore.addListener(SWT.Selection,lsRepExplore);
  miRepUser.addListener(SWT.Selection,lsRepUser);
  MenuItem mTrans=new MenuItem(mBar,SWT.CASCADE);
  mTrans.setText("&Transformation");
  Menu msTrans=new Menu(shell,SWT.DROP_DOWN);
  mTrans.setMenu(msTrans);
  MenuItem miTransRun=new MenuItem(msTrans,SWT.CASCADE);
  miTransRun.setText("&Run \tF9");
  MenuItem miTransPreview=new MenuItem(msTrans,SWT.CASCADE);
  miTransPreview.setText("&Preview \tF10");
  MenuItem miTransCheck=new MenuItem(msTrans,SWT.CASCADE);
  miTransCheck.setText("&Verify \tF11");
  MenuItem miTransImpact=new MenuItem(msTrans,SWT.CASCADE);
  miTransImpact.setText("&Impact");
  MenuItem miTransSQL=new MenuItem(msTrans,SWT.CASCADE);
  miTransSQL.setText("&Get SQL");
  new MenuItem(msTrans,SWT.SEPARATOR);
  MenuItem miLastImpact=new MenuItem(msTrans,SWT.CASCADE);
  miLastImpact.setText("Show last impact analyses \tF6");
  MenuItem miLastCheck=new MenuItem(msTrans,SWT.CASCADE);
  miLastCheck.setText("Show last verify results  \tF7");
  MenuItem miLastPreview=new MenuItem(msTrans,SWT.CASCADE);
  miLastPreview.setText("Show last preview results \tF8");
  new MenuItem(msTrans,SWT.SEPARATOR);
  MenuItem miTransCopy=new MenuItem(msTrans,SWT.CASCADE);
  miTransCopy.setText("&Copy transformation to clipboard");
  MenuItem miTransPaste=new MenuItem(msTrans,SWT.CASCADE);
  miTransPaste.setText("P&aste transformation from clipboard");
  MenuItem miTransImage=new MenuItem(msTrans,SWT.CASCADE);
  miTransImage.setText("Copy the transformation image clipboard \tCTRL-ALT-I");
  new MenuItem(msTrans,SWT.SEPARATOR);
  MenuItem miTransDetails=new MenuItem(msTrans,SWT.CASCADE);
  miTransDetails.setText("&Settings... \tCTRL-T");
  Listener lsTransDetails=new Listener(){
    public void handleEvent(    Event e){
      setTrans();
    }
  }
;
  Listener lsTransRun=new Listener(){
    public void handleEvent(    Event e){
      tabfolder.setSelection(1);
      spoonlog.startstop();
    }
  }
;
  Listener lsTransPreview=new Listener(){
    public void handleEvent(    Event e){
      spoonlog.preview();
    }
  }
;
  Listener lsTransCheck=new Listener(){
    public void handleEvent(    Event e){
      checkTrans();
    }
  }
;
  Listener lsTransImpact=new Listener(){
    public void handleEvent(    Event e){
      analyseImpact();
    }
  }
;
  Listener lsTransSQL=new Listener(){
    public void handleEvent(    Event e){
      getSQL();
    }
  }
;
  Listener lsLastPreview=new Listener(){
    public void handleEvent(    Event e){
      spoonlog.showPreview();
    }
  }
;
  Listener lsLastCheck=new Listener(){
    public void handleEvent(    Event e){
      showLastTransCheck();
    }
  }
;
  Listener lsLastImpact=new Listener(){
    public void handleEvent(    Event e){
      showLastImpactAnalyses();
    }
  }
;
  Listener lsTransCopy=new Listener(){
    public void handleEvent(    Event e){
      copyTransformation();
    }
  }
;
  Listener lsTransImage=new Listener(){
    public void handleEvent(    Event e){
      copyTransformationImage();
    }
  }
;
  Listener lsTransPaste=new Listener(){
    public void handleEvent(    Event e){
      pasteTransformation();
    }
  }
;
  miTransDetails.addListener(SWT.Selection,lsTransDetails);
  miTransRun.addListener(SWT.Selection,lsTransRun);
  miTransPreview.addListener(SWT.Selection,lsTransPreview);
  miTransCheck.addListener(SWT.Selection,lsTransCheck);
  miTransImpact.addListener(SWT.Selection,lsTransImpact);
  miTransSQL.addListener(SWT.Selection,lsTransSQL);
  miLastPreview.addListener(SWT.Selection,lsLastPreview);
  miLastCheck.addListener(SWT.Selection,lsLastCheck);
  miLastImpact.addListener(SWT.Selection,lsLastImpact);
  miTransCopy.addListener(SWT.Selection,lsTransCopy);
  miTransPaste.addListener(SWT.Selection,lsTransPaste);
  miTransImage.addListener(SWT.Selection,lsTransImage);
  MenuItem mWizard=new MenuItem(mBar,SWT.CASCADE);
  mWizard.setText("&Wizard");
  Menu msWizard=new Menu(shell,SWT.DROP_DOWN);
  mWizard.setMenu(msWizard);
  MenuItem miWizardNewConnection=new MenuItem(msWizard,SWT.CASCADE);
  miWizardNewConnection.setText("&Create database connection wizard...\tF3");
  Listener lsWizardNewConnection=new Listener(){
    public void handleEvent(    Event e){
      createDatabaseWizard();
    }
  }
;
  miWizardNewConnection.addListener(SWT.Selection,lsWizardNewConnection);
  MenuItem miWizardCopyTable=new MenuItem(msWizard,SWT.CASCADE);
  miWizardCopyTable.setText("&Copy table wizard...\tF4");
  Listener lsWizardCopyTable=new Listener(){
    public void handleEvent(    Event e){
      copyTableWizard();
    }
  }
;
  miWizardCopyTable.addListener(SWT.Selection,lsWizardCopyTable);
  MenuItem mHelp=new MenuItem(mBar,SWT.CASCADE);
  mHelp.setText("&Help");
  Menu msHelp=new Menu(shell,SWT.DROP_DOWN);
  mHelp.setMenu(msHelp);
  MenuItem miHelpCredit=new MenuItem(msHelp,SWT.CASCADE);
  miHelpCredit.setText("&Credits");
  Listener lsHelpCredit=new Listener(){
    public void handleEvent(    Event e){
      ShowCreditsDialog scd=new ShowCreditsDialog(shell,props,GUIResource.getInstance().getImageCredits());
      scd.open();
    }
  }
;
  miHelpCredit.addListener(SWT.Selection,lsHelpCredit);
  MenuItem miHelpTOTD=new MenuItem(msHelp,SWT.CASCADE);
  miHelpTOTD.setText("&Tip of the day");
  Listener lsHelpTOTD=new Listener(){
    public void handleEvent(    Event e){
      TipsDialog td=new TipsDialog(shell,props);
      td.open();
    }
  }
;
  miHelpTOTD.addListener(SWT.Selection,lsHelpTOTD);
  new MenuItem(msHelp,SWT.SEPARATOR);
  MenuItem miHelpAbout=new MenuItem(msHelp,SWT.CASCADE);
  miHelpAbout.setText("&About");
  Listener lsHelpAbout=new Listener(){
    public void handleEvent(    Event e){
      helpAbout();
    }
  }
;
  miHelpAbout.addListener(SWT.Selection,lsHelpAbout);
}
