{
  if (tabComp != null) {
    tabComp.dispose();
  }
  tabComp=new Composite(sashform,SWT.BORDER);
  props.setLook(tabComp);
  tabComp.setLayout(new GridLayout());
  tabfolder=new CTabFolder(tabComp,SWT.BORDER);
  tabfolder.setLayoutData(new GridData(SWT.FILL,SWT.FILL,true,true));
  props.setLook(tabfolder,Props.WIDGET_STYLE_TAB);
  tabfolder.setSimple(false);
  tabfolder.setUnselectedImageVisible(true);
  tabfolder.setUnselectedCloseVisible(true);
  tabfolder.addKeyListener(defKeys);
  tabfolder.addKeyListener(modKeys);
  sashform.addKeyListener(defKeys);
  sashform.addKeyListener(modKeys);
  int weights[]=props.getSashWeights();
  sashform.setWeights(weights);
  sashform.setVisible(true);
  tabfolder.addCTabFolder2Listener(new CTabFolder2Adapter(){
    public void close(    CTabFolderEvent event){
      Collection collection=tabMap.values();
      for (Iterator iter=collection.iterator(); iter.hasNext(); ) {
        TabMapEntry entry=(TabMapEntry)iter.next();
        if (event.item.equals(entry.getTabItem())) {
          TabItemInterface itemInterface=entry.getObject();
          boolean close=true;
          if (!itemInterface.canBeClosed()) {
            int reply=itemInterface.showChangedWarning();
            if (reply == SWT.YES) {
              close=itemInterface.applyChanges();
            }
 else {
              if (reply == SWT.CANCEL) {
                close=false;
              }
 else {
                close=true;
              }
            }
          }
          event.doit=close;
          if (event.doit && entry.getObject() instanceof SpoonGraph) {
            TransMeta transMeta=(TransMeta)entry.getObject().getManagedObject();
            closeTransformation(transMeta);
            refreshTree();
          }
        }
      }
    }
  }
);
}
