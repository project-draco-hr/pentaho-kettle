{
  log.logDetailed(toString(),Messages.getString("Spoon.Log.QuitApplication"));
  boolean exit=true;
  saveSettings();
  if (props.showExitWarning()) {
    MessageDialogWithToggle md=new MessageDialogWithToggle(shell,Messages.getString("System.Warning"),null,Messages.getString("Spoon.Message.Warning.PromptExit"),MessageDialog.WARNING,new String[]{Messages.getString("Spoon.Message.Warning.Yes"),Messages.getString("Spoon.Message.Warning.No")},1,Messages.getString("Spoon.Message.Warning.NotShowWarning"),!props.showExitWarning());
    int idx=md.open();
    props.setExitWarningShown(!md.getToggleState());
    props.saveProps();
    if ((idx & 0xFF) == 1)     return false;
  }
  List list=new ArrayList();
  list.addAll(tabMap.values());
  for (Iterator iter=list.iterator(); iter.hasNext() && exit; ) {
    TabMapEntry mapEntry=(TabMapEntry)iter.next();
    if (!mapEntry.getObject().canBeClosed()) {
      if (mapEntry.getObject() instanceof SpoonGraph) {
        TransMeta transMeta=(TransMeta)mapEntry.getObject().getManagedObject();
        if (transMeta.hasChanged()) {
          tabfolder.setSelection(mapEntry.getTabItem());
          MessageBox mb=new MessageBox(shell,SWT.YES | SWT.NO | SWT.CANCEL| SWT.ICON_WARNING);
          mb.setMessage(Messages.getString("Spoon.Dialog.SaveChangedFile.Message"));
          mb.setText(Messages.getString("Spoon.Dialog.SaveChangedFile.Title"));
          int answer=mb.open();
switch (answer) {
case SWT.YES:
            exit=saveFile(transMeta);
          break;
case SWT.NO:
        exit=true;
      break;
case SWT.CANCEL:
    exit=false;
  break;
}
}
}
if (mapEntry.getObject() instanceof SpoonLog) {
SpoonLog spoonLog=(SpoonLog)mapEntry.getObject();
if (spoonLog.isRunning()) {
MessageBox mb=new MessageBox(shell,SWT.YES | SWT.NO | SWT.ICON_QUESTION);
mb.setMessage(Messages.getString("Spoon.Message.Warning.PromptExitWhenRunTransformation"));
mb.setText(Messages.getString("System.Warning"));
int reply=mb.open();
if (reply == SWT.NO) exit=false;
}
}
}
}
if (exit) {
for (Iterator iter=list.iterator(); iter.hasNext() && exit; ) {
TabMapEntry mapEntry=(TabMapEntry)iter.next();
if (!mapEntry.getObject().canBeClosed()) {
if (mapEntry.getObject() instanceof SpoonGraph) {
TransMeta transMeta=(TransMeta)mapEntry.getObject().getManagedObject();
if (transMeta.hasChanged()) {
mapEntry.getTabItem().dispose();
}
}
if (mapEntry.getObject() instanceof SpoonLog) {
SpoonLog spoonLog=(SpoonLog)mapEntry.getObject();
if (spoonLog.isRunning()) {
spoonLog.stop();
mapEntry.getTabItem().dispose();
}
}
}
}
}
if (exit) dispose();
return exit;
}
