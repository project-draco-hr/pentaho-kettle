{
  boolean exit=true;
  boolean showWarning=true;
  log.logDetailed(toString(),Messages.getString("Spoon.Log.QuitApplication"));
  saveSettings();
  if (transMeta.hasChanged()) {
    MessageBox mb=new MessageBox(shell,SWT.YES | SWT.NO | SWT.CANCEL| SWT.ICON_WARNING);
    mb.setMessage(Messages.getString("Spoon.Dialog.SaveChangedFile.Message"));
    mb.setText(Messages.getString("Spoon.Dialog.SaveChangedFile.Title"));
    int answer=mb.open();
switch (answer) {
case SWT.YES:
      exit=saveFile();
    showWarning=false;
  break;
case SWT.NO:
exit=true;
showWarning=false;
break;
case SWT.CANCEL:
exit=false;
showWarning=false;
break;
}
}
if ((exit && spoonlog.isRunning()) || (exit && showWarning && props.showExitWarning())) {
String message=Messages.getString("Spoon.Message.Warning.PromptExit");
if (spoonlog.isRunning()) message=Messages.getString("Spoon.Message.Warning.PromptExitWhenRunTransformation");
MessageDialogWithToggle md=new MessageDialogWithToggle(shell,Messages.getString("System.Warning"),null,message,MessageDialog.WARNING,new String[]{Messages.getString("Spoon.Message.Warning.Yes"),Messages.getString("Spoon.Message.Warning.No")},1,Messages.getString("Spoon.Message.Warning.NotShowWarning"),!props.showExitWarning());
int idx=md.open();
props.setExitWarningShown(!md.getToggleState());
props.saveProps();
if ((idx & 0xFF) == 1) exit=false;
 else exit=true;
}
if (exit) dispose();
return exit;
}
