{
  DatabaseMeta db=transMeta.findDatabase(name);
  int pos=transMeta.indexOfDatabase(db);
  if (db != null) {
    addUndoDelete(new DatabaseMeta[]{(DatabaseMeta)db.clone()},new int[]{pos});
    transMeta.removeDatabase(pos);
    if (rep != null) {
      if (!rep.getUserInfo().isReadonly()) {
        try {
          long id_database=rep.getDatabaseID(db.getName());
          rep.delDatabase(id_database);
        }
 catch (        KettleDatabaseException dbe) {
          new ErrorDialog(shell,props,"ERROR","Error deleting connection [" + db + "] from repository!",dbe);
        }
      }
 else {
        new ErrorDialog(shell,props,"ERROR","Error deleting connection [" + db + "] from repository!",new KettleException("This user is read-only!"));
      }
    }
    refreshTree();
  }
  setShellText();
}
