{
  DatabaseMeta db=transMeta.findDatabase(name);
  int pos=transMeta.indexOfDatabase(db);
  if (db != null) {
    addUndoDelete(new DatabaseMeta[]{(DatabaseMeta)db.clone()},new int[]{pos});
    transMeta.removeDatabase(pos);
    if (rep != null) {
      if (!rep.getUserInfo().isReadonly()) {
        try {
          long id_database=rep.getDatabaseID(db.getName());
          rep.delDatabase(id_database);
        }
 catch (        KettleDatabaseException dbe) {
          new ErrorDialog(shell,props,Messages.getString("Message.ErrorDialog.Title.ERROR"),Messages.getString("Message.ErrorDialog.Info.ErrorDeletingConnection",name),dbe);
        }
      }
 else {
        new ErrorDialog(shell,props,Messages.getString("Message.ErrorDialog.Title.ERROR"),Messages.getString("Message.ErrorDialog.Info.ErrorDeletingConnection",name),new KettleException(Messages.getString("Message.ErrorDialog.Exception.ReadOnlyUser")));
      }
    }
    refreshTree();
  }
  setShellText();
}
