{
  Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
  Runnable runnable=new Runnable(){
    public void run(){
      BIRTOutput.performPentahoReportingBoot(log,input.getClass());
    }
  }
;
  Thread thread=new Thread(runnable);
  thread.start();
  try {
    FileDialog dialog=new FileDialog(shell,SWT.OPEN);
    dialog.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.ExtractParameters.FileDialog"));
    dialog.setFilterExtensions(new String[]{"*.rptdesign;*.RPTDESIGN","*"});
    if (lastFilename != null) {
      dialog.setFileName(lastFilename);
    }
    dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"PentahoReportingOutputDialog.PentahoReportingFiles"),BaseMessages.getString(PKG,"System.FileType.AllFiles")});
    if (dialog.open() == null)     return;
    thread.join();
    String sourceFilename=dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName();
    lastFilename=sourceFilename;
    shell.setCursor(busy);
    IReportRunnable report=BIRTOutput.loadMasterReport(sourceFilename);
    IGetParameterDefinitionTask paramTask=BIRTOutput.engine.createGetParameterDefinitionTask(report);
    Collection definition=paramTask.getParameterDefns(true);
    RowMetaInterface r=new RowMeta();
    Iterator<IParameterDefnBase> i=definition.iterator();
    while (i.hasNext()) {
      IParameterDefnBase param=(IParameterDefnBase)i.next();
      if (param instanceof IParameterGroupDefn) {
        IParameterGroupDefn group=(IParameterGroupDefn)param;
        Iterator<IScalarParameterDefn> i2=group.getContents().iterator();
        while (i2.hasNext()) {
          scalar=(IScalarParameterDefn)i2.next();
        }
      }
 else {
        scalar=(IScalarParameterDefn)param;
      }
      ValueMeta valueMeta=new ValueMeta(scalar.getName(),ValueMetaInterface.TYPE_STRING);
      valueMeta.setComments(getParameterDefinitionEntryTypeDescription(scalar));
      r.addValueMeta(valueMeta);
    }
    shell.setCursor(null);
    BaseStepDialog.getFieldsFromPrevious(r,wFields,1,new int[]{1},new int[]{},-1,-1,new TableItemInsertListener(){
      public boolean tableItemInserted(      TableItem item,      ValueMetaInterface valueMeta){
        item.setText(2,valueMeta.getComments());
        return true;
      }
    }
);
  }
 catch (  Exception e) {
    shell.setCursor(null);
    new ErrorDialog(shell,BaseMessages.getString(PKG,"PentahoReportingOutputDialog.ErrorReadingParameters.Title"),BaseMessages.getString(PKG,"PentahoReportingOutputDialog.ErrorReadingParameters.Message"),e);
  }
 finally {
    shell.setCursor(null);
    busy.dispose();
  }
}
