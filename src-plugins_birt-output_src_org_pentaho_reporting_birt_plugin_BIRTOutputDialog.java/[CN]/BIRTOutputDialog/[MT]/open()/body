{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.Shell.Text"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlInput=new Label(shell,SWT.RIGHT);
  wlInput.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.InputFilename.Label"));
  props.setLook(wlInput);
  FormData fdlInput=new FormData();
  fdlInput.left=new FormAttachment(0,0);
  fdlInput.top=new FormAttachment(wStepname,margin + 5);
  fdlInput.right=new FormAttachment(middle,-margin);
  wlInput.setLayoutData(fdlInput);
  wInput=new Combo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInput);
  wInput.addModifyListener(lsMod);
  FormData fdInput=new FormData();
  fdInput.left=new FormAttachment(middle,0);
  fdInput.top=new FormAttachment(wStepname,margin + 5);
  fdInput.right=new FormAttachment(100,0);
  wInput.setLayoutData(fdInput);
  String[] fieldNames=new String[]{};
  try {
    fieldNames=Const.sortStrings(transMeta.getPrevStepFields(stepMeta).getFieldNames());
  }
 catch (  KettleException e) {
    log.logError("Unexpected error getting fields from previous steps...",e);
  }
  wInput.setItems(fieldNames);
  wlOutput=new Label(shell,SWT.RIGHT);
  wlOutput.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.OutputFilename.Label"));
  props.setLook(wlOutput);
  FormData fdlOutput=new FormData();
  fdlOutput.left=new FormAttachment(0,0);
  fdlOutput.top=new FormAttachment(wInput,margin + 5);
  fdlOutput.right=new FormAttachment(middle,-margin);
  wlOutput.setLayoutData(fdlOutput);
  wOutput=new Combo(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wOutput);
  wOutput.addModifyListener(lsMod);
  FormData fdOutput=new FormData();
  fdOutput.left=new FormAttachment(middle,0);
  fdOutput.top=new FormAttachment(wInput,margin + 5);
  fdOutput.right=new FormAttachment(100,0);
  wOutput.setLayoutData(fdOutput);
  wOutput.setItems(fieldNames);
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"PentahoReportingOutput.Column.ParameterName"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"PentahoReportingOutput.Column.FieldName"),ColumnInfo.COLUMN_TYPE_CCOMBO,fieldNames,true)};
  wFields=new TableView(transMeta,shell,SWT.FULL_SELECTION | SWT.MULTI | SWT.BORDER,colinf,1,lsMod,props);
  FormData fdFields=new FormData();
  fdFields.top=new FormAttachment(wOutput,margin * 2);
  fdFields.bottom=new FormAttachment(wOutput,250);
  fdFields.left=new FormAttachment(0,0);
  fdFields.right=new FormAttachment(100,0);
  wFields.setLayoutData(fdFields);
  wlProcessor=new Label(shell,SWT.RIGHT);
  wlProcessor.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.Processor.Label"));
  props.setLook(wlProcessor);
  FormData fdlProcessor=new FormData();
  fdlProcessor.left=new FormAttachment(0,0);
  fdlProcessor.top=new FormAttachment(wFields,margin + 5);
  fdlProcessor.right=new FormAttachment(middle,-margin);
  wlProcessor.setLayoutData(fdlProcessor);
  wProcessor=new List(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wProcessor);
  FormData fdProcessor=new FormData();
  fdProcessor.left=new FormAttachment(middle,0);
  fdProcessor.top=new FormAttachment(wFields,margin + 5);
  fdProcessor.right=new FormAttachment(100,0);
  wProcessor.setLayoutData(fdProcessor);
  wProcessor.setItems(ProcessorType.getDescriptions());
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString("System.Button.Cancel"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"PentahoReportingOutputDialog.Button.GetParameters"));
  setButtonPositions(new Button[]{wOK,wGet,wCancel},margin,wProcessor);
  wOK.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
);
  wCancel.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
);
  wGet.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wInput.addSelectionListener(lsDef);
  wOutput.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
