{
  final Spoon spoon=Spoon.getInstance();
  final PropsUI props=PropsUI.getInstance();
  try {
    TransMeta transMeta=null;
    try {
      transMeta=DomainObjectRegistry.getInstance().constructTransMeta(new Class[]{},new Object[]{});
    }
 catch (    DomainObjectCreationException doce) {
      transMeta=new TransMeta();
    }
    transMeta.loadXML(transNode,spoon.getRepository(),true,new Variables(),new OverwritePrompter(){
      public boolean overwritePrompt(      String message,      String rememberText,      String rememberPropertyName){
        MessageDialogWithToggle.setDefaultImage(GUIResource.getInstance().getImageSpoon());
        Object res[]=spoon.messageDialogWithToggle(BaseMessages.getString(PKG,"System.Button.Yes"),null,message,Const.WARNING,new String[]{BaseMessages.getString(PKG,"System.Button.Yes"),BaseMessages.getString(PKG,"System.Button.No")},1,rememberText,!props.askAboutReplacingDatabaseConnections());
        int idx=((Integer)res[0]).intValue();
        boolean toggleState=((Boolean)res[1]).booleanValue();
        props.setAskAboutReplacingDatabaseConnections(!toggleState);
        return ((idx & 0xFF) == 0);
      }
    }
);
    transMeta.setRepositoryDirectory(Spoon.getInstance().getDefaultSaveLocation(transMeta));
    spoon.setTransMetaVariables(transMeta);
    spoon.getProperties().addLastFile(LastUsedFile.FILE_TYPE_TRANSFORMATION,fname,null,false,null);
    spoon.addMenuLast();
    if (!importfile)     transMeta.clearChanged();
    transMeta.setFilename(fname);
    spoon.addTransGraph(transMeta);
    spoon.sharedObjectsFileMap.put(transMeta.getSharedObjects().getFilename(),transMeta.getSharedObjects());
    SpoonPerspectiveManager.getInstance().activatePerspective(MainSpoonPerspective.class);
    spoon.refreshTree();
    spoon.refreshHistory();
    return true;
  }
 catch (  KettleException e) {
    new ErrorDialog(spoon.getShell(),BaseMessages.getString(PKG,"Spoon.Dialog.ErrorOpening.Title"),BaseMessages.getString(PKG,"Spoon.Dialog.ErrorOpening.Message") + fname,e);
  }
  return false;
}
