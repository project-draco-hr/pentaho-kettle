{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  GridLayout shellLayout=new GridLayout();
  shellLayout.numColumns=1;
  shell.setLayout(shellLayout);
  shell.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DialogTitle"));
  middle=props.getMiddlePct();
  margin=Const.MARGIN;
  Composite sCompParent=new Composite(shell,SWT.NONE);
  sCompParent.setLayout(new FillLayout(SWT.VERTICAL));
  GridData sCompGridData=new GridData(GridData.FILL_BOTH);
  sCompGridData.grabExcessHorizontalSpace=true;
  sCompGridData.grabExcessVerticalSpace=true;
  sCompParent.setLayoutData(sCompGridData);
  sComp=new ScrolledComposite(sCompParent,SWT.V_SCROLL | SWT.H_SCROLL);
  sComp.setLayout(new FormLayout());
  sComp.setExpandHorizontal(true);
  sComp.setExpandVertical(true);
  helpComp=new Composite(shell,SWT.NONE);
  helpComp.setLayout(new FormLayout());
  GridData helpCompData=new GridData();
  helpCompData.grabExcessHorizontalSpace=true;
  helpCompData.grabExcessVerticalSpace=false;
  helpComp.setLayoutData(helpCompData);
  setShellImage(shell,input);
  comp=new Composite(sComp,SWT.NONE);
  props.setLook(comp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  comp.setLayout(fileLayout);
  wlStepname=new Label(comp,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.top=new FormAttachment(0,margin);
  fdlStepname.right=new FormAttachment(middle,-margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(comp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wlDirectory=new Label(comp,SWT.RIGHT);
  wlDirectory.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.Directory.Label"));
  props.setLook(wlDirectory);
  FormData fdlDirectory=new FormData();
  fdlDirectory.left=new FormAttachment(0,0);
  fdlDirectory.top=new FormAttachment(wStepname,margin);
  fdlDirectory.right=new FormAttachment(middle,-margin);
  wlDirectory.setLayoutData(fdlDirectory);
  wbbDirectory=new Button(comp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbDirectory);
  wbbDirectory.setText(BaseMessages.getString(PKG,"System.Button.Browse"));
  wbbDirectory.setToolTipText(BaseMessages.getString(PKG,"System.Tooltip.BrowseForRepositoryDirectory"));
  FormData fdbDirectory=new FormData();
  fdbDirectory.right=new FormAttachment(100,0);
  fdbDirectory.top=new FormAttachment(wStepname,margin);
  wbbDirectory.setLayoutData(fdbDirectory);
  wbaDirectory=new Button(comp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaDirectory);
  wbaDirectory.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryAdd.Button"));
  wbaDirectory.setToolTipText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryAdd.Tooltip"));
  FormData fdbaDirectory=new FormData();
  fdbaDirectory.right=new FormAttachment(wbbDirectory,-margin);
  fdbaDirectory.top=new FormAttachment(wStepname,margin);
  wbaDirectory.setLayoutData(fdbaDirectory);
  wDirectory=new TextVar(transMeta,comp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wDirectory);
  wDirectory.addModifyListener(lsMod);
  FormData fdDirectory=new FormData();
  fdDirectory.left=new FormAttachment(middle,0);
  fdDirectory.right=new FormAttachment(wbaDirectory,-margin);
  fdDirectory.top=new FormAttachment(wStepname,margin);
  wDirectory.setLayoutData(fdDirectory);
  wlNameMask=new Label(comp,SWT.RIGHT);
  wlNameMask.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.NameMask.Label"));
  props.setLook(wlNameMask);
  FormData fdlNameMask=new FormData();
  fdlNameMask.left=new FormAttachment(0,0);
  fdlNameMask.top=new FormAttachment(wDirectory,margin);
  fdlNameMask.right=new FormAttachment(middle,-margin);
  wlNameMask.setLayoutData(fdlNameMask);
  wNameMask=new TextVar(transMeta,comp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wNameMask);
  wNameMask.addModifyListener(lsMod);
  FormData fdNameMask=new FormData();
  fdNameMask.left=new FormAttachment(middle,0);
  fdNameMask.top=new FormAttachment(wDirectory,margin);
  fdNameMask.right=new FormAttachment(wDirectory,0,SWT.RIGHT);
  wNameMask.setLayoutData(fdNameMask);
  wlExcludeNameMask=new Label(comp,SWT.RIGHT);
  wlExcludeNameMask.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.ExcludeNameMask.Label"));
  props.setLook(wlExcludeNameMask);
  FormData fdlExcludeNameMask=new FormData();
  fdlExcludeNameMask.left=new FormAttachment(0,0);
  fdlExcludeNameMask.top=new FormAttachment(wNameMask,margin);
  fdlExcludeNameMask.right=new FormAttachment(middle,-margin);
  wlExcludeNameMask.setLayoutData(fdlExcludeNameMask);
  wExcludeFilemask=new TextVar(transMeta,comp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wExcludeFilemask);
  wExcludeFilemask.addModifyListener(lsMod);
  FormData fdExcludeNameMask=new FormData();
  fdExcludeNameMask.left=new FormAttachment(middle,0);
  fdExcludeNameMask.top=new FormAttachment(wNameMask,margin);
  fdExcludeNameMask.right=new FormAttachment(wDirectory,0,SWT.RIGHT);
  wExcludeFilemask.setLayoutData(fdExcludeNameMask);
  wlDirectoryList=new Label(comp,SWT.RIGHT);
  wlDirectoryList.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryList.Label"));
  props.setLook(wlDirectoryList);
  FormData fdlDirectoryList=new FormData();
  fdlDirectoryList.left=new FormAttachment(0,0);
  fdlDirectoryList.top=new FormAttachment(wExcludeFilemask,margin);
  fdlDirectoryList.right=new FormAttachment(middle,-margin);
  wlDirectoryList.setLayoutData(fdlDirectoryList);
  wbdDirectory=new Button(comp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdDirectory);
  wbdDirectory.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryDelete.Button"));
  wbdDirectory.setToolTipText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryDelete.Tooltip"));
  FormData fdbdDirectory=new FormData();
  fdbdDirectory.right=new FormAttachment(100,0);
  fdbdDirectory.top=new FormAttachment(wExcludeFilemask,40);
  wbdDirectory.setLayoutData(fdbdDirectory);
  wbeDirectory=new Button(comp,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeDirectory);
  wbeDirectory.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryEdit.Button"));
  wbeDirectory.setToolTipText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.DirectoryEdit.Tooltip"));
  FormData fdbeDirectory=new FormData();
  fdbeDirectory.right=new FormAttachment(100,0);
  fdbeDirectory.left=new FormAttachment(wbdDirectory,0,SWT.LEFT);
  fdbeDirectory.top=new FormAttachment(wbdDirectory,margin);
  wbeDirectory.setLayoutData(fdbeDirectory);
  ColumnInfo[] colinfo=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.Directory.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.NameWildcard.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.ExcludeNameWildcard.Column"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.IncludeSubDirs.Column"),ColumnInfo.COLUMN_TYPE_CCOMBO,YES_NO_COMBO)};
  colinfo[0].setUsingVariables(true);
  colinfo[1].setUsingVariables(true);
  colinfo[1].setToolTip(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.RegExpColumn.Column"));
  colinfo[2].setUsingVariables(true);
  colinfo[2].setToolTip(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.ExcludeRegExpColumn.Column"));
  colinfo[3].setToolTip(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.IncludeSubDirs.ToolTip"));
  wDirectoryList=new TableView(transMeta,comp,SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER,colinfo,colinfo.length,lsMod,props);
  props.setLook(wDirectoryList);
  FormData fdDirectoryList=new FormData();
  fdDirectoryList.left=new FormAttachment(middle,0);
  fdDirectoryList.right=new FormAttachment(wbdDirectory,-margin);
  fdDirectoryList.top=new FormAttachment(wExcludeFilemask,margin);
  fdDirectoryList.bottom=new FormAttachment(wExcludeFilemask,200);
  wDirectoryList.setLayoutData(fdDirectoryList);
  wlObjectTypeSelection=new Label(comp,SWT.RIGHT);
  wlObjectTypeSelection.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.ObjectTypeSelection.Label"));
  props.setLook(wlObjectTypeSelection);
  FormData fdlFilterFileType=new FormData();
  fdlFilterFileType.left=new FormAttachment(0,0);
  fdlFilterFileType.right=new FormAttachment(middle,0);
  fdlFilterFileType.top=new FormAttachment(wDirectoryList,3 * margin);
  wlObjectTypeSelection.setLayoutData(fdlFilterFileType);
  wObjectTypeSelection=new CCombo(comp,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wObjectTypeSelection.add(ObjectTypeSelection.Jobs.getDescription());
  wObjectTypeSelection.add(ObjectTypeSelection.Transformations.getDescription());
  wObjectTypeSelection.add(ObjectTypeSelection.All.getDescription());
  props.setLook(wObjectTypeSelection);
  FormData fdFilterFileType=new FormData();
  fdFilterFileType.left=new FormAttachment(middle,0);
  fdFilterFileType.top=new FormAttachment(wDirectoryList,3 * margin);
  fdFilterFileType.right=new FormAttachment(100,0);
  wObjectTypeSelection.setLayoutData(fdFilterFileType);
  wlInclRownum=new Label(comp,SWT.RIGHT);
  wlInclRownum.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.InclRownum.Label"));
  props.setLook(wlInclRownum);
  FormData fdlInclRownum=new FormData();
  fdlInclRownum.left=new FormAttachment(0,0);
  fdlInclRownum.top=new FormAttachment(wObjectTypeSelection,2 * margin);
  fdlInclRownum.right=new FormAttachment(middle,-margin);
  wlInclRownum.setLayoutData(fdlInclRownum);
  wInclRownum=new Button(comp,SWT.CHECK);
  props.setLook(wInclRownum);
  wInclRownum.setToolTipText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.InclRownum.Tooltip"));
  FormData fdRownum=new FormData();
  fdRownum.left=new FormAttachment(middle,0);
  fdRownum.top=new FormAttachment(wObjectTypeSelection,2 * margin);
  wInclRownum.setLayoutData(fdRownum);
  wlInclRownumField=new Label(comp,SWT.RIGHT);
  wlInclRownumField.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.InclRownumField.Label"));
  props.setLook(wlInclRownumField);
  FormData fdlInclRownumField=new FormData();
  fdlInclRownumField.left=new FormAttachment(wInclRownum,margin);
  fdlInclRownumField.top=new FormAttachment(wObjectTypeSelection,2 * margin);
  wlInclRownumField.setLayoutData(fdlInclRownumField);
  wInclRownumField=new TextVar(transMeta,comp,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wInclRownumField);
  wInclRownumField.addModifyListener(lsMod);
  FormData fdInclRownumField=new FormData();
  fdInclRownumField.left=new FormAttachment(wlInclRownumField,margin);
  fdInclRownumField.top=new FormAttachment(wObjectTypeSelection,2 * margin);
  fdInclRownumField.right=new FormAttachment(100,0);
  wInclRownumField.setLayoutData(fdInclRownumField);
  wOK=new Button(comp,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wPreview=new Button(comp,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"GetRepositoryNamesDialog.Preview.Button"));
  wCancel=new Button(comp,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wPreview,wCancel},margin,wInclRownumField);
  FormData fdComp=new FormData();
  fdComp.left=new FormAttachment(0,0);
  fdComp.top=new FormAttachment(0,0);
  fdComp.right=new FormAttachment(100,0);
  fdComp.bottom=new FormAttachment(100,0);
  comp.setLayoutData(fdComp);
  comp.pack();
  Rectangle bounds=comp.getBounds();
  sComp.setContent(comp);
  sComp.setExpandHorizontal(true);
  sComp.setExpandVertical(true);
  sComp.setMinWidth(bounds.width);
  sComp.setMinHeight(bounds.height);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsPreview=new Listener(){
    public void handleEvent(    Event e){
      preview();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wPreview.addListener(SWT.Selection,lsPreview);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wDirectoryList.add(new String[]{wDirectory.getText(),wNameMask.getText(),wExcludeFilemask.getText(),"Y"});
      wDirectory.setText("");
      wNameMask.setText("");
      wDirectoryList.removeEmptyRows();
      wDirectoryList.setRowNums();
      wDirectoryList.optWidth(true);
    }
  }
;
  wbaDirectory.addSelectionListener(selA);
  wDirectory.addSelectionListener(selA);
  wbdDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx[]=wDirectoryList.getSelectionIndices();
      wDirectoryList.remove(idx);
      wDirectoryList.removeEmptyRows();
      wDirectoryList.setRowNums();
    }
  }
);
  wbeDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wDirectoryList.getSelectionIndex();
      if (idx >= 0) {
        String string[]=wDirectoryList.getItem(idx);
        wDirectory.setText(string[0]);
        wNameMask.setText(string[1]);
        wExcludeFilemask.setText(string[2]);
        wDirectoryList.remove(idx);
      }
      wDirectoryList.removeEmptyRows();
      wDirectoryList.setRowNums();
    }
  }
);
  wbbDirectory.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      displaydirectoryList();
    }
  }
);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData(input);
  setSize();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
