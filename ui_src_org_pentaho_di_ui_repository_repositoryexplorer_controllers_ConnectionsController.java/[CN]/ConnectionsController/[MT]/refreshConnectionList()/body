{
  final List<UIDatabaseConnection> tmpList=new ArrayList<UIDatabaseConnection>();
  Runnable r=new Runnable(){
    @Override public void run(){
      try {
        ObjectId[] dbIdList=repository.getDatabaseIDs(false);
        for (        ObjectId dbId : dbIdList) {
          DatabaseMeta dbMeta=repository.loadDatabaseMeta(dbId,null);
          RepositoryElementMetaInterface repoMeta=repository.getObjectInformation(dbId,RepositoryObjectType.DATABASE);
          UIDatabaseConnection conn=null;
          try {
            conn=UIObjectRegistry.getInstance().constructUIDatabaseConnection(dbMeta,repository);
          }
 catch (          UIObjectCreationException uoe) {
            conn=new UIDatabaseConnection(dbMeta,repository);
          }
          if (conn != null) {
            conn.setRepositoryElementMetaInterface(repoMeta);
            tmpList.add(conn);
          }
        }
      }
 catch (      KettleException e) {
        if (mainController == null || !mainController.handleLostRepository(e)) {
          throw new RuntimeException(e);
        }
      }
    }
  }
;
  doWithBusyIndicator(r);
  dbConnectionList.setChildren(tmpList);
}
