{
  try {
    if (log.isDetailed()) {
      logDetailed(BaseMessages.getString(PKG,"SalesforceInsert.WriteToSalesforce",data.iBufferPos,meta.getBatchSizeInt()));
    }
    if (data.iBufferPos < meta.getBatchSizeInt()) {
      ArrayList<MessageElement> insertfields=new ArrayList<MessageElement>();
      ArrayList<String> fieldsToNull=new ArrayList<String>();
      for (int i=0; i < data.nrfields; i++) {
        ValueMetaInterface valueMeta=data.inputRowMeta.getValueMeta(data.fieldnrs[i]);
        Object value=rowData[data.fieldnrs[i]];
        if (valueMeta.isNull(value)) {
          fieldsToNull.add(SalesforceUtils.getFieldToNullName(log,meta.getUpdateLookup()[i],meta.getUseExternalId()[i]));
        }
 else {
          if (valueMeta.isDate()) {
            Calendar cal=Calendar.getInstance(valueMeta.getDateFormatTimeZone());
            cal.setTime(valueMeta.getDate(value));
            Calendar utc=Calendar.getInstance(TimeZone.getTimeZone("UTC"));
            utc.clear();
            utc.set(cal.get(Calendar.YEAR),cal.get(Calendar.MONTH),cal.get(Calendar.DATE));
            value=utc.getTime();
          }
 else           if (valueMeta.isStorageBinaryString()) {
            value=valueMeta.convertToNormalStorageType(value);
          }
          insertfields.add(SalesforceConnection.createMessageElement(meta.getUpdateLookup()[i],value,meta.getUseExternalId()[i]));
        }
      }
      SObject sobjPass=new SObject();
      sobjPass.setType(data.connection.getModule());
      if (insertfields.size() > 0) {
        sobjPass.set_any(insertfields.toArray(new MessageElement[insertfields.size()]));
      }
      if (fieldsToNull.size() > 0) {
        sobjPass.setFieldsToNull(fieldsToNull.toArray(new String[fieldsToNull.size()]));
      }
      data.sfBuffer[data.iBufferPos]=sobjPass;
      data.outputBuffer[data.iBufferPos]=rowData;
      data.iBufferPos++;
    }
    if (data.iBufferPos >= meta.getBatchSizeInt()) {
      if (log.isDetailed()) {
        logDetailed(BaseMessages.getString(PKG,"SalesforceInsert.CallingFlushBuffer"));
      }
      flushBuffers();
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"SalesforceInsert.Error",e.getMessage()));
  }
}
