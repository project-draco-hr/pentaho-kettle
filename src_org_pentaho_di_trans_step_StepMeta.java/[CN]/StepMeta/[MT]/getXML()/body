{
  StringBuffer retval=new StringBuffer(200);
  retval.append("  <").append(XML_TAG).append('>').append(Const.CR);
  retval.append("    ").append(XMLHandler.addTagValue("name",getName()));
  retval.append("    ").append(XMLHandler.addTagValue("type",getStepID()));
  retval.append("    ").append(XMLHandler.addTagValue("description",description));
  retval.append("    ").append(XMLHandler.addTagValue("distribute",distributes));
  retval.append("    ").append(XMLHandler.addTagValue("copies",copies));
  retval.append(stepPartitioningMeta.getXML());
  if (targetStepPartitioningMeta != null) {
    retval.append(XMLHandler.openTag("target_step_partitioning")).append(targetStepPartitioningMeta.getXML()).append(XMLHandler.closeTag("target_step_partitioning"));
  }
  retval.append(stepMetaInterface.getXML());
  retval.append("     ").append(XMLHandler.addTagValue("cluster_schema",clusterSchema == null ? "" : clusterSchema.getName()));
  retval.append(" <remotesteps>");
  List<RemoteStep> inputSteps=new ArrayList<RemoteStep>(remoteInputSteps);
  Collections.sort(inputSteps);
  retval.append("   <input>");
  for (  RemoteStep remoteStep : inputSteps) {
    retval.append("      ").append(remoteStep.getXML()).append(Const.CR);
  }
  retval.append("   </input>");
  List<RemoteStep> outputSteps=new ArrayList<RemoteStep>(remoteOutputSteps);
  Collections.sort(outputSteps);
  retval.append("   <output>");
  for (  RemoteStep remoteStep : outputSteps) {
    retval.append("      ").append(remoteStep.getXML()).append(Const.CR);
  }
  retval.append("   </output>");
  retval.append(" </remotesteps>");
  retval.append("    <GUI>").append(Const.CR);
  retval.append("      <xloc>").append(location.x).append("</xloc>").append(Const.CR);
  retval.append("      <yloc>").append(location.y).append("</yloc>").append(Const.CR);
  retval.append("      <draw>").append((drawstep ? "Y" : "N")).append("</draw>").append(Const.CR);
  retval.append("      </GUI>").append(Const.CR);
  retval.append("    </" + XML_TAG + ">").append(Const.CR).append(Const.CR);
  return retval.toString();
}
