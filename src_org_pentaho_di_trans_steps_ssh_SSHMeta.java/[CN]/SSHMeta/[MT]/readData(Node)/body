{
  try {
    dynamicCommandField="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"dynamicCommandField"));
    command=XMLHandler.getTagValue(stepnode,"command");
    commandfieldname=XMLHandler.getTagValue(stepnode,"commandfieldname");
    port=XMLHandler.getTagValue(stepnode,"port");
    serverName=XMLHandler.getTagValue(stepnode,"servername");
    userName=XMLHandler.getTagValue(stepnode,"userName");
    password=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode,"password"));
    usePrivateKey="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"usePrivateKey"));
    keyFileName=XMLHandler.getTagValue(stepnode,"keyFileName");
    passPhrase=XMLHandler.getTagValue(stepnode,"passPhrase");
    stdOutFieldName=XMLHandler.getTagValue(stepnode,"stdOutFieldName");
    stdErrFieldName=XMLHandler.getTagValue(stepnode,"stdErrFieldName");
    timeOut=XMLHandler.getTagValue(stepnode,"timeOut");
    proxyHost=XMLHandler.getTagValue(stepnode,"proxyHost");
    proxyPort=XMLHandler.getTagValue(stepnode,"proxyPort");
    proxyUsername=XMLHandler.getTagValue(stepnode,"proxyUsername");
    proxyPassword=Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(stepnode,"proxyPassword"));
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"SSHMeta.Exception.UnableToReadStepInfo"),e);
  }
}
