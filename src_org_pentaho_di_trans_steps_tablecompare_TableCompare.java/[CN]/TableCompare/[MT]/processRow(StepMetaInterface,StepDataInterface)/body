{
  meta=(TableCompareMeta)smi;
  data=(TableCompareData)sdi;
  Object[] r=getRow();
  if (r == null) {
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.outputRowMeta=getInputRowMeta().clone();
    meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
    if (Const.isEmpty(meta.getReferenceSchemaField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.ReferenceSchemaNotSpecified"));
    }
    data.refSchemaIndex=getInputRowMeta().indexOfValue(meta.getReferenceSchemaField());
    if (data.refSchemaIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getReferenceSchemaField()));
    }
    if (Const.isEmpty(meta.getReferenceTableField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.ReferenceTableNotSpecified"));
    }
    data.refTableIndex=getInputRowMeta().indexOfValue(meta.getReferenceTableField());
    if (data.refTableIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getReferenceTableField()));
    }
    if (Const.isEmpty(meta.getCompareSchemaField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CompareSchemaNotSpecified"));
    }
    data.cmpSchemaIndex=getInputRowMeta().indexOfValue(meta.getCompareSchemaField());
    if (data.cmpSchemaIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getCompareSchemaField()));
    }
    if (Const.isEmpty(meta.getCompareTableField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CompareTableNotSpecified"));
    }
    data.cmpTableIndex=getInputRowMeta().indexOfValue(meta.getCompareTableField());
    if (data.cmpTableIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getCompareTableField()));
    }
    if (Const.isEmpty(meta.getKeyFieldsField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.KeyFieldsNotSpecified"));
    }
    data.keyFieldsIndex=getInputRowMeta().indexOfValue(meta.getKeyFieldsField());
    if (data.keyFieldsIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getKeyFieldsField()));
    }
    if (Const.isEmpty(meta.getExcludeFieldsField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.ExcludeFieldsNotSpecified"));
    }
    data.excludeFieldsIndex=getInputRowMeta().indexOfValue(meta.getExcludeFieldsField());
    if (data.excludeFieldsIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getExcludeFieldsField()));
    }
    if (Const.isEmpty(meta.getKeyDescriptionField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.KeyDescriptionFieldNotSpecified"));
    }
    data.keyDescIndex=getInputRowMeta().indexOfValue(meta.getKeyDescriptionField());
    if (data.keyDescIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getKeyDescriptionField()));
    }
    if (Const.isEmpty(meta.getValueReferenceField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.ValueReferenceFieldNotSpecified"));
    }
    data.valueReferenceIndex=getInputRowMeta().indexOfValue(meta.getValueReferenceField());
    if (data.valueReferenceIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getValueReferenceField()));
    }
    if (Const.isEmpty(meta.getValueCompareField())) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.ValueCompareFieldNotSpecified"));
    }
    data.valueCompareIndex=getInputRowMeta().indexOfValue(meta.getValueCompareField());
    if (data.valueCompareIndex < 0) {
      throw new KettleException(BaseMessages.getString(PKG,"TableCompare.Exception.CanNotFindField",meta.getValueCompareField()));
    }
  }
  Object[] fields=compareTables(getInputRowMeta(),r);
  Object[] outputRowData=RowDataUtil.addRowData(r,getInputRowMeta().size(),fields);
  putRow(data.outputRowMeta,outputRowData);
  return true;
}
