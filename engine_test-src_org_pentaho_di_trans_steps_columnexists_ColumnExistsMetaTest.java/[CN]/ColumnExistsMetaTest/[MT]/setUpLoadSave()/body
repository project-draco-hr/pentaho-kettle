{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  List<String> attributes=Arrays.asList("schemaname","tablename","tablenamefield","columnnamefield","resultfieldname","istablenameInfield","database");
  Map<String,String> getterMap=new HashMap<String,String>(){
{
      put("schemaname","getSchemaname");
      put("tablename","getTablename");
      put("tablenamefield","getDynamicTablenameField");
      put("columnnamefield","getDynamicColumnnameField");
      put("resultfieldname","getResultFieldName");
      put("istablenameInfield","isTablenameInField");
      put("database","getDatabase");
    }
  }
;
  Map<String,String> setterMap=new HashMap<String,String>(){
{
      put("schemaname","setSchemaname");
      put("tablename","setTablename");
      put("tablenamefield","setDynamicTablenameField");
      put("columnnamefield","setDynamicColumnnameField");
      put("resultfieldname","setResultFieldName");
      put("istablenameInfield","setTablenameInField");
      put("database","setDatabase");
    }
  }
;
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("database",new DatabaseMetaLoadSaveValidator());
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,getterMap,setterMap,attrValidatorMap,typeValidatorMap);
}
