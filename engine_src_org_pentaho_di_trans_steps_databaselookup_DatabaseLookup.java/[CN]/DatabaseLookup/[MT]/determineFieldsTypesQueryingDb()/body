{
  final String[] keyFields=meta.getTableKeyField();
  data.keytypes=new int[keyFields.length];
  String schemaTable=meta.getDatabaseMeta().getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),environmentSubstitute(meta.getTablename()));
  RowMetaInterface fields=data.db.getTableFields(schemaTable);
  if (fields != null) {
    for (int i=0; i < keyFields.length; i++) {
      ValueMetaInterface key=fields.searchValueMeta(keyFields[i]);
      if (key != null) {
        data.keytypes[i]=key.getType();
      }
 else {
        throw new KettleStepException(BaseMessages.getString(PKG,"DatabaseLookup.ERROR0001.FieldRequired5.Exception") + keyFields[i] + BaseMessages.getString(PKG,"DatabaseLookup.ERROR0001.FieldRequired6.Exception"));
      }
    }
    final String[] returnFields=meta.getReturnValueField();
    final int returnFieldsOffset=getInputRowMeta().size();
    for (int i=0; i < returnFields.length; i++) {
      ValueMetaInterface returnValueMeta=fields.searchValueMeta(returnFields[i]);
      if (returnValueMeta != null) {
        ValueMetaInterface v=data.outputRowMeta.getValueMeta(returnFieldsOffset + i);
        if (v.getType() != returnValueMeta.getType()) {
          ValueMetaInterface clone=returnValueMeta.clone();
          clone.setName(v.getName());
          data.outputRowMeta.setValueMeta(returnFieldsOffset + i,clone);
        }
      }
    }
  }
 else {
    throw new KettleStepException(BaseMessages.getString(PKG,"DatabaseLookup.ERROR0002.UnableToDetermineFieldsOfTable") + schemaTable + "]");
  }
}
