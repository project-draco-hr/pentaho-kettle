{
  KettleEnvironment.init();
  String sqlQuery="select \"Service\".\"Category\" as \"c0\", \"Service\".\"Country\" as \"c1\" from \"Service\" as \"Service\" where (\"Service\".\"Category\" = 'A') group by \"Service\".\"Category\", \"Service\".\"Country\" having (NOT((sum(\"Service\".\"sales_amount\") is null)) OR NOT((sum(\"Service\".\"products_sold\") is null)) ) order by CASE WHEN \"Service\".\"Category\" IS NULL THEN 1 ELSE 0 END, \"Service\".\"Category\" ASC, CASE WHEN \"Service\".\"Country\" IS NULL THEN 1 ELSE 0 END";
  SqlTransExecutor executor=new SqlTransExecutor(sqlQuery,getServices());
  final List<RowMetaAndData> rows=new ArrayList<RowMetaAndData>();
  executor.executeQuery(new RowAdapter(){
    @Override public void rowWrittenEvent(    RowMetaInterface rowMeta,    Object[] row) throws KettleStepException {
      rows.add(new RowMetaAndData(rowMeta,row));
    }
  }
);
  File file=new File("/tmp/gen.ktr");
  FileOutputStream fos=new FileOutputStream(file);
  fos.write(org.pentaho.di.core.xml.XMLHandler.getXMLHeader().getBytes("UTF-8"));
  fos.write(executor.getGenTransMeta().getXML().getBytes("UTF-8"));
  fos.close();
  executor.waitUntilFinished();
  assertEquals(4,rows.size());
}
