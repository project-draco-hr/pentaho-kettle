{
  Properties properties=new Properties();
  properties.load(new FileInputStream(new File(args[0])));
  SharedObjects sharedObjects=new SharedObjects(args[1],new ArrayList(),new Hashtable());
  ClusterSchema clusterSchema=new ClusterSchema();
  clusterSchema.setName("EC2");
  clusterSchema.setBasePort("40000");
  clusterSchema.setSocketsBufferSize("100000");
  clusterSchema.setSocketsFlushInterval("0");
  clusterSchema.setSocketsCompressed(true);
  int max=1;
  while (properties.getProperty(PREFIX + max + IP) != null)   max++;
  max--;
  for (int i=1; i <= max; i++) {
    String serverIp=properties.getProperty(PREFIX + i + IP);
    String serverPort=properties.getProperty(PREFIX + i + PORT);
    if (i == 1) {
      clusterSchema.getSlaveServers().add(new SlaveServer(serverIp,serverPort,"cluster","cluster",null,null,null,true));
      if (max == 1) {
        clusterSchema.getSlaveServers().add(new SlaveServer(serverIp,serverPort,"cluster","cluster"));
      }
    }
 else {
      clusterSchema.getSlaveServers().add(new SlaveServer(serverIp,serverPort,"cluster","cluster"));
    }
  }
  sharedObjects.storeObject(clusterSchema);
  sharedObjects.saveToFile();
}
