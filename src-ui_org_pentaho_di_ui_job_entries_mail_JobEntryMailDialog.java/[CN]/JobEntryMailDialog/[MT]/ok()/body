{
  if (Const.isEmpty(wName.getText())) {
    MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
    mb.setText(BaseMessages.getString(PKG,"System.StepJobEntryNameMissing.Title"));
    mb.setMessage(BaseMessages.getString(PKG,"System.JobEntryNameMissing.Msg"));
    mb.open();
    return;
  }
  jobEntry.setName(wName.getText());
  jobEntry.setDestination(wDestination.getText());
  jobEntry.setDestinationCc(wDestinationCc.getText());
  jobEntry.setDestinationBCc(wDestinationBCc.getText());
  jobEntry.setServer(wServer.getText());
  jobEntry.setPort(wPort.getText());
  jobEntry.setReplyAddress(wReply.getText());
  jobEntry.setReplyName(wReplyName.getText());
  jobEntry.setSubject(wSubject.getText());
  jobEntry.setContactPerson(wPerson.getText());
  jobEntry.setContactPhone(wPhone.getText());
  jobEntry.setComment(wComment.getText());
  jobEntry.setIncludeDate(wAddDate.getSelection());
  jobEntry.setIncludingFiles(wIncludeFiles.getSelection());
  jobEntry.setFileType(wTypes.getSelectionIndices());
  jobEntry.setZipFilename(wZipFilename.getText());
  jobEntry.setZipFiles(wZipFiles.getSelection());
  jobEntry.setAuthenticationUser(wAuthUser.getText());
  jobEntry.setAuthenticationPassword(wAuthPass.getText());
  jobEntry.setUsingAuthentication(wUseAuth.getSelection());
  jobEntry.setUsingSecureAuthentication(wUseSecAuth.getSelection());
  jobEntry.setOnlySendComment(wOnlyComment.getSelection());
  jobEntry.setUseHTML(wUseHTML.getSelection());
  jobEntry.setUsePriority(wUsePriority.getSelection());
  jobEntry.setEncoding(wEncoding.getText());
  jobEntry.setPriority(wPriority.getText());
  if (wPriority.getSelectionIndex() == 0) {
    jobEntry.setPriority("low");
  }
 else   if (wPriority.getSelectionIndex() == 1) {
    jobEntry.setPriority("normal");
  }
 else {
    jobEntry.setPriority("high");
  }
  if (wImportance.getSelectionIndex() == 0) {
    jobEntry.setImportance("low");
  }
 else   if (wImportance.getSelectionIndex() == 1) {
    jobEntry.setImportance("normal");
  }
 else {
    jobEntry.setImportance("high");
  }
  jobEntry.setSecureConnectionType(wSecureConnectionType.getText());
  jobEntry.setReplyToAddresses(wReplyToAddress.getText());
  int nritems=wFields.nrNonEmpty();
  int nr=0;
  for (int i=0; i < nritems; i++) {
    String arg=wFields.getNonEmpty(i).getText(1);
    if (arg != null && arg.length() != 0)     nr++;
  }
  jobEntry.embeddedimages=new String[nr];
  jobEntry.contentids=new String[nr];
  nr=0;
  for (int i=0; i < nritems; i++) {
    String arg=wFields.getNonEmpty(i).getText(1);
    String wild=wFields.getNonEmpty(i).getText(2);
    if (arg != null && arg.length() != 0) {
      jobEntry.embeddedimages[nr]=arg;
      jobEntry.contentids[nr]=wild;
      nr++;
    }
  }
  dispose();
}
