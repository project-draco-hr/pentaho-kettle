{
  ReplaceStringMeta meta=new ReplaceStringMeta();
  meta.setFieldInStream(new String[]{FIELD_NAME});
  meta.setFieldOutStream(new String[]{FIELD_NAME});
  ValueMetaInterface inputFieldMeta=mock(ValueMetaInterface.class);
  when(inputFieldMeta.getStringEncoding()).thenReturn(ENCODING_NAME);
  RowMetaInterface inputRowMeta=mock(RowMetaInterface.class);
  when(inputRowMeta.searchValueMeta(anyString())).thenReturn(inputFieldMeta);
  StepMeta nextStep=mock(StepMeta.class);
  VariableSpace space=mock(VariableSpace.class);
  Repository repository=mock(Repository.class);
  IMetaStore metaStore=mock(IMetaStore.class);
  meta.getFields(inputRowMeta,"test",null,nextStep,space,repository,metaStore);
  ArgumentCaptor<ValueMetaInterface> argument=ArgumentCaptor.forClass(ValueMetaInterface.class);
  verify(inputRowMeta).addValueMeta(argument.capture());
  assertEquals(ENCODING_NAME,argument.getValue().getStringEncoding());
}
