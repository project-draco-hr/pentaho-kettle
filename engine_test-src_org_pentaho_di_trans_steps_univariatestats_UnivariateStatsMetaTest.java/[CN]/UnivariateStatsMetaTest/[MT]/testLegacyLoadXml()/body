{
  String legacyXml=IOUtils.toString(UnivariateStatsMetaTest.class.getClassLoader().getResourceAsStream("org/pentaho/di/trans/steps/univariatestats/legacyUnivariateStatsMetaTest.xml"));
  IMetaStore mockMetaStore=mock(IMetaStore.class);
  UnivariateStatsMeta meta=new UnivariateStatsMeta();
  meta.loadXML(XMLHandler.loadXMLString(legacyXml).getFirstChild(),new ArrayList<DatabaseMeta>(),mockMetaStore);
  assertEquals(2,meta.getNumFieldsToProcess());
  UnivariateStatsMetaFunction first=meta.getInputFieldMetaFunctions()[0];
  assertEquals("a",first.getSourceFieldName());
  assertEquals(true,first.getCalcN());
  assertEquals(true,first.getCalcMean());
  assertEquals(true,first.getCalcStdDev());
  assertEquals(true,first.getCalcMin());
  assertEquals(true,first.getCalcMax());
  assertEquals(true,first.getCalcMedian());
  assertEquals(.5,first.getCalcPercentile(),0);
  assertEquals(true,first.getInterpolatePercentile());
  UnivariateStatsMetaFunction second=meta.getInputFieldMetaFunctions()[1];
  assertEquals("b",second.getSourceFieldName());
  assertEquals(false,second.getCalcN());
  assertEquals(false,second.getCalcMean());
  assertEquals(false,second.getCalcStdDev());
  assertEquals(false,second.getCalcMin());
  assertEquals(false,second.getCalcMax());
  assertEquals(false,second.getCalcMedian());
  assertEquals(-1.0,second.getCalcPercentile(),0);
  assertEquals(false,second.getInterpolatePercentile());
}
