{
  final StringBuffer loggingText=new StringBuffer();
  try {
    final TransMeta transMeta=trans.getTransMeta();
    for (    StepMeta stepMeta : stepMetas) {
      final RowMetaInterface rowMeta=transMeta.getStepFields(stepMeta);
      previewMetaMap.put(stepMeta,rowMeta);
      final List<Object[]> rowsData=new ArrayList<Object[]>();
      previewDataMap.put(stepMeta,rowsData);
      previewLogMap.put(stepMeta,loggingText);
      StepInterface step=trans.findRunThread(stepMeta.getName());
      if (step != null) {
        step.addRowListener(new RowAdapter(){
          @Override public void rowWrittenEvent(          RowMetaInterface rowMeta,          Object[] row) throws KettleStepException {
            if (rowsData.size() < PropsUI.getInstance().getDefaultPreviewSize()) {
              rowsData.add(row);
            }
          }
        }
);
      }
    }
  }
 catch (  Exception e) {
    loggingText.append(Const.getStackTracker(e));
  }
  trans.addTransListener(new TransAdapter(){
    @Override public void transFinished(    Trans trans) throws KettleException {
      if (trans.getErrors() != 0) {
        for (        StepMetaDataCombi combi : trans.getSteps()) {
          if (combi.copy == 0) {
            StringBuffer logBuffer=CentralLogStore.getAppender().getBuffer(combi.step.getLogChannel().getLogChannelId(),false);
            previewLogMap.put(combi.stepMeta,logBuffer);
          }
        }
      }
    }
  }
);
}
