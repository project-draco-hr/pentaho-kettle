{
  if (transGraph != null && transGraph.extraViewTabFolder != null) {
    if (transGraph.extraViewTabFolder.getSelection() != transPreviewTab) {
      return;
    }
  }
  if (previewComposite == null || previewComposite.isDisposed()) {
    return;
  }
  StepMeta stepMeta=selectedStep;
  if (stepMeta == null) {
    hidePreviewGrid();
    return;
  }
 else {
    lastSelectedStep=selectedStep;
  }
  boolean errorStep=false;
  if (transGraph.trans != null) {
    List<StepInterface> steps=transGraph.trans.findBaseSteps(stepMeta.getName());
    if (steps != null && steps.size() > 0) {
      errorStep=steps.get(0).getErrors() > 0;
    }
  }
  StringBuffer logText=previewLogMap.get(stepMeta);
  if (errorStep && logText != null && logText.length() > 0) {
    showLogText(stepMeta,logText.toString());
    return;
  }
  RowMetaInterface rowMeta=previewMetaMap.get(stepMeta);
  if (rowMeta != null) {
    List<Object[]> rowData=previewDataMap.get(stepMeta);
    try {
      showPreviewGrid(transGraph.getManagedObject(),stepMeta,rowMeta,rowData);
    }
 catch (    Exception e) {
      e.printStackTrace();
      logText.append(Const.getStackTracker(e));
      showLogText(stepMeta,logText.toString());
    }
  }
}
