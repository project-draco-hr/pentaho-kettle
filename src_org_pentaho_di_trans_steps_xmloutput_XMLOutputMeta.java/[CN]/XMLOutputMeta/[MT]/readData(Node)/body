{
  try {
    encoding=XMLHandler.getTagValue(stepnode,"encoding");
    mainElement=XMLHandler.getTagValue(stepnode,"xml_main_element");
    repeatElement=XMLHandler.getTagValue(stepnode,"xml_repeat_element");
    fileName=XMLHandler.getTagValue(stepnode,"file","name");
    extension=XMLHandler.getTagValue(stepnode,"file","extention");
    doNotOpenNewFileInit="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","do_not_open_newfile_init"));
    stepNrInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","split"));
    dateInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_date"));
    timeInFilename="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_time"));
    addToResultFilenames="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","add_to_result_filenames"));
    zipped="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"file","zipped"));
    splitEvery=Const.toInt(XMLHandler.getTagValue(stepnode,"file","splitevery"),0);
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      outputFields[i]=new XMLField();
      String fieldName=XMLHandler.getTagValue(fnode,"name");
      outputFields[i].setFieldName(fieldName);
      String elementName=XMLHandler.getTagValue(fnode,"element");
      outputFields[i].setElementName(elementName == null ? "" : elementName);
      outputFields[i].setType(XMLHandler.getTagValue(fnode,"type"));
      outputFields[i].setFormat(XMLHandler.getTagValue(fnode,"format"));
      outputFields[i].setCurrencySymbol(XMLHandler.getTagValue(fnode,"currency"));
      outputFields[i].setDecimalSymbol(XMLHandler.getTagValue(fnode,"decimal"));
      outputFields[i].setGroupingSymbol(XMLHandler.getTagValue(fnode,"group"));
      outputFields[i].setNullString(XMLHandler.getTagValue(fnode,"nullif"));
      outputFields[i].setLength(Const.toInt(XMLHandler.getTagValue(fnode,"length"),-1));
      outputFields[i].setPrecision(Const.toInt(XMLHandler.getTagValue(fnode,"precision"),-1));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
