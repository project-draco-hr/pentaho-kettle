{
  List<String> strings=splitConditionClause(clause);
  if (strings.size() > 3) {
    throw new KettleSQLException("Unfortunately support for conditions is still very rudimentary, only 1 simple condition is supported [" + clause + "]");
  }
  String left=strings.get(0);
  if (selectFields != null) {
    for (    SQLField field : selectFields.getFields()) {
      if (field.getExpression().equalsIgnoreCase(left)) {
        if (!Const.isEmpty(field.getAlias())) {
          left=field.getAlias();
        }
        break;
      }
    }
  }
  left=ThinUtil.stripQuoteTableAlias(left,tableAlias);
  String operatorString=strings.get(1);
  String right=strings.get(2);
  right=ThinUtil.stripQuoteTableAlias(right,tableAlias);
  ValueMetaAndData value=null;
  int function=Condition.getFunction(operatorString);
  if (function == Condition.FUNC_IN_LIST) {
    String trimmed=Const.trim(right);
    String partClause=trimmed.substring(1,trimmed.length() - 1);
    List<String> parts=ThinUtil.splitClause(partClause,',','\'');
    StringBuilder valueString=new StringBuilder();
    for (    String part : parts) {
      if (valueString.length() > 0) {
        valueString.append(";");
      }
      part=Const.trim(part);
      if (part.startsWith("'") && part.endsWith("'")) {
        part=part.substring(1,part.length() - 1);
      }
      part=part.replace("''","'");
      valueString.append(part);
    }
    value=new ValueMetaAndData(new ValueMeta("constant-in-list",ValueMetaInterface.TYPE_STRING),valueString.toString());
  }
 else {
    String prefix="'%'";
    String suffix="'%'";
    if (right.startsWith(prefix) && right.endsWith(suffix)) {
      int leftOrIndex=right.indexOf("||");
      if (leftOrIndex > 0) {
        int rightOrIndex=right.indexOf("||",leftOrIndex + 2);
        if (rightOrIndex > 0) {
          String raw=Const.trim(right.substring(leftOrIndex + 2,rightOrIndex));
          if (raw.startsWith("'") && raw.endsWith("'")) {
            right="'%" + raw.substring(1,raw.length() - 1) + "%'";
          }
        }
      }
    }
    value=ThinUtil.extractConstant(right);
  }
  if (value != null) {
    return new Condition(left,function,null,value);
  }
 else {
    return new Condition(left,function,right,null);
  }
}
