{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobDeleteFiles.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobDeleteFiles.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wSettings=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSettings);
  wSettings.setText(Messages.getString("JobDeleteFiles.Settings.Label"));
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wSettings.setLayout(groupLayout);
  wlIncludeSubfolders=new Label(wSettings,SWT.RIGHT);
  wlIncludeSubfolders.setText(Messages.getString("JobDeleteFiles.IncludeSubfolders.Label"));
  props.setLook(wlIncludeSubfolders);
  fdlIncludeSubfolders=new FormData();
  fdlIncludeSubfolders.left=new FormAttachment(0,0);
  fdlIncludeSubfolders.top=new FormAttachment(wName,margin);
  fdlIncludeSubfolders.right=new FormAttachment(middle,-margin);
  wlIncludeSubfolders.setLayoutData(fdlIncludeSubfolders);
  wIncludeSubfolders=new Button(wSettings,SWT.CHECK);
  props.setLook(wIncludeSubfolders);
  wIncludeSubfolders.setToolTipText(Messages.getString("JobDeleteFiles.IncludeSubfolders.Tooltip"));
  fdIncludeSubfolders=new FormData();
  fdIncludeSubfolders.left=new FormAttachment(middle,0);
  fdIncludeSubfolders.top=new FormAttachment(wName,margin);
  fdIncludeSubfolders.right=new FormAttachment(100,0);
  wIncludeSubfolders.setLayoutData(fdIncludeSubfolders);
  wIncludeSubfolders.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.setChanged();
    }
  }
);
  wlPrevious=new Label(wSettings,SWT.RIGHT);
  wlPrevious.setText(Messages.getString("JobDeleteFiles.Previous.Label"));
  props.setLook(wlPrevious);
  fdlPrevious=new FormData();
  fdlPrevious.left=new FormAttachment(0,0);
  fdlPrevious.top=new FormAttachment(wIncludeSubfolders,margin);
  fdlPrevious.right=new FormAttachment(middle,-margin);
  wlPrevious.setLayoutData(fdlPrevious);
  wPrevious=new Button(wSettings,SWT.CHECK);
  props.setLook(wPrevious);
  wPrevious.setSelection(jobEntry.argFromPrevious);
  wPrevious.setToolTipText(Messages.getString("JobDeleteFiles.Previous.Tooltip"));
  fdPrevious=new FormData();
  fdPrevious.left=new FormAttachment(middle,0);
  fdPrevious.top=new FormAttachment(wIncludeSubfolders,margin);
  fdPrevious.right=new FormAttachment(100,0);
  wPrevious.setLayoutData(fdPrevious);
  wPrevious.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      jobEntry.argFromPrevious=!jobEntry.argFromPrevious;
      jobEntry.setChanged();
      wlFields.setEnabled(!jobEntry.argFromPrevious);
      wFields.setEnabled(!jobEntry.argFromPrevious);
      wFilename.setEnabled(!jobEntry.argFromPrevious);
      wlFilename.setEnabled(!jobEntry.argFromPrevious);
      wbFilename.setEnabled(!jobEntry.argFromPrevious);
      wlFilemask.setEnabled(!jobEntry.argFromPrevious);
      wFilemask.setEnabled(!jobEntry.argFromPrevious);
      wbdFilename.setEnabled(!jobEntry.argFromPrevious);
      wbeFilename.setEnabled(!jobEntry.argFromPrevious);
      wbaFilename.setEnabled(!jobEntry.argFromPrevious);
    }
  }
);
  fdSettings=new FormData();
  fdSettings.left=new FormAttachment(0,margin);
  fdSettings.top=new FormAttachment(wName,margin);
  fdSettings.right=new FormAttachment(100,-margin);
  wSettings.setLayoutData(fdSettings);
  wlFilename=new Label(shell,SWT.RIGHT);
  wlFilename.setText(Messages.getString("JobDeleteFiles.Filename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wSettings,2 * margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbFilename);
  wbFilename.setText(Messages.getString("System.Button.Browse"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wSettings,margin);
  wbFilename.setLayoutData(fdbFilename);
  wbaFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbaFilename);
  wbaFilename.setText(Messages.getString("JobDeleteFiles.FilenameAdd.Button"));
  fdbaFilename=new FormData();
  fdbaFilename.right=new FormAttachment(wbFilename,-margin);
  fdbaFilename.top=new FormAttachment(wSettings,margin);
  wbaFilename.setLayoutData(fdbaFilename);
  wFilename=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,0);
  fdFilename.top=new FormAttachment(wSettings,2 * margin);
  fdFilename.right=new FormAttachment(wbFilename,-55);
  wFilename.setLayoutData(fdFilename);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(jobMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*"});
      if (wFilename.getText() != null) {
        dialog.setFileName(jobMeta.environmentSubstitute(wFilename.getText()));
      }
      dialog.setFilterNames(FILETYPES);
      if (dialog.open() != null) {
        wFilename.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR + dialog.getFileName());
      }
    }
  }
);
  wlFilemask=new Label(shell,SWT.RIGHT);
  wlFilemask.setText(Messages.getString("JobDeleteFiles.Wildcard.Label"));
  props.setLook(wlFilemask);
  fdlFilemask=new FormData();
  fdlFilemask.left=new FormAttachment(0,0);
  fdlFilemask.top=new FormAttachment(wFilename,margin);
  fdlFilemask.right=new FormAttachment(middle,-margin);
  wlFilemask.setLayoutData(fdlFilemask);
  wFilemask=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER,Messages.getString("JobDeleteFiles.Wildcard.Tooltip"));
  props.setLook(wFilemask);
  wFilemask.addModifyListener(lsMod);
  fdFilemask=new FormData();
  fdFilemask.left=new FormAttachment(middle,0);
  fdFilemask.top=new FormAttachment(wFilename,margin);
  fdFilemask.right=new FormAttachment(wbFilename,-55);
  wFilemask.setLayoutData(fdFilemask);
  wbdFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbdFilename);
  wbdFilename.setText(Messages.getString("JobDeleteFiles.FilenameDelete.Button"));
  wbdFilename.setToolTipText(Messages.getString("JobDeleteFiles.FilenameDelete.Tooltip"));
  fdbdFilename=new FormData();
  fdbdFilename.right=new FormAttachment(100,0);
  fdbdFilename.top=new FormAttachment(wFilemask,40);
  wbdFilename.setLayoutData(fdbdFilename);
  wbeFilename=new Button(shell,SWT.PUSH | SWT.CENTER);
  props.setLook(wbeFilename);
  wbeFilename.setText(Messages.getString("JobDeleteFiles.FilenameEdit.Button"));
  wbeFilename.setToolTipText(Messages.getString("JobDeleteFiles.FilenameEdit.Tooltip"));
  fdbeFilename=new FormData();
  fdbeFilename.right=new FormAttachment(100,0);
  fdbeFilename.left=new FormAttachment(wbdFilename,0,SWT.LEFT);
  fdbeFilename.top=new FormAttachment(wbdFilename,margin);
  wbeFilename.setLayoutData(fdbeFilename);
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(Messages.getString("JobDeleteFiles.Fields.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.right=new FormAttachment(middle,-margin);
  fdlFields.top=new FormAttachment(wFilemask,margin);
  wlFields.setLayoutData(fdlFields);
  int rows=jobEntry.arguments == null ? 1 : (jobEntry.arguments.length == 0 ? 0 : jobEntry.arguments.length);
  final int FieldsRows=rows;
  ColumnInfo[] colinf=new ColumnInfo[]{new ColumnInfo(Messages.getString("JobDeleteFiles.Fields.Argument.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false),new ColumnInfo(Messages.getString("JobDeleteFiles.Fields.Wildcard.Label"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinf[0].setUsingVariables(true);
  colinf[0].setToolTip(Messages.getString("JobDeleteFiles.Fields.Column"));
  colinf[1].setUsingVariables(true);
  colinf[1].setToolTip(Messages.getString("JobDeleteFiles.Wildcard.Column"));
  wFields=new TableView(jobMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(100,-75);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  wlFields.setEnabled(!jobEntry.argFromPrevious);
  wFields.setEnabled(!jobEntry.argFromPrevious);
  SelectionAdapter selA=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      wFields.add(new String[]{wFilename.getText(),wFilemask.getText()});
      wFilename.setText("");
      wFilemask.setText("");
      wFields.removeEmptyRows();
      wFields.setRowNums();
      wFields.optWidth(true);
    }
  }
;
  wbaFilename.addSelectionListener(selA);
  wFilename.addSelectionListener(selA);
  wbdFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx[]=wFields.getSelectionIndices();
      wFields.remove(idx);
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wbeFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      int idx=wFields.getSelectionIndex();
      if (idx >= 0) {
        String string[]=wFields.getItem(idx);
        wFilename.setText(string[0]);
        wFilemask.setText(string[1]);
        wFields.remove(idx);
      }
      wFields.removeEmptyRows();
      wFields.setRowNums();
    }
  }
);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wFields);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wFilename.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
