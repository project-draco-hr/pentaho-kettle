{
  meta=(MultiMergeJoinMeta)smi;
  data=(MultiMergeJoinData)sdi;
  if (super.init(smi,sdi)) {
    StepIOMetaInterface stepIOMeta=meta.getStepIOMeta();
    String[] inputStepNames=meta.getInputSteps();
    String inputStepName;
    List<StreamInterface> infoStreams=stepIOMeta.getInfoStreams();
    StreamInterface stream;
    for (int i=0; i < infoStreams.size(); i++) {
      inputStepName=inputStepNames[i];
      stream=infoStreams.get(i);
      if (stream.getStepMeta() == null) {
        logError(BaseMessages.getString(PKG,"MultiMergeJoin.Log.UnableToFindReferenceStream",inputStepName));
        return false;
      }
    }
    String joinType=meta.getJoinType();
    for (int i=0; i < MultiMergeJoinMeta.join_types.length; ++i) {
      if (joinType.equalsIgnoreCase(MultiMergeJoinMeta.join_types[i])) {
        data.optional=MultiMergeJoinMeta.optionals[i];
        return true;
      }
    }
    logError(BaseMessages.getString(PKG,"MultiMergeJoin.Log.InvalidJoinType",meta.getJoinType()));
    return false;
  }
  return true;
}
