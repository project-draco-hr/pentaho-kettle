{
  RegexEvalMeta meta=new RegexEvalMeta();
  meta.allocate(2);
  meta.getFieldName()[0]="string";
  meta.getFieldName()[1]="matcher";
  meta.setFieldType(new int[]{ValueMetaInterface.TYPE_STRING,ValueMetaInterface.TYPE_STRING});
  meta.setResultFieldName("string");
  meta.setReplacefields(true);
  meta.setMatcher("matcher");
  meta.setAllowCaptureGroupsFlag(true);
  RegexEvalData data=new RegexEvalData();
  RegexEval step=createAndInitStep(meta,data);
  RowMeta input=new RowMeta();
  input.addValueMeta(new ValueMetaString("string"));
  input.addValueMeta(new ValueMetaString("matcher"));
  step.setInputRowMeta(input);
  step=spy(step);
  doReturn(new String[]{" "," "}).doReturn(new String[]{"",""}).doReturn(new String[]{null,null}).when(step).getRow();
  data.pattern=Pattern.compile("(a)(a)");
  List<Object[]> actual=TransTestingUtil.execute(step,meta,data,3,false);
  TransTestingUtil.assertResult(expected,actual);
}
