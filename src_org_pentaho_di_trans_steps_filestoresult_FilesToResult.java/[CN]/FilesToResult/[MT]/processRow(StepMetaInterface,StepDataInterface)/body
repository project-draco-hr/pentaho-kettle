{
  meta=(FilesToResultMeta)smi;
  data=(FilesToResultData)sdi;
  Object[] r=getRow();
  if (r == null) {
    for (    ResultFile resultFile : data.filenames) {
      addResultFile(resultFile);
    }
    logBasic(BaseMessages.getString(PKG,"FilesToResult.Log.AddedNrOfFiles",String.valueOf(data.filenames.size())));
    setOutputDone();
    return false;
  }
  if (first) {
    first=false;
    data.filenameIndex=getInputRowMeta().indexOfValue(meta.getFilenameField());
    if (data.filenameIndex < 0) {
      logError(BaseMessages.getString(PKG,"FilesToResult.Log.CouldNotFindField",meta.getFilenameField()));
      setErrors(1);
      stopAll();
      return false;
    }
  }
  String filename=(String)r[data.filenameIndex];
  try {
    ResultFile resultFile=new ResultFile(meta.getFileType(),KettleVFS.getFileObject(filename),getTrans().getName(),getStepname());
    data.filenames.add(resultFile);
  }
 catch (  Exception e) {
    throw new KettleException(e);
  }
  data.outputRowMeta=getInputRowMeta().clone();
  meta.getFields(data.outputRowMeta,getStepname(),null,null,this);
  putRow(data.outputRowMeta,r);
  if (checkFeedback(getLinesRead())) {
    logBasic(BaseMessages.getString(PKG,"FilesToResult.Log.LineNumber") + getLinesRead());
  }
  return true;
}
