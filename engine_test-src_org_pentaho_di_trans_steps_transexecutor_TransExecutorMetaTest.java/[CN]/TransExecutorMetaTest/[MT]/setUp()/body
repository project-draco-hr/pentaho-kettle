{
  List<String> attributes=Arrays.asList("fileName","transName","directoryPath","groupSize","groupField","groupTime","executionTimeField","executionFilesRetrievedField","executionLogTextField","executionLogChannelIdField","executionResultField","executionNrErrorsField","executionLinesReadField","executionLinesWrittenField","executionLinesInputField","executionLinesOutputField","executionLinesRejectedField","executionLinesUpdatedField","executionLinesDeletedField","executionExitStatusField","outputRowsField","outputRowsType","outputRowsLength","outputRowsPrecision");
  Map<String,String> getterMap=new HashMap<String,String>();
  Map<String,String> setterMap=new HashMap<String,String>();
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),1);
  IntLoadSaveValidator intValidator=spy(new IntLoadSaveValidator());
  doReturn(ValueMetaInterface.TYPE_INTEGER).when(intValidator).getTestObject();
  FieldLoadSaveValidator<int[]> intArrayLoadSaveValidator=new PrimitiveIntArrayLoadSaveValidator(intValidator,1);
  attrValidatorMap.put("outputRowsField",stringArrayLoadSaveValidator);
  attrValidatorMap.put("outputRowsType",intArrayLoadSaveValidator);
  attrValidatorMap.put("outputRowsLength",intArrayLoadSaveValidator);
  attrValidatorMap.put("outputRowsPrecision",intArrayLoadSaveValidator);
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  typeValidatorMap.put(int[].class.getCanonicalName(),new PrimitiveIntArrayLoadSaveValidator(new IntLoadSaveValidator(),1));
  loadSaveTester=new LoadSaveTester(TransExecutorMeta.class,attributes,getterMap,setterMap,attrValidatorMap,typeValidatorMap);
}
