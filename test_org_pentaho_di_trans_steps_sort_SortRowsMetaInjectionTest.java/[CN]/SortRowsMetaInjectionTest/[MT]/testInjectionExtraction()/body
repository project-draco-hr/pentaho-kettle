{
  SortRowsMeta meta=populateSortRowsMeta();
  List<StepInjectionMetaEntry> entries=meta.extractStepMetadataEntries();
  assertEquals(7,entries.size());
  SortRowsMeta newMeta=new SortRowsMeta();
  newMeta.getStepMetaInjectionInterface().injectStepMetadataEntries(entries);
  assertEquals(meta.getSortSize(),newMeta.getSortSize());
  assertEquals(meta.getDirectory(),newMeta.getDirectory());
  assertEquals(meta.getPrefix(),newMeta.getPrefix());
  assertEquals(meta.getFreeMemoryLimit(),newMeta.getFreeMemoryLimit());
  assertEquals(meta.isOnlyPassingUniqueRows(),newMeta.isOnlyPassingUniqueRows());
  assertEquals(meta.getCompressFiles(),newMeta.getCompressFiles());
  assertEquals(meta.getFieldName().length,newMeta.getFieldName().length);
  for (int i=0; i < NR_FIELDS; i++) {
    assertEquals(meta.getFieldName()[i],newMeta.getFieldName()[i]);
    assertEquals(meta.getAscending()[i],newMeta.getAscending()[i]);
    assertEquals(meta.getCaseSensitive()[i],newMeta.getCaseSensitive()[i]);
    assertEquals(meta.getPreSortedField()[i],newMeta.getPreSortedField()[i]);
  }
  List<StepInjectionMetaEntry> cmpEntries=newMeta.extractStepMetadataEntries();
  StepInjectionUtil.compareEntryValues(entries,cmpEntries);
}
