{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"JobGetPOP.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(BaseMessages.getString(PKG,"JobGetPOP.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,-margin);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wlServerName=new Label(shell,SWT.RIGHT);
  wlServerName.setText(BaseMessages.getString(PKG,"JobGetPOP.Server.Label"));
  props.setLook(wlServerName);
  fdlServerName=new FormData();
  fdlServerName.left=new FormAttachment(0,0);
  fdlServerName.top=new FormAttachment(wName,margin);
  fdlServerName.right=new FormAttachment(middle,-margin);
  wlServerName.setLayoutData(fdlServerName);
  wServerName=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wServerName);
  wServerName.addModifyListener(lsMod);
  fdServerName=new FormData();
  fdServerName.left=new FormAttachment(middle,0);
  fdServerName.top=new FormAttachment(wName,margin);
  fdServerName.right=new FormAttachment(100,0);
  wServerName.setLayoutData(fdServerName);
  wlUserName=new Label(shell,SWT.RIGHT);
  wlUserName.setText(BaseMessages.getString(PKG,"JobGetPOP.Username.Label"));
  props.setLook(wlUserName);
  fdlUserName=new FormData();
  fdlUserName.left=new FormAttachment(0,0);
  fdlUserName.top=new FormAttachment(wServerName,margin);
  fdlUserName.right=new FormAttachment(middle,-margin);
  wlUserName.setLayoutData(fdlUserName);
  wUserName=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUserName);
  wUserName.setToolTipText(BaseMessages.getString(PKG,"JobGetPOP.Username.Tooltip"));
  wUserName.addModifyListener(lsMod);
  fdUserName=new FormData();
  fdUserName.left=new FormAttachment(middle,0);
  fdUserName.top=new FormAttachment(wServerName,margin);
  fdUserName.right=new FormAttachment(100,0);
  wUserName.setLayoutData(fdUserName);
  wlPassword=new Label(shell,SWT.RIGHT);
  wlPassword.setText(BaseMessages.getString(PKG,"JobGetPOP.Password.Label"));
  props.setLook(wlPassword);
  fdlPassword=new FormData();
  fdlPassword.left=new FormAttachment(0,0);
  fdlPassword.top=new FormAttachment(wUserName,margin);
  fdlPassword.right=new FormAttachment(middle,-margin);
  wlPassword.setLayoutData(fdlPassword);
  wPassword=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wPassword);
  wPassword.setEchoChar('*');
  wPassword.addModifyListener(lsMod);
  fdPassword=new FormData();
  fdPassword.left=new FormAttachment(middle,0);
  fdPassword.top=new FormAttachment(wUserName,margin);
  fdPassword.right=new FormAttachment(100,0);
  wPassword.setLayoutData(fdPassword);
  wPassword.getTextWidget().addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      checkPasswordVisible();
    }
  }
);
  wlUseSSL=new Label(shell,SWT.RIGHT);
  wlUseSSL.setText(BaseMessages.getString(PKG,"JobGetPOP.UseSSLMails.Label"));
  props.setLook(wlUseSSL);
  fdlUseSSL=new FormData();
  fdlUseSSL.left=new FormAttachment(0,0);
  fdlUseSSL.top=new FormAttachment(wPassword,margin);
  fdlUseSSL.right=new FormAttachment(middle,-margin);
  wlUseSSL.setLayoutData(fdlUseSSL);
  wUseSSL=new Button(shell,SWT.CHECK);
  props.setLook(wUseSSL);
  fdUseSSL=new FormData();
  wUseSSL.setToolTipText(BaseMessages.getString(PKG,"JobGetPOP.UseSSLMails.Tooltip"));
  fdUseSSL.left=new FormAttachment(middle,0);
  fdUseSSL.top=new FormAttachment(wPassword,margin);
  fdUseSSL.right=new FormAttachment(100,0);
  wUseSSL.setLayoutData(fdUseSSL);
  wUseSSL.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setPort();
    }
  }
);
  wlSSLPort=new Label(shell,SWT.RIGHT);
  wlSSLPort.setText(BaseMessages.getString(PKG,"JobGetPOP.SSLPort.Label"));
  props.setLook(wlSSLPort);
  fdlSSLPort=new FormData();
  fdlSSLPort.left=new FormAttachment(0,0);
  fdlSSLPort.top=new FormAttachment(wUseSSL,margin);
  fdlSSLPort.right=new FormAttachment(middle,-margin);
  wlSSLPort.setLayoutData(fdlSSLPort);
  wSSLPort=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wSSLPort);
  wSSLPort.setToolTipText(BaseMessages.getString(PKG,"JobGetPOP.SSLPort.Tooltip"));
  wSSLPort.addModifyListener(lsMod);
  fdSSLPort=new FormData();
  fdSSLPort.left=new FormAttachment(middle,0);
  fdSSLPort.top=new FormAttachment(wUseSSL,margin);
  fdSSLPort.right=new FormAttachment(100,0);
  wSSLPort.setLayoutData(fdSSLPort);
  wlOutputDirectory=new Label(shell,SWT.RIGHT);
  wlOutputDirectory.setText(BaseMessages.getString(PKG,"JobGetPOP.OutputDirectory.Label"));
  props.setLook(wlOutputDirectory);
  fdlOutputDirectory=new FormData();
  fdlOutputDirectory.left=new FormAttachment(0,0);
  fdlOutputDirectory.top=new FormAttachment(wSSLPort,margin);
  fdlOutputDirectory.right=new FormAttachment(middle,-margin);
  wlOutputDirectory.setLayoutData(fdlOutputDirectory);
  wOutputDirectory=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wOutputDirectory);
  wOutputDirectory.setToolTipText(BaseMessages.getString(PKG,"JobGetPOP.OutputDirectory.Tooltip"));
  wOutputDirectory.addModifyListener(lsMod);
  fdOutputDirectory=new FormData();
  fdOutputDirectory.left=new FormAttachment(middle,0);
  fdOutputDirectory.top=new FormAttachment(wSSLPort,margin);
  fdOutputDirectory.right=new FormAttachment(100,0);
  wOutputDirectory.setLayoutData(fdOutputDirectory);
  wlFilenamePattern=new Label(shell,SWT.RIGHT);
  wlFilenamePattern.setText(BaseMessages.getString(PKG,"JobGetPOP.FilenamePattern.Label"));
  props.setLook(wlFilenamePattern);
  fdlFilenamePattern=new FormData();
  fdlFilenamePattern.left=new FormAttachment(0,0);
  fdlFilenamePattern.top=new FormAttachment(wOutputDirectory,margin);
  fdlFilenamePattern.right=new FormAttachment(middle,-margin);
  wlFilenamePattern.setLayoutData(fdlFilenamePattern);
  wFilenamePattern=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilenamePattern);
  wFilenamePattern.setToolTipText(BaseMessages.getString(PKG,"JobGetPOP.FilenamePattern.Tooltip"));
  wFilenamePattern.addModifyListener(lsMod);
  fdFilenamePattern=new FormData();
  fdFilenamePattern.left=new FormAttachment(middle,0);
  fdFilenamePattern.top=new FormAttachment(wOutputDirectory,margin);
  fdFilenamePattern.right=new FormAttachment(100,0);
  wFilenamePattern.setLayoutData(fdFilenamePattern);
  wFilenamePattern.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilenamePattern.setToolTipText(jobMeta.environmentSubstitute(wFilenamePattern.getText()));
    }
  }
);
  wlListmails=new Label(shell,SWT.RIGHT);
  wlListmails.setText(BaseMessages.getString(PKG,"JobGetPOP.Listmails.Label"));
  props.setLook(wlListmails);
  fdlListmails=new FormData();
  fdlListmails.left=new FormAttachment(0,0);
  fdlListmails.right=new FormAttachment(middle,0);
  fdlListmails.top=new FormAttachment(wFilenamePattern,margin);
  wlListmails.setLayoutData(fdlListmails);
  wListmails=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wListmails.add(BaseMessages.getString(PKG,"JobGetPOP.RetrieveAllMails.Label"));
  wListmails.add(BaseMessages.getString(PKG,"JobGetPOP.RetrieveUnreadMails.Label"));
  wListmails.add(BaseMessages.getString(PKG,"JobGetPOP.RetrieveFirstMails.Label"));
  wListmails.select(0);
  props.setLook(wListmails);
  fdListmails=new FormData();
  fdListmails.left=new FormAttachment(middle,0);
  fdListmails.top=new FormAttachment(wFilenamePattern,margin);
  fdListmails.right=new FormAttachment(100,0);
  wListmails.setLayoutData(fdListmails);
  wListmails.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      ChooseListMails();
    }
  }
);
  wlFirstmails=new Label(shell,SWT.RIGHT);
  wlFirstmails.setText(BaseMessages.getString(PKG,"JobGetPOP.Firstmails.Label"));
  props.setLook(wlFirstmails);
  fdlFirstmails=new FormData();
  fdlFirstmails.left=new FormAttachment(0,0);
  fdlFirstmails.right=new FormAttachment(middle,0);
  fdlFirstmails.top=new FormAttachment(wListmails,margin);
  wlFirstmails.setLayoutData(fdlFirstmails);
  wFirstmails=new TextVar(jobMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFirstmails);
  wFirstmails.addModifyListener(lsMod);
  fdFirstmails=new FormData();
  fdFirstmails.left=new FormAttachment(middle,0);
  fdFirstmails.top=new FormAttachment(wListmails,margin);
  fdFirstmails.right=new FormAttachment(100,0);
  wFirstmails.setLayoutData(fdFirstmails);
  wlDelete=new Label(shell,SWT.RIGHT);
  wlDelete.setText(BaseMessages.getString(PKG,"JobGetPOP.DeleteMails.Label"));
  props.setLook(wlDelete);
  fdlDelete=new FormData();
  fdlDelete.left=new FormAttachment(0,0);
  fdlDelete.top=new FormAttachment(wFirstmails,margin);
  fdlDelete.right=new FormAttachment(middle,-margin);
  wlDelete.setLayoutData(fdlDelete);
  wDelete=new Button(shell,SWT.CHECK);
  props.setLook(wDelete);
  fdDelete=new FormData();
  wDelete.setToolTipText(BaseMessages.getString(PKG,"JobGetPOP.DeleteMails.Tooltip"));
  fdDelete.left=new FormAttachment(middle,0);
  fdDelete.top=new FormAttachment(wFirstmails,margin);
  fdDelete.right=new FormAttachment(100,0);
  wDelete.setLayoutData(fdDelete);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wDelete);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wServerName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  setPort();
  ChooseListMails();
  BaseStepDialog.setSize(shell);
  shell.open();
  props.setDialogSize(shell,"JobFileExistsDialogSize");
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
