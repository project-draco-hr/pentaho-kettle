{
  try {
    XulLoader loader=new SwtXulLoader();
    ResourceBundle bundle=GlobalMessages.getBundle(LanguageChoice.getInstance().getDefaultLocale(),"org/pentaho/di/ui/spoon/messages/messages");
    XulDomContainer xulDomContainer=loader.loadXul(XUL_FILE_TRANS_TOOLBAR,bundle);
    xulDomContainer.addEventHandler(this);
    toolbar=(XulToolbar)xulDomContainer.getDocumentRoot().getElementById("nav-toolbar");
    ToolBar swtToolbar=(ToolBar)toolbar.getManagedObject();
    swtToolbar.pack();
    ToolItem sep=new ToolItem(swtToolbar,SWT.SEPARATOR);
    zoomLabel=new Combo(swtToolbar,SWT.DROP_DOWN);
    zoomLabel.setItems(TransPainter.magnificationDescriptions);
    zoomLabel.addSelectionListener(new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent arg0){
        readMagnification();
      }
    }
);
    zoomLabel.addKeyListener(new KeyAdapter(){
      public void keyPressed(      KeyEvent event){
        if (event.character == SWT.CR) {
          readMagnification();
        }
      }
    }
);
    setZoomLabel();
    zoomLabel.pack();
    sep.setWidth(80);
    sep.setControl(zoomLabel);
    swtToolbar.pack();
  }
 catch (  Throwable t) {
    log.logError(toString(),Const.getStackTracker(t));
    new ErrorDialog(shell,BaseMessages.getString(PKG,"Spoon.Exception.ErrorReadingXULFile.Title"),BaseMessages.getString(PKG,"Spoon.Exception.ErrorReadingXULFile.Message",XUL_FILE_TRANS_TOOLBAR),new Exception(t));
  }
}
