{
  try {
    toolbar=XulHelper.createToolbar(XUL_FILE_TRANS_TOOLBAR,TransGraph.this,TransGraph.this,new XulMessages());
    ToolBar toolBar=(ToolBar)toolbar.getNativeObject();
    toolBar.pack();
    ToolItem sep=new ToolItem(toolBar,SWT.SEPARATOR);
    zoomLabel=new Combo(toolBar,SWT.DROP_DOWN);
    zoomLabel.setItems(TransPainter.magnificationDescriptions);
    zoomLabel.addSelectionListener(new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent arg0){
        readMagnification();
      }
    }
);
    zoomLabel.addKeyListener(new KeyAdapter(){
      public void keyPressed(      KeyEvent event){
        if (event.character == SWT.CR) {
          readMagnification();
        }
      }
    }
);
    setZoomLabel();
    zoomLabel.pack();
    sep.setWidth(80);
    sep.setControl(zoomLabel);
    toolBar.pack();
    toolBar.addKeyListener(spoon.defKeys);
    addToolBarListeners();
    toolBar.layout(true,true);
  }
 catch (  Throwable t) {
    log.logError(toString(),Const.getStackTracker(t));
    new ErrorDialog(shell,Messages.getString("Spoon.Exception.ErrorReadingXULFile.Title"),Messages.getString("Spoon.Exception.ErrorReadingXULFile.Message",XUL_FILE_TRANS_TOOLBAR),new Exception(t));
  }
}
