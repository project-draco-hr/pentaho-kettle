{
  boolean shift=(e.stateMask & SWT.SHIFT) != 0;
  noInputStep=null;
  toolTip.hide();
  lastMove=new Point(e.x,e.y);
  Point real=screen2real(e.x,e.y);
  if (iconoffset == null) {
    iconoffset=new Point(0,0);
  }
  Point icon=new Point(real.x - iconoffset.x,real.y - iconoffset.y);
  if (noteoffset == null) {
    noteoffset=new Point(0,0);
  }
  Point note=new Point(real.x - noteoffset.x,real.y - noteoffset.y);
  if (last_button == 0 && !helpTip.isVisible()) {
    setToolTip(real.x,real.y,e.x,e.y);
  }
  if (selectedStep != null && !selectedStep.isSelected()) {
    transMeta.unselectAll();
    selectedStep.setSelected(true);
    selectedSteps=new StepMeta[]{selectedStep};
    previous_step_locations=new Point[]{selectedStep.getLocation()};
    redraw();
  }
 else   if (selectedNote != null && !selectedNote.isSelected()) {
    transMeta.unselectAll();
    selectedNote.setSelected(true);
    selectedNotes=new NotePadMeta[]{selectedNote};
    previous_note_locations=new Point[]{selectedNote.getLocation()};
    redraw();
  }
 else   if (selectionRegion != null && startHopStep == null) {
    selectionRegion.width=real.x - selectionRegion.x;
    selectionRegion.height=real.y - selectionRegion.y;
    redraw();
  }
 else   if (selectedStep != null && last_button == 1 && !shift && startHopStep == null) {
    int dx=icon.x - selectedStep.getLocation().x;
    int dy=icon.y - selectedStep.getLocation().y;
    TransHopMeta hi=findHop(icon.x + iconsize / 2,icon.y + iconsize / 2,selectedStep);
    if (hi != null) {
      if (!hi.getFromStep().equals(selectedStep) && !hi.getToStep().equals(selectedStep)) {
        split_hop=true;
        last_hop_split=hi;
        hi.split=true;
      }
    }
 else {
      if (last_hop_split != null) {
        last_hop_split.split=false;
        last_hop_split=null;
        split_hop=false;
      }
    }
    selectedNotes=transMeta.getSelectedNotes();
    selectedSteps=transMeta.getSelectedSteps();
    if (selectedSteps != null) {
      for (int i=0; i < selectedSteps.length; i++) {
        StepMeta stepMeta=selectedSteps[i];
        PropsUI.setLocation(stepMeta,stepMeta.getLocation().x + dx,stepMeta.getLocation().y + dy);
      }
    }
    if (selectedNotes != null) {
      for (int i=0; i < selectedNotes.length; i++) {
        NotePadMeta ni=selectedNotes[i];
        PropsUI.setLocation(ni,ni.getLocation().x + dx,ni.getLocation().y + dy);
      }
    }
    redraw();
  }
 else   if (startHopStep != null) {
    StepMeta stepMeta=transMeta.getStep(real.x,real.y,iconsize);
    endHopLocation=new Point(real.x,real.y);
    if (stepMeta != null && !startHopStep.equals(stepMeta)) {
      StepIOMetaInterface ioMeta=stepMeta.getStepMetaInterface().getStepIOMeta();
      if (candidate == null) {
        if (ioMeta.isInputAcceptor()) {
          candidate=new TransHopMeta(startHopStep,stepMeta);
          endHopLocation=null;
        }
 else {
          noInputStep=stepMeta;
          toolTip.setImage(null);
          toolTip.setText("This step does not accept any input from other steps");
          toolTip.show(new org.eclipse.swt.graphics.Point(real.x,real.y));
        }
      }
    }
 else {
      if (candidate != null) {
        candidate=null;
        redraw();
      }
 else {
        if (!showHopInputIcons) {
          showHopInputIcons=true;
        }
      }
    }
    redraw();
  }
 else {
    showHopInputIcons=false;
    redraw();
  }
  if (selectedNote != null) {
    if (last_button == 1 && !shift) {
      int dx=note.x - selectedNote.getLocation().x;
      int dy=note.y - selectedNote.getLocation().y;
      selectedNotes=transMeta.getSelectedNotes();
      selectedSteps=transMeta.getSelectedSteps();
      if (selectedSteps != null)       for (int i=0; i < selectedSteps.length; i++) {
        StepMeta stepMeta=selectedSteps[i];
        PropsUI.setLocation(stepMeta,stepMeta.getLocation().x + dx,stepMeta.getLocation().y + dy);
      }
      if (selectedNotes != null)       for (int i=0; i < selectedNotes.length; i++) {
        NotePadMeta ni=selectedNotes[i];
        PropsUI.setLocation(ni,ni.getLocation().x + dx,ni.getLocation().y + dy);
      }
      redraw();
    }
  }
}
