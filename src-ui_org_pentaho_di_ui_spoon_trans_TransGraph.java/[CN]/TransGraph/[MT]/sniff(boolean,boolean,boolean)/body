{
  StepMeta stepMeta=getCurrentStep();
  if (stepMeta == null || trans == null) {
    return;
  }
  final StepInterface runThread=trans.findRunThread(stepMeta.getName());
  if (runThread != null) {
    List<Object[]> rows=new ArrayList<Object[]>();
    final PreviewRowsDialog dialog=new PreviewRowsDialog(shell,trans,SWT.NONE,stepMeta.getName(),null,rows);
    dialog.setDynamic(true);
    final RowListener rowListener=new RowListener(){
      public void rowReadEvent(      RowMetaInterface rowMeta,      Object[] row) throws KettleStepException {
        if (input) {
          try {
            dialog.addDataRow(rowMeta,rowMeta.cloneRow(row));
          }
 catch (          KettleValueException e) {
            throw new KettleStepException(e);
          }
        }
      }
      public void rowWrittenEvent(      RowMetaInterface rowMeta,      Object[] row) throws KettleStepException {
        if (output) {
          try {
            dialog.addDataRow(rowMeta,rowMeta.cloneRow(row));
          }
 catch (          KettleValueException e) {
            throw new KettleStepException(e);
          }
        }
      }
      public void errorRowWrittenEvent(      RowMetaInterface rowMeta,      Object[] row) throws KettleStepException {
        if (error) {
          try {
            dialog.addDataRow(rowMeta,rowMeta.cloneRow(row));
          }
 catch (          KettleValueException e) {
            throw new KettleStepException(e);
          }
        }
      }
    }
;
    dialog.addDialogClosedListener(new DialogClosedListener(){
      public void dialogClosed(){
        runThread.removeRowListener(rowListener);
      }
    }
);
    getDisplay().asyncExec(new Runnable(){
      public void run(){
        dialog.open();
      }
    }
);
    runThread.addRowListener(rowListener);
  }
}
