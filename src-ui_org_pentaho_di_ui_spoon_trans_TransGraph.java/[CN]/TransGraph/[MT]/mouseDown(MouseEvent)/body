{
  boolean alt=(e.stateMask & SWT.ALT) != 0;
  boolean control=(e.stateMask & SWT.CONTROL) != 0;
  boolean shift=(e.stateMask & SWT.SHIFT) != 0;
  last_button=e.button;
  Point real=screen2real(e.x,e.y);
  lastclick=new Point(real.x,real.y);
  hideToolTips();
  if (e.button == 3) {
    setMenu(real.x,real.y);
    return;
  }
  if (e.button == 1) {
    AreaOwner areaOwner=getVisibleAreaOwner(real.x,real.y);
    if (areaOwner != null) {
switch (areaOwner.getAreaType()) {
case STEP_OUTPUT_HOP_ICON:
        showHopInputIcons=true;
      selectedStep=null;
    startHopStep=(StepMeta)areaOwner.getParent();
  candidateHopType=null;
startErrorHopStep=false;
startTargetHopStream=null;
break;
case STEP_INFO_HOP_ICON:
if (startHopStep != null) {
StepMeta stepMeta=(StepMeta)areaOwner.getParent();
StreamInterface stream=(StreamInterface)areaOwner.getOwner();
candidate=new TransHopMeta(startHopStep,stepMeta);
stream.setStepMeta(startHopStep);
}
startHopStep=null;
break;
case STEP_INPUT_HOP_ICON:
if (startHopStep != null) {
StepMeta stepMeta=(StepMeta)areaOwner.getParent();
candidate=new TransHopMeta(startHopStep,stepMeta);
}
break;
case STEP_ERROR_HOP_ICON:
if (startHopStep == null) {
startHopStep=(StepMeta)areaOwner.getParent();
startErrorHopStep=true;
}
break;
case STEP_TARGET_HOP_ICON:
if (startHopStep == null) {
startHopStep=(StepMeta)areaOwner.getParent();
startTargetHopStream=(StreamInterface)areaOwner.getOwner();
}
break;
default :
startHopStep=null;
}
}
}
if (candidate != null) {
addCandidateAsHop();
}
StepMeta stepMeta=transMeta.getStep(real.x,real.y,iconsize);
if (stepMeta != null) {
if (e.button == 1 && alt && stepMeta.supportsErrorHandling()) {
spoon.editStepErrorHandling(transMeta,stepMeta);
return;
}
 else if (e.button == 2 || (e.button == 1 && shift)) {
startHopStep=stepMeta;
}
 else {
selectedSteps=transMeta.getSelectedSteps();
selectedStep=stepMeta;
previous_step_locations=transMeta.getSelectedStepLocations();
Point p=stepMeta.getLocation();
iconoffset=new Point(real.x - p.x,real.y - p.y);
}
}
 else {
NotePadMeta ni=transMeta.getNote(real.x,real.y);
if (ni != null && last_button == 1) {
selectedNotes=transMeta.getSelectedNotes();
selectedNote=ni;
Point loc=ni.getLocation();
previous_note_locations=transMeta.getSelectedNoteLocations();
noteoffset=new Point(real.x - loc.x,real.y - loc.y);
}
 else {
if (!control) selectionRegion=new Rectangle(real.x,real.y,0,0);
}
}
redraw();
}
