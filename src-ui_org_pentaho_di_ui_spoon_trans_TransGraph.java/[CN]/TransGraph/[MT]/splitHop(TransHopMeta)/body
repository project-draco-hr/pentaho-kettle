{
  int id=0;
  if (!spoon.props.getAutoSplit()) {
    MessageDialogWithToggle md=new MessageDialogWithToggle(shell,BaseMessages.getString(PKG,"TransGraph.Dialog.SplitHop.Title"),null,BaseMessages.getString(PKG,"TransGraph.Dialog.SplitHop.Message") + Const.CR + hi.toString(),MessageDialog.QUESTION,new String[]{BaseMessages.getString(PKG,"System.Button.Yes"),BaseMessages.getString(PKG,"System.Button.No")},0,BaseMessages.getString(PKG,"TransGraph.Dialog.Option.SplitHop.DoNotAskAgain"),spoon.props.getAutoSplit());
    MessageDialogWithToggle.setDefaultImage(GUIResource.getInstance().getImageSpoon());
    id=md.open();
    spoon.props.setAutoSplit(md.getToggleState());
  }
  if ((id & 0xFF) == 0) {
    boolean caExists=transMeta.findTransHop(selectedStep,hi.getFromStep()) != null;
    boolean bcExists=transMeta.findTransHop(hi.getToStep(),selectedStep) != null;
    if (!caExists && !bcExists) {
      StepMeta fromStep=hi.getFromStep();
      StepMeta toStep=hi.getToStep();
      StepIOMetaInterface fromIo=fromStep.getStepMetaInterface().getStepIOMeta();
      for (      StreamInterface stream : fromIo.getTargetStreams()) {
        if (stream.getStepMeta() != null && stream.getStepMeta().equals(toStep)) {
          stream.setStepMeta(selectedStep);
          fromStep.getStepMetaInterface().handleStreamSelection(stream);
        }
      }
      StepIOMetaInterface toIo=toStep.getStepMetaInterface().getStepIOMeta();
      for (      StreamInterface stream : toIo.getInfoStreams()) {
        if (stream.getStepMeta() != null && stream.getStepMeta().equals(fromStep)) {
          stream.setStepMeta(selectedStep);
          toStep.getStepMetaInterface().handleStreamSelection(stream);
        }
      }
      StepErrorMeta errorMeta=fromStep.getStepErrorMeta();
      if (fromStep.isDoingErrorHandling() && toStep.equals(errorMeta.getTargetStep())) {
        errorMeta.setTargetStep(selectedStep);
      }
      TransHopMeta newhop1=new TransHopMeta(hi.getFromStep(),selectedStep);
      transMeta.addTransHop(newhop1);
      TransHopMeta newhop2=new TransHopMeta(selectedStep,hi.getToStep());
      transMeta.addTransHop(newhop2);
      spoon.addUndoNew(transMeta,new TransHopMeta[]{newhop1,newhop2},new int[]{transMeta.indexOfTransHop(newhop1),transMeta.indexOfTransHop(newhop2)},true);
      int idx=transMeta.indexOfTransHop(hi);
      spoon.addUndoDelete(transMeta,new TransHopMeta[]{hi},new int[]{idx},true);
      transMeta.removeTransHop(idx);
      spoon.refreshTree();
    }
 else {
    }
  }
}
