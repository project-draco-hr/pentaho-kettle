{
  List<StepMeta> list=transMeta.getSelectedSteps();
  for (int i=0; i < transMeta.nrTransHops(); i++) {
    TransHopMeta hop=transMeta.getTransHop(i);
    if (list.contains(hop.getFromStep()) && list.contains(hop.getToStep())) {
      TransHopMeta before=(TransHopMeta)hop.clone();
      hop.setEnabled(enabled);
      TransHopMeta after=(TransHopMeta)hop.clone();
      spoon.addUndoChange(transMeta,new TransHopMeta[]{before},new TransHopMeta[]{after},new int[]{transMeta.indexOfTransHop(hop)});
    }
  }
  spoon.refreshGraph();
}
