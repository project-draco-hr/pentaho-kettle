{
  if (!spoon.getProperties().showToolTips())   return;
  canvas.setToolTipText("");
  canvas.setToolTipText(null);
  String newTip=null;
  Image tipImage=null;
  final StepMeta stepMeta=transMeta.getStep(x,y,iconsize);
  if (stepMeta != null) {
    mouseOverStep=stepMeta;
    redraw();
  }
 else {
    mouseOverStep=null;
  }
  final TransHopMeta hi=findHop(x,y);
  StringBuffer tip=new StringBuffer();
  for (  AreaOwner areaOwner : areaOwners) {
    if (areaOwner.contains(x,y)) {
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_REMOTE_INPUT_STEPS)) {
        StepMeta step=(StepMeta)areaOwner.getParent();
        tip.append("Remote input steps:").append(Const.CR).append("-----------------------").append(Const.CR);
        for (        RemoteStep remoteStep : step.getRemoteInputSteps()) {
          tip.append(remoteStep.toString()).append(Const.CR);
        }
      }
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_REMOTE_OUTPUT_STEPS)) {
        StepMeta step=(StepMeta)areaOwner.getParent();
        tip.append("Remote output steps:").append(Const.CR).append("-----------------------").append(Const.CR);
        for (        RemoteStep remoteStep : step.getRemoteOutputSteps()) {
          tip.append(remoteStep.toString()).append(Const.CR);
        }
      }
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_PARTITIONING_CURRENT_STEP)) {
        StepMeta step=(StepMeta)areaOwner.getParent();
        tip.append("Step partitioning:").append(Const.CR).append("-----------------------").append(Const.CR);
        tip.append(step.getStepPartitioningMeta().toString()).append(Const.CR);
        if (step.getTargetStepPartitioningMeta() != null) {
          tip.append(Const.CR).append(Const.CR).append("TARGET: " + step.getTargetStepPartitioningMeta().toString()).append(Const.CR);
        }
      }
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_PARTITIONING_CURRENT_NEXT)) {
        StepMeta step=(StepMeta)areaOwner.getParent();
        tip.append("Target partitioning:").append(Const.CR).append("-----------------------").append(Const.CR);
        tip.append(step.getStepPartitioningMeta().toString()).append(Const.CR);
      }
      if (areaOwner.getParent() instanceof String && areaOwner.getOwner().equals(TransPainter.STRING_STEP_ERROR_LOG)) {
        String log=(String)areaOwner.getParent();
        tip.append(log);
        tipImage=GUIResource.getInstance().getImageStepError();
      }
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_HOP_TYPE_COPY)) {
        StepMeta step=(StepMeta)areaOwner.getParent();
        tip.append(BaseMessages.getString(PKG,"TransGraph.Hop.Tooltip.HopTypeCopy",step.getName(),Const.CR));
        tipImage=GUIResource.getInstance().getImageCopyHop();
      }
      if (areaOwner.getParent() instanceof StepMeta[] && areaOwner.getOwner().equals(TransPainter.STRING_HOP_TYPE_INFO)) {
        StepMeta from=((StepMeta[])(areaOwner.getParent()))[0];
        StepMeta to=((StepMeta[])(areaOwner.getParent()))[1];
        tip.append(BaseMessages.getString(PKG,"TransGraph.Hop.Tooltip.HopTypeInfo",to.getName(),from.getName(),Const.CR));
        tipImage=GUIResource.getInstance().getImageInfoHop();
      }
      if (areaOwner.getParent() instanceof StepMeta[] && areaOwner.getOwner().equals(TransPainter.STRING_HOP_TYPE_ERROR)) {
        StepMeta from=((StepMeta[])(areaOwner.getParent()))[0];
        StepMeta to=((StepMeta[])(areaOwner.getParent()))[1];
        tip.append(BaseMessages.getString(PKG,"TransGraph.Hop.Tooltip.HopTypeError",from.getName(),to.getName(),Const.CR));
        tipImage=GUIResource.getInstance().getImageErrorHop();
      }
      if (areaOwner.getParent() instanceof StepMeta[] && areaOwner.getOwner().equals(TransPainter.STRING_INFO_STEP_COPIES)) {
        StepMeta from=((StepMeta[])(areaOwner.getParent()))[0];
        StepMeta to=((StepMeta[])(areaOwner.getParent()))[1];
        tip.append(BaseMessages.getString(PKG,"TransGraph.Hop.Tooltip.InfoStepCopies",from.getName(),to.getName(),Const.CR));
        tipImage=GUIResource.getInstance().getImageStepError();
      }
      if (areaOwner.getParent() instanceof TransMeta && areaOwner.getOwner() instanceof RepositoryLock) {
        RepositoryLock lock=(RepositoryLock)areaOwner.getOwner();
        tip.append(BaseMessages.getString(PKG,"TransGraph.Locked.Tooltip",Const.CR,lock.getLogin(),lock.getUsername(),lock.getMessage(),XMLHandler.date2string(lock.getLockDate())));
        tipImage=GUIResource.getInstance().getImageLocked();
      }
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_INPUT_HOP_ICON)) {
        StepMeta subjectStep=(StepMeta)(areaOwner.getParent());
        tip.append("INPUT HOP ICON FOR STEP '" + subjectStep.getName() + "'");
        tipImage=GUIResource.getInstance().getImageHopInput();
      }
      if (areaOwner.getParent() instanceof StepMeta && areaOwner.getOwner().equals(TransPainter.STRING_OUTPUT_HOP_ICON)) {
        StepMeta subjectStep=(StepMeta)(areaOwner.getParent());
        tip.append("OUTPUT HOP ICON FOR STEP '" + subjectStep.getName() + "'");
        tipImage=GUIResource.getInstance().getImageHopOutput();
      }
    }
  }
  if (hi != null) {
    tip.append(Const.CR).append("Hop information: ").append(newTip=hi.toString()).append(Const.CR);
  }
  if (tip.length() == 0) {
    newTip=null;
  }
 else {
    newTip=tip.toString();
  }
  if (newTip == null) {
    toolTip.hide();
    if (hi != null) {
      newTip=BaseMessages.getString(PKG,"TransGraph.Dialog.HopInfo") + Const.CR + BaseMessages.getString(PKG,"TransGraph.Dialog.HopInfo.SourceStep")+ " "+ hi.getFromStep().getName()+ Const.CR+ BaseMessages.getString(PKG,"TransGraph.Dialog.HopInfo.TargetStep")+ " "+ hi.getToStep().getName()+ Const.CR+ BaseMessages.getString(PKG,"TransGraph.Dialog.HopInfo.Status")+ " "+ (hi.isEnabled() ? BaseMessages.getString(PKG,"TransGraph.Dialog.HopInfo.Enable") : BaseMessages.getString(PKG,"TransGraph.Dialog.HopInfo.Disable"));
      toolTip.setText(newTip);
      if (hi.isEnabled())       toolTip.setImage(GUIResource.getInstance().getImageHop());
 else       toolTip.setImage(GUIResource.getInstance().getImageDisabledHop());
      toolTip.show(new org.eclipse.swt.graphics.Point(screenX,screenY));
    }
 else {
      newTip=null;
    }
  }
 else   if (!newTip.equalsIgnoreCase(getToolTipText())) {
    if (tipImage != null) {
      toolTip.setImage(tipImage);
    }
 else {
      toolTip.setImage(GUIResource.getInstance().getImageSpoon());
    }
    toolTip.setText(newTip);
    toolTip.hide();
    toolTip.show(new org.eclipse.swt.graphics.Point(screenX,screenY));
  }
}
