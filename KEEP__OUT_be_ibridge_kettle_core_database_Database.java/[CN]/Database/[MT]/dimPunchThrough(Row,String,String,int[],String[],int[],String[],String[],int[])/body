{
  boolean first=false;
  String schemaTable=databaseMeta.getQuotedSchemaTableCombination(schemaName,tableName);
  if (pstmt_pun == null) {
    String sql_upd="UPDATE " + schemaTable + Const.CR;
    sql_upd+="SET ";
    first=true;
    for (int i=0; i < fieldlookup.length; i++) {
      if (fieldupdate[i] == DimensionLookupMeta.TYPE_UPDATE_DIM_PUNCHTHROUGH) {
        if (!first)         sql_upd+=", ";
 else         sql_upd+="  ";
        first=false;
        sql_upd+=fieldlookup[i] + " = ?" + Const.CR;
      }
    }
    sql_upd+="WHERE ";
    for (int i=0; i < keylookup.length; i++) {
      if (i > 0)       sql_upd+="AND   ";
      sql_upd+=keylookup[i] + " = ?" + Const.CR;
    }
    try {
      pstmt_pun=connection.prepareStatement(databaseMeta.stripCR(sql_upd));
    }
 catch (    SQLException ex) {
      throw new KettleDatabaseException("Unable to prepare dimension punchThrough update statement : " + Const.CR + sql_upd,ex);
    }
  }
  Row rupd=new Row();
  for (int i=0; i < fieldlookup.length; i++) {
    if (fieldupdate[i] == DimensionLookupMeta.TYPE_UPDATE_DIM_PUNCHTHROUGH) {
      rupd.addValue(row.getValue(fieldnrs[i]));
    }
  }
  for (int i=0; i < keynrs.length; i++) {
    rupd.addValue(row.getValue(keynrs[i]));
  }
  setValues(rupd,pstmt_pun);
  insertRow(pstmt_pun);
}
