{
  String retval="";
  Row tabFields=getTableFields(tableName);
  databaseMeta.quoteReservedWords(tabFields);
  Row missing=new Row();
  for (int i=0; i < fields.size(); i++) {
    Value v=fields.getValue(i);
    if (tabFields.searchValue(v.getName()) == null) {
      missing.addValue(v);
    }
  }
  if (missing.size() != 0) {
    for (int i=0; i < missing.size(); i++) {
      Value v=missing.getValue(i);
      retval+=databaseMeta.getAddColumnStatement(tableName,v,tk,use_autoinc,pk,true);
    }
  }
  Row surplus=new Row();
  for (int i=0; i < tabFields.size(); i++) {
    Value v=tabFields.getValue(i);
    if (fields.searchValue(v.getName()) == null) {
      surplus.addValue(v);
    }
  }
  if (surplus.size() != 0) {
    for (int i=0; i < surplus.size(); i++) {
      Value v=surplus.getValue(i);
      retval+=databaseMeta.getDropColumnStatement(tableName,v,tk,use_autoinc,pk,true);
    }
  }
  Row modify=new Row();
  for (int i=0; i < fields.size(); i++) {
    Value desiredField=fields.getValue(i);
    Value currentField=tabFields.searchValue(desiredField.getName());
    if (currentField != null) {
      boolean mod=false;
      mod|=(currentField.getLength() < desiredField.getLength()) && desiredField.getLength() > 0;
      mod|=(currentField.getPrecision() < desiredField.getPrecision()) && desiredField.getPrecision() > 0;
      mod|=(currentField.getType() != desiredField.getType()) && (currentField.isNumber() ^ desiredField.isNumeric());
      if (mod) {
        modify.addValue(desiredField);
      }
    }
  }
  if (modify.size() > 0) {
    for (int i=0; i < modify.size(); i++) {
      Value v=modify.getValue(i);
      retval+=databaseMeta.getModifyColumnStatement(tableName,v,tk,use_autoinc,pk,true);
    }
  }
  return retval;
}
