{
  StringBuffer retval=new StringBuffer(300);
  retval.append(super.getXML());
  retval.append("      ").append(XMLHandler.addTagValue("server",this.server));
  retval.append("      ").append(XMLHandler.addTagValue("port",this.port));
  retval.append("      ").append(XMLHandler.addTagValue("destination",this.destination));
  retval.append("      ").append(XMLHandler.addTagValue("destinationCc",this.destinationCc));
  retval.append("      ").append(XMLHandler.addTagValue("destinationBCc",this.destinationBCc));
  retval.append("      ").append(XMLHandler.addTagValue("replyToAddresses",this.replyToAddresses));
  retval.append("      ").append(XMLHandler.addTagValue("replyto",this.replyAddress));
  retval.append("      ").append(XMLHandler.addTagValue("replytoname",this.replyName));
  retval.append("      ").append(XMLHandler.addTagValue("subject",this.subject));
  retval.append("      ").append(XMLHandler.addTagValue("include_date",this.includeDate));
  retval.append("      ").append(XMLHandler.addTagValue("include_subfolders",this.includeSubFolders));
  retval.append("      ").append(XMLHandler.addTagValue("zipFilenameDynamic",this.zipFilenameDynamic));
  retval.append("      ").append(XMLHandler.addTagValue("isFilenameDynamic",this.isFilenameDynamic));
  retval.append("      ").append(XMLHandler.addTagValue("dynamicFieldname",this.dynamicFieldname));
  retval.append("      ").append(XMLHandler.addTagValue("dynamicWildcard",this.dynamicWildcard));
  retval.append("      ").append(XMLHandler.addTagValue("dynamicZipFilename",this.dynamicZipFilename));
  retval.append("      ").append(XMLHandler.addTagValue("sourcefilefoldername",this.sourcefilefoldername));
  retval.append("      ").append(XMLHandler.addTagValue("sourcewildcard",this.sourcewildcard));
  retval.append("      ").append(XMLHandler.addTagValue("contact_person",this.contactPerson));
  retval.append("      ").append(XMLHandler.addTagValue("contact_phone",this.contactPhone));
  retval.append("      ").append(XMLHandler.addTagValue("comment",this.comment));
  retval.append("      ").append(XMLHandler.addTagValue("include_files",this.includingFiles));
  retval.append("      ").append(XMLHandler.addTagValue("zip_files",this.zipFiles));
  retval.append("      ").append(XMLHandler.addTagValue("zip_name",this.zipFilename));
  retval.append("      ").append(XMLHandler.addTagValue("zip_limit_size",this.ziplimitsize));
  retval.append("      ").append(XMLHandler.addTagValue("use_auth",this.usingAuthentication));
  retval.append("      ").append(XMLHandler.addTagValue("use_secure_auth",this.usingSecureAuthentication));
  retval.append("      ").append(XMLHandler.addTagValue("auth_user",this.authenticationUser));
  retval.append("      ").append(XMLHandler.addTagValue("auth_password",Encr.encryptPasswordIfNotUsingVariables(this.authenticationPassword)));
  retval.append("      ").append(XMLHandler.addTagValue("only_comment",this.onlySendComment));
  retval.append("      ").append(XMLHandler.addTagValue("use_HTML",this.useHTML));
  retval.append("      ").append(XMLHandler.addTagValue("use_Priority",this.usePriority));
  retval.append("    " + XMLHandler.addTagValue("encoding",this.encoding));
  retval.append("    " + XMLHandler.addTagValue("priority",this.priority));
  retval.append("    " + XMLHandler.addTagValue("importance",this.importance));
  retval.append("    " + XMLHandler.addTagValue("secureconnectiontype",this.secureconnectiontype));
  retval.append("      <embeddedimages>").append(Const.CR);
  if (embeddedimages != null) {
    for (int i=0; i < embeddedimages.length; i++) {
      retval.append("        <embeddedimage>").append(Const.CR);
      retval.append("          ").append(XMLHandler.addTagValue("image_name",embeddedimages[i]));
      retval.append("          ").append(XMLHandler.addTagValue("content_id",contentids[i]));
      retval.append("        </embeddedimage>").append(Const.CR);
    }
  }
  retval.append("      </embeddedimages>").append(Const.CR);
  return retval.toString();
}
