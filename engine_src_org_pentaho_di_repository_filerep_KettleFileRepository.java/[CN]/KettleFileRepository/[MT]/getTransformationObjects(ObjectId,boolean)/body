{
  try {
    List<RepositoryElementMetaInterface> list=new ArrayList<RepositoryElementMetaInterface>();
    RepositoryDirectoryInterface tree=loadRepositoryDirectoryTree();
    RepositoryDirectoryInterface directory=tree.findDirectory(idDirectory);
    String folderName=calcDirectoryName(directory);
    FileObject folder=KettleVFS.getFileObject(folderName);
    for (    FileObject child : folder.getChildren()) {
      if (child.getType().equals(FileType.FILE)) {
        if (!child.isHidden() || !repositoryMeta.isHidingHiddenFiles()) {
          String name=child.getName().getBaseName();
          if (name.endsWith(EXT_TRANSFORMATION)) {
            String transName=name.substring(0,name.length() - 4);
            ObjectId id=new StringObjectId(calcObjectId(directory,transName,EXT_TRANSFORMATION));
            Date date=new Date(child.getContent().getLastModifiedTime());
            list.add(new RepositoryObject(id,transName,directory,"-",date,RepositoryObjectType.TRANSFORMATION,"",false));
          }
        }
      }
    }
    return list;
  }
 catch (  Exception e) {
    throw new KettleException("Unable to get list of transformations in folder with id : " + idDirectory,e);
  }
}
