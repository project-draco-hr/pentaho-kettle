{
  SQLStatement retval=new SQLStatement(stepMeta.getName(),databaseMeta,null);
  if (databaseMeta != null) {
    if (prev != null && prev.size() > 0) {
      RowMetaInterface tableFields=new RowMeta();
      if (keyLookup != null) {
        for (int i=0; i < keyLookup.length; i++) {
          ValueMetaInterface v=prev.searchValueMeta(keyStream[i]);
          if (v != null) {
            ValueMetaInterface tableField=v.clone();
            tableField.setName(keyLookup[i]);
            tableFields.addValueMeta(tableField);
          }
 else {
            throw new KettleStepException("Unable to find field [" + keyStream[i] + "] in the input rows");
          }
        }
      }
      for (int i=0; i < updateLookup.length; i++) {
        ValueMetaInterface v=prev.searchValueMeta(updateStream[i]);
        if (v != null) {
          ValueMetaInterface vk=tableFields.searchValueMeta(updateStream[i]);
          if (vk == null) {
            ValueMetaInterface tableField=v.clone();
            tableField.setName(updateLookup[i]);
            tableFields.addValueMeta(tableField);
          }
        }
 else {
          throw new KettleStepException("Unable to find field [" + updateStream[i] + "] in the input rows");
        }
      }
      if (!Const.isEmpty(tableName)) {
        Database db=new Database(loggingObject,databaseMeta);
        db.shareVariablesWith(transMeta);
        try {
          db.connect();
          String schemaTable=databaseMeta.getQuotedSchemaTableCombination(schemaName,tableName);
          String cr_table=db.getDDL(schemaTable,tableFields,null,false,null,true);
          String cr_index="";
          String idx_fields[]=null;
          if (keyLookup != null && keyLookup.length > 0) {
            idx_fields=new String[keyLookup.length];
            for (int i=0; i < keyLookup.length; i++)             idx_fields[i]=keyLookup[i];
          }
 else {
            retval.setError(BaseMessages.getString(PKG,"InsertUpdateMeta.CheckResult.MissingKeyFields"));
          }
          if (idx_fields != null && idx_fields.length > 0 && !db.checkIndexExists(schemaName,tableName,idx_fields)) {
            String indexname="idx_" + tableName + "_lookup";
            cr_index=db.getCreateIndexStatement(schemaTable,indexname,idx_fields,false,false,false,true);
          }
          String sql=cr_table + cr_index;
          if (sql.length() == 0)           retval.setSQL(null);
 else           retval.setSQL(sql);
        }
 catch (        KettleException e) {
          retval.setError(BaseMessages.getString(PKG,"InsertUpdateMeta.ReturnValue.ErrorOccurred") + e.getMessage());
        }
      }
 else {
        retval.setError(BaseMessages.getString(PKG,"InsertUpdateMeta.ReturnValue.NoTableDefinedOnConnection"));
      }
    }
 else {
      retval.setError(BaseMessages.getString(PKG,"InsertUpdateMeta.ReturnValue.NotReceivingAnyFields"));
    }
  }
 else {
    retval.setError(BaseMessages.getString(PKG,"InsertUpdateMeta.ReturnValue.NoConnectionDefined"));
  }
  return retval;
}
