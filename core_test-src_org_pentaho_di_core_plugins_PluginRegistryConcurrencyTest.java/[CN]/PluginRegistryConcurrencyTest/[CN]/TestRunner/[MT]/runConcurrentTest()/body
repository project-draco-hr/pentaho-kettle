{
  final int tasksAmount=monitoredTasks.size() + backgroundTasks.size();
  final ExecutorService executors=Executors.newFixedThreadPool(tasksAmount);
  try {
    CompletionService<Exception> service=new ExecutorCompletionService<Exception>(executors);
    for (    Callable<Exception> task : backgroundTasks) {
      service.submit(task);
    }
    List<Future<Exception>> monitored=new ArrayList<Future<Exception>>(monitoredTasks.size());
    for (    Callable<Exception> task : monitoredTasks) {
      monitored.add(service.submit(task));
    }
    while (condition.get() && !isDone(monitored)) {
    }
    condition.set(false);
    for (int i=0; i < tasksAmount; i++) {
      Exception exception=service.take().get();
      if (exception != null) {
        exceptions.add(exception);
      }
    }
  }
  finally {
    executors.shutdown();
  }
}
