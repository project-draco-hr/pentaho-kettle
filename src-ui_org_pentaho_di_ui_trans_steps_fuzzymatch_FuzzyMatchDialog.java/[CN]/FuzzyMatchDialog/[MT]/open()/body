{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  SelectionListener lsSelection=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wLookupGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wLookupGroup);
  wLookupGroup.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Group.Lookup.Label"));
  FormLayout LookupgroupLayout=new FormLayout();
  LookupgroupLayout.marginWidth=10;
  LookupgroupLayout.marginHeight=10;
  wLookupGroup.setLayout(LookupgroupLayout);
  wlStep=new Label(wLookupGroup,SWT.RIGHT);
  wlStep.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.SourceStep.Label"));
  props.setLook(wlStep);
  fdlStep=new FormData();
  fdlStep.left=new FormAttachment(0,0);
  fdlStep.right=new FormAttachment(middle,-margin);
  fdlStep.top=new FormAttachment(wStepname,margin);
  wlStep.setLayoutData(fdlStep);
  wStep=new CCombo(wLookupGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wStep);
  for (int i=0; i < transMeta.findNrPrevSteps(stepname,true); i++) {
    StepMeta stepMeta=transMeta.findPrevStep(stepname,i,true);
    wStep.add(stepMeta.getName());
  }
  wStep.addModifyListener(lsMod);
  wStep.addSelectionListener(lsSelection);
  fdStep=new FormData();
  fdStep.left=new FormAttachment(middle,0);
  fdStep.top=new FormAttachment(wStepname,margin);
  fdStep.right=new FormAttachment(100,0);
  wStep.setLayoutData(fdStep);
  wlLookupField=new Label(wLookupGroup,SWT.RIGHT);
  wlLookupField.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.wlLookupField.Label"));
  props.setLook(wlLookupField);
  fdlLookupField=new FormData();
  fdlLookupField.left=new FormAttachment(0,0);
  fdlLookupField.top=new FormAttachment(wStep,margin);
  fdlLookupField.right=new FormAttachment(middle,-2 * margin);
  wlLookupField.setLayoutData(fdlLookupField);
  wLookupField=new ComboVar(transMeta,wLookupGroup,SWT.BORDER | SWT.READ_ONLY);
  wLookupField.setEditable(true);
  props.setLook(wLookupField);
  wLookupField.addModifyListener(lsMod);
  fdLookupField=new FormData();
  fdLookupField.left=new FormAttachment(middle,0);
  fdLookupField.top=new FormAttachment(wStep,margin);
  fdLookupField.right=new FormAttachment(100,-margin);
  wLookupField.setLayoutData(fdLookupField);
  wLookupField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setLookupField();
    }
  }
);
  fdLookupGroup=new FormData();
  fdLookupGroup.left=new FormAttachment(0,margin);
  fdLookupGroup.top=new FormAttachment(wStepname,margin);
  fdLookupGroup.right=new FormAttachment(100,-margin);
  wLookupGroup.setLayoutData(fdLookupGroup);
  wMainStreamGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wMainStreamGroup);
  wMainStreamGroup.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Group.MainStreamGroup.Label"));
  FormLayout MainStreamgroupLayout=new FormLayout();
  MainStreamgroupLayout.marginWidth=10;
  MainStreamgroupLayout.marginHeight=10;
  wMainStreamGroup.setLayout(MainStreamgroupLayout);
  wlMainStreamField=new Label(wMainStreamGroup,SWT.RIGHT);
  wlMainStreamField.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.wlMainStreamField.Label"));
  props.setLook(wlMainStreamField);
  fdlMainStreamField=new FormData();
  fdlMainStreamField.left=new FormAttachment(0,0);
  fdlMainStreamField.top=new FormAttachment(wLookupGroup,margin);
  fdlMainStreamField.right=new FormAttachment(middle,-2 * margin);
  wlMainStreamField.setLayoutData(fdlMainStreamField);
  wMainStreamField=new ComboVar(transMeta,wMainStreamGroup,SWT.BORDER | SWT.READ_ONLY);
  wMainStreamField.setEditable(true);
  props.setLook(wMainStreamField);
  wMainStreamField.addModifyListener(lsMod);
  fdMainStreamField=new FormData();
  fdMainStreamField.left=new FormAttachment(middle,0);
  fdMainStreamField.top=new FormAttachment(wLookupGroup,margin);
  fdMainStreamField.right=new FormAttachment(100,-margin);
  wMainStreamField.setLayoutData(fdMainStreamField);
  wMainStreamField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setMainStreamField();
    }
  }
);
  fdMainStreamGroup=new FormData();
  fdMainStreamGroup.left=new FormAttachment(0,margin);
  fdMainStreamGroup.top=new FormAttachment(wLookupGroup,margin);
  fdMainStreamGroup.right=new FormAttachment(100,-margin);
  wMainStreamGroup.setLayoutData(fdMainStreamGroup);
  wSettingsGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSettingsGroup);
  wSettingsGroup.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Group.SettingsGroup.Label"));
  FormLayout SettingsgroupLayout=new FormLayout();
  SettingsgroupLayout.marginWidth=10;
  SettingsgroupLayout.marginHeight=10;
  wSettingsGroup.setLayout(SettingsgroupLayout);
  wlAlgorithm=new Label(wSettingsGroup,SWT.RIGHT);
  wlAlgorithm.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Algorithm.Label"));
  props.setLook(wlAlgorithm);
  fdlAlgorithm=new FormData();
  fdlAlgorithm.left=new FormAttachment(0,0);
  fdlAlgorithm.right=new FormAttachment(middle,-margin);
  fdlAlgorithm.top=new FormAttachment(wMainStreamGroup,margin);
  wlAlgorithm.setLayoutData(fdlAlgorithm);
  wAlgorithm=new CCombo(wSettingsGroup,SWT.BORDER | SWT.READ_ONLY);
  props.setLook(wAlgorithm);
  wAlgorithm.addModifyListener(lsMod);
  fdAlgorithm=new FormData();
  fdAlgorithm.left=new FormAttachment(middle,0);
  fdAlgorithm.top=new FormAttachment(wMainStreamGroup,margin);
  fdAlgorithm.right=new FormAttachment(100,-margin);
  wAlgorithm.setLayoutData(fdAlgorithm);
  wAlgorithm.setItems(FuzzyMatchMeta.algorithmDesc);
  wAlgorithm.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeAlgorithm();
    }
  }
);
  wlcaseSensitive=new Label(wSettingsGroup,SWT.RIGHT);
  wlcaseSensitive.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.caseSensitive.Label"));
  props.setLook(wlcaseSensitive);
  fdlcaseSensitive=new FormData();
  fdlcaseSensitive.left=new FormAttachment(0,0);
  fdlcaseSensitive.top=new FormAttachment(wAlgorithm,margin);
  fdlcaseSensitive.right=new FormAttachment(middle,-2 * margin);
  wlcaseSensitive.setLayoutData(fdlcaseSensitive);
  wcaseSensitive=new Button(wSettingsGroup,SWT.CHECK);
  props.setLook(wcaseSensitive);
  wcaseSensitive.setToolTipText(BaseMessages.getString(PKG,"FuzzyMatchDialog.caseSensitive.Tooltip"));
  fdcaseSensitive=new FormData();
  fdcaseSensitive.left=new FormAttachment(middle,0);
  fdcaseSensitive.top=new FormAttachment(wAlgorithm,margin);
  wcaseSensitive.setLayoutData(fdcaseSensitive);
  SelectionAdapter lcaseSensitive=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      input.setChanged();
    }
  }
;
  wcaseSensitive.addSelectionListener(lcaseSensitive);
  wlgetCloserValue=new Label(wSettingsGroup,SWT.RIGHT);
  wlgetCloserValue.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.getCloserValue.Label"));
  props.setLook(wlgetCloserValue);
  fdlgetCloserValue=new FormData();
  fdlgetCloserValue.left=new FormAttachment(0,0);
  fdlgetCloserValue.top=new FormAttachment(wcaseSensitive,margin);
  fdlgetCloserValue.right=new FormAttachment(middle,-2 * margin);
  wlgetCloserValue.setLayoutData(fdlgetCloserValue);
  wgetCloserValue=new Button(wSettingsGroup,SWT.CHECK);
  props.setLook(wgetCloserValue);
  wgetCloserValue.setToolTipText(BaseMessages.getString(PKG,"FuzzyMatchDialog.getCloserValue.Tooltip"));
  fdgetCloserValue=new FormData();
  fdgetCloserValue.left=new FormAttachment(middle,0);
  fdgetCloserValue.top=new FormAttachment(wcaseSensitive,margin);
  wgetCloserValue.setLayoutData(fdgetCloserValue);
  SelectionAdapter lgetCloserValue=new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent arg0){
      activegetCloserValue();
      input.setChanged();
    }
  }
;
  wgetCloserValue.addSelectionListener(lgetCloserValue);
  wlminValue=new Label(wSettingsGroup,SWT.RIGHT);
  wlminValue.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.minValue.Label"));
  props.setLook(wlminValue);
  fdlminValue=new FormData();
  fdlminValue.left=new FormAttachment(0,0);
  fdlminValue.top=new FormAttachment(wgetCloserValue,margin);
  fdlminValue.right=new FormAttachment(middle,-margin);
  wlminValue.setLayoutData(fdlminValue);
  wminValue=new TextVar(transMeta,wSettingsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wminValue);
  wminValue.setToolTipText(BaseMessages.getString(PKG,"FuzzyMatchDialog.minValue.Tooltip"));
  wminValue.addModifyListener(lsMod);
  fdminValue=new FormData();
  fdminValue.left=new FormAttachment(middle,0);
  fdminValue.top=new FormAttachment(wgetCloserValue,margin);
  fdminValue.right=new FormAttachment(100,0);
  wminValue.setLayoutData(fdminValue);
  wlmaxValue=new Label(wSettingsGroup,SWT.RIGHT);
  wlmaxValue.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.maxValue.Label"));
  props.setLook(wlmaxValue);
  fdlmaxValue=new FormData();
  fdlmaxValue.left=new FormAttachment(0,0);
  fdlmaxValue.top=new FormAttachment(wminValue,margin);
  fdlmaxValue.right=new FormAttachment(middle,-margin);
  wlmaxValue.setLayoutData(fdlmaxValue);
  wmaxValue=new TextVar(transMeta,wSettingsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wmaxValue);
  wmaxValue.setToolTipText(BaseMessages.getString(PKG,"FuzzyMatchDialog.maxValue.Tooltip"));
  wmaxValue.addModifyListener(lsMod);
  fdmaxValue=new FormData();
  fdmaxValue.left=new FormAttachment(middle,0);
  fdmaxValue.top=new FormAttachment(wminValue,margin);
  fdmaxValue.right=new FormAttachment(100,0);
  wmaxValue.setLayoutData(fdmaxValue);
  wlseparator=new Label(wSettingsGroup,SWT.RIGHT);
  wlseparator.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.separator.Label"));
  props.setLook(wlseparator);
  fdlseparator=new FormData();
  fdlseparator.left=new FormAttachment(0,0);
  fdlseparator.top=new FormAttachment(wmaxValue,margin);
  fdlseparator.right=new FormAttachment(middle,-margin);
  wlseparator.setLayoutData(fdlseparator);
  wseparator=new TextVar(transMeta,wSettingsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wseparator);
  wseparator.addModifyListener(lsMod);
  fdseparator=new FormData();
  fdseparator.left=new FormAttachment(middle,0);
  fdseparator.top=new FormAttachment(wmaxValue,margin);
  fdseparator.right=new FormAttachment(100,0);
  wseparator.setLayoutData(fdseparator);
  fdSettingsGroup=new FormData();
  fdSettingsGroup.left=new FormAttachment(0,margin);
  fdSettingsGroup.top=new FormAttachment(wMainStreamGroup,margin);
  fdSettingsGroup.right=new FormAttachment(100,-margin);
  wSettingsGroup.setLayoutData(fdSettingsGroup);
  wOutputFieldsGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wOutputFieldsGroup);
  wOutputFieldsGroup.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.Group.OutputFieldsGroup.Label"));
  FormLayout OutputFieldsgroupLayout=new FormLayout();
  OutputFieldsgroupLayout.marginWidth=10;
  OutputFieldsgroupLayout.marginHeight=10;
  wOutputFieldsGroup.setLayout(OutputFieldsgroupLayout);
  wlmatchField=new Label(wOutputFieldsGroup,SWT.RIGHT);
  wlmatchField.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.MatchField.Label"));
  props.setLook(wlmatchField);
  fdlmatchField=new FormData();
  fdlmatchField.left=new FormAttachment(0,0);
  fdlmatchField.top=new FormAttachment(wSettingsGroup,margin);
  fdlmatchField.right=new FormAttachment(middle,-margin);
  wlmatchField.setLayoutData(fdlmatchField);
  wmatchField=new TextVar(transMeta,wOutputFieldsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wmatchField);
  wmatchField.addModifyListener(lsMod);
  fdmatchField=new FormData();
  fdmatchField.left=new FormAttachment(middle,0);
  fdmatchField.top=new FormAttachment(wSettingsGroup,margin);
  fdmatchField.right=new FormAttachment(100,0);
  wmatchField.setLayoutData(fdmatchField);
  wlvalueField=new Label(wOutputFieldsGroup,SWT.RIGHT);
  wlvalueField.setText(BaseMessages.getString(PKG,"FuzzyMatchDialog.valueField.Label"));
  props.setLook(wlvalueField);
  fdlvalueField=new FormData();
  fdlvalueField.left=new FormAttachment(0,0);
  fdlvalueField.top=new FormAttachment(wmatchField,margin);
  fdlvalueField.right=new FormAttachment(middle,-margin);
  wlvalueField.setLayoutData(fdlvalueField);
  wvalueField=new TextVar(transMeta,wOutputFieldsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wvalueField);
  wvalueField.setToolTipText(BaseMessages.getString(PKG,"FuzzyMatchDialog.valueField.Tooltip"));
  wvalueField.addModifyListener(lsMod);
  fdvalueField=new FormData();
  fdvalueField.left=new FormAttachment(middle,0);
  fdvalueField.top=new FormAttachment(wmatchField,margin);
  fdvalueField.right=new FormAttachment(100,0);
  wvalueField.setLayoutData(fdvalueField);
  fdOutputFieldsGroup=new FormData();
  fdOutputFieldsGroup.left=new FormAttachment(0,margin);
  fdOutputFieldsGroup.top=new FormAttachment(wSettingsGroup,margin);
  fdOutputFieldsGroup.right=new FormAttachment(100,-margin);
  wOutputFieldsGroup.setLayoutData(fdOutputFieldsGroup);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wOutputFieldsGroup);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  activeAlgorithm();
  activegetCloserValue();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
