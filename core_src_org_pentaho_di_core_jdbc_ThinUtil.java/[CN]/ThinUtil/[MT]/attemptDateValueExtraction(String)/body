{
  if (string.length() > 2 && string.startsWith("[") && string.endsWith("]")) {
    String unquoted=string.substring(1,string.length() - 1);
    if (unquoted.length() >= 9 && unquoted.charAt(4) == '/' && unquoted.charAt(7) == '/') {
      Date date=XMLHandler.stringToDate(unquoted);
      String format="yyyy/MM/dd HH:mm:ss.SSS";
      if (date == null) {
        try {
          date=new SimpleDateFormat("yyyy/MM/dd HH:mm:ss").parse(unquoted);
          format="yyyy/MM/dd HH:mm:ss";
        }
 catch (        ParseException e1) {
          try {
            date=new SimpleDateFormat("yyyy/MM/dd").parse(unquoted);
            format="yyyy/MM/dd";
          }
 catch (          ParseException e2) {
            date=null;
          }
        }
      }
      if (date != null) {
        ValueMetaInterface valueMeta=new ValueMeta("iif-date",ValueMetaInterface.TYPE_DATE);
        valueMeta.setConversionMask(format);
        return new ValueMetaAndData(valueMeta,date);
      }
    }
  }
  Matcher matcher=Pattern.compile("^([A-Za-z]+) ?'([0-9\\-:\\. ]+)'$").matcher(string);
  if (matcher.find()) {
    if (matcher.groupCount() == 2) {
      String keyword=matcher.group(1);
      String dateString=matcher.group(2);
      String format=null;
      if (keyword.equalsIgnoreCase("TIMESTAMP")) {
        format="yyyy-MM-dd HH:mm:ss";
      }
 else       if (keyword.equalsIgnoreCase("DATE")) {
        format="yyyy-MM-dd";
      }
      if (format != null) {
        Date date=null;
        try {
          date=new SimpleDateFormat(format).parse(dateString);
        }
 catch (        ParseException e) {
        }
        if (date != null) {
          ValueMetaInterface valueMeta=new ValueMeta("iff-date",ValueMetaInterface.TYPE_DATE);
          valueMeta.setConversionMask(format);
          return new ValueMetaAndData(valueMeta,date);
        }
      }
    }
  }
  return null;
}
