{
  if (Const.isEmpty(sqlString)) {
    return new FoundClause(null,null);
  }
  String sql=sqlString.toUpperCase();
  int startIndex=0;
  while (startIndex < sql.length()) {
    startIndex=ThinUtil.skipChars(sql,startIndex,'"','\'');
    if (sql.substring(startIndex).startsWith(startClause.toUpperCase())) {
      break;
    }
    startIndex++;
  }
  if (startIndex < 0 || startIndex >= sql.length()) {
    return new FoundClause(null,sqlString);
  }
  startIndex+=startClause.length() + 1;
  if (endClauses.length == 0) {
    return new FoundClause(sqlString.substring(startIndex),null);
  }
  int endIndex=sql.length();
  for (  String endClause : endClauses) {
    int index=startIndex;
    while (index < endIndex) {
      index=ThinUtil.skipChars(sql,index,'"','\'');
      if (sql.substring(index).startsWith(endClause.toUpperCase())) {
        if (index < endIndex) {
          endIndex=index;
        }
      }
      index++;
    }
  }
  String foundClause=Const.trim(sqlString.substring(startIndex,endIndex));
  String rest=null;
  if (endIndex < sql.length()) {
    rest=Const.trim(sqlString.substring(endIndex));
    if (rest.length() == 0) {
      rest=null;
    }
  }
  return new FoundClause(foundClause,rest);
}
