{
  try {
    keyField=XMLHandler.getTagValue(stepnode,"key_field");
    Node groupn=XMLHandler.getSubNode(stepnode,"group");
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int sizegroup=XMLHandler.countNodes(groupn,"field");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(sizegroup,nrfields);
    for (int i=0; i < sizegroup; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(groupn,"field",i);
      groupField[i]=XMLHandler.getTagValue(fnode,"name");
    }
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      pivotTargetField[i]=new UnpivotTargetField();
      pivotTargetField[i].setFieldName(XMLHandler.getTagValue(fnode,"field_name"));
      pivotTargetField[i].setKeyValue(XMLHandler.getTagValue(fnode,"key_value"));
      pivotTargetField[i].setTargetName(XMLHandler.getTagValue(fnode,"target_name"));
      pivotTargetField[i].setTargetType(XMLHandler.getTagValue(fnode,"target_type"));
      pivotTargetField[i].setTargetLength(Const.toInt(XMLHandler.getTagValue(fnode,"target_length"),-1));
      pivotTargetField[i].setTargetPrecision(Const.toInt(XMLHandler.getTagValue(fnode,"target_precision"),-1));
      pivotTargetField[i].setTargetDecimalSymbol(XMLHandler.getTagValue(fnode,"target_decimal_symbol"));
      pivotTargetField[i].setTargetGroupingSymbol(XMLHandler.getTagValue(fnode,"target_grouping_symbol"));
      pivotTargetField[i].setTargetCurrencySymbol(XMLHandler.getTagValue(fnode,"target_currency_symbol"));
      pivotTargetField[i].setTargetNullString(XMLHandler.getTagValue(fnode,"target_null_string"));
      pivotTargetField[i].setTargetAggregationType(XMLHandler.getTagValue(fnode,"target_aggregation_type"));
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
