{
  imagesJobentries=new Hashtable<String,Image>();
  imagesJobentriesSmall=new Hashtable<String,Image>();
  JobEntryLoader jobEntryLoader=JobEntryLoader.getInstance();
  if (!jobEntryLoader.isInitialized())   return;
  JobPlugin plugins[]=jobEntryLoader.getJobEntriesWithType(JobPlugin.TYPE_ALL);
  for (int i=0; i < plugins.length; i++) {
    try {
      if (jobEntryLoader.getJobEntryClass(plugins[i]).getJobEntryType() == JobEntryType.SPECIAL)       continue;
    }
 catch (    KettleStepLoaderException e) {
      log.logError("Kettle","Unable to create job entry from plugin [" + plugins[i] + "] : "+ e.toString());
      continue;
    }
    Image image=null;
    Image small_image=null;
    if (plugins[i].isNative()) {
      String filename=plugins[i].getIconFilename();
      try {
        image=new Image(display,getClass().getResourceAsStream(filename));
      }
 catch (      Exception e) {
        log.logError("Kettle","Unable to find required job entry image file [" + (Const.IMAGE_DIRECTORY + filename) + "] : "+ e.toString());
        image=new Image(display,Const.ICON_SIZE,Const.ICON_SIZE);
        GC gc=new GC(image);
        gc.drawRectangle(0,0,Const.ICON_SIZE,Const.ICON_SIZE);
        gc.drawLine(0,0,Const.ICON_SIZE,Const.ICON_SIZE);
        gc.drawLine(Const.ICON_SIZE,0,0,Const.ICON_SIZE);
        gc.dispose();
      }
    }
 else {
      String filename=plugins[i].getIconFilename();
      try {
        image=new Image(display,filename);
      }
 catch (      Exception e) {
        log.logError("Kettle","Unable to find required job entry image file [" + filename + "] : "+ e.toString());
        image=new Image(display,Const.ICON_SIZE,Const.ICON_SIZE);
        GC gc=new GC(image);
        gc.drawRectangle(0,0,Const.ICON_SIZE,Const.ICON_SIZE);
        gc.drawLine(0,0,Const.ICON_SIZE,Const.ICON_SIZE);
        gc.drawLine(Const.ICON_SIZE,0,0,Const.ICON_SIZE);
        gc.dispose();
      }
    }
    if (image != null) {
      int xsize=image.getBounds().width;
      int ysize=image.getBounds().height;
      small_image=new Image(display,16,16);
      GC gc=new GC(small_image);
      gc.drawImage(image,0,0,xsize,ysize,0,0,16,16);
      gc.dispose();
    }
    imagesJobentries.put(plugins[i].getID(),image);
    imagesJobentriesSmall.put(plugins[i].getID(),small_image);
  }
}
