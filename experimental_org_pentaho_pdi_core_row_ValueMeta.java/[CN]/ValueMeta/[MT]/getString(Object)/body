{
  if (object == null) {
    return null;
  }
switch (type) {
case TYPE_STRING:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
      return (String)object;
case STORAGE_TYPE_INDEXED:
    return (String)index[((Integer)object).intValue()];
default :
  throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_DATE:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return convertDateToString((Date)object);
case STORAGE_TYPE_INDEXED:
return convertDateToString((Date)index[((Integer)object).intValue()]);
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_NUMBER:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return convertNumberToString((Double)object);
case STORAGE_TYPE_INDEXED:
return convertNumberToString((Double)index[((Integer)object).intValue()]);
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_INTEGER:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return convertIntegerToString((Long)object);
case STORAGE_TYPE_INDEXED:
return convertIntegerToString((Long)index[((Integer)object).intValue()]);
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_BIGNUMBER:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return convertBigNumberToString((BigDecimal)object);
case STORAGE_TYPE_INDEXED:
return convertBigNumberToString((BigDecimal)index[((Integer)object).intValue()]);
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_BOOLEAN:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return convertBooleanToString((Boolean)object);
case STORAGE_TYPE_INDEXED:
return convertBooleanToString((Boolean)index[((Integer)object).intValue()]);
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_BINARY:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return convertBinaryToString((byte[])object);
case STORAGE_TYPE_INDEXED:
return convertBinaryToString((byte[])index[((Integer)object).intValue()]);
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
case TYPE_SERIALIZABLE:
switch (storageType) {
case STORAGE_TYPE_NORMAL:
return object.toString();
case STORAGE_TYPE_INDEXED:
return index[((Integer)object).intValue()].toString();
default :
throw new KettleValueException("Unknown storage type " + storageType + " specified.");
}
default :
throw new KettleValueException("Unknown type " + type + " specified.");
}
}
