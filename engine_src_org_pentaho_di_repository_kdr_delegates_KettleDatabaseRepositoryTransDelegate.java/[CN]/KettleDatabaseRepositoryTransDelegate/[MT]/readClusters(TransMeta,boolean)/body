{
  try {
    ObjectId[] dbids=repository.getClusterIDs(false);
    for (int i=0; i < dbids.length; i++) {
      ClusterSchema clusterSchema=repository.loadClusterSchema(dbids[i],transMeta.getSlaveServers(),null);
      clusterSchema.shareVariablesWith(transMeta);
      ClusterSchema check=transMeta.findClusterSchema(clusterSchema.getName());
      if (check == null || overWriteShared) {
        if (!Utils.isEmpty(clusterSchema.getName())) {
          transMeta.addOrReplaceClusterSchema(clusterSchema);
          if (!overWriteShared) {
            clusterSchema.setChanged(false);
          }
        }
      }
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"TransMeta.Log.UnableToReadClustersFromRepository"),dbe);
  }
}
