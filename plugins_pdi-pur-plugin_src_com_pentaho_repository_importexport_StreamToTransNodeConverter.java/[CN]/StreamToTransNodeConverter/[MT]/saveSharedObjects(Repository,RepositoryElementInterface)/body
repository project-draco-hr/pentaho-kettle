{
  TransMeta transMeta=(TransMeta)element;
  List<String> databaseNames=Arrays.asList(repo.getDatabaseNames(true));
  int dbIndex=0;
  boolean updateMeta=Boolean.FALSE;
  List<Integer> transMetaDatabasesToUpdate=new ArrayList<Integer>();
  for (  DatabaseMeta databaseMeta : transMeta.getDatabases()) {
    if (!databaseNames.contains(databaseMeta.getName())) {
      if (databaseMeta.getObjectId() == null || !StringUtils.isEmpty(databaseMeta.getHostname())) {
        repo.save(databaseMeta,null,null);
      }
    }
 else     if (databaseMeta.getObjectId() == null) {
      transMetaDatabasesToUpdate.add(dbIndex);
      updateMeta=Boolean.TRUE;
    }
    dbIndex++;
  }
  if (updateMeta) {
    for (    Integer databaseMetaIndex : transMetaDatabasesToUpdate) {
      transMeta.getDatabase(databaseMetaIndex).setObjectId(repo.getDatabaseID(transMeta.getDatabase(databaseMetaIndex).getName()));
    }
  }
  for (  SlaveServer slaveServer : transMeta.getSlaveServers()) {
    if (slaveServer.hasChanged() || slaveServer.getObjectId() == null) {
      repo.save(slaveServer,null,null);
    }
  }
  for (  ClusterSchema clusterSchema : transMeta.getClusterSchemas()) {
    if (clusterSchema.hasChanged() || clusterSchema.getObjectId() == null) {
      repo.save(clusterSchema,null,null);
    }
  }
  for (  PartitionSchema partitionSchema : transMeta.getPartitionSchemas()) {
    if (partitionSchema.hasChanged() || partitionSchema.getObjectId() == null) {
      repo.save(partitionSchema,null,null);
    }
  }
}
