{
  try {
    if (fileId != null) {
      Repository repository=connectToRepository();
      RepositoryFile file=unifiedRepository.getFileById(fileId);
      if (file != null) {
        try {
          TransMeta transMeta=repository.loadTransformation(new StringObjectId(fileId.toString()),null);
          if (transMeta != null) {
            Set<String> privateDatabases=transMeta.getPrivateDatabases();
            if (privateDatabases != null) {
              for (Iterator<DatabaseMeta> it=transMeta.getDatabases().iterator(); it.hasNext(); ) {
                String databaseName=it.next().getName();
                if (!privateDatabases.contains(databaseName)) {
                  it.remove();
                }
              }
            }
            return new ByteArrayInputStream(transMeta.getXML().getBytes());
          }
        }
 catch (        KettleException e) {
          logger.error(e);
          SimpleRepositoryFileData fileData=unifiedRepository.getDataForRead(fileId,SimpleRepositoryFileData.class);
          if (fileData != null) {
            logger.warn("Reading as legacy CE tranformation " + file.getName() + ".");
            return fileData.getInputStream();
          }
        }
      }
    }
  }
 catch (  Exception e) {
    logger.error(e);
  }
  return null;
}
