{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,props.getJobsDialogStyle());
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("JobEval.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlName=new Label(shell,SWT.RIGHT);
  wlName.setText(Messages.getString("JobEval.Name.Label"));
  props.setLook(wlName);
  fdlName=new FormData();
  fdlName.left=new FormAttachment(0,0);
  fdlName.right=new FormAttachment(middle,0);
  fdlName.top=new FormAttachment(0,margin);
  wlName.setLayoutData(fdlName);
  wName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wName);
  wName.addModifyListener(lsMod);
  fdName=new FormData();
  fdName.left=new FormAttachment(middle,0);
  fdName.top=new FormAttachment(0,margin);
  fdName.right=new FormAttachment(100,0);
  wName.setLayoutData(fdName);
  wMaximumTimeout=new LabelTextVar(jobMeta,shell,Messages.getString("JobEval.MaximumTimeout.Label"),Messages.getString("JobEval.MaximumTimeout.Tooltip"));
  props.setLook(wMaximumTimeout);
  wMaximumTimeout.addModifyListener(lsMod);
  fdMaximumTimeout=new FormData();
  fdMaximumTimeout.left=new FormAttachment(0,-margin);
  fdMaximumTimeout.top=new FormAttachment(wName,margin);
  fdMaximumTimeout.right=new FormAttachment(100,0);
  wMaximumTimeout.setLayoutData(fdMaximumTimeout);
  wMaximumTimeout.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wMaximumTimeout.setToolTipText(jobMeta.environmentSubstitute(wMaximumTimeout.getText()));
    }
  }
);
  wlScaleTime=new Label(shell,SWT.RIGHT);
  wlScaleTime.setText("");
  props.setLook(wlScaleTime);
  fdlScaleTime=new FormData();
  fdlScaleTime.left=new FormAttachment(0,0);
  fdlScaleTime.right=new FormAttachment(middle,0);
  fdlScaleTime.top=new FormAttachment(wMaximumTimeout,margin);
  wlScaleTime.setLayoutData(fdlScaleTime);
  wScaleTime=new CCombo(shell,SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);
  wScaleTime.add(Messages.getString("JobEval.SScaleTime.Label"));
  wScaleTime.add(Messages.getString("JobEval.MnScaleTime.Label"));
  wScaleTime.add(Messages.getString("JobEval.HrScaleTime.Label"));
  wScaleTime.select(0);
  props.setLook(wScaleTime);
  fdScaleTime=new FormData();
  fdScaleTime.left=new FormAttachment(middle,0);
  fdScaleTime.top=new FormAttachment(wMaximumTimeout,margin);
  fdScaleTime.right=new FormAttachment(100,0);
  wScaleTime.setLayoutData(fdScaleTime);
  fdScaleTime=new FormData();
  fdScaleTime.left=new FormAttachment(middle,0);
  fdScaleTime.top=new FormAttachment(wMaximumTimeout,margin);
  fdScaleTime.right=new FormAttachment(100,0);
  wScaleTime.setLayoutData(fdScaleTime);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,wScaleTime);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wName.addSelectionListener(lsDef);
  wMaximumTimeout.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
