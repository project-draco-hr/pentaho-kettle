{
  connectionBox=(XulListbox)document.getElementById("connection-type-list");
  accessBox=(XulListbox)document.getElementById("access-type-list");
  Object connectionKey=DataHandler.connectionNametoID.get(connectionBox.getSelectedItem());
  String databaseName=null;
  try {
    databaseName=PluginRegistry.getInstance().getPlugin(DatabasePluginType.class,"" + connectionKey).getIds()[0];
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  DatabaseInterface database=DataHandler.connectionMap.get(connectionBox.getSelectedItem());
  Object accessKey=accessBox.getSelectedItem();
  int access=DatabaseMeta.getAccessType((String)accessKey);
  String fragment=null;
  DataHandler dataHandler=null;
  try {
    dataHandler=(DataHandler)xulDomContainer.getEventHandler("dataHandler");
    dataHandler.pushCache();
  }
 catch (  XulException e) {
  }
switch (access) {
case DatabaseMeta.TYPE_ACCESS_JNDI:
    fragment=getFragment(database,databaseName,"_jndi.xul","common_jndi.xul");
  break;
case DatabaseMeta.TYPE_ACCESS_NATIVE:
fragment=getFragment(database,databaseName,"_native.xul","common_native.xul");
break;
case DatabaseMeta.TYPE_ACCESS_OCI:
fragment=getFragment(database,databaseName,"_oci.xul","common_native.xul");
break;
case DatabaseMeta.TYPE_ACCESS_ODBC:
fragment=getFragment(database,databaseName,"_odbc.xul","common_odbc.xul");
break;
case DatabaseMeta.TYPE_ACCESS_PLUGIN:
fragment=getFragment(database,databaseName,"_plugin.xul","common_native.xul");
break;
default :
break;
}
try {
loadDatabaseOptionsFragment(fragment.toLowerCase());
}
 catch (XulException e) {
showMessage(Messages.getString("FragmentHandler.USER.CANT_LOAD_OPTIONS",databaseName));
}
XulTextbox portBox=(XulTextbox)document.getElementById("port-number-text");
if (portBox != null) {
int port=database.getDefaultDatabasePort();
if (port > 0) {
portBox.setValue(Integer.toString(port));
}
}
if (dataHandler != null) {
dataHandler.popCache();
}
}
