{
  final Shell parent=getParent();
  final Display display=parent.getDisplay();
{
    shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
    initializeShell(shell);
    FormLayout shellLayout=new FormLayout();
    shellLayout.marginTop=0;
    shellLayout.marginLeft=0;
    shellLayout.marginRight=0;
    shellLayout.marginBottom=0;
    shellLayout.marginWidth=0;
    shellLayout.marginHeight=0;
    shell.setLayout(shellLayout);
    shell.setText(DataCleanerJobEntry.NAME + ": " + initialJobName);
  }
  final int middle=Const.MIDDLE_PCT;
  final int margin=Const.MARGIN;
  final DataCleanerBanner banner=new DataCleanerBanner(shell);
{
    final FormData bannerLayoutData=new FormData();
    bannerLayoutData.left=new FormAttachment(0,0);
    bannerLayoutData.right=new FormAttachment(100,0);
    bannerLayoutData.top=new FormAttachment(0,0);
    banner.setLayoutData(bannerLayoutData);
  }
{
    final Label stepNameLabel=new Label(shell,SWT.RIGHT);
    stepNameLabel.setText("Step name:");
    final FormData stepNameLabelLayoutData=new FormData();
    stepNameLabelLayoutData.left=new FormAttachment(0,margin);
    stepNameLabelLayoutData.right=new FormAttachment(middle,-margin);
    stepNameLabelLayoutData.top=new FormAttachment(banner,margin * 2);
    stepNameLabel.setLayoutData(stepNameLabelLayoutData);
    jobNameField=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
    jobNameField.setText(initialJobName);
    final FormData stepNameFieldLayoutData=new FormData();
    stepNameFieldLayoutData.left=new FormAttachment(middle,0);
    stepNameFieldLayoutData.right=new FormAttachment(100,-margin);
    stepNameFieldLayoutData.top=new FormAttachment(banner,margin * 2);
    jobNameField.setLayoutData(stepNameFieldLayoutData);
  }
  final Group propertiesGroup=new Group(shell,SWT.SHADOW_ETCHED_IN);
  propertiesGroup.setText("Step configuration");
  final FormData propertiesGroupLayoutData=new FormData();
  propertiesGroupLayoutData.left=new FormAttachment(0,margin);
  propertiesGroupLayoutData.right=new FormAttachment(100,-margin);
  propertiesGroupLayoutData.top=new FormAttachment(jobNameField,margin);
  propertiesGroup.setLayoutData(propertiesGroupLayoutData);
  final GridLayout propertiesGroupLayout=new GridLayout(2,false);
  propertiesGroup.setLayout(propertiesGroupLayout);
  addConfigurationFields(propertiesGroup,margin,middle);
  okButton=new Button(shell,SWT.PUSH);
  Image saveImage=new Image(shell.getDisplay(),AbstractJobEntryDialog.class.getResourceAsStream("save.png"));
  resources.add(saveImage);
  okButton.setImage(saveImage);
  okButton.setText("OK");
  okButton.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event event){
      ok();
      final String jobEntryName=jobNameField.getText();
      if (jobEntryName != null && jobEntryName.length() > 0 && !initialJobName.equals(jobEntryName)) {
        jobEntryInt.setName(jobEntryName);
      }
      jobEntryInt.setChanged();
      shell.close();
    }
  }
);
  cancelButton=new Button(shell,SWT.PUSH);
  Image cancelImage=new Image(shell.getDisplay(),AbstractJobEntryDialog.class.getResourceAsStream("cancel.png"));
  resources.add(cancelImage);
  cancelButton.setImage(cancelImage);
  cancelButton.setText("Cancel");
  cancelButton.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event arg0){
      cancel();
      jobNameField.setText("");
      shell.close();
    }
  }
);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{okButton,cancelButton},margin,propertiesGroup);
  final HumanInferenceFooter footer=new HumanInferenceFooter(shell);
{
    final FormData footerLayoutData=new FormData();
    footerLayoutData.left=new FormAttachment(0,0);
    footerLayoutData.right=new FormAttachment(100,0);
    footerLayoutData.top=new FormAttachment(okButton,margin * 2);
    footer.setLayoutData(footerLayoutData);
  }
  shell.addDisposeListener(this);
  shell.setSize(getDialogSize());
  shell.pack();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return jobEntryInt;
}
