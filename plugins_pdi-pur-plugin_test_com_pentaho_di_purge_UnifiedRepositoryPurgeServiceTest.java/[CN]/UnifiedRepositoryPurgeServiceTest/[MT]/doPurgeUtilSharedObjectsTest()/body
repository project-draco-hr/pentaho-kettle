{
  IUnifiedRepository mockRepo=mock(IUnifiedRepository.class);
  final HashMap<String,List<VersionSummary>> versionListMap=processVersionMap(mockRepo);
  UnifiedRepositoryPurgeService purgeService=getPurgeService(mockRepo);
  PurgeUtilitySpecification spec=new PurgeUtilitySpecification();
  spec.purgeFiles=true;
  spec.setSharedObjects(true);
  purgeService.doDeleteRevisions(spec);
  String fileId="1";
  String fileLastRevision="105";
  List<VersionSummary> list=versionListMap.get(fileId);
  for (  VersionSummary sum : list) {
    final int expectedTimes;
    if (!fileLastRevision.equals(sum.getId())) {
      expectedTimes=4;
    }
 else {
      expectedTimes=0;
    }
    verify(mockRepo,times(expectedTimes)).deleteFileAtVersion(fileId,sum.getId());
    verify(UnifiedRepositoryPurgeService.getRepoWs(),times(4)).deleteFileWithPermanentFlag(eq(fileId),eq(true),anyString());
  }
}
