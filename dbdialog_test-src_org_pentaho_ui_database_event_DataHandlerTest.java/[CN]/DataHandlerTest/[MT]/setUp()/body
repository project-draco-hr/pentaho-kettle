{
  dataHandler=new DataHandler();
  xulDomContainer=mock(XulDomContainer.class);
  document=mock(Document.class);
  XulComponent rootElement=mock(XulComponent.class);
  when(document.getRootElement()).thenReturn(rootElement);
  accessBox=mock(XulListbox.class);
  when(document.getElementById("access-type-list")).thenReturn(accessBox);
  connectionBox=mock(XulListbox.class);
  when(document.getElementById("connection-type-list")).thenReturn(connectionBox);
  connectionNameBox=mock(XulTextbox.class);
  when(document.getElementById("connection-name-text")).thenReturn(connectionNameBox);
  dialogDeck=mock(XulDeck.class);
  when(document.getElementById("dialog-panel-deck")).thenReturn(dialogDeck);
  deckOptionsBox=mock(XulListbox.class);
  when(document.getElementById("deck-options-list")).thenReturn(deckOptionsBox);
  hostNameBox=mock(XulTextbox.class);
  when(document.getElementById("server-host-name-text")).thenReturn(hostNameBox);
  databaseNameBox=mock(XulTextbox.class);
  when(document.getElementById("database-name-text")).thenReturn(databaseNameBox);
  portNumberBox=mock(XulTextbox.class);
  when(document.getElementById("port-number-text")).thenReturn(portNumberBox);
  userNameBox=mock(XulTextbox.class);
  when(document.getElementById("username-text")).thenReturn(userNameBox);
  passwordBox=mock(XulTextbox.class);
  when(document.getElementById("password-text")).thenReturn(passwordBox);
  serverInstanceBox=mock(XulTextbox.class);
  when(document.getElementById("instance-text")).thenReturn(serverInstanceBox);
  when(serverInstanceBox.getValue()).thenReturn("instance");
  when(serverInstanceBox.getAttributeValue("shouldDisablePortIfPopulated")).thenReturn("true");
  messageBox=mock(XulMessageBox.class);
  when(document.createElement("messagebox")).thenReturn(messageBox);
  when(xulDomContainer.getDocumentRoot()).thenReturn(document);
  generalDatasourceWindow=mock(XulRoot.class);
  when(generalDatasourceWindow.getRootObject()).thenReturn(mock(XulComponent.class));
  when(document.getElementById("general-datasource-window")).thenReturn(generalDatasourceWindow);
  dataHandler.setXulDomContainer(xulDomContainer);
}
