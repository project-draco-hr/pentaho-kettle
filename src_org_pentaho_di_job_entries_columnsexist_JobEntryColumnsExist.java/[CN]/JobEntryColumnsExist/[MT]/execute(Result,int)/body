{
  Result result=previousResult;
  result.setResult(false);
  result.setNrErrors(1);
  int nrexistcolums=0;
  int nrnotexistcolums=0;
  if (Const.isEmpty(tablename)) {
    logError(BaseMessages.getString(PKG,"JobEntryColumnsExist.Error.TablenameEmpty"));
    return result;
  }
  if (arguments == null) {
    logError(BaseMessages.getString(PKG,"JobEntryColumnsExist.Error.ColumnameEmpty"));
    return result;
  }
  if (connection != null) {
    Database db=new Database(this,connection);
    db.shareVariablesWith(this);
    try {
      String realSchemaname=environmentSubstitute(schemaname);
      String realTablename=environmentSubstitute(tablename);
      if (!Const.isEmpty(realSchemaname))       realTablename=db.getDatabaseMeta().getQuotedSchemaTableCombination(realSchemaname,realTablename);
 else       realTablename=db.getDatabaseMeta().quoteField(realTablename);
      db.connect();
      if (db.checkTableExists(realTablename)) {
        if (log.isDetailed())         logDetailed(BaseMessages.getString(PKG,"JobEntryColumnsExist.Log.TableExists",realTablename));
        for (int i=0; i < arguments.length && !parentJob.isStopped(); i++) {
          String realColumnname=environmentSubstitute(arguments[i]);
          realColumnname=db.getDatabaseMeta().quoteField(realColumnname);
          if (db.checkColumnExists(realColumnname,realTablename)) {
            if (log.isDetailed())             logDetailed(BaseMessages.getString(PKG,"JobEntryColumnsExist.Log.ColumnExists",realColumnname,realTablename));
            nrexistcolums++;
          }
 else {
            logError(BaseMessages.getString(PKG,"JobEntryColumnsExist.Log.ColumnNotExists",realColumnname,realTablename));
            nrnotexistcolums++;
          }
        }
      }
 else {
        logError(BaseMessages.getString(PKG,"JobEntryColumnsExist.Log.TableNotExists",realTablename));
      }
    }
 catch (    KettleDatabaseException dbe) {
      logError(BaseMessages.getString(PKG,"JobEntryColumnsExist.Error.UnexpectedError",dbe.getMessage()));
    }
 finally {
      if (db != null)       try {
        db.disconnect();
      }
 catch (      Exception e) {
      }
      ;
    }
  }
 else {
    logError(BaseMessages.getString(PKG,"JobEntryColumnsExist.Error.NoDbConnection"));
  }
  result.setEntryNr(nrnotexistcolums);
  result.setNrLinesWritten(nrexistcolums);
  if (nrnotexistcolums == 0)   result.setResult(true);
  return result;
}
