{
  if (meta.getName()[i] != null && meta.getName()[i].length() > 0) {
    res.setName(meta.getRename()[i]);
    res.setType(meta.getType()[i]);
    try {
      if (result != null) {
        String classType=result.getClass().getName();
switch (meta.getType()[i]) {
case Value.VALUE_TYPE_NUMBER:
          if (classType.equalsIgnoreCase("org.mozilla.javascript.Undefined")) {
            res.setNull();
          }
 else           if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeJavaObject")) {
            Value v=(Value)Context.toType(result,Value.class);
            res.setValue(v.getNumber());
          }
 else {
            res.setValue(((Double)result).doubleValue());
          }
        break;
case Value.VALUE_TYPE_INTEGER:
      if (classType.equalsIgnoreCase("java.lang.Byte")) {
        res.setValue(((java.lang.Byte)result).longValue());
      }
 else       if (classType.equalsIgnoreCase("java.lang.Short")) {
        res.setValue(((Short)result).longValue());
      }
 else       if (classType.equalsIgnoreCase("java.lang.Integer")) {
        res.setValue(((Integer)result).longValue());
      }
 else       if (classType.equalsIgnoreCase("java.lang.Long")) {
        res.setValue(((Long)result).longValue());
      }
 else       if (classType.equalsIgnoreCase("java.lang.Double")) {
        res.setValue(((Double)result).longValue());
      }
 else       if (classType.equalsIgnoreCase("java.lang.String")) {
        res.setValue((new Long((String)result)).longValue());
      }
 else       if (classType.equalsIgnoreCase("org.mozilla.javascript.Undefined")) {
        res.setNull();
      }
 else       if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeJavaObject")) {
        Value v=(Value)Context.toType(result,Value.class);
        res.setValue(v.getInteger());
      }
 else {
        res.setValue((long)((Long)result).longValue());
      }
    break;
case Value.VALUE_TYPE_STRING:
  if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeJavaObject") || classType.equalsIgnoreCase("org.mozilla.javascript.Undefined")) {
    try {
      Value v=(Value)Context.toType(result,Value.class);
      res.setValue(v.getString());
    }
 catch (    Exception ev) {
      String s=(String)Context.toType(result,String.class);
      res.setValue(s);
    }
  }
 else {
    res.setValue(((String)result));
  }
break;
case Value.VALUE_TYPE_DATE:
double dbl=0;
if (classType.equalsIgnoreCase("org.mozilla.javascript.Undefined")) {
res.setNull();
}
 else {
if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeDate")) {
dbl=Context.toNumber(result);
}
 else if (classType.equalsIgnoreCase("org.mozilla.javascript.NativeJavaObject") || classType.equalsIgnoreCase("java.util.Date")) {
try {
  Date dat=(Date)Context.toType(result,java.util.Date.class);
  dbl=dat.getTime();
}
 catch (Exception e) {
  Value v=(Value)Context.toType(result,Value.class);
  Date dat=v.getDate();
  if (dat != null)   dbl=dat.getTime();
 else   res.setNull();
}
}
 else {
dbl=((Double)result).doubleValue();
}
long lng=Math.round(dbl);
Date dat=new Date(lng);
res.setValue(dat);
}
break;
case Value.VALUE_TYPE_BOOLEAN:
res.setValue(((Boolean)result).booleanValue());
break;
default :
res.setNull();
}
}
 else {
res.setNull();
}
}
 catch (Exception e) {
logError(Messages.getString("ScriptValuesMod.Log.JavascriptError") + e.toString());
logError(Messages.getString("ScriptValuesMod.Log.ErrorStackTrace") + Const.CR + Const.getStackTracker(e));
setErrors(getErrors() + 1);
return false;
}
return true;
}
return false;
}
