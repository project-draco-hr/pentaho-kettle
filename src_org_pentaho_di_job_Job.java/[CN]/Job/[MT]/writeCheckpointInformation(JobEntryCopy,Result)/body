{
  Database db=null;
  CheckpointLogTable checkpointLogTable=jobMeta.getCheckpointLogTable();
  setCheckpointJobEntry(jobEntryCopy);
  try {
    db=new Database(this,checkpointLogTable.getDatabaseMeta());
    db.shareVariablesWith(this);
    db.connect();
    db.setCommit(logCommitSize);
    LogStatus logStatus=LogStatus.RUNNING;
    if (runId < 0) {
      runId=checkpointLogTable.getDatabaseMeta().getNextBatchId(db,checkpointLogTable.getSchemaName(),checkpointLogTable.getTableName(),checkpointLogTable.getKeyField().getFieldName());
      logStatus=LogStatus.START;
    }
    db.writeLogRecord(checkpointLogTable,logStatus,result,this);
    db.cleanupLogRecords(checkpointLogTable);
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"Job.Exception.UnableToWriteCheckpointInformationToLogTable"),e);
  }
 finally {
    if (!db.isAutoCommit())     db.commit(true);
    db.disconnect();
  }
}
