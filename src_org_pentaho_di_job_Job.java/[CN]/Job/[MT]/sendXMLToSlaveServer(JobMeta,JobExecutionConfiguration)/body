{
  SlaveServer slaveServer=executionConfiguration.getRemoteServer();
  if (slaveServer == null)   throw new KettleException(Messages.getString("Job.Log.NoSlaveServerSpecified"));
  if (Const.isEmpty(jobMeta.getName()))   throw new KettleException(Messages.getString("Job.Log.UniqueJobName"));
  try {
    for (    String var : Const.INTERNAL_TRANS_VARIABLES)     executionConfiguration.getVariables().put(var,jobMeta.getVariable(var));
    for (    String var : Const.INTERNAL_JOB_VARIABLES)     executionConfiguration.getVariables().put(var,jobMeta.getVariable(var));
    String xml=new JobConfiguration(jobMeta,executionConfiguration).getXML();
    String reply=slaveServer.sendXML(xml,AddJobServlet.CONTEXT_PATH + "/?xml=Y");
    WebResult webResult=WebResult.fromXMLString(reply);
    if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
      throw new KettleException("There was an error posting the job on the remote server: " + Const.CR + webResult.getMessage());
    }
    reply=slaveServer.getContentFromServer(StartJobServlet.CONTEXT_PATH + "/?name=" + jobMeta.getName()+ "&xml=Y");
    webResult=WebResult.fromXMLString(reply);
    if (!webResult.getResult().equalsIgnoreCase(WebResult.STRING_OK)) {
      throw new KettleException("There was an error starting the job on the remote server: " + Const.CR + webResult.getMessage());
    }
  }
 catch (  Exception e) {
    throw new KettleException(e);
  }
}
