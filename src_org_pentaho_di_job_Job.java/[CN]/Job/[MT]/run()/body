{
  try {
    initialized=true;
    variables.initializeVariablesFrom(parentJob);
    setInternalKettleVariables(variables);
    result=execute();
  }
 catch (  KettleException je) {
    log.logError(toString(),Messages.getString("Job.Log.ErrorExecJob",je.getMessage()));
    log.logError(toString(),Const.getStackTracker(je));
    result=new Result();
    result.setNrErrors(1L);
    result.setResult(false);
  }
 finally {
    try {
      endProcessing("end",result);
    }
 catch (    KettleJobException e) {
      log.logError(toString(),Messages.getString("Job.Log.ErrorExecJob",e.getMessage()));
      log.logError(toString(),Const.getStackTracker(e));
    }
  }
}
