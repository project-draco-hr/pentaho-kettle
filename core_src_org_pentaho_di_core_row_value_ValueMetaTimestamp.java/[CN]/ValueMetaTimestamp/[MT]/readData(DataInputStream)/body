{
  try {
    if (inputStream.readBoolean()) {
      return null;
    }
switch (storageType) {
case STORAGE_TYPE_NORMAL:
      long time=inputStream.readLong();
    int nanos=inputStream.readInt();
  Timestamp timestamp=new Timestamp(time);
timestamp.setNanos(nanos);
return timestamp;
case STORAGE_TYPE_BINARY_STRING:
return readBinaryString(inputStream);
case STORAGE_TYPE_INDEXED:
return readSmallInteger(inputStream);
default :
throw new KettleFileException(toString() + " : Unknown storage type " + getStorageType());
}
}
 catch (EOFException e) {
throw new KettleEOFException(e);
}
catch (SocketTimeoutException e) {
throw e;
}
catch (IOException e) {
throw new KettleFileException(toString() + " : Unable to read value timestamp data from input stream",e);
}
}
