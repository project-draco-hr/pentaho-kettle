{
  string=Const.trimToType(string,getTrimType());
  if (Utils.isEmpty(string)) {
    return null;
  }
  Timestamp returnValue;
  try {
    returnValue=Timestamp.valueOf(string);
  }
 catch (  IllegalArgumentException e) {
    try {
      returnValue=(Timestamp)getDateFormat().parse(string);
    }
 catch (    ParseException ex) {
      throw new KettleValueException(toString() + " : couldn't convert string [" + string+ "] to a timestamp, expecting format [yyyy-mm-dd hh:mm:ss.ffffff]",e);
    }
  }
  return returnValue;
}
