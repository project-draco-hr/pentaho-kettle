{
  Object[] inputRow=getRow();
  if (inputRow == null) {
    try {
      CommitBatch();
    }
 catch (    Exception e) {
      throw new KettleException("Failed to commit batch: ",e);
    }
    this.logDebug("No More Rows.");
    setOutputDone();
    return false;
  }
  if (first) {
    try {
      prepareFieldList();
      if (idIndex == -1 && meta.getKeyLookups().size() > 0) {
        prepareReadParameters();
        prepareCache();
      }
      rowFields=openerERPAdapter.getFields(meta.getModelFields());
    }
 catch (    Exception e) {
      throw new KettleException("Failed to initialize step ",e);
    }
    first=false;
    data.batchRows.clear();
  }
  String row="";
  try {
    Row newRow=openerERPAdapter.getNewRow(rowFields);
    if (idIndex >= 0)     newRow.put("id",inputRow[idIndex]);
 else {
      String combinedKey="";
      for (      int i : readRowIndex)       combinedKey+=SEPARATOR + (inputRow[i] == null ? "" : inputRow[i]);
      if (filterRowCache.containsKey(combinedKey))       newRow.put("id",filterRowCache.get(combinedKey));
    }
    for (int i=0; i < meta.getModelFields().length; i++)     newRow.put(meta.getModelFields()[i],inputRow[this.index[i]]);
    data.batchRows.add(newRow);
    if (data.batchRows.size() == meta.getCommitBatchSize())     CommitBatch();
  }
 catch (  Exception e) {
    throw new KettleException("Failed to commit batch: " + row,e);
  }
  return true;
}
