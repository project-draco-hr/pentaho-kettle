{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  JobDialog.setShellImage(shell,jobEntry);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      jobEntry.setChanged();
    }
  }
;
  changed=jobEntry.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"PaloCubeDeleteDialog.PaloCubeDelete"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  labelStepName=new Label(shell,SWT.RIGHT);
  labelStepName.setText(BaseMessages.getString(PKG,"PaloCubeDeleteDialog.StepName"));
  props.setLook(labelStepName);
  FormData fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(0,margin);
  labelStepName.setLayoutData(fd);
  textStepName=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  textStepName.setText(jobEntry.getName());
  props.setLook(textStepName);
  textStepName.addModifyListener(lsMod);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.top=new FormAttachment(0,margin);
  fd.right=new FormAttachment(100,0);
  textStepName.setLayoutData(fd);
  addConnectionLine=addConnectionLine(shell,textStepName,Const.MIDDLE_PCT,margin);
  props.setLook(addConnectionLine);
  addConnectionLine.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      doSelectConnection(false);
    }
  }
);
  labelCubeName=new Label(shell,SWT.RIGHT);
  labelCubeName.setText(BaseMessages.getString(PKG,"PaloCubeDeleteDialog.CubeName"));
  props.setLook(labelCubeName);
  fd=new FormData();
  fd.left=new FormAttachment(0,0);
  fd.right=new FormAttachment(middle,-margin);
  fd.top=new FormAttachment(addConnectionLine,margin);
  labelCubeName.setLayoutData(fd);
  comboCubeName=new CCombo(shell,SWT.BORDER);
  comboCubeName.addModifyListener(lsMod);
  props.setLook(comboCubeName);
  comboCubeName.addFocusListener(new FocusListener(){
    public void focusLost(    FocusEvent arg0){
    }
    public void focusGained(    FocusEvent arg0){
      doSelectConnection(false);
    }
  }
);
  fd=new FormData();
  fd.left=new FormAttachment(middle,0);
  fd.right=new FormAttachment(100,0);
  fd.top=new FormAttachment(addConnectionLine,margin);
  comboCubeName.setLayoutData(fd);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wCancel},margin,comboCubeName);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  textStepName.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  getData();
  BaseStepDialog.setSize(shell);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return jobEntry;
}
