{
  try {
    Node fields=XMLHandler.getSubNode(stepnode,"fields");
    int nrfields=XMLHandler.countNodes(fields,"field");
    allocate(nrfields);
    String slength, sprecision;
    for (int i=0; i < nrfields; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(fields,"field",i);
      fieldName[i]=XMLHandler.getTagValue(fnode,"name");
      fieldType[i]=XMLHandler.getTagValue(fnode,"type");
      fieldFormat[i]=XMLHandler.getTagValue(fnode,"format");
      currency[i]=XMLHandler.getTagValue(fnode,"currency");
      decimal[i]=XMLHandler.getTagValue(fnode,"decimal");
      group[i]=XMLHandler.getTagValue(fnode,"group");
      slength=XMLHandler.getTagValue(fnode,"length");
      sprecision=XMLHandler.getTagValue(fnode,"precision");
      fieldLength[i]=Const.toInt(slength,-1);
      fieldPrecision[i]=Const.toInt(sprecision,-1);
    }
    Node datanode=XMLHandler.getSubNode(stepnode,"data");
    dataLines=new ArrayList<List<String>>();
    Node lineNode=datanode.getFirstChild();
    while (lineNode != null) {
      if ("line".equals(lineNode.getNodeName())) {
        List<String> line=new ArrayList<String>();
        Node itemNode=lineNode.getFirstChild();
        while (itemNode != null) {
          if ("item".equals(itemNode.getNodeName())) {
            line.add(XMLHandler.getNodeValue(itemNode));
          }
          itemNode=itemNode.getNextSibling();
        }
        dataLines.add(line);
      }
      lineNode=lineNode.getNextSibling();
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
