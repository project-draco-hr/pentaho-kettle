{
  try {
    int nrfields=rep.countNrStepAttributes(idStep,"field_name");
    allocate(nrfields);
    for (int i=0; i < nrfields; i++) {
      fieldName[i]=rep.getStepAttributeString(idStep,i,"field_name");
      fieldType[i]=rep.getStepAttributeString(idStep,i,"field_type");
      fieldFormat[i]=rep.getStepAttributeString(idStep,i,"field_format");
      currency[i]=rep.getStepAttributeString(idStep,i,"field_currency");
      decimal[i]=rep.getStepAttributeString(idStep,i,"field_decimal");
      group[i]=rep.getStepAttributeString(idStep,i,"field_group");
      fieldLength[i]=(int)rep.getStepAttributeInteger(idStep,i,"field_length");
      fieldPrecision[i]=(int)rep.getStepAttributeInteger(idStep,i,"field_precision");
    }
    int nrLines=(int)rep.getStepAttributeInteger(idStep,"nr_lines");
    dataLines=new ArrayList<List<String>>();
    for (int i=0; i < nrLines; i++) {
      List<String> line=new ArrayList<String>();
      for (int f=0; f < nrfields; f++) {
        String item=rep.getStepAttributeString(idStep,i,"item_" + f);
        line.add(item);
      }
      dataLines.add(line);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
