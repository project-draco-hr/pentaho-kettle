{
  try {
    super.loadXML(entrynode,databases,slaveServers);
    schemaname=XMLHandler.getTagValue(entrynode,"schemaname");
    tablename=XMLHandler.getTagValue(entrynode,"tablename");
    filename=XMLHandler.getTagValue(entrynode,"filename");
    datafiletype=XMLHandler.getTagValue(entrynode,"datafiletype");
    fieldterminator=XMLHandler.getTagValue(entrynode,"fieldterminator");
    lineterminated=XMLHandler.getTagValue(entrynode,"lineterminated");
    codepage=XMLHandler.getTagValue(entrynode,"codepage");
    specificcodepage=XMLHandler.getTagValue(entrynode,"specificcodepage");
    formatfilename=XMLHandler.getTagValue(entrynode,"formatfilename");
    firetriggers="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"firetriggers"));
    checkconstraints="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"checkconstraints"));
    keepnulls="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"keepnulls"));
    keepidentity="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"keepidentity"));
    tablock="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"tablock"));
    startfile=Const.toInt(XMLHandler.getTagValue(entrynode,"startfile"),0);
    endfile=Const.toInt(XMLHandler.getTagValue(entrynode,"endfile"),0);
    orderby=XMLHandler.getTagValue(entrynode,"orderby");
    orderdirection=XMLHandler.getTagValue(entrynode,"orderdirection");
    errorfilename=XMLHandler.getTagValue(entrynode,"errorfilename");
    maxerrors=Const.toInt(XMLHandler.getTagValue(entrynode,"maxerrors"),0);
    batchsize=Const.toInt(XMLHandler.getTagValue(entrynode,"batchsize"),0);
    rowsperbatch=Const.toInt(XMLHandler.getTagValue(entrynode,"rowsperbatch"),0);
    adddatetime="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"adddatetime"));
    String dbname=XMLHandler.getTagValue(entrynode,"connection");
    addfiletoresult="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"addfiletoresult"));
    truncate="Y".equalsIgnoreCase(XMLHandler.getTagValue(entrynode,"truncate"));
    connection=DatabaseMeta.findDatabase(databases,dbname);
  }
 catch (  KettleException e) {
    throw new KettleXMLException("Unable to load job entry of type 'Mysql bulk load' from XML node",e);
  }
}
