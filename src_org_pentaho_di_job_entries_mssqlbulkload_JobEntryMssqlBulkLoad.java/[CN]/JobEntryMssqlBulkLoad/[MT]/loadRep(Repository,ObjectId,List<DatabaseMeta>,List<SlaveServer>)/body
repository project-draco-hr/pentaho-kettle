{
  try {
    schemaname=rep.getJobEntryAttributeString(id_jobentry,"schemaname");
    tablename=rep.getJobEntryAttributeString(id_jobentry,"tablename");
    filename=rep.getJobEntryAttributeString(id_jobentry,"filename");
    datafiletype=rep.getJobEntryAttributeString(id_jobentry,"datafiletype");
    fieldterminator=rep.getJobEntryAttributeString(id_jobentry,"fieldterminator");
    lineterminated=rep.getJobEntryAttributeString(id_jobentry,"lineterminated");
    codepage=rep.getJobEntryAttributeString(id_jobentry,"codepage");
    specificcodepage=rep.getJobEntryAttributeString(id_jobentry,"specificcodepage");
    formatfilename=rep.getJobEntryAttributeString(id_jobentry,"formatfilename");
    firetriggers=rep.getJobEntryAttributeBoolean(id_jobentry,"firetriggers");
    checkconstraints=rep.getJobEntryAttributeBoolean(id_jobentry,"checkconstraints");
    keepnulls=rep.getJobEntryAttributeBoolean(id_jobentry,"keepnulls");
    keepidentity=rep.getJobEntryAttributeBoolean(id_jobentry,"keepidentity");
    tablock=rep.getJobEntryAttributeBoolean(id_jobentry,"tablock");
    startfile=(int)rep.getJobEntryAttributeInteger(id_jobentry,"startfile");
    endfile=(int)rep.getJobEntryAttributeInteger(id_jobentry,"endfile");
    orderby=rep.getJobEntryAttributeString(id_jobentry,"orderby");
    orderdirection=rep.getJobEntryAttributeString(id_jobentry,"orderdirection");
    errorfilename=rep.getJobEntryAttributeString(id_jobentry,"errorfilename");
    maxerrors=(int)rep.getJobEntryAttributeInteger(id_jobentry,"maxerrors");
    batchsize=(int)rep.getJobEntryAttributeInteger(id_jobentry,"batchsize");
    rowsperbatch=(int)rep.getJobEntryAttributeInteger(id_jobentry,"rowsperbatch");
    adddatetime=rep.getJobEntryAttributeBoolean(id_jobentry,"adddatetime");
    addfiletoresult=rep.getJobEntryAttributeBoolean(id_jobentry,"addfiletoresult");
    truncate=rep.getJobEntryAttributeBoolean(id_jobentry,"truncate");
    connection=rep.loadDatabaseMetaFromJobEntryAttribute(id_jobentry,"connection","id_database",databases);
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException("Unable to load job entry of type 'MSsql bulk load' from the repository for id_jobentry=" + id_jobentry,dbe);
  }
}
