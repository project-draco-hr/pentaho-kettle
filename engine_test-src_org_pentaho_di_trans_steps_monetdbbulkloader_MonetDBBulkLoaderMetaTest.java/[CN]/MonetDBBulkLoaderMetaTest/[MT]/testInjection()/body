{
  try {
    List<StepInjectionMetaEntry> entries=loader.getStepMeta().getStepMetaInterface().getStepMetaInjectionInterface().getStepInjectionMetadataEntries();
    for (    StepInjectionMetaEntry entry : entries) {
      entry.setValueType(lm.findAttribute(entry.getKey()).getType());
switch (entry.getValueType()) {
case ValueMetaInterface.TYPE_STRING:
        entry.setValue("new_".concat(entry.getKey()));
      break;
case ValueMetaInterface.TYPE_BOOLEAN:
    entry.setValue(Boolean.TRUE);
  break;
default :
break;
}
if (!entry.getDetails().isEmpty()) {
List<StepInjectionMetaEntry> childEntries=entry.getDetails().get(0).getDetails();
for (StepInjectionMetaEntry childEntry : childEntries) {
switch (childEntry.getValueType()) {
case ValueMetaInterface.TYPE_STRING:
  childEntry.setValue("new_".concat(childEntry.getKey()));
break;
case ValueMetaInterface.TYPE_BOOLEAN:
childEntry.setValue(Boolean.TRUE);
break;
default :
break;
}
}
}
}
loader.getStepMeta().getStepMetaInterface().getStepMetaInjectionInterface().injectStepMetadataEntries(entries);
assertEquals("Schema name not properly injected... ","new_SCHEMA",lm.getSchemaName());
assertEquals("Table name not properly injected... ","new_TABLE",lm.getTableName());
assertEquals("Logfile not properly injected... ","new_LOGFILE",lm.getLogFile());
assertEquals("Field separator not properly injected... ","new_FIELD_SEPARATOR",lm.getFieldSeparator());
assertEquals("Field enclosure not properly injected... ","new_FIELD_ENCLOSURE",lm.getFieldEnclosure());
assertEquals("Null representation not properly injected... ","new_NULL_REPRESENTATION",lm.getNULLrepresentation());
assertEquals("Encoding path not properly injected... ","new_ENCODING",lm.getEncoding());
assertEquals("Buffer size not properly injected... ","new_BUFFER_SIZE",lm.getBufferSize());
assertEquals("Truncate not properly injected... ",Boolean.TRUE,lm.isTruncate());
assertEquals("Fully Quote SQL not properly injected... ",Boolean.TRUE,lm.isFullyQuoteSQL());
assertEquals("Field name not properly injected... ","new_FIELDNAME",lm.getFieldTable()[0]);
assertEquals("Stream name not properly injected... ","new_STREAMNAME",lm.getFieldStream()[0]);
assertEquals("Field Format not properly injected... ",Boolean.TRUE,lm.getFieldFormatOk()[0]);
}
 catch (KettleException e) {
fail(e.getMessage());
}
}
