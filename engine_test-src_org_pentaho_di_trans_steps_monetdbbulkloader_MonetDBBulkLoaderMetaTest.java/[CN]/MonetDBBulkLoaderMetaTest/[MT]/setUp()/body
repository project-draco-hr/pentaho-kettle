{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  TransMeta transMeta=new TransMeta();
  transMeta.setName("loader");
  lm=new MonetDBBulkLoaderMeta();
  ld=new MonetDBBulkLoaderData();
  PluginRegistry plugReg=PluginRegistry.getInstance();
  String loaderPid=plugReg.getPluginId(StepPluginType.class,lm);
  stepMeta=new StepMeta(loaderPid,"loader",lm);
  Trans trans=new Trans(transMeta);
  transMeta.addStep(stepMeta);
  loader=new MonetDBBulkLoader(stepMeta,ld,1,transMeta,trans);
  List<String> attributes=Arrays.asList("dbConnectionName","schemaName","tableName","logFile","fieldSeparator","fieldEnclosure","NULLrepresentation","encoding","truncate","fullyQuoteSQL","fieldTable","fieldStream","fieldFormatOk");
  FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),5);
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("fieldTable",stringArrayLoadSaveValidator);
  attrValidatorMap.put("fieldStream",stringArrayLoadSaveValidator);
  attrValidatorMap.put("fieldFormatOk",new PrimitiveBooleanArrayLoadSaveValidator(new BooleanLoadSaveValidator(),5));
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,new ArrayList<String>(),new ArrayList<String>(),new HashMap<String,String>(),new HashMap<String,String>(),attrValidatorMap,typeValidatorMap,this);
}
