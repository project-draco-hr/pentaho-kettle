{
  SalesforceStepMeta meta=mock(SalesforceStepMeta.class,Mockito.CALLS_REAL_METHODS);
  meta.setDefault();
  List<CheckResultInterface> remarks=new ArrayList<CheckResultInterface>();
  meta.check(remarks,null,null,null,null,null,null,null,null,null);
  boolean hasError=false;
  for (  CheckResultInterface cr : remarks) {
    if (cr.getType() == CheckResult.TYPE_RESULT_ERROR) {
      hasError=true;
    }
  }
  assertFalse(remarks.isEmpty());
  assertTrue(hasError);
  remarks.clear();
  meta.setDefault();
  meta.setUsername("anonymous");
  meta.check(remarks,null,null,null,null,null,null,null,null,null);
  hasError=false;
  for (  CheckResultInterface cr : remarks) {
    if (cr.getType() == CheckResult.TYPE_RESULT_ERROR) {
      hasError=true;
    }
  }
  assertFalse(remarks.isEmpty());
  assertFalse(hasError);
  remarks.clear();
  meta.setDefault();
  meta.setTargetURL(null);
  meta.setUserName("anonymous");
  meta.setPassword("password");
  meta.check(remarks,null,null,null,null,null,null,null,null,null);
  hasError=false;
  for (  CheckResultInterface cr : remarks) {
    if (cr.getType() == CheckResult.TYPE_RESULT_ERROR) {
      hasError=true;
    }
  }
  assertFalse(remarks.isEmpty());
  assertTrue(hasError);
  remarks.clear();
  meta.setDefault();
  meta.setUsername("anonymous");
  meta.setModule(null);
  meta.check(remarks,null,null,null,null,null,null,null,null,null);
  hasError=false;
  for (  CheckResultInterface cr : remarks) {
    if (cr.getType() == CheckResult.TYPE_RESULT_ERROR) {
      hasError=true;
    }
  }
  assertFalse(remarks.isEmpty());
  assertTrue(hasError);
}
