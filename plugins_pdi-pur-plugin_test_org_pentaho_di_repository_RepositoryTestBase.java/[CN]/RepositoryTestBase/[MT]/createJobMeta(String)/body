{
  RepositoryDirectoryInterface rootDir=loadStartDirectory();
  JobMeta jobMeta=new JobMeta();
  jobMeta.setName(jobName);
  jobMeta.setDescription(EXP_JOB_DESC);
  jobMeta.setExtendedDescription(EXP_JOB_EXTENDED_DESC);
  jobMeta.setRepositoryDirectory(rootDir.findDirectory(DIR_JOBS));
  jobMeta.setJobversion(EXP_JOB_VERSION);
  jobMeta.setJobstatus(EXP_JOB_STATUS);
  jobMeta.setCreatedUser(EXP_JOB_CREATED_USER);
  jobMeta.setCreatedDate(EXP_JOB_CREATED_DATE);
  jobMeta.setModifiedUser(EXP_JOB_MOD_USER);
  jobMeta.setModifiedDate(EXP_JOB_MOD_DATE);
  jobMeta.addParameterDefinition(EXP_JOB_PARAM_1_NAME,EXP_JOB_PARAM_1_DEF,EXP_JOB_PARAM_1_DESC);
  JobLogTable jobLogTable=JobLogTable.getDefault(jobMeta,jobMeta);
  jobLogTable.setConnectionName(EXP_JOB_LOG_TABLE_CONN_NAME);
  jobLogTable.setLogInterval(EXP_JOB_LOG_TABLE_INTERVAL);
  jobLogTable.setSchemaName(EXP_JOB_LOG_TABLE_SCHEMA_NAME);
  jobLogTable.setLogSizeLimit(EXP_JOB_LOG_TABLE_SIZE_LIMIT);
  jobLogTable.setTableName(EXP_JOB_LOG_TABLE_TABLE_NAME);
  jobLogTable.setTimeoutInDays(EXP_JOB_LOG_TABLE_TIMEOUT_IN_DAYS);
  jobMeta.setJobLogTable(jobLogTable);
  JobEntryLogTable jobEntryLogTable=JobEntryLogTable.getDefault(jobMeta,jobMeta);
  jobEntryLogTable.setConnectionName(EXP_JOB_LOG_TABLE_CONN_NAME);
  jobEntryLogTable.setSchemaName(EXP_JOB_LOG_TABLE_SCHEMA_NAME);
  jobEntryLogTable.setTableName(EXP_JOB_LOG_TABLE_TABLE_NAME);
  jobEntryLogTable.setTimeoutInDays(EXP_JOB_LOG_TABLE_TIMEOUT_IN_DAYS);
  jobMeta.setJobEntryLogTable(jobEntryLogTable);
  ChannelLogTable channelLogTable=ChannelLogTable.getDefault(jobMeta,jobMeta);
  channelLogTable.setConnectionName(EXP_JOB_LOG_TABLE_CONN_NAME);
  channelLogTable.setSchemaName(EXP_JOB_LOG_TABLE_SCHEMA_NAME);
  channelLogTable.setTableName(EXP_JOB_LOG_TABLE_TABLE_NAME);
  channelLogTable.setTimeoutInDays(EXP_JOB_LOG_TABLE_TIMEOUT_IN_DAYS);
  jobMeta.setChannelLogTable(channelLogTable);
  jobMeta.setBatchIdPassed(EXP_JOB_BATCH_ID_PASSED);
  jobMeta.setSharedObjectsFile(EXP_JOB_SHARED_OBJECTS_FILE);
  DatabaseMeta entryDbMeta=createDatabaseMeta(EXP_DBMETA_NAME_JOB.concat(jobName));
  repository.save(entryDbMeta,VERSION_COMMENT_V1,null);
  deleteStack.push(entryDbMeta);
  JobEntryCopy jobEntryCopy1=createJobEntry1Copy(entryDbMeta);
  jobMeta.addJobEntry(jobEntryCopy1);
  JobEntryCopy jobEntryCopy2=createJobEntry2Copy(entryDbMeta);
  jobMeta.addJobEntry(jobEntryCopy2);
  jobMeta.addJobHop(createJobHopMeta(jobEntryCopy1,jobEntryCopy2));
  jobMeta.addNote(createNotePadMeta(jobName));
  return jobMeta;
}
