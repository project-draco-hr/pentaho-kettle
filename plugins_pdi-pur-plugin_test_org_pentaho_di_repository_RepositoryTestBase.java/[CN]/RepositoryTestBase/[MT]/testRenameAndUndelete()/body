{
  RepositoryDirectoryInterface rootDir=initRepo();
  JobMeta jobMeta=createJobMeta(EXP_JOB_NAME);
  RepositoryDirectoryInterface jobsDir=rootDir.findDirectory(DIR_JOBS);
  repository.save(jobMeta,VERSION_COMMENT_V1,null);
  deleteStack.push(jobMeta);
  repository.deleteJob(jobMeta.getObjectId());
  assertFalse(repository.exists(EXP_JOB_NAME,jobsDir,RepositoryObjectType.JOB));
  RepositoryObject robj=new RepositoryObject(jobMeta.getObjectId(),jobMeta.getName(),jobMeta.getRepositoryDirectory(),null,null,jobMeta.getRepositoryElementType(),null,false);
  repository.undeleteObject(robj);
  assertTrue(repository.exists(EXP_JOB_NAME,jobsDir,RepositoryObjectType.JOB));
  repository.renameJob(jobMeta.getObjectId(),jobsDir,EXP_JOB_NAME_NEW);
  assertFalse(repository.exists(EXP_JOB_NAME,jobsDir,RepositoryObjectType.JOB));
  assertTrue(repository.exists(EXP_JOB_NAME_NEW,jobsDir,RepositoryObjectType.JOB));
  TransMeta transMeta=createTransMeta(EXP_DBMETA_NAME);
  RepositoryDirectoryInterface transDir=rootDir.findDirectory(DIR_TRANSFORMATIONS);
  repository.save(transMeta,VERSION_COMMENT_V1,null);
  deleteStack.push(transMeta);
  repository.renameTransformation(transMeta.getObjectId(),transDir,EXP_TRANS_NAME_NEW);
  assertFalse(repository.exists(EXP_TRANS_NAME.concat(EXP_DBMETA_NAME),transDir,RepositoryObjectType.TRANSFORMATION));
  assertTrue(repository.exists(EXP_TRANS_NAME_NEW,transDir,RepositoryObjectType.TRANSFORMATION));
  DatabaseMeta dbMeta=createDatabaseMeta(EXP_DBMETA2_NAME);
  repository.save(dbMeta,VERSION_COMMENT_V1,null);
  deleteStack.push(dbMeta);
  dbMeta.setName(EXP_DBMETA_NAME_NEW);
  repository.save(dbMeta,VERSION_COMMENT_V2,null);
  assertFalse(repository.exists(EXP_DBMETA2_NAME,null,RepositoryObjectType.DATABASE));
  assertTrue(repository.exists(EXP_DBMETA_NAME_NEW,null,RepositoryObjectType.DATABASE));
}
