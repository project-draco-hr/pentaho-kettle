{
  initRepo();
  ClusterSchema clusterSchema=createClusterSchema(EXP_CLUSTER_SCHEMA_NAME);
  repository.save(clusterSchema,VERSION_COMMENT_V1,null);
  assertNotNull(clusterSchema.getObjectId());
  ObjectRevision version=clusterSchema.getObjectRevision();
  assertNotNull(version);
  assertTrue(hasVersionWithComment(clusterSchema,VERSION_COMMENT_V1));
  assertTrue(repository.exists(EXP_CLUSTER_SCHEMA_NAME,null,RepositoryObjectType.CLUSTER_SCHEMA));
  ClusterSchema fetchedClusterSchema=repository.loadClusterSchema(clusterSchema.getObjectId(),repository.getSlaveServers(),null);
  assertEquals(EXP_CLUSTER_SCHEMA_NAME,fetchedClusterSchema.getName());
  assertEquals(EXP_CLUSTER_SCHEMA_BASE_PORT,fetchedClusterSchema.getBasePort());
  assertEquals(EXP_CLUSTER_SCHEMA_SOCKETS_BUFFER_SIZE,fetchedClusterSchema.getSocketsBufferSize());
  assertEquals(EXP_CLUSTER_SCHEMA_SOCKETS_FLUSH_INTERVAL,fetchedClusterSchema.getSocketsFlushInterval());
  assertEquals(EXP_CLUSTER_SCHEMA_SOCKETS_COMPRESSED,fetchedClusterSchema.isSocketsCompressed());
  assertEquals(EXP_CLUSTER_SCHEMA_DYN,fetchedClusterSchema.isDynamic());
  assertEquals(1,fetchedClusterSchema.getSlaveServers().size());
  assertTrue(fetchedClusterSchema.getSlaveServers().get(0).getName().startsWith(EXP_SLAVE_NAME));
  clusterSchema.setBasePort(EXP_CLUSTER_SCHEMA_BASE_PORT_V2);
  repository.save(clusterSchema,VERSION_COMMENT_V2,null);
  assertEquals(VERSION_COMMENT_V2,clusterSchema.getObjectRevision().getComment());
  fetchedClusterSchema=repository.loadClusterSchema(clusterSchema.getObjectId(),repository.getSlaveServers(),null);
  assertEquals(EXP_CLUSTER_SCHEMA_BASE_PORT_V2,fetchedClusterSchema.getBasePort());
  fetchedClusterSchema=repository.loadClusterSchema(clusterSchema.getObjectId(),repository.getSlaveServers(),VERSION_LABEL_V1);
  assertEquals(EXP_CLUSTER_SCHEMA_BASE_PORT,fetchedClusterSchema.getBasePort());
  assertEquals(clusterSchema.getObjectId(),repository.getClusterID(EXP_CLUSTER_SCHEMA_NAME));
  assertEquals(1,repository.getClusterIDs(false).length);
  assertEquals(1,repository.getClusterIDs(true).length);
  assertEquals(clusterSchema.getObjectId(),repository.getClusterIDs(false)[0]);
  assertEquals(1,repository.getClusterNames(false).length);
  assertEquals(1,repository.getClusterNames(true).length);
  assertEquals(EXP_CLUSTER_SCHEMA_NAME,repository.getClusterNames(false)[0]);
  repository.deleteClusterSchema(clusterSchema.getObjectId());
  assertFalse(repository.exists(EXP_CLUSTER_SCHEMA_NAME,null,RepositoryObjectType.CLUSTER_SCHEMA));
  assertEquals(0,repository.getClusterIDs(false).length);
  assertEquals(0,repository.getClusterIDs(true).length);
  assertEquals(0,repository.getClusterNames(false).length);
  assertEquals(0,repository.getClusterNames(true).length);
}
