{
  PurRepositoryExporter purRepoExporter=new PurRepositoryExporter(mock(PurRepository.class));
  String hardcodedString="hardcoded";
  String globalParam="${" + Const.KETTLE_TRANS_LOG_TABLE + "}";
  StepLogTable stepLogTable=StepLogTable.getDefault(mockedVariableSpace,mockedHasDbInterface);
  stepLogTable.setConnectionName(hardcodedString);
  stepLogTable.setSchemaName(hardcodedString);
  stepLogTable.setTimeoutInDays(hardcodedString);
  stepLogTable.setTableName(globalParam);
  JobEntryLogTable jobEntryLogTable=JobEntryLogTable.getDefault(mockedVariableSpace,mockedHasDbInterface);
  jobEntryLogTable.setConnectionName(hardcodedString);
  jobEntryLogTable.setSchemaName(hardcodedString);
  jobEntryLogTable.setTimeoutInDays(hardcodedString);
  jobEntryLogTable.setTableName(globalParam);
  List<LogTableInterface> logTables=new ArrayList<>();
  logTables.add(jobEntryLogTable);
  logTables.add(stepLogTable);
  purRepoExporter.setGlobalVariablesOfLogTablesNull(logTables);
  for (  LogTableInterface logTable : logTables) {
    assertEquals(logTable.getConnectionName(),hardcodedString);
    assertEquals(logTable.getSchemaName(),hardcodedString);
    assertEquals(logTable.getTimeoutInDays(),hardcodedString);
    assertEquals(logTable.getTableName(),null);
  }
}
