{
  PurRepository purRepository=new PurRepository();
  IUnifiedRepository mockRepo=mock(IUnifiedRepository.class);
  RepositoryConnectResult result=mock(RepositoryConnectResult.class);
  when(result.getUnifiedRepository()).thenReturn(mockRepo);
  IRepositoryConnector connector=mock(IRepositoryConnector.class);
  when(connector.connect(anyString(),anyString())).thenReturn(result);
  PurRepositoryMeta mockMeta=mock(PurRepositoryMeta.class);
  purRepository.init(mockMeta);
  purRepository.setPurRepositoryConnector(connector);
  RepositoryFile mockRootFolder=mock(RepositoryFile.class);
  when(mockRootFolder.getId()).thenReturn("/");
  when(mockRootFolder.getPath()).thenReturn("/");
  when(mockRepo.getFile("/")).thenReturn(mockRootFolder);
  RepositoryFileTree repositoryFileTree=mock(RepositoryFileTree.class);
  when(mockRepo.getTree("/",-1,null,true)).thenReturn(repositoryFileTree);
  when(repositoryFileTree.getFile()).thenReturn(mockRootFolder);
  purRepository.connect("TEST_USER","TEST_PASSWORD");
  RepositoryDirectoryInterface rootDir=purRepository.getRootDir();
  assertFalse(rootDir.isVisible());
}
