{
  SwitchCaseCustom krasavez=new SwitchCaseCustom(mockHelper);
  krasavez.first=false;
  RowSet rowSetOne=new QueueRowSet();
  RowSet rowSetTwo=new QueueRowSet();
  krasavez.data.outputMap.put(3,rowSetOne);
  krasavez.data.outputMap.put(3,rowSetTwo);
  RowSet rowSetNullOne=new QueueRowSet();
  RowSet rowSetNullTwo=new QueueRowSet();
  krasavez.data.nullRowSetSet.add(rowSetNullOne);
  krasavez.data.nullRowSetSet.add(rowSetNullTwo);
  RowSet def=new QueueRowSet();
  krasavez.data.defaultRowSetSet.add(def);
  krasavez.generateData(1,5,2);
  krasavez.processRow();
  Assert.assertEquals("First row set collects 2 rows",2,rowSetOne.size());
  Assert.assertEquals("Second row set collects 2 rows",2,rowSetTwo.size());
  Assert.assertEquals("First null row set collects 5 rowa",5,rowSetNullOne.size());
  Assert.assertEquals("Second null row set collects 5 rowa",5,rowSetNullTwo.size());
  Assert.assertEquals("Default row set collects the rest of rows",8,def.size());
  Assert.assertEquals("First row set contains only 3: ",true,isRowSetContainsValue(rowSetOne,new Object[]{3},new Object[]{}));
  Assert.assertEquals("Second row set contains only 3: ",true,isRowSetContainsValue(rowSetTwo,new Object[]{3},new Object[]{}));
  Assert.assertEquals("First null row set contains only null: ",true,isRowSetContainsValue(rowSetNullOne,new Object[]{null},new Object[]{}));
  Assert.assertEquals("Second null row set contains only null: ",true,isRowSetContainsValue(rowSetNullTwo,new Object[]{null},new Object[]{}));
  Assert.assertEquals("Default row set do not contains null or 3, but other",true,isRowSetContainsValue(def,new Object[]{1,2,4,5},new Object[]{3,null}));
}
