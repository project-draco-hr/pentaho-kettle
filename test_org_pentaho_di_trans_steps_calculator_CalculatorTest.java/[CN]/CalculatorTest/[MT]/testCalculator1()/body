{
  KettleEnvironment.init();
  PluginRegistry registry=PluginRegistry.getInstance();
  TransMeta transMeta=new TransMeta();
  transMeta.setName("calculatortest1");
  String rowGeneratorStepname="row generator step";
  RowGeneratorMeta rm=new RowGeneratorMeta();
  String rowGeneratorPid=registry.getPluginId(StepPluginType.class,rm);
  StepMeta rowGeneratorStep=new StepMeta(rowGeneratorPid,rowGeneratorStepname,rm);
  transMeta.addStep(rowGeneratorStep);
  String[] strDummies={};
  int[] intDummies={};
  rm.setDefault();
  rm.setFieldName(strDummies);
  rm.setFieldType(strDummies);
  rm.setValue(strDummies);
  rm.setFieldLength(intDummies);
  rm.setFieldPrecision(intDummies);
  rm.setRowLimit("1");
  rm.setFieldFormat(strDummies);
  rm.setGroup(strDummies);
  rm.setDecimal(strDummies);
  String calculatorStepname1="calculator 1";
  CalculatorMeta calc1=new CalculatorMeta();
  CalculatorMetaFunction[] calculations=new CalculatorMetaFunction[]{new CalculatorMetaFunction("timestamp1",CalculatorMetaFunction.CALC_CONSTANT,"1970-01-01 00:00:00.100100","","",ValueMetaInterface.TYPE_TIMESTAMP,0,0,false,"","","",""),new CalculatorMetaFunction("int1",CalculatorMetaFunction.CALC_CONSTANT,"1","","",ValueMetaInterface.TYPE_INTEGER,0,0,false,"","","",""),new CalculatorMetaFunction("timestamp plus 1 day",CalculatorMetaFunction.CALC_ADD_DAYS,"timestamp1","int1","",ValueMetaInterface.TYPE_DATE,0,0,false,"","","","")};
  calc1.setCalculation(calculations);
  String calculatorPid1=registry.getPluginId(StepPluginType.class,calc1);
  StepMeta calcualtorStep1=new StepMeta(calculatorPid1,calculatorStepname1,calc1);
  transMeta.addStep(calcualtorStep1);
  TransHopMeta hi1=new TransHopMeta(rowGeneratorStep,calcualtorStep1);
  transMeta.addTransHop(hi1);
  Trans trans=new Trans(transMeta);
  trans.prepareExecution(null);
  StepInterface si=trans.getStepInterface(calculatorStepname1,0);
  RowStepCollector endRc=new RowStepCollector();
  si.addRowListener(endRc);
  trans.startThreads();
  trans.waitUntilFinished();
  List<RowMetaAndData> goldenImageRows=createResultData1();
  List<RowMetaAndData> resultRows1=endRc.getRowsWritten();
  checkRows(resultRows1,goldenImageRows);
}
