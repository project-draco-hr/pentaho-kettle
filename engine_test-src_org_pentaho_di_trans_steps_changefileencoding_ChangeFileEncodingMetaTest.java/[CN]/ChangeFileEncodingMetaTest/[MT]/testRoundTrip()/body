{
  List<String> attributes=Arrays.asList("filenamefield","targetfilenamefield","sourceencoding","targetencoding","addsourceresultfilenames","addtargetresultfilenames","createparentfolder");
  Map<String,String> getterMap=new HashMap<String,String>();
  getterMap.put("filenamefield","getDynamicFilenameField");
  getterMap.put("targetfilenamefield","getTargetFilenameField");
  getterMap.put("sourceencoding","getSourceEncoding");
  getterMap.put("targetencoding","getTargetEncoding");
  getterMap.put("addsourceresultfilenames","addSourceResultFilenames");
  getterMap.put("addtargetresultfilenames","addTargetResultFilenames");
  getterMap.put("createparentfolder","isCreateParentFolder");
  Map<String,String> setterMap=new HashMap<String,String>();
  setterMap.put("filenamefield","setDynamicFilenameField");
  setterMap.put("targetfilenamefield","setTargetFilenameField");
  setterMap.put("sourceencoding","setSourceEncoding");
  setterMap.put("targetencoding","setTargetEncoding");
  setterMap.put("addsourceresultfilenames","setaddSourceResultFilenames");
  setterMap.put("addtargetresultfilenames","setaddTargetResultFilenames");
  setterMap.put("createparentfolder","setCreateParentFolder");
  LoadSaveTester loadSaveTester=new LoadSaveTester(ChangeFileEncodingMeta.class,attributes,getterMap,setterMap);
  loadSaveTester.testRepoRoundTrip();
  loadSaveTester.testXmlRoundTrip();
}
