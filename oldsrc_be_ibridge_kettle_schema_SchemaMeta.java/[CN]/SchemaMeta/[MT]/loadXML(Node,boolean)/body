{
  int n;
  System.out.println("Loading schema from XML!");
  try {
    n=XMLHandler.countNodes(schemanode,"connection");
    log.logDebug(toString(),"We have " + n + " connections...");
    System.out.println("We have " + n + " connections...");
    for (int i=0; i < n; i++) {
      log.logDebug(toString(),"Looking at connection #" + i);
      Node dbnode=XMLHandler.getSubNodeByNr(schemanode,"connection",i);
      DatabaseMeta dbcon=new DatabaseMeta(dbnode);
      DatabaseMeta exist=findConnection(dbcon.getName());
      if (exist == null)       addConnection(dbcon);
 else {
        int idx=indexOfConnection(exist);
        removeConnection(idx);
        addConnection(idx,dbcon);
      }
    }
    Node infonode=XMLHandler.getSubNode(schemanode,"info");
    name=XMLHandler.getTagValue(infonode,"name");
    Node notepadsnode=XMLHandler.getSubNode(schemanode,"notepads");
    int nrnotes=XMLHandler.countNodes(notepadsnode,"notepad");
    System.out.println("We have " + nrnotes + " notes.");
    for (int i=0; i < nrnotes; i++) {
      Node notepadnode=XMLHandler.getSubNodeByNr(notepadsnode,"notepad",i);
      NotePadMeta ni=new NotePadMeta(notepadnode);
      notes.add(ni);
    }
    Node tablesnode=XMLHandler.getSubNode(schemanode,"tables");
    int nrtables=XMLHandler.countNodes(tablesnode,"table");
    log.logDebug(toString(),"We have " + nrtables + " tables...");
    System.out.println("We have " + nrtables + " tables.");
    for (int i=0; i < nrtables; i++) {
      Node tablenode=XMLHandler.getSubNodeByNr(tablesnode,"table",i);
      TableMeta ti=new TableMeta();
      if (ti.loadXML(tablenode,databases)) {
        addTable(ti);
      }
 else {
        log.logError(toString(),"Error reading table #" + i + " from XML");
        return false;
      }
    }
    Node relsnode=XMLHandler.getSubNode(schemanode,"relationships");
    n=XMLHandler.countNodes(relsnode,"relationship");
    log.logDebug(toString(),"We have " + n + " relationships...");
    System.out.println("We have " + n + " relationships.");
    for (int i=0; i < n; i++) {
      Node relnode=XMLHandler.getSubNodeByNr(relsnode,"relationship",i);
      log.logDebug(toString(),"Looking at relationship #" + i);
      RelationshipMeta ri=new RelationshipMeta();
      if (ri.loadXML(relnode,tables)) {
        if (merge) {
          RelationshipMeta exist=findRelationship(ri.toString());
          if (exist == null)           addRelationship(ri);
 else {
            log.logDebug(toString(),"Replacing hop #" + i);
            int idx=indexOfRelationship(exist);
            removeRelationship(idx);
            addRelationship(idx,ri);
          }
          log.logDebug(toString(),"Read relation: " + ri.toString());
        }
 else {
          addRelationship(ri);
        }
      }
 else {
        log.logError(toString(),"Error reading relationship #" + i + " from XML");
        return false;
      }
    }
    Node selnode=XMLHandler.getSubNode(schemanode,"selection");
    int nrselfields=XMLHandler.countNodes(selnode,"field");
    log.logDebug(toString(),"We have " + nrselfields + " fields...");
    System.out.println("We have " + nrselfields + " fields.");
    for (int i=0; i < nrselfields; i++) {
      Node fieldnode=XMLHandler.getSubNodeByNr(selnode,"field",i);
      String field=XMLHandler.getTagValue(fieldnode,"name");
      String table=XMLHandler.getTagValue(fieldnode,"table");
      TableField f=findField(table,field);
      addSelField(f);
    }
    int nrselconditions=XMLHandler.countNodes(selnode,"condition");
    log.logDebug(toString(),"We have " + nrselconditions + " conditions...");
    System.out.println("We have " + nrselconditions + " selected conditions.");
    for (int i=0; i < nrselconditions; i++) {
      Node condnode=XMLHandler.getSubNodeByNr(selnode,"condition",i);
      String name=XMLHandler.getTagValue(condnode,"name");
      String table=XMLHandler.getTagValue(condnode,"table");
      WhereCondition c=findCondition(table,name);
      addSelCondition(c);
    }
    selcubefile=XMLHandler.getTagValue(selnode,"cubefile");
    log.logDebug(toString(),"nr of connections   read : " + nrConnections());
    log.logDebug(toString(),"nr of tables        read : " + nrTables());
    log.logDebug(toString(),"nr of relationships read : " + nrRelationships());
    log.logDebug(toString(),"nr of notes         read : " + nrNotes());
    log.logDebug(toString(),"nr of selfields     read : " + nrSelFields());
    System.out.println("nr of connections   read : " + nrConnections());
    System.out.println("nr of tables        read : " + nrTables());
    System.out.println("nr of relationships read : " + nrRelationships());
    System.out.println("nr of notes         read : " + nrNotes());
    System.out.println("nr of selfields     read : " + nrSelFields());
    return true;
  }
 catch (  Exception e) {
    log.logError(toString(),"Error reading information from file : " + e.toString());
    e.printStackTrace();
    return false;
  }
}
