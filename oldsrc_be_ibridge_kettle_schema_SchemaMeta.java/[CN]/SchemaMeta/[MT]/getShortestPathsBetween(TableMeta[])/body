{
  if (tabs == null || tabs.length < 2)   return new Vector();
  Vector pathlist[]=new Vector[tabs.length - 1];
  Path path=new Path();
  Vector paths=null;
  for (int i=0; i < tabs.length - 1; i++) {
    TableMeta one=tabs[i];
    TableMeta two=tabs[i + 1];
    pathlist[i]=new Vector();
    if (i > 0) {
      Vector prev=pathlist[i - 1];
      for (int p=0; p < prev.size(); p++) {
        getShortestPathsBetween(one,two,pathlist[i],(Path)prev.get(p));
      }
    }
 else {
      getShortestPathsBetween(one,two,pathlist[i],path);
    }
    int min=getMinimumSize(pathlist[i]);
    onlyKeepSize(pathlist[i],min);
  }
  paths=pathlist[tabs.length - 2];
  quickSort(paths);
  return paths;
}
