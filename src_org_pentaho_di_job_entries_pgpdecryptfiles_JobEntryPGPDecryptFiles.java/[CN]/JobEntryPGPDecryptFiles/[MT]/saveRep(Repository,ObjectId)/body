{
  try {
    rep.saveJobEntryAttribute(id_job,getObjectId(),"gpglocation",gpglocation);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"arg_from_previous",arg_from_previous);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"include_subfolders",include_subfolders);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_result_filesname",add_result_filesname);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"destination_is_a_file",destination_is_a_file);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"create_destination_folder",create_destination_folder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"nr_errors_less_than",nr_errors_less_than);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"success_condition",success_condition);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_date",add_date);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_time",add_time);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"SpecifyFormat",SpecifyFormat);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"date_time_format",date_time_format);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"AddDateBeforeExtension",AddDateBeforeExtension);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"DoNotKeepFolderStructure",DoNotKeepFolderStructure);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"iffileexists",iffileexists);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"destinationFolder",destinationFolder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"ifmovedfileexists",ifmovedfileexists);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"moved_date_time_format",moved_date_time_format);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_moved_date",add_moved_date);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"add_moved_time",add_moved_time);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"SpecifyMoveFormat",SpecifyMoveFormat);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"create_move_to_folder",create_move_to_folder);
    rep.saveJobEntryAttribute(id_job,getObjectId(),"AddMovedDateBeforeExtension",AddMovedDateBeforeExtension);
    if (source_filefolder != null) {
      for (int i=0; i < source_filefolder.length; i++) {
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"source_filefolder",source_filefolder[i]);
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"passphrase",passphrase[i]);
        rep.saveJobEntryAttribute(id_job,getObjectId(),"passphrase",Encr.encryptPasswordIfNotUsingVariables(passphrase[i]));
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"destination_filefolder",destination_filefolder[i]);
        rep.saveJobEntryAttribute(id_job,getObjectId(),i,"wildcard",wildcard[i]);
      }
    }
  }
 catch (  KettleDatabaseException dbe) {
    throw new KettleException(BaseMessages.getString(PKG,"JobPGPDecryptFiles.Error.Exception.UnableSaveRep") + id_job,dbe);
  }
}
