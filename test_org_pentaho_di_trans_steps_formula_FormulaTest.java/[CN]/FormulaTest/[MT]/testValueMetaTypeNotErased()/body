{
  FormulaMetaFunction function=new FormulaMetaFunction(KEY2,"max([" + KEY1 + "];["+ KEY2+ "])",ValueMetaInterface.TYPE_BIGNUMBER,-1,-1,null);
  BigDecimal great=new BigDecimal(999.00002,new MathContext(7));
  BigDecimal less=new BigDecimal(999.00001,new MathContext(7));
  FormulaMeta meta=new FormulaMeta();
  meta.setFormula(new FormulaMetaFunction[]{function});
  TransMeta transMeta=TransTestFactory.generateTestTransformation(null,meta,stepName);
  List<RowMetaAndData> inputList=getTestRowMetaAndData(new BigDecimal[]{less,great});
  List<RowMetaAndData> ret=TransTestFactory.executeTestTransformation(transMeta,TransTestFactory.INJECTOR_STEPNAME,stepName,TransTestFactory.DUMMY_STEPNAME,inputList);
  Assert.assertNotNull("So we have some results",ret);
  Assert.assertEquals("We have one result row",1,ret.size());
  RowMetaAndData rmd=ret.get(0);
  ValueMetaInterface resValueMeta=rmd.getValueMeta(2);
  Assert.assertNotNull(resValueMeta);
  Assert.assertEquals("It is still BinDecimal",ValueMetaInterface.TYPE_BIGNUMBER,resValueMeta.getType());
  Assert.assertTrue("So we have an a row with at least 3 not null objects",rmd.getData().length >= 3);
  Assert.assertEquals("Grater value is choosen correctly",great,rmd.getData()[2]);
}
