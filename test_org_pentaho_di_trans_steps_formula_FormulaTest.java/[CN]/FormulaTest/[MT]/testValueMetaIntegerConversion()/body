{
  FormulaMetaFunction function=new FormulaMetaFunction(KEY2,"[int_value]",ValueMetaInterface.TYPE_NUMBER,-1,-1,null);
  FormulaMeta meta=new FormulaMeta();
  meta.setFormula(new FormulaMetaFunction[]{function});
  TransMeta transMeta=TransTestFactory.generateTestTransformation(null,meta,stepName);
  List<RowMetaAndData> inputList=getTestRowMetaAndData(new int[]{13,14});
  List<RowMetaAndData> ret=TransTestFactory.executeTestTransformation(transMeta,TransTestFactory.INJECTOR_STEPNAME,stepName,TransTestFactory.DUMMY_STEPNAME,inputList);
  Assert.assertNotNull("So we have some results",ret);
  Assert.assertEquals("We have one result row",1,ret.size());
  RowMetaAndData rmd=ret.get(0);
  ValueMetaInterface resValueMeta=rmd.getValueMeta(2);
  Assert.assertNotNull(resValueMeta);
  Assert.assertEquals("It was Integer value meta and now it is Number",ValueMetaInterface.TYPE_NUMBER,resValueMeta.getType());
}
