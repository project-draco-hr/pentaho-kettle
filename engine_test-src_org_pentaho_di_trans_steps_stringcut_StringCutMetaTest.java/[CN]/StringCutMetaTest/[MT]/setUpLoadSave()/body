{
  KettleEnvironment.init();
  PluginRegistry.init(true);
  List<String> attributes=Arrays.asList("fieldInStream","fieldOutStream","cutFrom","cutTo");
  Map<String,String> getterMap=new HashMap<String,String>(){
{
      put("fieldInStream","getFieldInStream");
      put("fieldOutStream","getFieldOutStream");
      put("cutFrom","getCutFrom");
      put("cutTo","getCutTo");
    }
  }
;
  Map<String,String> setterMap=new HashMap<String,String>(){
{
      put("fieldInStream","setFieldInStream");
      put("fieldOutStream","setFieldOutStream");
      put("cutFrom","setCutFrom");
      put("cutTo","setCutTo");
    }
  }
;
  FieldLoadSaveValidator<String[]> stringArrayLoadSaveValidator=new ArrayLoadSaveValidator<String>(new StringLoadSaveValidator(),5);
  Map<String,FieldLoadSaveValidator<?>> attrValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  attrValidatorMap.put("fieldInStream",stringArrayLoadSaveValidator);
  attrValidatorMap.put("fieldOutStream",stringArrayLoadSaveValidator);
  attrValidatorMap.put("cutFrom",stringArrayLoadSaveValidator);
  attrValidatorMap.put("cutTo",stringArrayLoadSaveValidator);
  Map<String,FieldLoadSaveValidator<?>> typeValidatorMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  loadSaveTester=new LoadSaveTester(testMetaClass,attributes,new ArrayList<String>(),new ArrayList<String>(),getterMap,setterMap,attrValidatorMap,typeValidatorMap,this);
}
