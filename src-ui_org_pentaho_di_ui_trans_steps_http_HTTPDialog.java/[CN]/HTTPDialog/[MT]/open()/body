{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"HTTPDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"HTTPDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  Control lastControl=wStepname;
  wlUrl=new Label(shell,SWT.RIGHT);
  wlUrl.setText(BaseMessages.getString(PKG,"HTTPDialog.URL.Label"));
  props.setLook(wlUrl);
  fdlUrl=new FormData();
  fdlUrl.left=new FormAttachment(0,0);
  fdlUrl.right=new FormAttachment(middle,-margin);
  fdlUrl.top=new FormAttachment(lastControl,margin * 2);
  wlUrl.setLayoutData(fdlUrl);
  wUrl=new TextVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUrl);
  wUrl.addModifyListener(lsMod);
  fdUrl=new FormData();
  fdUrl.left=new FormAttachment(middle,0);
  fdUrl.top=new FormAttachment(lastControl,margin * 2);
  fdUrl.right=new FormAttachment(100,0);
  wUrl.setLayoutData(fdUrl);
  lastControl=wUrl;
  wlUrlInField=new Label(shell,SWT.RIGHT);
  wlUrlInField.setText(BaseMessages.getString(PKG,"HTTPDialog.UrlInField.Label"));
  props.setLook(wlUrlInField);
  fdlUrlInField=new FormData();
  fdlUrlInField.left=new FormAttachment(0,0);
  fdlUrlInField.top=new FormAttachment(lastControl,margin);
  fdlUrlInField.right=new FormAttachment(middle,-margin);
  wlUrlInField.setLayoutData(fdlUrlInField);
  wUrlInField=new Button(shell,SWT.CHECK);
  props.setLook(wUrlInField);
  fdUrlInField=new FormData();
  fdUrlInField.left=new FormAttachment(middle,0);
  fdUrlInField.top=new FormAttachment(lastControl,margin);
  fdUrlInField.right=new FormAttachment(100,0);
  wUrlInField.setLayoutData(fdUrlInField);
  wUrlInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      activeUrlInfield();
    }
  }
);
  lastControl=wUrlInField;
  wlUrlField=new Label(shell,SWT.RIGHT);
  wlUrlField.setText(BaseMessages.getString(PKG,"HTTPDialog.UrlField.Label"));
  props.setLook(wlUrlField);
  fdlUrlField=new FormData();
  fdlUrlField.left=new FormAttachment(0,0);
  fdlUrlField.right=new FormAttachment(middle,-margin);
  fdlUrlField.top=new FormAttachment(lastControl,margin);
  wlUrlField.setLayoutData(fdlUrlField);
  wUrlField=new ComboVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wUrlField.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.UrlField.Tooltip"));
  props.setLook(wUrlField);
  wUrlField.addModifyListener(lsMod);
  fdUrlField=new FormData();
  fdUrlField.left=new FormAttachment(middle,0);
  fdUrlField.top=new FormAttachment(lastControl,margin);
  fdUrlField.right=new FormAttachment(100,0);
  wUrlField.setLayoutData(fdUrlField);
  wUrlField.setEnabled(false);
  wUrlField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      BaseStepDialog.getFieldsFromPrevious(wUrlField,transMeta,stepMeta);
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  lastControl=wUrlField;
  Label wlEncoding=new Label(shell,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"HTTPDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  FormData fdlEncoding=new FormData();
  fdlEncoding.top=new FormAttachment(lastControl,margin);
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new ComboVar(transMeta,shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  FormData fdEncoding=new FormData();
  fdEncoding.top=new FormAttachment(lastControl,margin);
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  lastControl=wEncoding;
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlResult=new Label(shell,SWT.RIGHT);
  wlResult.setText(BaseMessages.getString(PKG,"HTTPDialog.Result.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(lastControl,margin * 2);
  wlResult.setLayoutData(fdlResult);
  wResult=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(lastControl,margin * 2);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  lastControl=wResult;
  wlFields=new Label(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"HTTPDialog.Parameters.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(lastControl,margin);
  wlFields.setLayoutData(fdlFields);
  lastControl=wlFields;
  final int FieldsRows=input.getArgumentField().length;
  colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"HTTPDialog.ColumnInfo.Name"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(BaseMessages.getString(PKG,"HTTPDialog.ColumnInfo.Parameter"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(lastControl,margin);
  fdFields.right=new FormAttachment(100,0);
  fdFields.bottom=new FormAttachment(100,-50);
  wFields.setLayoutData(fdFields);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"HTTPDialog.GetFields.Button"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel,wGet},margin,wFields);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wUrl.addSelectionListener(lsDef);
  wResult.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  setSize();
  getData();
  activeUrlInfield();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
