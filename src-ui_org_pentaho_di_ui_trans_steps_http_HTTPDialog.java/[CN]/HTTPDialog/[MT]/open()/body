{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"HTTPDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"HTTPDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  Control lastControl=wStepname;
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,PropsUI.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(BaseMessages.getString(PKG,"HTTPDialog.GeneralTab.Title"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout fileLayout=new FormLayout();
  fileLayout.marginWidth=3;
  fileLayout.marginHeight=3;
  wGeneralComp.setLayout(fileLayout);
  Group gSettings=new Group(wGeneralComp,SWT.SHADOW_ETCHED_IN);
  gSettings.setText(BaseMessages.getString(PKG,"HTTPDialog.SettingsGroup.Label"));
  FormLayout SettingsLayout=new FormLayout();
  SettingsLayout.marginWidth=3;
  SettingsLayout.marginHeight=3;
  gSettings.setLayout(SettingsLayout);
  props.setLook(gSettings);
  wlUrl=new Label(gSettings,SWT.RIGHT);
  wlUrl.setText(BaseMessages.getString(PKG,"HTTPDialog.URL.Label"));
  props.setLook(wlUrl);
  fdlUrl=new FormData();
  fdlUrl.left=new FormAttachment(0,0);
  fdlUrl.right=new FormAttachment(middle,-margin);
  fdlUrl.top=new FormAttachment(lastControl,margin);
  wlUrl.setLayoutData(fdlUrl);
  wUrl=new TextVar(transMeta,gSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wUrl);
  wUrl.addModifyListener(lsMod);
  fdUrl=new FormData();
  fdUrl.left=new FormAttachment(middle,0);
  fdUrl.top=new FormAttachment(lastControl,margin);
  fdUrl.right=new FormAttachment(100,0);
  wUrl.setLayoutData(fdUrl);
  lastControl=wUrl;
  wlUrlInField=new Label(gSettings,SWT.RIGHT);
  wlUrlInField.setText(BaseMessages.getString(PKG,"HTTPDialog.UrlInField.Label"));
  props.setLook(wlUrlInField);
  fdlUrlInField=new FormData();
  fdlUrlInField.left=new FormAttachment(0,0);
  fdlUrlInField.top=new FormAttachment(lastControl,margin);
  fdlUrlInField.right=new FormAttachment(middle,-margin);
  wlUrlInField.setLayoutData(fdlUrlInField);
  wUrlInField=new Button(gSettings,SWT.CHECK);
  props.setLook(wUrlInField);
  fdUrlInField=new FormData();
  fdUrlInField.left=new FormAttachment(middle,0);
  fdUrlInField.top=new FormAttachment(lastControl,margin);
  fdUrlInField.right=new FormAttachment(100,0);
  wUrlInField.setLayoutData(fdUrlInField);
  wUrlInField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      activeUrlInfield();
    }
  }
);
  lastControl=wUrlInField;
  wlUrlField=new Label(gSettings,SWT.RIGHT);
  wlUrlField.setText(BaseMessages.getString(PKG,"HTTPDialog.UrlField.Label"));
  props.setLook(wlUrlField);
  fdlUrlField=new FormData();
  fdlUrlField.left=new FormAttachment(0,0);
  fdlUrlField.right=new FormAttachment(middle,-margin);
  fdlUrlField.top=new FormAttachment(lastControl,margin);
  wlUrlField.setLayoutData(fdlUrlField);
  wUrlField=new ComboVar(transMeta,gSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wUrlField.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.UrlField.Tooltip"));
  props.setLook(wUrlField);
  wUrlField.addModifyListener(lsMod);
  fdUrlField=new FormData();
  fdUrlField.left=new FormAttachment(middle,0);
  fdUrlField.top=new FormAttachment(lastControl,margin);
  fdUrlField.right=new FormAttachment(100,0);
  wUrlField.setLayoutData(fdUrlField);
  wUrlField.setEnabled(false);
  wUrlField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      BaseStepDialog.getFieldsFromPrevious(wUrlField,transMeta,stepMeta);
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  lastControl=wUrlField;
  Label wlEncoding=new Label(gSettings,SWT.RIGHT);
  wlEncoding.setText(BaseMessages.getString(PKG,"HTTPDialog.Encoding.Label"));
  props.setLook(wlEncoding);
  FormData fdlEncoding=new FormData();
  fdlEncoding.top=new FormAttachment(lastControl,margin);
  fdlEncoding.left=new FormAttachment(0,0);
  fdlEncoding.right=new FormAttachment(middle,-margin);
  wlEncoding.setLayoutData(fdlEncoding);
  wEncoding=new ComboVar(transMeta,gSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wEncoding);
  wEncoding.addModifyListener(lsMod);
  FormData fdEncoding=new FormData();
  fdEncoding.top=new FormAttachment(lastControl,margin);
  fdEncoding.left=new FormAttachment(middle,0);
  fdEncoding.right=new FormAttachment(100,0);
  wEncoding.setLayoutData(fdEncoding);
  lastControl=wEncoding;
  wEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      setEncodings();
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  wlConnectionTimeOut=new Label(gSettings,SWT.RIGHT);
  wlConnectionTimeOut.setText(BaseMessages.getString(PKG,"HTTPDialog.ConnectionTimeOut.Label"));
  props.setLook(wlConnectionTimeOut);
  FormData fdlConnectionTimeOut=new FormData();
  fdlConnectionTimeOut.top=new FormAttachment(wEncoding,margin);
  fdlConnectionTimeOut.left=new FormAttachment(0,0);
  fdlConnectionTimeOut.right=new FormAttachment(middle,-margin);
  wlConnectionTimeOut.setLayoutData(fdlConnectionTimeOut);
  wConnectionTimeOut=new TextVar(transMeta,gSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wConnectionTimeOut.addModifyListener(lsMod);
  wConnectionTimeOut.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.ConnectionTimeOut.Tooltip"));
  props.setLook(wConnectionTimeOut);
  FormData fdConnectionTimeOut=new FormData();
  fdConnectionTimeOut.top=new FormAttachment(wEncoding,margin);
  fdConnectionTimeOut.left=new FormAttachment(middle,0);
  fdConnectionTimeOut.right=new FormAttachment(100,0);
  wConnectionTimeOut.setLayoutData(fdConnectionTimeOut);
  wlSocketTimeOut=new Label(gSettings,SWT.RIGHT);
  wlSocketTimeOut.setText(BaseMessages.getString(PKG,"HTTPDialog.SocketTimeOut.Label"));
  props.setLook(wlSocketTimeOut);
  FormData fdlSocketTimeOut=new FormData();
  fdlSocketTimeOut.top=new FormAttachment(wConnectionTimeOut,margin);
  fdlSocketTimeOut.left=new FormAttachment(0,0);
  fdlSocketTimeOut.right=new FormAttachment(middle,-margin);
  wlSocketTimeOut.setLayoutData(fdlSocketTimeOut);
  wSocketTimeOut=new TextVar(transMeta,gSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wSocketTimeOut.addModifyListener(lsMod);
  wSocketTimeOut.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.SocketTimeOut.Tooltip"));
  props.setLook(wSocketTimeOut);
  FormData fdSocketTimeOut=new FormData();
  fdSocketTimeOut.top=new FormAttachment(wConnectionTimeOut,margin);
  fdSocketTimeOut.left=new FormAttachment(middle,0);
  fdSocketTimeOut.right=new FormAttachment(100,0);
  wSocketTimeOut.setLayoutData(fdSocketTimeOut);
  wlCloseIdleConnectionsTime=new Label(gSettings,SWT.RIGHT);
  wlCloseIdleConnectionsTime.setText(BaseMessages.getString(PKG,"HTTPDialog.CloseIdleConnectionsTime.Label"));
  props.setLook(wlCloseIdleConnectionsTime);
  FormData fdlCloseIdleConnectionsTime=new FormData();
  fdlCloseIdleConnectionsTime.top=new FormAttachment(wSocketTimeOut,margin);
  fdlCloseIdleConnectionsTime.left=new FormAttachment(0,0);
  fdlCloseIdleConnectionsTime.right=new FormAttachment(middle,-margin);
  wlCloseIdleConnectionsTime.setLayoutData(fdlCloseIdleConnectionsTime);
  wCloseIdleConnectionsTime=new TextVar(transMeta,gSettings,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wCloseIdleConnectionsTime.addModifyListener(lsMod);
  wCloseIdleConnectionsTime.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.CloseIdleConnectionsTime.Tooltip"));
  props.setLook(wCloseIdleConnectionsTime);
  FormData fdCloseIdleConnectionsTime=new FormData();
  fdCloseIdleConnectionsTime.top=new FormAttachment(wSocketTimeOut,margin);
  fdCloseIdleConnectionsTime.left=new FormAttachment(middle,0);
  fdCloseIdleConnectionsTime.right=new FormAttachment(100,0);
  wCloseIdleConnectionsTime.setLayoutData(fdCloseIdleConnectionsTime);
  FormData fdSettings=new FormData();
  fdSettings.left=new FormAttachment(0,0);
  fdSettings.right=new FormAttachment(100,0);
  fdSettings.top=new FormAttachment(lastControl,margin);
  gSettings.setLayoutData(fdSettings);
  lastControl=gSettings;
  Group gOutputFields=new Group(wGeneralComp,SWT.SHADOW_ETCHED_IN);
  gOutputFields.setText(BaseMessages.getString(PKG,"HTTPDialog.OutputFieldsGroup.Label"));
  FormLayout OutputFieldsLayout=new FormLayout();
  OutputFieldsLayout.marginWidth=3;
  OutputFieldsLayout.marginHeight=3;
  gOutputFields.setLayout(OutputFieldsLayout);
  props.setLook(gOutputFields);
  wlResult=new Label(gOutputFields,SWT.RIGHT);
  wlResult.setText(BaseMessages.getString(PKG,"HTTPDialog.Result.Label"));
  props.setLook(wlResult);
  fdlResult=new FormData();
  fdlResult.left=new FormAttachment(0,0);
  fdlResult.right=new FormAttachment(middle,-margin);
  fdlResult.top=new FormAttachment(lastControl,margin);
  wlResult.setLayoutData(fdlResult);
  wResult=new TextVar(transMeta,gOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResult);
  wResult.addModifyListener(lsMod);
  fdResult=new FormData();
  fdResult.left=new FormAttachment(middle,0);
  fdResult.top=new FormAttachment(lastControl,margin);
  fdResult.right=new FormAttachment(100,0);
  wResult.setLayoutData(fdResult);
  wlResultCode=new Label(gOutputFields,SWT.RIGHT);
  wlResultCode.setText(BaseMessages.getString(PKG,"HTTPDialog.ResultCode.Label"));
  props.setLook(wlResultCode);
  fdlResultCode=new FormData();
  fdlResultCode.left=new FormAttachment(0,0);
  fdlResultCode.right=new FormAttachment(middle,-margin);
  fdlResultCode.top=new FormAttachment(wResult,margin);
  wlResultCode.setLayoutData(fdlResultCode);
  wResultCode=new TextVar(transMeta,gOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResultCode);
  wResultCode.addModifyListener(lsMod);
  fdResultCode=new FormData();
  fdResultCode.left=new FormAttachment(middle,0);
  fdResultCode.top=new FormAttachment(wResult,margin);
  fdResultCode.right=new FormAttachment(100,0);
  wResultCode.setLayoutData(fdResultCode);
  wlResponseTime=new Label(gOutputFields,SWT.RIGHT);
  wlResponseTime.setText(BaseMessages.getString(PKG,"HTTPDialog.ResponseTime.Label"));
  props.setLook(wlResponseTime);
  fdlResponseTime=new FormData();
  fdlResponseTime.left=new FormAttachment(0,0);
  fdlResponseTime.right=new FormAttachment(middle,-margin);
  fdlResponseTime.top=new FormAttachment(wResultCode,margin);
  wlResponseTime.setLayoutData(fdlResponseTime);
  wResponseTime=new TextVar(transMeta,gOutputFields,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wResponseTime);
  wResponseTime.addModifyListener(lsMod);
  fdResponseTime=new FormData();
  fdResponseTime.left=new FormAttachment(middle,0);
  fdResponseTime.top=new FormAttachment(wResultCode,margin);
  fdResponseTime.right=new FormAttachment(100,0);
  wResponseTime.setLayoutData(fdResponseTime);
  FormData fdOutputFields=new FormData();
  fdOutputFields.left=new FormAttachment(0,0);
  fdOutputFields.right=new FormAttachment(100,0);
  fdOutputFields.top=new FormAttachment(lastControl,margin);
  gOutputFields.setLayoutData(fdOutputFields);
  lastControl=gOutputFields;
  Group gHttpAuth=new Group(wGeneralComp,SWT.SHADOW_ETCHED_IN);
  gHttpAuth.setText(BaseMessages.getString(PKG,"HTTPDialog.HttpAuthGroup.Label"));
  FormLayout httpAuthLayout=new FormLayout();
  httpAuthLayout.marginWidth=3;
  httpAuthLayout.marginHeight=3;
  gHttpAuth.setLayout(httpAuthLayout);
  props.setLook(gHttpAuth);
  wlHttpLogin=new Label(gHttpAuth,SWT.RIGHT);
  wlHttpLogin.setText(BaseMessages.getString(PKG,"HTTPDialog.HttpLogin.Label"));
  props.setLook(wlHttpLogin);
  FormData fdlHttpLogin=new FormData();
  fdlHttpLogin.top=new FormAttachment(0,margin);
  fdlHttpLogin.left=new FormAttachment(0,0);
  fdlHttpLogin.right=new FormAttachment(middle,-margin);
  wlHttpLogin.setLayoutData(fdlHttpLogin);
  wHttpLogin=new TextVar(transMeta,gHttpAuth,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wHttpLogin.addModifyListener(lsMod);
  wHttpLogin.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.HttpLogin.Tooltip"));
  props.setLook(wHttpLogin);
  FormData fdHttpLogin=new FormData();
  fdHttpLogin.top=new FormAttachment(0,margin);
  fdHttpLogin.left=new FormAttachment(middle,0);
  fdHttpLogin.right=new FormAttachment(100,0);
  wHttpLogin.setLayoutData(fdHttpLogin);
  wlHttpPassword=new Label(gHttpAuth,SWT.RIGHT);
  wlHttpPassword.setText(BaseMessages.getString(PKG,"HTTPDialog.HttpPassword.Label"));
  props.setLook(wlHttpPassword);
  FormData fdlHttpPassword=new FormData();
  fdlHttpPassword.top=new FormAttachment(wHttpLogin,margin);
  fdlHttpPassword.left=new FormAttachment(0,0);
  fdlHttpPassword.right=new FormAttachment(middle,-margin);
  wlHttpPassword.setLayoutData(fdlHttpPassword);
  wHttpPassword=new TextVar(transMeta,gHttpAuth,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wHttpPassword.addModifyListener(lsMod);
  wHttpPassword.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.HttpPassword.Tooltip"));
  wHttpPassword.setEchoChar('*');
  props.setLook(wHttpPassword);
  FormData fdHttpPassword=new FormData();
  fdHttpPassword.top=new FormAttachment(wHttpLogin,margin);
  fdHttpPassword.left=new FormAttachment(middle,0);
  fdHttpPassword.right=new FormAttachment(100,0);
  wHttpPassword.setLayoutData(fdHttpPassword);
  FormData fdHttpAuth=new FormData();
  fdHttpAuth.left=new FormAttachment(0,0);
  fdHttpAuth.right=new FormAttachment(100,0);
  fdHttpAuth.top=new FormAttachment(lastControl,margin);
  gHttpAuth.setLayoutData(fdHttpAuth);
  lastControl=gHttpAuth;
  Group gProxy=new Group(wGeneralComp,SWT.SHADOW_ETCHED_IN);
  gProxy.setText(BaseMessages.getString(PKG,"HTTPDialog.ProxyGroup.Label"));
  FormLayout proxyLayout=new FormLayout();
  proxyLayout.marginWidth=3;
  proxyLayout.marginHeight=3;
  gProxy.setLayout(proxyLayout);
  props.setLook(gProxy);
  wlProxyHost=new Label(gProxy,SWT.RIGHT);
  wlProxyHost.setText(BaseMessages.getString(PKG,"HTTPDialog.ProxyHost.Label"));
  props.setLook(wlProxyHost);
  FormData fdlProxyHost=new FormData();
  fdlProxyHost.top=new FormAttachment(0,margin);
  fdlProxyHost.left=new FormAttachment(0,0);
  fdlProxyHost.right=new FormAttachment(middle,-margin);
  wlProxyHost.setLayoutData(fdlProxyHost);
  wProxyHost=new TextVar(transMeta,gProxy,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wProxyHost.addModifyListener(lsMod);
  wProxyHost.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.ProxyHost.Tooltip"));
  props.setLook(wProxyHost);
  FormData fdProxyHost=new FormData();
  fdProxyHost.top=new FormAttachment(0,margin);
  fdProxyHost.left=new FormAttachment(middle,0);
  fdProxyHost.right=new FormAttachment(100,0);
  wProxyHost.setLayoutData(fdProxyHost);
  wlProxyPort=new Label(gProxy,SWT.RIGHT);
  wlProxyPort.setText(BaseMessages.getString(PKG,"HTTPDialog.ProxyPort.Label"));
  props.setLook(wlProxyPort);
  FormData fdlProxyPort=new FormData();
  fdlProxyPort.top=new FormAttachment(wProxyHost,margin);
  fdlProxyPort.left=new FormAttachment(0,0);
  fdlProxyPort.right=new FormAttachment(middle,-margin);
  wlProxyPort.setLayoutData(fdlProxyPort);
  wProxyPort=new TextVar(transMeta,gProxy,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wProxyPort.addModifyListener(lsMod);
  wProxyPort.setToolTipText(BaseMessages.getString(PKG,"HTTPDialog.ProxyPort.Tooltip"));
  props.setLook(wProxyPort);
  FormData fdProxyPort=new FormData();
  fdProxyPort.top=new FormAttachment(wProxyHost,margin);
  fdProxyPort.left=new FormAttachment(middle,0);
  fdProxyPort.right=new FormAttachment(100,0);
  wProxyPort.setLayoutData(fdProxyPort);
  FormData fdProxy=new FormData();
  fdProxy.left=new FormAttachment(0,0);
  fdProxy.right=new FormAttachment(100,0);
  fdProxy.top=new FormAttachment(lastControl,margin);
  gProxy.setLayoutData(fdProxy);
  lastControl=gProxy;
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(wStepname,margin);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  wAdditionalTab=new CTabItem(wTabFolder,SWT.NONE);
  wAdditionalTab.setText(BaseMessages.getString(PKG,"HTTPDialog.FieldsTab.Title"));
  FormLayout addLayout=new FormLayout();
  addLayout.marginWidth=Const.FORM_MARGIN;
  addLayout.marginHeight=Const.FORM_MARGIN;
  wAdditionalComp=new Composite(wTabFolder,SWT.NONE);
  wAdditionalComp.setLayout(addLayout);
  props.setLook(wAdditionalComp);
  wlFields=new Label(wAdditionalComp,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"HTTPDialog.Parameters.Label"));
  props.setLook(wlFields);
  fdlFields=new FormData();
  fdlFields.left=new FormAttachment(0,0);
  fdlFields.top=new FormAttachment(lastControl,margin);
  wlFields.setLayoutData(fdlFields);
  lastControl=wlFields;
  wGet=new Button(wAdditionalComp,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"HTTPDialog.GetFields.Button"));
  FormData fdGet=new FormData();
  fdGet.top=new FormAttachment(wlFields,margin);
  fdGet.right=new FormAttachment(100,0);
  wGet.setLayoutData(fdGet);
  final int FieldsRows=input.getArgumentField().length;
  colinf=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"HTTPDialog.ColumnInfo.Name"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(BaseMessages.getString(PKG,"HTTPDialog.ColumnInfo.Parameter"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  wFields=new TableView(transMeta,wAdditionalComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinf,FieldsRows,lsMod,props);
  fdFields=new FormData();
  fdFields.left=new FormAttachment(0,0);
  fdFields.top=new FormAttachment(wlFields,margin);
  fdFields.right=new FormAttachment(wGet,-margin);
  fdFields.bottom=new FormAttachment(wlFields,200);
  wFields.setLayoutData(fdFields);
  wlHeaders=new Label(wAdditionalComp,SWT.NONE);
  wlHeaders.setText(BaseMessages.getString(PKG,"HTTPDialog.Headers.Label"));
  props.setLook(wlHeaders);
  fdlHeaders=new FormData();
  fdlHeaders.left=new FormAttachment(0,0);
  fdlHeaders.top=new FormAttachment(wFields,margin);
  wlHeaders.setLayoutData(fdlHeaders);
  final int HeadersRows=input.getHeaderParameter().length;
  colinfHeaders=new ColumnInfo[]{new ColumnInfo(BaseMessages.getString(PKG,"HTTPDialog.ColumnInfo.Field"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{""},false),new ColumnInfo(BaseMessages.getString(PKG,"HTTPDialog.ColumnInfo.Header"),ColumnInfo.COLUMN_TYPE_TEXT,false)};
  colinfHeaders[1].setUsingVariables(true);
  wHeaders=new TableView(transMeta,wAdditionalComp,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI,colinfHeaders,HeadersRows,lsMod,props);
  wGetHeaders=new Button(wAdditionalComp,SWT.PUSH);
  wGetHeaders.setText(BaseMessages.getString(PKG,"HTTPDialog.GetHeaders.Button"));
  FormData fdGetHeaders=new FormData();
  fdGetHeaders.top=new FormAttachment(wlHeaders,margin);
  fdGetHeaders.right=new FormAttachment(100,0);
  wGetHeaders.setLayoutData(fdGetHeaders);
  fdHeaders=new FormData();
  fdHeaders.left=new FormAttachment(0,0);
  fdHeaders.top=new FormAttachment(wlHeaders,margin);
  fdHeaders.right=new FormAttachment(wGetHeaders,-margin);
  fdHeaders.bottom=new FormAttachment(100,-margin);
  wHeaders.setLayoutData(fdHeaders);
  final Runnable runnable=new Runnable(){
    public void run(){
      StepMeta stepMeta=transMeta.findStep(stepname);
      if (stepMeta != null) {
        try {
          RowMetaInterface row=transMeta.getPrevStepFields(stepMeta);
          for (int i=0; i < row.size(); i++) {
            inputFields.put(row.getValueMeta(i).getName(),Integer.valueOf(i));
          }
          setComboBoxes();
        }
 catch (        KettleException e) {
          logError(BaseMessages.getString(PKG,"System.Dialog.GetFieldsFailed.Message"));
        }
      }
    }
  }
;
  new Thread(runnable).start();
  fdAdditionalComp=new FormData();
  fdAdditionalComp.left=new FormAttachment(0,0);
  fdAdditionalComp.top=new FormAttachment(wStepname,margin);
  fdAdditionalComp.right=new FormAttachment(100,0);
  fdAdditionalComp.bottom=new FormAttachment(100,0);
  wAdditionalComp.setLayoutData(fdAdditionalComp);
  wAdditionalComp.layout();
  wAdditionalTab.setControl(wAdditionalComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsGet=new Listener(){
    public void handleEvent(    Event e){
      get();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsGetHeaders=new Listener(){
    public void handleEvent(    Event e){
      getHeadersFields();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wGet.addListener(SWT.Selection,lsGet);
  wCancel.addListener(SWT.Selection,lsCancel);
  wGetHeaders.addListener(SWT.Selection,lsGetHeaders);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wUrl.addSelectionListener(lsDef);
  wResult.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  lsResize=new Listener(){
    public void handleEvent(    Event event){
      Point size=shell.getSize();
      wFields.setSize(size.x - 10,size.y - 50);
      wFields.table.setSize(size.x - 10,size.y - 50);
      wFields.redraw();
    }
  }
;
  shell.addListener(SWT.Resize,lsResize);
  setSize();
  getData();
  wTabFolder.setSelection(0);
  activeUrlInfield();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
