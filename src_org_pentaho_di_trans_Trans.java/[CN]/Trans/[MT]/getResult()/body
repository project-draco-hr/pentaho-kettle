{
  if (steps == null)   return null;
  Result result=new Result();
  result.setNrErrors(errors.longValue());
  TransLogTable transLogTable=transMeta.getTransLogTable();
  for (int i=0; i < steps.size(); i++) {
    StepMetaDataCombi sid=steps.get(i);
    BaseStep rt=(BaseStep)sid.step;
    result.setNrErrors(result.getNrErrors() + sid.step.getErrors());
    result.getResultFiles().putAll(rt.getResultFiles());
    if (rt.getStepname().equals(transLogTable.getSubjectString(TransLogTable.ID.LINES_READ)))     result.setNrLinesRead(result.getNrLinesRead() + rt.getLinesRead());
    if (rt.getStepname().equals(transLogTable.getSubjectString(TransLogTable.ID.LINES_INPUT)))     result.setNrLinesInput(result.getNrLinesInput() + rt.getLinesInput());
    if (rt.getStepname().equals(transLogTable.getSubjectString(TransLogTable.ID.LINES_WRITTEN)))     result.setNrLinesWritten(result.getNrLinesWritten() + rt.getLinesWritten());
    if (rt.getStepname().equals(transLogTable.getSubjectString(TransLogTable.ID.LINES_OUTPUT)))     result.setNrLinesOutput(result.getNrLinesOutput() + rt.getLinesOutput());
    if (rt.getStepname().equals(transLogTable.getSubjectString(TransLogTable.ID.LINES_UPDATED)))     result.setNrLinesUpdated(result.getNrLinesUpdated() + rt.getLinesUpdated());
    if (rt.getStepname().equals(transLogTable.getSubjectString(TransLogTable.ID.LINES_REJECTED)))     result.setNrLinesRejected(result.getNrLinesRejected() + rt.getLinesRejected());
  }
  result.setRows(transMeta.getResultRows());
  result.setStopped(isStopped());
  result.setLogChannelId(log.getLogChannelId());
  return result;
}
