{
  if (transMeta.isCapturingStepPerformanceSnapShots()) {
    for (int i=0; i < steps.size(); i++) {
      StepMeta stepMeta=steps.get(i).stepMeta;
      StepInterface step=steps.get(i).step;
      BaseStep baseStep=(BaseStep)step;
      StepPerformanceSnapShot snapShot=new StepPerformanceSnapShot(stepPerformanceSnapshotSeqNr.incrementAndGet(),getBatchId(),new Date(),getName(),stepMeta.getName(),step.getCopy(),step.getLinesRead(),step.getLinesWritten(),step.getLinesInput(),step.getLinesOutput(),step.getLinesUpdated(),step.getLinesRejected(),step.getErrors());
      List<StepPerformanceSnapShot> snapShotList=stepPerformanceSnapShots.get(step.toString());
      StepPerformanceSnapShot previous;
      if (snapShotList == null) {
        snapShotList=new ArrayList<StepPerformanceSnapShot>();
        stepPerformanceSnapShots.put(step.toString(),snapShotList);
        previous=null;
      }
 else {
        previous=snapShotList.get(snapShotList.size() - 1);
      }
      snapShot.diff(previous,baseStep.rowsetInputSize(),baseStep.rowsetOutputSize());
      snapShotList.add(snapShot);
    }
  }
}
