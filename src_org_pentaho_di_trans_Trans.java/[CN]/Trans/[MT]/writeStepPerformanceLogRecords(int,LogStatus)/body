{
  int lastSeqNr=0;
  Database ldb=null;
  PerformanceLogTable performanceLogTable=transMeta.getPerformanceLogTable();
  if (!performanceLogTable.isDefined() || !transMeta.isCapturingStepPerformanceSnapShots() || stepPerformanceSnapShots == null || stepPerformanceSnapShots.isEmpty()) {
    return 0;
  }
  try {
    ldb=new Database(this,performanceLogTable.getDatabaseMeta());
    ldb.shareVariablesWith(this);
    ldb.connect();
    RowMetaInterface rowMeta=performanceLogTable.getLogRecord(LogStatus.START,null).getRowMeta();
    ldb.prepareInsert(rowMeta,performanceLogTable.getTableName());
synchronized (stepPerformanceSnapShots) {
      Iterator<List<StepPerformanceSnapShot>> iterator=stepPerformanceSnapShots.values().iterator();
      while (iterator.hasNext()) {
        List<StepPerformanceSnapShot> snapshots=iterator.next();
synchronized (snapshots) {
          for (          StepPerformanceSnapShot snapshot : snapshots) {
            if (snapshot.getSeqNr() >= startSequenceNr && snapshot.getSeqNr() <= lastStepPerformanceSnapshotSeqNrAdded) {
              RowMetaAndData row=performanceLogTable.getLogRecord(LogStatus.START,snapshot);
              ldb.setValuesInsert(row.getRowMeta(),row.getData());
              ldb.insertRow(true);
            }
            lastSeqNr=snapshot.getSeqNr();
          }
        }
      }
    }
    ldb.insertFinished(true);
    if (status.equals(LogStatus.END)) {
      ldb.cleanupLogRecords(performanceLogTable);
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"Trans.Exception.ErrorWritingStepPerformanceLogRecordToTable"),e);
  }
 finally {
    if (ldb != null) {
      ldb.disconnect();
    }
  }
  return lastSeqNr + 1;
}
