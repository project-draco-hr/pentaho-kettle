{
  Result result=getResult();
  if (transMeta.isUsingUniqueConnections()) {
    closeUniqueDatabaseConnections(result);
  }
  logDate=new Date();
  String log_string=null;
  if (transMeta.isLogfieldUsed()) {
    log_string=stringAppender.getBuffer().append(Const.CR + "END" + Const.CR).toString();
    log.removeAppender(stringAppender);
  }
  DatabaseMeta logcon=transMeta.getLogConnection();
  if (logcon != null) {
    Database ldb=new Database(logcon);
    ldb.shareVariablesWith(this);
    try {
      ldb.connect();
      ldb.writeLogRecord(transMeta.getLogTable(),transMeta.isBatchIdUsed(),getBatchId(),false,transMeta.getName(),status,result.getNrLinesRead(),result.getNrLinesWritten(),result.getNrLinesUpdated(),result.getNrLinesInput() + result.getNrFilesRetrieved(),result.getNrLinesOutput(),result.getNrErrors(),startDate,endDate,logDate,depDate,currentDate,log_string);
    }
 catch (    Exception e) {
      throw new KettleException(Messages.getString("Trans.Exception.ErrorWritingLogRecordToTable") + transMeta.getLogTable() + "]",e);
    }
 finally {
      ldb.disconnect();
    }
  }
  return true;
}
