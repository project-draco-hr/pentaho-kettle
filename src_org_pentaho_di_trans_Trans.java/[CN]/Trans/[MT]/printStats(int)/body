{
  log.logBasic(" ");
  if (steps == null)   return;
  for (int i=0; i < steps.size(); i++) {
    StepMetaDataCombi sid=steps.get(i);
    StepInterface step=sid.step;
    long proc=step.getProcessed();
    if (seconds != 0) {
      if (step.getErrors() == 0) {
        log.logBasic(BaseMessages.getString(PKG,"Trans.Log.ProcessSuccessfullyInfo",step.getStepname(),"." + step.getCopy(),String.valueOf(proc),String.valueOf((proc / seconds))));
      }
 else {
        log.logError(BaseMessages.getString(PKG,"Trans.Log.ProcessErrorInfo",step.getStepname(),"." + step.getCopy(),String.valueOf(step.getErrors()),String.valueOf(proc),String.valueOf(proc / seconds)));
      }
    }
 else {
      if (step.getErrors() == 0) {
        log.logBasic(BaseMessages.getString(PKG,"Trans.Log.ProcessSuccessfullyInfo",step.getStepname(),"." + step.getCopy(),String.valueOf(proc),seconds != 0 ? String.valueOf((proc / seconds)) : "-"));
      }
 else {
        log.logError(BaseMessages.getString(PKG,"Trans.Log.ProcessErrorInfo2",step.getStepname(),"." + step.getCopy(),String.valueOf(step.getErrors()),String.valueOf(proc),String.valueOf(seconds)));
      }
    }
  }
}
