{
  String connectionNameFromRepository=attributeInterface.getAttributeString(getLogTableCode() + PROP_LOG_TABLE_CONNECTION_NAME);
  if (connectionNameFromRepository != null) {
    connectionName=connectionNameFromRepository;
  }
  String schemaNameFromRepository=attributeInterface.getAttributeString(getLogTableCode() + PROP_LOG_TABLE_SCHEMA_NAME);
  if (schemaNameFromRepository != null) {
    schemaName=schemaNameFromRepository;
  }
  String tableNameFromRepository=attributeInterface.getAttributeString(getLogTableCode() + PROP_LOG_TABLE_TABLE_NAME);
  if (tableNameFromRepository != null) {
    tableName=tableNameFromRepository;
  }
  timeoutInDays=attributeInterface.getAttributeString(getLogTableCode() + PROP_LOG_TABLE_TIMEOUT_DAYS);
  for (int i=0; i < getFields().size(); i++) {
    String id=attributeInterface.getAttributeString(getLogTableCode() + PROP_LOG_TABLE_FIELD_ID + i);
    if (id != null) {
      LogTableField field=findField(id);
      field.setFieldName(attributeInterface.getAttributeString(getLogTableCode() + PROP_LOG_TABLE_FIELD_NAME + i));
      field.setEnabled(attributeInterface.getAttributeBoolean(getLogTableCode() + PROP_LOG_TABLE_FIELD_ENABLED + i));
    }
  }
}
