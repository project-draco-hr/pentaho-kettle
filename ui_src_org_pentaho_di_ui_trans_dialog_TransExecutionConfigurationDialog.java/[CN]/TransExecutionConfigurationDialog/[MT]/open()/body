{
  mainLayout(PKG,"TransExecutionConfigurationDialog",GUIResource.getInstance().getImageTransGraph());
  environmentTypeSectionLayout(PKG,"TransExecutionConfigurationDialog");
  wExecCluster=new Button(gLocal,SWT.RADIO);
  wExecCluster.setText(BaseMessages.getString(PKG,"TransExecutionConfigurationDialog.ExecCluster.Label"));
  wExecCluster.setToolTipText(BaseMessages.getString(PKG,"TransExecutionConfigurationDialog.ExecCluster.Tooltip"));
  props.setLook(wExecCluster);
  fdExecCluster=new FormData();
  fdExecCluster.left=new FormAttachment(0,10);
  fdExecCluster.top=new FormAttachment(wExecRemote,7);
  wExecCluster.setLayoutData(fdExecCluster);
  wExecCluster.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      stackedLayout.topControl=clusteredOptionsComposite;
      stackedLayoutComposite.layout();
    }
  }
);
  clusteredOptionsComposite=new Composite(stackedLayoutComposite,SWT.NONE);
  clusteredOptionsComposite.setLayout(new FormLayout());
  props.setLook(clusteredOptionsComposite);
  clusteredOptionsComposite();
  optionsSectionLayout(PKG,"TransExecutionConfigurationDialog");
  parametersSectionLayout(PKG,"TransExecutionConfigurationDialog");
  String docUrl=Const.getDocUrl(BaseMessages.getString(Spoon.class,"Spoon.TransExecutionConfigurationDialog.Help"));
  String docTitle=BaseMessages.getString(PKG,"TransExecutionConfigurationDialog.docTitle");
  String docHeader=BaseMessages.getString(PKG,"TransExecutionConfigurationDialog.docHeader");
  buttonsSectionLayout(PKG,"TransExecutionConfigurationDialog",docTitle,docUrl,docHeader);
  getData();
  openDialog();
  return retval;
}
