{
  StringBuilder originalSQL=new StringBuilder();
  originalSQL.append("SELECT \"test\" AS colA").append(Const.CR);
  originalSQL.append("FROM dual").append(Const.CR);
  originalSQL.append("WHERE").append(Const.CR);
  originalSQL.append("intID = ?").append(Const.CR);
  originalSQL.append("AND StringID = ?").append(Const.CR);
  originalSQL.append("AND decimalID = ?").append(Const.CR);
  ThinPreparedStatement ps=new ThinPreparedStatement(thinConn,originalSQL.toString());
  assertEquals(3,ps.getParamMeta().length);
  for (  ValueMetaInterface paramMeta : ps.getParamMeta()) {
    assertEquals(ValueMetaInterface.TYPE_STRING,paramMeta.getType());
    assertTrue(paramMeta.getName().startsWith("param-"));
  }
  ps.setInt(1,12345);
  assertEquals(ValueMetaInterface.TYPE_INTEGER,ps.getParamMeta()[0].getType());
  assertEquals(Long.valueOf(12345),ps.getParamData()[0]);
  ps.setLong(2,56789);
  assertEquals(ValueMetaInterface.TYPE_INTEGER,ps.getParamMeta()[1].getType());
  assertEquals(Long.valueOf(56789),ps.getParamData()[1]);
  ps.setShort(2,(short)255);
  assertEquals(ValueMetaInterface.TYPE_INTEGER,ps.getParamMeta()[1].getType());
  assertEquals(Long.valueOf(255),ps.getParamData()[1]);
  ps.setDouble(1,Double.valueOf("12345.6789"));
  assertEquals(ValueMetaInterface.TYPE_NUMBER,ps.getParamMeta()[0].getType());
  assertEquals(Double.valueOf("12345.6789"),ps.getParamData()[0]);
  ps.setFloat(2,Float.valueOf("98765.4321"));
  assertEquals(ValueMetaInterface.TYPE_NUMBER,ps.getParamMeta()[1].getType());
  assertEquals(Float.valueOf("98765.4321").doubleValue(),(Double)ps.getParamData()[1],Float.valueOf("0.1").doubleValue());
  ps.setTime(1,new Time(12345));
  assertEquals(ValueMetaInterface.TYPE_DATE,ps.getParamMeta()[0].getType());
  assertEquals(new Date(12345),ps.getParamData()[0]);
  ps.setTime(2,new Time(23456),Calendar.getInstance());
  assertEquals(ValueMetaInterface.TYPE_DATE,ps.getParamMeta()[1].getType());
  assertEquals(new Date(23456),ps.getParamData()[1]);
  ps.setTimestamp(1,new Timestamp(98765));
  assertEquals(ValueMetaInterface.TYPE_DATE,ps.getParamMeta()[0].getType());
  assertEquals(new Date(98765),ps.getParamData()[0]);
  ps.setTimestamp(2,new Timestamp(87654),Calendar.getInstance());
  assertEquals(ValueMetaInterface.TYPE_DATE,ps.getParamMeta()[1].getType());
  assertEquals(new Date(87654),ps.getParamData()[1]);
  ps.close();
}
