{
  if (fileChildren == null) {
    fileChildren=new ArrayList<RepositoryElementMetaInterface>();
synchronized (fileChildren) {
      UnifiedRepositoryLockService lockService=(UnifiedRepositoryLockService)registry.getService(ILockService.class);
      RepositoryFileTree tree=repository.getTree(new RepositoryRequest(this.self.getPath(),true,1,null));
      for (      RepositoryFileTree tchild : tree.getChildren()) {
        RepositoryFile child=tchild.getFile();
        RepositoryLock lock=null;
        try {
          lock=lockService.getLock(child);
          RepositoryObjectType objectType=getObjectType(child.getName());
          EERepositoryObject repositoryObject=new EERepositoryObject(child,this,null,objectType,null,lock,false);
          repositoryObject.setVersioningEnabled(tchild.getVersioningEnabled());
          repositoryObject.setVersionCommentEnabled(tchild.getVersionCommentEnabled());
          fileChildren.add(repositoryObject);
        }
 catch (        KettleException e) {
          logger.error("Error converting Unified Repository file to PDI RepositoryObject: " + child.getPath() + ". File will be skipped",e);
        }
      }
    }
  }
  return fileChildren;
}
