{
  if (StringUtils.isEmpty(path)) {
    return null;
  }
  String absolutePath;
  if (path.startsWith(RepositoryDirectory.DIRECTORY_SEPARATOR)) {
    if (self.getPath().endsWith(RepositoryDirectory.DIRECTORY_SEPARATOR)) {
      absolutePath=self.getPath() + path.substring(1);
    }
 else {
      absolutePath=self.getPath() + path;
    }
  }
 else {
    if (self.getPath().endsWith(RepositoryDirectory.DIRECTORY_SEPARATOR)) {
      absolutePath=self.getPath() + path;
    }
 else {
      absolutePath=self.getPath() + RepositoryDirectory.DIRECTORY_SEPARATOR + path;
    }
  }
  RepositoryFile file=repository.getFile(absolutePath);
  if (file == null || !file.isFolder()) {
    return null;
  }
  if (isRoot() && RepositoryDirectory.DIRECTORY_SEPARATOR.equals(absolutePath)) {
    return this;
  }
  String parentPath=getParentPath(absolutePath);
  if (self.getPath().endsWith(RepositoryDirectory.DIRECTORY_SEPARATOR)) {
    if (parentPath.equals(self.getPath().substring(0,self.getPath().length() - 1))) {
      return new LazyUnifiedRepositoryDirectory(file,this,repository,registry);
    }
  }
 else {
    if (parentPath.equals(self.getPath())) {
      return new LazyUnifiedRepositoryDirectory(file,this,repository,registry);
    }
  }
  return new LazyUnifiedRepositoryDirectory(file,findDirectory(parentPath),repository,registry);
}
