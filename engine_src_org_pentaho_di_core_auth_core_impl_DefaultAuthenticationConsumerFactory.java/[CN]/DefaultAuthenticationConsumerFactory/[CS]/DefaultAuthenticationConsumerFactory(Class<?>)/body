{
  Constructor<?>[] constructors=consumerClass.getConstructors();
  if (constructors.length != 1) {
    throw new AuthenticationFactoryException(BaseMessages.getString(PKG,"DefaultAuthenticationConsumerFactory.Constructor",getClass().getName(),consumerClass.getCanonicalName()));
  }
  constructor=constructors[0];
  Class<?>[] parameterTypes=constructor.getParameterTypes();
  if (parameterTypes.length != 1) {
    throw new AuthenticationFactoryException(BaseMessages.getString(PKG,"DefaultAuthenticationConsumerFactory.Constructor.Arg",getClass().getName(),consumerClass.getCanonicalName()));
  }
  Method consumeMethod=null;
  Class<?> consumedType=Object.class;
  for (  Method method : consumerClass.getMethods()) {
    if ("consume".equals(method.getName())) {
      Class<?>[] methodParameterTypes=method.getParameterTypes();
      if (methodParameterTypes.length == 1 && consumedType.isAssignableFrom(methodParameterTypes[0])) {
        consumeMethod=method;
        consumedType=methodParameterTypes[0];
      }
    }
  }
  if (consumeMethod == null) {
    throw new AuthenticationFactoryException(BaseMessages.getString(PKG,"DefaultAuthenticationConsumerFactory.Consume",consumerClass.getCanonicalName()));
  }
  this.consumedType=(Class<Object>)consumeMethod.getParameterTypes()[0];
  this.returnType=(Class<Object>)consumeMethod.getReturnType();
  this.createArgType=(Class<Object>)parameterTypes[0];
}
