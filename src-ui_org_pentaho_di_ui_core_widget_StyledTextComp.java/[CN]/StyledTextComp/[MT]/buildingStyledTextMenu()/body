{
  MenuItem undoItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  undoItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Undo"));
  undoItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      undo();
    }
  }
);
  MenuItem redoItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  redoItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Redo"));
  redoItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      redo();
    }
  }
);
  new MenuItem(styledTextPopupmenu,SWT.SEPARATOR);
  MenuItem cutItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  cutItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Cut"));
  cutItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.cut();
    }
  }
);
  MenuItem copyItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  copyItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Copy"));
  copyItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.copy();
    }
  }
);
  MenuItem pasteItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  pasteItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Paste"));
  pasteItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.paste();
    }
  }
);
  MenuItem selectAllItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  selectAllItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.SelectAll"));
  selectAllItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      styledText.selectAll();
    }
  }
);
  new MenuItem(styledTextPopupmenu,SWT.SEPARATOR);
  MenuItem findItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  findItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Find"));
  findItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      StyledTextCompFind stFind=new StyledTextCompFind(styledText.getShell(),styledText,BaseMessages.getString(PKG,"WidgetDialog.Styled.FindString",strTabName));
      stFind.open();
    }
  }
);
  MenuItem replaceItem=new MenuItem(styledTextPopupmenu,SWT.PUSH);
  replaceItem.setText(BaseMessages.getString(PKG,"WidgetDialog.Styled.Replace"));
  replaceItem.setAccelerator(SWT.CTRL + 'H');
  replaceItem.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event e){
      StyledTextCompReplace stReplace=new StyledTextCompReplace(styledText.getShell(),styledText);
      stReplace.open();
    }
  }
);
  styledText.addMenuDetectListener(new MenuDetectListener(){
    public void menuDetected(    MenuDetectEvent e){
      if (undoStack.size() > 0)       styledTextPopupmenu.getItem(0).setEnabled(true);
 else       styledTextPopupmenu.getItem(0).setEnabled(false);
      if (redoStack.size() > 0)       styledTextPopupmenu.getItem(1).setEnabled(true);
 else       styledTextPopupmenu.getItem(1).setEnabled(false);
      styledTextPopupmenu.getItem(5).setEnabled(checkPaste());
      if (styledText.getSelectionCount() > 0) {
        styledTextPopupmenu.getItem(3).setEnabled(true);
        styledTextPopupmenu.getItem(4).setEnabled(true);
      }
 else {
        styledTextPopupmenu.getItem(3).setEnabled(false);
        styledTextPopupmenu.getItem(4).setEnabled(false);
      }
    }
  }
);
  styledText.setMenu(styledTextPopupmenu);
}
