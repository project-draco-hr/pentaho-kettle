{
  String[] ids=new String[]{annotation.id()};
  if (ids.length == 1 && Const.isEmpty(ids[0])) {
    throw new KettlePluginException("No ID specified for plugin with class: " + clazz.getName());
  }
  String name=annotation.name();
  String description=null;
  String category=null;
  Map<Class<?>,String> classMap=new HashMap<Class<?>,String>();
  classMap.put(GUIOption.class,clazz.getName());
  classMap.put(LifecycleListener.class,clazz.getName());
  PluginClassTypes extraTypes=clazz.getAnnotation(PluginClassTypes.class);
  if (extraTypes != null) {
    for (int i=0; i < extraTypes.classTypes().length; i++) {
      classMap.put(extraTypes.classTypes()[i],extraTypes.implementationClass()[i].getName());
    }
  }
  PluginInterface stepPlugin=new Plugin(ids,this.getClass(),GUIOption.class,category,name,description,null,false,nativeRepositoryType,classMap,libraries,null,null);
  registry.registerPlugin(this.getClass(),stepPlugin);
}
