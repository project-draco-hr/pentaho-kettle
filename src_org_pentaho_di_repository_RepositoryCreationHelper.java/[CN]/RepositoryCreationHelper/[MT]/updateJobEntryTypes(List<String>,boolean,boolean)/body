{
synchronized (repository) {
    JobEntryLoader jobEntryLoader=JobEntryLoader.getInstance();
    JobPlugin[] jobPlugins=jobEntryLoader.getJobEntriesWithType(JobPlugin.TYPE_ALL);
    for (int i=0; i < jobPlugins.length; i++) {
      String type_desc=jobPlugins[i].getID();
      String type_desc_long=jobPlugins[i].getDescription();
      long id=0;
      if (!create)       id=repository.getJobEntryTypeID(type_desc);
      if (id < 0) {
        id=i + 1;
        if (!create)         id=repository.getNextJobEntryTypeID();
        RowMetaAndData table=new RowMetaAndData();
        table.addValue(new ValueMeta(Repository.FIELD_JOBENTRY_TYPE_ID_JOBENTRY_TYPE,ValueMetaInterface.TYPE_INTEGER),new Long(id));
        table.addValue(new ValueMeta(Repository.FIELD_JOBENTRY_TYPE_CODE,ValueMetaInterface.TYPE_STRING),type_desc);
        table.addValue(new ValueMeta(Repository.FIELD_JOBENTRY_TYPE_DESCRIPTION,ValueMetaInterface.TYPE_STRING),type_desc_long);
        if (dryrun) {
          String sql=database.getSQLOutput(null,Repository.TABLE_R_JOBENTRY_TYPE,table.getRowMeta(),table.getData(),"yyyy/MM/dd");
          statements.add(sql);
        }
 else {
          database.prepareInsert(table.getRowMeta(),null,Repository.TABLE_R_JOBENTRY_TYPE);
          database.setValuesInsert(table);
          database.insertRow();
          database.closeInsert();
        }
      }
    }
  }
}
