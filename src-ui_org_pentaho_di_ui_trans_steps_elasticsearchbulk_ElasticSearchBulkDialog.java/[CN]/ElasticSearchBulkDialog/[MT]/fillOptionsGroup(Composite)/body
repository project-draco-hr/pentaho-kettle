{
  int margin=Const.MARGIN;
  wSettingsGroup=new Group(parentTab,SWT.SHADOW_NONE);
  props.setLook(wSettingsGroup);
  wSettingsGroup.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.SettingsGroup.Label"));
  FormLayout settingGroupLayout=new FormLayout();
  settingGroupLayout.marginWidth=10;
  settingGroupLayout.marginHeight=10;
  wSettingsGroup.setLayout(settingGroupLayout);
  wTimeOut=new LabelTimeComposite(wSettingsGroup,BaseMessages.getString(PKG,"ElasticSearchBulkDialog.TimeOut.Label"),BaseMessages.getString(PKG,"ElasticSearchBulkDialog.TimeOut.Tooltip"));
  props.setLook(wTimeOut);
  wTimeOut.addModifyListener(lsMod);
  wlBatchSize=new Label(wSettingsGroup,SWT.RIGHT);
  wlBatchSize.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.BatchSize.Label"));
  props.setLook(wlBatchSize);
  wBatchSize=new TextVar(transMeta,wSettingsGroup,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wBatchSize);
  wBatchSize.addModifyListener(lsMod);
  wlStopOnError=new Label(wSettingsGroup,SWT.RIGHT);
  wlStopOnError.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.StopOnError.Label"));
  wStopOnError=new Button(wSettingsGroup,SWT.CHECK | SWT.RIGHT);
  wStopOnError.setToolTipText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.StopOnError.Tooltip"));
  wIdInField=new LabelComboVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IdField.Label"),BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IdField.Tooltip"));
  props.setLook(wIdInField);
  wIdInField.getComboWidget().setEditable(true);
  wIdInField.addModifyListener(lsMod);
  wIdInField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      getPreviousFields(wIdInField);
    }
  }
);
  getPreviousFields(wIdInField);
  wlIsOverwrite=new Label(wSettingsGroup,SWT.RIGHT);
  wlIsOverwrite.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Overwrite.Label"));
  wIsOverwrite=new Button(wSettingsGroup,SWT.CHECK | SWT.RIGHT);
  wIsOverwrite.setToolTipText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Overwrite.Tooltip"));
  wlUseOutput=new Label(wSettingsGroup,SWT.RIGHT);
  wlUseOutput.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.UseOutput.Label"));
  wUseOutput=new Button(wSettingsGroup,SWT.CHECK | SWT.RIGHT);
  wUseOutput.setToolTipText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.UseOutput.Tooltip"));
  wUseOutput.addSelectionListener(new SelectionListener(){
    public void widgetDefaultSelected(    SelectionEvent arg0){
      widgetSelected(arg0);
    }
    public void widgetSelected(    SelectionEvent arg0){
      wIdOutField.setEnabled(wUseOutput.getSelection());
    }
  }
);
  wIdOutField=new LabelTextVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IdOutField.Label"),BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IdOutField.Tooltip"));
  props.setLook(wIdOutField);
  wIdOutField.setEnabled(wUseOutput.getSelection());
  wIdOutField.addModifyListener(lsMod);
  wlIsJson=new Label(wSettingsGroup,SWT.RIGHT);
  wlIsJson.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IsJson.Label"));
  wIsJson=new Button(wSettingsGroup,SWT.CHECK | SWT.RIGHT);
  wIsJson.setToolTipText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IsJson.Tooltip"));
  wIsJson.addSelectionListener(new SelectionListener(){
    public void widgetDefaultSelected(    SelectionEvent arg0){
      widgetSelected(arg0);
    }
    public void widgetSelected(    SelectionEvent arg0){
      wJsonField.setEnabled(wIsJson.getSelection());
      wFields.setEnabled(!wIsJson.getSelection());
      wFields.setVisible(!wIsJson.getSelection());
      wGet.setEnabled(!wIsJson.getSelection());
    }
  }
);
  wJsonField=new LabelComboVar(transMeta,wSettingsGroup,BaseMessages.getString(PKG,"ElasticSearchBulkDialog.JsonField.Label"),BaseMessages.getString(PKG,"ElasticSearchBulkDialog.JsonField.Tooltip"));
  wJsonField.getComboWidget().setEditable(true);
  props.setLook(wJsonField);
  wJsonField.addModifyListener(lsMod);
  wJsonField.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      getPreviousFields(wJsonField);
    }
  }
);
  getPreviousFields(wJsonField);
  wJsonField.setEnabled(wIsJson.getSelection());
  Control[] settingsControls=new Control[]{wlBatchSize,wBatchSize,wlStopOnError,wStopOnError,wTimeOut,wIdInField,wlIsOverwrite,wIsOverwrite,wlUseOutput,wUseOutput,wIdOutField,wlIsJson,wIsJson,wJsonField};
  placeControls(wSettingsGroup,settingsControls);
  fdSettingsGroup=new FormData();
  fdSettingsGroup.left=new FormAttachment(0,margin);
  fdSettingsGroup.top=new FormAttachment(wIndexGroup,margin);
  fdSettingsGroup.right=new FormAttachment(100,-margin);
  wSettingsGroup.setLayoutData(fdSettingsGroup);
}
