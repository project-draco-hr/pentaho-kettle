{
  wIndexGroup=new Group(parentTab,SWT.SHADOW_NONE);
  props.setLook(wIndexGroup);
  wIndexGroup.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.IndexGroup.Label"));
  FormLayout indexGroupLayout=new FormLayout();
  indexGroupLayout.marginWidth=10;
  indexGroupLayout.marginHeight=10;
  wIndexGroup.setLayout(indexGroupLayout);
  wIndex=new LabelTextVar(transMeta,wIndexGroup,BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Index.Label"),BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Index.Tooltip"));
  wIndex.addModifyListener(lsMod);
  wType=new LabelTextVar(transMeta,wIndexGroup,BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Type.Label"),BaseMessages.getString(PKG,"ElasticSearchBulkDialog.Type.Tooltip"));
  wType.addModifyListener(lsMod);
  wTest=new Button(wIndexGroup,SWT.PUSH);
  wTest.setText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.TestIndex.Label"));
  wTest.setToolTipText(BaseMessages.getString(PKG,"ElasticSearchBulkDialog.TestIndex.Tooltip"));
  wTest.addListener(SWT.Selection,new Listener(){
    public void handleEvent(    Event arg0){
      test(TestType.INDEX);
    }
  }
);
  Control[] connectionControls=new Control[]{wIndex,wType};
  placeControls(wIndexGroup,connectionControls);
  BaseStepDialog.positionBottomButtons(wIndexGroup,new Button[]{wTest},Const.MARGIN,wType);
  fdIndexGroup=new FormData();
  fdIndexGroup.left=new FormAttachment(0,Const.MARGIN);
  fdIndexGroup.top=new FormAttachment(wStepname,Const.MARGIN);
  fdIndexGroup.right=new FormAttachment(100,-Const.MARGIN);
  wIndexGroup.setLayoutData(fdIndexGroup);
}
