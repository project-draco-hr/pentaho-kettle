{
  composite=new Composite(parent,SWT.NONE);
  this.shell=parent.getShell();
  this.spoon=spoon;
  this.stringUrl=stringUrl;
  composite.setLayout(new FormLayout());
  addToolBar();
  addToolBarListeners();
  Control swtToolBar=(Control)toolbar.getNativeObject();
  FormData fdToolBar=(FormData)swtToolBar.getLayoutData();
  fdToolBar.right=null;
  final Text urlText=new Text(composite,SWT.SINGLE | SWT.LEFT | SWT.READ_ONLY| SWT.BORDER);
  FormData fdUrlText=new FormData();
  fdUrlText.top=new FormAttachment(swtToolBar,0,SWT.CENTER);
  fdUrlText.left=new FormAttachment(swtToolBar,20);
  fdUrlText.right=new FormAttachment(100,0);
  urlText.setLayoutData(fdUrlText);
  final XulToolbarButton back=toolbar.getButtonById("browse-back");
  back.setEnable(false);
  final XulToolbarButton forward=toolbar.getButtonById("browse-forward");
  forward.setText(BaseMessages.getString(PKG,"SpoonBrowser.Dialog.Forward"));
  forward.setEnable(false);
  browser=new Browser(composite,SWT.NONE);
  FormData fdBrowser=new FormData();
  fdBrowser.left=new FormAttachment(0,0);
  fdBrowser.right=new FormAttachment(100,0);
  fdBrowser.top=new FormAttachment((Control)toolbar.getNativeObject(),2);
  fdBrowser.bottom=new FormAttachment(100,0);
  browser.setLayoutData(fdBrowser);
  LocationListener locationListener=new LocationListener(){
    public void changed(    LocationEvent event){
      Browser browser=(Browser)event.widget;
      back.setEnable(browser.isBackEnabled());
      forward.setEnable(browser.isForwardEnabled());
      urlText.setText(browser.getUrl());
    }
    public void changing(    LocationEvent event){
    }
  }
;
  browser.addLocationListener(locationListener);
  composite.addKeyListener(spoon.defKeys);
  browser.addKeyListener(spoon.defKeys);
  if (isURL)   browser.setUrl(stringUrl);
 else   browser.setText(stringUrl);
}
