{
  try {
    XMLInputPathMeta meta=new XMLInputPathMeta();
    getInfo(meta);
    if (!checkLoopXPath(meta))     return;
    FileInputList inputList=meta.getFiles();
    wFields.removeAll();
    if (inputList.getFiles().size() > 0) {
      String encodage="UTF-8";
      if (!Const.isEmpty(meta.getEncoding())) {
        encodage=meta.getEncoding();
      }
      javax.xml.parsers.DocumentBuilder builder=javax.xml.parsers.DocumentBuilderFactory.newInstance().newDocumentBuilder();
      org.w3c.dom.Document document=builder.parse(new org.xml.sax.InputSource(new java.io.InputStreamReader(new java.io.FileInputStream(KettleVFS.getFilename(inputList.getFile(0))),encodage)));
      javax.xml.xpath.XPath xpath=javax.xml.xpath.XPathFactory.newInstance().newXPath();
      NodeList widgetNodes=(NodeList)xpath.evaluate(meta.getRealLoopXPath(),document,javax.xml.xpath.XPathConstants.NODESET);
      if (widgetNodes.getLength() > 0) {
        Node widgetNode=widgetNodes.item(0);
        String valueNode=null;
        for (int i=0; i < widgetNode.getChildNodes().getLength(); i++) {
          TableItem item=new TableItem(wFields.table,SWT.NONE);
          item.setText(1,widgetNode.getChildNodes().item(i).getNodeName());
          item.setText(2,widgetNode.getChildNodes().item(i).getNodeName());
          item.setText(3,XMLInputPathField.ElementTypeDesc[0]);
          valueNode=XMLHandler.getNodeValue(widgetNode.getChildNodes().item(i));
          if (IsDate(valueNode)) {
            ;
            item.setText(4,"Date");
          }
 else           if (IsInteger(valueNode)) {
            item.setText(4,"Integer");
          }
 else           if (IsNumber(valueNode)) {
            item.setText(4,"Number");
          }
 else {
            item.setText(4,"String");
          }
        }
        for (int i=0; i < widgetNode.getAttributes().getLength(); i++) {
          TableItem item=new TableItem(wFields.table,SWT.NONE);
          item.setText(1,widgetNode.getAttributes().item(i).getNodeName());
          item.setText(2,widgetNode.getAttributes().item(i).getNodeName());
          item.setText(3,XMLInputPathField.ElementTypeDesc[1]);
          valueNode=widgetNode.getAttributes().item(i).getNodeValue();
          if (IsDate(valueNode)) {
            item.setText(4,"Date");
          }
 else           if (IsInteger(valueNode)) {
            item.setText(4,"Integer");
          }
 else           if (IsNumber(valueNode)) {
            item.setText(4,"Number");
          }
 else {
            item.setText(4,"String");
          }
        }
      }
    }
    wFields.removeEmptyRows();
    wFields.setRowNums();
    wFields.optWidth(true);
  }
 catch (  Exception e) {
    new ErrorDialog(shell,Messages.getString("XMLInputPathDialog.ErrorParsingData.DialogTitle"),Messages.getString("XMLInputPathDialog.ErrorParsingData.DialogMessage"),e);
  }
}
