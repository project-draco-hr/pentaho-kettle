{
  prepareStepMetas_cl1_cl2();
  trans.prepareExecution(new String[]{});
  List<RowSet> rowsets=trans.getRowsets();
  assertTrue(!rowsets.isEmpty());
  assertEquals("We have 4 rowsets finally since repartitioning happens",4,rowsets.size());
  assertEquals("We have 4 steps: 2 producer copies and 2 copies of consumer since they both partitioned",4,trans.getSteps().size());
  StepInterface stepOne0=getStepByName(SP10);
  assertTrue("1.0 step have no input row sets",stepOne0.getInputRowSets().isEmpty());
  assertEquals("1.0 step have 2 output rowsets",2,stepOne0.getOutputRowSets().size());
  StepInterface stepOne1=getStepByName(SP11);
  assertTrue("1.1 step have no input row sets",stepOne1.getInputRowSets().isEmpty());
  assertEquals("1.1 step have 2 output rowsets",2,stepOne1.getOutputRowSets().size());
  StepInterface stepTwo0=getStepByName(SP20);
  assertTrue("2.0 step have no output row sets",stepTwo0.getOutputRowSets().isEmpty());
  assertEquals("2.0 step have 1 input rowsets",2,stepTwo0.getInputRowSets().size());
  StepInterface stepTwo2=getStepByName(SP21);
  assertTrue("2.1 step have no output row sets",stepTwo2.getOutputRowSets().isEmpty());
  assertEquals("2.2 step have 2 input rowsets",2,stepTwo2.getInputRowSets().size());
}
