{
  RowMetaAndData table=new RowMetaAndData();
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_ID_CLUSTER,ValueMetaInterface.TYPE_INTEGER),clusterSchema.getObjectId());
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_NAME,ValueMetaInterface.TYPE_STRING),clusterSchema.getName());
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_BASE_PORT,ValueMetaInterface.TYPE_STRING),clusterSchema.getBasePort());
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_SOCKETS_BUFFER_SIZE,ValueMetaInterface.TYPE_STRING),clusterSchema.getSocketsBufferSize());
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_SOCKETS_FLUSH_INTERVAL,ValueMetaInterface.TYPE_STRING),clusterSchema.getSocketsFlushInterval());
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_SOCKETS_COMPRESSED,ValueMetaInterface.TYPE_BOOLEAN),Boolean.valueOf(clusterSchema.isSocketsCompressed()));
  table.addValue(new ValueMeta(KettleDatabaseRepository.FIELD_CLUSTER_DYNAMIC,ValueMetaInterface.TYPE_BOOLEAN),Boolean.valueOf(clusterSchema.isDynamic()));
  repository.connectionDelegate.updateTableRow(KettleDatabaseRepository.TABLE_R_CLUSTER,KettleDatabaseRepository.FIELD_CLUSTER_ID_CLUSTER,table,clusterSchema.getObjectId());
}
