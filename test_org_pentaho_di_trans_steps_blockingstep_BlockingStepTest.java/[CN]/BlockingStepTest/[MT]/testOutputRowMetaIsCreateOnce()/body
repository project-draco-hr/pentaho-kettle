{
  StepMockHelper<BlockingStepMeta,BlockingStepData> mockHelper=new StepMockHelper<BlockingStepMeta,BlockingStepData>("BlockingStep",BlockingStepMeta.class,BlockingStepData.class);
  when(mockHelper.logChannelInterfaceFactory.create(any(),any(LoggingObjectInterface.class))).thenReturn(mockHelper.logChannelInterface);
  when(mockHelper.trans.isRunning()).thenReturn(true);
  BlockingStep step=new BlockingStep(mockHelper.stepMeta,mockHelper.stepDataInterface,0,mockHelper.transMeta,mockHelper.trans);
  step=spy(step);
  BlockingStepData data=new BlockingStepData();
  step.init(mockHelper.processRowsStepMetaInterface,data);
  step.setInputRowMeta(createRowMetaInterface());
  doReturn(new Object[0]).when(step).getRow();
  step.processRow(mockHelper.processRowsStepMetaInterface,data);
  RowMetaInterface outputRowMeta=data.outputRowMeta;
  assertNotNull(outputRowMeta);
  doReturn(new Object[0]).when(step).getRow();
  step.processRow(mockHelper.processRowsStepMetaInterface,data);
  assertTrue(data.outputRowMeta == outputRowMeta);
}
