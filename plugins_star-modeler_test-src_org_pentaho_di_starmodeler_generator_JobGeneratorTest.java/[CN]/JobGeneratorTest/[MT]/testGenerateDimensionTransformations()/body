{
  final LogicalModel logicalModel=mock(LogicalModel.class);
  when(jobGenerator.domain.getLogicalModels()).thenReturn(new LinkedList<LogicalModel>(){
{
      add(logicalModel);
    }
  }
);
  final LogicalTable logicalTable=mock(LogicalTable.class);
  when(logicalTable.getProperty(eq(DefaultIDs.LOGICAL_TABLE_PHYSICAL_TABLE_NAME))).thenReturn("test_table_name");
  when(logicalModel.getLogicalTables()).thenReturn(new LinkedList<LogicalTable>(){
{
      add(logicalTable);
    }
  }
);
  when(logicalTable.getProperty(eq(DefaultPropertyID.TABLE_TYPE.getId()))).thenReturn(TableType.DIMENSION);
  when(logicalTable.getProperty(eq(DefaultIDs.LOGICAL_TABLE_DIMENSION_TYPE))).thenReturn(DimensionType.JUNK_DIMENSION.name());
  final List<TransMeta> transMetas=jobGenerator.generateDimensionTransformations();
  assertNotNull(transMetas);
  assertEquals(1,transMetas.size());
}
