{
  CheckResult cr;
  if (prev != null && prev.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.StepReceivingFields",prev.size() + ""),stepMeta);
    remarks.add(cr);
    String mainField=transMeta.environmentSubstitute(getMainStreamField());
    int idx=prev.indexOfValue(mainField);
    if (idx < 0) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.MainFieldNotFound",mainField),stepMeta);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.MainFieldFound",mainField),stepMeta);
    }
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.CouldNotFindFieldsFromPreviousSteps"),stepMeta);
    remarks.add(cr);
  }
  if (info != null && info.size() > 0) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.StepReceivingLookupData",info.size() + ""),stepMeta);
    remarks.add(cr);
    String lookupField=transMeta.environmentSubstitute(getLookupField());
    int idx=info.indexOfValue(lookupField);
    if (idx < 0) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.FieldNotFoundInLookupStream",lookupField),stepMeta);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.FieldFoundInTheLookupStream",lookupField),stepMeta);
    }
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.FieldsNotFoundFromInLookupSep"),stepMeta);
    remarks.add(cr);
  }
  StreamInterface infoStream=getStepIOMeta().getInfoStreams().get(0);
  if (infoStream.getStepMeta() == null) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.SourceStepNotSelected"),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.SourceStepIsSelected"),stepMeta);
    remarks.add(cr);
    if (info != null) {
      cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.SourceStepExist",infoStream.getStepname() + ""),stepMeta);
      remarks.add(cr);
    }
 else {
      cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.SourceStepDoesNotExist",infoStream.getStepname() + ""),stepMeta);
      remarks.add(cr);
    }
  }
  if (input.length >= 2) {
    cr=new CheckResult(CheckResult.TYPE_RESULT_OK,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.StepReceivingInfoFromInputSteps",input.length + ""),stepMeta);
    remarks.add(cr);
  }
 else {
    cr=new CheckResult(CheckResult.TYPE_RESULT_ERROR,BaseMessages.getString(PKG,"FuzzyMatchMeta.CheckResult.NeedAtLeast2InputStreams",Const.CR,Const.CR),stepMeta);
    remarks.add(cr);
  }
}
