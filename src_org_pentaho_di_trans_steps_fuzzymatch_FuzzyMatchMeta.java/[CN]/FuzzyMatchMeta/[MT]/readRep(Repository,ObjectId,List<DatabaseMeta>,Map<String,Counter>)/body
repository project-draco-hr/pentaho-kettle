{
  try {
    String lookupFromStepname=rep.getStepAttributeString(id_step,"lookup_from_step");
    StreamInterface infoStream=getStepIOMeta().getInfoStreams().get(0);
    infoStream.setSubject(lookupFromStepname);
    lookupfield=rep.getStepAttributeString(id_step,"lookupfield");
    mainstreamfield=rep.getStepAttributeString(id_step,"mainstreamfield");
    outputmatchfield=rep.getStepAttributeString(id_step,"outputmatchfield");
    outputvaluefield=rep.getStepAttributeString(id_step,"outputvaluefield");
    caseSensitive=rep.getStepAttributeBoolean(id_step,"caseSensitive");
    closervalue=rep.getStepAttributeBoolean(id_step,"closervalue");
    minimalValue=rep.getStepAttributeString(id_step,"minimalValue");
    maximalValue=rep.getStepAttributeString(id_step,"maximalValue");
    separator=rep.getStepAttributeString(id_step,"separator");
    algorithm=getAlgorithmTypeByCode(Const.NVL(rep.getStepAttributeString(id_step,"algorithm"),""));
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"FuzzyMatchMeta.Exception.UnexpecteErrorReadingStepInfoFromRepository"),e);
  }
}
