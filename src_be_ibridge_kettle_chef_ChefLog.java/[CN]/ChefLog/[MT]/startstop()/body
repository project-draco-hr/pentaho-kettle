{
  if (job == null) {
    if (chef.jobMeta.hasChanged()) {
      if (chef.props.getAutoSave()) {
        log.logDetailed(toString(),Messages.getString("ChefLog.Log.AutoSaveFileBeforeRunning"));
        System.out.println(Messages.getString("ChefLog.Log.AutoSaveFileBeforeRunning2"));
        chef.saveFile();
      }
 else {
        MessageDialogWithToggle md=new MessageDialogWithToggle(shell,Messages.getString("ChefLog.Dialog.SaveChangedFile.Title"),null,Messages.getString("ChefLog.Dialog.SaveChangedFile.Message") + Const.CR + Messages.getString("ChefLog.Dialog.SaveChangedFile.Message2")+ Const.CR,MessageDialog.QUESTION,new String[]{Messages.getString("System.Button.Yes"),Messages.getString("System.Button.No")},0,Messages.getString("ChefLog.Dialog.SaveChangedFile.Toggle"),chef.props.getAutoSave());
        int answer=md.open();
        if (answer == 0) {
          chef.saveFile();
        }
        chef.props.setAutoSave(md.getToggleState());
      }
    }
    if (((chef.jobMeta.getName() != null && chef.rep != null) || (chef.jobMeta.getFilename() != null && chef.rep == null)) && !chef.jobMeta.hasChanged()) {
      if (job == null || (job != null && job.isActive())) {
        try {
          wStart.setText(STOP_TEXT);
          job=new Job();
          LocalVariables localVariables=LocalVariables.getInstance();
          localVariables.createKettleVariables(job,Thread.currentThread());
          job.init(log,chef.jobMeta.getName(),chef.jobMeta.getFilename(),null);
          job.open(chef.rep,chef.jobMeta.getFilename(),chef.jobMeta.getName(),chef.jobMeta.getDirectory().getPath());
          log.logMinimal(Chef.APP_NAME,Messages.getString("ChefLog.Log.StartingJob"));
          job.start();
          readLog();
        }
 catch (        KettleException e) {
          new ErrorDialog(shell,chef.props,Messages.getString("ChefLog.Dialog.CanNotOpenJob.Title"),Messages.getString("ChefLog.Dialog.CanNotOpenJob.Message"),e);
          job=null;
        }
      }
 else {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("ChefLog.Dialog.JobIsAlreadyRunning.Title"));
        m.setMessage(Messages.getString("ChefLog.Dialog.JobIsAlreadyRunning.Message"));
        m.open();
      }
    }
 else {
      if (chef.jobMeta.hasChanged()) {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("ChefLog.Dialog.JobHasChangedSave.Title"));
        m.setMessage(Messages.getString("ChefLog.Dialog.JobHasChangedSave.Message"));
        m.open();
      }
 else       if (chef.rep != null && chef.jobMeta.getName() == null) {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("ChefLog.Dialog.PleaseGiveThisJobAName.Title"));
        m.setMessage(Messages.getString("ChefLog.Dialog.PleaseGiveThisJobAName.Message"));
        m.open();
      }
 else {
        MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
        m.setText(Messages.getString("ChefLog.Dialog.NoFilenameSaveYourJobFirst.Title"));
        m.setMessage(Messages.getString("ChefLog.Dialog.NoFilenameSaveYourJobFirst.Message"));
        m.open();
      }
    }
  }
 else {
    try {
      if (job != null) {
        job.stopAll();
        job.endProcessing("stop");
        job=null;
        log.logMinimal(Chef.APP_NAME,Messages.getString("ChefLog.Log.JobWasStopped"));
      }
    }
 catch (    KettleJobException je) {
      MessageBox m=new MessageBox(shell,SWT.OK | SWT.ICON_WARNING);
      m.setText(Messages.getString("ChefLog.Dialog.UnableToSaveStopLineInLoggingTable.Title"));
      m.setMessage(Messages.getString("ChefLog.Dialog.UnableToSaveStopLineInLoggingTable.Message") + Const.CR + je.toString());
      m.open();
    }
 finally {
      job=null;
      wStart.setText(START_TEXT);
    }
  }
}
