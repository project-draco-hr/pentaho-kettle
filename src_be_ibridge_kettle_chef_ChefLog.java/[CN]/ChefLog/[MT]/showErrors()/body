{
  String all=wText.getText();
  ArrayList err=new ArrayList();
  int i=0;
  int startpos=0;
  int crlen=Const.CR.length();
  while (i < all.length() - crlen) {
    if (all.substring(i,i + crlen).equalsIgnoreCase(Const.CR)) {
      String line=all.substring(startpos,i);
      if (line.toUpperCase().indexOf(Messages.getString("ChefLog.System.ERROR")) >= 0 || line.toUpperCase().indexOf(Messages.getString("ChefLog.System.EXCEPTION")) >= 0) {
        err.add(line);
      }
      startpos=i + crlen;
    }
    i++;
  }
  String line=all.substring(startpos);
  if (line.toUpperCase().indexOf(Messages.getString("ChefLog.System.ERROR")) >= 0 || line.toUpperCase().indexOf(Messages.getString("ChefLog.System.EXCEPTION")) >= 0) {
    err.add(line);
  }
  if (err.size() > 0) {
    String err_lines[]=new String[err.size()];
    for (i=0; i < err_lines.length; i++)     err_lines[i]=(String)err.get(i);
    EnterSelectionDialog esd=new EnterSelectionDialog(shell,chef.props,err_lines,Messages.getString("ChefLog.Dialog.ErrorLines.Title"),Messages.getString("ChefLog.Dialog.ErrorLines.Message"));
    line=esd.open();
    if (line != null) {
      for (i=0; i < chef.getJobMeta().nrJobEntries(); i++) {
        JobEntryCopy entryCopy=chef.getJobMeta().getJobEntry(i);
        if (line.indexOf(entryCopy.getName()) >= 0) {
          chef.editChefGraphEntry(entryCopy);
        }
      }
    }
  }
}
