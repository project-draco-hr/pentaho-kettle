{
  String localeForErrorMSG=Locale.getDefault(Locale.Category.FORMAT).toLanguageTag();
  assertEquals(localeForErrorMSG + "=locale localized pattern= " + stf.toLocalizedPattern(),tdb.getString("TIMESTAMP.NINE." + patternName),(stf.format(timestampNinePrecision)));
  assertEquals(localeForErrorMSG + "=locale localized pattern= " + stf.toLocalizedPattern(),tdb.getString("TIMESTAMP.THREE." + patternName),(stf.format(timestampThreePrecision)));
  assertEquals(localeForErrorMSG + "=locale localized pattern= " + stf.toLocalizedPattern(),tdb.getString("TIMESTAMP.ZERO." + patternName),(stf.format(timestampWithoutPrecision)));
  assertEquals(localeForErrorMSG + "=locale localized pattern= " + stf.toLocalizedPattern(),tdb.getString("TIMESTAMP.DOT." + patternName),(stf.format(timestampWithoutPrecisionWithDot)));
  assertEquals(localeForErrorMSG + "=locale localized pattern= " + stf.toLocalizedPattern(),tdb.getString("DATE.THREE." + patternName),(stf.format(dateThreePrecision)));
  assertEquals(localeForErrorMSG + "=locale localized pattern= " + stf.toLocalizedPattern(),tdb.getString("DATE.ZERO." + patternName),(stf.format(dateWithoutPrecision)));
}
