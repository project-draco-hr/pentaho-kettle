{
  try {
    rowMeta.clear();
    for (int i=0; i < inputFields.length; i++) {
      TextFileInputField field=inputFields[i];
      ValueMetaInterface valueMeta=ValueMetaFactory.createValueMeta(field.getName(),field.getType());
      valueMeta.setConversionMask(field.getFormat());
      valueMeta.setLength(field.getLength());
      valueMeta.setPrecision(field.getPrecision());
      valueMeta.setConversionMask(field.getFormat());
      valueMeta.setDecimalSymbol(field.getDecimalSymbol());
      valueMeta.setGroupingSymbol(field.getGroupSymbol());
      valueMeta.setCurrencySymbol(field.getCurrencySymbol());
      valueMeta.setTrimType(field.getTrimType());
      if (lazyConversionActive) {
        valueMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_BINARY_STRING);
      }
      valueMeta.setStringEncoding(space.environmentSubstitute(encoding));
      ValueMetaInterface storageMetadata=ValueMetaFactory.cloneValueMeta(valueMeta,ValueMetaInterface.TYPE_STRING);
      storageMetadata.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);
      storageMetadata.setLength(-1,-1);
      valueMeta.setStorageMetadata(storageMetadata);
      valueMeta.setOrigin(origin);
      rowMeta.addValueMeta(valueMeta);
    }
    if (!Utils.isEmpty(filenameField) && includingFilename) {
      ValueMetaInterface filenameMeta=new ValueMetaString(filenameField);
      filenameMeta.setOrigin(origin);
      if (lazyConversionActive) {
        filenameMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_BINARY_STRING);
        filenameMeta.setStorageMetadata(new ValueMetaString(filenameField));
      }
      rowMeta.addValueMeta(filenameMeta);
    }
    if (!Utils.isEmpty(rowNumField)) {
      ValueMetaInterface rowNumMeta=new ValueMetaInteger(rowNumField);
      rowNumMeta.setLength(10);
      rowNumMeta.setOrigin(origin);
      rowMeta.addValueMeta(rowNumMeta);
    }
  }
 catch (  Exception e) {
    throw new KettleStepException(e);
  }
}
