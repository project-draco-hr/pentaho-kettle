{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"useauthentication",useAuthentication);
    rep.saveStepAttribute(id_transformation,id_step,"host",Host);
    rep.saveStepAttribute(id_transformation,id_step,"username",userName);
    rep.saveStepAttribute(id_transformation,id_step,"password",Encr.encryptPasswordIfNotUsingVariables(password));
    rep.saveStepAttribute(id_transformation,id_step,"port",port);
    rep.saveStepAttribute(id_transformation,id_step,"dnFieldName",dnFieldName);
    rep.saveStepAttribute(id_transformation,id_step,"failIfNotExist",failIfNotExist);
    rep.saveStepAttribute(id_transformation,id_step,"operationType",getOperationTypeCode(operationType));
    rep.saveStepAttribute(id_transformation,id_step,"multivaluedseparator",multiValuedSeparator);
    rep.saveStepAttribute(id_transformation,id_step,"searchBase",searchBase);
    rep.saveStepAttribute(id_transformation,id_step,"referralType",getReferralTypeCode(referralType));
    rep.saveStepAttribute(id_transformation,id_step,"derefAliasesType",getDerefAliasesCode(derefAliasesType));
    for (int i=0; i < updateLookup.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"field_name",updateLookup[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"field_attribut",updateStream[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"value_update",update[i].booleanValue());
    }
  }
 catch (  Exception e) {
    throw new KettleException(BaseMessages.getString(PKG,"LDAPOutputMeta.Exception.ErrorSavingToRepository","" + id_step),e);
  }
}
