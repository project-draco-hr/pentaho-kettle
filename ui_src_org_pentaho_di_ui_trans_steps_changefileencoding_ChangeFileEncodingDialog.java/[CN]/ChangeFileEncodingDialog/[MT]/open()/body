{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wSourceFileGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wSourceFileGroup);
  wSourceFileGroup.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.Group.SourceFileGroup.Label"));
  FormLayout SourceFilegroupLayout=new FormLayout();
  SourceFilegroupLayout.marginWidth=10;
  SourceFilegroupLayout.marginHeight=10;
  wSourceFileGroup.setLayout(SourceFilegroupLayout);
  wlFileName=new Label(wSourceFileGroup,SWT.RIGHT);
  wlFileName.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.FileName.Label"));
  props.setLook(wlFileName);
  fdlFileName=new FormData();
  fdlFileName.left=new FormAttachment(0,0);
  fdlFileName.right=new FormAttachment(middle,-margin);
  fdlFileName.top=new FormAttachment(wStepname,margin);
  wlFileName.setLayoutData(fdlFileName);
  wFileName=new CCombo(wSourceFileGroup,SWT.BORDER | SWT.READ_ONLY);
  wFileName.setEditable(true);
  props.setLook(wFileName);
  wFileName.addModifyListener(lsMod);
  fdfileName=new FormData();
  fdfileName.left=new FormAttachment(middle,0);
  fdfileName.top=new FormAttachment(wStepname,margin);
  fdfileName.right=new FormAttachment(100,-margin);
  wFileName.setLayoutData(fdfileName);
  wFileName.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      get();
    }
  }
);
  wlSourceEncoding=new Label(wSourceFileGroup,SWT.RIGHT);
  wlSourceEncoding.setText(BaseMessages.getString(PKG,"ChangeFileSourceEncodingDialog.SourceEncoding.Label"));
  props.setLook(wlSourceEncoding);
  fdlSourceEncoding=new FormData();
  fdlSourceEncoding.left=new FormAttachment(0,0);
  fdlSourceEncoding.top=new FormAttachment(wFileName,margin);
  fdlSourceEncoding.right=new FormAttachment(middle,-margin);
  wlSourceEncoding.setLayoutData(fdlSourceEncoding);
  wSourceEncoding=new ComboVar(transMeta,wSourceFileGroup,SWT.BORDER | SWT.READ_ONLY);
  wSourceEncoding.setEditable(true);
  props.setLook(wSourceEncoding);
  wSourceEncoding.addModifyListener(lsMod);
  fdSourceEncoding=new FormData();
  fdSourceEncoding.left=new FormAttachment(middle,0);
  fdSourceEncoding.top=new FormAttachment(wFileName,margin);
  fdSourceEncoding.right=new FormAttachment(100,0);
  wSourceEncoding.setLayoutData(fdSourceEncoding);
  wSourceEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setEncodings(wSourceEncoding);
    }
  }
);
  wlSourceAddResult=new Label(wSourceFileGroup,SWT.RIGHT);
  wlSourceAddResult.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.AddSourceResult.Label"));
  props.setLook(wlSourceAddResult);
  fdlSourceAddResult=new FormData();
  fdlSourceAddResult.left=new FormAttachment(0,0);
  fdlSourceAddResult.top=new FormAttachment(wSourceEncoding,margin);
  fdlSourceAddResult.right=new FormAttachment(middle,-margin);
  wlSourceAddResult.setLayoutData(fdlSourceAddResult);
  wSourceAddResult=new Button(wSourceFileGroup,SWT.CHECK);
  props.setLook(wSourceAddResult);
  wSourceAddResult.setToolTipText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.AddSourceResult.Tooltip"));
  fdSourceAddResult=new FormData();
  fdSourceAddResult.left=new FormAttachment(middle,0);
  fdSourceAddResult.top=new FormAttachment(wSourceEncoding,margin);
  wSourceAddResult.setLayoutData(fdSourceAddResult);
  fdSourceFileGroup=new FormData();
  fdSourceFileGroup.left=new FormAttachment(0,margin);
  fdSourceFileGroup.top=new FormAttachment(wStepname,margin);
  fdSourceFileGroup.right=new FormAttachment(100,-margin);
  wSourceFileGroup.setLayoutData(fdSourceFileGroup);
  wTargetFileGroup=new Group(shell,SWT.SHADOW_NONE);
  props.setLook(wTargetFileGroup);
  wTargetFileGroup.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.Group.TargetFileGroup.Label"));
  FormLayout TargetFilegroupLayout=new FormLayout();
  TargetFilegroupLayout.marginWidth=10;
  TargetFilegroupLayout.marginHeight=10;
  wTargetFileGroup.setLayout(TargetFilegroupLayout);
  wlTargetFileName=new Label(wTargetFileGroup,SWT.RIGHT);
  wlTargetFileName.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.TargetFileName.Label"));
  props.setLook(wlTargetFileName);
  fdlTargetFileName=new FormData();
  fdlTargetFileName.left=new FormAttachment(0,0);
  fdlTargetFileName.right=new FormAttachment(middle,-margin);
  fdlTargetFileName.top=new FormAttachment(wSourceEncoding,margin);
  wlTargetFileName.setLayoutData(fdlTargetFileName);
  wTargetFileName=new CCombo(wTargetFileGroup,SWT.BORDER | SWT.READ_ONLY);
  wTargetFileName.setEditable(true);
  props.setLook(wTargetFileName);
  wTargetFileName.addModifyListener(lsMod);
  fdTargetFileName=new FormData();
  fdTargetFileName.left=new FormAttachment(middle,0);
  fdTargetFileName.top=new FormAttachment(wSourceEncoding,margin);
  fdTargetFileName.right=new FormAttachment(100,-margin);
  wTargetFileName.setLayoutData(fdTargetFileName);
  wTargetFileName.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      get();
    }
  }
);
  wlCreateParentFolder=new Label(wTargetFileGroup,SWT.RIGHT);
  wlCreateParentFolder.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.CreateParentFolder.Label"));
  props.setLook(wlCreateParentFolder);
  fdlCreateParentFolder=new FormData();
  fdlCreateParentFolder.left=new FormAttachment(0,0);
  fdlCreateParentFolder.top=new FormAttachment(wTargetFileName,margin);
  fdlCreateParentFolder.right=new FormAttachment(middle,-margin);
  wlCreateParentFolder.setLayoutData(fdlCreateParentFolder);
  wCreateParentFolder=new Button(wTargetFileGroup,SWT.CHECK);
  props.setLook(wCreateParentFolder);
  wCreateParentFolder.setToolTipText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.CreateParentFolder.Tooltip"));
  fdCreateParentFolder=new FormData();
  fdCreateParentFolder.left=new FormAttachment(middle,0);
  fdCreateParentFolder.top=new FormAttachment(wTargetFileName,margin);
  wCreateParentFolder.setLayoutData(fdCreateParentFolder);
  wlTargetEncoding=new Label(wTargetFileGroup,SWT.RIGHT);
  wlTargetEncoding.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.TargetEncoding.Label"));
  props.setLook(wlTargetEncoding);
  fdlTargetEncoding=new FormData();
  fdlTargetEncoding.left=new FormAttachment(0,0);
  fdlTargetEncoding.top=new FormAttachment(wCreateParentFolder,margin);
  fdlTargetEncoding.right=new FormAttachment(middle,-margin);
  wlTargetEncoding.setLayoutData(fdlTargetEncoding);
  wTargetEncoding=new ComboVar(transMeta,wTargetFileGroup,SWT.BORDER | SWT.READ_ONLY);
  wTargetEncoding.setEditable(true);
  props.setLook(wTargetEncoding);
  wTargetEncoding.addModifyListener(lsMod);
  fdTargetEncoding=new FormData();
  fdTargetEncoding.left=new FormAttachment(middle,0);
  fdTargetEncoding.top=new FormAttachment(wCreateParentFolder,margin);
  fdTargetEncoding.right=new FormAttachment(100,0);
  wTargetEncoding.setLayoutData(fdTargetEncoding);
  wTargetEncoding.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      setEncodings(wTargetEncoding);
    }
  }
);
  wlTargetAddResult=new Label(wTargetFileGroup,SWT.RIGHT);
  wlTargetAddResult.setText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.AddTargetResult.Label"));
  props.setLook(wlTargetAddResult);
  fdlTargetAddResult=new FormData();
  fdlTargetAddResult.left=new FormAttachment(0,0);
  fdlTargetAddResult.top=new FormAttachment(wTargetEncoding,margin);
  fdlTargetAddResult.right=new FormAttachment(middle,-margin);
  wlTargetAddResult.setLayoutData(fdlTargetAddResult);
  wTargetAddResult=new Button(wTargetFileGroup,SWT.CHECK);
  props.setLook(wTargetAddResult);
  wTargetAddResult.setToolTipText(BaseMessages.getString(PKG,"ChangeFileEncodingDialog.AddTargetResult.Tooltip"));
  fdTargetAddResult=new FormData();
  fdTargetAddResult.left=new FormAttachment(middle,0);
  fdTargetAddResult.top=new FormAttachment(wTargetEncoding,margin);
  wTargetAddResult.setLayoutData(fdTargetAddResult);
  fdTargetFileGroup=new FormData();
  fdTargetFileGroup.left=new FormAttachment(0,margin);
  fdTargetFileGroup.top=new FormAttachment(wSourceFileGroup,margin);
  fdTargetFileGroup.right=new FormAttachment(100,-margin);
  wTargetFileGroup.setLayoutData(fdTargetFileGroup);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTargetFileGroup);
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  wOK.addListener(SWT.Selection,lsOK);
  wCancel.addListener(SWT.Selection,lsCancel);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  setSize();
  getData();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
