{
  List<String> attributes=Arrays.asList("header","footer","makeSheetActive","rowWritingMethod","startingCell","appendOmitHeader","appendOffset","appendEmpty","rowWritingMethod","forceFormulaRecalculation","leaveExistingStylesUnchanged","appendLines","add_to_result_filenames","name","extention","do_not_open_newfile_init","split","add_date","add_time","SpecifyFormat","date_time_format","sheetname","autosizecolums","stream_data","protect_sheet","password","protected_by","splitevery","if_file_exists","if_sheet_exists","enabled","sheet_enabled","filename","sheetname","outputfields");
  Map<String,String> getterMap=new HashMap<String,String>();
  getterMap.put("header","isHeaderEnabled");
  getterMap.put("footer","isFooterEnabled");
  getterMap.put("makeSheetActive","isMakeSheetActive");
  getterMap.put("rowWritingMethod","getRowWritingMethod");
  getterMap.put("startingCell","getStartingCell");
  getterMap.put("appendOmitHeader","isAppendOmitHeader");
  getterMap.put("appendOffset","getAppendOffset");
  getterMap.put("appendEmpty","getAppendEmpty");
  getterMap.put("rowWritingMethod","getRowWritingMethod");
  getterMap.put("forceFormulaRecalculation","isForceFormulaRecalculation");
  getterMap.put("leaveExistingStylesUnchanged","isLeaveExistingStylesUnchanged");
  getterMap.put("appendLines","isAppendLines");
  getterMap.put("add_to_result_filenames","isAddToResultFiles");
  getterMap.put("name","getFileName");
  getterMap.put("extention","getExtension");
  getterMap.put("do_not_open_newfile_init","isDoNotOpenNewFileInit");
  getterMap.put("split","getSplitEvery");
  getterMap.put("add_date","isDateInFilename");
  getterMap.put("add_time","isTimeInFilename");
  getterMap.put("SpecifyFormat","isSpecifyFormat");
  getterMap.put("date_time_format","getDateTimeFormat");
  getterMap.put("sheetname","getSheetname");
  getterMap.put("autosizecolums","isAutoSizeColums");
  getterMap.put("stream_data","isStreamingData");
  getterMap.put("protect_sheet","isSheetProtected");
  getterMap.put("password","getPassword");
  getterMap.put("protected_by","getProtectedBy");
  getterMap.put("splitevery","getSplitEvery");
  getterMap.put("if_file_exists","getIfFileExists");
  getterMap.put("if_sheet_exists","getIfSheetExists");
  getterMap.put("enabled","isTemplateEnabled");
  getterMap.put("sheet_enabled","isTemplateSheetEnabled");
  getterMap.put("filename","getTemplateFileName");
  getterMap.put("sheetname","getTemplateSheetName");
  getterMap.put("outputfields","getOutputFields");
  Map<String,String> setterMap=new HashMap<String,String>();
  setterMap.put("header","setHeaderEnabled");
  setterMap.put("footer","setFooterEnabled");
  setterMap.put("makeSheetActive","setMakeSheetActive");
  setterMap.put("rowWritingMethod","setRowWritingMethod");
  setterMap.put("startingCell","setStartingCell");
  setterMap.put("appendOmitHeader","setAppendOmitHeader");
  setterMap.put("appendOffset","setAppendOffset");
  setterMap.put("appendEmpty","setAppendEmpty");
  setterMap.put("rowWritingMethod","setRowWritingMethod");
  setterMap.put("forceFormulaRecalculation","setForceFormulaRecalculation");
  setterMap.put("leaveExistingStylesUnchanged","setLeaveExistingStylesUnchanged");
  setterMap.put("appendLines","setAppendLines");
  setterMap.put("add_to_result_filenames","setAddToResultFiles");
  setterMap.put("name","setFileName");
  setterMap.put("extention","setExtension");
  setterMap.put("do_not_open_newfile_init","setDoNotOpenNewFileInit");
  setterMap.put("split","setSplitEvery");
  setterMap.put("add_date","setDateInFilename");
  setterMap.put("add_time","setTimeInFilename");
  setterMap.put("SpecifyFormat","setSpecifyFormat");
  setterMap.put("date_time_format","setDateTimeFormat");
  setterMap.put("sheetname","setSheetname");
  setterMap.put("autosizecolums","setAutoSizeColums");
  setterMap.put("stream_data","setStreamingData");
  setterMap.put("protect_sheet","setProtectSheet");
  setterMap.put("password","setPassword");
  setterMap.put("protected_by","setProtectedBy");
  setterMap.put("splitevery","setSplitEvery");
  setterMap.put("if_file_exists","setIfFileExists");
  setterMap.put("if_sheet_exists","setIfSheetExists");
  setterMap.put("enabled","setTemplateEnabled");
  setterMap.put("sheet_enabled","setTemplateSheetEnabled");
  setterMap.put("filename","setTemplateFileName");
  setterMap.put("sheetname","setTemplateSheetName");
  setterMap.put("outputfields","setOutputFields");
  Map<String,FieldLoadSaveValidator<?>> fieldLoadSaveValidatorTypeMap=new HashMap<String,FieldLoadSaveValidator<?>>();
  fieldLoadSaveValidatorTypeMap.put(ExcelWriterStepField[].class.getCanonicalName(),new ArrayLoadSaveValidator<ExcelWriterStepField>(new ExcelWriterStepFieldLoadSaveValidator()));
  LoadSaveTester loadSaveTester=new LoadSaveTester(ExcelWriterStepMeta.class,attributes,getterMap,setterMap,new HashMap<String,FieldLoadSaveValidator<?>>(),fieldLoadSaveValidatorTypeMap);
  loadSaveTester.testRepoRoundTrip();
  loadSaveTester.testXmlRoundTrip();
}
