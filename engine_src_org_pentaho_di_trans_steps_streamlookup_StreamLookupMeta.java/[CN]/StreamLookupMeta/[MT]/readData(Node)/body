{
  try {
    String dtype;
    int nrkeys, nrvalues;
    String lookupFromStepname=XMLHandler.getTagValue(stepnode,"from");
    StreamInterface infoStream=getStepIOMeta().getInfoStreams().get(0);
    infoStream.setSubject(lookupFromStepname);
    inputSorted="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"input_sorted"));
    memoryPreservationActive="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"preserve_memory"));
    usingSortedList="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"sorted_list"));
    usingIntegerPair="Y".equalsIgnoreCase(XMLHandler.getTagValue(stepnode,"integer_pair"));
    Node lookup=XMLHandler.getSubNode(stepnode,"lookup");
    nrkeys=XMLHandler.countNodes(lookup,"key");
    nrvalues=XMLHandler.countNodes(lookup,"value");
    allocate(nrkeys,nrvalues);
    for (int i=0; i < nrkeys; i++) {
      Node knode=XMLHandler.getSubNodeByNr(lookup,"key",i);
      keystream[i]=XMLHandler.getTagValue(knode,"name");
      keylookup[i]=XMLHandler.getTagValue(knode,"field");
    }
    for (int i=0; i < nrvalues; i++) {
      Node vnode=XMLHandler.getSubNodeByNr(lookup,"value",i);
      value[i]=XMLHandler.getTagValue(vnode,"name");
      valueName[i]=XMLHandler.getTagValue(vnode,"rename");
      if (valueName[i] == null) {
        valueName[i]=value[i];
      }
      valueDefault[i]=XMLHandler.getTagValue(vnode,"default");
      dtype=XMLHandler.getTagValue(vnode,"type");
      valueDefaultType[i]=ValueMeta.getType(dtype);
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException(BaseMessages.getString(PKG,"StreamLookupMeta.Exception.UnableToLoadStepInfoFromXML"),e);
  }
}
