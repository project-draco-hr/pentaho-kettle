{
  log.logDebug(toString(),"Duplicate table: " + name);
  TableMeta tinfo=null, tableinfo=null, look=null;
  for (int i=0; i < schema.nrTables() && tableinfo == null; i++) {
    look=schema.getTable(i);
    if (look.getName().equalsIgnoreCase(name)) {
      tableinfo=look;
    }
  }
  if (tableinfo != null) {
    tinfo=(TableMeta)tableinfo.clone();
    if (tinfo != null) {
      String newname=tableinfo.getName() + " (copy)";
      int nr=2;
      while (schema.findTable(newname) != null) {
        newname=tableinfo.getName() + " (copy " + nr+ ")";
        nr++;
      }
      tinfo.setName(newname);
      tinfo.setSelected(false);
      Point loc=tinfo.getLocation();
      tinfo.setLocation(loc.x + 20,loc.y + 20);
      schema.addTable(tinfo);
      addUndoNew(new TableMeta[]{(TableMeta)tinfo.clone()},new int[]{schema.indexOfTable(tinfo)});
      refreshTree();
      refreshGraph();
    }
  }
}
