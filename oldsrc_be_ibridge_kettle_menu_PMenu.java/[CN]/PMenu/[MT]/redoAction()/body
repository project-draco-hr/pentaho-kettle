{
  pmenugraph.forceFocus();
  TransAction ta=schema.nextUndo();
  if (ta == null)   return;
  setUndoMenu();
switch (ta.getType()) {
case TransAction.TYPE_ACTION_NEW_TABLE:
{
      TableMeta ti=(TableMeta)ta.getCurrent()[0];
      int idx=ta.getCurrentIndex()[0];
      schema.addTable(idx,ti);
      refreshTree();
      refreshGraph();
    }
  break;
case TransAction.TYPE_ACTION_NEW_CONNECTION:
{
  DatabaseMeta ci=(DatabaseMeta)ta.getCurrent()[0];
  int idx=ta.getCurrentIndex()[0];
  schema.addConnection(idx,ci);
  refreshTree();
  refreshGraph();
}
break;
case TransAction.TYPE_ACTION_NEW_NOTE:
{
NotePadMeta ni=(NotePadMeta)ta.getCurrent()[0];
int idx=ta.getCurrentIndex()[0];
schema.addNote(idx,ni);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_NEW_RELATIONSHIP:
{
RelationshipMeta ri=(RelationshipMeta)ta.getCurrent()[0];
int idx=ta.getCurrentIndex()[0];
schema.addRelationship(idx,ri);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_DELETE_TABLE:
{
int idx=ta.getCurrentIndex()[0];
schema.removeTable(idx);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_DELETE_CONNECTION:
{
int idx=ta.getCurrentIndex()[0];
schema.removeConnection(idx);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_DELETE_NOTE:
{
int idx=ta.getCurrentIndex()[0];
schema.removeNote(idx);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_DELETE_RELATIONSHIP:
{
int idx=ta.getCurrentIndex()[0];
schema.removeRelationship(idx);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_CHANGE_TABLE:
{
TableMeta ri=(TableMeta)ta.getCurrent()[0];
int idx=ta.getCurrentIndex()[0];
schema.removeTable(idx);
schema.addTable(idx,ri);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_CHANGE_CONNECTION:
{
DatabaseMeta ci=(DatabaseMeta)ta.getCurrent()[0];
int idx=ta.getCurrentIndex()[0];
schema.removeConnection(idx);
schema.addConnection(idx,ci);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_CHANGE_NOTE:
{
NotePadMeta ni=(NotePadMeta)ta.getCurrent()[0];
int idx=ta.getCurrentIndex()[0];
schema.removeNote(idx);
schema.addNote(idx,ni);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_CHANGE_RELATIONSHIP:
{
RelationshipMeta ri=(RelationshipMeta)ta.getCurrent()[0];
int idx=ta.getCurrentIndex()[0];
schema.removeRelationship(idx);
schema.addRelationship(idx,ri);
refreshTree();
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_POSITION_TABLE:
{
int idx[]=ta.getCurrentIndex();
Point p[]=ta.getCurrentLocation();
for (int i=0; i < p.length; i++) {
TableMeta tableinfo=schema.getTable(idx[i]);
tableinfo.setLocation(p[i]);
}
refreshGraph();
}
break;
case TransAction.TYPE_ACTION_POSITION_NOTE:
{
int idx=ta.getCurrentIndex()[0];
NotePadMeta npi=schema.getNote(idx);
Point curr=ta.getCurrentLocation()[0];
npi.setLocation(curr);
refreshGraph();
}
break;
default :
break;
}
}
