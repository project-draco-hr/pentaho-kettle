{
  try {
    rep.saveDatabaseMetaStepAttribute(idTransformation,idStep,"connection",this.databaseMeta);
    rep.saveStepAttribute(idTransformation,idStep,"modelName",this.modelName);
    rep.saveStepAttribute(idTransformation,idStep,"readBatchSize",this.commitBatchSize);
    rep.saveStepAttribute(idTransformation,idStep,"outputIDField",this.outputIDField);
    rep.saveStepAttribute(idTransformation,idStep,"outputIDFieldName",this.outputIDFieldName);
    for (int i=0; i < modelFields.length; i++) {
      rep.saveStepAttribute(idTransformation,idStep,i,"model_field",modelFields[i]);
      rep.saveStepAttribute(idTransformation,idStep,i,"stream_field",streamFields[i]);
    }
    for (int i=0; i < keyLookups.size(); i++) {
      rep.saveStepAttribute(idTransformation,idStep,i,"model_key_field",keyLookups.get(i)[0]);
      rep.saveStepAttribute(idTransformation,idStep,i,"comparitor",keyLookups.get(i)[1]);
      rep.saveStepAttribute(idTransformation,idStep,i,"stream_key_field",keyLookups.get(i)[2]);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for idStep=" + idStep,e);
  }
}
