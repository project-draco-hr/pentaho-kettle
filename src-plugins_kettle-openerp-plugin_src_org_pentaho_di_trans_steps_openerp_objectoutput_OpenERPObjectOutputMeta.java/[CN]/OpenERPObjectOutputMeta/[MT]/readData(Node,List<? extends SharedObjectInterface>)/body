{
  try {
    this.databaseMeta=DatabaseMeta.findDatabase(databases,XMLHandler.getTagValue(stepnode,"connection"));
    this.modelName=XMLHandler.getTagValue(stepnode,"modelName");
    this.commitBatchSize=Integer.parseInt(XMLHandler.getTagValue(stepnode,"readBatchSize"));
    Node mappings=XMLHandler.getSubNode(stepnode,"mappings");
    int nrLevels=XMLHandler.countNodes(mappings,"mapping");
    allocate(nrLevels);
    for (int i=0; i < nrLevels; i++) {
      Node fnode=XMLHandler.getSubNodeByNr(mappings,"mapping",i);
      modelFields[i]=XMLHandler.getTagValue(fnode,"model_field");
      streamFields[i]=XMLHandler.getTagValue(fnode,"stream_field");
    }
    Node keyMappings=XMLHandler.getSubNode(stepnode,"key_mappings");
    nrLevels=XMLHandler.countNodes(keyMappings,"key_map");
    keyLookups.clear();
    for (int i=0; i < nrLevels; i++) {
      String[] key_maps=new String[3];
      Node fnode=XMLHandler.getSubNodeByNr(keyMappings,"key_map",i);
      key_maps[0]=XMLHandler.getTagValue(fnode,"model_key_field");
      key_maps[1]=XMLHandler.getTagValue(fnode,"comparitor");
      key_maps[2]=XMLHandler.getTagValue(fnode,"stream_key_field");
      keyLookups.add(key_maps);
    }
  }
 catch (  Exception e) {
    throw new KettleXMLException("Unable to load step info from XML",e);
  }
}
