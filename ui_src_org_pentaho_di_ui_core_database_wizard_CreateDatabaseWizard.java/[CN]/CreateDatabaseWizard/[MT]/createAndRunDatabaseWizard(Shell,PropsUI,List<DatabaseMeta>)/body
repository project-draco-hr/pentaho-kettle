{
  DatabaseMeta newDBInfo=new DatabaseMeta();
  final CreateDatabaseWizardPage1 page1=new CreateDatabaseWizardPage1("1",props,newDBInfo,databases);
  final CreateDatabaseWizardPageInformix pageifx=new CreateDatabaseWizardPageInformix("ifx",props,newDBInfo);
  final CreateDatabaseWizardPageJDBC pagejdbc=new CreateDatabaseWizardPageJDBC("jdbc",props,newDBInfo);
  final CreateDatabaseWizardPageOCI pageoci=new CreateDatabaseWizardPageOCI("oci",props,newDBInfo);
  final CreateDatabaseWizardPageODBC pageodbc=new CreateDatabaseWizardPageODBC("odbc",props,newDBInfo);
  final CreateDatabaseWizardPageOracle pageoracle=new CreateDatabaseWizardPageOracle("oracle",props,newDBInfo);
  final CreateDatabaseWizardPageGeneric pageGeneric=new CreateDatabaseWizardPageGeneric("generic",props,newDBInfo);
  final CreateDatabaseWizardPage2 page2=new CreateDatabaseWizardPage2("2",props,newDBInfo);
  for (  PluginInterface pluginInterface : PluginRegistry.getInstance().getPlugins(DatabasePluginType.class)) {
    try {
      Object plugin=PluginRegistry.getInstance().loadClass(pluginInterface);
      if (plugin instanceof WizardPageFactory) {
        WizardPageFactory factory=(WizardPageFactory)plugin;
        additionalPages.add(factory.createWizardPage(props,newDBInfo));
      }
    }
 catch (    KettlePluginException kpe) {
    }
  }
  wizardFinished=false;
  Wizard wizard=new Wizard(){
    /** 
 * @see org.eclipse.jface.wizard.Wizard#performFinish()
 */
    public boolean performFinish(){
      wizardFinished=true;
      return true;
    }
    /** 
 * @see org.eclipse.jface.wizard.Wizard#canFinish()
 */
    public boolean canFinish(){
      return page2.canFinish();
    }
  }
;
  wizard.addPage(page1);
  wizard.addPage(pageoci);
  wizard.addPage(pageodbc);
  wizard.addPage(pagejdbc);
  wizard.addPage(pageoracle);
  wizard.addPage(pageifx);
  wizard.addPage(pageGeneric);
  for (  WizardPage page : additionalPages) {
    wizard.addPage(page);
  }
  wizard.addPage(page2);
  WizardDialog wd=new WizardDialog(shell,wizard);
  WizardDialog.setDefaultImage(GUIResource.getInstance().getImageWizard());
  wd.setMinimumPageSize(700,400);
  wd.updateSize();
  wd.open();
  if (!wizardFinished) {
    newDBInfo=null;
  }
  return newDBInfo;
}
