{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"id_connection",database == null ? -1 : database.getID());
    rep.saveStepAttribute(id_transformation,id_step,"commit",commitSize);
    rep.saveStepAttribute(id_transformation,id_step,"table",tableName);
    rep.saveStepAttribute(id_transformation,id_step,"error_ignored",errorIgnored);
    rep.saveStepAttribute(id_transformation,id_step,"ignore_flag_field",ignoreFlagField);
    for (int i=0; i < keyStream.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"key_name",keyStream[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"key_field",keyLookup[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"key_condition",keyCondition[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"key_name2",keyStream2[i]);
    }
    for (int i=0; i < updateLookup.length; i++) {
      rep.saveStepAttribute(id_transformation,id_step,i,"value_name",updateLookup[i]);
      rep.saveStepAttribute(id_transformation,id_step,i,"value_rename",updateStream[i]);
    }
    if (database != null)     rep.insertStepDatabase(id_transformation,id_step,database.getID());
  }
 catch (  Exception e) {
    throw new KettleException(Messages.getString("UpdateMeta.Exception.UnableToSaveStepInfoToRepository") + id_step,e);
  }
}
