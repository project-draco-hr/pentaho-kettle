{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX| SWT.MIN);
  props.setLook(shell);
  setShellImage(shell,input);
  ModifyListener lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  changed=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(Messages.getString("XsdValidatorDialog.Shell.Title"));
  int middle=props.getMiddlePct();
  int margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(Messages.getString("XsdValidatorDialog.Stepname.Label"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  wTabFolder=new CTabFolder(shell,SWT.BORDER);
  props.setLook(wTabFolder,Props.WIDGET_STYLE_TAB);
  wGeneralTab=new CTabItem(wTabFolder,SWT.NONE);
  wGeneralTab.setText(Messages.getString("XsdValidatorDialog.GeneralTab.TabTitle"));
  wGeneralComp=new Composite(wTabFolder,SWT.NONE);
  props.setLook(wGeneralComp);
  FormLayout generalLayout=new FormLayout();
  generalLayout.marginWidth=3;
  generalLayout.marginHeight=3;
  wGeneralComp.setLayout(generalLayout);
  wXML=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wXML);
  wXML.setText("XML source");
  FormLayout groupXML=new FormLayout();
  groupXML.marginWidth=10;
  groupXML.marginHeight=10;
  wXML.setLayout(groupXML);
  wlXMLSourceFile=new Label(wXML,SWT.RIGHT);
  wlXMLSourceFile.setText(Messages.getString("XsdValidatorDialog.XMLSourceFile.Label"));
  props.setLook(wlXMLSourceFile);
  fdlXMLSourceFile=new FormData();
  fdlXMLSourceFile.left=new FormAttachment(0,0);
  fdlXMLSourceFile.top=new FormAttachment(wStepname,2 * margin);
  fdlXMLSourceFile.right=new FormAttachment(middle,-margin);
  wlXMLSourceFile.setLayoutData(fdlXMLSourceFile);
  wXMLSourceFile=new Button(wXML,SWT.CHECK);
  props.setLook(wXMLSourceFile);
  wXMLSourceFile.setToolTipText(Messages.getString("XsdValidatorDialog.XMLSourceFile.Tooltip"));
  fdXMLSourceFile=new FormData();
  fdXMLSourceFile.left=new FormAttachment(middle,margin);
  fdXMLSourceFile.top=new FormAttachment(wStepname,2 * margin);
  wXMLSourceFile.setLayoutData(fdXMLSourceFile);
  wlXMLStream=new Label(wXML,SWT.RIGHT);
  wlXMLStream.setText(Messages.getString("XsdValidatorDialog.XMLStream.Label"));
  props.setLook(wlXMLStream);
  fdlXMLStream=new FormData();
  fdlXMLStream.left=new FormAttachment(0,0);
  fdlXMLStream.top=new FormAttachment(wXMLSourceFile,margin);
  fdlXMLStream.right=new FormAttachment(middle,-margin);
  wlXMLStream.setLayoutData(fdlXMLStream);
  wXMLStream=new CCombo(wXML,SWT.BORDER | SWT.READ_ONLY);
  wXMLStream.setEditable(true);
  props.setLook(wXMLStream);
  wXMLStream.addModifyListener(lsMod);
  fdXMLStream=new FormData();
  fdXMLStream.left=new FormAttachment(middle,margin);
  fdXMLStream.top=new FormAttachment(wXMLSourceFile,margin);
  fdXMLStream.right=new FormAttachment(100,-margin);
  wXMLStream.setLayoutData(fdXMLStream);
  wXMLStream.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      PopulateFields(wXMLStream);
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdXML=new FormData();
  fdXML.left=new FormAttachment(0,margin);
  fdXML.top=new FormAttachment(wStepname,margin);
  fdXML.right=new FormAttachment(100,-margin);
  wXML.setLayoutData(fdXML);
  wOutputFields=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wOutputFields);
  wOutputFields.setText("Output Fields");
  FormLayout groupLayout=new FormLayout();
  groupLayout.marginWidth=10;
  groupLayout.marginHeight=10;
  wOutputFields.setLayout(groupLayout);
  wResultField=new LabelTextVar(transMeta,wOutputFields,Messages.getString("XsdValidatorDialog.ResultField.Label"),Messages.getString("XsdValidatorDialog.ResultField.Tooltip"));
  props.setLook(wResultField);
  wResultField.addModifyListener(lsMod);
  fdResultField=new FormData();
  fdResultField.left=new FormAttachment(0,0);
  fdResultField.top=new FormAttachment(wXML,margin);
  fdResultField.right=new FormAttachment(100,0);
  wResultField.setLayoutData(fdResultField);
  wlOutputStringField=new Label(wOutputFields,SWT.RIGHT);
  wlOutputStringField.setText(Messages.getString("XsdValidatorDialog.OutputStringField.Label"));
  props.setLook(wlOutputStringField);
  fdlOutputStringField=new FormData();
  fdlOutputStringField.left=new FormAttachment(0,0);
  fdlOutputStringField.top=new FormAttachment(wResultField,2 * margin);
  fdlOutputStringField.right=new FormAttachment(middle,-margin);
  wlOutputStringField.setLayoutData(fdlOutputStringField);
  wOutputStringField=new Button(wOutputFields,SWT.CHECK);
  props.setLook(wOutputStringField);
  wOutputStringField.setToolTipText(Messages.getString("XsdValidatorDialog.OutputStringField.Tooltip"));
  fdOutputStringField=new FormData();
  fdOutputStringField.left=new FormAttachment(middle,margin);
  fdOutputStringField.top=new FormAttachment(wResultField,2 * margin);
  wOutputStringField.setLayoutData(fdOutputStringField);
  wOutputStringField.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeOutputStringField();
    }
  }
);
  wIfXMLValid=new LabelTextVar(transMeta,wOutputFields,Messages.getString("XsdValidatorDialog.IfXMLValid.Label"),Messages.getString("XsdValidatorDialog.IfXMLValid.Tooltip"));
  props.setLook(wIfXMLValid);
  wIfXMLValid.addModifyListener(lsMod);
  fdIfXMLValid=new FormData();
  fdIfXMLValid.left=new FormAttachment(0,0);
  fdIfXMLValid.top=new FormAttachment(wOutputStringField,margin);
  fdIfXMLValid.right=new FormAttachment(100,0);
  wIfXMLValid.setLayoutData(fdIfXMLValid);
  wIfXMLUnValid=new LabelTextVar(transMeta,wOutputFields,Messages.getString("XsdValidatorDialog.IfXMLUnValid.Label"),Messages.getString("XsdValidatorDialog.IfXMLUnValid.Tooltip"));
  props.setLook(wIfXMLUnValid);
  wIfXMLUnValid.addModifyListener(lsMod);
  fdIfXMLUnValid=new FormData();
  fdIfXMLUnValid.left=new FormAttachment(0,0);
  fdIfXMLUnValid.top=new FormAttachment(wIfXMLValid,margin);
  fdIfXMLUnValid.right=new FormAttachment(100,0);
  wIfXMLUnValid.setLayoutData(fdIfXMLUnValid);
  wlAddValidationMsg=new Label(wOutputFields,SWT.RIGHT);
  wlAddValidationMsg.setText(Messages.getString("XsdValidatorDialog.AddValidationMsg.Label"));
  props.setLook(wlAddValidationMsg);
  fdlAddValidationMsg=new FormData();
  fdlAddValidationMsg.left=new FormAttachment(0,0);
  fdlAddValidationMsg.top=new FormAttachment(wIfXMLUnValid,2 * margin);
  fdlAddValidationMsg.right=new FormAttachment(middle,-margin);
  wlAddValidationMsg.setLayoutData(fdlAddValidationMsg);
  wAddValidationMsg=new Button(wOutputFields,SWT.CHECK);
  props.setLook(wAddValidationMsg);
  wAddValidationMsg.setToolTipText(Messages.getString("XsdValidatorDialog.AddValidationMsg.Tooltip"));
  fdAddValidationMsg=new FormData();
  fdAddValidationMsg.left=new FormAttachment(middle,margin);
  fdAddValidationMsg.top=new FormAttachment(wIfXMLUnValid,2 * margin);
  wAddValidationMsg.setLayoutData(fdAddValidationMsg);
  wAddValidationMsg.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      activeValidationMsg();
    }
  }
);
  wValidationMsg=new LabelTextVar(transMeta,wOutputFields,Messages.getString("XsdValidatorDialog.ValidationMsg.Label"),Messages.getString("XsdValidatorDialog.ValidationMsg.Tooltip"));
  props.setLook(wValidationMsg);
  wValidationMsg.addModifyListener(lsMod);
  fdValidationMsg=new FormData();
  fdValidationMsg.left=new FormAttachment(0,0);
  fdValidationMsg.top=new FormAttachment(wAddValidationMsg,margin);
  fdValidationMsg.right=new FormAttachment(100,0);
  wValidationMsg.setLayoutData(fdValidationMsg);
  fdOutputFields=new FormData();
  fdOutputFields.left=new FormAttachment(0,margin);
  fdOutputFields.top=new FormAttachment(wXML,margin);
  fdOutputFields.right=new FormAttachment(100,-margin);
  wOutputFields.setLayoutData(fdOutputFields);
  wXSD=new Group(wGeneralComp,SWT.SHADOW_NONE);
  props.setLook(wXSD);
  wXSD.setText("XML Schema Definition");
  FormLayout groupXSD=new FormLayout();
  groupXSD.marginWidth=10;
  groupXSD.marginHeight=10;
  wXSD.setLayout(groupLayout);
  wlXSDSource=new Label(wXSD,SWT.RIGHT);
  wlXSDSource.setText(Messages.getString("XsdValidatorDialog.XSDSource.Label"));
  props.setLook(wlXSDSource);
  fdlXSDSource=new FormData();
  fdlXSDSource.left=new FormAttachment(0,0);
  fdlXSDSource.top=new FormAttachment(wStepname,margin);
  fdlXSDSource.right=new FormAttachment(middle,-margin);
  wlXSDSource.setLayoutData(fdlXSDSource);
  wXSDSource=new CCombo(wXSD,SWT.BORDER | SWT.READ_ONLY);
  wXSDSource.setEditable(true);
  props.setLook(wXSDSource);
  wXSDSource.addModifyListener(lsMod);
  fdXSDSource=new FormData();
  fdXSDSource.left=new FormAttachment(middle,margin);
  fdXSDSource.top=new FormAttachment(wStepname,margin);
  fdXSDSource.right=new FormAttachment(100,-margin);
  wXSDSource.setLayoutData(fdXSDSource);
  wXSDSource.add(Messages.getString("XsdValidatorDialog.XSDSource.IS_A_FILE"));
  wXSDSource.add(Messages.getString("XsdValidatorDialog.XSDSource.IS_A_FIELD"));
  wXSDSource.add(Messages.getString("XsdValidatorDialog.XSDSource.NO_NEED"));
  wXSDSource.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      setXSDSource();
    }
  }
);
  wlFilename=new Label(wXSD,SWT.RIGHT);
  wlFilename.setText(Messages.getString("XsdValidatorDialog.XSDFilename.Label"));
  props.setLook(wlFilename);
  fdlFilename=new FormData();
  fdlFilename.left=new FormAttachment(0,0);
  fdlFilename.top=new FormAttachment(wXSDSource,margin);
  fdlFilename.right=new FormAttachment(middle,-margin);
  wlFilename.setLayoutData(fdlFilename);
  wbbFilename=new Button(wXSD,SWT.PUSH | SWT.CENTER);
  props.setLook(wbbFilename);
  wbbFilename.setText(Messages.getString("XsdValidatorDialog.FilenameBrowse.Button"));
  wbbFilename.setToolTipText(Messages.getString("System.Tooltip.BrowseForFileOrDirAndAdd"));
  fdbFilename=new FormData();
  fdbFilename.right=new FormAttachment(100,0);
  fdbFilename.top=new FormAttachment(wXSDSource,margin);
  wbbFilename.setLayoutData(fdbFilename);
  wFilename=new TextVar(transMeta,wXSD,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  props.setLook(wFilename);
  wFilename.addModifyListener(lsMod);
  fdFilename=new FormData();
  fdFilename.left=new FormAttachment(middle,margin);
  fdFilename.right=new FormAttachment(wbbFilename,-margin);
  fdFilename.top=new FormAttachment(wXSDSource,margin);
  wFilename.setLayoutData(fdFilename);
  wlXSDDefinedColumn=new Label(wXSD,SWT.RIGHT);
  wlXSDDefinedColumn.setText(Messages.getString("XsdValidatorDialog.XSDDefinedColumn.Label"));
  props.setLook(wlXSDDefinedColumn);
  fdlXSDDefinedColumn=new FormData();
  fdlXSDDefinedColumn.left=new FormAttachment(0,0);
  fdlXSDDefinedColumn.top=new FormAttachment(wFilename,2 * margin);
  fdlXSDDefinedColumn.right=new FormAttachment(middle,-margin);
  wlXSDDefinedColumn.setLayoutData(fdlXSDDefinedColumn);
  wXSDDefinedColumn=new CCombo(wXSD,SWT.BORDER | SWT.READ_ONLY);
  wXSDDefinedColumn.setEditable(true);
  props.setLook(wXSDDefinedColumn);
  wXSDDefinedColumn.addModifyListener(lsMod);
  fdXSDDefinedColumn=new FormData();
  fdXSDDefinedColumn.left=new FormAttachment(middle,margin);
  fdXSDDefinedColumn.top=new FormAttachment(wFilename,2 * margin);
  fdXSDDefinedColumn.right=new FormAttachment(100,-margin);
  wXSDDefinedColumn.setLayoutData(fdXSDDefinedColumn);
  wXSDDefinedColumn.addFocusListener(new FocusListener(){
    public void focusLost(    org.eclipse.swt.events.FocusEvent e){
    }
    public void focusGained(    org.eclipse.swt.events.FocusEvent e){
      Cursor busy=new Cursor(shell.getDisplay(),SWT.CURSOR_WAIT);
      shell.setCursor(busy);
      PopulateFields(wXSDDefinedColumn);
      shell.setCursor(null);
      busy.dispose();
    }
  }
);
  fdXSD=new FormData();
  fdXSD.left=new FormAttachment(0,margin);
  fdXSD.top=new FormAttachment(wOutputFields,margin);
  fdXSD.right=new FormAttachment(100,-margin);
  wXSD.setLayoutData(fdXSD);
  fdGeneralComp=new FormData();
  fdGeneralComp.left=new FormAttachment(0,0);
  fdGeneralComp.top=new FormAttachment(0,0);
  fdGeneralComp.right=new FormAttachment(100,0);
  fdGeneralComp.bottom=new FormAttachment(100,0);
  wGeneralComp.setLayoutData(fdGeneralComp);
  wGeneralComp.layout();
  wGeneralTab.setControl(wGeneralComp);
  props.setLook(wGeneralComp);
  fdTabFolder=new FormData();
  fdTabFolder.left=new FormAttachment(0,0);
  fdTabFolder.top=new FormAttachment(wStepname,margin);
  fdTabFolder.right=new FormAttachment(100,0);
  fdTabFolder.bottom=new FormAttachment(100,-50);
  wTabFolder.setLayoutData(fdTabFolder);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(Messages.getString("System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(Messages.getString("System.Button.Cancel"));
  setButtonPositions(new Button[]{wOK,wCancel},margin,wTabFolder);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wFilename.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      wFilename.setToolTipText(transMeta.environmentSubstitute(wFilename.getText()));
    }
  }
);
  wbbFilename.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      dialog.setFilterExtensions(new String[]{"*xsd;*.XSD","*"});
      if (wFilename.getText() != null) {
        String fname=transMeta.environmentSubstitute(wFilename.getText());
        dialog.setFileName(fname);
      }
      dialog.setFilterNames(new String[]{Messages.getString("XsdValidatorDialog.FileType"),Messages.getString("System.FileType.AllFiles")});
      if (dialog.open() != null) {
        String str=dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName();
        wFilename.setText(str);
      }
    }
  }
);
  wTabFolder.setSelection(0);
  setSize();
  getData();
  activeValidationMsg();
  activeOutputStringField();
  setXSDSource();
  input.setChanged(changed);
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch())     display.sleep();
  }
  return stepname;
}
