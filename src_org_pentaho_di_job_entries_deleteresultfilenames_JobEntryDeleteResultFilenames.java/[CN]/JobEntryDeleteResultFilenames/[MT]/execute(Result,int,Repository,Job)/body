{
  LogWriter log=LogWriter.getInstance();
  Result result=previousResult;
  result.setResult(false);
  if (previousResult != null) {
    try {
      int size=previousResult.getResultFiles().size();
      if (log.isBasic())       log.logBasic(toString(),BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.log.FilesFound","" + size));
      if (!specifywildcard) {
        previousResult.getResultFiles().clear();
        if (log.isDetailed())         log.logDetailed(toString(),BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.log.DeletedFiles","" + size));
      }
 else {
        List<ResultFile> resultFiles=result.getResultFilesList();
        if (resultFiles != null && resultFiles.size() > 0) {
          for (Iterator<ResultFile> it=resultFiles.iterator(); it.hasNext() && !parentJob.isStopped(); ) {
            ResultFile resultFile=(ResultFile)it.next();
            FileObject file=resultFile.getFile();
            if (file != null && file.exists()) {
              if (CheckFileWildcard(file.getName().getBaseName(),environmentSubstitute(wildcard),true) && !CheckFileWildcard(file.getName().getBaseName(),environmentSubstitute(wildcardexclude),false)) {
                result.getResultFiles().remove(resultFile.getFile().toString());
                if (log.isDetailed())                 log.logDetailed(toString(),BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.log.DeletedFile",file.toString()));
              }
            }
          }
        }
      }
      result.setResult(true);
    }
 catch (    Exception e) {
      log.logError(toString(),BaseMessages.getString(PKG,"JobEntryDeleteResultFilenames.Error",e.toString()));
    }
  }
  return result;
}
