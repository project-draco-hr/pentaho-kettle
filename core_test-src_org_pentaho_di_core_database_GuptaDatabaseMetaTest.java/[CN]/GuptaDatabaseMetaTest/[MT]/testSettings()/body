{
  assertArrayEquals(new int[]{DatabaseMeta.TYPE_ACCESS_NATIVE,DatabaseMeta.TYPE_ACCESS_ODBC,DatabaseMeta.TYPE_ACCESS_JNDI},nativeMeta.getAccessTypeList());
  assertEquals(2155,nativeMeta.getDefaultDatabasePort());
  assertEquals(-1,odbcMeta.getDefaultDatabasePort());
  assertFalse(nativeMeta.supportsAutoInc());
  assertEquals("jdbc.gupta.sqlbase.SqlbaseDriver",nativeMeta.getDriverClass());
  assertEquals("sun.jdbc.odbc.JdbcOdbcDriver",odbcMeta.getDriverClass());
  assertEquals("jdbc:odbc:FOO",odbcMeta.getURL("IGNORED","IGNORED","FOO"));
  assertEquals("jdbc:sqlbase://FOO:BAR/WIBBLE",nativeMeta.getURL("FOO","BAR","WIBBLE"));
  assertEquals("jdbc:sqlbase://FOO:/WIBBLE",nativeMeta.getURL("FOO","","WIBBLE"));
  assertFalse(nativeMeta.isFetchSizeSupported());
  assertFalse(nativeMeta.supportsBitmapIndex());
  assertFalse(nativeMeta.supportsSynonyms());
  assertFalse(nativeMeta.supportsCatalogs());
  assertFalse(nativeMeta.supportsTimeStampToDateConversion());
  assertEquals(0,nativeMeta.getNotFoundTK(true));
  assertEquals(0,nativeMeta.getNotFoundTK(false));
  assertArrayEquals(new String[]{"SQLBaseJDBC.jar"},nativeMeta.getUsedLibraries());
  assertTrue(nativeMeta.isSystemTable("SYSFOO"));
  assertFalse(nativeMeta.isSystemTable("SySBAR"));
  assertFalse(nativeMeta.isSystemTable("BARSYS"));
  assertFalse(nativeMeta.supportsPreparedStatementMetadataRetrieval());
}
