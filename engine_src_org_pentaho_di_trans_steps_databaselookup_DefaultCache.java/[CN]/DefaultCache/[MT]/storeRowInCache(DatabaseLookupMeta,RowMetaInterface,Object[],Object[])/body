{
  RowMetaAndData rowMetaAndData=new RowMetaAndData(lookupMeta,lookupRow);
  map.put(rowMetaAndData,new TimedRow(add));
  if (!meta.isLoadingAllDataInCache() && meta.getCacheSize() > 0 && map.size() > meta.getCacheSize()) {
    List<RowMetaAndData> keys=new ArrayList<RowMetaAndData>(map.keySet());
    List<Date> samples=new ArrayList<Date>();
    int incr=keys.size() / 10;
    if (incr == 0) {
      incr=1;
    }
    for (int k=0; k < keys.size(); k+=incr) {
      RowMetaAndData key=keys.get(k);
      TimedRow timedRow=map.get(key);
      samples.add(timedRow.getLogDate());
    }
    Collections.sort(samples);
    if (samples.size() > 1) {
      Date smallest=samples.get(1);
      for (      RowMetaAndData key : keys) {
        TimedRow timedRow=map.get(key);
        if (timedRow.getLogDate().compareTo(smallest) < 0) {
          map.remove(key);
        }
      }
    }
  }
}
