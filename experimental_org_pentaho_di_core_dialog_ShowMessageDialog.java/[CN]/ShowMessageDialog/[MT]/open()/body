{
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM);
  props.setLook(shell);
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(title);
  int margin=Const.MARGIN;
  boolean hasIcon=(flags & SWT.ICON_WARNING) != 0 || (flags & SWT.ICON_INFORMATION) != 0 || (flags & SWT.ICON_QUESTION) != 0 || (flags & SWT.ICON_ERROR) != 0 || (flags & SWT.ICON_WORKING) != 0;
  Image image=null;
  if ((flags & SWT.ICON_WARNING) != 0)   image=display.getSystemImage(SWT.ICON_WARNING);
  if ((flags & SWT.ICON_INFORMATION) != 0)   image=display.getSystemImage(SWT.ICON_INFORMATION);
  if ((flags & SWT.ICON_QUESTION) != 0)   image=display.getSystemImage(SWT.ICON_QUESTION);
  if ((flags & SWT.ICON_ERROR) != 0)   image=display.getSystemImage(SWT.ICON_ERROR);
  if ((flags & SWT.ICON_WORKING) != 0)   image=display.getSystemImage(SWT.ICON_WORKING);
  hasIcon=hasIcon && image != null;
  Label wIcon=null;
  if (hasIcon && image != null) {
    wIcon=new Label(shell,SWT.NONE);
    props.setLook(wIcon);
    wIcon.setImage(image);
    FormData fdIcon=new FormData();
    fdIcon.left=new FormAttachment(0,0);
    fdIcon.top=new FormAttachment(0,0);
    fdIcon.right=new FormAttachment(0,image.getBounds().width);
    fdIcon.bottom=new FormAttachment(0,image.getBounds().height);
    wIcon.setLayoutData(fdIcon);
  }
  Label wlDesc=new Label(shell,SWT.NONE);
  wlDesc.setText(message);
  props.setLook(wlDesc);
  FormData fdlDesc=new FormData();
  if (hasIcon) {
    fdlDesc.left=new FormAttachment(wIcon,margin * 2);
    fdlDesc.top=new FormAttachment(0,margin);
  }
 else {
    fdlDesc.left=new FormAttachment(0,0);
    fdlDesc.top=new FormAttachment(0,margin);
  }
  fdlDesc.right=new FormAttachment(100,0);
  wlDesc.setLayoutData(fdlDesc);
  buttons=new ArrayList();
  adapters=new ArrayList();
  if ((flags & SWT.OK) != 0) {
    Button button=new Button(shell,SWT.PUSH);
    final String ok=Messages.getString("System.Button.OK");
    button.setText(ok);
    SelectionAdapter selectionAdapter=new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent event){
        quit(SWT.OK);
      }
    }
;
    button.addSelectionListener(selectionAdapter);
    adapters.add(selectionAdapter);
    buttons.add(button);
  }
  if ((flags & SWT.CANCEL) != 0) {
    Button button=new Button(shell,SWT.PUSH);
    button.setText(Messages.getString("System.Button.Cancel"));
    SelectionAdapter selectionAdapter=new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent event){
        quit(SWT.CANCEL);
      }
    }
;
    button.addSelectionListener(selectionAdapter);
    adapters.add(selectionAdapter);
    buttons.add(button);
  }
  if ((flags & SWT.YES) != 0) {
    Button button=new Button(shell,SWT.PUSH);
    button.setText(Messages.getString("System.Button.Yes"));
    SelectionAdapter selectionAdapter=new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent event){
        quit(SWT.YES);
      }
    }
;
    button.addSelectionListener(selectionAdapter);
    adapters.add(selectionAdapter);
    buttons.add(button);
  }
  if ((flags & SWT.NO) != 0) {
    Button button=new Button(shell,SWT.PUSH);
    button.setText(Messages.getString("System.Button.No"));
    SelectionAdapter selectionAdapter=new SelectionAdapter(){
      public void widgetSelected(      SelectionEvent event){
        quit(SWT.NO);
      }
    }
;
    button.addSelectionListener(selectionAdapter);
    adapters.add(selectionAdapter);
    buttons.add(button);
  }
  BaseStepDialog.positionBottomButtons(shell,(Button[])buttons.toArray(new Button[buttons.size()]),margin,wlDesc);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  shell.layout();
  shell.pack(true);
  final Button button=(Button)buttons.get(0);
  final SelectionAdapter selectionAdapter=(SelectionAdapter)adapters.get(0);
  final String ok=button.getText();
  long startTime=new Date().getTime();
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
      if (timeOut > 0) {
        long time=new Date().getTime();
        long diff=(time - startTime) / 1000;
        button.setText(ok + " (" + (timeOut - diff)+ ")");
        if (diff >= timeOut) {
          selectionAdapter.widgetSelected(null);
        }
      }
    }
  }
  return returnValue;
}
