{
  super(log,MailConnectionMeta.PROTOCOL_IMAP,"junit",0,"junit","junit",false,false,"junit");
  store=Mockito.mock(Store.class);
  inbox=Mockito.mock(Folder.class);
  a=Mockito.mock(Folder.class);
  b=Mockito.mock(Folder.class);
  c=Mockito.mock(Folder.class);
  when(a.getFullName()).thenReturn("A");
  when(b.getFullName()).thenReturn("B");
  when(c.getFullName()).thenReturn("C");
  when(a.exists()).thenReturn(true);
  when(b.exists()).thenReturn(true);
  when(c.exists()).thenReturn(cCreated);
  when(c.create(Mockito.anyInt())).thenAnswer(new Answer<Boolean>(){
    @Override public Boolean answer(    InvocationOnMock invocation) throws Throwable {
      Object arg0=invocation.getArguments()[0];
      mode=Integer.class.cast(arg0);
      cCreated=true;
      return true;
    }
  }
);
  when(inbox.getFolder("a")).thenReturn(a);
  when(a.getFolder("b")).thenReturn(b);
  when(b.getFolder("c")).thenReturn(c);
  when(store.getDefaultFolder()).thenReturn(inbox);
}
