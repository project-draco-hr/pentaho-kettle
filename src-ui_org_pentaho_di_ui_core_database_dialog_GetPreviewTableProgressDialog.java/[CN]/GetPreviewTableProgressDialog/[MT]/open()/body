{
  IRunnableWithProgress op=new IRunnableWithProgress(){
    public void run(    IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
      db=new Database(dbMeta);
      try {
        db.connect();
        rows=db.getFirstRows(tableName,limit,monitor);
        rowMeta=db.getReturnRowMeta();
        if (monitor.isCanceled())         throw new InvocationTargetException(new Exception("This operation was cancelled!"));
      }
 catch (      KettleException e) {
        throw new InvocationTargetException(e,"Couldn't find any rows because of an error :" + e.toString());
      }
 finally {
        db.disconnect();
      }
    }
  }
;
  try {
    final ProgressMonitorDialog pmd=new ProgressMonitorDialog(shell);
    Runnable run=new Runnable(){
      public void run(){
        IProgressMonitor monitor=pmd.getProgressMonitor();
        while (pmd.getShell() == null || (!pmd.getShell().isDisposed() && !monitor.isCanceled())) {
          try {
            Thread.sleep(100);
          }
 catch (          InterruptedException e) {
          }
          ;
        }
        if (monitor.isCanceled()) {
          try {
            db.cancelQuery();
          }
 catch (          Exception e) {
          }
          ;
        }
      }
    }
;
    new Thread(run).start();
    pmd.run(true,true,op);
  }
 catch (  InvocationTargetException e) {
    showErrorDialog(e);
    return null;
  }
catch (  InterruptedException e) {
    showErrorDialog(e);
    return null;
  }
  return rows;
}
