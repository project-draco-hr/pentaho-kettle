{
  try {
    ValueMetaInterface parameterValueMeta=new ValueMetaString("parameter");
    ValueMetaInterface valueMetaA=createValueMeta("data_A",valueMetaInterfaceType);
    ValueMetaInterface valueMetaB=createValueMeta("data_B",valueMetaInterfaceType);
    ValueMetaInterface valueMetaC=createValueMeta("data_C",valueMetaInterfaceType);
    Object dataA=null;
    Object dataB=null;
    Object dataC=null;
    if (valueMetaInterfaceType == ValueMetaInterface.TYPE_NUMBER) {
      dataA=(!Utils.isEmpty(string_dataA) ? Double.valueOf(string_dataA) : null);
      dataB=(!Utils.isEmpty(string_dataB) ? Double.valueOf(string_dataB) : null);
      dataC=(!Utils.isEmpty(string_dataC) ? Double.valueOf(string_dataC) : null);
    }
 else     if (valueMetaInterfaceType == ValueMetaInterface.TYPE_INTEGER) {
      dataA=(!Utils.isEmpty(string_dataA) ? Long.valueOf(string_dataA) : null);
      dataB=(!Utils.isEmpty(string_dataB) ? Long.valueOf(string_dataB) : null);
      dataC=(!Utils.isEmpty(string_dataC) ? Long.valueOf(string_dataC) : null);
    }
 else     if (valueMetaInterfaceType == ValueMetaInterface.TYPE_DATE) {
      SimpleDateFormat simpleDateFormat=new SimpleDateFormat(yyyy_MM_dd);
      try {
        dataA=(!Utils.isEmpty(string_dataA) ? simpleDateFormat.parse(string_dataA) : null);
        dataB=(!Utils.isEmpty(string_dataB) ? simpleDateFormat.parse(string_dataB) : null);
        dataC=(!Utils.isEmpty(string_dataC) ? simpleDateFormat.parse(string_dataC) : null);
      }
 catch (      ParseException pe) {
        fail(pe.getMessage());
        return null;
      }
    }
 else     if (valueMetaInterfaceType == ValueMetaInterface.TYPE_BIGNUMBER) {
      dataA=(!Utils.isEmpty(string_dataA) ? BigDecimal.valueOf(Double.valueOf(string_dataA)) : null);
      dataB=(!Utils.isEmpty(string_dataB) ? BigDecimal.valueOf(Double.valueOf(string_dataB)) : null);
      dataC=(!Utils.isEmpty(string_dataC) ? BigDecimal.valueOf(Double.valueOf(string_dataC)) : null);
    }
 else     if (valueMetaInterfaceType == ValueMetaInterface.TYPE_STRING) {
      dataA=(!Utils.isEmpty(string_dataA) ? string_dataA : null);
      dataB=(!Utils.isEmpty(string_dataB) ? string_dataB : null);
      dataC=(!Utils.isEmpty(string_dataC) ? string_dataC : null);
    }
 else     if (valueMetaInterfaceType == ValueMetaInterface.TYPE_BINARY) {
      ValueMetaInterface binaryValueMeta=new ValueMetaBinary("binary_data");
      dataA=(!Utils.isEmpty(string_dataA) ? binaryValueMeta.convertData(parameterValueMeta,string_dataA) : null);
      dataB=(!Utils.isEmpty(string_dataB) ? binaryValueMeta.convertData(parameterValueMeta,string_dataB) : null);
      dataC=(!Utils.isEmpty(string_dataC) ? binaryValueMeta.convertData(parameterValueMeta,string_dataC) : null);
    }
 else     if (valueMetaInterfaceType == ValueMetaInterface.TYPE_BOOLEAN) {
      if (!Utils.isEmpty(string_dataA)) {
        dataA=(string_dataA.equalsIgnoreCase("true") ? true : false);
      }
 else {
        dataA=null;
      }
      if (!Utils.isEmpty(string_dataB)) {
        dataB=(string_dataB.equalsIgnoreCase("true") ? true : false);
      }
 else {
        dataB=null;
      }
      if (!Utils.isEmpty(string_dataC)) {
        dataC=(string_dataC.equalsIgnoreCase("true") ? true : false);
      }
 else {
        dataC=null;
      }
    }
 else {
      fail("Invalid ValueMetaInterface type.");
      return null;
    }
    if (calculatorMetaFunction == CalculatorMetaFunction.CALC_ADD) {
      return ValueDataUtil.plus(valueMetaA,dataA,valueMetaB,dataB);
    }
    if (calculatorMetaFunction == CalculatorMetaFunction.CALC_ADD3) {
      return ValueDataUtil.plus3(valueMetaA,dataA,valueMetaB,dataB,valueMetaC,dataC);
    }
    if (calculatorMetaFunction == CalculatorMetaFunction.CALC_SUBTRACT) {
      return ValueDataUtil.minus(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_DIVIDE) {
      return ValueDataUtil.divide(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_PERCENT_1) {
      return ValueDataUtil.percent1(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_PERCENT_2) {
      return ValueDataUtil.percent2(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_PERCENT_3) {
      return ValueDataUtil.percent3(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_COMBINATION_1) {
      return ValueDataUtil.combination1(valueMetaA,dataA,valueMetaB,dataB,valueMetaC,dataC);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_COMBINATION_2) {
      return ValueDataUtil.combination2(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_ROUND_1) {
      return ValueDataUtil.round(valueMetaA,dataA);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_ROUND_2) {
      return ValueDataUtil.round(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_NVL) {
      return ValueDataUtil.nvl(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_DATE_DIFF) {
      return ValueDataUtil.DateDiff(valueMetaA,dataA,valueMetaB,dataB,"");
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_DATE_WORKING_DIFF) {
      return ValueDataUtil.DateWorkingDiff(valueMetaA,dataA,valueMetaB,dataB);
    }
 else     if (calculatorMetaFunction == CalculatorMetaFunction.CALC_REMAINDER) {
      return ValueDataUtil.remainder(valueMetaA,dataA,valueMetaB,dataB);
    }
 else {
      fail("Invalid CalculatorMetaFunction specified.");
      return null;
    }
  }
 catch (  KettleValueException kve) {
    fail(kve.getMessage());
    return null;
  }
}
