{
  assertEquals(Double.valueOf("3.0"),calculate("1","2",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Double.valueOf("0.0"),calculate("2","-2",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Double.valueOf("30.0"),calculate("10","20",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Double.valueOf("-50.0"),calculate("-100","50",ValueMetaInterface.TYPE_NUMBER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Long.valueOf("3"),calculate("1","2",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Long.valueOf("0"),calculate("2","-2",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Long.valueOf("30"),calculate("10","20",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(Long.valueOf("-50"),calculate("-100","50",ValueMetaInterface.TYPE_INTEGER,CalculatorMetaFunction.CALC_ADD));
  assertEquals(0,new BigDecimal("2.0").compareTo((BigDecimal)calculate("1","1",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_ADD)));
  assertEquals(0,new BigDecimal("0.0").compareTo((BigDecimal)calculate("2","-2",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_ADD)));
  assertEquals(0,new BigDecimal("30.0").compareTo((BigDecimal)calculate("10","20",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_ADD)));
  assertEquals(0,new BigDecimal("-50.0").compareTo((BigDecimal)calculate("-100","50",ValueMetaInterface.TYPE_BIGNUMBER,CalculatorMetaFunction.CALC_ADD)));
}
