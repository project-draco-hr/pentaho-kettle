{
  jobEntry.setName(wName.getText());
  jobEntry.setMoveEmptyFolders(wMoveEmptyFolders.getSelection());
  jobEntry.setoverwrite_files(wOverwriteFiles.getSelection());
  jobEntry.setIncludeSubfolders(wIncludeSubfolders.getSelection());
  jobEntry.setArgFromPrevious(wPrevious.getSelection());
  jobEntry.setAddresultfilesname(wAddFileToResult.getSelection());
  jobEntry.setDestinationIsAFile(wDestinationIsAFile.getSelection());
  jobEntry.setCreateDestinationFolder(wCreateDestinationFolder.getSelection());
  jobEntry.setDoNotProcessRest(wDoNotProcessRest.getSelection());
  jobEntry.setNrErrorsLessThan(wNrErrorsLessThan.getText());
  if (wSuccessCondition.getSelectionIndex() == 1)   jobEntry.setSuccessCondition("success_when_errors_less_than");
 else   jobEntry.setSuccessCondition("success_when_all_works_fine");
  jobEntry.setAddDate(wAddDate.getSelection());
  jobEntry.setAddTime(wAddTime.getSelection());
  jobEntry.setSpecifyFormat(wSpecifyFormat.getSelection());
  jobEntry.setDateTimeFormat(wDateTimeFormat.getText());
  jobEntry.setAddDateBeforeExtension(wAddDateBeforeExtension.getSelection());
  int nritems=wFields.nrNonEmpty();
  int nr=0;
  for (int i=0; i < nritems; i++) {
    String arg=wFields.getNonEmpty(i).getText(1);
    if (arg != null && arg.length() != 0)     nr++;
  }
  jobEntry.source_filefolder=new String[nr];
  jobEntry.destination_filefolder=new String[nr];
  jobEntry.wildcard=new String[nr];
  nr=0;
  for (int i=0; i < nritems; i++) {
    String source=wFields.getNonEmpty(i).getText(1);
    String dest=wFields.getNonEmpty(i).getText(2);
    String wild=wFields.getNonEmpty(i).getText(3);
    if (source != null && source.length() != 0) {
      jobEntry.source_filefolder[nr]=source;
      jobEntry.destination_filefolder[nr]=dest;
      jobEntry.wildcard[nr]=wild;
      nr++;
    }
  }
  dispose();
}
