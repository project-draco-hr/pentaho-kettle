{
  stepname=wStepname.getText();
  meta.setGaProfileName(wGaProfile.getText());
  meta.setGaAppName(wGaAppName.getText());
  meta.setOauthServiceAccount(wOauthAccount.getText());
  meta.setOAuthKeyFile(keyFilename.getText());
  if (!Const.isEmpty(wGaProfile.getText())) {
    meta.setGaProfileTableId(profileTableIds.get(wGaProfile.getText()));
  }
 else {
    meta.setGaProfileTableId(null);
  }
  meta.setUseCustomTableId(wCustomProfileEnabled.getSelection());
  meta.setGaCustomTableId(wGaCustomProfile.getText());
  meta.setSegmentName(Const.isEmpty(wQuSegment.getText()) ? "All Visits" : wQuSegment.getText());
  if (!Const.isEmpty(wQuSegment.getText())) {
    meta.setSegmentId(segmentIds.get(wQuSegment.getText()));
  }
 else {
    meta.setSegmentId("gaid::-1");
  }
  meta.setStartDate(wQuStartDate.getText());
  meta.setEndDate(wQuEndDate.getText());
  meta.setDimensions(wQuDimensions.getText());
  meta.setMetrics(wQuMetrics.getText());
  meta.setFilters(wQuFilters.getText());
  meta.setSort(wQuSort.getText());
  meta.setUseSegment(wUseSegmentEnabled.getSelection());
  meta.setUseCustomSegment(wCustomSegmentEnabled.getSelection());
  meta.setCustomSegment(wQuCustomSegment.getText());
  int nrFields=getTableView().nrNonEmpty();
  meta.allocate(nrFields);
  for (int i=0; i < nrFields; i++) {
    TableItem item=getTableView().getNonEmpty(i);
    meta.getFeedFieldType()[i]=item.getText(1);
    meta.getFeedField()[i]=item.getText(2);
    meta.getOutputField()[i]=item.getText(3);
    meta.getOutputType()[i]=ValueMetaBase.getType(item.getText(4));
    meta.getConversionMask()[i]=item.getText(5);
    if (meta.getOutputType()[i] < 0) {
      meta.getOutputType()[i]=ValueMetaInterface.TYPE_STRING;
    }
  }
  meta.setRowLimit(Const.toInt(wLimit.getText(),0));
}
