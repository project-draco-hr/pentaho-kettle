{
  Shell parent=getParent();
  Display display=parent.getDisplay();
  shell=new Shell(parent,SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN| SWT.MAX);
  props.setLook(shell);
  setShellImage(shell,input);
  lsMod=new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      input.setChanged();
    }
  }
;
  backupChanged=input.hasChanged();
  FormLayout formLayout=new FormLayout();
  formLayout.marginWidth=Const.FORM_MARGIN;
  formLayout.marginHeight=Const.FORM_MARGIN;
  shell.setLayout(formLayout);
  shell.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Shell.Title"));
  middle=props.getMiddlePct();
  margin=Const.MARGIN;
  wlStepname=new Label(shell,SWT.RIGHT);
  wlStepname.setText(BaseMessages.getString(PKG,"System.Label.StepName"));
  props.setLook(wlStepname);
  fdlStepname=new FormData();
  fdlStepname.left=new FormAttachment(0,0);
  fdlStepname.right=new FormAttachment(middle,-margin);
  fdlStepname.top=new FormAttachment(0,margin);
  wlStepname.setLayoutData(fdlStepname);
  wStepname=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wStepname.setText(stepname);
  props.setLook(wStepname);
  wStepname.addModifyListener(lsMod);
  fdStepname=new FormData();
  fdStepname.left=new FormAttachment(middle,0);
  fdStepname.top=new FormAttachment(0,margin);
  fdStepname.right=new FormAttachment(100,0);
  wStepname.setLayoutData(fdStepname);
  gConnect=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gConnect.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.ConnectGroup.Label"));
  FormLayout gConnectLayout=new FormLayout();
  gConnectLayout.marginWidth=3;
  gConnectLayout.marginHeight=3;
  gConnect.setLayout(gConnectLayout);
  props.setLook(gConnect);
  FormData fdConnect=new FormData();
  fdConnect.left=new FormAttachment(0,0);
  fdConnect.right=new FormAttachment(100,0);
  fdConnect.top=new FormAttachment(wStepname,margin);
  gConnect.setLayoutData(fdConnect);
  wlGaAppName=new Label(gConnect,SWT.RIGHT);
  wlGaAppName.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.AppName.Label"));
  props.setLook(wlGaAppName);
  FormData fdlGaAppName=new FormData();
  fdlGaAppName.top=new FormAttachment(0,margin);
  fdlGaAppName.left=new FormAttachment(0,0);
  fdlGaAppName.right=new FormAttachment(middle,-margin);
  wlGaAppName.setLayoutData(fdlGaAppName);
  wGaAppName=new TextVar(transMeta,gConnect,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wGaAppName.addModifyListener(lsMod);
  wGaAppName.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.AppName.Tooltip"));
  props.setLook(wGaAppName);
  FormData fdGaAppName=new FormData();
  fdGaAppName.top=new FormAttachment(wStepname,margin);
  fdGaAppName.left=new FormAttachment(middle,0);
  fdGaAppName.right=new FormAttachment(100,0);
  wGaAppName.setLayoutData(fdGaAppName);
  createOauthServiceCredentialsControls();
  wlGaCustomProfile=new Label(gConnect,SWT.RIGHT);
  wlGaCustomProfile.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Profile.CustomProfileEnabled.Label"));
  props.setLook(wlGaCustomProfile);
  FormData fdlGaCustomProfile=new FormData();
  fdlGaCustomProfile.top=new FormAttachment(keyFilename,margin);
  fdlGaCustomProfile.left=new FormAttachment(0,0);
  fdlGaCustomProfile.right=new FormAttachment(middle,-margin);
  wlGaCustomProfile.setLayoutData(fdlGaCustomProfile);
  wCustomProfileEnabled=new Button(gConnect,SWT.CHECK);
  props.setLook(wCustomProfileEnabled);
  wCustomProfileEnabled.pack(true);
  FormData fdCustomProfileEnabled=new FormData();
  fdCustomProfileEnabled.left=new FormAttachment(middle,0);
  fdCustomProfileEnabled.top=new FormAttachment(keyFilename,margin);
  wCustomProfileEnabled.setLayoutData(fdCustomProfileEnabled);
  wCustomProfileEnabled.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setActive();
      if (wCustomProfileEnabled.getSelection()) {
        wGaCustomProfile.setFocus();
      }
 else {
        wGaProfile.setFocus();
      }
    }
  }
);
  wGaCustomProfile=new TextVar(transMeta,gConnect,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wGaCustomProfile.addModifyListener(lsMod);
  wGaCustomProfile.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Profile.CustomProfile.Tooltip"));
  props.setLook(wGaCustomProfile);
  wGaCustomProfileReference=new Link(gConnect,SWT.SINGLE);
  wGaCustomProfileReference.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Reference.Label"));
  props.setLook(wGaCustomProfileReference);
  wGaCustomProfileReference.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_TABLE_ID_URI);
    }
  }
);
  wGaCustomProfileReference.pack(true);
  FormData fdGaCustomProfile=new FormData();
  fdGaCustomProfile.top=new FormAttachment(keyFilename,margin);
  fdGaCustomProfile.left=new FormAttachment(wCustomProfileEnabled,margin);
  fdGaCustomProfile.right=new FormAttachment(100,-wGaCustomProfileReference.getBounds().width - margin);
  wGaCustomProfile.setLayoutData(fdGaCustomProfile);
  FormData fdGaCustomProfileReference=new FormData();
  fdGaCustomProfileReference.top=new FormAttachment(keyFilename,margin);
  fdGaCustomProfileReference.left=new FormAttachment(wGaCustomProfile,0);
  fdGaCustomProfileReference.right=new FormAttachment(100,0);
  wGaCustomProfileReference.setLayoutData(fdGaCustomProfileReference);
  wlGaProfile=new Label(gConnect,SWT.RIGHT);
  wlGaProfile.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Profile.Label"));
  props.setLook(wlGaProfile);
  FormData fdlGaProfile=new FormData();
  fdlGaProfile.top=new FormAttachment(wGaCustomProfile,margin);
  fdlGaProfile.left=new FormAttachment(0,0);
  fdlGaProfile.right=new FormAttachment(middle,-margin);
  wlGaProfile.setLayoutData(fdlGaProfile);
  wGaProfile=new CCombo(gConnect,SWT.LEFT | SWT.BORDER | SWT.SINGLE| SWT.READ_ONLY);
  props.setLook(wGaProfile);
  wGaProfile.addModifyListener(lsMod);
  wGaProfile.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Profile.Tooltip"));
  wGetProfiles=new Button(gConnect,SWT.PUSH);
  wGetProfiles.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Profile.GetProfilesButton.Label"));
  wGetProfiles.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Profile.GetProfilesButton.Tooltip"));
  props.setLook(wGetProfiles);
  wGetProfiles.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      shell.getDisplay().asyncExec(new Runnable(){
        @Override public void run(){
          readGaProfiles();
        }
      }
);
    }
  }
);
  wGetProfiles.pack(true);
  FormData fdGaProfile=new FormData();
  fdGaProfile.left=new FormAttachment(middle,0);
  fdGaProfile.top=new FormAttachment(wGaCustomProfile,margin);
  fdGaProfile.right=new FormAttachment(100,-wGetProfiles.getBounds().width - margin);
  wGaProfile.setLayoutData(fdGaProfile);
  FormData fdGetProfiles=new FormData();
  fdGetProfiles.left=new FormAttachment(wGaProfile,0);
  fdGetProfiles.top=new FormAttachment(wGaCustomProfile,margin);
  fdGetProfiles.right=new FormAttachment(100,0);
  wGetProfiles.setLayoutData(fdGetProfiles);
  Group gQuery=new Group(shell,SWT.SHADOW_ETCHED_IN);
  gQuery.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.QueryGroup.Label"));
  FormLayout gQueryLayout=new FormLayout();
  gQueryLayout.marginWidth=3;
  gQueryLayout.marginHeight=3;
  gQuery.setLayout(gQueryLayout);
  props.setLook(gQuery);
  wlQuStartDate=new Label(gQuery,SWT.RIGHT);
  wlQuStartDate.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.StartDate.Label"));
  props.setLook(wlQuStartDate);
  FormData fdlQuStartDate=new FormData();
  fdlQuStartDate.top=new FormAttachment(0,margin);
  fdlQuStartDate.left=new FormAttachment(0,0);
  fdlQuStartDate.right=new FormAttachment(middle,-margin);
  wlQuStartDate.setLayoutData(fdlQuStartDate);
  wQuStartDate=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuStartDate.addModifyListener(lsMod);
  wQuStartDate.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.StartDate.Tooltip"));
  props.setLook(wQuStartDate);
  FormData fdQuStartDate=new FormData();
  fdQuStartDate.top=new FormAttachment(0,margin);
  fdQuStartDate.left=new FormAttachment(middle,0);
  fdQuStartDate.right=new FormAttachment(100,0);
  wQuStartDate.setLayoutData(fdQuStartDate);
  wlQuEndDate=new Label(gQuery,SWT.RIGHT);
  wlQuEndDate.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.EndDate.Label"));
  props.setLook(wlQuEndDate);
  FormData fdlQuEndDate=new FormData();
  fdlQuEndDate.top=new FormAttachment(wQuStartDate,margin);
  fdlQuEndDate.left=new FormAttachment(0,0);
  fdlQuEndDate.right=new FormAttachment(middle,-margin);
  wlQuEndDate.setLayoutData(fdlQuEndDate);
  wQuEndDate=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuEndDate.addModifyListener(lsMod);
  wQuEndDate.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.EndDate.Tooltip"));
  props.setLook(wQuEndDate);
  FormData fdQuEndDate=new FormData();
  fdQuEndDate.top=new FormAttachment(wQuStartDate,margin);
  fdQuEndDate.left=new FormAttachment(middle,0);
  fdQuEndDate.right=new FormAttachment(100,0);
  wQuEndDate.setLayoutData(fdQuEndDate);
  wlQuDimensions=new Label(gQuery,SWT.RIGHT);
  wlQuDimensions.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Dimensions.Label"));
  props.setLook(wlQuDimensions);
  FormData fdlQuDimensions=new FormData();
  fdlQuDimensions.top=new FormAttachment(wQuEndDate,margin);
  fdlQuDimensions.left=new FormAttachment(0,0);
  fdlQuDimensions.right=new FormAttachment(middle,-margin);
  wlQuDimensions.setLayoutData(fdlQuDimensions);
  wQuDimensions=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuDimensions.addModifyListener(lsMod);
  wQuDimensions.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Dimensions.Tooltip"));
  props.setLook(wQuDimensions);
  wQuDimensionsReference=new Link(gQuery,SWT.SINGLE);
  wQuDimensionsReference.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Reference.Label"));
  props.setLook(wQuDimensionsReference);
  wQuDimensionsReference.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_DIMENSIONS_URI);
    }
  }
);
  wQuDimensionsReference.pack(true);
  FormData fdQuDimensions=new FormData();
  fdQuDimensions.top=new FormAttachment(wQuEndDate,margin);
  fdQuDimensions.left=new FormAttachment(middle,0);
  fdQuDimensions.right=new FormAttachment(100,-wQuDimensionsReference.getBounds().width - margin);
  wQuDimensions.setLayoutData(fdQuDimensions);
  FormData fdQuDimensionsReference=new FormData();
  fdQuDimensionsReference.top=new FormAttachment(wQuEndDate,margin);
  fdQuDimensionsReference.left=new FormAttachment(wQuDimensions,0);
  fdQuDimensionsReference.right=new FormAttachment(100,0);
  wQuDimensionsReference.setLayoutData(fdQuDimensionsReference);
  wlQuMetrics=new Label(gQuery,SWT.RIGHT);
  wlQuMetrics.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Metrics.Label"));
  props.setLook(wlQuMetrics);
  FormData fdlQuMetrics=new FormData();
  fdlQuMetrics.top=new FormAttachment(wQuDimensions,margin);
  fdlQuMetrics.left=new FormAttachment(0,0);
  fdlQuMetrics.right=new FormAttachment(middle,-margin);
  wlQuMetrics.setLayoutData(fdlQuMetrics);
  wQuMetrics=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuMetrics.addModifyListener(lsMod);
  wQuMetrics.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Metrics.Tooltip"));
  props.setLook(wQuMetrics);
  wQuMetricsReference=new Link(gQuery,SWT.SINGLE);
  wQuMetricsReference.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Reference.Label"));
  props.setLook(wQuMetricsReference);
  wQuMetricsReference.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_METRICS_URI);
    }
  }
);
  wQuMetricsReference.pack(true);
  FormData fdQuMetrics=new FormData();
  fdQuMetrics.top=new FormAttachment(wQuDimensions,margin);
  fdQuMetrics.left=new FormAttachment(middle,0);
  fdQuMetrics.right=new FormAttachment(100,-wQuMetricsReference.getBounds().width - margin);
  wQuMetrics.setLayoutData(fdQuMetrics);
  FormData fdQuMetricsReference=new FormData();
  fdQuMetricsReference.top=new FormAttachment(wQuDimensions,margin);
  fdQuMetricsReference.left=new FormAttachment(wQuMetrics,0);
  fdQuMetricsReference.right=new FormAttachment(100,0);
  wQuMetricsReference.setLayoutData(fdQuMetricsReference);
  wlQuFilters=new Label(gQuery,SWT.RIGHT);
  wlQuFilters.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Filters.Label"));
  props.setLook(wlQuFilters);
  FormData fdlQuFilters=new FormData();
  fdlQuFilters.top=new FormAttachment(wQuMetrics,margin);
  fdlQuFilters.left=new FormAttachment(0,0);
  fdlQuFilters.right=new FormAttachment(middle,-margin);
  wlQuFilters.setLayoutData(fdlQuFilters);
  wQuFilters=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuFilters.addModifyListener(lsMod);
  wQuFilters.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Filters.Tooltip"));
  props.setLook(wQuFilters);
  wQuFiltersReference=new Link(gQuery,SWT.SINGLE);
  wQuFiltersReference.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Reference.Label"));
  props.setLook(wQuFiltersReference);
  wQuFiltersReference.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_FILTERS_URI);
    }
  }
);
  wQuFiltersReference.pack(true);
  FormData fdQuFilters=new FormData();
  fdQuFilters.top=new FormAttachment(wQuMetrics,margin);
  fdQuFilters.left=new FormAttachment(middle,0);
  fdQuFilters.right=new FormAttachment(100,-wQuFiltersReference.getBounds().width - margin);
  wQuFilters.setLayoutData(fdQuFilters);
  FormData fdQuFiltersReference=new FormData();
  fdQuFiltersReference.top=new FormAttachment(wQuMetrics,margin);
  fdQuFiltersReference.left=new FormAttachment(wQuFilters,0);
  fdQuFiltersReference.right=new FormAttachment(100,0);
  wQuFiltersReference.setLayoutData(fdQuFiltersReference);
  wlQuSort=new Label(gQuery,SWT.RIGHT);
  wlQuSort.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Sort.Label"));
  props.setLook(wlQuSort);
  FormData fdlQuSort=new FormData();
  fdlQuSort.top=new FormAttachment(wQuFilters,margin);
  fdlQuSort.left=new FormAttachment(0,0);
  fdlQuSort.right=new FormAttachment(middle,-margin);
  wlQuSort.setLayoutData(fdlQuSort);
  wQuSort=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuSort.addModifyListener(lsMod);
  wQuSort.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Sort.Tooltip"));
  props.setLook(wQuSort);
  wQuSortReference=new Link(gQuery,SWT.SINGLE);
  wQuSortReference.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Reference.Label"));
  props.setLook(wQuSortReference);
  wQuSortReference.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_SORT_URI);
    }
  }
);
  wQuSortReference.pack(true);
  FormData fdQuSort=new FormData();
  fdQuSort.top=new FormAttachment(wQuFilters,margin);
  fdQuSort.left=new FormAttachment(middle,0);
  fdQuSort.right=new FormAttachment(100,-wQuSortReference.getBounds().width - margin);
  wQuSort.setLayoutData(fdQuSort);
  FormData fdQuSortReference=new FormData();
  fdQuSortReference.top=new FormAttachment(wQuFilters,margin);
  fdQuSortReference.left=new FormAttachment(wQuSort,0);
  fdQuSortReference.right=new FormAttachment(100,0);
  wQuSortReference.setLayoutData(fdQuSortReference);
  wlQuUseSegment=new Label(gQuery,SWT.RIGHT);
  wlQuUseSegment.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.UseSegment.Label"));
  props.setLook(wlQuUseSegment);
  FormData fdlQuUseSegment=new FormData();
  fdlQuUseSegment.top=new FormAttachment(wQuSort,margin);
  fdlQuUseSegment.left=new FormAttachment(0,0);
  fdlQuUseSegment.right=new FormAttachment(middle,-margin);
  wlQuUseSegment.setLayoutData(fdlQuUseSegment);
  wUseSegmentEnabled=new Button(gQuery,SWT.CHECK);
  props.setLook(wUseSegmentEnabled);
  wUseSegmentEnabled.pack(true);
  FormData fdUseSegmentEnabled=new FormData();
  fdUseSegmentEnabled.left=new FormAttachment(middle,0);
  fdUseSegmentEnabled.top=new FormAttachment(wQuSort,margin);
  wUseSegmentEnabled.setLayoutData(fdUseSegmentEnabled);
  wUseSegmentEnabled.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setActive();
      if (wUseSegmentEnabled.getSelection()) {
        if (wCustomSegmentEnabled.getSelection()) {
          wQuCustomSegment.setFocus();
        }
 else {
          wQuSegment.setFocus();
        }
      }
    }
  }
);
  wlQuCustomSegment=new Label(gQuery,SWT.RIGHT);
  wlQuCustomSegment.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.CustomSegment.Label"));
  props.setLook(wlQuCustomSegment);
  FormData fdlQuCustomSegment=new FormData();
  fdlQuCustomSegment.top=new FormAttachment(wUseSegmentEnabled,margin);
  fdlQuCustomSegment.left=new FormAttachment(0,0);
  fdlQuCustomSegment.right=new FormAttachment(middle,-margin);
  wlQuCustomSegment.setLayoutData(fdlQuCustomSegment);
  wCustomSegmentEnabled=new Button(gQuery,SWT.CHECK);
  props.setLook(wCustomSegmentEnabled);
  wCustomSegmentEnabled.pack(true);
  FormData fdCustomSegmentEnabled=new FormData();
  fdCustomSegmentEnabled.left=new FormAttachment(middle,0);
  fdCustomSegmentEnabled.top=new FormAttachment(wUseSegmentEnabled,margin);
  wCustomSegmentEnabled.setLayoutData(fdCustomSegmentEnabled);
  wCustomSegmentEnabled.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      input.setChanged();
      setActive();
      if (wCustomSegmentEnabled.getSelection()) {
        wQuCustomSegment.setFocus();
      }
 else {
        wQuSegment.setFocus();
      }
    }
  }
);
  wQuCustomSegment=new TextVar(transMeta,gQuery,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wQuCustomSegment.addModifyListener(lsMod);
  wQuCustomSegment.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.CustomSegment.Tooltip"));
  props.setLook(wQuCustomSegment);
  wQuCustomSegmentReference=new Link(gQuery,SWT.SINGLE);
  wQuCustomSegmentReference.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Reference.Label"));
  props.setLook(wQuCustomSegmentReference);
  wQuCustomSegmentReference.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_SEGMENT_URI);
    }
  }
);
  wQuCustomSegmentReference.pack(true);
  FormData fdQuCustomSegment=new FormData();
  fdQuCustomSegment.top=new FormAttachment(wUseSegmentEnabled,margin);
  fdQuCustomSegment.left=new FormAttachment(wCustomSegmentEnabled,margin);
  fdQuCustomSegment.right=new FormAttachment(100,-wQuCustomSegmentReference.getBounds().width - margin);
  wQuCustomSegment.setLayoutData(fdQuCustomSegment);
  FormData fdQuCustomSegmentReference=new FormData();
  fdQuCustomSegmentReference.top=new FormAttachment(wUseSegmentEnabled,margin);
  fdQuCustomSegmentReference.left=new FormAttachment(wQuCustomSegment,0);
  fdQuCustomSegmentReference.right=new FormAttachment(100,0);
  wQuCustomSegmentReference.setLayoutData(fdQuCustomSegmentReference);
  wlQuSegment=new Label(gQuery,SWT.RIGHT);
  wlQuSegment.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Segment.Label"));
  props.setLook(wlQuSegment);
  FormData fdlQuSegment=new FormData();
  fdlQuSegment.top=new FormAttachment(wQuCustomSegment,margin);
  fdlQuSegment.left=new FormAttachment(0,0);
  fdlQuSegment.right=new FormAttachment(middle,-margin);
  wlQuSegment.setLayoutData(fdlQuSegment);
  wQuSegment=new CCombo(gQuery,SWT.LEFT | SWT.BORDER | SWT.SINGLE| SWT.READ_ONLY);
  props.setLook(wQuSegment);
  wQuSegment.addModifyListener(lsMod);
  wQuSegment.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.Segment.Tooltip"));
  wGetSegments=new Button(gQuery,SWT.PUSH);
  wGetSegments.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.GetSegmentsButton.Label"));
  wGetSegments.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Query.GetSegmentsButton.Tooltip"));
  props.setLook(wGetSegments);
  wGetSegments.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      shell.getDisplay().asyncExec(new Runnable(){
        @Override public void run(){
          readGaSegments();
        }
      }
);
    }
  }
);
  wGetSegments.pack(true);
  FormData fdQuSegment=new FormData();
  fdQuSegment.left=new FormAttachment(middle,0);
  fdQuSegment.top=new FormAttachment(wQuCustomSegment,margin);
  fdQuSegment.right=new FormAttachment(100,-wGetSegments.getBounds().width - margin);
  wQuSegment.setLayoutData(fdQuSegment);
  FormData fdGetSegments=new FormData();
  fdGetSegments.left=new FormAttachment(wQuSegment,0);
  fdGetSegments.top=new FormAttachment(wQuCustomSegment,margin);
  fdGetSegments.right=new FormAttachment(100,0);
  wGetSegments.setLayoutData(fdGetSegments);
  FormData fdQueryGroup=new FormData();
  fdQueryGroup.left=new FormAttachment(0,0);
  fdQueryGroup.right=new FormAttachment(100,0);
  fdQueryGroup.top=new FormAttachment(gConnect,margin);
  gQuery.setLayoutData(fdQueryGroup);
  gQuery.setTabList(new Control[]{wQuStartDate,wQuEndDate,wQuDimensions,wQuMetrics,wQuFilters,wQuSort,wUseSegmentEnabled,wCustomSegmentEnabled,wQuCustomSegment,wQuSegment,wGetSegments});
  wlLimit=new Label(shell,SWT.RIGHT);
  wlLimit.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.LimitSize.Label"));
  props.setLook(wlLimit);
  FormData fdlLimit=new FormData();
  fdlLimit.left=new FormAttachment(0,0);
  fdlLimit.right=new FormAttachment(middle,-margin);
  fdlLimit.bottom=new FormAttachment(100,-50);
  wlLimit.setLayoutData(fdlLimit);
  wLimit=new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER);
  wLimit.setToolTipText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.LimitSize.Tooltip"));
  props.setLook(wLimit);
  wLimit.addModifyListener(lsMod);
  FormData fdLimit=new FormData();
  fdLimit.left=new FormAttachment(middle,0);
  fdLimit.right=new FormAttachment(100,0);
  fdLimit.bottom=new FormAttachment(100,-50);
  wLimit.setLayoutData(fdLimit);
  wlFields=new Link(shell,SWT.NONE);
  wlFields.setText(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.Return.Label"));
  props.setLook(wlFields);
  wlFields.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      BareBonesBrowserLaunch.openURL(REFERENCE_DIMENSION_AND_METRIC_URI);
    }
  }
);
  FormData fdlReturn=new FormData();
  fdlReturn.left=new FormAttachment(0,0);
  fdlReturn.top=new FormAttachment(gQuery,margin);
  wlFields.setLayoutData(fdlReturn);
  int fieldWidgetCols=5;
  int fieldWidgetRows=(input.getFeedField() != null ? input.getFeedField().length : 1);
  ColumnInfo[] ciKeys=new ColumnInfo[fieldWidgetCols];
  ciKeys[0]=new ColumnInfo(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.ColumnInfo.FeedFieldType"),ColumnInfo.COLUMN_TYPE_CCOMBO,new String[]{GaInputStepMeta.FIELD_TYPE_DIMENSION,GaInputStepMeta.FIELD_TYPE_METRIC,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_PROPERTY,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_FIELD},true);
  ciKeys[1]=new ColumnInfo(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.ColumnInfo.FeedField"),ColumnInfo.COLUMN_TYPE_TEXT,false,false);
  ciKeys[1].setUsingVariables(true);
  ciKeys[2]=new ColumnInfo(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.ColumnInfo.RenameTo"),ColumnInfo.COLUMN_TYPE_TEXT,false,false);
  ciKeys[3]=new ColumnInfo(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.ColumnInfo.Type"),ColumnInfo.COLUMN_TYPE_CCOMBO,ValueMeta.getTypes());
  ciKeys[4]=new ColumnInfo(BaseMessages.getString(PKG,"GoogleAnalyticsDialog.ColumnInfo.Format"),ColumnInfo.COLUMN_TYPE_FORMAT,4);
  wFields=new TableView(transMeta,shell,SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI| SWT.V_SCROLL| SWT.H_SCROLL,ciKeys,fieldWidgetRows,lsMod,props);
  FormData fdReturn=new FormData();
  fdReturn.left=new FormAttachment(0,0);
  fdReturn.top=new FormAttachment(wlFields,margin);
  fdReturn.right=new FormAttachment(100,0);
  fdReturn.bottom=new FormAttachment(wLimit,-margin);
  wFields.setLayoutData(fdReturn);
  wOK=new Button(shell,SWT.PUSH);
  wOK.setText(BaseMessages.getString(PKG,"System.Button.OK"));
  wCancel=new Button(shell,SWT.PUSH);
  wCancel.setText(BaseMessages.getString(PKG,"System.Button.Cancel"));
  wGet=new Button(shell,SWT.PUSH);
  wGet.setText(BaseMessages.getString(PKG,"System.Button.GetFields"));
  wGet.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event e){
      createServiceApi(input);
      Analytics.Data.Ga.Get query=getPreviewQuery();
      if (query == null) {
        return;
      }
      query.setMaxResults(1);
      try {
        GaData dataFeed=query.execute();
        if (dataFeed.getRows().size() < 1) {
          MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
          mb.setText("Query yields empty feed");
          mb.setMessage("The feed did not give any results. Please specify a query that returns data.");
          mb.open();
          return;
        }
        int i=0;
        List<GaData.ColumnHeaders> colHeaders=dataFeed.getColumnHeaders();
        wFields.table.setItemCount(colHeaders.size() + dataFeed.getProfileInfo().size());
        for (        GaData.ColumnHeaders colHeader : colHeaders) {
          String name=colHeader.getName();
          String dataType=colHeader.getDataType();
          String columnType=colHeader.getColumnType();
          TableItem item=wFields.table.getItem(i);
          if (columnType.equals("DIMENSION")) {
            item.setText(1,GaInputStepMeta.FIELD_TYPE_DIMENSION);
            item.setText(2,name);
            item.setText(3,name);
            if (name.equalsIgnoreCase("ga:date")) {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_DATE));
              item.setText(5,"yyyyMMdd");
            }
 else             if (name.equalsIgnoreCase("ga:daysSinceLastVisit") || name.equalsIgnoreCase("ga:visitLength") || name.equalsIgnoreCase("ga:visitCount")) {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_INTEGER));
              item.setText(5,"#;-#");
            }
 else             if (name.equalsIgnoreCase("ga:latitude") || name.equalsIgnoreCase("ga:longitude")) {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_NUMBER));
              item.setText(5,"#.#;-#.#");
            }
 else {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_STRING));
              item.setText(5,"");
            }
            i++;
          }
 else           if (columnType.equals("METRIC")) {
            item.setText(1,GaInputStepMeta.FIELD_TYPE_METRIC);
            item.setText(2,name);
            item.setText(3,name);
            if (dataType.compareToIgnoreCase("currency") == 0 || dataType.compareToIgnoreCase("float") == 0 || dataType.compareToIgnoreCase("percent") == 0 || dataType.compareToIgnoreCase("us_currency") == 0) {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_NUMBER));
              item.setText(5,"#.#;-#.#");
            }
 else             if (dataType.compareToIgnoreCase("time") == 0 || dataType.compareToIgnoreCase("integer") == 0) {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_INTEGER));
              item.setText(5,"#;-#");
            }
 else {
              item.setText(4,ValueMetaBase.getTypeDesc(ValueMeta.TYPE_STRING));
              item.setText(5,"");
            }
            i++;
          }
        }
        TableItem item=wFields.table.getItem(i);
        item.setText(1,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_PROPERTY);
        item.setText(2,GaInputStepMeta.PROPERTY_DATA_SOURCE_PROFILE_ID);
        item.setText(3,GaInputStepMeta.PROPERTY_DATA_SOURCE_PROFILE_ID);
        item.setText(4,ValueMeta.getTypeDesc(ValueMeta.TYPE_STRING));
        item.setText(5,"");
        i++;
        item=wFields.table.getItem(i);
        item.setText(1,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_PROPERTY);
        item.setText(2,GaInputStepMeta.PROPERTY_DATA_SOURCE_WEBPROP_ID);
        item.setText(3,GaInputStepMeta.PROPERTY_DATA_SOURCE_WEBPROP_ID);
        item.setText(4,ValueMeta.getTypeDesc(ValueMeta.TYPE_STRING));
        item.setText(5,"");
        i++;
        item=wFields.table.getItem(i);
        item.setText(1,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_PROPERTY);
        item.setText(2,GaInputStepMeta.PROPERTY_DATA_SOURCE_ACCOUNT_NAME);
        item.setText(3,GaInputStepMeta.PROPERTY_DATA_SOURCE_ACCOUNT_NAME);
        item.setText(4,ValueMeta.getTypeDesc(ValueMeta.TYPE_STRING));
        item.setText(5,"");
        i++;
        item=wFields.table.getItem(i);
        item.setText(1,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_FIELD);
        item.setText(2,GaInputStepMeta.FIELD_DATA_SOURCE_TABLE_ID);
        item.setText(3,GaInputStepMeta.FIELD_DATA_SOURCE_TABLE_ID);
        item.setText(4,ValueMeta.getTypeDesc(ValueMeta.TYPE_STRING));
        item.setText(5,"");
        i++;
        item=wFields.table.getItem(i);
        item.setText(1,GaInputStepMeta.FIELD_TYPE_DATA_SOURCE_FIELD);
        item.setText(2,GaInputStepMeta.FIELD_DATA_SOURCE_TABLE_NAME);
        item.setText(3,GaInputStepMeta.FIELD_DATA_SOURCE_TABLE_NAME);
        item.setText(4,ValueMeta.getTypeDesc(ValueMeta.TYPE_STRING));
        item.setText(5,"");
        i++;
        wFields.removeEmptyRows();
        wFields.setRowNums();
        wFields.optWidth(true);
        input.setChanged();
      }
 catch (      IOException e2) {
        MessageBox mb=new MessageBox(shell,SWT.OK | SWT.ICON_ERROR);
        mb.setText("IO Error");
        mb.setMessage("Could not contact Google Analytics service. " + "Please make sure that there's no network connectivity problem.");
        mb.open();
        e2.printStackTrace();
        return;
      }
    }
  }
);
  wPreview=new Button(shell,SWT.PUSH);
  wPreview.setText(BaseMessages.getString(PKG,"System.Button.Preview"));
  wPreview.addListener(SWT.Selection,new Listener(){
    @Override public void handleEvent(    Event ev){
      preview();
    }
  }
);
  BaseStepDialog.positionBottomButtons(shell,new Button[]{wOK,wGet,wPreview,wCancel},margin,wLimit);
  lsCancel=new Listener(){
    public void handleEvent(    Event e){
      cancel();
    }
  }
;
  lsOK=new Listener(){
    public void handleEvent(    Event e){
      ok();
    }
  }
;
  wCancel.addListener(SWT.Selection,lsCancel);
  wOK.addListener(SWT.Selection,lsOK);
  lsDef=new SelectionAdapter(){
    public void widgetDefaultSelected(    SelectionEvent e){
      ok();
    }
  }
;
  wStepname.addSelectionListener(lsDef);
  wGaCustomProfile.addSelectionListener(lsDef);
  wQuStartDate.addSelectionListener(lsDef);
  wQuEndDate.addSelectionListener(lsDef);
  wQuDimensions.addSelectionListener(lsDef);
  wQuMetrics.addSelectionListener(lsDef);
  wQuFilters.addSelectionListener(lsDef);
  wQuSort.addSelectionListener(lsDef);
  wQuCustomSegment.addSelectionListener(lsDef);
  shell.addShellListener(new ShellAdapter(){
    public void shellClosed(    ShellEvent e){
      cancel();
    }
  }
);
  fileChooser.addSelectionListener(new SelectionAdapter(){
    public void widgetSelected(    SelectionEvent e){
      FileDialog dialog=new FileDialog(shell,SWT.OPEN);
      if (keyFilename.getText() != null) {
        String existingPath=transMeta.environmentSubstitute(keyFilename.getText());
        dialog.setFileName(existingPath);
      }
      dialog.setFilterExtensions(new String[]{"*.p12","*"});
      dialog.setFilterNames(new String[]{BaseMessages.getString(PKG,"GoogleAnalyticsDialog.SecretFileChooser.p12"),BaseMessages.getString(PKG,"GoogleAnalyticsDialog.SecretFileChooser.All")});
      if (dialog.open() != null) {
        String keyPath=dialog.getFilterPath() + System.getProperty("file.separator") + dialog.getFileName();
        keyFilename.setText(keyPath);
      }
    }
  }
);
  setSize();
  getData();
  input.setChanged(backupChanged);
  wStepname.setFocus();
  shell.setTabList(new Control[]{wStepname,gConnect,gQuery,wFields});
  shell.open();
  while (!shell.isDisposed()) {
    if (!display.readAndDispatch()) {
      display.sleep();
    }
  }
  return stepname;
}
