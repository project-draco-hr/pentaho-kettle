{
  try {
    String method=rep.getStepAttributeString(id_step,"specification_method");
    specificationMethod=ObjectLocationSpecificationMethod.getSpecificationMethodByCode(method);
    String transId=rep.getStepAttributeString(id_step,"trans_object_id");
    transObjectId=Const.isEmpty(transId) ? null : new StringObjectId(transId);
    transName=rep.getStepAttributeString(id_step,"trans_name");
    fileName=rep.getStepAttributeString(id_step,"filename");
    directoryPath=rep.getStepAttributeString(id_step,"directory_path");
    sourceStepName=rep.getStepAttributeString(id_step,"source_step");
    int nrMappings=rep.countNrStepAttributes(id_step,"mapping_target_step_name");
    for (int i=0; i < nrMappings; i++) {
      String targetStepname=rep.getStepAttributeString(id_step,i,"mapping_target_step_name");
      String targetAttributeKey=rep.getStepAttributeString(id_step,i,"mapping_target_attribute_key");
      boolean targetDetail=rep.getStepAttributeBoolean(id_step,i,"mapping_target_detail");
      String sourceStepname=rep.getStepAttributeString(id_step,i,"mapping_source_step");
      String sourceField=rep.getStepAttributeString(id_step,i,"mapping_source_field");
      TargetStepAttribute target=new TargetStepAttribute(targetStepname,targetAttributeKey,targetDetail);
      SourceStepField source=new SourceStepField(sourceStepname,sourceField);
      targetSourceMapping.put(target,source);
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unexpected error reading step information from the repository",e);
  }
}
