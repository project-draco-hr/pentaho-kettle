{
  try {
    rep.saveStepAttribute(id_transformation,id_step,"specification_method",specificationMethod == null ? null : specificationMethod.getCode());
    rep.saveStepAttribute(id_transformation,id_step,"trans_object_id",transObjectId == null ? null : transObjectId.toString());
    rep.saveStepAttribute(id_transformation,id_step,"filename",fileName);
    rep.saveStepAttribute(id_transformation,id_step,"trans_name",transName);
    rep.saveStepAttribute(id_transformation,id_step,"directory_path",directoryPath);
    rep.saveStepAttribute(id_transformation,id_step,"source_step",sourceStepName);
    rep.saveStepAttribute(id_transformation,id_step,"target_file",targetFile);
    rep.saveStepAttribute(id_transformation,id_step,"no_execution",noExecution);
    List<TargetStepAttribute> keySet=new ArrayList<TargetStepAttribute>(targetSourceMapping.keySet());
    for (int i=0; i < keySet.size(); i++) {
      TargetStepAttribute target=keySet.get(i);
      SourceStepField source=targetSourceMapping.get(target);
      rep.saveStepAttribute(id_transformation,id_step,i,"mapping_target_step_name",target.getStepname());
      rep.saveStepAttribute(id_transformation,id_step,i,"mapping_target_attribute_key",target.getAttributeKey());
      rep.saveStepAttribute(id_transformation,id_step,i,"mapping_target_detail",target.isDetail());
      rep.saveStepAttribute(id_transformation,id_step,i,"mapping_source_step",source.getStepname());
      rep.saveStepAttribute(id_transformation,id_step,i,"mapping_source_field",source.getField());
    }
  }
 catch (  Exception e) {
    throw new KettleException("Unable to save step information to the repository for id_step=" + id_step,e);
  }
}
